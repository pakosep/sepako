ARM GAS  /tmp/ccl1vCsd.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   3              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   4              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   5              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   6              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   7              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
   8              		.eabi_attribute 30, 2	@ Tag_ABI_optimization_goals
   9              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  10              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  11              		.file	"sp_term.c"
  12              	@ GNU C99 (15:7-2018-q2-6) version 7.3.1 20180622 (release) [ARM/embedded-7-branch revision 261907]
  13              	@	compiled by GNU C version 8.2.0, GMP version 6.1.2, MPFR version 4.0.2, MPC version 1.1.0, isl ve
  14              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  15              	@ options passed:  -I . -imultilib thumb/v7-m -MD out/sp_term.d
  16              	@ -MF out/sp_term.d -MP -MQ out/sp_term.o -D__USES_INITFINI__ -D RAMCODE
  17              	@ -D STM32F10X_HD inc/tool/sp_term.c -mcpu=cortex-m3 -mthumb
  18              	@ -auxbase-strip out/sp_term.o -O2 -Wall -Wstrict-prototypes -Wextra
  19              	@ -Wno-uninitialized -Wno-unused-but-set-variable -Wno-unused-parameter
  20              	@ -Wno-unused-variable -std=gnu99 -ffunction-sections -fdata-sections
  21              	@ -fverbose-asm
  22              	@ options enabled:  -faggressive-loop-optimizations -falign-jumps
  23              	@ -falign-labels -falign-loops -fauto-inc-dec -fbranch-count-reg
  24              	@ -fcaller-saves -fchkp-check-incomplete-type -fchkp-check-read
  25              	@ -fchkp-check-write -fchkp-instrument-calls -fchkp-narrow-bounds
  26              	@ -fchkp-optimize -fchkp-store-bounds -fchkp-use-static-bounds
  27              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcode-hoisting
  28              	@ -fcombine-stack-adjustments -fcommon -fcompare-elim -fcprop-registers
  29              	@ -fcrossjumping -fcse-follow-jumps -fdata-sections -fdefer-pop
  30              	@ -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
  31              	@ -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-types
  32              	@ -fexpensive-optimizations -fforward-propagate -ffp-int-builtin-inexact
  33              	@ -ffunction-cse -ffunction-sections -fgcse -fgcse-lm -fgnu-runtime
  34              	@ -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  35              	@ -fif-conversion -fif-conversion2 -findirect-inlining -finline
  36              	@ -finline-atomics -finline-functions-called-once -finline-small-functions
  37              	@ -fipa-bit-cp -fipa-cp -fipa-icf -fipa-icf-functions -fipa-icf-variables
  38              	@ -fipa-profile -fipa-pure-const -fipa-ra -fipa-reference -fipa-sra
  39              	@ -fipa-vrp -fira-hoist-pressure -fira-share-save-slots
  40              	@ -fira-share-spill-slots -fisolate-erroneous-paths-dereference -fivopts
  41              	@ -fkeep-static-consts -fleading-underscore -flifetime-dse -flra-remat
  42              	@ -flto-odr-type-merging -fmath-errno -fmerge-constants
  43              	@ -fmerge-debug-strings -fmove-loop-invariants -fomit-frame-pointer
  44              	@ -foptimize-sibling-calls -foptimize-strlen -fpartial-inlining -fpeephole
  45              	@ -fpeephole2 -fplt -fprefetch-loop-arrays -freg-struct-return
  46              	@ -freorder-blocks -freorder-functions -frerun-cse-after-loop
  47              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  48              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  49              	@ -fsched-pressure -fsched-rank-heuristic -fsched-spec
  50              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-insns
  51              	@ -fschedule-insns2 -fsection-anchors -fsemantic-interposition
  52              	@ -fshow-column -fshrink-wrap -fshrink-wrap-separate -fsigned-zeros
  53              	@ -fsplit-ivs-in-unroller -fsplit-wide-types -fssa-backprop -fssa-phiopt
  54              	@ -fstdarg-opt -fstore-merging -fstrict-aliasing -fstrict-overflow
  55              	@ -fstrict-volatile-bitfields -fsync-libcalls -fthread-jumps
  56              	@ -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce
  57              	@ -ftree-ccp -ftree-ch -ftree-coalesce-vars -ftree-copy-prop -ftree-cselim
ARM GAS  /tmp/ccl1vCsd.s 			page 2


  58              	@ -ftree-dce -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
  59              	@ -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  60              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pre
  61              	@ -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slsr
  62              	@ -ftree-sra -ftree-switch-conversion -ftree-tail-merge -ftree-ter
  63              	@ -ftree-vrp -funit-at-a-time -fverbose-asm -fzero-initialized-in-bss
  64              	@ -masm-syntax-unified -mfix-cortex-m3-ldrd -mlittle-endian
  65              	@ -mpic-data-is-text-relative -msched-prolog -mthumb -munaligned-access
  66              	@ -mvectorize-with-neon-quad
  67              	
  68              		.text
  69              		.section	.text.tr_cursor_hide,"ax",%progbits
  70              		.align	1
  71              		.p2align 2,,3
  72              		.global	tr_cursor_hide
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  76              		.fpu softvfp
  77              		.type	tr_cursor_hide, %function
  78              	tr_cursor_hide:
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82              	@ inc/tool/sp_term.c:25: 		if(hide) UaPutK( UCUR_HIDE );
  83 0000 10B9     		cbnz	r0, .L4	@ hide,
  84              	@ inc/tool/sp_term.c:26: 		else UaPutK( UCUR_SHOW );
  85 0002 0348     		ldr	r0, .L5	@,
  86 0004 FFF7FEBF 		b	UaPutK	@
  87              	.L4:
  88              	@ inc/tool/sp_term.c:25: 		if(hide) UaPutK( UCUR_HIDE );
  89 0008 0248     		ldr	r0, .L5+4	@,
  90 000a FFF7FEBF 		b	UaPutK	@
  91              	.L6:
  92 000e 00BF     		.align	2
  93              	.L5:
  94 0010 00000000 		.word	.LANCHOR1
  95 0014 00000000 		.word	.LANCHOR0
  96              		.size	tr_cursor_hide, .-tr_cursor_hide
  97              		.section	.text.tr_cls,"ax",%progbits
  98              		.align	1
  99              		.p2align 2,,3
 100              		.global	tr_cls
 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 104              		.fpu softvfp
 105              		.type	tr_cls, %function
 106              	tr_cls:
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109 0000 08B5     		push	{r3, lr}	@
 110              	@ inc/tool/sp_term.c:33: 		UaPutK( UCLS );
 111 0002 0448     		ldr	r0, .L9	@,
 112 0004 FFF7FEFF 		bl	UaPutK	@
 113              	@ inc/tool/sp_term.c:36: 	}
 114 0008 BDE80840 		pop	{r3, lr}	@
ARM GAS  /tmp/ccl1vCsd.s 			page 3


 115              	@ inc/tool/sp_term.c:34: 		UaPutK( UHOME );
 116 000c 0248     		ldr	r0, .L9+4	@,
 117 000e FFF7FEBF 		b	UaPutK	@
 118              	.L10:
 119 0012 00BF     		.align	2
 120              	.L9:
 121 0014 00000000 		.word	.LANCHOR2
 122 0018 00000000 		.word	.LANCHOR3
 123              		.size	tr_cls, .-tr_cls
 124              		.section	.text.fill_line,"ax",%progbits
 125              		.align	1
 126              		.p2align 2,,3
 127              		.global	fill_line
 128              		.syntax unified
 129              		.thumb
 130              		.thumb_func
 131              		.fpu softvfp
 132              		.type	fill_line, %function
 133              	fill_line:
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              	@ inc/tool/sp_term.c:39: 		for(uint8_t i=0; i<cnt; i++) UaPutC( ascii );
 137 0000 59B1     		cbz	r1, .L19	@ cnt,
 138              	@ inc/tool/sp_term.c:38: void fill_line( char ascii, uint8_t cnt ) {
 139 0002 70B5     		push	{r4, r5, r6, lr}	@
 140 0004 0D46     		mov	r5, r1	@ cnt, cnt
 141 0006 0646     		mov	r6, r0	@ ascii, ascii
 142              	@ inc/tool/sp_term.c:39: 		for(uint8_t i=0; i<cnt; i++) UaPutC( ascii );
 143 0008 0024     		movs	r4, #0	@ i,
 144              	.L13:
 145              	@ inc/tool/sp_term.c:39: 		for(uint8_t i=0; i<cnt; i++) UaPutC( ascii );
 146 000a 0134     		adds	r4, r4, #1	@ tmp113, i,
 147 000c 3046     		mov	r0, r6	@, ascii
 148 000e E4B2     		uxtb	r4, r4	@ i, tmp113
 149 0010 FFF7FEFF 		bl	UaPutC	@
 150 0014 A542     		cmp	r5, r4	@ cnt, i
 151 0016 F8D1     		bne	.L13	@,
 152              	@ inc/tool/sp_term.c:40: 	}
 153 0018 70BD     		pop	{r4, r5, r6, pc}	@
 154              	.L19:
 155 001a 7047     		bx	lr	@
 156              		.size	fill_line, .-fill_line
 157              		.section	.text.tr_attr,"ax",%progbits
 158              		.align	1
 159              		.p2align 2,,3
 160              		.global	tr_attr
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 164              		.fpu softvfp
 165              		.type	tr_attr, %function
 166              	tr_attr:
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169 0000 70B5     		push	{r4, r5, r6, lr}	@
 170              	@ inc/tool/sp_term.c:42: void tr_attr( uint8_t atr, uint8_t fg, uint8_t bg ) {
 171 0002 0646     		mov	r6, r0	@ atr, atr
ARM GAS  /tmp/ccl1vCsd.s 			page 4


 172 0004 0D46     		mov	r5, r1	@ fg, fg
 173 0006 1446     		mov	r4, r2	@ bg, bg
 174              	@ inc/tool/sp_term.c:43: 		UaPutC( 0x1b );		// <ESC>[0;32;44m
 175 0008 1B20     		movs	r0, #27	@,
 176 000a FFF7FEFF 		bl	UaPutC	@
 177              	@ inc/tool/sp_term.c:44: 		UaPutC( '[' );
 178 000e 5B20     		movs	r0, #91	@,
 179 0010 FFF7FEFF 		bl	UaPutC	@
 180              	@ inc/tool/sp_term.c:45: 		UaPutC( atr+'0' );
 181 0014 06F13000 		add	r0, r6, #48	@ tmp116, atr,
 182 0018 C0B2     		uxtb	r0, r0	@, tmp116
 183 001a FFF7FEFF 		bl	UaPutC	@
 184              	@ inc/tool/sp_term.c:46: 		UaPutC( ';' );
 185 001e 3B20     		movs	r0, #59	@,
 186 0020 FFF7FEFF 		bl	UaPutC	@
 187              	@ inc/tool/sp_term.c:47: 		UaPutC( '3' );
 188 0024 3320     		movs	r0, #51	@,
 189 0026 FFF7FEFF 		bl	UaPutC	@
 190              	@ inc/tool/sp_term.c:48: 		UaPutC( fg+'0' );
 191 002a 05F13000 		add	r0, r5, #48	@ tmp118, fg,
 192 002e C0B2     		uxtb	r0, r0	@, tmp118
 193 0030 FFF7FEFF 		bl	UaPutC	@
 194              	@ inc/tool/sp_term.c:49: 		UaPutC( ';' );
 195 0034 3B20     		movs	r0, #59	@,
 196 0036 FFF7FEFF 		bl	UaPutC	@
 197              	@ inc/tool/sp_term.c:50: 		UaPutC( '4' );
 198 003a 3420     		movs	r0, #52	@,
 199 003c FFF7FEFF 		bl	UaPutC	@
 200              	@ inc/tool/sp_term.c:51: 		UaPutC( bg+'0' );
 201 0040 04F13000 		add	r0, r4, #48	@ tmp120, bg,
 202 0044 C0B2     		uxtb	r0, r0	@, tmp120
 203 0046 FFF7FEFF 		bl	UaPutC	@
 204              	@ inc/tool/sp_term.c:53: 	}
 205 004a BDE87040 		pop	{r4, r5, r6, lr}	@
 206              	@ inc/tool/sp_term.c:52: 		UaPutC( 'm' );
 207 004e 6D20     		movs	r0, #109	@,
 208 0050 FFF7FEBF 		b	UaPutC	@
 209              		.size	tr_attr, .-tr_attr
 210              		.section	.text.tr_pen_color,"ax",%progbits
 211              		.align	1
 212              		.p2align 2,,3
 213              		.global	tr_pen_color
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 217              		.fpu softvfp
 218              		.type	tr_pen_color, %function
 219              	tr_pen_color:
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222 0000 10B5     		push	{r4, lr}	@
 223              	@ inc/tool/sp_term.c:55: void tr_pen_color( uint8_t cl ) {
 224 0002 0446     		mov	r4, r0	@ cl, cl
 225              	@ inc/tool/sp_term.c:56: 		UaPutC( 0x1b );		// <ESC>[34m
 226 0004 1B20     		movs	r0, #27	@,
 227 0006 FFF7FEFF 		bl	UaPutC	@
 228              	@ inc/tool/sp_term.c:57: 		UaPutC( '[' );
ARM GAS  /tmp/ccl1vCsd.s 			page 5


 229 000a 5B20     		movs	r0, #91	@,
 230 000c FFF7FEFF 		bl	UaPutC	@
 231              	@ inc/tool/sp_term.c:58: 		UaPutC( '3' );
 232 0010 3320     		movs	r0, #51	@,
 233 0012 FFF7FEFF 		bl	UaPutC	@
 234              	@ inc/tool/sp_term.c:59: 		UaPutC( cl+'0' );
 235 0016 04F13000 		add	r0, r4, #48	@ tmp112, cl,
 236 001a C0B2     		uxtb	r0, r0	@, tmp112
 237 001c FFF7FEFF 		bl	UaPutC	@
 238              	@ inc/tool/sp_term.c:61: 	}
 239 0020 BDE81040 		pop	{r4, lr}	@
 240              	@ inc/tool/sp_term.c:60: 		UaPutC( 'm' );
 241 0024 6D20     		movs	r0, #109	@,
 242 0026 FFF7FEBF 		b	UaPutC	@
 243              		.size	tr_pen_color, .-tr_pen_color
 244 002a 00BF     		.section	.text.tr_brush_color,"ax",%progbits
 245              		.align	1
 246              		.p2align 2,,3
 247              		.global	tr_brush_color
 248              		.syntax unified
 249              		.thumb
 250              		.thumb_func
 251              		.fpu softvfp
 252              		.type	tr_brush_color, %function
 253              	tr_brush_color:
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256 0000 10B5     		push	{r4, lr}	@
 257              	@ inc/tool/sp_term.c:63: void tr_brush_color( uint8_t cl ) {
 258 0002 0446     		mov	r4, r0	@ cl, cl
 259              	@ inc/tool/sp_term.c:64: 		UaPutC( 0x1b );		// <ESC>[44m
 260 0004 1B20     		movs	r0, #27	@,
 261 0006 FFF7FEFF 		bl	UaPutC	@
 262              	@ inc/tool/sp_term.c:65: 		UaPutC( '[' );
 263 000a 5B20     		movs	r0, #91	@,
 264 000c FFF7FEFF 		bl	UaPutC	@
 265              	@ inc/tool/sp_term.c:66: 		UaPutC( '4' );
 266 0010 3420     		movs	r0, #52	@,
 267 0012 FFF7FEFF 		bl	UaPutC	@
 268              	@ inc/tool/sp_term.c:67: 		UaPutC( cl+'0' );
 269 0016 04F13000 		add	r0, r4, #48	@ tmp112, cl,
 270 001a C0B2     		uxtb	r0, r0	@, tmp112
 271 001c FFF7FEFF 		bl	UaPutC	@
 272              	@ inc/tool/sp_term.c:69: 	}
 273 0020 BDE81040 		pop	{r4, lr}	@
 274              	@ inc/tool/sp_term.c:68: 		UaPutC( 'm' );
 275 0024 6D20     		movs	r0, #109	@,
 276 0026 FFF7FEBF 		b	UaPutC	@
 277              		.size	tr_brush_color, .-tr_brush_color
 278 002a 00BF     		.section	.text.tr_locate,"ax",%progbits
 279              		.align	1
 280              		.p2align 2,,3
 281              		.global	tr_locate
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 285              		.fpu softvfp
ARM GAS  /tmp/ccl1vCsd.s 			page 6


 286              		.type	tr_locate, %function
 287              	tr_locate:
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290 0000 38B5     		push	{r3, r4, r5, lr}	@
 291              	@ inc/tool/sp_term.c:71: void tr_locate( uint8_t y, uint8_t x ) {
 292 0002 0546     		mov	r5, r0	@ y, y
 293 0004 0C46     		mov	r4, r1	@ x, x
 294              	@ inc/tool/sp_term.c:76: 		UaPutS("\x1b[");
 295 0006 0848     		ldr	r0, .L30	@,
 296 0008 FFF7FEFF 		bl	UaPutS	@
 297              	@ inc/tool/sp_term.c:77: 		uint2uart(y);
 298 000c 2846     		mov	r0, r5	@, y
 299 000e FFF7FEFF 		bl	uint2uart	@
 300              	@ inc/tool/sp_term.c:79: 		UaPutC(';');
 301 0012 3B20     		movs	r0, #59	@,
 302 0014 FFF7FEFF 		bl	UaPutC	@
 303              	@ inc/tool/sp_term.c:81: 		uint2uart(x);
 304 0018 2046     		mov	r0, r4	@, x
 305 001a FFF7FEFF 		bl	uint2uart	@
 306              	@ inc/tool/sp_term.c:85: 	}
 307 001e BDE83840 		pop	{r3, r4, r5, lr}	@
 308              	@ inc/tool/sp_term.c:82: 		UaPutC('H');
 309 0022 4820     		movs	r0, #72	@,
 310 0024 FFF7FEBF 		b	UaPutC	@
 311              	.L31:
 312              		.align	2
 313              	.L30:
 314 0028 00000000 		.word	.LC0
 315              		.size	tr_locate, .-tr_locate
 316              		.section	.text.tr_erasescr,"ax",%progbits
 317              		.align	1
 318              		.p2align 2,,3
 319              		.global	tr_erasescr
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 323              		.fpu softvfp
 324              		.type	tr_erasescr, %function
 325              	tr_erasescr:
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328 0000 08B5     		push	{r3, lr}	@
 329              	@ inc/tool/sp_term.c:88: 		UaPutC( 0x1b );		// <ESC>[2J
 330 0002 1B20     		movs	r0, #27	@,
 331 0004 FFF7FEFF 		bl	UaPutC	@
 332              	@ inc/tool/sp_term.c:89: 		UaPutC( '[' );
 333 0008 5B20     		movs	r0, #91	@,
 334 000a FFF7FEFF 		bl	UaPutC	@
 335              	@ inc/tool/sp_term.c:90: 		UaPutC( '1' );
 336 000e 3120     		movs	r0, #49	@,
 337 0010 FFF7FEFF 		bl	UaPutC	@
 338              	@ inc/tool/sp_term.c:92: 	}
 339 0014 BDE80840 		pop	{r3, lr}	@
 340              	@ inc/tool/sp_term.c:91: 		UaPutC( 'J' );
 341 0018 4A20     		movs	r0, #74	@,
 342 001a FFF7FEBF 		b	UaPutC	@
ARM GAS  /tmp/ccl1vCsd.s 			page 7


 343              		.size	tr_erasescr, .-tr_erasescr
 344 001e 00BF     		.section	.text.tr_cur_back,"ax",%progbits
 345              		.align	1
 346              		.p2align 2,,3
 347              		.global	tr_cur_back
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 351              		.fpu softvfp
 352              		.type	tr_cur_back, %function
 353              	tr_cur_back:
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356 0000 10B5     		push	{r4, lr}	@
 357              	@ inc/tool/sp_term.c:94: void tr_cur_back( uint8_t c ) {
 358 0002 0446     		mov	r4, r0	@ c, c
 359              	@ inc/tool/sp_term.c:95: 		UaPutC( 0x1b );	// <ESC>[{ROW};{COLUMN}f
 360 0004 1B20     		movs	r0, #27	@,
 361 0006 FFF7FEFF 		bl	UaPutC	@
 362              	@ inc/tool/sp_term.c:96: 		UaPutC('['  );
 363 000a 5B20     		movs	r0, #91	@,
 364 000c FFF7FEFF 		bl	UaPutC	@
 365              	@ inc/tool/sp_term.c:97: 		UaPutC(c+'0');
 366 0010 04F13000 		add	r0, r4, #48	@ tmp112, c,
 367 0014 C0B2     		uxtb	r0, r0	@, tmp112
 368 0016 FFF7FEFF 		bl	UaPutC	@
 369              	@ inc/tool/sp_term.c:99: 	}
 370 001a BDE81040 		pop	{r4, lr}	@
 371              	@ inc/tool/sp_term.c:98: 		UaPutC('D'  );
 372 001e 4420     		movs	r0, #68	@,
 373 0020 FFF7FEBF 		b	UaPutC	@
 374              		.size	tr_cur_back, .-tr_cur_back
 375              		.section	.text.tr_cur_forward,"ax",%progbits
 376              		.align	1
 377              		.p2align 2,,3
 378              		.global	tr_cur_forward
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 382              		.fpu softvfp
 383              		.type	tr_cur_forward, %function
 384              	tr_cur_forward:
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387 0000 10B5     		push	{r4, lr}	@
 388              	@ inc/tool/sp_term.c:101: void tr_cur_forward( uint8_t c ) {
 389 0002 0446     		mov	r4, r0	@ c, c
 390              	@ inc/tool/sp_term.c:102: 		UaPutC( 0x1b );	// <ESC>[{ROW};{COLUMN}f
 391 0004 1B20     		movs	r0, #27	@,
 392 0006 FFF7FEFF 		bl	UaPutC	@
 393              	@ inc/tool/sp_term.c:103: 		UaPutC('['  );
 394 000a 5B20     		movs	r0, #91	@,
 395 000c FFF7FEFF 		bl	UaPutC	@
 396              	@ inc/tool/sp_term.c:104: 		UaPutC(c+'0');
 397 0010 04F13000 		add	r0, r4, #48	@ tmp112, c,
 398 0014 C0B2     		uxtb	r0, r0	@, tmp112
 399 0016 FFF7FEFF 		bl	UaPutC	@
ARM GAS  /tmp/ccl1vCsd.s 			page 8


 400              	@ inc/tool/sp_term.c:106: 	}
 401 001a BDE81040 		pop	{r4, lr}	@
 402              	@ inc/tool/sp_term.c:105: 		UaPutC('C'  );
 403 001e 4320     		movs	r0, #67	@,
 404 0020 FFF7FEBF 		b	UaPutC	@
 405              		.size	tr_cur_forward, .-tr_cur_forward
 406              		.global	U_ATTR_OFF
 407              		.global	UCUR_SHOW
 408              		.global	UCUR_HIDE
 409              		.global	UHOME
 410              		.global	UCLS
 411              		.comm	PutChar,4,4
 412              		.comm	ptm,36,4
 413              		.section	.rodata.UCLS,"a",%progbits
 414              		.align	2
 415              		.set	.LANCHOR2,. + 0
 416              		.type	UCLS, %object
 417              		.size	UCLS, 5
 418              	UCLS:
 419 0000 1B5B324A 		.ascii	"\033[2J\000"
 419      00
 420              		.section	.rodata.UCUR_HIDE,"a",%progbits
 421              		.align	2
 422              		.set	.LANCHOR0,. + 0
 423              		.type	UCUR_HIDE, %object
 424              		.size	UCUR_HIDE, 7
 425              	UCUR_HIDE:
 426 0000 1B5B3F32 		.ascii	"\033[?25l\000"
 426      356C00
 427              		.section	.rodata.UCUR_SHOW,"a",%progbits
 428              		.align	2
 429              		.set	.LANCHOR1,. + 0
 430              		.type	UCUR_SHOW, %object
 431              		.size	UCUR_SHOW, 7
 432              	UCUR_SHOW:
 433 0000 1B5B3F32 		.ascii	"\033[?25h\000"
 433      356800
 434              		.section	.rodata.UHOME,"a",%progbits
 435              		.align	2
 436              		.set	.LANCHOR3,. + 0
 437              		.type	UHOME, %object
 438              		.size	UHOME, 5
 439              	UHOME:
 440 0000 1B5B3B48 		.ascii	"\033[;H\000"
 440      00
 441              		.section	.rodata.U_ATTR_OFF,"a",%progbits
 442              		.align	2
 443              		.type	U_ATTR_OFF, %object
 444              		.size	U_ATTR_OFF, 4
 445              	U_ATTR_OFF:
 446 0000 1B5B6D00 		.ascii	"\033[m\000"
 447              		.section	.rodata.tr_locate.str1.4,"aMS",%progbits,1
 448              		.align	2
 449              	.LC0:
 450 0000 1B5B00   		.ascii	"\033[\000"
 451              		.ident	"GCC: (15:7-2018-q2-6) 7.3.1 20180622 (release) [ARM/embedded-7-branch revision 261907]"
ARM GAS  /tmp/ccl1vCsd.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 sp_term.c
     /tmp/ccl1vCsd.s:70     .text.tr_cursor_hide:00000000 $t
     /tmp/ccl1vCsd.s:78     .text.tr_cursor_hide:00000000 tr_cursor_hide
     /tmp/ccl1vCsd.s:94     .text.tr_cursor_hide:00000010 $d
     /tmp/ccl1vCsd.s:98     .text.tr_cls:00000000 $t
     /tmp/ccl1vCsd.s:106    .text.tr_cls:00000000 tr_cls
     /tmp/ccl1vCsd.s:121    .text.tr_cls:00000014 $d
     /tmp/ccl1vCsd.s:125    .text.fill_line:00000000 $t
     /tmp/ccl1vCsd.s:133    .text.fill_line:00000000 fill_line
     /tmp/ccl1vCsd.s:158    .text.tr_attr:00000000 $t
     /tmp/ccl1vCsd.s:166    .text.tr_attr:00000000 tr_attr
     /tmp/ccl1vCsd.s:211    .text.tr_pen_color:00000000 $t
     /tmp/ccl1vCsd.s:219    .text.tr_pen_color:00000000 tr_pen_color
     /tmp/ccl1vCsd.s:245    .text.tr_brush_color:00000000 $t
     /tmp/ccl1vCsd.s:253    .text.tr_brush_color:00000000 tr_brush_color
     /tmp/ccl1vCsd.s:279    .text.tr_locate:00000000 $t
     /tmp/ccl1vCsd.s:287    .text.tr_locate:00000000 tr_locate
     /tmp/ccl1vCsd.s:314    .text.tr_locate:00000028 $d
     /tmp/ccl1vCsd.s:317    .text.tr_erasescr:00000000 $t
     /tmp/ccl1vCsd.s:325    .text.tr_erasescr:00000000 tr_erasescr
     /tmp/ccl1vCsd.s:345    .text.tr_cur_back:00000000 $t
     /tmp/ccl1vCsd.s:353    .text.tr_cur_back:00000000 tr_cur_back
     /tmp/ccl1vCsd.s:376    .text.tr_cur_forward:00000000 $t
     /tmp/ccl1vCsd.s:384    .text.tr_cur_forward:00000000 tr_cur_forward
     /tmp/ccl1vCsd.s:445    .rodata.U_ATTR_OFF:00000000 U_ATTR_OFF
     /tmp/ccl1vCsd.s:432    .rodata.UCUR_SHOW:00000000 UCUR_SHOW
     /tmp/ccl1vCsd.s:425    .rodata.UCUR_HIDE:00000000 UCUR_HIDE
     /tmp/ccl1vCsd.s:439    .rodata.UHOME:00000000 UHOME
     /tmp/ccl1vCsd.s:418    .rodata.UCLS:00000000 UCLS
                            *COM*:00000004 PutChar
                            *COM*:00000024 ptm
     /tmp/ccl1vCsd.s:414    .rodata.UCLS:00000000 $d
     /tmp/ccl1vCsd.s:421    .rodata.UCUR_HIDE:00000000 $d
     /tmp/ccl1vCsd.s:428    .rodata.UCUR_SHOW:00000000 $d
     /tmp/ccl1vCsd.s:435    .rodata.UHOME:00000000 $d
     /tmp/ccl1vCsd.s:442    .rodata.U_ATTR_OFF:00000000 $d
     /tmp/ccl1vCsd.s:448    .rodata.tr_locate.str1.4:00000000 $d

UNDEFINED SYMBOLS
UaPutK
UaPutC
UaPutS
uint2uart
