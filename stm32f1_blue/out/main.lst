ARM GAS  /tmp/ccpmJ073.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   3              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   4              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   5              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   6              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   7              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
   8              		.eabi_attribute 30, 2	@ Tag_ABI_optimization_goals
   9              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  10              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  11              		.file	"main.c"
  12              	@ GNU C99 (15:7-2018-q2-6) version 7.3.1 20180622 (release) [ARM/embedded-7-branch revision 261907]
  13              	@	compiled by GNU C version 8.2.0, GMP version 6.1.2, MPFR version 4.0.2, MPC version 1.1.0, isl ve
  14              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  15              	@ options passed:  -I . -imultilib thumb/v7-m -MD out/main.d -MF out/main.d
  16              	@ -MP -MQ out/main.o -D__USES_INITFINI__ -D RAMCODE -D STM32F10X_HD main.c
  17              	@ -mcpu=cortex-m3 -mthumb -auxbase-strip out/main.o -O2 -Wall
  18              	@ -Wstrict-prototypes -Wextra -Wno-uninitialized
  19              	@ -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable
  20              	@ -std=gnu99 -ffunction-sections -fdata-sections -fverbose-asm
  21              	@ options enabled:  -faggressive-loop-optimizations -falign-jumps
  22              	@ -falign-labels -falign-loops -fauto-inc-dec -fbranch-count-reg
  23              	@ -fcaller-saves -fchkp-check-incomplete-type -fchkp-check-read
  24              	@ -fchkp-check-write -fchkp-instrument-calls -fchkp-narrow-bounds
  25              	@ -fchkp-optimize -fchkp-store-bounds -fchkp-use-static-bounds
  26              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcode-hoisting
  27              	@ -fcombine-stack-adjustments -fcommon -fcompare-elim -fcprop-registers
  28              	@ -fcrossjumping -fcse-follow-jumps -fdata-sections -fdefer-pop
  29              	@ -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
  30              	@ -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-types
  31              	@ -fexpensive-optimizations -fforward-propagate -ffp-int-builtin-inexact
  32              	@ -ffunction-cse -ffunction-sections -fgcse -fgcse-lm -fgnu-runtime
  33              	@ -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  34              	@ -fif-conversion -fif-conversion2 -findirect-inlining -finline
  35              	@ -finline-atomics -finline-functions-called-once -finline-small-functions
  36              	@ -fipa-bit-cp -fipa-cp -fipa-icf -fipa-icf-functions -fipa-icf-variables
  37              	@ -fipa-profile -fipa-pure-const -fipa-ra -fipa-reference -fipa-sra
  38              	@ -fipa-vrp -fira-hoist-pressure -fira-share-save-slots
  39              	@ -fira-share-spill-slots -fisolate-erroneous-paths-dereference -fivopts
  40              	@ -fkeep-static-consts -fleading-underscore -flifetime-dse -flra-remat
  41              	@ -flto-odr-type-merging -fmath-errno -fmerge-constants
  42              	@ -fmerge-debug-strings -fmove-loop-invariants -fomit-frame-pointer
  43              	@ -foptimize-sibling-calls -foptimize-strlen -fpartial-inlining -fpeephole
  44              	@ -fpeephole2 -fplt -fprefetch-loop-arrays -freg-struct-return
  45              	@ -freorder-blocks -freorder-functions -frerun-cse-after-loop
  46              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  47              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  48              	@ -fsched-pressure -fsched-rank-heuristic -fsched-spec
  49              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-insns
  50              	@ -fschedule-insns2 -fsection-anchors -fsemantic-interposition
  51              	@ -fshow-column -fshrink-wrap -fshrink-wrap-separate -fsigned-zeros
  52              	@ -fsplit-ivs-in-unroller -fsplit-wide-types -fssa-backprop -fssa-phiopt
  53              	@ -fstdarg-opt -fstore-merging -fstrict-aliasing -fstrict-overflow
  54              	@ -fstrict-volatile-bitfields -fsync-libcalls -fthread-jumps
  55              	@ -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce
  56              	@ -ftree-ccp -ftree-ch -ftree-coalesce-vars -ftree-copy-prop -ftree-cselim
  57              	@ -ftree-dce -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
ARM GAS  /tmp/ccpmJ073.s 			page 2


  58              	@ -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  59              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pre
  60              	@ -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slsr
  61              	@ -ftree-sra -ftree-switch-conversion -ftree-tail-merge -ftree-ter
  62              	@ -ftree-vrp -funit-at-a-time -fverbose-asm -fzero-initialized-in-bss
  63              	@ -masm-syntax-unified -mfix-cortex-m3-ldrd -mlittle-endian
  64              	@ -mpic-data-is-text-relative -msched-prolog -mthumb -munaligned-access
  65              	@ -mvectorize-with-neon-quad
  66              	
  67              		.text
  68              		.section	.text.gmtime_r.isra.0.constprop.2,"ax",%progbits
  69              		.align	1
  70              		.p2align 2,,3
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu softvfp
  75              		.type	gmtime_r.isra.0.constprop.2, %function
  76              	gmtime_r.isra.0.constprop.2:
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}	@
  80              	@ main.c:5605: 	tmbuf->tm_min = (dayclock % 3600) / 60;
  81 0004 4FF46164 		mov	r4, #3600	@ tmp221,
  82              	@ main.c:5601: 	dayclock = (u32) time % SECS_DAY;
  83 0008 524B     		ldr	r3, .L35	@ tmp191,
  84 000a 534A     		ldr	r2, .L35+4	@ tmp193,
  85 000c A3FB0013 		umull	r1, r3, r3, r0	@ tmp372, tmp190, tmp191, ISRA.271
  86 0010 190C     		lsrs	r1, r3, #16	@ dayclock, tmp190,
  87 0012 02FB1101 		mls	r1, r2, r1, r0	@ dayclock, tmp193, dayclock, ISRA.271
  88              	@ main.c:5605: 	tmbuf->tm_min = (dayclock % 3600) / 60;
  89 0016 514A     		ldr	r2, .L35+8	@ tmp219,
  90              	@ main.c:5602: 	dayno = (u32) time / SECS_DAY;
  91 0018 1B0C     		lsrs	r3, r3, #16	@ dayno, tmp190,
  92              	@ main.c:5605: 	tmbuf->tm_min = (dayclock % 3600) / 60;
  93 001a A2FB012E 		umull	r2, lr, r2, r1	@ tmp373, tmp218, tmp219, dayclock
  94              	@ main.c:5607: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
  95 001e 504A     		ldr	r2, .L35+12	@ tmp252,
  96 0020 1D1D     		adds	r5, r3, #4	@ tmp250, dayno,
  97              	@ main.c:5605: 	tmbuf->tm_min = (dayclock % 3600) / 60;
  98 0022 4FEADE2E 		lsr	lr, lr, #11	@ tmp217, tmp218,
  99              	@ main.c:5607: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 100 0026 A2FB0502 		umull	r0, r2, r2, r5	@ tmp374, tmp251, tmp252, tmp250
 101              	@ main.c:5604: 	tmbuf->tm_sec = dayclock % 60;
 102 002a 4E4E     		ldr	r6, .L35+16	@ tmp198,
 103              	@ main.c:5605: 	tmbuf->tm_min = (dayclock % 3600) / 60;
 104 002c 04FB1E10 		mls	r0, r4, lr, r1	@ tmp222, tmp221, tmp217, dayclock
 105              	@ main.c:5604: 	tmbuf->tm_sec = dayclock % 60;
 106 0030 A6FB0174 		umull	r7, r4, r6, r1	@ tmp375, tmp197, tmp198, dayclock
 107              	@ main.c:5607: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 108 0034 AF1A     		subs	r7, r5, r2	@ tmp253, tmp250, tmp251
 109              	@ main.c:5605: 	tmbuf->tm_min = (dayclock % 3600) / 60;
 110 0036 A6FB0060 		umull	r6, r0, r6, r0	@ tmp376, tmp232, tmp198, tmp222
 111              	@ main.c:5607: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 112 003a 02EB5702 		add	r2, r2, r7, lsr #1	@ tmp255, tmp251, tmp253,
 113 003e 9208     		lsrs	r2, r2, #2	@ tmp256, tmp255,
 114              	@ main.c:5604: 	tmbuf->tm_sec = dayclock % 60;
ARM GAS  /tmp/ccpmJ073.s 			page 3


 115 0040 6409     		lsrs	r4, r4, #5	@ tmp199, tmp197,
 116 0042 DFF82CC1 		ldr	ip, .L35+28	@ tmp364,
 117              	@ main.c:5607: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 118 0046 C2EBC202 		rsb	r2, r2, r2, lsl #3	@ tmp259, tmp256, tmp256,
 119              	@ main.c:5604: 	tmbuf->tm_sec = dayclock % 60;
 120 004a C4EB0414 		rsb	r4, r4, r4, lsl #4	@ tmp202, tmp199, tmp199,
 121              	@ main.c:5607: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 122 004e AA1A     		subs	r2, r5, r2	@ tmp260, tmp250, tmp259
 123              	@ main.c:5605: 	tmbuf->tm_min = (dayclock % 3600) / 60;
 124 0050 4009     		lsrs	r0, r0, #5	@ tmp234, tmp232,
 125              	@ main.c:5604: 	tmbuf->tm_sec = dayclock % 60;
 126 0052 A1EB8401 		sub	r1, r1, r4, lsl #2	@ tmp204, dayclock, tmp202,
 127              	@ main.c:5607: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 128 0056 CCF81820 		str	r2, [ip, #24]	@ tmp260, ptm.tm_wday
 129              	@ main.c:5605: 	tmbuf->tm_min = (dayclock % 3600) / 60;
 130 005a CCE90010 		strd	r1, r0, [ip]	@ tmp204, tmp234, tmp364
 131              	@ main.c:5599: 	int year = EPOCH_YR;
 132 005e 40F2B272 		movw	r2, #1970	@ year,
 133              	@ main.c:5610: 		dayno -= YEARSIZE(year);
 134 0062 40F26D18 		movw	r8, #365	@ iftmp.249_20,
 135              	@ main.c:5608: 	while (dayno >= (u32) YEARSIZE(year))
 136 0066 404D     		ldr	r5, .L35+20	@ tmp368,
 137 0068 6420     		movs	r0, #100	@ tmp369,
 138 006a 4FF4C877 		mov	r7, #400	@ tmp371,
 139 006e 10E0     		b	.L2	@
 140              	.L31:
 141 0070 A5FB0241 		umull	r4, r1, r5, r2	@ tmp377, tmp285, tmp368, year
 142 0074 4C09     		lsrs	r4, r1, #5	@ _24, tmp285,
 143 0076 00FB1424 		mls	r4, r0, r4, r2	@ _24, tmp369, _24, year
 144 007a 9CB9     		cbnz	r4, .L5	@ _24,
 145 007c C909     		lsrs	r1, r1, #7	@ tmp365, tmp285,
 146 007e 07FB1121 		mls	r1, r7, r1, r2	@ _125, tmp371, tmp365, year
 147 0082 D9B9     		cbnz	r1, .L29	@ _125,
 148 0084 B3F5B77F 		cmp	r3, #366	@ dayno,
 149 0088 61D3     		bcc	.L30	@,
 150              	.L23:
 151              	@ main.c:5610: 		dayno -= YEARSIZE(year);
 152 008a 4FF4B771 		mov	r1, #366	@ iftmp.249_20,
 153              	.L3:
 154 008e 5B1A     		subs	r3, r3, r1	@ dayno, dayno, iftmp.249_20
 155              	@ main.c:5611: 		year++;
 156 0090 0132     		adds	r2, r2, #1	@ year, year,
 157              	.L2:
 158              	@ main.c:5608: 	while (dayno >= (u32) YEARSIZE(year))
 159 0092 12F00306 		ands	r6, r2, #3	@ _15, year,
 160 0096 EBD0     		beq	.L31	@,
 161 0098 B3F5B67F 		cmp	r3, #364	@ dayno,
 162 009c 13D9     		bls	.L32	@,
 163              	@ main.c:5610: 		dayno -= YEARSIZE(year);
 164 009e 40F26D11 		movw	r1, #365	@ iftmp.249_20,
 165 00a2 F4E7     		b	.L3	@
 166              	.L5:
 167              	@ main.c:5608: 	while (dayno >= (u32) YEARSIZE(year))
 168 00a4 B3F5B77F 		cmp	r3, #366	@ dayno,
 169 00a8 EFD2     		bcs	.L23	@,
 170              	.L17:
 171 00aa 4FF4C870 		mov	r0, #400	@ tmp355,
ARM GAS  /tmp/ccpmJ073.s 			page 4


 172 00ae 2E49     		ldr	r1, .L35+20	@ tmp353,
 173 00b0 A1FB0251 		umull	r5, r1, r1, r2	@ tmp379, tmp352, tmp353, year
 174 00b4 C909     		lsrs	r1, r1, #7	@ _125, tmp352,
 175 00b6 00FB1121 		mls	r1, r0, r1, r2	@ _125, tmp355, _125, year
 176 00ba 10E0     		b	.L14	@
 177              	.L29:
 178 00bc B3F5B67F 		cmp	r3, #364	@ dayno,
 179 00c0 F3D9     		bls	.L17	@,
 180              	@ main.c:5610: 		dayno -= YEARSIZE(year);
 181 00c2 4146     		mov	r1, r8	@ iftmp.249_20, iftmp.249_20
 182 00c4 E3E7     		b	.L3	@
 183              	.L32:
 184 00c6 6425     		movs	r5, #100	@ tmp335,
 185 00c8 4FF4C870 		mov	r0, #400	@ tmp345,
 186 00cc 2649     		ldr	r1, .L35+20	@ tmp333,
 187 00ce A1FB0241 		umull	r4, r1, r1, r2	@ tmp378, tmp332, tmp333, year
 188 00d2 4C09     		lsrs	r4, r1, #5	@ _24, tmp332,
 189 00d4 C909     		lsrs	r1, r1, #7	@ _125, tmp332,
 190 00d6 05FB1424 		mls	r4, r5, r4, r2	@ _24, tmp335, _24, year
 191 00da 00FB1121 		mls	r1, r0, r1, r2	@ _125, tmp345, _125, year
 192              	.L14:
 193              	@ main.c:5614: 	tmbuf->tm_yday = dayno;
 194 00de CCF81C30 		str	r3, [ip, #28]	@ dayno, ptm.tm_yday
 195 00e2 2248     		ldr	r0, .L35+24	@ ivtmp.377,
 196 00e4 002C     		cmp	r4, #0	@ _24,
 197 00e6 14BF     		ite	ne	@
 198 00e8 4FF03008 		movne	r8, #48	@, tmp315,
 199 00ec 4FF00008 		moveq	r8, #0	@, tmp315,
 200 00f0 0029     		cmp	r1, #0	@ _125,
 201 00f2 0CBF     		ite	eq	@
 202 00f4 4FF03009 		moveq	r9, #48	@, tmp321,
 203 00f8 4FF00009 		movne	r9, #0	@, tmp321,
 204              	@ main.c:5618: 		dayno -= _ytab[LEAPYEAR(year)][tmbuf->tm_mon];
 205 00fc 0025     		movs	r5, #0	@ ivtmp.375,
 206              	@ main.c:5616: 	while (dayno >= (u32) _ytab[LEAPYEAR(year)][tmbuf->tm_mon])
 207 00fe 5EB9     		cbnz	r6, .L10	@ _15,
 208              	.L34:
 209 0100 D4B9     		cbnz	r4, .L11	@ _24,
 210 0102 F9B9     		cbnz	r1, .L33	@ _125,
 211 0104 076B     		ldr	r7, [r0, #48]	@ MEM[base: _42, offset: 48B], MEM[base: _42, offset: 48B]
 212 0106 BB42     		cmp	r3, r7	@ dayno, MEM[base: _42, offset: 48B]
 213 0108 09D3     		bcc	.L16	@,
 214              	.L15:
 215 010a 50F80970 		ldr	r7, [r0, r9]	@ _73, MEM[base: _120, index: _18, offset: 0B]
 216              	.L9:
 217              	@ main.c:5618: 		dayno -= _ytab[LEAPYEAR(year)][tmbuf->tm_mon];
 218 010e DB1B     		subs	r3, r3, r7	@ dayno, dayno, _73
 219 0110 0135     		adds	r5, r5, #1	@ ivtmp.375, ivtmp.375,
 220 0112 0430     		adds	r0, r0, #4	@ ivtmp.377, ivtmp.377,
 221              	@ main.c:5616: 	while (dayno >= (u32) _ytab[LEAPYEAR(year)][tmbuf->tm_mon])
 222 0114 002E     		cmp	r6, #0	@ _15
 223 0116 F3D0     		beq	.L34	@
 224              	.L10:
 225 0118 0768     		ldr	r7, [r0]	@ _73, MEM[base: _121, offset: 0B]
 226 011a BB42     		cmp	r3, r7	@ dayno, _73
 227 011c F7D2     		bcs	.L9	@,
 228              	.L16:
ARM GAS  /tmp/ccpmJ073.s 			page 5


 229              	@ main.c:5622: 	tmbuf->tm_isdst = 1;
 230 011e 0121     		movs	r1, #1	@ tmp325,
 231              	@ main.c:5621: 	tmbuf->tm_mday = dayno + 1;
 232 0120 0B44     		add	r3, r3, r1	@ tmp323,
 233              	@ main.c:5623: 	tmbuf->tm_hour += TIMEZONE - tmbuf->tm_isdst;
 234 0122 0EEB0100 		add	r0, lr, r1	@ tmp327, tmp217,
 235              	@ main.c:5625: 	tmbuf->tm_mon  += 1;
 236 0126 0D44     		add	r5, r5, r1	@ tmp330,
 237              	@ main.c:5623: 	tmbuf->tm_hour += TIMEZONE - tmbuf->tm_isdst;
 238 0128 CCE90203 		strd	r0, r3, [ip, #8]	@ tmp327, tmp323, tmp364,
 239              	@ main.c:5624: 	tmbuf->tm_year += YEAR0;
 240 012c CCE90452 		strd	r5, r2, [ip, #16]	@ tmp330, year, tmp364,
 241              	@ main.c:5622: 	tmbuf->tm_isdst = 1;
 242 0130 CCF82010 		str	r1, [ip, #32]	@ tmp325, ptm.tm_isdst
 243              	@ main.c:5627: }
 244 0134 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}	@
 245              	.L11:
 246              	@ main.c:5616: 	while (dayno >= (u32) _ytab[LEAPYEAR(year)][tmbuf->tm_mon])
 247 0138 50F80870 		ldr	r7, [r0, r8]	@ MEM[base: _88, index: _74, offset: 0B], MEM[base: _88, index: _74, offset: 0B]
 248 013c BB42     		cmp	r3, r7	@ dayno, MEM[base: _88, index: _74, offset: 0B]
 249 013e EED3     		bcc	.L16	@,
 250 0140 076B     		ldr	r7, [r0, #48]	@ _73, MEM[base: _88, offset: 48B]
 251 0142 E4E7     		b	.L9	@
 252              	.L33:
 253 0144 50F80870 		ldr	r7, [r0, r8]	@ MEM[base: _32, index: _74, offset: 0B], MEM[base: _32, index: _74, offset: 0B]
 254 0148 BB42     		cmp	r3, r7	@ dayno, MEM[base: _32, index: _74, offset: 0B]
 255 014a DED2     		bcs	.L15	@,
 256 014c E7E7     		b	.L16	@
 257              	.L30:
 258              	@ main.c:5608: 	while (dayno >= (u32) YEARSIZE(year))
 259 014e 0C46     		mov	r4, r1	@ _24, _125
 260 0150 C5E7     		b	.L14	@
 261              	.L36:
 262 0152 00BF     		.align	2
 263              	.L35:
 264 0154 07452EC2 		.word	-1037155065
 265 0158 80510100 		.word	86400
 266 015c C5B3A291 		.word	-1851608123
 267 0160 25499224 		.word	613566757
 268 0164 89888888 		.word	-2004318071
 269 0168 1F85EB51 		.word	1374389535
 270 016c 00000000 		.word	.LANCHOR0
 271 0170 00000000 		.word	ptm
 272              		.size	gmtime_r.isra.0.constprop.2, .-gmtime_r.isra.0.constprop.2
 273              		.section	.text.head,"ax",%progbits
 274              		.align	1
 275              		.p2align 2,,3
 276              		.global	head
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 280              		.fpu softvfp
 281              		.type	head, %function
 282              	head:
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285 0000 08B5     		push	{r3, lr}	@
ARM GAS  /tmp/ccpmJ073.s 			page 6


 286              	@ main.c:217: 		tr_pen_color( TGREEN );
 287 0002 0220     		movs	r0, #2	@,
 288 0004 FFF7FEFF 		bl	tr_pen_color	@
 289              	@ main.c:219: 		UaPutK("\f\r\n Mini STM32F103C8T6 RAM   "); // Boot from RAM 	 = B0+ B1+
 290 0008 0648     		ldr	r0, .L39	@,
 291 000a FFF7FEFF 		bl	UaPutK	@
 292              	@ main.c:223: 		uint2uart(F_CPU/1e6);	UaPutK(" MHz");
 293 000e 4820     		movs	r0, #72	@,
 294 0010 FFF7FEFF 		bl	uint2uart	@
 295 0014 0448     		ldr	r0, .L39+4	@,
 296 0016 FFF7FEFF 		bl	UaPutK	@
 297              	@ main.c:225: 	}
 298 001a BDE80840 		pop	{r3, lr}	@
 299              	@ main.c:224: 		tr_pen_color( TYELLOW );
 300 001e 0320     		movs	r0, #3	@,
 301 0020 FFF7FEBF 		b	tr_pen_color	@
 302              	.L40:
 303              		.align	2
 304              	.L39:
 305 0024 00000000 		.word	.LC8
 306 0028 20000000 		.word	.LC9
 307              		.size	head, .-head
 308              		.section	.text.minios,"ax",%progbits
 309              		.align	1
 310              		.p2align 2,,3
 311              		.global	minios
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu softvfp
 316              		.type	minios, %function
 317              	minios:
 318              		@ args = 0, pretend = 0, frame = 32
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320              	@ main.c:5360: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 321 0000 42F22C00 		movw	r0, #8236	@ tmp191,
 322              	@ main.c:246: void minios(void){
 323 0004 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 324              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 325 0008 4FF0200C 		mov	ip, #32	@ tmp199,
 326              	@ main.c:5361: 	USART1->BRR = (F_CPU+UART1_SPEED/2)/UART1_SPEED;
 327 000c 40F2712E 		movw	lr, #625	@ tmp197,
 328              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 329 0010 4022     		movs	r2, #64	@ tmp217,
 330              	@ main.c:5368: 	USART2->BRR = ((F_CPU+UART2_SPEED/2)/UART2_SPEED)/2;
 331 0012 4FF49C71 		mov	r1, #312	@ tmp215,
 332              	@ main.c:253: 		GPIOB->CRL = (GPIOB->CRL & 0x0fffffff) | 0x10000000;	// PB7
 333 0016 974C     		ldr	r4, .L53	@ tmp179,
 334              	@ main.c:5358: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 335 0018 974E     		ldr	r6, .L53+4	@ tmp182,
 336              	@ main.c:253: 		GPIOB->CRL = (GPIOB->CRL & 0x0fffffff) | 0x10000000;	// PB7
 337 001a 2368     		ldr	r3, [r4]	@ _1, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 338              	@ main.c:5359: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 339 001c 974D     		ldr	r5, .L53+8	@ tmp184,
 340              	@ main.c:253: 		GPIOB->CRL = (GPIOB->CRL & 0x0fffffff) | 0x10000000;	// PB7
 341 001e 23F07043 		bic	r3, r3, #-268435456	@ tmp180, _1,
 342 0022 43F08053 		orr	r3, r3, #268435456	@ _3, tmp180,
ARM GAS  /tmp/ccpmJ073.s 			page 7


 343 0026 2360     		str	r3, [r4]	@ _3, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 344              	@ main.c:5358: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 345 0028 B369     		ldr	r3, [r6, #24]	@ _128, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 346              	@ main.c:5360: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 347 002a 04F53054 		add	r4, r4, #11264	@ tmp187, tmp187,
 348              	@ main.c:5358: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 349 002e 43F48043 		orr	r3, r3, #16384	@ _129, _128,
 350 0032 B361     		str	r3, [r6, #24]	@ _129, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 351              	@ main.c:5359: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 352 0034 6B68     		ldr	r3, [r5, #4]	@ _130, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 353              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 354 0036 924F     		ldr	r7, .L53+12	@ tmp198,
 355              	@ main.c:5359: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 356 0038 23F47F63 		bic	r3, r3, #4080	@ tmp185, _130,
 357 003c 43F49263 		orr	r3, r3, #1168	@ _132, tmp185,
 358 0040 6B60     		str	r3, [r5, #4]	@ _132, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 359              	@ main.c:5360: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 360 0042 A389     		ldrh	r3, [r4, #12]	@, MEM[(struct USART_TypeDef *)1073821696B].CR1
 361              	@ main.c:257: 			PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 362 0044 DFF888B2 		ldr	fp, .L53+92	@ tmp304,
 363              	@ main.c:5360: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 364 0048 0343     		orrs	r3, r3, r0	@, _134, MEM[(struct USART_TypeDef *)1073821696B].CR1, tmp191
 365 004a A381     		strh	r3, [r4, #12]	@ movhi	@ _134, MEM[(struct USART_TypeDef *)1073821696B].CR1
 366              	@ main.c:5361: 	USART1->BRR = (F_CPU+UART1_SPEED/2)/UART1_SPEED;
 367 004c A4F808E0 		strh	lr, [r4, #8]	@ movhi	@ tmp197, MEM[(struct USART_TypeDef *)1073821696B].BRR
 368              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 369 0050 C7F804C0 		str	ip, [r7, #4]	@ tmp199, MEM[(struct NVIC_Type *)3758153984B].ISER
 370              	@ main.c:5365: 	RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 371 0054 F369     		ldr	r3, [r6, #28]	@ _121, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 372              	@ main.c:5367: 	USART2->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 373 0056 DFF87CC2 		ldr	ip, .L53+96	@ tmp205,
 374              	@ main.c:5365: 	RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 375 005a 43F40033 		orr	r3, r3, #131072	@ _122, _121,
 376 005e F361     		str	r3, [r6, #28]	@ _122, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 377              	@ main.c:5366: 	GPIOA->CRL = (GPIOA->CRL & 0xffff00ff) | 0x00004900; // PA2=TX, PA3=RX 
 378 0060 2B68     		ldr	r3, [r5]	@ _123, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 379              	@ main.c:246: void minios(void){
 380 0062 89B0     		sub	sp, sp, #36	@,,
 381              	@ main.c:5366: 	GPIOA->CRL = (GPIOA->CRL & 0xffff00ff) | 0x00004900; // PA2=TX, PA3=RX 
 382 0064 23F47F43 		bic	r3, r3, #65280	@ tmp203, _123,
 383 0068 43F49243 		orr	r3, r3, #18688	@ _125, tmp203,
 384 006c 2B60     		str	r3, [r5]	@ _125, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 385              	@ main.c:5367: 	USART2->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 386 006e BCF80C30 		ldrh	r3, [ip, #12]	@, MEM[(struct USART_TypeDef *)1073759232B].CR1
 387              	@ main.c:258: 			UaPutS("\f UART1 "); UaPutS (uint2str( (F_CPU/1)/(1*USART1->BRR-1),buf));	
 388 0072 844D     		ldr	r5, .L53+16	@ tmp228,
 389              	@ main.c:5367: 	USART2->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 390 0074 1843     		orrs	r0, r0, r3	@, _127, tmp191, MEM[(struct USART_TypeDef *)1073759232B].CR1
 391              	@ main.c:257: 			PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 392 0076 844B     		ldr	r3, .L53+20	@ tmp314,
 393              	@ main.c:5367: 	USART2->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 394 0078 ACF80C00 		strh	r0, [ip, #12]	@ movhi	@ _127, MEM[(struct USART_TypeDef *)1073759232B].CR1
 395              	@ main.c:5368: 	USART2->BRR = ((F_CPU+UART2_SPEED/2)/UART2_SPEED)/2;
 396 007c ACF80810 		strh	r1, [ip, #8]	@ movhi	@ tmp215, MEM[(struct USART_TypeDef *)1073759232B].BRR
 397              	@ main.c:257: 			PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 398 0080 0320     		movs	r0, #3	@,
 399              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
ARM GAS  /tmp/ccpmJ073.s 			page 8


 400 0082 7A60     		str	r2, [r7, #4]	@ tmp217, MEM[(struct NVIC_Type *)3758153984B].ISER
 401              	@ main.c:257: 			PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 402 0084 CBF80030 		str	r3, [fp]	@ tmp314, PutChar
 403 0088 FFF7FEFF 		bl	tr_pen_color	@
 404              	@ main.c:258: 			UaPutS("\f UART1 "); UaPutS (uint2str( (F_CPU/1)/(1*USART1->BRR-1),buf));	
 405 008c 7F48     		ldr	r0, .L53+24	@,
 406 008e FFF7FEFF 		bl	UaPutS	@
 407 0092 2089     		ldrh	r0, [r4, #8]	@, MEM[(struct USART_TypeDef *)1073821696B].BRR
 408 0094 05A9     		add	r1, sp, #20	@ tmp315,,
 409 0096 0138     		subs	r0, r0, #1	@ tmp225, MEM[(struct USART_TypeDef *)1073821696B].BRR,
 410 0098 B5FBF0F0 		udiv	r0, r5, r0	@, tmp228, tmp225
 411 009c FFF7FEFF 		bl	uint2str	@
 412 00a0 FFF7FEFF 		bl	UaPutS	@
 413              	@ main.c:259: 			UaPutS (" b/s \r\n");
 414 00a4 7A48     		ldr	r0, .L53+28	@,
 415 00a6 FFF7FEFF 		bl	UaPutS	@
 416              	@ main.c:261: 			PutChar = UART2_putc;	tr_pen_color ( TYELLOW );
 417 00aa 7A4B     		ldr	r3, .L53+32	@ tmp316,
 418 00ac 0320     		movs	r0, #3	@,
 419 00ae CBF80030 		str	r3, [fp]	@ tmp316, PutChar
 420 00b2 FFF7FEFF 		bl	tr_pen_color	@
 421              	@ main.c:262: 			UaPutS("\f UART2 "); UaPutS (uint2str( (F_CPU/1)/(1*USART1->BRR-1),buf));	
 422 00b6 7848     		ldr	r0, .L53+36	@,
 423 00b8 FFF7FEFF 		bl	UaPutS	@
 424 00bc 2089     		ldrh	r0, [r4, #8]	@, MEM[(struct USART_TypeDef *)1073821696B].BRR
 425 00be 05A9     		add	r1, sp, #20	@ tmp317,,
 426 00c0 0138     		subs	r0, r0, #1	@ tmp237, MEM[(struct USART_TypeDef *)1073821696B].BRR,
 427 00c2 B5FBF0F0 		udiv	r0, r5, r0	@, tmp228, tmp237
 428 00c6 FFF7FEFF 		bl	uint2str	@
 429 00ca FFF7FEFF 		bl	UaPutS	@
 430              	@ main.c:263: 			UaPutS(" b/s \r\n");
 431 00ce 7048     		ldr	r0, .L53+28	@,
 432 00d0 FFF7FEFF 		bl	UaPutS	@
 433              	@ main.c:270: 			i2c1r_init();
 434 00d4 FFF7FEFF 		bl	i2c1r_init	@
 435              	@ main.c:272: 			i2weg[0]=0;     // Register
 436 00d8 4FF4F852 		mov	r2, #7936	@ tmp243,
 437              	@ main.c:273: 			i2weg[1]=0x1f;  // MSB Data
 438 00dc 7723     		movs	r3, #119	@ tmp244,
 439              	@ main.c:276: 			UaPutS("debug_0");
 440 00de 6F48     		ldr	r0, .L53+40	@,
 441              	@ main.c:272: 			i2weg[0]=0;     // Register
 442 00e0 ADF81020 		strh	r2, [sp, #16]	@ movhi	@ tmp243, MEM[(u08[3] *)&i2weg]
 443              	@ main.c:273: 			i2weg[1]=0x1f;  // MSB Data
 444 00e4 8DF81230 		strb	r3, [sp, #18]	@ tmp244, MEM[(u08[3] *)&i2weg + 2B]
 445              	@ main.c:278: 			i2weg[0]=5;    	// Register
 446 00e8 40F20514 		movw	r4, #261	@ tmp248,
 447              	@ main.c:276: 			UaPutS("debug_0");
 448 00ec FFF7FEFF 		bl	UaPutS	@
 449              	@ main.c:249: 		u16 vr1,vr2,cnt,cnt2=0,vbus;
 450 00f0 0025     		movs	r5, #0	@ cnt2,
 451              	@ main.c:279: 			i2weg[1]=0x1; 	// MSB Data
 452 00f2 9523     		movs	r3, #149	@ tmp249,
 453              	@ main.c:281: 			i2c1_write(INA219_ADDR,i2weg,3);
 454 00f4 0322     		movs	r2, #3	@,
 455 00f6 04A9     		add	r1, sp, #16	@,,
 456 00f8 8020     		movs	r0, #128	@,
ARM GAS  /tmp/ccpmJ073.s 			page 9


 457              	@ main.c:278: 			i2weg[0]=5;    	// Register
 458 00fa ADF81040 		strh	r4, [sp, #16]	@ movhi	@ tmp248, MEM[(u08[3] *)&i2weg]
 459              	@ main.c:279: 			i2weg[1]=0x1; 	// MSB Data
 460 00fe 8DF81230 		strb	r3, [sp, #18]	@ tmp249, MEM[(u08[3] *)&i2weg + 2B]
 461              	@ main.c:281: 			i2c1_write(INA219_ADDR,i2weg,3);
 462 0102 FFF7FEFF 		bl	i2c1_write	@
 463              	@ main.c:283: 			i2c1_read (INA219_ADDR,0,i2reg,2);
 464 0106 03AA     		add	r2, sp, #12	@ tmp318,,
 465 0108 0223     		movs	r3, #2	@,
 466 010a 2946     		mov	r1, r5	@, cnt2
 467 010c 8020     		movs	r0, #128	@,
 468 010e FFF7FEFF 		bl	i2c1_read	@
 469              	@ main.c:284: 			tr_locate( 1,3);
 470 0112 0321     		movs	r1, #3	@,
 471 0114 0120     		movs	r0, #1	@,
 472 0116 FFF7FEFF 		bl	tr_locate	@
 473              	@ main.c:285: 			UaPutS("Config="); unt2uart(i2reg[0] + (i2reg[0]<<8) ,5); 
 474 011a 6148     		ldr	r0, .L53+44	@,
 475 011c FFF7FEFF 		bl	UaPutS	@
 476 0120 9DF80C00 		ldrb	r0, [sp, #12]	@ zero_extendqisi2	@ _17, i2reg
 477 0124 0521     		movs	r1, #5	@,
 478 0126 00EB0020 		add	r0, r0, r0, lsl #8	@, _17, _17,
 479 012a FFF7FEFF 		bl	unt2uart	@
 480              	@ main.c:286: 			tr_locate( 1,2);
 481 012e 0221     		movs	r1, #2	@,
 482 0130 0120     		movs	r0, #1	@,
 483              	@ main.c:264: 			cnt=0;
 484 0132 2C46     		mov	r4, r5	@ cnt, cnt2
 485              	@ main.c:286: 			tr_locate( 1,2);
 486 0134 FFF7FEFF 		bl	tr_locate	@
 487 0138 5A4F     		ldr	r7, .L53+48	@ tmp302,
 488 013a DFF89CA1 		ldr	r10, .L53+100	@ tmp303,
 489              	@ main.c:290: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL)){
 490 013e 5A4E     		ldr	r6, .L53+52	@ tmp257,
 491 0140 DFF89891 		ldr	r9, .L53+104	@ tmp259,
 492              	@ main.c:317: 			if(PB11_i==1) {
 493 0144 DFF89881 		ldr	r8, .L53+108	@ tmp288,
 494              	.L42:
 495              	@ main.c:290: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL)){
 496 0148 3B68     		ldr	r3, [r7]	@ trg0.0_23, trg0
 497 014a B268     		ldr	r2, [r6, #8]	@ _24, MEM[(struct SysTick_Type *)3758153744B].VAL
 498 014c 9B1A     		subs	r3, r3, r2	@ tmp258, trg0.0_23, _24
 499 014e 4B45     		cmp	r3, r9	@ tmp258, tmp259
 500 0150 20D8     		bhi	.L52	@,
 501              	.L44:
 502              	@ main.c:321: 			if(p_Fifo1->rct){
 503 0152 DAF80030 		ldr	r3, [r10]	@ p_Fifo1.3_50, p_Fifo1
 504              	@ main.c:317: 			if(PB11_i==1) {
 505 0156 D8F80020 		ldr	r2, [r8]	@ _49, MEM[(volatile long unsigned int *)1109492012B]
 506              	@ main.c:321: 			if(p_Fifo1->rct){
 507 015a 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.3_50->rct
 508              	@ main.c:317: 			if(PB11_i==1) {
 509 015c 012A     		cmp	r2, #1	@ _49,
 510              	@ main.c:318: 				cnt2++;
 511 015e 08BF     		it	eq
 512 0160 0135     		addeq	r5, r5, #1	@ tmp289, cnt2,
 513              	@ main.c:321: 			if(p_Fifo1->rct){
ARM GAS  /tmp/ccpmJ073.s 			page 10


 514 0162 9BB2     		uxth	r3, r3	@ _51, p_Fifo1.3_50->rct
 515              	@ main.c:318: 				cnt2++;
 516 0164 08BF     		it	eq
 517 0166 ADB2     		uxtheq	r5, r5	@ cnt2, tmp289
 518              	@ main.c:321: 			if(p_Fifo1->rct){
 519 0168 002B     		cmp	r3, #0	@ _51
 520 016a EDD0     		beq	.L42	@
 521              	@ main.c:322: 				UART_getChar((char*)&swh);
 522 016c 0DF10B00 		add	r0, sp, #11	@ tmp325,,
 523 0170 FFF7FEFF 		bl	UART_getChar	@
 524              	@ main.c:325: 				switch (swh){
 525 0174 9DF80B30 		ldrb	r3, [sp, #11]	@ zero_extendqisi2	@ swh, swh
 526 0178 612B     		cmp	r3, #97	@ swh,
 527 017a 65D0     		beq	.L46	@,
 528 017c 622B     		cmp	r3, #98	@ swh,
 529 017e E3D1     		bne	.L42	@,
 530              	@ main.c:338: 					PB7_o ^= 1;
 531 0180 4A4A     		ldr	r2, .L53+56	@ tmp326,
 532 0182 1368     		ldr	r3, [r2]	@ _54, MEM[(volatile long unsigned int *)1109492124B]
 533 0184 83F00103 		eor	r3, r3, #1	@ _55, _54,
 534 0188 1360     		str	r3, [r2]	@ _55, MEM[(volatile long unsigned int *)1109492124B]
 535              	@ main.c:290: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL)){
 536 018a 3B68     		ldr	r3, [r7]	@ trg0.0_23, trg0
 537 018c B268     		ldr	r2, [r6, #8]	@ _24, MEM[(struct SysTick_Type *)3758153744B].VAL
 538 018e 9B1A     		subs	r3, r3, r2	@ tmp258, trg0.0_23, _24
 539 0190 4B45     		cmp	r3, r9	@ tmp258, tmp259
 540 0192 DED9     		bls	.L44	@,
 541              	.L52:
 542              	@ main.c:291: 				trg0 = SysTick->VAL;
 543 0194 B268     		ldr	r2, [r6, #8]	@ _26, MEM[(struct SysTick_Type *)3758153744B].VAL
 544              	@ main.c:295: 				unt2uart(cnt++,5); UaPutS(" "); unt2uart(cnt2,6); UaPutS("\r");
 545 0196 631C     		adds	r3, r4, #1	@ tmp264, cnt,
 546              	@ main.c:291: 				trg0 = SysTick->VAL;
 547 0198 3A60     		str	r2, [r7]	@ _26, trg0
 548              	@ main.c:294: 				PutChar = UART2_putc;
 549 019a 3E4A     		ldr	r2, .L53+32	@ tmp319,
 550              	@ main.c:295: 				unt2uart(cnt++,5); UaPutS(" "); unt2uart(cnt2,6); UaPutS("\r");
 551 019c 2046     		mov	r0, r4	@, cnt
 552 019e 0521     		movs	r1, #5	@,
 553              	@ main.c:294: 				PutChar = UART2_putc;
 554 01a0 CBF80020 		str	r2, [fp]	@ tmp319, PutChar
 555              	@ main.c:295: 				unt2uart(cnt++,5); UaPutS(" "); unt2uart(cnt2,6); UaPutS("\r");
 556 01a4 9CB2     		uxth	r4, r3	@ cnt, tmp264
 557 01a6 FFF7FEFF 		bl	unt2uart	@
 558 01aa 4148     		ldr	r0, .L53+60	@,
 559 01ac FFF7FEFF 		bl	UaPutS	@
 560 01b0 0621     		movs	r1, #6	@,
 561 01b2 2846     		mov	r0, r5	@, cnt2
 562 01b4 FFF7FEFF 		bl	unt2uart	@
 563 01b8 3E48     		ldr	r0, .L53+64	@,
 564 01ba FFF7FEFF 		bl	UaPutS	@
 565              	@ main.c:296: 				PutChar = UART1_putc;
 566 01be 324B     		ldr	r3, .L53+20	@ tmp320,
 567              	@ main.c:297: 				unt2uart(cnt  ,5); UaPutS("\r");
 568 01c0 0521     		movs	r1, #5	@,
 569 01c2 2046     		mov	r0, r4	@, cnt
 570              	@ main.c:296: 				PutChar = UART1_putc;
ARM GAS  /tmp/ccpmJ073.s 			page 11


 571 01c4 CBF80030 		str	r3, [fp]	@ tmp320, PutChar
 572              	@ main.c:297: 				unt2uart(cnt  ,5); UaPutS("\r");
 573 01c8 FFF7FEFF 		bl	unt2uart	@
 574 01cc 3948     		ldr	r0, .L53+64	@,
 575 01ce FFF7FEFF 		bl	UaPutS	@
 576              	@ main.c:299: 				i2c1_read( INA219_ADDR,2,i2reg,2);
 577 01d2 0223     		movs	r3, #2	@,
 578 01d4 03AA     		add	r2, sp, #12	@ tmp321,,
 579 01d6 1946     		mov	r1, r3	@,
 580 01d8 8020     		movs	r0, #128	@,
 581 01da FFF7FEFF 		bl	i2c1_read	@
 582              	@ main.c:300: 				vbus = ((i2reg[1] | (i2reg[0]<<8))>>3)*4;
 583 01de BDF80C30 		ldrh	r3, [sp, #12]	@, MEM[(u08[2] *)&i2reg]
 584              	@ main.c:301: 				tr_locate(1,3);
 585 01e2 0321     		movs	r1, #3	@,
 586              	@ main.c:300: 				vbus = ((i2reg[1] | (i2reg[0]<<8))>>3)*4;
 587 01e4 5BBA     		rev16	r3, r3	@ tmp271, MEM[(u08[2] *)&i2reg]
 588 01e6 C3F3CC03 		ubfx	r3, r3, #3, #13	@ tmp274, tmp271,,
 589 01ea 9B00     		lsls	r3, r3, #2	@ vbus, tmp274,
 590              	@ main.c:301: 				tr_locate(1,3);
 591 01ec 0120     		movs	r0, #1	@,
 592              	@ main.c:300: 				vbus = ((i2reg[1] | (i2reg[0]<<8))>>3)*4;
 593 01ee 0193     		str	r3, [sp, #4]	@ vbus, %sfp
 594              	@ main.c:301: 				tr_locate(1,3);
 595 01f0 FFF7FEFF 		bl	tr_locate	@
 596              	@ main.c:302: 				UaPutS("vbus=");
 597 01f4 3048     		ldr	r0, .L53+68	@,
 598 01f6 FFF7FEFF 		bl	UaPutS	@
 599              	@ main.c:304: 				int2uart (vbus ,4,3);
 600 01fa 019B     		ldr	r3, [sp, #4]	@ vbus, %sfp
 601 01fc 0322     		movs	r2, #3	@,
 602 01fe 1846     		mov	r0, r3	@, vbus
 603 0200 0421     		movs	r1, #4	@,
 604 0202 FFF7FEFF 		bl	int2uart	@
 605              	@ main.c:306: 				i2c1_read(INA219_ADDR,4,i2reg,2);
 606 0206 0421     		movs	r1, #4	@,
 607 0208 0223     		movs	r3, #2	@,
 608 020a 03AA     		add	r2, sp, #12	@ tmp322,,
 609 020c 8020     		movs	r0, #128	@,
 610 020e FFF7FEFF 		bl	i2c1_read	@
 611              	@ main.c:307: 				cur = ((i2reg[1]) | (i2reg[0]<<8));
 612 0212 9DF80C20 		ldrb	r2, [sp, #12]	@ zero_extendqisi2	@ i2reg, i2reg
 613 0216 9DF80D30 		ldrb	r3, [sp, #13]	@ zero_extendqisi2	@ i2reg, i2reg
 614              	@ main.c:308: 				UaPutS(" cur=");
 615 021a 2848     		ldr	r0, .L53+72	@,
 616              	@ main.c:307: 				cur = ((i2reg[1]) | (i2reg[0]<<8));
 617 021c 43EA0223 		orr	r3, r3, r2, lsl #8	@ tmp284, i2reg, i2reg,
 618 0220 1BB2     		sxth	r3, r3	@ cur, tmp284
 619 0222 0193     		str	r3, [sp, #4]	@ cur, %sfp
 620              	@ main.c:308: 				UaPutS(" cur=");
 621 0224 FFF7FEFF 		bl	UaPutS	@
 622              	@ main.c:309: 				int2uart (cur,4,3);
 623 0228 019B     		ldr	r3, [sp, #4]	@ cur, %sfp
 624 022a 0322     		movs	r2, #3	@,
 625 022c 1846     		mov	r0, r3	@, cur
 626 022e 0421     		movs	r1, #4	@,
 627 0230 FFF7FEFF 		bl	int2uart	@
ARM GAS  /tmp/ccpmJ073.s 			page 12


 628              	@ main.c:311: 				tr_locate(1,2);
 629 0234 0221     		movs	r1, #2	@,
 630 0236 0120     		movs	r0, #1	@,
 631 0238 FFF7FEFF 		bl	tr_locate	@
 632              	@ main.c:312: 				LED ^= 1;	
 633 023c 204A     		ldr	r2, .L53+76	@ tmp323,
 634 023e 1368     		ldr	r3, [r2]	@ _47, MEM[(volatile long unsigned int *)1109524916B]
 635 0240 83F00103 		eor	r3, r3, #1	@ _48, _47,
 636 0244 1360     		str	r3, [r2]	@ _48, MEM[(volatile long unsigned int *)1109524916B]
 637 0246 84E7     		b	.L44	@
 638              	.L46:
 639              	@ main.c:327: 					UaPutS("\r\n");
 640 0248 1E48     		ldr	r0, .L53+80	@,
 641 024a FFF7FEFF 		bl	UaPutS	@
 642              	@ main.c:328: 					UaPutS("\t\ta Podaj liczbe  ");
 643 024e 1E48     		ldr	r0, .L53+84	@,
 644 0250 FFF7FEFF 		bl	UaPutS	@
 645              	@ main.c:329: 					vr1 = UART_getNum();
 646 0254 FFF7FEFF 		bl	UART_getNum	@
 647 0258 0190     		str	r0, [sp, #4]	@ _53, %sfp
 648              	@ main.c:330: 					UaPutS(" num=");	
 649 025a 1C48     		ldr	r0, .L53+88	@,
 650 025c FFF7FEFF 		bl	UaPutS	@
 651              	@ main.c:331: 					unt2uart(vr1,4);
 652 0260 019B     		ldr	r3, [sp, #4]	@ _53, %sfp
 653 0262 0421     		movs	r1, #4	@,
 654 0264 98B2     		uxth	r0, r3	@, _53
 655 0266 FFF7FEFF 		bl	unt2uart	@
 656              	@ main.c:332: 					tr_locate( 1, 2 );
 657 026a 0221     		movs	r1, #2	@,
 658 026c 0120     		movs	r0, #1	@,
 659 026e FFF7FEFF 		bl	tr_locate	@
 660              	@ main.c:335: 					break;
 661 0272 69E7     		b	.L42	@
 662              	.L54:
 663              		.align	2
 664              	.L53:
 665 0274 000C0140 		.word	1073810432
 666 0278 00100240 		.word	1073876992
 667 027c 00080140 		.word	1073809408
 668 0280 00E100E0 		.word	-536813312
 669 0284 00A24A04 		.word	72000000
 670 0288 00000000 		.word	UART1_putc
 671 028c 00000000 		.word	.LC10
 672 0290 0C000000 		.word	.LC11
 673 0294 00000000 		.word	UART2_putc
 674 0298 14000000 		.word	.LC12
 675 029c 20000000 		.word	.LC13
 676 02a0 28000000 		.word	.LC14
 677 02a4 00000000 		.word	trg0
 678 02a8 10E000E0 		.word	-536813552
 679 02ac 9C812142 		.word	1109492124
 680 02b0 30000000 		.word	.LC15
 681 02b4 34000000 		.word	.LC16
 682 02b8 38000000 		.word	.LC17
 683 02bc 40000000 		.word	.LC18
 684 02c0 B4012242 		.word	1109524916
ARM GAS  /tmp/ccpmJ073.s 			page 13


 685 02c4 48000000 		.word	.LC19
 686 02c8 4C000000 		.word	.LC20
 687 02cc 60000000 		.word	.LC21
 688 02d0 00000000 		.word	PutChar
 689 02d4 00440040 		.word	1073759232
 690 02d8 00000000 		.word	p_Fifo1
 691 02dc 20AA4400 		.word	4500000
 692 02e0 2C812142 		.word	1109492012
 693              		.size	minios, .-minios
 694              		.section	.text.startup.main,"ax",%progbits
 695              		.align	1
 696              		.p2align 2,,3
 697              		.global	main
 698              		.syntax unified
 699              		.thumb
 700              		.thumb_func
 701              		.fpu softvfp
 702              		.type	main, %function
 703              	main:
 704              		@ Volatile: function does not return.
 705              		@ args = 0, pretend = 0, frame = 0
 706              		@ frame_needed = 0, uses_anonymous_args = 0
 707              	@ main.c:5648: 	RCC_CR_HSEON_bb = 1;						// enable HSE clock
 708 0000 0121     		movs	r1, #1	@ tmp123,
 709              	@ main.c:228: int main(void){
 710 0002 08B5     		push	{r3, lr}	@
 711              	@ main.c:5648: 	RCC_CR_HSEON_bb = 1;						// enable HSE clock
 712 0004 1B4B     		ldr	r3, .L65	@ tmp122,
 713              	@ main.c:5649: 	while (!RCC_CR_HSERDY_bb);			// wait for stable clock
 714 0006 1C4A     		ldr	r2, .L65+4	@ tmp124,
 715              	@ main.c:5648: 	RCC_CR_HSEON_bb = 1;						// enable HSE clock
 716 0008 1960     		str	r1, [r3]	@ tmp123, MEM[(volatile long unsigned int *)1111621696B]
 717              	.L56:
 718              	@ main.c:5649: 	while (!RCC_CR_HSERDY_bb);			// wait for stable clock
 719 000a 1368     		ldr	r3, [r2]	@ _14, MEM[(volatile long unsigned int *)1111621700B]
 720 000c 002B     		cmp	r3, #0	@ _14
 721 000e FCD0     		beq	.L56	@
 722              	@ main.c:5653: 	RCC_CR_PLLON_bb = 1;						// enable PLL
 723 0010 0124     		movs	r4, #1	@ tmp129,
 724              	@ main.c:5651: 	RCC->CFGR |= ((mul - 2)<<RCC_CFGR_PLLMUL_bit)|RCC_CFGR_PLLSRC|RCC_CFGR_PPRE1_DIV2;	
 725 0012 1A49     		ldr	r1, .L65+8	@ tmp125,
 726              	@ main.c:5653: 	RCC_CR_PLLON_bb = 1;						// enable PLL
 727 0014 1A48     		ldr	r0, .L65+12	@ tmp128,
 728              	@ main.c:5651: 	RCC->CFGR |= ((mul - 2)<<RCC_CFGR_PLLMUL_bit)|RCC_CFGR_PLLSRC|RCC_CFGR_PPRE1_DIV2;	
 729 0016 4B68     		ldr	r3, [r1, #4]	@ _15, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 730              	@ main.c:5654: 	while (!RCC_CR_PLLRDY_bb);			// wait for PLL lock
 731 0018 1A4A     		ldr	r2, .L65+16	@ tmp130,
 732              	@ main.c:5651: 	RCC->CFGR |= ((mul - 2)<<RCC_CFGR_PLLMUL_bit)|RCC_CFGR_PLLSRC|RCC_CFGR_PPRE1_DIV2;	
 733 001a 43F4E813 		orr	r3, r3, #1900544	@ _20, _15,
 734 001e 43F48063 		orr	r3, r3, #1024	@ _20, _20,
 735 0022 4B60     		str	r3, [r1, #4]	@ _20, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 736              	@ main.c:5653: 	RCC_CR_PLLON_bb = 1;						// enable PLL
 737 0024 0460     		str	r4, [r0]	@ tmp129, MEM[(volatile long unsigned int *)1111621728B]
 738              	.L57:
 739              	@ main.c:5654: 	while (!RCC_CR_PLLRDY_bb);			// wait for PLL lock
 740 0026 1368     		ldr	r3, [r2]	@ _21, MEM[(volatile long unsigned int *)1111621732B]
 741 0028 002B     		cmp	r3, #0	@ _21
ARM GAS  /tmp/ccpmJ073.s 			page 14


 742 002a FCD0     		beq	.L57	@
 743              	@ main.c:5656: 	RCC->CFGR |= RCC_CFGR_SW_PLL;		// change SYSCLK to PLL
 744 002c 134B     		ldr	r3, .L65+8	@ tmp131,
 745              	@ main.c:5657: 	while (((RCC->CFGR) & RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);	// wait for switch
 746 002e 1A46     		mov	r2, r3	@ tmp133, tmp131
 747              	@ main.c:5656: 	RCC->CFGR |= RCC_CFGR_SW_PLL;		// change SYSCLK to PLL
 748 0030 5968     		ldr	r1, [r3, #4]	@ _22, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 749 0032 41F00201 		orr	r1, r1, #2	@ _23, _22,
 750 0036 5960     		str	r1, [r3, #4]	@ _23, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 751              	.L58:
 752              	@ main.c:5657: 	while (((RCC->CFGR) & RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);	// wait for switch
 753 0038 5368     		ldr	r3, [r2, #4]	@ _24, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 754 003a 03F00C03 		and	r3, r3, #12	@ tmp134, _24,
 755 003e 082B     		cmp	r3, #8	@ tmp134,
 756 0040 FAD1     		bne	.L58	@,
 757              	@ main.c:5660: 	RCC->APB2ENR = RCC_APB2ENR_IOPAEN | RCC_APB2ENR_IOPBEN | RCC_APB2ENR_IOPCEN | RCC_A
 758 0042 1D20     		movs	r0, #29	@ tmp138,
 759              	@ main.c:187: 	SCB->VTOR = NVIC_VectTab_RAM;
 760 0044 4FF00056 		mov	r6, #536870912	@ tmp136,
 761              	@ main.c:195: 	AFIO->MAPR = AFIO_MAPR_SWJ_CFG_1; // enable pin PA15=JTDI,PB3=JTDO,PB4=JNTRST,
 762 0048 4FF00075 		mov	r5, #33554432	@ tmp140,
 763              	@ main.c:5454: 	SysTick->CTRL = SysTick_CTRL_TICKINT|SysTick_CTRL_ENABLE; // enable SysTick
 764 004c 0321     		movs	r1, #3	@ tmp144,
 765              	@ main.c:187: 	SCB->VTOR = NVIC_VectTab_RAM;
 766 004e 0E4B     		ldr	r3, .L65+20	@ tmp135,
 767              	@ main.c:195: 	AFIO->MAPR = AFIO_MAPR_SWJ_CFG_1; // enable pin PA15=JTDI,PB3=JTDO,PB4=JNTRST,
 768 0050 0E4C     		ldr	r4, .L65+24	@ tmp139,
 769              	@ main.c:187: 	SCB->VTOR = NVIC_VectTab_RAM;
 770 0052 9E60     		str	r6, [r3, #8]	@ tmp136, MEM[(struct SCB_Type *)3758157056B].VTOR
 771              	@ main.c:5660: 	RCC->APB2ENR = RCC_APB2ENR_IOPAEN | RCC_APB2ENR_IOPBEN | RCC_APB2ENR_IOPCEN | RCC_A
 772 0054 9061     		str	r0, [r2, #24]	@ tmp138, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 773              	@ main.c:5453: 	SysTick->LOAD = STCLK_LD - 1;    // 72/8/SysTick_LOAD interrupt every x s
 774 0056 0E48     		ldr	r0, .L65+28	@ tmp142,
 775 0058 A3F54F63 		sub	r3, r3, #3312	@ tmp141, tmp141,
 776              	@ main.c:232: 		 GPIOC->CRH = (GPIOC->CRH & 0xff0fffff) | 0x00100000;	// LED Blue  PC13		
 777 005c 0D4A     		ldr	r2, .L65+32	@ tmp145,
 778              	@ main.c:195: 	AFIO->MAPR = AFIO_MAPR_SWJ_CFG_1; // enable pin PA15=JTDI,PB3=JTDO,PB4=JNTRST,
 779 005e 6560     		str	r5, [r4, #4]	@ tmp140, MEM[(struct AFIO_TypeDef *)1073807360B].MAPR
 780              	@ main.c:5453: 	SysTick->LOAD = STCLK_LD - 1;    // 72/8/SysTick_LOAD interrupt every x s
 781 0060 5860     		str	r0, [r3, #4]	@ tmp142, MEM[(struct SysTick_Type *)3758153744B].LOAD
 782              	@ main.c:5454: 	SysTick->CTRL = SysTick_CTRL_TICKINT|SysTick_CTRL_ENABLE; // enable SysTick
 783 0062 1960     		str	r1, [r3]	@ tmp144, MEM[(struct SysTick_Type *)3758153744B].CTRL
 784              	@ main.c:232: 		 GPIOC->CRH = (GPIOC->CRH & 0xff0fffff) | 0x00100000;	// LED Blue  PC13		
 785 0064 5368     		ldr	r3, [r2, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 786 0066 23F47003 		bic	r3, r3, #15728640	@ tmp146, _1,
 787 006a 43F48013 		orr	r3, r3, #1048576	@ _3, tmp146,
 788 006e 5360     		str	r3, [r2, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 789              	@ main.c:243: 		minios();
 790 0070 FFF7FEFF 		bl	minios	@
 791              	.L66:
 792              		.align	2
 793              	.L65:
 794 0074 40004242 		.word	1111621696
 795 0078 44004242 		.word	1111621700
 796 007c 00100240 		.word	1073876992
 797 0080 60004242 		.word	1111621728
 798 0084 64004242 		.word	1111621732
ARM GAS  /tmp/ccpmJ073.s 			page 15


 799 0088 00ED00E0 		.word	-536810240
 800 008c 00000140 		.word	1073807360
 801 0090 3F548900 		.word	8999999
 802 0094 00100140 		.word	1073811456
 803              		.size	main, .-main
 804              		.section	.text.liontrend,"ax",%progbits
 805              		.align	1
 806              		.p2align 2,,3
 807              		.global	liontrend
 808              		.syntax unified
 809              		.thumb
 810              		.thumb_func
 811              		.fpu softvfp
 812              		.type	liontrend, %function
 813              	liontrend:
 814              		@ args = 0, pretend = 0, frame = 0
 815              		@ frame_needed = 0, uses_anonymous_args = 0
 816 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}	@
 817              	@ main.c:349: 		v[6] = (100*(v[0]-v[1]))/(v[2]-v[3]); //a=(y2-y1)/(x2-x1)
 818 0004 6423     		movs	r3, #100	@ tmp194,
 819 0006 B0F90060 		ldrsh	r6, [r0]	@ _1, *v_82(D)
 820 000a B0F902E0 		ldrsh	lr, [r0, #2]	@ _3, MEM[(s16 *)v_82(D) + 2B]
 821 000e B0F90440 		ldrsh	r4, [r0, #4]	@ _8, MEM[(s16 *)v_82(D) + 4B]
 822 0012 A6EB0E0C 		sub	ip, r6, lr	@ tmp192, _1, _3
 823 0016 03FB0CFC 		mul	ip, r3, ip	@ tmp193, tmp194, tmp192
 824 001a B0F90620 		ldrsh	r2, [r0, #6]	@ _10, MEM[(s16 *)v_82(D) + 6B]
 825              	@ main.c:347: void liontrend(s16 v[],s16 c[]){
 826 001e 0546     		mov	r5, r0	@ v, v
 827              	@ main.c:349: 		v[6] = (100*(v[0]-v[1]))/(v[2]-v[3]); //a=(y2-y1)/(x2-x1)
 828 0020 A01A     		subs	r0, r4, r2	@ tmp195, _8, _10
 829 0022 9CFBF0FC 		sdiv	ip, ip, r0	@ tmp197, tmp193, tmp195
 830 0026 0FFA8CFC 		sxth	ip, ip	@ _13, tmp197
 831              	@ main.c:350: 		v[5] = v[0]-v[6]*v[2]/100;  //b=y-ax
 832 002a 0CFB04F4 		mul	r4, ip, r4	@ tmp199, _13, _8
 833 002e 3D4F     		ldr	r7, .L69	@ tmp202,
 834              	@ main.c:351: 		v[4] = v[1]-v[6]*v[3]/100;  //b=y-ax;
 835 0030 0CFB02F2 		mul	r2, ip, r2	@ tmp209, _13, _10
 836              	@ main.c:350: 		v[5] = v[0]-v[6]*v[2]/100;  //b=y-ax
 837 0034 87FB0408 		smull	r0, r8, r7, r4	@ tmp275, tmp201, tmp202, tmp199
 838 0038 E017     		asrs	r0, r4, #31	@ tmp204, tmp199,
 839 003a A0EB6810 		sub	r0, r0, r8, asr #5	@ tmp200, tmp204, tmp201,
 840 003e 3044     		add	r0, r0, r6	@ tmp207, _1
 841 0040 00B2     		sxth	r0, r0	@ _20, tmp207
 842              	@ main.c:352: 		v[7] = 100*(339-v[5])/v[6]; //x=(y-b)/a
 843 0042 C0F5A974 		rsb	r4, r0, #338	@ tmp220, _20,
 844 0046 0134     		adds	r4, r4, #1	@ tmp220, tmp220,
 845 0048 03FB04F4 		mul	r4, r3, r4	@ tmp221, tmp194, tmp220
 846 004c 94FBFCF4 		sdiv	r4, r4, ip	@ tmp224, tmp221, _13
 847              	@ main.c:347: void liontrend(s16 v[],s16 c[]){
 848 0050 0E46     		mov	r6, r1	@ c, c
 849              	@ main.c:351: 		v[4] = v[1]-v[6]*v[3]/100;  //b=y-ax;
 850 0052 87FB0281 		smull	r8, r1, r7, r2	@ tmp276, tmp211, tmp202, tmp209
 851 0056 D217     		asrs	r2, r2, #31	@ tmp214, tmp209,
 852 0058 A2EB6112 		sub	r2, r2, r1, asr #5	@ tmp210, tmp214, tmp211,
 853 005c 7244     		add	r2, r2, lr	@ tmp217, _3
 854 005e 2A81     		strh	r2, [r5, #8]	@ movhi	@ tmp217, MEM[(s16 *)v_82(D) + 8B]
 855              	@ main.c:350: 		v[5] = v[0]-v[6]*v[2]/100;  //b=y-ax
ARM GAS  /tmp/ccpmJ073.s 			page 16


 856 0060 6881     		strh	r0, [r5, #10]	@ movhi	@ _20, MEM[(s16 *)v_82(D) + 10B]
 857              	@ main.c:352: 		v[7] = 100*(339-v[5])/v[6]; //x=(y-b)/a
 858 0062 EC81     		strh	r4, [r5, #14]	@ movhi	@ tmp224, MEM[(s16 *)v_82(D) + 14B]
 859              	@ main.c:349: 		v[6] = (100*(v[0]-v[1]))/(v[2]-v[3]); //a=(y2-y1)/(x2-x1)
 860 0064 A5F80CC0 		strh	ip, [r5, #12]	@ movhi	@ _13, MEM[(s16 *)v_82(D) + 12B]
 861              	@ main.c:354: 		c[6] = (100*(c[0]-c[1]))/(c[2]-c[3]);
 862 0068 B6F900E0 		ldrsh	lr, [r6]	@ _32, *c_87(D)
 863 006c B6F902C0 		ldrsh	ip, [r6, #2]	@ _34, MEM[(s16 *)c_87(D) + 2B]
 864 0070 B6F90440 		ldrsh	r4, [r6, #4]	@ _39, MEM[(s16 *)c_87(D) + 4B]
 865 0074 AEEB0C02 		sub	r2, lr, ip	@ tmp226, _32, _34
 866 0078 03FB02F3 		mul	r3, r3, r2	@ tmp227, tmp194, tmp226
 867 007c B6F90610 		ldrsh	r1, [r6, #6]	@ _41, MEM[(s16 *)c_87(D) + 6B]
 868              	@ main.c:359: 		UaPutS("v="); sint2uart(v[6]); sint2uart(v[5]); sint2uart(v[4]); sint2uart(v[7]); U
 869 0080 2948     		ldr	r0, .L69+4	@,
 870              	@ main.c:354: 		c[6] = (100*(c[0]-c[1]))/(c[2]-c[3]);
 871 0082 621A     		subs	r2, r4, r1	@ tmp229, _39, _41
 872 0084 93FBF2F3 		sdiv	r3, r3, r2	@ tmp231, tmp227, tmp229
 873 0088 1BB2     		sxth	r3, r3	@ _44, tmp231
 874              	@ main.c:355: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 875 008a 03FB04F4 		mul	r4, r3, r4	@ tmp233, _44, _39
 876              	@ main.c:356: 		c[4] = c[1]-c[6]*c[3]/100;//y-ax
 877 008e 03FB01F1 		mul	r1, r3, r1	@ tmp243, _44, _41
 878              	@ main.c:355: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 879 0092 87FB0429 		smull	r2, r9, r7, r4	@ tmp277, tmp235, tmp202, tmp233
 880              	@ main.c:356: 		c[4] = c[1]-c[6]*c[3]/100;//y-ax
 881 0096 87FB0128 		smull	r2, r8, r7, r1	@ tmp278, tmp245, tmp202, tmp243
 882              	@ main.c:355: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 883 009a E217     		asrs	r2, r4, #31	@ tmp238, tmp233,
 884 009c A2EB6912 		sub	r2, r2, r9, asr #5	@ tmp234, tmp238, tmp235,
 885              	@ main.c:356: 		c[4] = c[1]-c[6]*c[3]/100;//y-ax
 886 00a0 C917     		asrs	r1, r1, #31	@ tmp248, tmp243,
 887              	@ main.c:355: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 888 00a2 7244     		add	r2, r2, lr	@ tmp241, _32
 889              	@ main.c:356: 		c[4] = c[1]-c[6]*c[3]/100;//y-ax
 890 00a4 A1EB6811 		sub	r1, r1, r8, asr #5	@ tmp244, tmp248, tmp245,
 891 00a8 6144     		add	r1, r1, ip	@ tmp251, _34
 892              	@ main.c:355: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 893 00aa 92B2     		uxth	r2, r2	@ _50, tmp241
 894              	@ main.c:354: 		c[6] = (100*(c[0]-c[1]))/(c[2]-c[3]);
 895 00ac B381     		strh	r3, [r6, #12]	@ movhi	@ _44, MEM[(s16 *)c_87(D) + 12B]
 896              	@ main.c:355: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 897 00ae 7281     		strh	r2, [r6, #10]	@ movhi	@ _50, MEM[(s16 *)c_87(D) + 10B]
 898              	@ main.c:356: 		c[4] = c[1]-c[6]*c[3]/100;//y-ax
 899 00b0 3181     		strh	r1, [r6, #8]	@ movhi	@ tmp251, MEM[(s16 *)c_87(D) + 8B]
 900              	@ main.c:357: 		c[7] = c[5]+c[6]*v[7]/100;// szukana pojemnosc
 901 00b2 B5F90E10 		ldrsh	r1, [r5, #14]	@ MEM[(s16 *)v_82(D) + 14B], MEM[(s16 *)v_82(D) + 14B]
 902              	@ main.c:359: 		UaPutS("v="); sint2uart(v[6]); sint2uart(v[5]); sint2uart(v[4]); sint2uart(v[7]); U
 903 00b6 1D4C     		ldr	r4, .L69+8	@ tmp268,
 904              	@ main.c:357: 		c[7] = c[5]+c[6]*v[7]/100;// szukana pojemnosc
 905 00b8 03FB01F3 		mul	r3, r3, r1	@ tmp254, _44, MEM[(s16 *)v_82(D) + 14B]
 906 00bc 87FB0317 		smull	r1, r7, r7, r3	@ tmp279, tmp256, tmp202, tmp254
 907 00c0 DB17     		asrs	r3, r3, #31	@ tmp259, tmp254,
 908 00c2 C3EB6713 		rsb	r3, r3, r7, asr #5	@ tmp255, tmp259, tmp256,
 909 00c6 1A44     		add	r2, r2, r3	@ tmp261, tmp255
 910 00c8 F281     		strh	r2, [r6, #14]	@ movhi	@ tmp261, MEM[(s16 *)c_87(D) + 14B]
 911              	@ main.c:359: 		UaPutS("v="); sint2uart(v[6]); sint2uart(v[5]); sint2uart(v[4]); sint2uart(v[7]); U
 912 00ca FFF7FEFF 		bl	UaPutS	@
ARM GAS  /tmp/ccpmJ073.s 			page 17


 913 00ce B5F90C00 		ldrsh	r0, [r5, #12]	@, MEM[(s16 *)v_82(D) + 12B]
 914 00d2 FFF7FEFF 		bl	sint2uart	@
 915 00d6 B5F90A00 		ldrsh	r0, [r5, #10]	@, MEM[(s16 *)v_82(D) + 10B]
 916 00da FFF7FEFF 		bl	sint2uart	@
 917 00de B5F90800 		ldrsh	r0, [r5, #8]	@, MEM[(s16 *)v_82(D) + 8B]
 918 00e2 FFF7FEFF 		bl	sint2uart	@
 919 00e6 B5F90E00 		ldrsh	r0, [r5, #14]	@, MEM[(s16 *)v_82(D) + 14B]
 920 00ea FFF7FEFF 		bl	sint2uart	@
 921 00ee 2046     		mov	r0, r4	@, tmp268
 922 00f0 FFF7FEFF 		bl	UaPutS	@
 923              	@ main.c:360: 		UaPutS("c="); sint2uart(c[6]); sint2uart(c[5]); sint2uart(c[4]); sint2uart(c[7]); U
 924 00f4 0E48     		ldr	r0, .L69+12	@,
 925 00f6 FFF7FEFF 		bl	UaPutS	@
 926 00fa B6F90C00 		ldrsh	r0, [r6, #12]	@, MEM[(s16 *)c_87(D) + 12B]
 927 00fe FFF7FEFF 		bl	sint2uart	@
 928 0102 B6F90A00 		ldrsh	r0, [r6, #10]	@, MEM[(s16 *)c_87(D) + 10B]
 929 0106 FFF7FEFF 		bl	sint2uart	@
 930 010a B6F90800 		ldrsh	r0, [r6, #8]	@, MEM[(s16 *)c_87(D) + 8B]
 931 010e FFF7FEFF 		bl	sint2uart	@
 932 0112 B6F90E00 		ldrsh	r0, [r6, #14]	@, MEM[(s16 *)c_87(D) + 14B]
 933 0116 FFF7FEFF 		bl	sint2uart	@
 934 011a 2046     		mov	r0, r4	@, tmp268
 935              	@ main.c:361: 	}
 936 011c BDE8F843 		pop	{r3, r4, r5, r6, r7, r8, r9, lr}	@
 937              	@ main.c:360: 		UaPutS("c="); sint2uart(c[6]); sint2uart(c[5]); sint2uart(c[4]); sint2uart(c[7]); U
 938 0120 FFF7FEBF 		b	UaPutS	@
 939              	.L70:
 940              		.align	2
 941              	.L69:
 942 0124 1F85EB51 		.word	1374389535
 943 0128 00000000 		.word	.LC22
 944 012c 48000000 		.word	.LC19
 945 0130 04000000 		.word	.LC23
 946              		.size	liontrend, .-liontrend
 947              		.section	.text.oblicz,"ax",%progbits
 948              		.align	1
 949              		.p2align 2,,3
 950              		.global	oblicz
 951              		.syntax unified
 952              		.thumb
 953              		.thumb_func
 954              		.fpu softvfp
 955              		.type	oblicz, %function
 956              	oblicz:
 957              		@ Volatile: function does not return.
 958              		@ args = 0, pretend = 0, frame = 80
 959              		@ frame_needed = 0, uses_anonymous_args = 0
 960              	@ main.c:5361: 	USART1->BRR = (F_CPU+UART1_SPEED/2)/UART1_SPEED;
 961 0000 40F27126 		movw	r6, #625	@ tmp141,
 962              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 963 0004 2025     		movs	r5, #32	@ tmp143,
 964              	@ main.c:362: void oblicz(void){
 965 0006 80B5     		push	{r7, lr}	@
 966 0008 94B0     		sub	sp, sp, #80	@,,
 967              	@ main.c:364: 		BkpRegInit();
 968 000a FFF7FEFF 		bl	BkpRegInit	@
 969              	@ main.c:370: 		PB12_o = 0;		// rozladowanie
ARM GAS  /tmp/ccpmJ073.s 			page 18


 970 000e 0022     		movs	r2, #0	@ tmp150,
 971              	@ main.c:372: 		PB14_o = 1;   // dzwonek
 972 0010 0121     		movs	r1, #1	@ tmp154,
 973              	@ main.c:5358: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 974 0012 324F     		ldr	r7, .L74	@ tmp126,
 975              	@ main.c:5359: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 976 0014 3248     		ldr	r0, .L74+4	@ tmp128,
 977              	@ main.c:5358: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 978 0016 BB69     		ldr	r3, [r7, #24]	@ _28, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 979              	@ main.c:5360: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 980 0018 324C     		ldr	r4, .L74+8	@ tmp131,
 981              	@ main.c:5358: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 982 001a 43F48043 		orr	r3, r3, #16384	@ _29, _28,
 983 001e BB61     		str	r3, [r7, #24]	@ _29, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 984              	@ main.c:5359: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 985 0020 4368     		ldr	r3, [r0, #4]	@ _30, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 986              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 987 0022 314F     		ldr	r7, .L74+12	@ tmp142,
 988              	@ main.c:5359: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 989 0024 23F47F63 		bic	r3, r3, #4080	@ tmp129, _30,
 990 0028 43F49263 		orr	r3, r3, #1168	@ _32, tmp129,
 991 002c 4360     		str	r3, [r0, #4]	@ _32, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 992              	@ main.c:5360: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 993 002e A389     		ldrh	r3, [r4, #12]	@, MEM[(struct USART_TypeDef *)1073821696B].CR1
 994              	@ main.c:370: 		PB12_o = 0;		// rozladowanie
 995 0030 DFF8D8C0 		ldr	ip, .L74+48	@ tmp149,
 996              	@ main.c:5360: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 997 0034 43F40053 		orr	r3, r3, #8192	@ _34, MEM[(struct USART_TypeDef *)1073821696B].CR1,
 998 0038 43F02C03 		orr	r3, r3, #44	@ _34, _34,
 999 003c A381     		strh	r3, [r4, #12]	@ movhi	@ _34, MEM[(struct USART_TypeDef *)1073821696B].CR1
 1000              	@ main.c:5361: 	USART1->BRR = (F_CPU+UART1_SPEED/2)/UART1_SPEED;
 1001 003e 2681     		strh	r6, [r4, #8]	@ movhi	@ tmp141, MEM[(struct USART_TypeDef *)1073821696B].BRR
 1002              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 1003 0040 7D60     		str	r5, [r7, #4]	@ tmp143, MEM[(struct NVIC_Type *)3758153984B].ISER
 1004              	@ main.c:368: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 1005 0042 D0F80434 		ldr	r3, [r0, #1028]	@ _1, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 1006              	@ main.c:371: 		PB13_o = 0;   // ladowanie
 1007 0046 294F     		ldr	r7, .L74+16	@ tmp151,
 1008              	@ main.c:368: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 1009 0048 23F07F63 		bic	r3, r3, #267386880	@ tmp145, _1,
 1010 004c 23F47023 		bic	r3, r3, #983040	@ tmp145, tmp145,
 1011 0050 43F0AA63 		orr	r3, r3, #89128960	@ _3, tmp145,
 1012              	@ main.c:372: 		PB14_o = 1;   // dzwonek
 1013 0054 264E     		ldr	r6, .L74+20	@ tmp153,
 1014              	@ main.c:368: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 1015 0056 43F4A023 		orr	r3, r3, #327680	@ _3, _3,
 1016 005a C0F80434 		str	r3, [r0, #1028]	@ _3, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 1017              	@ main.c:374: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 1018 005e 254D     		ldr	r5, .L74+24	@ tmp155,
 1019 0060 254B     		ldr	r3, .L74+28	@ tmp156,
 1020              	@ main.c:370: 		PB12_o = 0;		// rozladowanie
 1021 0062 CCF80020 		str	r2, [ip]	@ tmp150, MEM[(volatile long unsigned int *)1109492144B]
 1022              	@ main.c:374: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 1023 0066 0320     		movs	r0, #3	@,
 1024              	@ main.c:371: 		PB13_o = 0;   // ladowanie
 1025 0068 3A60     		str	r2, [r7]	@ tmp150, MEM[(volatile long unsigned int *)1109492148B]
 1026              	@ main.c:372: 		PB14_o = 1;   // dzwonek
ARM GAS  /tmp/ccpmJ073.s 			page 19


 1027 006a 3160     		str	r1, [r6]	@ tmp154, MEM[(volatile long unsigned int *)1109492152B]
 1028              	@ main.c:374: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 1029 006c 2B60     		str	r3, [r5]	@ tmp156, PutChar
 1030 006e FFF7FEFF 		bl	tr_pen_color	@
 1031              	@ main.c:375: 		UaPutS("\f UART1 "); UaPutS (uint2str( (F_CPU/1)/(1*USART1->BRR-1),buf));	
 1032 0072 2248     		ldr	r0, .L74+32	@,
 1033 0074 FFF7FEFF 		bl	UaPutS	@
 1034 0078 2389     		ldrh	r3, [r4, #8]	@, MEM[(struct USART_TypeDef *)1073821696B].BRR
 1035 007a 2148     		ldr	r0, .L74+36	@ tmp165,
 1036 007c 013B     		subs	r3, r3, #1	@ tmp162, MEM[(struct USART_TypeDef *)1073821696B].BRR,
 1037 007e B0FBF3F0 		udiv	r0, r0, r3	@, tmp165, tmp162
 1038 0082 01A9     		add	r1, sp, #4	@,,
 1039 0084 FFF7FEFF 		bl	uint2str	@
 1040              	@ main.c:379: 		s16 v[8]={365,356,0, 30,0,0,0,0};
 1041 0088 1E4C     		ldr	r4, .L74+40	@ tmp167,
 1042              	@ main.c:375: 		UaPutS("\f UART1 "); UaPutS (uint2str( (F_CPU/1)/(1*USART1->BRR-1),buf));	
 1043 008a FFF7FEFF 		bl	UaPutS	@
 1044              	@ main.c:376: 		UaPutS (" b/s \r\n");
 1045 008e 1E48     		ldr	r0, .L74+44	@,
 1046 0090 FFF7FEFF 		bl	UaPutS	@
 1047              	@ main.c:379: 		s16 v[8]={365,356,0, 30,0,0,0,0};
 1048 0094 94E80F00 		ldm	r4, {r0, r1, r2, r3}	@ tmp167,,,,
 1049              	@ main.c:380: 		s16 c[8]={2000 ,6400 ,0, 30,0,0,0,0};
 1050 0098 04F11005 		add	r5, r4, #16	@ tmp172, tmp167,
 1051 009c 0DF1200C 		add	ip, sp, #32	@ tmp171,,
 1052              	@ main.c:382: 		s16 a[8]={342,336,0,2,0,0,0,0};
 1053 00a0 04F12006 		add	r6, r4, #32	@ tmp175, tmp167,
 1054              	@ main.c:379: 		s16 v[8]={365,356,0, 30,0,0,0,0};
 1055 00a4 04AF     		add	r7, sp, #16	@ tmp168,,
 1056 00a6 87E80F00 		stm	r7, {r0, r1, r2, r3}	@ tmp168,,,,
 1057              	@ main.c:380: 		s16 c[8]={2000 ,6400 ,0, 30,0,0,0,0};
 1058 00aa 95E80F00 		ldm	r5, {r0, r1, r2, r3}	@ tmp172,,,,
 1059              	@ main.c:383: 		s16 b[8]={114,263,0,2,0,0,0,0};
 1060 00ae 3034     		adds	r4, r4, #48	@ tmp178, tmp167,
 1061              	@ main.c:382: 		s16 a[8]={342,336,0,2,0,0,0,0};
 1062 00b0 0CAD     		add	r5, sp, #48	@ tmp174,,
 1063              	@ main.c:380: 		s16 c[8]={2000 ,6400 ,0, 30,0,0,0,0};
 1064 00b2 8CE80F00 		stm	ip, {r0, r1, r2, r3}	@ tmp171,,,,
 1065              	@ main.c:382: 		s16 a[8]={342,336,0,2,0,0,0,0};
 1066 00b6 96E80F00 		ldm	r6, {r0, r1, r2, r3}	@ tmp175,,,,
 1067              	@ main.c:383: 		s16 b[8]={114,263,0,2,0,0,0,0};
 1068 00ba 10AE     		add	r6, sp, #64	@ tmp177,,
 1069              	@ main.c:382: 		s16 a[8]={342,336,0,2,0,0,0,0};
 1070 00bc 85E80F00 		stm	r5, {r0, r1, r2, r3}	@ tmp174,,,,
 1071              	@ main.c:383: 		s16 b[8]={114,263,0,2,0,0,0,0};
 1072 00c0 94E80F00 		ldm	r4, {r0, r1, r2, r3}	@ tmp178,,,,
 1073 00c4 86E80F00 		stm	r6, {r0, r1, r2, r3}	@ tmp177,,,,
 1074              	@ main.c:385: 		liontrend(v,c);
 1075 00c8 6146     		mov	r1, ip	@, tmp171
 1076 00ca 3846     		mov	r0, r7	@, tmp168
 1077 00cc FFF7FEFF 		bl	liontrend	@
 1078              	@ main.c:386: 		liontrend(a,b);
 1079 00d0 3146     		mov	r1, r6	@, tmp177
 1080 00d2 2846     		mov	r0, r5	@, tmp174
 1081 00d4 FFF7FEFF 		bl	liontrend	@
 1082              	.L72:
 1083 00d8 FEE7     		b	.L72	@
ARM GAS  /tmp/ccpmJ073.s 			page 20


 1084              	.L75:
 1085 00da 00BF     		.align	2
 1086              	.L74:
 1087 00dc 00100240 		.word	1073876992
 1088 00e0 00080140 		.word	1073809408
 1089 00e4 00380140 		.word	1073821696
 1090 00e8 00E100E0 		.word	-536813312
 1091 00ec B4812142 		.word	1109492148
 1092 00f0 B8812142 		.word	1109492152
 1093 00f4 00000000 		.word	PutChar
 1094 00f8 00000000 		.word	UART1_putc
 1095 00fc 00000000 		.word	.LC10
 1096 0100 00A24A04 		.word	72000000
 1097 0104 00000000 		.word	.LANCHOR1
 1098 0108 0C000000 		.word	.LC11
 1099 010c B0812142 		.word	1109492144
 1100              		.size	oblicz, .-oblicz
 1101              		.section	.text.lion_updown,"ax",%progbits
 1102              		.align	1
 1103              		.p2align 2,,3
 1104              		.global	lion_updown
 1105              		.syntax unified
 1106              		.thumb
 1107              		.thumb_func
 1108              		.fpu softvfp
 1109              		.type	lion_updown, %function
 1110              	lion_updown:
 1111              		@ args = 0, pretend = 0, frame = 32
 1112              		@ frame_needed = 0, uses_anonymous_args = 0
 1113 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 1114 0004 89B0     		sub	sp, sp, #36	@,,
 1115              	@ main.c:399: 		BkpRegInit();
 1116 0006 FFF7FEFF 		bl	BkpRegInit	@
 1117              	@ main.c:5360: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 1118 000a 42F22C02 		movw	r2, #8236	@ tmp237,
 1119              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 1120 000e 4FF0200E 		mov	lr, #32	@ tmp245,
 1121              	@ main.c:5361: 	USART1->BRR = (F_CPU+UART1_SPEED/2)/UART1_SPEED;
 1122 0012 40F27128 		movw	r8, #625	@ tmp243,
 1123              	@ main.c:5368: 	USART2->BRR = ((F_CPU+UART2_SPEED/2)/UART2_SPEED)/2;
 1124 0016 4FF49C76 		mov	r6, #312	@ tmp261,
 1125              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 1126 001a 4025     		movs	r5, #64	@ tmp263,
 1127              	@ main.c:5358: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 1128 001c DFF800C3 		ldr	ip, .L102+92	@ tmp228,
 1129              	@ main.c:5359: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 1130 0020 A848     		ldr	r0, .L102	@ tmp230,
 1131              	@ main.c:5358: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 1132 0022 DCF81830 		ldr	r3, [ip, #24]	@ _203, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 1133              	@ main.c:5360: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 1134 0026 A84C     		ldr	r4, .L102+4	@ tmp233,
 1135              	@ main.c:5358: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 1136 0028 43F48043 		orr	r3, r3, #16384	@ _204, _203,
 1137 002c CCF81830 		str	r3, [ip, #24]	@ _204, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 1138              	@ main.c:5359: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 1139 0030 4368     		ldr	r3, [r0, #4]	@ _205, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 1140              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
ARM GAS  /tmp/ccpmJ073.s 			page 21


 1141 0032 A649     		ldr	r1, .L102+8	@ tmp244,
 1142              	@ main.c:5359: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 1143 0034 23F47F63 		bic	r3, r3, #4080	@ tmp231, _205,
 1144 0038 43F49263 		orr	r3, r3, #1168	@ _207, tmp231,
 1145 003c 4360     		str	r3, [r0, #4]	@ _207, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 1146              	@ main.c:5360: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 1147 003e A389     		ldrh	r3, [r4, #12]	@, MEM[(struct USART_TypeDef *)1073821696B].CR1
 1148              	@ main.c:5367: 	USART2->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 1149 0040 A34F     		ldr	r7, .L102+12	@ tmp251,
 1150              	@ main.c:5360: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 1151 0042 1343     		orrs	r3, r3, r2	@, _209, MEM[(struct USART_TypeDef *)1073821696B].CR1, tmp237
 1152 0044 A381     		strh	r3, [r4, #12]	@ movhi	@ _209, MEM[(struct USART_TypeDef *)1073821696B].CR1
 1153              	@ main.c:5361: 	USART1->BRR = (F_CPU+UART1_SPEED/2)/UART1_SPEED;
 1154 0046 A4F80880 		strh	r8, [r4, #8]	@ movhi	@ tmp243, MEM[(struct USART_TypeDef *)1073821696B].BRR
 1155              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 1156 004a C1F804E0 		str	lr, [r1, #4]	@ tmp245, MEM[(struct NVIC_Type *)3758153984B].ISER
 1157              	@ main.c:5365: 	RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 1158 004e DCF81C30 		ldr	r3, [ip, #28]	@ _196, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 1159 0052 DFF8D092 		ldr	r9, .L102+96	@ tmp510,
 1160 0056 43F40033 		orr	r3, r3, #131072	@ _197, _196,
 1161 005a CCF81C30 		str	r3, [ip, #28]	@ _197, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 1162              	@ main.c:5366: 	GPIOA->CRL = (GPIOA->CRL & 0xffff00ff) | 0x00004900; // PA2=TX, PA3=RX 
 1163 005e 0368     		ldr	r3, [r0]	@ _198, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 1164 0060 DFF8C482 		ldr	r8, .L102+100	@ tmp503,
 1165 0064 23F47F43 		bic	r3, r3, #65280	@ tmp249, _198,
 1166 0068 43F49243 		orr	r3, r3, #18688	@ _200, tmp249,
 1167 006c 0360     		str	r3, [r0]	@ _200, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 1168              	@ main.c:5367: 	USART2->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 1169 006e BB89     		ldrh	r3, [r7, #12]	@, MEM[(struct USART_TypeDef *)1073759232B].CR1
 1170              	@ main.c:408: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 1171 0070 0320     		movs	r0, #3	@,
 1172              	@ main.c:5367: 	USART2->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 1173 0072 1A43     		orrs	r2, r2, r3	@, _202, tmp237, MEM[(struct USART_TypeDef *)1073759232B].CR1
 1174 0074 BA81     		strh	r2, [r7, #12]	@ movhi	@ _202, MEM[(struct USART_TypeDef *)1073759232B].CR1
 1175              	@ main.c:408: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 1176 0076 974B     		ldr	r3, .L102+16	@ tmp522,
 1177 0078 974A     		ldr	r2, .L102+20	@ tmp523,
 1178              	@ main.c:5368: 	USART2->BRR = ((F_CPU+UART2_SPEED/2)/UART2_SPEED)/2;
 1179 007a 3E81     		strh	r6, [r7, #8]	@ movhi	@ tmp261, MEM[(struct USART_TypeDef *)1073759232B].BRR
 1180              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 1181 007c 4D60     		str	r5, [r1, #4]	@ tmp263, MEM[(struct NVIC_Type *)3758153984B].ISER
 1182              	@ main.c:408: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 1183 007e 1A60     		str	r2, [r3]	@ tmp523, PutChar
 1184 0080 FFF7FEFF 		bl	tr_pen_color	@
 1185              	@ main.c:409: 		UaPutS("\f UART1 "); UaPutS (uint2str( (F_CPU/1)/(1*USART1->BRR-1),buf));	
 1186 0084 9548     		ldr	r0, .L102+24	@,
 1187 0086 FFF7FEFF 		bl	UaPutS	@
 1188 008a 2389     		ldrh	r3, [r4, #8]	@, MEM[(struct USART_TypeDef *)1073821696B].BRR
 1189 008c 9448     		ldr	r0, .L102+28	@ tmp274,
 1190 008e 013B     		subs	r3, r3, #1	@ tmp271, MEM[(struct USART_TypeDef *)1073821696B].BRR,
 1191 0090 B0FBF3F0 		udiv	r0, r0, r3	@, tmp274, tmp271
 1192 0094 05A9     		add	r1, sp, #20	@,,
 1193 0096 FFF7FEFF 		bl	uint2str	@
 1194 009a FFF7FEFF 		bl	UaPutS	@
 1195              	@ main.c:410: 		UaPutS (" b/s \r\n");
 1196 009e 9148     		ldr	r0, .L102+32	@,
 1197 00a0 FFF7FEFF 		bl	UaPutS	@
ARM GAS  /tmp/ccpmJ073.s 			page 22


 1198              	@ main.c:432: 		i2weg[0]=0;    // Register
 1199 00a4 4FF4F854 		mov	r4, #7936	@ tmp277,
 1200              	@ main.c:430: 		i2c1r_init();
 1201 00a8 FFF7FEFF 		bl	i2c1r_init	@
 1202              	@ main.c:433: 		i2weg[1]=0x1f; // MSB Data
 1203 00ac 7723     		movs	r3, #119	@ tmp278,
 1204              	@ main.c:435: 		i2c1_write(INA219_ADDR,i2weg,3);
 1205 00ae 04A9     		add	r1, sp, #16	@ tmp524,,
 1206 00b0 0322     		movs	r2, #3	@,
 1207 00b2 8020     		movs	r0, #128	@,
 1208              	@ main.c:432: 		i2weg[0]=0;    // Register
 1209 00b4 ADF81040 		strh	r4, [sp, #16]	@ movhi	@ tmp277, MEM[(u08[3] *)&i2weg]
 1210              	@ main.c:433: 		i2weg[1]=0x1f; // MSB Data
 1211 00b8 8DF81230 		strb	r3, [sp, #18]	@ tmp278, MEM[(u08[3] *)&i2weg + 2B]
 1212              	@ main.c:437: 		i2weg[0]=5;    // Register
 1213 00bc 40F20514 		movw	r4, #261	@ tmp282,
 1214              	@ main.c:435: 		i2c1_write(INA219_ADDR,i2weg,3);
 1215 00c0 FFF7FEFF 		bl	i2c1_write	@
 1216              	@ main.c:438: 		i2weg[1]=0x1; // MSB Data
 1217 00c4 9523     		movs	r3, #149	@ tmp283,
 1218              	@ main.c:440: 		i2c1_write(INA219_ADDR,i2weg,3);
 1219 00c6 04A9     		add	r1, sp, #16	@ tmp525,,
 1220 00c8 0322     		movs	r2, #3	@,
 1221 00ca 8020     		movs	r0, #128	@,
 1222              	@ main.c:437: 		i2weg[0]=5;    // Register
 1223 00cc ADF81040 		strh	r4, [sp, #16]	@ movhi	@ tmp282, MEM[(u08[3] *)&i2weg]
 1224              	@ main.c:438: 		i2weg[1]=0x1; // MSB Data
 1225 00d0 8DF81230 		strb	r3, [sp, #18]	@ tmp283, MEM[(u08[3] *)&i2weg + 2B]
 1226              	@ main.c:440: 		i2c1_write(INA219_ADDR,i2weg,3);
 1227 00d4 FFF7FEFF 		bl	i2c1_write	@
 1228              	@ main.c:442: 		i2c1_read (INA219_ADDR,0,i2reg,2);
 1229 00d8 03AA     		add	r2, sp, #12	@ tmp526,,
 1230 00da 0223     		movs	r3, #2	@,
 1231 00dc 0021     		movs	r1, #0	@,
 1232 00de 8020     		movs	r0, #128	@,
 1233 00e0 FFF7FEFF 		bl	i2c1_read	@
 1234              	@ main.c:449: 		PB12_o = 0;		// rozladowanie
 1235 00e4 0022     		movs	r2, #0	@ tmp293,
 1236              	@ main.c:451: 		PB14_o = 1;   // dzwonek
 1237 00e6 0120     		movs	r0, #1	@ tmp297,
 1238              	@ main.c:447: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 1239 00e8 7F4D     		ldr	r5, .L102+36	@ tmp287,
 1240              	@ main.c:451: 		PB14_o = 1;   // dzwonek
 1241 00ea 8049     		ldr	r1, .L102+40	@ tmp296,
 1242              	@ main.c:447: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 1243 00ec 6B68     		ldr	r3, [r5, #4]	@ _7, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 1244              	@ main.c:449: 		PB12_o = 0;		// rozladowanie
 1245 00ee 804F     		ldr	r7, .L102+44	@ tmp292,
 1246              	@ main.c:447: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 1247 00f0 23F07F63 		bic	r3, r3, #267386880	@ tmp288, _7,
 1248 00f4 23F47023 		bic	r3, r3, #983040	@ tmp288, tmp288,
 1249              	@ main.c:450: 		PB13_o = 0;   // ladowanie
 1250 00f8 DFF80CC2 		ldr	ip, .L102+68	@ tmp294,
 1251              	@ main.c:447: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 1252 00fc 43F0AA63 		orr	r3, r3, #89128960	@ _9, tmp288,
 1253 0100 43F4A023 		orr	r3, r3, #327680	@ _9, _9,
 1254              	@ main.c:455: 		cap = (BKP->DR2<<16) + BKP->DR1;
ARM GAS  /tmp/ccpmJ073.s 			page 23


 1255 0104 DFF80CE2 		ldr	lr, .L102+80	@ tmp298,
 1256              	@ main.c:474: 		PB13_o = 0;		PB12_o = 1;		beep=0; PB14_o = 1; // AP
 1257 0108 0192     		str	r2, [sp, #4]	@ tmp293, %sfp
 1258              	@ main.c:447: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 1259 010a 6B60     		str	r3, [r5, #4]	@ _9, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 1260              	@ main.c:449: 		PB12_o = 0;		// rozladowanie
 1261 010c 3A60     		str	r2, [r7]	@ tmp293, MEM[(volatile long unsigned int *)1109492144B]
 1262              	@ main.c:450: 		PB13_o = 0;   // ladowanie
 1263 010e CCF80020 		str	r2, [ip]	@ tmp293, MEM[(volatile long unsigned int *)1109492148B]
 1264              	@ main.c:451: 		PB14_o = 1;   // dzwonek
 1265 0112 0860     		str	r0, [r1]	@ tmp297, MEM[(volatile long unsigned int *)1109492152B]
 1266              	@ main.c:455: 		cap = (BKP->DR2<<16) + BKP->DR1;
 1267 0114 BEF80830 		ldrh	r3, [lr, #8]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR2
 1268 0118 BEF804E0 		ldrh	lr, [lr, #4]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR1
 1269 011c 754D     		ldr	r5, .L102+48	@ tmp500,
 1270              	@ main.c:475: 		trg1  = SysTick->VAL;	
 1271 011e 764E     		ldr	r6, .L102+52	@ tmp313,
 1272              	@ main.c:455: 		cap = (BKP->DR2<<16) + BKP->DR1;
 1273 0120 0EEB0343 		add	r3, lr, r3, lsl #16	@ tmp306, MEM[(struct BKP_TypeDef *)1073769472B].DR1, MEM[(struct BKP_Type
 1274 0124 2B60     		str	r3, [r5]	@ tmp306, cap
 1275              	@ main.c:474: 		PB13_o = 0;		PB12_o = 1;		beep=0; PB14_o = 1; // AP
 1276 0126 CCF80020 		str	r2, [ip]	@ tmp293, MEM[(volatile long unsigned int *)1109492148B]
 1277 012a 3860     		str	r0, [r7]	@ tmp297, MEM[(volatile long unsigned int *)1109492144B]
 1278 012c 0860     		str	r0, [r1]	@ tmp297, MEM[(volatile long unsigned int *)1109492152B]
 1279              	@ main.c:475: 		trg1  = SysTick->VAL;	
 1280 012e B368     		ldr	r3, [r6, #8]	@ _17, MEM[(struct SysTick_Type *)3758153744B].VAL
 1281              	@ main.c:477: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 1282 0130 3446     		mov	r4, r6	@ tmp316, tmp313
 1283              	@ main.c:475: 		trg1  = SysTick->VAL;	
 1284 0132 724E     		ldr	r6, .L102+56	@ tmp511,
 1285 0134 DFF8F4A1 		ldr	r10, .L102+104	@ tmp507,
 1286 0138 DFF8F4B1 		ldr	fp, .L102+108	@ tmp509,
 1287 013c 3360     		str	r3, [r6]	@ _17, trg1
 1288              	.L91:
 1289              	@ main.c:477: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 1290 013e D9F80030 		ldr	r3, [r9]	@ trg0.6_18, trg0
 1291 0142 A268     		ldr	r2, [r4, #8]	@ _19, MEM[(struct SysTick_Type *)3758153744B].VAL
 1292 0144 9B1A     		subs	r3, r3, r2	@ tmp317, trg0.6_18, _19
 1293 0146 6E4A     		ldr	r2, .L102+60	@ tmp527,
 1294 0148 9342     		cmp	r3, r2	@ tmp317, tmp527
 1295 014a 00F2F380 		bhi	.L101	@,
 1296              	.L77:
 1297              	@ main.c:515: 			if( (STCLK_MS*5000 < (trg1 - SysTick->VAL)) ){	
 1298 014e 3368     		ldr	r3, [r6]	@ trg1.28_82, trg1
 1299 0150 A268     		ldr	r2, [r4, #8]	@ _83, MEM[(struct SysTick_Type *)3758153744B].VAL
 1300 0152 9B1A     		subs	r3, r3, r2	@ tmp419, trg1.28_82, _83
 1301 0154 6B4A     		ldr	r2, .L102+64	@ tmp546,
 1302 0156 9342     		cmp	r3, r2	@ tmp419, tmp546
 1303 0158 40F29880 		bls	.L79	@,
 1304              	@ main.c:517: 				if(vacu > 2000 && vacu < 2750){
 1305 015c 6FF4FA63 		mvn	r3, #2000	@,
 1306 0160 B8F90020 		ldrsh	r2, [r8]	@ vacu.29_86, vacu
 1307              	@ main.c:516: 				trg1  = SysTick->VAL;	
 1308 0164 A168     		ldr	r1, [r4, #8]	@ _85, MEM[(struct SysTick_Type *)3758153744B].VAL
 1309              	@ main.c:517: 				if(vacu > 2000 && vacu < 2750){
 1310 0166 D318     		adds	r3, r2, r3	@ tmp425, vacu.29_86,
 1311 0168 9BB2     		uxth	r3, r3	@ tmp426, tmp425
ARM GAS  /tmp/ccpmJ073.s 			page 24


 1312 016a B3F53B7F 		cmp	r3, #748	@ tmp426,
 1313              	@ main.c:516: 				trg1  = SysTick->VAL;	
 1314 016e 3160     		str	r1, [r6]	@ _85, trg1
 1315              	@ main.c:517: 				if(vacu > 2000 && vacu < 2750){
 1316 0170 79D8     		bhi	.L80	@,
 1317              	@ main.c:518: 					PB12_o = 0;
 1318 0172 0023     		movs	r3, #0	@ tmp428,
 1319 0174 5E49     		ldr	r1, .L102+44	@ tmp427,
 1320              	@ main.c:519: 					PB13_o = 0;
 1321 0176 644A     		ldr	r2, .L102+68	@ tmp429,
 1322              	@ main.c:518: 					PB12_o = 0;
 1323 0178 0B60     		str	r3, [r1]	@ tmp428, MEM[(volatile long unsigned int *)1109492144B]
 1324              	@ main.c:519: 					PB13_o = 0;
 1325 017a 1360     		str	r3, [r2]	@ tmp428, MEM[(volatile long unsigned int *)1109492148B]
 1326              	@ main.c:532: 			if( (STCLK_MS*500   < (trg2 - SysTick->VAL))) {
 1327 017c 634B     		ldr	r3, .L102+72	@ tmp576,
 1328 017e 644A     		ldr	r2, .L102+76	@ tmp434,
 1329 0180 1B68     		ldr	r3, [r3]	@ trg2.33_221, trg2
 1330 0182 A168     		ldr	r1, [r4, #8]	@ _226, MEM[(struct SysTick_Type *)3758153744B].VAL
 1331 0184 5B1A     		subs	r3, r3, r1	@ tmp433, trg2.33_221, _226
 1332 0186 9342     		cmp	r3, r2	@ tmp433, tmp434
 1333 0188 00F28781 		bhi	.L81	@,
 1334              	@ main.c:520: 					beep=1;
 1335 018c 0123     		movs	r3, #1	@ beep,
 1336 018e 0193     		str	r3, [sp, #4]	@ beep, %sfp
 1337              	.L82:
 1338              	@ main.c:541: 			if(p_Fifo1->rct){
 1339 0190 DBF80030 		ldr	r3, [fp]	@ p_Fifo1.34_98, p_Fifo1
 1340 0194 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.34_98->rct
 1341 0196 9BB2     		uxth	r3, r3	@ _99, p_Fifo1.34_98->rct
 1342 0198 002B     		cmp	r3, #0	@ _99
 1343 019a D0D0     		beq	.L91	@
 1344              	@ main.c:542: 				UART_getChar( (char*)&swh);
 1345 019c 0DF10B00 		add	r0, sp, #11	@ tmp555,,
 1346 01a0 FFF7FEFF 		bl	UART_getChar	@
 1347              	@ main.c:545: 				switch (swh)	{
 1348 01a4 9DF80B30 		ldrb	r3, [sp, #11]	@ zero_extendqisi2	@ swh, swh
 1349 01a8 613B     		subs	r3, r3, #97	@ tmp465, swh,
 1350 01aa 192B     		cmp	r3, #25	@ tmp465,
 1351 01ac C7D8     		bhi	.L91	@
 1352 01ae 01A2     		adr	r2, .L86	@ tmp521,
 1353 01b0 52F823F0 		ldr	pc, [r2, r3, lsl #2]	@ tmp521, tmp465
 1354              		.p2align 2
 1355              	.L86:
 1356 01b4 51020000 		.word	.L85+1
 1357 01b8 43020000 		.word	.L87+1
 1358 01bc 3F010000 		.word	.L91+1
 1359 01c0 2F020000 		.word	.L88+1
 1360 01c4 3F010000 		.word	.L91+1
 1361 01c8 3F010000 		.word	.L91+1
 1362 01cc 3F010000 		.word	.L91+1
 1363 01d0 3F010000 		.word	.L91+1
 1364 01d4 3F010000 		.word	.L91+1
 1365 01d8 3F010000 		.word	.L91+1
 1366 01dc 3F010000 		.word	.L91+1
 1367 01e0 3F010000 		.word	.L91+1
 1368 01e4 3F010000 		.word	.L91+1
ARM GAS  /tmp/ccpmJ073.s 			page 25


 1369 01e8 3F010000 		.word	.L91+1
 1370 01ec 3F010000 		.word	.L91+1
 1371 01f0 3F010000 		.word	.L91+1
 1372 01f4 1D020000 		.word	.L89+1
 1373 01f8 3F010000 		.word	.L91+1
 1374 01fc 3F010000 		.word	.L91+1
 1375 0200 3F010000 		.word	.L91+1
 1376 0204 3F010000 		.word	.L91+1
 1377 0208 3F010000 		.word	.L91+1
 1378 020c 3F010000 		.word	.L91+1
 1379 0210 3F010000 		.word	.L91+1
 1380 0214 3F010000 		.word	.L91+1
 1381 0218 5B020000 		.word	.L90+1
 1382              		.p2align 1
 1383              	.L89:
 1384              	@ main.c:567: 					PB13_o = 0;
 1385 021c 0023     		movs	r3, #0	@ tmp487,
 1386              	@ main.c:569: 					PB14_o = 1;
 1387 021e 0122     		movs	r2, #1	@ tmp491,
 1388              	@ main.c:567: 					PB13_o = 0;
 1389 0220 3948     		ldr	r0, .L102+68	@ tmp486,
 1390              	@ main.c:568: 					PB12_o = 0;
 1391 0222 3349     		ldr	r1, .L102+44	@ tmp488,
 1392              	@ main.c:567: 					PB13_o = 0;
 1393 0224 0360     		str	r3, [r0]	@ tmp487, MEM[(volatile long unsigned int *)1109492148B]
 1394              	@ main.c:568: 					PB12_o = 0;
 1395 0226 0B60     		str	r3, [r1]	@ tmp487, MEM[(volatile long unsigned int *)1109492144B]
 1396              	@ main.c:569: 					PB14_o = 1;
 1397 0228 304B     		ldr	r3, .L102+40	@ tmp558,
 1398 022a 1A60     		str	r2, [r3]	@ tmp491, MEM[(volatile long unsigned int *)1109492152B]
 1399              	@ main.c:570: 					break;
 1400 022c 87E7     		b	.L91	@
 1401              	.L88:
 1402              	@ main.c:562: 					PB13_o = 0;
 1403 022e 0022     		movs	r2, #0	@ tmp481,
 1404              	@ main.c:563: 					PB12_o = 1;
 1405 0230 0123     		movs	r3, #1	@ tmp483,
 1406              	@ main.c:562: 					PB13_o = 0;
 1407 0232 3548     		ldr	r0, .L102+68	@ tmp480,
 1408              	@ main.c:563: 					PB12_o = 1;
 1409 0234 2E49     		ldr	r1, .L102+44	@ tmp482,
 1410              	.L100:
 1411              	@ main.c:562: 					PB13_o = 0;
 1412 0236 0260     		str	r2, [r0]	@ tmp481,
 1413              	@ main.c:564: 					beep=0; PB14_o = 1;
 1414 0238 0192     		str	r2, [sp, #4]	@ tmp481, %sfp
 1415 023a 2C4A     		ldr	r2, .L102+40	@ tmp557,
 1416              	@ main.c:563: 					PB12_o = 1;
 1417 023c 0B60     		str	r3, [r1]	@ tmp483,
 1418              	@ main.c:564: 					beep=0; PB14_o = 1;
 1419 023e 1360     		str	r3, [r2]	@ tmp483,
 1420              	@ main.c:565: 					break;
 1421 0240 7DE7     		b	.L91	@
 1422              	.L87:
 1423              	@ main.c:574: 					PB14_o = 1;
 1424 0242 0123     		movs	r3, #1	@ tmp494,
 1425              	@ main.c:573: 					beep  ^= 1;
ARM GAS  /tmp/ccpmJ073.s 			page 26


 1426 0244 019A     		ldr	r2, [sp, #4]	@ beep, %sfp
 1427 0246 5A40     		eors	r2, r2, r3	@, beep, beep,
 1428 0248 0192     		str	r2, [sp, #4]	@ beep, %sfp
 1429              	@ main.c:574: 					PB14_o = 1;
 1430 024a 284A     		ldr	r2, .L102+40	@ tmp563,
 1431 024c 1360     		str	r3, [r2]	@ tmp494,
 1432              	@ main.c:476: 		while(1){
 1433 024e 76E7     		b	.L91	@
 1434              	.L85:
 1435              	@ main.c:557: 					PB12_o = 0;
 1436 0250 0022     		movs	r2, #0	@ tmp475,
 1437              	@ main.c:558: 					PB13_o = 1;
 1438 0252 0123     		movs	r3, #1	@ tmp477,
 1439              	@ main.c:557: 					PB12_o = 0;
 1440 0254 2648     		ldr	r0, .L102+44	@ tmp474,
 1441              	@ main.c:558: 					PB13_o = 1;
 1442 0256 2C49     		ldr	r1, .L102+68	@ tmp476,
 1443 0258 EDE7     		b	.L100	@
 1444              	.L90:
 1445              	@ main.c:548: 					cap = 0;
 1446 025a 0023     		movs	r3, #0	@ tmp467,
 1447              	@ main.c:549: 					BKP->DR1 = 0;
 1448 025c 2D4A     		ldr	r2, .L102+80	@ tmp468,
 1449              	@ main.c:548: 					cap = 0;
 1450 025e 2B60     		str	r3, [r5]	@ tmp467, cap
 1451              	@ main.c:549: 					BKP->DR1 = 0;
 1452 0260 9380     		strh	r3, [r2, #4]	@ movhi	@ tmp467, MEM[(struct BKP_TypeDef *)1073769472B].DR1
 1453              	@ main.c:550: 					BKP->DR2 = 0;
 1454 0262 1381     		strh	r3, [r2, #8]	@ movhi	@ tmp467, MEM[(struct BKP_TypeDef *)1073769472B].DR2
 1455              	@ main.c:555: 					break;
 1456 0264 6BE7     		b	.L91	@
 1457              	.L80:
 1458              	@ main.c:523: 				if(vacu > 4190 && cur < 100){
 1459 0266 41F25E03 		movw	r3, #4190	@ tmp435,
 1460 026a 9A42     		cmp	r2, r3	@ vacu.29_86, tmp435
 1461 026c 0EDD     		ble	.L79	@,
 1462              	@ main.c:523: 				if(vacu > 4190 && cur < 100){
 1463 026e 2A4B     		ldr	r3, .L102+84	@ tmp549,
 1464 0270 B3F90030 		ldrsh	r3, [r3]	@ cur, cur
 1465 0274 632B     		cmp	r3, #99	@ cur,
 1466 0276 09DC     		bgt	.L79	@,
 1467              	@ main.c:524: 					PB13_o = 0;
 1468 0278 0023     		movs	r3, #0	@ tmp439,
 1469              	@ main.c:525: 					PB12_o = 1;
 1470 027a 0120     		movs	r0, #1	@ tmp441,
 1471              	@ main.c:524: 					PB13_o = 0;
 1472 027c 224A     		ldr	r2, .L102+68	@ tmp438,
 1473              	@ main.c:525: 					PB12_o = 1;
 1474 027e 1C49     		ldr	r1, .L102+44	@ tmp440,
 1475              	@ main.c:524: 					PB13_o = 0;
 1476 0280 1360     		str	r3, [r2]	@ tmp439, MEM[(volatile long unsigned int *)1109492148B]
 1477              	@ main.c:527: 					BKP->DR1 = 0;
 1478 0282 244A     		ldr	r2, .L102+80	@ tmp444,
 1479              	@ main.c:525: 					PB12_o = 1;
 1480 0284 0860     		str	r0, [r1]	@ tmp441, MEM[(volatile long unsigned int *)1109492144B]
 1481              	@ main.c:526: 					cap = 0;
 1482 0286 2B60     		str	r3, [r5]	@ tmp439, cap
ARM GAS  /tmp/ccpmJ073.s 			page 27


 1483              	@ main.c:527: 					BKP->DR1 = 0;
 1484 0288 9380     		strh	r3, [r2, #4]	@ movhi	@ tmp439, MEM[(struct BKP_TypeDef *)1073769472B].DR1
 1485              	@ main.c:528: 					BKP->DR2 = 0;
 1486 028a 1381     		strh	r3, [r2, #8]	@ movhi	@ tmp439, MEM[(struct BKP_TypeDef *)1073769472B].DR2
 1487              	.L79:
 1488              	@ main.c:532: 			if( (STCLK_MS*500   < (trg2 - SysTick->VAL))) {
 1489 028c 1F48     		ldr	r0, .L102+72	@ tmp575,
 1490 028e 204A     		ldr	r2, .L102+76	@ tmp453,
 1491 0290 0368     		ldr	r3, [r0]	@ trg2.33_90, trg2
 1492 0292 A168     		ldr	r1, [r4, #8]	@ _91, MEM[(struct SysTick_Type *)3758153744B].VAL
 1493 0294 5B1A     		subs	r3, r3, r1	@ tmp452, trg2.33_90, _91
 1494 0296 9342     		cmp	r3, r2	@ tmp452, tmp453
 1495 0298 7FF67AAF 		bls	.L82	@,
 1496              	@ main.c:533: 				trg2  = SysTick->VAL;	
 1497 029c A368     		ldr	r3, [r4, #8]	@ _93, MEM[(struct SysTick_Type *)3758153744B].VAL
 1498              	@ main.c:534: 				LED ^= 1;	
 1499 029e 1F4A     		ldr	r2, .L102+88	@ tmp456,
 1500              	@ main.c:533: 				trg2  = SysTick->VAL;	
 1501 02a0 0360     		str	r3, [r0]	@ _93, trg2
 1502              	@ main.c:534: 				LED ^= 1;	
 1503 02a2 1368     		ldr	r3, [r2]	@ _94, MEM[(volatile long unsigned int *)1109524916B]
 1504 02a4 83F00103 		eor	r3, r3, #1	@ _95, _94,
 1505 02a8 1360     		str	r3, [r2]	@ _95, MEM[(volatile long unsigned int *)1109524916B]
 1506              	@ main.c:535: 				if(beep){	PB14_o ^= 1; }
 1507 02aa 019B     		ldr	r3, [sp, #4]	@ beep, %sfp
 1508 02ac 002B     		cmp	r3, #0	@ beep
 1509 02ae 3FF46FAF 		beq	.L82	@
 1510              	.L92:
 1511              	@ main.c:535: 				if(beep){	PB14_o ^= 1; }
 1512 02b2 0123     		movs	r3, #1	@ beep,
 1513 02b4 0D4A     		ldr	r2, .L102+40	@ tmp553,
 1514 02b6 0193     		str	r3, [sp, #4]	@ beep, %sfp
 1515 02b8 1368     		ldr	r3, [r2]	@ _96, MEM[(volatile long unsigned int *)1109492152B]
 1516 02ba 83F00103 		eor	r3, r3, #1	@ _97, _96,
 1517 02be 1360     		str	r3, [r2]	@ _97, MEM[(volatile long unsigned int *)1109492152B]
 1518 02c0 66E7     		b	.L82	@
 1519              	.L103:
 1520 02c2 00BF     		.align	2
 1521              	.L102:
 1522 02c4 00080140 		.word	1073809408
 1523 02c8 00380140 		.word	1073821696
 1524 02cc 00E100E0 		.word	-536813312
 1525 02d0 00440040 		.word	1073759232
 1526 02d4 00000000 		.word	PutChar
 1527 02d8 00000000 		.word	UART1_putc
 1528 02dc 00000000 		.word	.LC10
 1529 02e0 00A24A04 		.word	72000000
 1530 02e4 0C000000 		.word	.LC11
 1531 02e8 000C0140 		.word	1073810432
 1532 02ec B8812142 		.word	1109492152
 1533 02f0 B0812142 		.word	1109492144
 1534 02f4 00000000 		.word	.LANCHOR2
 1535 02f8 10E000E0 		.word	-536813552
 1536 02fc 00000000 		.word	trg1
 1537 0300 40548900 		.word	9000000
 1538 0304 40A5AE02 		.word	45000000
 1539 0308 B4812142 		.word	1109492148
ARM GAS  /tmp/ccpmJ073.s 			page 28


 1540 030c 00000000 		.word	trg2
 1541 0310 20AA4400 		.word	4500000
 1542 0314 006C0040 		.word	1073769472
 1543 0318 00000000 		.word	.LANCHOR4
 1544 031c B4012242 		.word	1109524916
 1545 0320 00100240 		.word	1073876992
 1546 0324 00000000 		.word	trg0
 1547 0328 00000000 		.word	.LANCHOR5
 1548 032c 00000000 		.word	.LANCHOR7
 1549 0330 00000000 		.word	p_Fifo1
 1550              	.L101:
 1551              	@ main.c:482: 				i2c1_read( INA219_ADDR,2,i2reg,2);
 1552 0334 0223     		movs	r3, #2	@,
 1553              	@ main.c:478: 				trg0  = SysTick->VAL;
 1554 0336 D4F808C0 		ldr	ip, [r4, #8]	@ _21, MEM[(struct SysTick_Type *)3758153744B].VAL
 1555              	@ main.c:482: 				i2c1_read( INA219_ADDR,2,i2reg,2);
 1556 033a 1946     		mov	r1, r3	@,
 1557 033c 03AA     		add	r2, sp, #12	@ tmp528,,
 1558 033e 8020     		movs	r0, #128	@,
 1559              	@ main.c:478: 				trg0  = SysTick->VAL;
 1560 0340 C9F800C0 		str	ip, [r9]	@ _21, trg0
 1561              	@ main.c:482: 				i2c1_read( INA219_ADDR,2,i2reg,2);
 1562 0344 FFF7FEFF 		bl	i2c1_read	@
 1563              	@ main.c:483: 				vbus = ((i2reg[1] | (i2reg[0]<<8))>>3)*515/128 ;
 1564 0348 BDF80C20 		ldrh	r2, [sp, #12]	@, MEM[(u08[2] *)&i2reg]
 1565 034c 574F     		ldr	r7, .L104	@ tmp530,
 1566 034e 52BA     		rev16	r2, r2	@ tmp323, MEM[(u08[2] *)&i2reg]
 1567 0350 C2F3CC02 		ubfx	r2, r2, #3, #13	@ tmp326, tmp323,,
 1568 0354 02EB022C 		add	ip, r2, r2, lsl #8	@ tmp329, tmp326, tmp326,
 1569 0358 02EB4C02 		add	r2, r2, ip, lsl #1	@ tmp331, tmp326, tmp329,
 1570 035c 4FEAE21C 		asr	ip, r2, #7	@ tmp332, tmp331,
 1571              	@ main.c:487: 				i2c1_read( INA219_ADDR,4,i2reg,2);
 1572 0360 0223     		movs	r3, #2	@,
 1573 0362 03AA     		add	r2, sp, #12	@ tmp529,,
 1574 0364 0421     		movs	r1, #4	@,
 1575 0366 8020     		movs	r0, #128	@,
 1576              	@ main.c:483: 				vbus = ((i2reg[1] | (i2reg[0]<<8))>>3)*515/128 ;
 1577 0368 A7F800C0 		strh	ip, [r7]	@ movhi	@ tmp332, vbus
 1578              	@ main.c:487: 				i2c1_read( INA219_ADDR,4,i2reg,2);
 1579 036c FFF7FEFF 		bl	i2c1_read	@
 1580              	@ main.c:489: 				vacu = vbus + cur*108/1000;
 1581 0370 6C22     		movs	r2, #108	@ tmp344,
 1582              	@ main.c:488: 				cur = ((i2reg[1]) | (i2reg[0]<<8)) ;
 1583 0372 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2	@ i2reg, i2reg
 1584 0376 9DF80D10 		ldrb	r1, [sp, #13]	@ zero_extendqisi2	@ i2reg, i2reg
 1585              	@ main.c:489: 				vacu = vbus + cur*108/1000;
 1586 037a B7F800C0 		ldrh	ip, [r7]	@, vbus
 1587              	@ main.c:488: 				cur = ((i2reg[1]) | (i2reg[0]<<8)) ;
 1588 037e 41EA0321 		orr	r1, r1, r3, lsl #8	@ tmp340, i2reg, i2reg,
 1589 0382 09B2     		sxth	r1, r1	@ _38, tmp340
 1590              	@ main.c:489: 				vacu = vbus + cur*108/1000;
 1591 0384 02FB01F2 		mul	r2, r2, r1	@ tmp343, tmp344, _38
 1592 0388 494F     		ldr	r7, .L104+4	@ tmp532,
 1593              	@ main.c:491: 				cap += abs(cur);
 1594 038a 81EAE170 		eor	r0, r1, r1, asr #31	@ tmp364, _38, _38,
 1595              	@ main.c:489: 				vacu = vbus + cur*108/1000;
 1596 038e 87FB023E 		smull	r3, lr, r7, r2	@ tmp517, tmp346, tmp532, tmp343
ARM GAS  /tmp/ccpmJ073.s 			page 29


 1597 0392 D317     		asrs	r3, r2, #31	@ tmp349, tmp343,
 1598 0394 C3EBAE13 		rsb	r3, r3, lr, asr #6	@ tmp345, tmp349, tmp346,
 1599 0398 6344     		add	r3, r3, ip	@ tmp353, vbus
 1600 039a 1BB2     		sxth	r3, r3	@ _46, tmp353
 1601              	@ main.c:490: 				pow = vacu*cur/1000;
 1602 039c 01FB03FC 		mul	ip, r1, r3	@ tmp357, _38, _46
 1603 03a0 87FB0C2E 		smull	r2, lr, r7, ip	@ tmp518, tmp359, tmp533, tmp357
 1604              	@ main.c:491: 				cap += abs(cur);
 1605 03a4 2A68     		ldr	r2, [r5]	@ cap, cap
 1606 03a6 A0EBE170 		sub	r0, r0, r1, asr #31	@ tmp364, tmp364, _38,
 1607              	@ main.c:488: 				cur = ((i2reg[1]) | (i2reg[0]<<8)) ;
 1608 03aa 424F     		ldr	r7, .L104+8	@ tmp534,
 1609              	@ main.c:491: 				cap += abs(cur);
 1610 03ac 1044     		add	r0, r0, r2	@ _54, cap
 1611              	@ main.c:488: 				cur = ((i2reg[1]) | (i2reg[0]<<8)) ;
 1612 03ae 3980     		strh	r1, [r7]	@ movhi	@ _38, cur
 1613              	@ main.c:489: 				vacu = vbus + cur*108/1000;
 1614 03b0 A8F80030 		strh	r3, [r8]	@ movhi	@ _46, vacu
 1615              	@ main.c:491: 				cap += abs(cur);
 1616 03b4 2860     		str	r0, [r5]	@ _54, cap
 1617              	@ main.c:492: 				BKP->DR1 = cap & 0x00ff;
 1618 03b6 404A     		ldr	r2, .L104+12	@ tmp371,
 1619 03b8 C1B2     		uxtb	r1, r0	@ _56, _54
 1620              	@ main.c:493: 				BKP->DR2 = cap>>16;
 1621 03ba 030C     		lsrs	r3, r0, #16	@ _58, _54,
 1622              	@ main.c:490: 				pow = vacu*cur/1000;
 1623 03bc 4FEAEC7C 		asr	ip, ip, #31	@ tmp362, tmp357,
 1624 03c0 3E48     		ldr	r0, .L104+16	@ tmp535,
 1625 03c2 CCEBAE1C 		rsb	ip, ip, lr, asr #6	@ tmp358, tmp362, tmp359,
 1626 03c6 A0F800C0 		strh	ip, [r0]	@ movhi	@ tmp358, pow
 1627              	@ main.c:492: 				BKP->DR1 = cap & 0x00ff;
 1628 03ca 9180     		strh	r1, [r2, #4]	@ movhi	@ _56, MEM[(struct BKP_TypeDef *)1073769472B].DR1
 1629              	@ main.c:493: 				BKP->DR2 = cap>>16;
 1630 03cc 1381     		strh	r3, [r2, #8]	@ movhi	@ _58, MEM[(struct BKP_TypeDef *)1073769472B].DR2
 1631              	@ main.c:498: 				unt2uart (cnt++,3);
 1632 03ce 9AF80000 		ldrb	r0, [r10]	@ zero_extendqisi2	@ cnt.16_59, cnt
 1633              	@ main.c:497: 				PutChar = UART1_putc;
 1634 03d2 3B4A     		ldr	r2, .L104+20	@ tmp536,
 1635 03d4 3B4F     		ldr	r7, .L104+24	@ tmp537,
 1636              	@ main.c:498: 				unt2uart (cnt++,3);
 1637 03d6 431C     		adds	r3, r0, #1	@ tmp380, cnt.16_59,
 1638 03d8 0321     		movs	r1, #3	@,
 1639 03da 8AF80030 		strb	r3, [r10]	@ tmp380, cnt
 1640              	@ main.c:497: 				PutChar = UART1_putc;
 1641 03de 1760     		str	r7, [r2]	@ tmp537, PutChar
 1642              	@ main.c:498: 				unt2uart (cnt++,3);
 1643 03e0 FFF7FEFF 		bl	unt2uart	@
 1644              	@ main.c:500: 				int2uart (cur  ,5,0);				UaPutS("mA");
 1645 03e4 334F     		ldr	r7, .L104+8	@ tmp538,
 1646              	@ main.c:499: 				int2uart (vacu ,4,3);				UaPutS("V");
 1647 03e6 0322     		movs	r2, #3	@,
 1648 03e8 0421     		movs	r1, #4	@,
 1649 03ea B8F90000 		ldrsh	r0, [r8]	@, vacu
 1650 03ee FFF7FEFF 		bl	int2uart	@
 1651 03f2 3548     		ldr	r0, .L104+28	@,
 1652 03f4 FFF7FEFF 		bl	UaPutS	@
 1653              	@ main.c:500: 				int2uart (cur  ,5,0);				UaPutS("mA");
ARM GAS  /tmp/ccpmJ073.s 			page 30


 1654 03f8 0022     		movs	r2, #0	@,
 1655 03fa 0521     		movs	r1, #5	@,
 1656 03fc B7F90000 		ldrsh	r0, [r7]	@, cur
 1657 0400 FFF7FEFF 		bl	int2uart	@
 1658 0404 3148     		ldr	r0, .L104+32	@,
 1659 0406 FFF7FEFF 		bl	UaPutS	@
 1660              	@ main.c:501: 				int2uart (pow  ,4,3);				UaPutS("W");
 1661 040a 2C48     		ldr	r0, .L104+16	@ tmp539,
 1662 040c 0322     		movs	r2, #3	@,
 1663 040e 0421     		movs	r1, #4	@,
 1664 0410 B0F90000 		ldrsh	r0, [r0]	@, pow
 1665 0414 FFF7FEFF 		bl	int2uart	@
 1666 0418 2D48     		ldr	r0, .L104+36	@,
 1667 041a FFF7FEFF 		bl	UaPutS	@
 1668              	@ main.c:502: 				int2uart (cap/36  ,6,2);	UaPutS("mAh");
 1669 041e 2868     		ldr	r0, [r5]	@ cap, cap
 1670 0420 2C49     		ldr	r1, .L104+40	@ tmp540,
 1671 0422 0222     		movs	r2, #2	@,
 1672 0424 A1FB00C0 		umull	ip, r0, r1, r0	@ tmp519, tmp394, tmp540, cap
 1673 0428 0621     		movs	r1, #6	@,
 1674 042a C008     		lsrs	r0, r0, #3	@, tmp394,
 1675 042c FFF7FEFF 		bl	int2uart	@
 1676 0430 2948     		ldr	r0, .L104+44	@,
 1677 0432 FFF7FEFF 		bl	UaPutS	@
 1678              	@ main.c:503: 				UaPutS("\r ");
 1679 0436 2948     		ldr	r0, .L104+48	@,
 1680 0438 FFF7FEFF 		bl	UaPutS	@
 1681              	@ main.c:505: 				PutChar = UART2_putc; //przypisanie callback 
 1682 043c 284F     		ldr	r7, .L104+52	@ tmp542,
 1683 043e 204B     		ldr	r3, .L104+20	@ tmp541,
 1684              	@ main.c:506: 				int2uarz (vacu ,4,3); 			UaPutC(',');
 1685 0440 0322     		movs	r2, #3	@,
 1686              	@ main.c:505: 				PutChar = UART2_putc; //przypisanie callback 
 1687 0442 1F60     		str	r7, [r3]	@ tmp542, PutChar
 1688              	@ main.c:506: 				int2uarz (vacu ,4,3); 			UaPutC(',');
 1689 0444 0421     		movs	r1, #4	@,
 1690 0446 B8F90000 		ldrsh	r0, [r8]	@, vacu
 1691              	@ main.c:507: 				int2uarz (cur  ,4,3); 			UaPutC(',');
 1692 044a 1A4F     		ldr	r7, .L104+8	@ tmp543,
 1693              	@ main.c:506: 				int2uarz (vacu ,4,3); 			UaPutC(',');
 1694 044c FFF7FEFF 		bl	int2uarz	@
 1695 0450 2C20     		movs	r0, #44	@,
 1696 0452 FFF7FEFF 		bl	UaPutC	@
 1697              	@ main.c:507: 				int2uarz (cur  ,4,3); 			UaPutC(',');
 1698 0456 0322     		movs	r2, #3	@,
 1699 0458 0421     		movs	r1, #4	@,
 1700 045a B7F90000 		ldrsh	r0, [r7]	@, cur
 1701 045e FFF7FEFF 		bl	int2uarz	@
 1702 0462 2C20     		movs	r0, #44	@,
 1703 0464 FFF7FEFF 		bl	UaPutC	@
 1704              	@ main.c:508: 				int2uarz (pow  ,4,3); 			UaPutC(',');
 1705 0468 1448     		ldr	r0, .L104+16	@ tmp544,
 1706 046a 0322     		movs	r2, #3	@,
 1707 046c 0421     		movs	r1, #4	@,
 1708 046e B0F90000 		ldrsh	r0, [r0]	@, pow
 1709 0472 FFF7FEFF 		bl	int2uarz	@
 1710 0476 2C20     		movs	r0, #44	@,
ARM GAS  /tmp/ccpmJ073.s 			page 31


 1711 0478 FFF7FEFF 		bl	UaPutC	@
 1712              	@ main.c:509: 				int2uarz (cap/36 ,6,5);
 1713 047c 2868     		ldr	r0, [r5]	@ cap, cap
 1714 047e 1549     		ldr	r1, .L104+40	@ tmp545,
 1715 0480 0522     		movs	r2, #5	@,
 1716 0482 A1FB0030 		umull	r3, r0, r1, r0	@ tmp520, tmp409, tmp545, cap
 1717 0486 0621     		movs	r1, #6	@,
 1718 0488 C008     		lsrs	r0, r0, #3	@, tmp409,
 1719 048a FFF7FEFF 		bl	int2uarz	@
 1720              	@ main.c:511: 				cnt++;
 1721 048e 9AF80030 		ldrb	r3, [r10]	@ zero_extendqisi2	@ cnt, cnt
 1722 0492 0133     		adds	r3, r3, #1	@ tmp415, cnt,
 1723 0494 8AF80030 		strb	r3, [r10]	@ tmp415, cnt
 1724 0498 59E6     		b	.L77	@
 1725              	.L81:
 1726              	@ main.c:533: 				trg2  = SysTick->VAL;	
 1727 049a A368     		ldr	r3, [r4, #8]	@ _103, MEM[(struct SysTick_Type *)3758153744B].VAL
 1728 049c 1149     		ldr	r1, .L104+56	@ tmp573,
 1729              	@ main.c:534: 				LED ^= 1;	
 1730 049e 124A     		ldr	r2, .L104+60	@ tmp497,
 1731              	@ main.c:533: 				trg2  = SysTick->VAL;	
 1732 04a0 0B60     		str	r3, [r1]	@ _103, trg2
 1733              	@ main.c:534: 				LED ^= 1;	
 1734 04a2 1368     		ldr	r3, [r2]	@ _224, MEM[(volatile long unsigned int *)1109524916B]
 1735 04a4 83F00103 		eor	r3, r3, #1	@ _108, _224,
 1736 04a8 1360     		str	r3, [r2]	@ _108, MEM[(volatile long unsigned int *)1109524916B]
 1737 04aa 02E7     		b	.L92	@
 1738              	.L105:
 1739              		.align	2
 1740              	.L104:
 1741 04ac 00000000 		.word	.LANCHOR3
 1742 04b0 D34D6210 		.word	274877907
 1743 04b4 00000000 		.word	.LANCHOR4
 1744 04b8 006C0040 		.word	1073769472
 1745 04bc 00000000 		.word	.LANCHOR6
 1746 04c0 00000000 		.word	PutChar
 1747 04c4 00000000 		.word	UART1_putc
 1748 04c8 00000000 		.word	.LC24
 1749 04cc 04000000 		.word	.LC25
 1750 04d0 08000000 		.word	.LC26
 1751 04d4 398EE338 		.word	954437177
 1752 04d8 0C000000 		.word	.LC27
 1753 04dc 10000000 		.word	.LC28
 1754 04e0 00000000 		.word	UART2_putc
 1755 04e4 00000000 		.word	trg2
 1756 04e8 B4012242 		.word	1109524916
 1757              		.size	lion_updown, .-lion_updown
 1758              		.section	.text.uht,"ax",%progbits
 1759              		.align	1
 1760              		.p2align 2,,3
 1761              		.global	uht
 1762              		.syntax unified
 1763              		.thumb
 1764              		.thumb_func
 1765              		.fpu softvfp
 1766              		.type	uht, %function
 1767              	uht:
ARM GAS  /tmp/ccpmJ073.s 			page 32


 1768              		@ args = 0, pretend = 0, frame = 0
 1769              		@ frame_needed = 0, uses_anonymous_args = 0
 1770              		@ link register save eliminated.
 1771              	@ main.c:589: 		GPIOB->CRL = (GPIOB->CRL & 0xffffff0f) | 0x00000060;
 1772 0000 034A     		ldr	r2, .L107	@ tmp113,
 1773 0002 1368     		ldr	r3, [r2]	@ _1, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 1774 0004 23F0F003 		bic	r3, r3, #240	@ tmp114, _1,
 1775 0008 43F06003 		orr	r3, r3, #96	@ _3, tmp114,
 1776 000c 1360     		str	r3, [r2]	@ _3, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 1777              	@ main.c:659: 	} 
 1778 000e 7047     		bx	lr	@
 1779              	.L108:
 1780              		.align	2
 1781              	.L107:
 1782 0010 000C0140 		.word	1073810432
 1783              		.size	uht, .-uht
 1784              		.section	.text.rtc_calibrate,"ax",%progbits
 1785              		.align	1
 1786              		.p2align 2,,3
 1787              		.global	rtc_calibrate
 1788              		.syntax unified
 1789              		.thumb
 1790              		.thumb_func
 1791              		.fpu softvfp
 1792              		.type	rtc_calibrate, %function
 1793              	rtc_calibrate:
 1794              		@ args = 0, pretend = 0, frame = 24
 1795              		@ frame_needed = 0, uses_anonymous_args = 0
 1796 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}	@
 1797 0004 87B0     		sub	sp, sp, #28	@,,
 1798              	@ main.c:665: 		RtcInit();
 1799 0006 FFF7FEFF 		bl	RtcInit	@
 1800              	@ main.c:666: 		i2c1_init();
 1801 000a FFF7FEFF 		bl	i2c1_init	@
 1802              	@ main.c:667: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 1803 000e 3D48     		ldr	r0, .L132	@ tmp140,
 1804              	@ main.c:668: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 1805 0010 3D49     		ldr	r1, .L132+4	@ tmp145,
 1806              	@ main.c:667: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 1807 0012 4368     		ldr	r3, [r0, #4]	@ _2, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 1808              	@ main.c:670: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 1809 0014 3D4A     		ldr	r2, .L132+8	@ tmp148,
 1810              	@ main.c:667: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 1811 0016 23F0F023 		bic	r3, r3, #-268374016	@ tmp141, _2,
 1812 001a 23F47023 		bic	r3, r3, #983040	@ tmp141, tmp141,
 1813 001e 43F01023 		orr	r3, r3, #268439552	@ _4, tmp141,
 1814 0022 43F48033 		orr	r3, r3, #65536	@ _4, _4,
 1815 0026 4360     		str	r3, [r0, #4]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 1816              	@ main.c:668: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 1817 0028 0B68     		ldr	r3, [r1]	@ _5, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 1818              	@ main.c:674: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 1819 002a 3948     		ldr	r0, .L132+12	@ tmp157,
 1820              	@ main.c:668: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 1821 002c 23F47F23 		bic	r3, r3, #1044480	@ tmp146, _5,
 1822 0030 43F48833 		orr	r3, r3, #69632	@ _7, tmp146,
 1823              	@ main.c:670: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 1824 0034 374F     		ldr	r7, .L132+16	@ tmp149,
ARM GAS  /tmp/ccpmJ073.s 			page 33


 1825              	@ main.c:671: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 1826 0036 384E     		ldr	r6, .L132+20	@ tmp151,
 1827              	@ main.c:672: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 1828 0038 384D     		ldr	r5, .L132+24	@ tmp153,
 1829              	@ main.c:673: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 1830 003a 394C     		ldr	r4, .L132+28	@ tmp155,
 1831              	@ main.c:668: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 1832 003c 0B60     		str	r3, [r1]	@ _7, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 1833              	@ main.c:670: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 1834 003e 5760     		str	r7, [r2, #4]	@ tmp149, oled_hw.sck
 1835              	@ main.c:671: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 1836 0040 1660     		str	r6, [r2]	@ tmp151, oled_hw.mosi
 1837              	@ main.c:672: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 1838 0042 9560     		str	r5, [r2, #8]	@ tmp153, oled_hw.dc
 1839              	@ main.c:673: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 1840 0044 D460     		str	r4, [r2, #12]	@ tmp155, oled_hw.cs
 1841              	@ main.c:674: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 1842 0046 1061     		str	r0, [r2, #16]	@ tmp157, oled_hw.rst
 1843              	@ main.c:677: 		ssd1306_init();
 1844 0048 FFF7FEFF 		bl	ssd1306_init	@
 1845              	@ main.c:694: 		num2uart (tim/TIM_US,7,0);	
 1846 004c 0022     		movs	r2, #0	@,
 1847 004e 0721     		movs	r1, #7	@,
 1848 0050 1046     		mov	r0, r2	@,
 1849 0052 FFF7FEFF 		bl	num2uart	@
 1850              	@ main.c:697: 		num2uart (tim4,8,1);	
 1851 0056 0122     		movs	r2, #1	@,
 1852 0058 0821     		movs	r1, #8	@,
 1853 005a 0298     		ldr	r0, [sp, #8]	@, tim4
 1854 005c FFF7FEFF 		bl	num2uart	@
 1855              	@ main.c:715: 				while(!PB5_i)
 1856 0060 04F5FE44 		add	r4, r4, #32512	@ tmp173, tmp173,
 1857 0064 DFF8C880 		ldr	r8, .L132+44	@ tmp194,
 1858 0068 2E4E     		ldr	r6, .L132+32	@ tmp195,
 1859 006a 2F4F     		ldr	r7, .L132+36	@ tmp197,
 1860              	@ main.c:702: 			if( TIM_MS*500 < (trg0 - SysTick->VAL) ){
 1861 006c 2F4D     		ldr	r5, .L132+40	@ tmp163,
 1862 006e DFF8C490 		ldr	r9, .L132+48	@ tmp165,
 1863              	@ main.c:715: 				while(!PB5_i)
 1864 0072 6834     		adds	r4, r4, #104	@ tmp173, tmp173,
 1865              	.L110:
 1866              	@ main.c:702: 			if( TIM_MS*500 < (trg0 - SysTick->VAL) ){
 1867 0074 D8F80030 		ldr	r3, [r8]	@ trg0.44_10, trg0
 1868 0078 AA68     		ldr	r2, [r5, #8]	@ _11, MEM[(struct SysTick_Type *)3758153744B].VAL
 1869 007a 9B1A     		subs	r3, r3, r2	@ tmp164, trg0.44_10, _11
 1870 007c 4B45     		cmp	r3, r9	@ tmp164, tmp165
 1871 007e F9D9     		bls	.L110	@,
 1872              	@ main.c:703: 				trg0 = SysTick->VAL; 
 1873 0080 D5F808C0 		ldr	ip, [r5, #8]	@ _13, MEM[(struct SysTick_Type *)3758153744B].VAL
 1874              	@ main.c:705: 				i2c1_read( DS3231_ADDR,0,tm,3);
 1875 0084 0323     		movs	r3, #3	@,
 1876 0086 01AA     		add	r2, sp, #4	@ tmp203,,
 1877 0088 0021     		movs	r1, #0	@,
 1878 008a D020     		movs	r0, #208	@,
 1879              	@ main.c:703: 				trg0 = SysTick->VAL; 
 1880 008c C8F800C0 		str	ip, [r8]	@ _13, trg0
 1881              	@ main.c:705: 				i2c1_read( DS3231_ADDR,0,tm,3);
ARM GAS  /tmp/ccpmJ073.s 			page 34


 1882 0090 FFF7FEFF 		bl	i2c1_read	@
 1883              	@ main.c:710: 				i2c1_read( DS3231_ADDR,0x0e,&ContReg,1);
 1884 0094 0123     		movs	r3, #1	@,
 1885 0096 0DF10302 		add	r2, sp, #3	@ tmp204,,
 1886 009a 0E21     		movs	r1, #14	@,
 1887 009c D020     		movs	r0, #208	@,
 1888 009e FFF7FEFF 		bl	i2c1_read	@
 1889              	.L111:
 1890              	@ main.c:715: 				while(!PB5_i)
 1891 00a2 2368     		ldr	r3, [r4]	@ _15, MEM[(volatile long unsigned int *)1109491988B]
 1892 00a4 2BB9     		cbnz	r3, .L113	@ _15,
 1893              	.L129:
 1894              	@ main.c:716: 				while(PB5_i) 	TIM_start();
 1895 00a6 2368     		ldr	r3, [r4]	@ _14,
 1896 00a8 002B     		cmp	r3, #0	@ _14
 1897 00aa FAD0     		beq	.L111	@
 1898              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 1899 00ac AB68     		ldr	r3, [r5, #8]	@ _46, MEM[(struct SysTick_Type *)3758153744B].VAL
 1900 00ae 3360     		str	r3, [r6]	@ _46, Timt
 1901 00b0 F9E7     		b	.L129	@
 1902              	.L113:
 1903              	@ main.c:717: 				while(!PB5_i)
 1904 00b2 2368     		ldr	r3, [r4]	@ _17, MEM[(volatile long unsigned int *)1109491988B]
 1905 00b4 3BB9     		cbnz	r3, .L116	@ _17,
 1906              	.L131:
 1907              	@ main.c:718: 				while(PB5_i)	TIM_stop(&tim4);
 1908 00b6 2368     		ldr	r3, [r4]	@ _16,
 1909 00b8 002B     		cmp	r3, #0	@ _16
 1910 00ba FAD0     		beq	.L113	@
 1911              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 1912 00bc 3368     		ldr	r3, [r6]	@ Timt.47_47, Timt
 1913 00be AA68     		ldr	r2, [r5, #8]	@ _48, MEM[(struct SysTick_Type *)3758153744B].VAL
 1914 00c0 9B1A     		subs	r3, r3, r2	@ _49, Timt.47_47, _48
 1915 00c2 0293     		str	r3, [sp, #8]	@ _49, MEM[(volatile u32 *)&tim4]
 1916 00c4 F7E7     		b	.L131	@
 1917              	.L116:
 1918              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 1919 00c6 40F25241 		movw	r1, #1106	@ tmp187,
 1920              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 1921 00ca AB68     		ldr	r3, [r5, #8]	@ _54, MEM[(struct SysTick_Type *)3758153744B].VAL
 1922 00cc 3360     		str	r3, [r6]	@ _54, Timt
 1923              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 1924 00ce AB68     		ldr	r3, [r5, #8]	@ _50, MEM[(struct SysTick_Type *)3758153744B].VAL
 1925 00d0 3B60     		str	r3, [r7]	@ _50, delay_us
 1926              	.L118:
 1927              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 1928 00d2 3B68     		ldr	r3, [r7]	@ delay_us.48_51, delay_us
 1929 00d4 AA68     		ldr	r2, [r5, #8]	@ _52, MEM[(struct SysTick_Type *)3758153744B].VAL
 1930 00d6 9B1A     		subs	r3, r3, r2	@ tmp186, delay_us.48_51, _52
 1931 00d8 8B42     		cmp	r3, r1	@ tmp186, tmp187
 1932 00da FAD9     		bls	.L118	@,
 1933              	@ main.c:723: 				int2str(tim4,tbuf,6,0); 
 1934 00dc 03A9     		add	r1, sp, #12	@ tmp205,,
 1935 00de 0023     		movs	r3, #0	@,
 1936 00e0 0622     		movs	r2, #6	@,
 1937 00e2 0298     		ldr	r0, [sp, #8]	@, tim4
 1938 00e4 FFF7FEFF 		bl	int2str	@
ARM GAS  /tmp/ccpmJ073.s 			page 35


 1939              	@ main.c:724: 				int2str(123,tbuf,6,0); 
 1940 00e8 0023     		movs	r3, #0	@,
 1941 00ea 03A9     		add	r1, sp, #12	@ tmp206,,
 1942 00ec 0622     		movs	r2, #6	@,
 1943 00ee 7B20     		movs	r0, #123	@,
 1944 00f0 FFF7FEFF 		bl	int2str	@
 1945              	@ main.c:726: 				oled_str16(0,0,tbuf);
 1946 00f4 0021     		movs	r1, #0	@,
 1947 00f6 03AA     		add	r2, sp, #12	@ tmp207,,
 1948 00f8 0846     		mov	r0, r1	@,
 1949 00fa FFF7FEFF 		bl	oled_str16	@
 1950              	@ main.c:730: 				oled_refresh_gram();
 1951 00fe FFF7FEFF 		bl	oled_refresh_gram	@
 1952 0102 B7E7     		b	.L110	@
 1953              	.L133:
 1954              		.align	2
 1955              	.L132:
 1956 0104 00080140 		.word	1073809408
 1957 0108 000C0140 		.word	1073810432
 1958 010c 00000000 		.word	oled_hw
 1959 0110 BC012142 		.word	1109459388
 1960 0114 90812142 		.word	1109492112
 1961 0118 8C812142 		.word	1109492108
 1962 011c B0012142 		.word	1109459376
 1963 0120 AC012142 		.word	1109459372
 1964 0124 00000000 		.word	Timt
 1965 0128 00000000 		.word	delay_us
 1966 012c 10E000E0 		.word	-536813552
 1967 0130 00000000 		.word	trg0
 1968 0134 20AA4400 		.word	4500000
 1969              		.size	rtc_calibrate, .-rtc_calibrate
 1970              		.section	.text.testwsk,"ax",%progbits
 1971              		.align	1
 1972              		.p2align 2,,3
 1973              		.global	testwsk
 1974              		.syntax unified
 1975              		.thumb
 1976              		.thumb_func
 1977              		.fpu softvfp
 1978              		.type	testwsk, %function
 1979              	testwsk:
 1980              		@ args = 0, pretend = 0, frame = 0
 1981              		@ frame_needed = 0, uses_anonymous_args = 0
 1982              		@ link register save eliminated.
 1983              	@ main.c:748: 	}
 1984 0000 7047     		bx	lr	@
 1985              		.size	testwsk, .-testwsk
 1986 0002 00BF     		.section	.text.veml6075,"ax",%progbits
 1987              		.align	1
 1988              		.p2align 2,,3
 1989              		.global	veml6075
 1990              		.syntax unified
 1991              		.thumb
 1992              		.thumb_func
 1993              		.fpu softvfp
 1994              		.type	veml6075, %function
 1995              	veml6075:
ARM GAS  /tmp/ccpmJ073.s 			page 36


 1996              		@ args = 0, pretend = 0, frame = 16
 1997              		@ frame_needed = 0, uses_anonymous_args = 0
 1998              	@ main.c:752: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='l';
 1999 0000 0123     		movs	r3, #1	@ tmp128,
 2000 0002 6C20     		movs	r0, #108	@ tmp131,
 2001 0004 264A     		ldr	r2, .L140	@ tmp126,
 2002              	@ main.c:769: 		LED=1;
 2003 0006 2749     		ldr	r1, .L140+4	@ tmp133,
 2004              	@ main.c:752: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='l';
 2005 0008 1268     		ldr	r2, [r2]	@ p_Fifo1.49_1, p_Fifo1
 2006              	@ main.c:749: void veml6075(void){
 2007 000a 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 2008              	@ main.c:771: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 2009 000e 264C     		ldr	r4, .L140+8	@ tmp135,
 2010              	@ main.c:752: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='l';
 2011 0010 9380     		strh	r3, [r2, #4]	@ movhi	@ tmp128, p_Fifo1.49_1->rct
 2012 0012 5380     		strh	r3, [r2, #2]	@ movhi	@ tmp128, p_Fifo1.49_1->rwi
 2013 0014 9071     		strb	r0, [r2, #6]	@ tmp131, p_Fifo1.49_1->rbuf
 2014              	@ main.c:769: 		LED=1;
 2015 0016 0B60     		str	r3, [r1]	@ tmp128, MEM[(volatile long unsigned int *)1109524916B]
 2016              	@ main.c:771: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 2017 0018 6368     		ldr	r3, [r4, #4]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 2018              	@ main.c:772: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2019 001a 2448     		ldr	r0, .L140+12	@ tmp140,
 2020              	@ main.c:771: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 2021 001c 23F0F023 		bic	r3, r3, #-268374016	@ tmp136, _4,
 2022 0020 23F47023 		bic	r3, r3, #983040	@ tmp136, tmp136,
 2023 0024 43F01023 		orr	r3, r3, #268439552	@ _6, tmp136,
 2024 0028 43F48033 		orr	r3, r3, #65536	@ _6, _6,
 2025 002c 6360     		str	r3, [r4, #4]	@ _6, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 2026              	@ main.c:772: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2027 002e 0268     		ldr	r2, [r0]	@ _7, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2028              	@ main.c:774: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 2029 0030 1F4B     		ldr	r3, .L140+16	@ tmp143,
 2030              	@ main.c:772: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2031 0032 22F47F22 		bic	r2, r2, #1044480	@ tmp141, _7,
 2032 0036 42F48832 		orr	r2, r2, #69632	@ _9, tmp141,
 2033 003a 0260     		str	r2, [r0]	@ _9, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2034              	@ main.c:774: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 2035 003c 1D4E     		ldr	r6, .L140+20	@ tmp144,
 2036              	@ main.c:777: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 2037 003e 1E48     		ldr	r0, .L140+24	@ tmp150,
 2038              	@ main.c:778: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 2039 0040 1E4A     		ldr	r2, .L140+28	@ tmp152,
 2040              	@ main.c:775: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 2041 0042 1F4D     		ldr	r5, .L140+32	@ tmp146,
 2042              	@ main.c:776: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 2043 0044 1F4C     		ldr	r4, .L140+36	@ tmp148,
 2044              	@ main.c:749: void veml6075(void){
 2045 0046 84B0     		sub	sp, sp, #16	@,,
 2046              	@ main.c:774: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 2047 0048 5E60     		str	r6, [r3, #4]	@ tmp144, oled_hw.sck
 2048              	@ main.c:804: 				LED^=1;
 2049 004a 8846     		mov	r8, r1	@ tmp163, tmp133
 2050              	@ main.c:775: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 2051 004c 1D60     		str	r5, [r3]	@ tmp146, oled_hw.mosi
 2052              	@ main.c:796: 		oled_refresh_gram();
ARM GAS  /tmp/ccpmJ073.s 			page 37


 2053 004e 0027     		movs	r7, #0	@ ivtmp.406,
 2054              	@ main.c:776: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 2055 0050 9C60     		str	r4, [r3, #8]	@ tmp148, oled_hw.dc
 2056              	@ main.c:777: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 2057 0052 D860     		str	r0, [r3, #12]	@ tmp150, oled_hw.cs
 2058              	@ main.c:778: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 2059 0054 1A61     		str	r2, [r3, #16]	@ tmp152, oled_hw.rst
 2060              	@ main.c:781: 		ssd1306_init();
 2061 0056 FFF7FEFF 		bl	ssd1306_init	@
 2062              	@ main.c:796: 		oled_refresh_gram();
 2063 005a FFF7FEFF 		bl	oled_refresh_gram	@
 2064 005e 1A4D     		ldr	r5, .L140+40	@ tmp166,
 2065              	@ main.c:799: 			if(STCLK_MS*20 < (trg0 - SysTick->VAL)){	
 2066 0060 1A4C     		ldr	r4, .L140+44	@ tmp154,
 2067 0062 1B4E     		ldr	r6, .L140+48	@ tmp156,
 2068              	.L136:
 2069 0064 2B68     		ldr	r3, [r5]	@ trg0.52_10, trg0
 2070 0066 A268     		ldr	r2, [r4, #8]	@ _11, MEM[(struct SysTick_Type *)3758153744B].VAL
 2071 0068 9B1A     		subs	r3, r3, r2	@ tmp155, trg0.52_10, _11
 2072 006a B342     		cmp	r3, r6	@ tmp155, tmp156
 2073 006c FAD9     		bls	.L136	@,
 2074              	@ main.c:800: 				trg0  = SysTick->VAL;	
 2075 006e D4F808C0 		ldr	ip, [r4, #8]	@ _13, MEM[(struct SysTick_Type *)3758153744B].VAL
 2076              	@ main.c:801: 				int2str(cnt++ ,tbuf,5,0);		oled_num24(0,0,tbuf);
 2077 0072 0023     		movs	r3, #0	@,
 2078 0074 0522     		movs	r2, #5	@,
 2079 0076 01A9     		add	r1, sp, #4	@ tmp167,,
 2080 0078 B8B2     		uxth	r0, r7	@, ivtmp.406
 2081              	@ main.c:800: 				trg0  = SysTick->VAL;	
 2082 007a C5F800C0 		str	ip, [r5]	@ _13, trg0
 2083              	@ main.c:801: 				int2str(cnt++ ,tbuf,5,0);		oled_num24(0,0,tbuf);
 2084 007e FFF7FEFF 		bl	int2str	@
 2085 0082 0021     		movs	r1, #0	@,
 2086 0084 01AA     		add	r2, sp, #4	@ tmp168,,
 2087 0086 0846     		mov	r0, r1	@,
 2088 0088 FFF7FEFF 		bl	oled_num24	@
 2089              	@ main.c:802: 				oled_refresh_gram();	
 2090 008c FFF7FEFF 		bl	oled_refresh_gram	@
 2091              	@ main.c:804: 				LED^=1;
 2092 0090 D8F80030 		ldr	r3, [r8]	@ _16, MEM[(volatile long unsigned int *)1109524916B]
 2093 0094 0137     		adds	r7, r7, #1	@ ivtmp.406, ivtmp.406,
 2094 0096 83F00103 		eor	r3, r3, #1	@ _17, _16,
 2095 009a C8F80030 		str	r3, [r8]	@ _17, MEM[(volatile long unsigned int *)1109524916B]
 2096 009e E1E7     		b	.L136	@
 2097              	.L141:
 2098              		.align	2
 2099              	.L140:
 2100 00a0 00000000 		.word	p_Fifo1
 2101 00a4 B4012242 		.word	1109524916
 2102 00a8 00080140 		.word	1073809408
 2103 00ac 000C0140 		.word	1073810432
 2104 00b0 00000000 		.word	oled_hw
 2105 00b4 90812142 		.word	1109492112
 2106 00b8 AC012142 		.word	1109459372
 2107 00bc BC012142 		.word	1109459388
 2108 00c0 8C812142 		.word	1109492108
 2109 00c4 B0012142 		.word	1109459376
ARM GAS  /tmp/ccpmJ073.s 			page 38


 2110 00c8 00000000 		.word	trg0
 2111 00cc 10E000E0 		.word	-536813552
 2112 00d0 20BF0200 		.word	180000
 2113              		.size	veml6075, .-veml6075
 2114              		.section	.text.softSPI_w,"ax",%progbits
 2115              		.align	1
 2116              		.p2align 2,,3
 2117              		.global	softSPI_w
 2118              		.syntax unified
 2119              		.thumb
 2120              		.thumb_func
 2121              		.fpu softvfp
 2122              		.type	softSPI_w, %function
 2123              	softSPI_w:
 2124              		@ args = 0, pretend = 0, frame = 0
 2125              		@ frame_needed = 0, uses_anonymous_args = 0
 2126 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}	@
 2127              	@ main.c:924: 			if (byte & 0x80)			wMOSI = 1;
 2128 0004 4FF0010E 		mov	lr, #1	@ tmp152,
 2129              	@ main.c:920: uint8_t softSPI_w(uint8_t byte)	{
 2130 0008 0824     		movs	r4, #8	@ ivtmp_5,
 2131              	@ main.c:928: 			wSCK = 1; /* a slave latches input data bit */
 2132 000a F046     		mov	r8, lr	@ MEM[(volatile long unsigned int *)1109459348B], tmp152
 2133              	@ main.c:925: 			else			wMOSI = 0;
 2134 000c 0026     		movs	r6, #0	@ tmp151,
 2135 000e 1549     		ldr	r1, .L156	@ tmp149,
 2136 0010 DFF85CC0 		ldr	ip, .L156+12	@ tmp150,
 2137              	@ main.c:928: 			wSCK = 1; /* a slave latches input data bit */
 2138 0014 144D     		ldr	r5, .L156+4	@ tmp131,
 2139              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 2140 0016 154A     		ldr	r2, .L156+8	@ tmp133,
 2141              	@ main.c:930: 			if (wMISO)			byte |= 0x01;
 2142 0018 DFF85890 		ldr	r9, .L156+16	@ tmp138,
 2143              	.L148:
 2144              	@ main.c:924: 			if (byte & 0x80)			wMOSI = 1;
 2145 001c 0306     		lsls	r3, r0, #24	@, byte,
 2146 001e 4CBF     		ite	mi
 2147 0020 CCF800E0 		strmi	lr, [ip]	@ tmp152, MEM[(volatile long unsigned int *)1109459356B]
 2148              	@ main.c:925: 			else			wMOSI = 0;
 2149 0024 CCF80060 		strpl	r6, [ip]	@ tmp151, MEM[(volatile long unsigned int *)1109459356B]
 2150              	@ main.c:928: 			wSCK = 1; /* a slave latches input data bit */
 2151 0028 C5F80080 		str	r8, [r5]	@ MEM[(volatile long unsigned int *)1109459348B], MEM[(volatile long unsigned int *)1
 2152              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 2153 002c 9368     		ldr	r3, [r2, #8]	@ _18, MEM[(struct SysTick_Type *)3758153744B].VAL
 2154              	@ main.c:927: 			byte <<= 1;
 2155 002e 4000     		lsls	r0, r0, #1	@ tmp130, byte,
 2156 0030 C0B2     		uxtb	r0, r0	@ byte, tmp130
 2157              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 2158 0032 0B60     		str	r3, [r1]	@ _18, delay_us
 2159              	.L145:
 2160              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 2161 0034 0B68     		ldr	r3, [r1]	@ delay_us.48_19, delay_us
 2162 0036 9768     		ldr	r7, [r2, #8]	@ _20, MEM[(struct SysTick_Type *)3758153744B].VAL
 2163 0038 DB1B     		subs	r3, r3, r7	@ tmp137, delay_us.48_19, _20
 2164 003a 592B     		cmp	r3, #89	@ tmp137,
 2165 003c FAD9     		bls	.L145	@,
 2166              	@ main.c:930: 			if (wMISO)			byte |= 0x01;
ARM GAS  /tmp/ccpmJ073.s 			page 39


 2167 003e D9F80030 		ldr	r3, [r9]	@ _2, MEM[(volatile long unsigned int *)1109459224B]
 2168 0042 0BB1     		cbz	r3, .L146	@ _2,
 2169              	@ main.c:930: 			if (wMISO)			byte |= 0x01;
 2170 0044 40F00100 		orr	r0, r0, #1	@ byte, byte,
 2171              	.L146:
 2172              	@ main.c:932: 			wSCK = 0; /* a slave shifts out next output data bit */
 2173 0048 2E60     		str	r6, [r5]	@ tmp151, MEM[(volatile long unsigned int *)1109459348B]
 2174              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 2175 004a 9368     		ldr	r3, [r2, #8]	@ _22, MEM[(struct SysTick_Type *)3758153744B].VAL
 2176 004c 0B60     		str	r3, [r1]	@ _22, delay_us
 2177              	.L147:
 2178              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 2179 004e 0B68     		ldr	r3, [r1]	@ delay_us.48_23, delay_us
 2180 0050 9768     		ldr	r7, [r2, #8]	@ _24, MEM[(struct SysTick_Type *)3758153744B].VAL
 2181 0052 DB1B     		subs	r3, r3, r7	@ tmp146, delay_us.48_23, _24
 2182 0054 592B     		cmp	r3, #89	@ tmp146,
 2183 0056 FAD9     		bls	.L147	@,
 2184 0058 013C     		subs	r4, r4, #1	@ tmp147, ivtmp_5,
 2185              	@ main.c:922: 		for(counter = 8; counter; counter--)
 2186 005a 14F0FF04 		ands	r4, r4, #255	@ ivtmp_5, tmp147,
 2187 005e DDD1     		bne	.L148	@,
 2188              	@ main.c:936: 	}
 2189 0060 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}	@
 2190              	.L157:
 2191              		.align	2
 2192              	.L156:
 2193 0064 00000000 		.word	delay_us
 2194 0068 94012142 		.word	1109459348
 2195 006c 10E000E0 		.word	-536813552
 2196 0070 9C012142 		.word	1109459356
 2197 0074 18012142 		.word	1109459224
 2198              		.size	softSPI_w, .-softSPI_w
 2199              		.section	.text.softSPI_r,"ax",%progbits
 2200              		.align	1
 2201              		.p2align 2,,3
 2202              		.global	softSPI_r
 2203              		.syntax unified
 2204              		.thumb
 2205              		.thumb_func
 2206              		.fpu softvfp
 2207              		.type	softSPI_r, %function
 2208              	softSPI_r:
 2209              		@ args = 0, pretend = 0, frame = 0
 2210              		@ frame_needed = 0, uses_anonymous_args = 0
 2211              		@ link register save eliminated.
 2212              	@ main.c:943: 			else				wMOSI = 0;
 2213 0000 4FF0000C 		mov	ip, #0	@ tmp132,
 2214              	@ main.c:938: uint8_t softSPI_r(uint8_t byte)	{
 2215 0004 F0B4     		push	{r4, r5, r6, r7}	@
 2216              	@ main.c:938: uint8_t softSPI_r(uint8_t byte)	{
 2217 0006 0823     		movs	r3, #8	@ ivtmp_5,
 2218              	@ main.c:945: 			wSCK = 0; /* a slave shifts out output data bit */
 2219 0008 6746     		mov	r7, ip	@ MEM[(volatile long unsigned int *)1109459348B], tmp132
 2220              	@ main.c:942: 			if (byte & 0x80)			wMOSI = 1;
 2221 000a 0124     		movs	r4, #1	@ tmp133,
 2222              	@ main.c:943: 			else				wMOSI = 0;
 2223 000c 0A4E     		ldr	r6, .L168	@ tmp131,
ARM GAS  /tmp/ccpmJ073.s 			page 40


 2224              	@ main.c:945: 			wSCK = 0; /* a slave shifts out output data bit */
 2225 000e 0B4A     		ldr	r2, .L168+4	@ tmp122,
 2226              	@ main.c:948: 			if (wMISO)		byte |= 0x01;
 2227 0010 0B4D     		ldr	r5, .L168+8	@ tmp125,
 2228              	.L162:
 2229              	@ main.c:942: 			if (byte & 0x80)			wMOSI = 1;
 2230 0012 0106     		lsls	r1, r0, #24	@, byte,
 2231 0014 4CBF     		ite	mi
 2232 0016 3460     		strmi	r4, [r6]	@ tmp133, MEM[(volatile long unsigned int *)1109459356B]
 2233              	@ main.c:943: 			else				wMOSI = 0;
 2234 0018 C6F800C0 		strpl	ip, [r6]	@ tmp132, MEM[(volatile long unsigned int *)1109459356B]
 2235              	@ main.c:945: 			wSCK = 0; /* a slave shifts out output data bit */
 2236 001c 1760     		str	r7, [r2]	@ MEM[(volatile long unsigned int *)1109459348B], MEM[(volatile long unsigned int *)1
 2237              	@ main.c:948: 			if (wMISO)		byte |= 0x01;
 2238 001e 2968     		ldr	r1, [r5]	@ _2, MEM[(volatile long unsigned int *)1109459224B]
 2239              	@ main.c:946: 			byte <<= 1;
 2240 0020 4000     		lsls	r0, r0, #1	@ tmp124, byte,
 2241 0022 013B     		subs	r3, r3, #1	@ tmp129, ivtmp_5,
 2242 0024 C0B2     		uxtb	r0, r0	@ byte, tmp124
 2243              	@ main.c:948: 			if (wMISO)		byte |= 0x01;
 2244 0026 09B1     		cbz	r1, .L161	@ _2,
 2245              	@ main.c:948: 			if (wMISO)		byte |= 0x01;
 2246 0028 40F00100 		orr	r0, r0, #1	@ byte, byte,
 2247              	.L161:
 2248              	@ main.c:940: 		for(counter = 8; counter; counter--)
 2249 002c 13F0FF03 		ands	r3, r3, #255	@ ivtmp_5, tmp129,
 2250              	@ main.c:949: 			wSCK = 1; /* a slave latches input data bit */
 2251 0030 1460     		str	r4, [r2]	@ tmp133, MEM[(volatile long unsigned int *)1109459348B]
 2252              	@ main.c:940: 		for(counter = 8; counter; counter--)
 2253 0032 EED1     		bne	.L162	@,
 2254              	@ main.c:952: 	}
 2255 0034 F0BC     		pop	{r4, r5, r6, r7}	@
 2256 0036 7047     		bx	lr	@
 2257              	.L169:
 2258              		.align	2
 2259              	.L168:
 2260 0038 9C012142 		.word	1109459356
 2261 003c 94012142 		.word	1109459348
 2262 0040 18012142 		.word	1109459224
 2263              		.size	softSPI_r, .-softSPI_r
 2264              		.section	.text.ili9486,"ax",%progbits
 2265              		.align	1
 2266              		.p2align 2,,3
 2267              		.global	ili9486
 2268              		.syntax unified
 2269              		.thumb
 2270              		.thumb_func
 2271              		.fpu softvfp
 2272              		.type	ili9486, %function
 2273              	ili9486:
 2274              		@ args = 0, pretend = 0, frame = 8
 2275              		@ frame_needed = 0, uses_anonymous_args = 0
 2276              	@ main.c:956: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='c';
 2277 0000 0123     		movs	r3, #1	@ tmp136,
 2278 0002 6320     		movs	r0, #99	@ tmp139,
 2279              	@ main.c:953: void ili9486(void){
 2280 0004 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
ARM GAS  /tmp/ccpmJ073.s 			page 41


 2281              	@ main.c:956: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='c';
 2282 0008 DFF85491 		ldr	r9, .L201+56	@ tmp196,
 2283              	@ main.c:958: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0x34330000;	//   PA7=MOSI, PA6=MISO, PA5=S
 2284 000c 4649     		ldr	r1, .L201	@ tmp141,
 2285              	@ main.c:956: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='c';
 2286 000e D9F80020 		ldr	r2, [r9]	@ pretmp_14, p_Fifo1
 2287              	@ main.c:943: 			else				wMOSI = 0;
 2288 0012 464E     		ldr	r6, .L201+4	@ tmp207,
 2289              	@ main.c:956: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='c';
 2290 0014 9380     		strh	r3, [r2, #4]	@ movhi	@ tmp136, p_Fifo1.63_1->rct
 2291 0016 5380     		strh	r3, [r2, #2]	@ movhi	@ tmp136, p_Fifo1.63_1->rwi
 2292 0018 9071     		strb	r0, [r2, #6]	@ tmp139, p_Fifo1.63_1->rbuf
 2293              	@ main.c:958: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0x34330000;	//   PA7=MOSI, PA6=MISO, PA5=S
 2294 001a 0B68     		ldr	r3, [r1]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 2295              	@ main.c:945: 			wSCK = 0; /* a slave shifts out output data bit */
 2296 001c 444C     		ldr	r4, .L201+8	@ tmp208,
 2297              	@ main.c:958: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0x34330000;	//   PA7=MOSI, PA6=MISO, PA5=S
 2298 001e 9BB2     		uxth	r3, r3	@ tmp142, _4
 2299 0020 43F05053 		orr	r3, r3, #872415232	@ _6, tmp142,
 2300 0024 43F44C13 		orr	r3, r3, #3342336	@ _6, _6,
 2301              	@ main.c:953: void ili9486(void){
 2302 0028 83B0     		sub	sp, sp, #12	@,,
 2303              	@ main.c:958: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0x34330000;	//   PA7=MOSI, PA6=MISO, PA5=S
 2304 002a 0B60     		str	r3, [r1]	@ _6, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 2305              	.L172:
 2306              	@ main.c:962: 			if(p_Fifo1->rct){
 2307 002c 9388     		ldrh	r3, [r2, #4]	@, prephitmp_55->rct
 2308 002e 9BB2     		uxth	r3, r3	@ _8, prephitmp_55->rct
 2309 0030 002B     		cmp	r3, #0	@ _8
 2310 0032 FBD0     		beq	.L172	@
 2311              	@ main.c:963: 				UART_getChar( (char*)&swh);
 2312 0034 0DF10700 		add	r0, sp, #7	@ tmp214,,
 2313 0038 FFF7FEFF 		bl	UART_getChar	@
 2314              	@ main.c:965: 				switch (swh)	{
 2315 003c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2	@ swh, swh
 2316 0040 722B     		cmp	r3, #114	@ swh,
 2317 0042 09D0     		beq	.L174	@,
 2318 0044 772B     		cmp	r3, #119	@ swh,
 2319 0046 42D0     		beq	.L175	@,
 2320 0048 632B     		cmp	r3, #99	@ swh,
 2321 004a 30D0     		beq	.L200	@,
 2322              	@ main.c:991: 					UaPutK("\r");
 2323 004c 3948     		ldr	r0, .L201+12	@,
 2324 004e FFF7FEFF 		bl	UaPutK	@
 2325              	.L181:
 2326 0052 D9F80020 		ldr	r2, [r9]	@ pretmp_14, p_Fifo1
 2327 0056 E9E7     		b	.L172	@
 2328              	.L174:
 2329              	@ main.c:968: 					UaPutK("\r\n reg = 0x");	reg=UART_getHex();
 2330 0058 3748     		ldr	r0, .L201+16	@,
 2331 005a FFF7FEFF 		bl	UaPutK	@
 2332 005e FFF7FEFF 		bl	UART_getHex	@
 2333 0062 C5B2     		uxtb	r5, r0	@ reg,
 2334              	@ main.c:969: 					UaPutK("\r\n dat = 0x");
 2335 0064 3548     		ldr	r0, .L201+20	@,
 2336 0066 FFF7FEFF 		bl	UaPutK	@
 2337              	@ main.c:970: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
ARM GAS  /tmp/ccpmJ073.s 			page 42


 2338 006a 0022     		movs	r2, #0	@ tmp154,
 2339 006c 0823     		movs	r3, #8	@ ivtmp_53,
 2340              	@ main.c:943: 			else				wMOSI = 0;
 2341 006e 9446     		mov	ip, r2	@ tmp198, tmp154
 2342              	@ main.c:945: 			wSCK = 0; /* a slave shifts out output data bit */
 2343 0070 1746     		mov	r7, r2	@ MEM[(volatile long unsigned int *)1109459348B], tmp198
 2344              	@ main.c:942: 			if (byte & 0x80)			wMOSI = 1;
 2345 0072 0121     		movs	r1, #1	@ tmp199,
 2346              	@ main.c:970: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 2347 0074 3248     		ldr	r0, .L201+24	@ tmp215,
 2348              	@ main.c:948: 			if (wMISO)		byte |= 0x01;
 2349 0076 DFF8E0E0 		ldr	lr, .L201+48	@ tmp163,
 2350              	@ main.c:970: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 2351 007a 0260     		str	r2, [r0]	@ tmp154, MEM[(volatile long unsigned int *)1109459344B]
 2352              	.L180:
 2353              	@ main.c:942: 			if (byte & 0x80)			wMOSI = 1;
 2354 007c 2A06     		lsls	r2, r5, #24	@, reg,
 2355 007e 4CBF     		ite	mi
 2356 0080 3160     		strmi	r1, [r6]	@ tmp199, MEM[(volatile long unsigned int *)1109459356B]
 2357              	@ main.c:943: 			else				wMOSI = 0;
 2358 0082 C6F800C0 		strpl	ip, [r6]	@ tmp198, MEM[(volatile long unsigned int *)1109459356B]
 2359              	@ main.c:945: 			wSCK = 0; /* a slave shifts out output data bit */
 2360 0086 2760     		str	r7, [r4]	@ MEM[(volatile long unsigned int *)1109459348B], MEM[(volatile long unsigned int *)1
 2361              	@ main.c:948: 			if (wMISO)		byte |= 0x01;
 2362 0088 DEF80020 		ldr	r2, [lr]	@ _43, MEM[(volatile long unsigned int *)1109459224B]
 2363              	@ main.c:946: 			byte <<= 1;
 2364 008c 6D00     		lsls	r5, r5, #1	@ tmp162, reg,
 2365 008e 013B     		subs	r3, r3, #1	@ tmp167, ivtmp_53,
 2366 0090 EDB2     		uxtb	r5, r5	@ reg, tmp162
 2367              	@ main.c:948: 			if (wMISO)		byte |= 0x01;
 2368 0092 0AB1     		cbz	r2, .L179	@ _43,
 2369 0094 45F00105 		orr	r5, r5, #1	@ reg, reg,
 2370              	.L179:
 2371              	@ main.c:940: 		for(counter = 8; counter; counter--)
 2372 0098 13F0FF03 		ands	r3, r3, #255	@ ivtmp_53, tmp167,
 2373              	@ main.c:949: 			wSCK = 1; /* a slave latches input data bit */
 2374 009c 2160     		str	r1, [r4]	@ tmp199, MEM[(volatile long unsigned int *)1109459348B]
 2375              	@ main.c:940: 		for(counter = 8; counter; counter--)
 2376 009e EDD1     		bne	.L180	@,
 2377              	@ main.c:970: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 2378 00a0 274B     		ldr	r3, .L201+24	@ tmp216,
 2379              	@ main.c:971: 					hex2uart(dat,2);
 2380 00a2 2846     		mov	r0, r5	@, reg
 2381              	@ main.c:970: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 2382 00a4 1960     		str	r1, [r3]	@ tmp199, MEM[(volatile long unsigned int *)1109459344B]
 2383              	@ main.c:971: 					hex2uart(dat,2);
 2384 00a6 0221     		movs	r1, #2	@,
 2385 00a8 FFF7FEFF 		bl	hex2uart	@
 2386              	@ main.c:973: 					break;
 2387 00ac D1E7     		b	.L181	@
 2388              	.L200:
 2389              	@ main.c:984: 					UaPutK("\f");
 2390 00ae 2548     		ldr	r0, .L201+28	@,
 2391 00b0 FFF7FEFF 		bl	UaPutK	@
 2392              	@ main.c:985: 					UaPutK("\n\r\n======= ILI9486 ==================================\r\n");
 2393 00b4 2448     		ldr	r0, .L201+32	@,
 2394 00b6 FFF7FEFF 		bl	UaPutK	@
ARM GAS  /tmp/ccpmJ073.s 			page 43


 2395              	@ main.c:986: 					UaPutK(" r - Read   c - Clear page  \r\n");
 2396 00ba 2448     		ldr	r0, .L201+36	@,
 2397 00bc FFF7FEFF 		bl	UaPutK	@
 2398              	@ main.c:987: 					UaPutK(" w - Write  l - Loop read   \r\n");
 2399 00c0 2348     		ldr	r0, .L201+40	@,
 2400 00c2 FFF7FEFF 		bl	UaPutK	@
 2401              	@ main.c:988: 					UaPutK("==================================================\r\n > ");
 2402 00c6 2348     		ldr	r0, .L201+44	@,
 2403 00c8 FFF7FEFF 		bl	UaPutK	@
 2404              	@ main.c:989: 					break;
 2405 00cc C1E7     		b	.L181	@
 2406              	.L175:
 2407              	@ main.c:975: 					wCS = 0;
 2408 00ce 0023     		movs	r3, #0	@ tmp171,
 2409              	@ main.c:976: 					for(u08 i=0;i<64;i++){
 2410 00d0 9B46     		mov	fp, r3	@ i, tmp171
 2411              	@ main.c:943: 			else				wMOSI = 0;
 2412 00d2 9A46     		mov	r10, r3	@ tmp202, i
 2413              	@ main.c:945: 			wSCK = 0; /* a slave shifts out output data bit */
 2414 00d4 9846     		mov	r8, r3	@ MEM[(volatile long unsigned int *)1109459348B], i
 2415              	@ main.c:975: 					wCS = 0;
 2416 00d6 1A4A     		ldr	r2, .L201+24	@ tmp217,
 2417              	@ main.c:948: 			if (wMISO)		byte |= 0x01;
 2418 00d8 1F4F     		ldr	r7, .L201+48	@ tmp180,
 2419              	@ main.c:975: 					wCS = 0;
 2420 00da 1360     		str	r3, [r2]	@ tmp171, MEM[(volatile long unsigned int *)1109459344B]
 2421              	.L182:
 2422              	@ main.c:970: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 2423 00dc 5846     		mov	r0, fp	@ byte, i
 2424 00de 0822     		movs	r2, #8	@ ivtmp_7,
 2425              	@ main.c:942: 			if (byte & 0x80)			wMOSI = 1;
 2426 00e0 0125     		movs	r5, #1	@ tmp203,
 2427              	.L186:
 2428 00e2 0306     		lsls	r3, r0, #24	@, byte,
 2429 00e4 4CBF     		ite	mi
 2430 00e6 3560     		strmi	r5, [r6]	@ tmp203, MEM[(volatile long unsigned int *)1109459356B]
 2431              	@ main.c:943: 			else				wMOSI = 0;
 2432 00e8 C6F800A0 		strpl	r10, [r6]	@ tmp202, MEM[(volatile long unsigned int *)1109459356B]
 2433              	@ main.c:945: 			wSCK = 0; /* a slave shifts out output data bit */
 2434 00ec C4F80080 		str	r8, [r4]	@ MEM[(volatile long unsigned int *)1109459348B], MEM[(volatile long unsigned int *)1
 2435              	@ main.c:948: 			if (wMISO)		byte |= 0x01;
 2436 00f0 3968     		ldr	r1, [r7]	@ _51, MEM[(volatile long unsigned int *)1109459224B]
 2437              	@ main.c:946: 			byte <<= 1;
 2438 00f2 4000     		lsls	r0, r0, #1	@ tmp179, byte,
 2439 00f4 013A     		subs	r2, r2, #1	@ tmp184, ivtmp_7,
 2440 00f6 C0B2     		uxtb	r0, r0	@ byte, tmp179
 2441              	@ main.c:948: 			if (wMISO)		byte |= 0x01;
 2442 00f8 09B1     		cbz	r1, .L185	@ _51,
 2443 00fa 40F00100 		orr	r0, r0, #1	@ byte, byte,
 2444              	.L185:
 2445              	@ main.c:940: 		for(counter = 8; counter; counter--)
 2446 00fe 12F0FF02 		ands	r2, r2, #255	@ ivtmp_7, tmp184,
 2447              	@ main.c:949: 			wSCK = 1; /* a slave latches input data bit */
 2448 0102 2560     		str	r5, [r4]	@ tmp203, MEM[(volatile long unsigned int *)1109459348B]
 2449              	@ main.c:940: 		for(counter = 8; counter; counter--)
 2450 0104 EDD1     		bne	.L186	@,
 2451              	@ main.c:976: 					for(u08 i=0;i<64;i++){
ARM GAS  /tmp/ccpmJ073.s 			page 44


 2452 0106 0BF1010B 		add	fp, fp, #1	@ tmp185, i,
 2453              	@ main.c:977: 						hex2uart(softSPI_r(i),2);
 2454 010a 0221     		movs	r1, #2	@,
 2455              	@ main.c:976: 					for(u08 i=0;i<64;i++){
 2456 010c 5FFA8BFB 		uxtb	fp, fp	@ i, tmp185
 2457              	@ main.c:977: 						hex2uart(softSPI_r(i),2);
 2458 0110 FFF7FEFF 		bl	hex2uart	@
 2459              	@ main.c:976: 					for(u08 i=0;i<64;i++){
 2460 0114 BBF1400F 		cmp	fp, #64	@ i,
 2461 0118 E0D1     		bne	.L182	@,
 2462              	@ main.c:979: 					wCS = 1;
 2463 011a 094B     		ldr	r3, .L201+24	@ tmp218,
 2464              	@ main.c:980: 					UaPutK("\r\n");
 2465 011c 0F48     		ldr	r0, .L201+52	@,
 2466              	@ main.c:979: 					wCS = 1;
 2467 011e 1D60     		str	r5, [r3]	@ tmp203, MEM[(volatile long unsigned int *)1109459344B]
 2468              	@ main.c:980: 					UaPutK("\r\n");
 2469 0120 FFF7FEFF 		bl	UaPutK	@
 2470              	@ main.c:982: 					break;
 2471 0124 95E7     		b	.L181	@
 2472              	.L202:
 2473 0126 00BF     		.align	2
 2474              	.L201:
 2475 0128 00080140 		.word	1073809408
 2476 012c 9C012142 		.word	1109459356
 2477 0130 94012142 		.word	1109459348
 2478 0134 34000000 		.word	.LC16
 2479 0138 00000000 		.word	.LC29
 2480 013c 0C000000 		.word	.LC30
 2481 0140 90012142 		.word	1109459344
 2482 0144 18000000 		.word	.LC31
 2483 0148 1C000000 		.word	.LC32
 2484 014c 54000000 		.word	.LC33
 2485 0150 74000000 		.word	.LC34
 2486 0154 94000000 		.word	.LC35
 2487 0158 18012142 		.word	1109459224
 2488 015c 48000000 		.word	.LC19
 2489 0160 00000000 		.word	p_Fifo1
 2490              		.size	ili9486, .-ili9486
 2491              		.section	.text.wiznet5500,"ax",%progbits
 2492              		.align	1
 2493              		.p2align 2,,3
 2494              		.global	wiznet5500
 2495              		.syntax unified
 2496              		.thumb
 2497              		.thumb_func
 2498              		.fpu softvfp
 2499              		.type	wiznet5500, %function
 2500              	wiznet5500:
 2501              		@ args = 0, pretend = 0, frame = 8
 2502              		@ frame_needed = 0, uses_anonymous_args = 0
 2503 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 2504 0004 82B0     		sub	sp, sp, #8	@,,
 2505              	@ main.c:1003: 	SPI1_init_();
 2506 0006 FFF7FEFF 		bl	SPI1_init_	@
 2507              	@ main.c:1005: 	GPIOB->CRL = (GPIOB->CRL & 0xffffff0f) | 0x00000010;	
 2508 000a 1A49     		ldr	r1, .L210	@ tmp130,
ARM GAS  /tmp/ccpmJ073.s 			page 45


 2509              	@ main.c:1006: 	GPIOC->CRH = (GPIOC->CRH & 0xf0ffffff) | 0x01000000;	// LED Blue  PC14
 2510 000c 1A4A     		ldr	r2, .L210+4	@ tmp133,
 2511              	@ main.c:1005: 	GPIOB->CRL = (GPIOB->CRL & 0xffffff0f) | 0x00000010;	
 2512 000e 0B68     		ldr	r3, [r1]	@ _2, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2513              	@ main.c:1079: 			if(flag_9);
 2514 0010 1A4F     		ldr	r7, .L210+8	@ tmp137,
 2515              	@ main.c:1005: 	GPIOB->CRL = (GPIOB->CRL & 0xffffff0f) | 0x00000010;	
 2516 0012 23F0F003 		bic	r3, r3, #240	@ tmp131, _2,
 2517 0016 43F01003 		orr	r3, r3, #16	@ _5, tmp131,
 2518 001a 0B60     		str	r3, [r1]	@ _5, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2519              	@ main.c:1006: 	GPIOC->CRH = (GPIOC->CRH & 0xf0ffffff) | 0x01000000;	// LED Blue  PC14
 2520 001c 5368     		ldr	r3, [r2, #4]	@ _7, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 2521              	@ main.c:1079: 			if(flag_9);
 2522 001e 7F01     		lsls	r7, r7, #5	@ tmp138, tmp137,
 2523              	@ main.c:1006: 	GPIOC->CRH = (GPIOC->CRH & 0xf0ffffff) | 0x01000000;	// LED Blue  PC14
 2524 0020 23F07063 		bic	r3, r3, #251658240	@ tmp134, _7,
 2525 0024 43F08073 		orr	r3, r3, #16777216	@ _9, tmp134,
 2526 0028 5360     		str	r3, [r2, #4]	@ _9, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 2527              	@ main.c:1008: 	DHT_Init();
 2528 002a FFF7FEFF 		bl	DHT_Init	@
 2529 002e 144C     		ldr	r4, .L210+12	@ tmp150,
 2530              	@ main.c:1063: 		if(STCLK_MS*1000  < (trg0 - SysTick->VAL)){
 2531 0030 144D     		ldr	r5, .L210+16	@ tmp142,
 2532              	@ main.c:1066: 			if (!(DHT_read( &AMh, &AMt,1,&AM2302_pin)) ){		// AM2302 read T & H
 2533 0032 DFF85C80 		ldr	r8, .L210+28	@ tmp153,
 2534              	@ main.c:1069: 			LED^=1;
 2535 0036 144E     		ldr	r6, .L210+20	@ tmp148,
 2536              	@ main.c:1079: 			if(flag_9);
 2537 0038 2437     		adds	r7, r7, #36	@ _20, tmp138,
 2538              	.L205:
 2539              	@ main.c:1063: 		if(STCLK_MS*1000  < (trg0 - SysTick->VAL)){
 2540 003a 1449     		ldr	r1, .L210+24	@ tmp140,
 2541              	.L204:
 2542 003c 2368     		ldr	r3, [r4]	@ trg0.70_10, trg0
 2543 003e 8A68     		ldr	r2, [r1, #8]	@ _11, MEM[(struct SysTick_Type *)3758153744B].VAL
 2544 0040 9B1A     		subs	r3, r3, r2	@ tmp141, trg0.70_10, _11
 2545 0042 AB42     		cmp	r3, r5	@ tmp141, tmp142
 2546 0044 FAD9     		bls	.L204	@,
 2547              	@ main.c:1064: 			trg0 = SysTick->VAL;
 2548 0046 D1F808C0 		ldr	ip, [r1, #8]	@ _13, MEM[(struct SysTick_Type *)3758153744B].VAL
 2549              	@ main.c:1066: 			if (!(DHT_read( &AMh, &AMt,1,&AM2302_pin)) ){		// AM2302 read T & H
 2550 004a 4346     		mov	r3, r8	@, tmp153
 2551 004c 0122     		movs	r2, #1	@,
 2552 004e 0DF10601 		add	r1, sp, #6	@ tmp154,,
 2553 0052 01A8     		add	r0, sp, #4	@ tmp155,,
 2554              	@ main.c:1064: 			trg0 = SysTick->VAL;
 2555 0054 C4F800C0 		str	ip, [r4]	@ _13, trg0
 2556              	@ main.c:1066: 			if (!(DHT_read( &AMh, &AMt,1,&AM2302_pin)) ){		// AM2302 read T & H
 2557 0058 FFF7FEFF 		bl	DHT_read	@
 2558              	@ main.c:1069: 			LED^=1;
 2559 005c 3368     		ldr	r3, [r6]	@ _14, MEM[(volatile long unsigned int *)1109524916B]
 2560 005e 83F00103 		eor	r3, r3, #1	@ _15, _14,
 2561 0062 3360     		str	r3, [r6]	@ _15, MEM[(volatile long unsigned int *)1109524916B]
 2562              	@ main.c:1079: 			if(flag_9);
 2563 0064 3B68     		ldr	r3, [r7]	@ _21, *_20
 2564 0066 002B     		cmp	r3, #0	@ _21
 2565 0068 E7D1     		bne	.L205	@
ARM GAS  /tmp/ccpmJ073.s 			page 46


 2566              	@ main.c:1083: 			flag_9 ^=1;
 2567 006a 3B68     		ldr	r3, [r7]	@ _22, *_20
 2568 006c 83F00103 		eor	r3, r3, #1	@ _23, _22,
 2569 0070 3B60     		str	r3, [r7]	@ _23, *_20
 2570 0072 E2E7     		b	.L205	@
 2571              	.L211:
 2572              		.align	2
 2573              	.L210:
 2574 0074 000C0140 		.word	1073810432
 2575 0078 00100140 		.word	1073811456
 2576 007c 00001001 		.word	.LANCHOR8+17825792
 2577 0080 00000000 		.word	trg0
 2578 0084 40548900 		.word	9000000
 2579 0088 B4012242 		.word	1109524916
 2580 008c 10E000E0 		.word	-536813552
 2581 0090 3C012142 		.word	1109459260
 2582              		.size	wiznet5500, .-wiznet5500
 2583              		.section	.text.uv_meter,"ax",%progbits
 2584              		.align	1
 2585              		.p2align 2,,3
 2586              		.global	uv_meter
 2587              		.syntax unified
 2588              		.thumb
 2589              		.thumb_func
 2590              		.fpu softvfp
 2591              		.type	uv_meter, %function
 2592              	uv_meter:
 2593              		@ args = 0, pretend = 0, frame = 264
 2594              		@ frame_needed = 0, uses_anonymous_args = 0
 2595 0000 F0B5     		push	{r4, r5, r6, r7, lr}	@
 2596              	@ main.c:1097: 		PB10_o = 1;
 2597 0002 0124     		movs	r4, #1	@ tmp126,
 2598              	@ main.c:1095: 		GPIOA->CRL = (GPIOA->CRL & 0x000fffff) | 0xaa000000; // ADC12_IN5		
 2599 0004 1C4A     		ldr	r2, .L221	@ tmp121,
 2600              	@ main.c:1097: 		PB10_o = 1;
 2601 0006 1D48     		ldr	r0, .L221+4	@ tmp125,
 2602              	@ main.c:1095: 		GPIOA->CRL = (GPIOA->CRL & 0x000fffff) | 0xaa000000; // ADC12_IN5		
 2603 0008 1368     		ldr	r3, [r2]	@ _2, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 2604              	@ main.c:1098: 		LED = 1;
 2605 000a 1D49     		ldr	r1, .L221+8	@ tmp127,
 2606              	@ main.c:1095: 		GPIOA->CRL = (GPIOA->CRL & 0x000fffff) | 0xaa000000; // ADC12_IN5		
 2607 000c C3F31303 		ubfx	r3, r3, #0, #20	@ tmp122, _2,,
 2608 0010 43F02A43 		orr	r3, r3, #-1442840576	@ _4, tmp122,
 2609 0014 1360     		str	r3, [r2]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 2610              	@ main.c:1090: void uv_meter(void)			{
 2611 0016 C3B0     		sub	sp, sp, #268	@,,
 2612              	@ main.c:1097: 		PB10_o = 1;
 2613 0018 0460     		str	r4, [r0]	@ tmp126, MEM[(volatile long unsigned int *)1109492136B]
 2614              	@ main.c:1098: 		LED = 1;
 2615 001a 0C60     		str	r4, [r1]	@ tmp126, MEM[(volatile long unsigned int *)1109524916B]
 2616              	@ main.c:1099: 		I2C2_init();
 2617 001c FFF7FEFF 		bl	I2C2_init	@
 2618              	@ main.c:1106: 		ADC1->SQR3 = ( 5<<0*5 );		//(channel<<sequence*5) sequence=0..5   
 2619 0020 0527     		movs	r7, #5	@ tmp140,
 2620              	@ main.c:5235: 		RCC_APB2RSTR_ADC1RST_bb = 0;
 2621 0022 0022     		movs	r2, #0	@ tmp136,
 2622              	@ main.c:1107: 		ADC1->SMPR2 = (4<<5*3 );
ARM GAS  /tmp/ccpmJ073.s 			page 47


 2623 0024 4FF40036 		mov	r6, #131072	@ tmp142,
 2624              	@ main.c:1108: 		ADC1->CR1 = ADC_CR1_SCAN;			// multi channel mode		
 2625 0028 4FF48070 		mov	r0, #256	@ tmp144,
 2626              	@ main.c:5232: 		RCC->APB2ENR   |= RCC_APB2ENR_ADC1EN;	// enable clock for ADC1
 2627 002c 154B     		ldr	r3, .L221+12	@ tmp129,
 2628              	@ main.c:1126: 			b=0;
 2629 002e 1546     		mov	r5, r2	@ tmp153, tmp136
 2630              	@ main.c:5232: 		RCC->APB2ENR   |= RCC_APB2ENR_ADC1EN;	// enable clock for ADC1
 2631 0030 9969     		ldr	r1, [r3, #24]	@ _22, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 2632 0032 41F40071 		orr	r1, r1, #512	@ _23, _22,
 2633 0036 9961     		str	r1, [r3, #24]	@ _23, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 2634              	@ main.c:5233: 		RCC->CFGR 		 |= RCC_CFGR_ADCPRE_DIV4;  // 2/4/6/8 str98
 2635 0038 5968     		ldr	r1, [r3, #4]	@ _24, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 2636 003a 41F48041 		orr	r1, r1, #16384	@ _25, _24,
 2637 003e 5960     		str	r1, [r3, #4]	@ _25, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 2638              	@ main.c:5234: 		RCC_APB2RSTR_ADC1RST_bb = 1;		// Reset ADC1
 2639 0040 1149     		ldr	r1, .L221+16	@ tmp133,
 2640              	@ main.c:1105: 		ADC1->SQR1 = ( 0<<20 	); 		//length and sequence 12..15 conversion 13-16 on channe
 2641 0042 A3F56C43 		sub	r3, r3, #60416	@ tmp137, tmp137,
 2642              	@ main.c:5234: 		RCC_APB2RSTR_ADC1RST_bb = 1;		// Reset ADC1
 2643 0046 0C60     		str	r4, [r1]	@ tmp126, MEM[(volatile long unsigned int *)1111622052B]
 2644              	@ main.c:5235: 		RCC_APB2RSTR_ADC1RST_bb = 0;
 2645 0048 0A60     		str	r2, [r1]	@ tmp136, MEM[(volatile long unsigned int *)1111622052B]
 2646              	@ main.c:1105: 		ADC1->SQR1 = ( 0<<20 	); 		//length and sequence 12..15 conversion 13-16 on channe
 2647 004a DA62     		str	r2, [r3, #44]	@ tmp136, MEM[(struct ADC_TypeDef *)1073816576B].SQR1
 2648              	@ main.c:1106: 		ADC1->SQR3 = ( 5<<0*5 );		//(channel<<sequence*5) sequence=0..5   
 2649 004c 5F63     		str	r7, [r3, #52]	@ tmp140, MEM[(struct ADC_TypeDef *)1073816576B].SQR3
 2650              	@ main.c:1107: 		ADC1->SMPR2 = (4<<5*3 );
 2651 004e 1E61     		str	r6, [r3, #16]	@ tmp142, MEM[(struct ADC_TypeDef *)1073816576B].SMPR2
 2652              	@ main.c:1108: 		ADC1->CR1 = ADC_CR1_SCAN;			// multi channel mode		
 2653 0050 5860     		str	r0, [r3, #4]	@ tmp144, MEM[(struct ADC_TypeDef *)1073816576B].CR1
 2654              	@ main.c:1109: 		ADC1->CR2 |= ADC_CR2_ADON ;		// On ADC
 2655 0052 9A68     		ldr	r2, [r3, #8]	@ _5, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 2656              	@ main.c:1117: 			while(PB0_i==0);
 2657 0054 0D4C     		ldr	r4, .L221+20	@ tmp147,
 2658              	@ main.c:1109: 		ADC1->CR2 |= ADC_CR2_ADON ;		// On ADC
 2659 0056 42F00102 		orr	r2, r2, #1	@ _6, _5,
 2660 005a 9A60     		str	r2, [r3, #8]	@ _6, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 2661              	.L213:
 2662              	@ main.c:1117: 			while(PB0_i==0);
 2663 005c 2368     		ldr	r3, [r4]	@ _7, MEM[(volatile long unsigned int *)1109491968B]
 2664 005e 002B     		cmp	r3, #0	@ _7
 2665 0060 FCD0     		beq	.L213	@
 2666              	@ main.c:1121: 			i2c2_scan(a,&b);
 2667 0062 0DF10701 		add	r1, sp, #7	@ tmp157,,
 2668 0066 02A8     		add	r0, sp, #8	@ tmp158,,
 2669 0068 FFF7FEFF 		bl	i2c2_scan	@
 2670              	.L214:
 2671              	@ main.c:1125: 			while(PB0_i==1);
 2672 006c 2368     		ldr	r3, [r4]	@ _8, MEM[(volatile long unsigned int *)1109491968B]
 2673 006e 012B     		cmp	r3, #1	@ _8,
 2674 0070 FCD0     		beq	.L214	@,
 2675              	@ main.c:1126: 			b=0;
 2676 0072 8DF80750 		strb	r5, [sp, #7]	@ tmp153, b
 2677              	@ main.c:1117: 			while(PB0_i==0);
 2678 0076 F1E7     		b	.L213	@
 2679              	.L222:
ARM GAS  /tmp/ccpmJ073.s 			page 48


 2680              		.align	2
 2681              	.L221:
 2682 0078 00080140 		.word	1073809408
 2683 007c A8812142 		.word	1109492136
 2684 0080 B4012242 		.word	1109524916
 2685 0084 00100240 		.word	1073876992
 2686 0088 A4014242 		.word	1111622052
 2687 008c 00812142 		.word	1109491968
 2688              		.size	uv_meter, .-uv_meter
 2689              		.section	.text.IRQLoraInit,"ax",%progbits
 2690              		.align	1
 2691              		.p2align 2,,3
 2692              		.global	IRQLoraInit
 2693              		.syntax unified
 2694              		.thumb
 2695              		.thumb_func
 2696              		.fpu softvfp
 2697              		.type	IRQLoraInit, %function
 2698              	IRQLoraInit:
 2699              		@ args = 0, pretend = 0, frame = 0
 2700              		@ frame_needed = 0, uses_anonymous_args = 0
 2701              		@ link register save eliminated.
 2702              	@ main.c:1166: 		AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI0_PB;		// Enable interrupt port PA0
 2703 0000 0123     		movs	r3, #1	@ tmp111,
 2704              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 2705 0002 4020     		movs	r0, #64	@ tmp119,
 2706              	@ main.c:1157: void IRQLoraInit(void)	{
 2707 0004 10B4     		push	{r4}	@
 2708              	@ main.c:1167: 		EXTI->PR   = EXTI_PR_PR0;			// Clear interupt request EXTI0
 2709 0006 054A     		ldr	r2, .L225	@ tmp112,
 2710              	@ main.c:1166: 		AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI0_PB;		// Enable interrupt port PA0
 2711 0008 054C     		ldr	r4, .L225+4	@ tmp110,
 2712              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 2713 000a 0649     		ldr	r1, .L225+8	@ tmp118,
 2714              	@ main.c:1166: 		AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI0_PB;		// Enable interrupt port PA0
 2715 000c A360     		str	r3, [r4, #8]	@ tmp111, MEM[(struct AFIO_TypeDef *)1073807360B].EXTICR
 2716              	@ main.c:1167: 		EXTI->PR   = EXTI_PR_PR0;			// Clear interupt request EXTI0
 2717 000e 5361     		str	r3, [r2, #20]	@ tmp111, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 2718              	@ main.c:1172: 	}
 2719 0010 10BC     		pop	{r4}	@
 2720              	@ main.c:1168: 		EXTI->RTSR 	 = EXTI_RTSR_TR0;
 2721 0012 9360     		str	r3, [r2, #8]	@ tmp111, MEM[(struct EXTI_TypeDef *)1073808384B].RTSR
 2722              	@ main.c:1170: 		EXTI->IMR  =  EXTI_IMR_MR0;		// Interrupt mask register EXTI_IMR
 2723 0014 1360     		str	r3, [r2]	@ tmp111, MEM[(struct EXTI_TypeDef *)1073808384B].IMR
 2724              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 2725 0016 0860     		str	r0, [r1]	@ tmp119, MEM[(struct NVIC_Type *)3758153984B].ISER
 2726              	@ main.c:1172: 	}
 2727 0018 7047     		bx	lr	@
 2728              	.L226:
 2729 001a 00BF     		.align	2
 2730              	.L225:
 2731 001c 00040140 		.word	1073808384
 2732 0020 00000140 		.word	1073807360
 2733 0024 00E100E0 		.word	-536813312
 2734              		.size	IRQLoraInit, .-IRQLoraInit
 2735              		.section	.text.LoRaRX,"ax",%progbits
 2736              		.align	1
ARM GAS  /tmp/ccpmJ073.s 			page 49


 2737              		.p2align 2,,3
 2738              		.global	LoRaRX
 2739              		.syntax unified
 2740              		.thumb
 2741              		.thumb_func
 2742              		.fpu softvfp
 2743              		.type	LoRaRX, %function
 2744              	LoRaRX:
 2745              		@ args = 0, pretend = 0, frame = 80
 2746              		@ frame_needed = 0, uses_anonymous_args = 0
 2747 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 2748              	@ main.c:1202: 		SX1278_begin(&SX1278_1, SX1278_433MHZ, SX1278_POWER_11DBM, SX1278_LORA_SF_7,SX1278
 2749 0004 0926     		movs	r6, #9	@ tmp180,
 2750 0006 0022     		movs	r2, #0	@,
 2751              	@ main.c:1192: 		GPIOA->CRL = (GPIOA->CRL & 0xfff00000) | 0x00044343;	//   PA2=MOSI, PA1=MISO, PA0=
 2752 0008 4E4C     		ldr	r4, .L237	@ tmp157,
 2753 000a 4F49     		ldr	r1, .L237+4	@ _3,
 2754 000c 2368     		ldr	r3, [r4]	@ _1, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 2755              	@ main.c:1193: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 2756 000e 4F48     		ldr	r0, .L237+8	@ tmp162,
 2757              	@ main.c:1192: 		GPIOA->CRL = (GPIOA->CRL & 0xfff00000) | 0x00044343;	//   PA2=MOSI, PA1=MISO, PA0=
 2758 0010 1B0D     		lsrs	r3, r3, #20	@ tmp158, _1,
 2759 0012 1B05     		lsls	r3, r3, #20	@ tmp158, tmp158,
 2760 0014 1943     		orrs	r1, r1, r3	@, _3, _3, tmp158
 2761 0016 2160     		str	r1, [r4]	@ _3, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 2762              	@ main.c:1193: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 2763 0018 4368     		ldr	r3, [r0, #4]	@ _4, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 2764              	@ main.c:1194: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 2); 
 2765 001a 4D4F     		ldr	r7, .L237+12	@ tmp242,
 2766              	@ main.c:1193: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 2767 001c 23F0FF03 		bic	r3, r3, #255	@ tmp163, _4,
 2768              	@ main.c:1173: void LoRaRX(void)				{
 2769 0020 97B0     		sub	sp, sp, #92	@,,
 2770              	@ main.c:1193: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 2771 0022 43F03303 		orr	r3, r3, #51	@ _6, tmp163,
 2772              	@ main.c:1195: 		SX1278_hw1.miso = (u32 *)m_BITBAND_PERIPH(&GPIOA->IDR, 1); 
 2773 0026 4B4C     		ldr	r4, .L237+16	@ tmp168,
 2774              	@ main.c:1193: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 2775 0028 4360     		str	r3, [r0, #4]	@ _6, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 2776              	@ main.c:1201: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 2777 002a 4B4D     		ldr	r5, .L237+20	@ tmp177,
 2778              	@ main.c:1202: 		SX1278_begin(&SX1278_1, SX1278_433MHZ, SX1278_POWER_11DBM, SX1278_LORA_SF_7,SX1278
 2779 002c 0096     		str	r6, [sp]	@ tmp180,
 2780              	@ main.c:1196: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 0); 
 2781 002e DFF844E1 		ldr	lr, .L237+48	@ tmp170,
 2782              	@ main.c:1197: 		SX1278_hw1.nss  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 8); 
 2783 0032 DFF844C1 		ldr	ip, .L237+52	@ tmp172,
 2784              	@ main.c:1194: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 2); 
 2785 0036 DFF84481 		ldr	r8, .L237+56	@ tmp166,
 2786              	@ main.c:1198: 		SX1278_hw1.rst  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 9); 
 2787 003a 484E     		ldr	r6, .L237+24	@ tmp174,
 2788              	@ main.c:1195: 		SX1278_hw1.miso = (u32 *)m_BITBAND_PERIPH(&GPIOA->IDR, 1); 
 2789 003c 7C60     		str	r4, [r7, #4]	@ tmp168, SX1278_hw1.miso
 2790              	@ main.c:1199: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 1); 
 2791 003e 04F50044 		add	r4, r4, #32768	@ tmp176, tmp176,
 2792              	@ main.c:1202: 		SX1278_begin(&SX1278_1, SX1278_433MHZ, SX1278_POWER_11DBM, SX1278_LORA_SF_7,SX1278
 2793 0042 1146     		mov	r1, r2	@,
ARM GAS  /tmp/ccpmJ073.s 			page 50


 2794 0044 0123     		movs	r3, #1	@,
 2795              	@ main.c:1198: 		SX1278_hw1.rst  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 9); 
 2796 0046 C7E903C6 		strd	ip, r6, [r7, #12]	@ tmp172, tmp174, tmp242,
 2797              	@ main.c:1202: 		SX1278_begin(&SX1278_1, SX1278_433MHZ, SX1278_POWER_11DBM, SX1278_LORA_SF_7,SX1278
 2798 004a 2846     		mov	r0, r5	@, tmp177
 2799              	@ main.c:1194: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 2); 
 2800 004c C7F80080 		str	r8, [r7]	@ tmp166, SX1278_hw1.mosi
 2801              	@ main.c:1196: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 0); 
 2802 0050 C7F808E0 		str	lr, [r7, #8]	@ tmp170, SX1278_hw1.sck
 2803              	@ main.c:1199: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 1); 
 2804 0054 7C61     		str	r4, [r7, #20]	@ tmp176, SX1278_hw1.dio0
 2805              	@ main.c:1201: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 2806 0056 2F60     		str	r7, [r5]	@ tmp242, SX1278_1.hw
 2807              	@ main.c:1202: 		SX1278_begin(&SX1278_1, SX1278_433MHZ, SX1278_POWER_11DBM, SX1278_LORA_SF_7,SX1278
 2808 0058 FFF7FEFF 		bl	SX1278_begin	@
 2809              	@ main.c:1209: 		ret = SX1278_LoRaEntryRx(&SX1278_1, 7, 2000);
 2810 005c 4FF4FA62 		mov	r2, #2000	@,
 2811 0060 2846     		mov	r0, r5	@, tmp177
 2812 0062 0721     		movs	r1, #7	@,
 2813 0064 FFF7FEFF 		bl	SX1278_LoRaEntryRx	@
 2814              	@ main.c:1233: 		flag_10=0;
 2815 0068 0022     		movs	r2, #0	@ tmp187,
 2816              	@ main.c:1265: 				SX1278_LoRaRx(&SX1278_1);  // Odczyt danych do buforów
 2817 006a A946     		mov	r9, r5	@ tmp245, tmp177
 2818              	@ main.c:1226: 		trg1  = SysTick->VAL;
 2819 006c 3C4B     		ldr	r3, .L237+28	@ tmp182,
 2820              	@ main.c:1233: 		flag_10=0;
 2821 006e 3D4C     		ldr	r4, .L237+32	@ tmp185,
 2822              	@ main.c:1323: 					trg1  = SysTick->VAL;
 2823 0070 9A46     		mov	r10, r3	@ tmp247, tmp182
 2824              	@ main.c:1226: 		trg1  = SysTick->VAL;
 2825 0072 3D4E     		ldr	r6, .L237+36	@ tmp243,
 2826 0074 9B68     		ldr	r3, [r3, #8]	@ _7, MEM[(struct SysTick_Type *)3758153744B].VAL
 2827              	@ main.c:1233: 		flag_10=0;
 2828 0076 6401     		lsls	r4, r4, #5	@ tmp186, tmp185,
 2829              	@ main.c:1322: 					LED = 0;
 2830 0078 DFF804B1 		ldr	fp, .L237+60	@ tmp246,
 2831              	@ main.c:1226: 		trg1  = SysTick->VAL;
 2832 007c 3360     		str	r3, [r6]	@ _7, trg1
 2833 007e 05F10A08 		add	r8, r5, #10	@ tmp244, tmp177,
 2834              	@ main.c:1233: 		flag_10=0;
 2835 0082 A262     		str	r2, [r4, #40]	@ tmp187, *_12
 2836 0084 2834     		adds	r4, r4, #40	@ _12, tmp186,
 2837              	.L228:
 2838              	@ main.c:1257: 			if( (flag_10==0) && *SX1278_hw1.dio0==1 )  {
 2839 0086 2568     		ldr	r5, [r4]	@ _25, *_12
 2840 0088 1DB9     		cbnz	r5, .L229	@ _25,
 2841              	@ main.c:1257: 			if( (flag_10==0) && *SX1278_hw1.dio0==1 )  {
 2842 008a 7B69     		ldr	r3, [r7, #20]	@ _26, SX1278_hw1.dio0
 2843 008c 1B68     		ldr	r3, [r3]	@ _27, *_26
 2844 008e 012B     		cmp	r3, #1	@ _27,
 2845 0090 1DD0     		beq	.L236	@,
 2846              	.L229:
 2847              	@ main.c:1328: 			if(flag_10 && (*SX1278_hw1.dio0)==0 ) { flag_10=0; }
 2848 0092 2368     		ldr	r3, [r4]	@ _49, *_12
 2849              	@ main.c:1330: 			if((STCLK_MS*300 < (trg1 - SysTick->VAL)) && LED==0){	
 2850 0094 354A     		ldr	r2, .L237+40	@ tmp235,
ARM GAS  /tmp/ccpmJ073.s 			page 51


 2851              	@ main.c:1328: 			if(flag_10 && (*SX1278_hw1.dio0)==0 ) { flag_10=0; }
 2852 0096 1BB1     		cbz	r3, .L230	@ _49,
 2853              	@ main.c:1328: 			if(flag_10 && (*SX1278_hw1.dio0)==0 ) { flag_10=0; }
 2854 0098 7B69     		ldr	r3, [r7, #20]	@ _50, SX1278_hw1.dio0
 2855 009a 1B68     		ldr	r3, [r3]	@ _51, *_50
 2856 009c 03B9     		cbnz	r3, .L230	@ _51,
 2857              	@ main.c:1328: 			if(flag_10 && (*SX1278_hw1.dio0)==0 ) { flag_10=0; }
 2858 009e 2360     		str	r3, [r4]	@ _51, *_12
 2859              	.L230:
 2860              	@ main.c:1330: 			if((STCLK_MS*300 < (trg1 - SysTick->VAL)) && LED==0){	
 2861 00a0 3368     		ldr	r3, [r6]	@ trg1.82_52, trg1
 2862 00a2 DAF80810 		ldr	r1, [r10, #8]	@ _53, MEM[(struct SysTick_Type *)3758153744B].VAL
 2863 00a6 5B1A     		subs	r3, r3, r1	@ tmp234, trg1.82_52, _53
 2864 00a8 9342     		cmp	r3, r2	@ tmp234, tmp235
 2865 00aa ECD9     		bls	.L228	@,
 2866              	@ main.c:1330: 			if((STCLK_MS*300 < (trg1 - SysTick->VAL)) && LED==0){	
 2867 00ac DBF80030 		ldr	r3, [fp]	@ _55, MEM[(volatile long unsigned int *)1109524916B]
 2868 00b0 002B     		cmp	r3, #0	@ _55
 2869 00b2 E8D1     		bne	.L228	@
 2870              	@ main.c:1333: 				LED = 1;
 2871 00b4 0123     		movs	r3, #1	@ tmp240,
 2872              	@ main.c:1331: 					trg1  = SysTick->VAL;
 2873 00b6 DAF80820 		ldr	r2, [r10, #8]	@ _56, MEM[(struct SysTick_Type *)3758153744B].VAL
 2874 00ba 3260     		str	r2, [r6]	@ _56, trg1
 2875              	@ main.c:1333: 				LED = 1;
 2876 00bc CBF80030 		str	r3, [fp]	@ tmp240, MEM[(volatile long unsigned int *)1109524916B]
 2877              	@ main.c:1257: 			if( (flag_10==0) && *SX1278_hw1.dio0==1 )  {
 2878 00c0 2568     		ldr	r5, [r4]	@ _25, *_12
 2879 00c2 002D     		cmp	r5, #0	@ _25
 2880 00c4 E5D1     		bne	.L229	@
 2881 00c6 7B69     		ldr	r3, [r7, #20]	@ _26, SX1278_hw1.dio0
 2882 00c8 1B68     		ldr	r3, [r3]	@ _27, *_26
 2883 00ca 012B     		cmp	r3, #1	@ _27,
 2884 00cc E1D1     		bne	.L229	@,
 2885              	.L236:
 2886              	@ main.c:1265: 				SX1278_LoRaRx(&SX1278_1);  // Odczyt danych do buforów
 2887 00ce 4846     		mov	r0, r9	@, tmp245
 2888 00d0 0593     		str	r3, [sp, #20]	@ _27, %sfp
 2889 00d2 FFF7FEFF 		bl	SX1278_LoRaRx	@
 2890              	@ main.c:1275: 				prssi = SX1278_SPIRead(&SX1278_1, LR_RegPktRssiValue)-164;
 2891 00d6 1A21     		movs	r1, #26	@,
 2892 00d8 4846     		mov	r0, r9	@, tmp245
 2893 00da FFF7FEFF 		bl	SX1278_SPIRead	@
 2894              	@ main.c:1282: 				memcpy(buf_rx, SX1278_1.rxBuffer, 7);
 2895 00de B8F80420 		ldrh	r2, [r8, #4]	@ unaligned	@ tmp198, MEM[(void *)&SX1278_1 + 10B]
 2896 00e2 D8F80000 		ldr	r0, [r8]	@ unaligned	@, MEM[(void *)&SX1278_1 + 10B]
 2897 00e6 ADF81C20 		strh	r2, [sp, #28]	@ unaligned	@ tmp198, MEM[(void *)&buf_rx]
 2898              	@ main.c:1289: 				Cnt= (s16)(buf_rx[4]+(buf_rx[5]<<8));
 2899 00ea 9DF81D10 		ldrb	r1, [sp, #29]	@ zero_extendqisi2	@ buf_rx, buf_rx
 2900 00ee 9DF81C20 		ldrb	r2, [sp, #28]	@ zero_extendqisi2	@ buf_rx, buf_rx
 2901              	@ main.c:1282: 				memcpy(buf_rx, SX1278_1.rxBuffer, 7);
 2902 00f2 98F806C0 		ldrb	ip, [r8, #6]	@ zero_extendqisi2	@ MEM[(void *)&SX1278_1 + 10B], MEM[(void *)&SX1278_1 + 10B]
 2903              	@ main.c:1289: 				Cnt= (s16)(buf_rx[4]+(buf_rx[5]<<8));
 2904 00f6 02EB0122 		add	r2, r2, r1, lsl #8	@ tmp215, buf_rx, buf_rx,
 2905 00fa 92B2     		uxth	r2, r2	@ Cnt, tmp215
 2906              	@ main.c:1288: 				t2 = (s16)(buf_rx[2]+(buf_rx[3]<<8));
 2907 00fc 0114     		asrs	r1, r0, #16	@ t2,,
ARM GAS  /tmp/ccpmJ073.s 			page 52


 2908              	@ main.c:1282: 				memcpy(buf_rx, SX1278_1.rxBuffer, 7);
 2909 00fe 0690     		str	r0, [sp, #24]	@, MEM[(void *)&buf_rx]
 2910              	@ main.c:1296: 					sint2uart(t1);	//UaPutK("  ");
 2911 0100 00B2     		sxth	r0, r0	@,
 2912              	@ main.c:1282: 				memcpy(buf_rx, SX1278_1.rxBuffer, 7);
 2913 0102 8DF81EC0 		strb	ip, [sp, #30]	@ MEM[(void *)&SX1278_1 + 10B], MEM[(void *)&buf_rx]
 2914              	@ main.c:1289: 				Cnt= (s16)(buf_rx[4]+(buf_rx[5]<<8));
 2915 0106 0392     		str	r2, [sp, #12]	@ Cnt, %sfp
 2916              	@ main.c:1288: 				t2 = (s16)(buf_rx[2]+(buf_rx[3]<<8));
 2917 0108 0491     		str	r1, [sp, #16]	@ t2, %sfp
 2918              	@ main.c:1281: 				buf_rx[7] = 0;
 2919 010a 8DF81F50 		strb	r5, [sp, #31]	@ _25, buf_rx
 2920              	@ main.c:1296: 					sint2uart(t1);	//UaPutK("  ");
 2921 010e FFF7FEFF 		bl	sint2uart	@
 2922              	@ main.c:1297: 					UaPutC(',');					
 2923 0112 2C20     		movs	r0, #44	@,
 2924 0114 FFF7FEFF 		bl	UaPutC	@
 2925              	@ main.c:1298: 					sint2uart(t2);	//UaPutK("  ");
 2926 0118 0499     		ldr	r1, [sp, #16]	@ t2, %sfp
 2927 011a 0846     		mov	r0, r1	@, t2
 2928 011c FFF7FEFF 		bl	sint2uart	@
 2929              	@ main.c:1299: 					UaPutC(',');					
 2930 0120 2C20     		movs	r0, #44	@,
 2931 0122 FFF7FEFF 		bl	UaPutC	@
 2932              	@ main.c:1300: 					sint2uart(Cnt);	//UaPutK("  ");
 2933 0126 039A     		ldr	r2, [sp, #12]	@ Cnt, %sfp
 2934 0128 1046     		mov	r0, r2	@, Cnt
 2935 012a FFF7FEFF 		bl	sint2uart	@
 2936              	@ main.c:1301: 					UaPutS("\n");					
 2937 012e 1048     		ldr	r0, .L237+44	@,
 2938 0130 FFF7FEFF 		bl	UaPutS	@
 2939              	@ main.c:1322: 					LED = 0;
 2940 0134 CBF80050 		str	r5, [fp]	@ _25, MEM[(volatile long unsigned int *)1109524916B]
 2941              	@ main.c:1323: 					trg1  = SysTick->VAL;
 2942 0138 DAF80820 		ldr	r2, [r10, #8]	@ _48, MEM[(struct SysTick_Type *)3758153744B].VAL
 2943              	@ main.c:1325: 				flag_10 = 1;
 2944 013c 059B     		ldr	r3, [sp, #20]	@ _27, %sfp
 2945              	@ main.c:1323: 					trg1  = SysTick->VAL;
 2946 013e 3260     		str	r2, [r6]	@ _48, trg1
 2947              	@ main.c:1325: 				flag_10 = 1;
 2948 0140 2360     		str	r3, [r4]	@ _27, *_12
 2949 0142 A6E7     		b	.L229	@
 2950              	.L238:
 2951              		.align	2
 2952              	.L237:
 2953 0144 00080140 		.word	1073809408
 2954 0148 43430400 		.word	279363
 2955 014c 000C0140 		.word	1073810432
 2956 0150 00000000 		.word	.LANCHOR9
 2957 0154 04012142 		.word	1109459204
 2958 0158 00000000 		.word	.LANCHOR10
 2959 015c A4812142 		.word	1109492132
 2960 0160 10E000E0 		.word	-536813552
 2961 0164 00001001 		.word	.LANCHOR8+17825792
 2962 0168 00000000 		.word	trg1
 2963 016c E0322900 		.word	2700000
 2964 0170 00000000 		.word	.LC36
ARM GAS  /tmp/ccpmJ073.s 			page 53


 2965 0174 80012142 		.word	1109459328
 2966 0178 A0812142 		.word	1109492128
 2967 017c 88012142 		.word	1109459336
 2968 0180 B4012242 		.word	1109524916
 2969              		.size	LoRaRX, .-LoRaRX
 2970              		.section	.text.LoRaRX1,"ax",%progbits
 2971              		.align	1
 2972              		.p2align 2,,3
 2973              		.global	LoRaRX1
 2974              		.syntax unified
 2975              		.thumb
 2976              		.thumb_func
 2977              		.fpu softvfp
 2978              		.type	LoRaRX1, %function
 2979              	LoRaRX1:
 2980              		@ args = 0, pretend = 0, frame = 24
 2981              		@ frame_needed = 0, uses_anonymous_args = 0
 2982              	@ main.c:1367: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 2983 0000 0022     		movs	r2, #0	@,
 2984              	@ main.c:1338: void LoRaRX1(void)	{
 2985 0002 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 2986              	@ main.c:1348: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 2987 0006 3021     		movs	r1, #48	@ tmp169,
 2988 0008 4FF00109 		mov	r9, #1	@ tmp166,
 2989              	@ main.c:1367: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 2990 000c 4FF0090A 		mov	r10, #9	@ tmp192,
 2991              	@ main.c:1375: 		flag_9=0;
 2992 0010 1746     		mov	r7, r2	@ tmp197,
 2993              	@ main.c:1348: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 2994 0012 DFF89082 		ldr	r8, .L265+108	@ tmp257,
 2995              	@ main.c:1349: 		LED=1;
 2996 0016 884D     		ldr	r5, .L265	@ tmp171,
 2997              	@ main.c:1348: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 2998 0018 D8F80030 		ldr	r3, [r8]	@ p_Fifo1.83_1, p_Fifo1
 2999              	@ main.c:1352: 		GPIOB->CRH = (GPIOB->CRH & 0x0000ff00) | 0x43430033;	//   
 3000 001c 8748     		ldr	r0, .L265+4	@ tmp173,
 3001              	@ main.c:1348: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3002 001e A3F80490 		strh	r9, [r3, #4]	@ movhi	@ tmp166, p_Fifo1.83_1->rct
 3003 0022 A3F80290 		strh	r9, [r3, #2]	@ movhi	@ tmp166, p_Fifo1.83_1->rwi
 3004 0026 9971     		strb	r1, [r3, #6]	@ tmp169, p_Fifo1.83_1->rbuf
 3005              	@ main.c:1349: 		LED=1;
 3006 0028 C5F80090 		str	r9, [r5]	@ tmp166, MEM[(volatile long unsigned int *)1109524916B]
 3007              	@ main.c:1352: 		GPIOB->CRH = (GPIOB->CRH & 0x0000ff00) | 0x43430033;	//   
 3008 002c 4168     		ldr	r1, [r0, #4]	@ _6, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 3009 002e 844B     		ldr	r3, .L265+8	@ _9,
 3010              	@ main.c:1353: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 12); 
 3011 0030 844E     		ldr	r6, .L265+12	@ tmp255,
 3012              	@ main.c:1352: 		GPIOB->CRH = (GPIOB->CRH & 0x0000ff00) | 0x43430033;	//   
 3013 0032 01F47F41 		and	r1, r1, #65280	@ tmp174, _6,
 3014              	@ main.c:1353: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 12); 
 3015 0036 DFF870C2 		ldr	ip, .L265+112	@ tmp178,
 3016              	@ main.c:1352: 		GPIOB->CRH = (GPIOB->CRH & 0x0000ff00) | 0x43430033;	//   
 3017 003a 0B43     		orrs	r3, r3, r1	@, _9, _9, tmp174
 3018              	@ main.c:1354: 		SX1278_hw1.miso = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 13); 
 3019 003c DFF86CE2 		ldr	lr, .L265+116	@ tmp180,
 3020              	@ main.c:1352: 		GPIOB->CRH = (GPIOB->CRH & 0x0000ff00) | 0x43430033;	//   
 3021 0040 4360     		str	r3, [r0, #4]	@ _9, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
ARM GAS  /tmp/ccpmJ073.s 			page 54


 3022              	@ main.c:1366: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 3023 0042 814C     		ldr	r4, .L265+16	@ tmp256,
 3024              	@ main.c:1353: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 12); 
 3025 0044 C6F800C0 		str	ip, [r6]	@ tmp178, SX1278_hw1.mosi
 3026              	@ main.c:1355: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 14); 
 3027 0048 0CF1080C 		add	ip, ip, #8	@ tmp182, tmp182,
 3028              	@ main.c:1338: void LoRaRX1(void)	{
 3029 004c 89B0     		sub	sp, sp, #36	@,,
 3030              	@ main.c:1355: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 14); 
 3031 004e C6E901EC 		strd	lr, ip, [r6, #4]	@ tmp180, tmp182, tmp255,
 3032              	@ main.c:1356: 		SX1278_hw1.nss  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 8); 
 3033 0052 0EF16C0E 		add	lr, lr, #108	@ tmp184, tmp184,
 3034              	@ main.c:1357: 		SX1278_hw1.rst  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 9); 
 3035 0056 ACF1140C 		sub	ip, ip, #20	@ tmp186, tmp186,
 3036 005a C6E903EC 		strd	lr, ip, [r6, #12]	@ tmp184, tmp186, tmp255,
 3037              	@ main.c:1367: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3038 005e 4B46     		mov	r3, r9	@, tmp166
 3039              	@ main.c:1358: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 15); 
 3040 0060 ACF1680C 		sub	ip, ip, #104	@ tmp188, tmp188,
 3041              	@ main.c:1367: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3042 0064 1146     		mov	r1, r2	@,
 3043 0066 CDF800A0 		str	r10, [sp]	@ tmp192,
 3044 006a 2046     		mov	r0, r4	@, tmp256
 3045              	@ main.c:1358: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 15); 
 3046 006c C6F814C0 		str	ip, [r6, #20]	@ tmp188, SX1278_hw1.dio0
 3047              	@ main.c:1467: 					LED ^= 1;
 3048 0070 0495     		str	r5, [sp, #16]	@ tmp171, %sfp
 3049              	@ main.c:1366: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 3050 0072 2660     		str	r6, [r4]	@ tmp255, SX1278_1.hw
 3051              	@ main.c:1367: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3052 0074 FFF7FEFF 		bl	SX1278_begin	@
 3053              	@ main.c:1368: 		SX1278_LoRaEntryRx(&SX1278_1, 64, 2000);
 3054 0078 4FF4FA62 		mov	r2, #2000	@,
 3055 007c 4021     		movs	r1, #64	@,
 3056 007e 2046     		mov	r0, r4	@, tmp256
 3057 0080 FFF7FEFF 		bl	SX1278_LoRaEntryRx	@
 3058              	@ main.c:1375: 		flag_9=0;
 3059 0084 714B     		ldr	r3, .L265+20	@ tmp195,
 3060              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 3061 0086 724A     		ldr	r2, .L265+24	@ tmp198,
 3062              	@ main.c:1375: 		flag_9=0;
 3063 0088 5B01     		lsls	r3, r3, #5	@ tmp196, tmp195,
 3064 008a 5F62     		str	r7, [r3, #36]	@ tmp197, *_14
 3065              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 3066 008c 9168     		ldr	r1, [r2, #8]	@ _126, MEM[(struct SysTick_Type *)3758153744B].VAL
 3067 008e 714B     		ldr	r3, .L265+28	@ tmp199,
 3068              	@ main.c:1379: 		UaPutK(" Time=");		uint2uart(tim/TIM_US);			
 3069 0090 7148     		ldr	r0, .L265+32	@,
 3070              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 3071 0092 1960     		str	r1, [r3]	@ _126, Timt
 3072              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 3073 0094 1D68     		ldr	r5, [r3]	@ Timt.47_123, Timt
 3074 0096 9368     		ldr	r3, [r2, #8]	@ _124, MEM[(struct SysTick_Type *)3758153744B].VAL
 3075 0098 ED1A     		subs	r5, r5, r3	@ _125, Timt.47_123, _124
 3076 009a 0795     		str	r5, [sp, #28]	@ _125, MEM[(volatile u32 *)&tim]
 3077              	@ main.c:1379: 		UaPutK(" Time=");		uint2uart(tim/TIM_US);			
 3078 009c FFF7FEFF 		bl	UaPutK	@
ARM GAS  /tmp/ccpmJ073.s 			page 55


 3079 00a0 6E48     		ldr	r0, .L265+36	@ tmp205,
 3080              	@ main.c:1363: 		sx[3]=SX1278_LORA_BW_500KHZ;
 3081 00a2 CDF80CA0 		str	r10, [sp, #12]	@ tmp192, %sfp
 3082              	@ main.c:1379: 		UaPutK(" Time=");		uint2uart(tim/TIM_US);			
 3083 00a6 A0FB0530 		umull	r3, r0, r0, r5	@ tmp267, tmp204, tmp205, _125
 3084 00aa 20FA09F0 		lsr	r0, r0, r9	@, tmp204,
 3085 00ae FFF7FEFF 		bl	uint2uart	@
 3086              	@ main.c:1364: 		sx[4]=10;
 3087 00b2 0A23     		movs	r3, #10	@ sx$4,
 3088              	@ main.c:1361: 		sx[1]=SX1278_POWER_11DBM;
 3089 00b4 BA46     		mov	r10, r7	@ sx$1, tmp197
 3090 00b6 6A4D     		ldr	r5, .L265+40	@ tmp253,
 3091              	@ main.c:1472: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){	
 3092 00b8 6A4F     		ldr	r7, .L265+44	@ tmp250,
 3093              	@ main.c:1364: 		sx[4]=10;
 3094 00ba 0593     		str	r3, [sp, #20]	@ sx$4, %sfp
 3095              	.L240:
 3096              	@ main.c:1387: 			if(p_Fifo1->rct){
 3097 00bc D8F80030 		ldr	r3, [r8]	@ p_Fifo1.89_16, p_Fifo1
 3098 00c0 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.89_16->rct
 3099 00c2 9BB2     		uxth	r3, r3	@ _17, p_Fifo1.89_16->rct
 3100 00c4 8BB9     		cbnz	r3, .L263	@ _17,
 3101              	.L241:
 3102              	@ main.c:1443: 			if( *SX1278_hw1.dio0 ){
 3103 00c6 7369     		ldr	r3, [r6, #20]	@ _34, SX1278_hw1.dio0
 3104 00c8 1B68     		ldr	r3, [r3]	@ _35, *_34
 3105 00ca 002B     		cmp	r3, #0	@ _35
 3106 00cc 43D1     		bne	.L264	@
 3107              	.L252:
 3108              	@ main.c:1472: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){	
 3109 00ce 604A     		ldr	r2, .L265+24	@ tmp248,
 3110 00d0 2B68     		ldr	r3, [r5]	@ trg0.92_45, trg0
 3111 00d2 9168     		ldr	r1, [r2, #8]	@ _47, MEM[(struct SysTick_Type *)3758153744B].VAL
 3112 00d4 5B1A     		subs	r3, r3, r1	@ tmp249, trg0.92_45, _47
 3113 00d6 BB42     		cmp	r3, r7	@ tmp249, tmp250
 3114 00d8 F0D9     		bls	.L240	@,
 3115              	@ main.c:1473: 				trg0  = SysTick->VAL;	
 3116 00da 9368     		ldr	r3, [r2, #8]	@ _50, MEM[(struct SysTick_Type *)3758153744B].VAL
 3117 00dc 2B60     		str	r3, [r5]	@ _50, trg0
 3118              	@ main.c:1387: 			if(p_Fifo1->rct){
 3119 00de D8F80030 		ldr	r3, [r8]	@ p_Fifo1.89_16, p_Fifo1
 3120 00e2 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.89_16->rct
 3121 00e4 9BB2     		uxth	r3, r3	@ _17, p_Fifo1.89_16->rct
 3122 00e6 002B     		cmp	r3, #0	@ _17
 3123 00e8 EDD0     		beq	.L241	@
 3124              	.L263:
 3125              	@ main.c:1388: 				UART_getChar( (char*)&swh);
 3126 00ea 0DF11B00 		add	r0, sp, #27	@ tmp271,,
 3127 00ee FFF7FEFF 		bl	UART_getChar	@
 3128              	@ main.c:1390: 				switch (swh)	{
 3129 00f2 9DF81B30 		ldrb	r3, [sp, #27]	@ zero_extendqisi2	@ swh, swh
 3130 00f6 623B     		subs	r3, r3, #98	@ tmp211, swh,
 3131 00f8 112B     		cmp	r3, #17	@ tmp211,
 3132 00fa 17D8     		bhi	.L242	@
 3133 00fc DFE803F0 		tbb	[pc, r3]	@ tmp211
 3134              	.L244:
 3135 0100 53       		.byte	(.L243-.L244)/2
ARM GAS  /tmp/ccpmJ073.s 			page 56


 3136 0101 16       		.byte	(.L242-.L244)/2
 3137 0102 45       		.byte	(.L245-.L244)/2
 3138 0103 16       		.byte	(.L242-.L244)/2
 3139 0104 16       		.byte	(.L242-.L244)/2
 3140 0105 16       		.byte	(.L242-.L244)/2
 3141 0106 16       		.byte	(.L242-.L244)/2
 3142 0107 16       		.byte	(.L242-.L244)/2
 3143 0108 16       		.byte	(.L242-.L244)/2
 3144 0109 16       		.byte	(.L242-.L244)/2
 3145 010a 16       		.byte	(.L242-.L244)/2
 3146 010b 16       		.byte	(.L242-.L244)/2
 3147 010c 16       		.byte	(.L242-.L244)/2
 3148 010d 16       		.byte	(.L242-.L244)/2
 3149 010e 74       		.byte	(.L246-.L244)/2
 3150 010f 61       		.byte	(.L247-.L244)/2
 3151 0110 82       		.byte	(.L248-.L244)/2
 3152 0111 09       		.byte	(.L249-.L244)/2
 3153              		.p2align 1
 3154              	.L249:
 3155              	@ main.c:1414: 					UaPutK("\r\n 0-6("); uint2uart(sx[2]);UaPutK(") SF=");					
 3156 0112 5548     		ldr	r0, .L265+48	@,
 3157 0114 FFF7FEFF 		bl	UaPutK	@
 3158 0118 4846     		mov	r0, r9	@, sx$2
 3159 011a FFF7FEFF 		bl	uint2uart	@
 3160 011e 5348     		ldr	r0, .L265+52	@,
 3161 0120 FFF7FEFF 		bl	UaPutK	@
 3162              	@ main.c:1415: 					sx[2] = UART_getNum();					
 3163 0124 FFF7FEFF 		bl	UART_getNum	@
 3164 0128 5FFA80F9 		uxtb	r9, r0	@ sx$2,
 3165              	.L242:
 3166              	@ main.c:1430: 				SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3167 012c 039B     		ldr	r3, [sp, #12]	@ sx$3, %sfp
 3168 012e 5246     		mov	r2, r10	@, sx$1
 3169 0130 0093     		str	r3, [sp]	@ sx$3,
 3170 0132 0021     		movs	r1, #0	@,
 3171 0134 4B46     		mov	r3, r9	@, sx$2
 3172 0136 2046     		mov	r0, r4	@, tmp260
 3173 0138 FFF7FEFF 		bl	SX1278_begin	@
 3174              	@ main.c:1431: 				SX1278_LoRaEntryRx(&SX1278_1, 64, 2000);
 3175 013c 4FF4FA62 		mov	r2, #2000	@,
 3176 0140 4021     		movs	r1, #64	@,
 3177 0142 2046     		mov	r0, r4	@, tmp260
 3178 0144 FFF7FEFF 		bl	SX1278_LoRaEntryRx	@
 3179              	@ main.c:1433: 				UaPutK("\r\n Menu > ");
 3180 0148 4948     		ldr	r0, .L265+56	@,
 3181 014a FFF7FEFF 		bl	UaPutK	@
 3182              	@ main.c:1443: 			if( *SX1278_hw1.dio0 ){
 3183 014e 7369     		ldr	r3, [r6, #20]	@ _34, SX1278_hw1.dio0
 3184 0150 1B68     		ldr	r3, [r3]	@ _35, *_34
 3185 0152 002B     		cmp	r3, #0	@ _35
 3186 0154 BBD0     		beq	.L252	@
 3187              	.L264:
 3188              	@ main.c:1444: 				 message_length = SX1278_LoRaRxPacket(&SX1278_1);
 3189 0156 2046     		mov	r0, r4	@, tmp260
 3190 0158 FFF7FEFF 		bl	SX1278_LoRaRxPacket	@
 3191              	@ main.c:1445: 				if(message_length){
 3192 015c 0028     		cmp	r0, #0	@
ARM GAS  /tmp/ccpmJ073.s 			page 57


 3193 015e B6D0     		beq	.L252	@
 3194              	@ main.c:1447: 					SX1278_read(&SX1278_1, (uint8_t *) buf_rx);
 3195 0160 4449     		ldr	r1, .L265+60	@,
 3196 0162 2046     		mov	r0, r4	@, tmp260
 3197 0164 FFF7FEFF 		bl	SX1278_read	@
 3198              	@ main.c:1448: 					UaPutK("\r\n prssi->");	
 3199 0168 4348     		ldr	r0, .L265+64	@,
 3200 016a FFF7FEFF 		bl	UaPutK	@
 3201              	@ main.c:1449: 					prssi = SX1278_SPIRead(&SX1278_1, LR_RegPktRssiValue)-164;
 3202 016e 1A21     		movs	r1, #26	@,
 3203 0170 2046     		mov	r0, r4	@, tmp260
 3204 0172 FFF7FEFF 		bl	SX1278_SPIRead	@
 3205 0176 A438     		subs	r0, r0, #164	@ tmp243,,
 3206              	@ main.c:1450: 					sint2uart(prssi);
 3207 0178 00B2     		sxth	r0, r0	@, tmp243
 3208 017a FFF7FEFF 		bl	sint2uart	@
 3209              	@ main.c:1467: 					LED ^= 1;
 3210 017e 049A     		ldr	r2, [sp, #16]	@ tmp261, %sfp
 3211 0180 1368     		ldr	r3, [r2]	@ _42, MEM[(volatile long unsigned int *)1109524916B]
 3212 0182 83F00103 		eor	r3, r3, #1	@ _44, _42,
 3213 0186 1360     		str	r3, [r2]	@ _44, MEM[(volatile long unsigned int *)1109524916B]
 3214 0188 A1E7     		b	.L252	@
 3215              	.L245:
 3216              	@ main.c:1422: 					UaPutK("\r\n sek("); uint2uart(sx[4]);UaPutK(") Delay=");					
 3217 018a 3C48     		ldr	r0, .L265+68	@,
 3218 018c FFF7FEFF 		bl	UaPutK	@
 3219 0190 0598     		ldr	r0, [sp, #20]	@, %sfp
 3220 0192 FFF7FEFF 		bl	uint2uart	@
 3221 0196 3A48     		ldr	r0, .L265+72	@,
 3222 0198 FFF7FEFF 		bl	UaPutK	@
 3223              	@ main.c:1423: 					sx[4] = UART_getNum();					
 3224 019c FFF7FEFF 		bl	UART_getNum	@
 3225 01a0 C3B2     		uxtb	r3, r0	@ sx$4,
 3226 01a2 0593     		str	r3, [sp, #20]	@ sx$4, %sfp
 3227              	@ main.c:1424: 					break;
 3228 01a4 C2E7     		b	.L242	@
 3229              	.L243:
 3230              	@ main.c:1418: 					UaPutK("\r\n 0-9("); uint2uart(sx[3]);UaPutK(") BW=");					
 3231 01a6 3748     		ldr	r0, .L265+76	@,
 3232 01a8 FFF7FEFF 		bl	UaPutK	@
 3233 01ac 0398     		ldr	r0, [sp, #12]	@, %sfp
 3234 01ae FFF7FEFF 		bl	uint2uart	@
 3235 01b2 3548     		ldr	r0, .L265+80	@,
 3236 01b4 FFF7FEFF 		bl	UaPutK	@
 3237              	@ main.c:1419: 					sx[3] = UART_getNum();					
 3238 01b8 FFF7FEFF 		bl	UART_getNum	@
 3239 01bc C3B2     		uxtb	r3, r0	@ sx$3,
 3240 01be 0393     		str	r3, [sp, #12]	@ sx$3, %sfp
 3241              	@ main.c:1420: 					break;
 3242 01c0 B4E7     		b	.L242	@
 3243              	.L247:
 3244              	@ main.c:1395: 					UaPutK("\r\n");
 3245 01c2 3248     		ldr	r0, .L265+84	@,
 3246 01c4 FFF7FEFF 		bl	UaPutK	@
 3247 01c8 4FF0000B 		mov	fp, #0	@ ivtmp.447,
 3248              	.L250:
 3249              	@ main.c:1397: 						dat = SX1278_SPIRead(&SX1278_1, n);
ARM GAS  /tmp/ccpmJ073.s 			page 58


 3250 01cc 5FFA8BF1 		uxtb	r1, fp	@, ivtmp.447
 3251 01d0 2046     		mov	r0, r4	@, tmp260
 3252 01d2 FFF7FEFF 		bl	SX1278_SPIRead	@
 3253 01d6 0BF1010B 		add	fp, fp, #1	@ ivtmp.447, ivtmp.447,
 3254              	@ main.c:1398: 						hex2uart(dat,2);
 3255 01da 0221     		movs	r1, #2	@,
 3256 01dc FFF7FEFF 		bl	hex2uart	@
 3257              	@ main.c:1396: 					for (u08 n=0;n<0x14;n++){
 3258 01e0 BBF1140F 		cmp	fp, #20	@ ivtmp.447,
 3259 01e4 F2D1     		bne	.L250	@,
 3260 01e6 A1E7     		b	.L242	@
 3261              	.L246:
 3262              	@ main.c:1410: 					UaPutK("\r\n 0-3("); uint2uart(sx[1]);UaPutK(") POWER=");					
 3263 01e8 2948     		ldr	r0, .L265+88	@,
 3264 01ea FFF7FEFF 		bl	UaPutK	@
 3265 01ee 5046     		mov	r0, r10	@, sx$1
 3266 01f0 FFF7FEFF 		bl	uint2uart	@
 3267 01f4 2748     		ldr	r0, .L265+92	@,
 3268 01f6 FFF7FEFF 		bl	UaPutK	@
 3269              	@ main.c:1411: 					sx[1] = UART_getNum();					
 3270 01fa FFF7FEFF 		bl	UART_getNum	@
 3271 01fe 5FFA80FA 		uxtb	r10, r0	@ sx$1,
 3272              	@ main.c:1412: 					break;
 3273 0202 93E7     		b	.L242	@
 3274              	.L248:
 3275              	@ main.c:1403: 					UaPutK("\r\n Read Reg1=0x");	reg=UART_getHex();
 3276 0204 2448     		ldr	r0, .L265+96	@,
 3277 0206 FFF7FEFF 		bl	UaPutK	@
 3278 020a FFF7FEFF 		bl	UART_getHex	@
 3279 020e 8346     		mov	fp, r0	@ _20,
 3280              	@ main.c:1404: 					UaPutK(" Reg1 0x");						hex2uart(reg,2);
 3281 0210 2248     		ldr	r0, .L265+100	@,
 3282 0212 5FFA8BFB 		uxtb	fp, fp	@ _20, _20
 3283 0216 FFF7FEFF 		bl	UaPutK	@
 3284 021a 5846     		mov	r0, fp	@, _20
 3285 021c 0221     		movs	r1, #2	@,
 3286 021e FFF7FEFF 		bl	hex2uart	@
 3287              	@ main.c:1405: 					UaPutK("= 0x");						
 3288 0222 1F48     		ldr	r0, .L265+104	@,
 3289 0224 FFF7FEFF 		bl	UaPutK	@
 3290              	@ main.c:1406: 					dat = SX1278_SPIRead(&SX1278_1, reg);
 3291 0228 5946     		mov	r1, fp	@, _20
 3292 022a 2046     		mov	r0, r4	@, tmp260
 3293 022c FFF7FEFF 		bl	SX1278_SPIRead	@
 3294              	@ main.c:1407: 					hex2uart(dat,2);
 3295 0230 0221     		movs	r1, #2	@,
 3296 0232 FFF7FEFF 		bl	hex2uart	@
 3297              	@ main.c:1408: 					break;
 3298 0236 79E7     		b	.L242	@
 3299              	.L266:
 3300              		.align	2
 3301              	.L265:
 3302 0238 B4012242 		.word	1109524916
 3303 023c 000C0140 		.word	1073810432
 3304 0240 33004343 		.word	1128464435
 3305 0244 00000000 		.word	.LANCHOR11
 3306 0248 00000000 		.word	.LANCHOR12
ARM GAS  /tmp/ccpmJ073.s 			page 59


 3307 024c 00001001 		.word	.LANCHOR8+17825792
 3308 0250 10E000E0 		.word	-536813552
 3309 0254 00000000 		.word	Timt
 3310 0258 00000000 		.word	.LC37
 3311 025c 398EE338 		.word	954437177
 3312 0260 00000000 		.word	trg0
 3313 0264 40548900 		.word	9000000
 3314 0268 40000000 		.word	.LC43
 3315 026c 48000000 		.word	.LC44
 3316 0270 74000000 		.word	.LC49
 3317 0274 00000000 		.word	.LANCHOR13
 3318 0278 80000000 		.word	.LC50
 3319 027c 60000000 		.word	.LC47
 3320 0280 68000000 		.word	.LC48
 3321 0284 50000000 		.word	.LC45
 3322 0288 58000000 		.word	.LC46
 3323 028c 48000000 		.word	.LC19
 3324 0290 2C000000 		.word	.LC41
 3325 0294 34000000 		.word	.LC42
 3326 0298 08000000 		.word	.LC38
 3327 029c 18000000 		.word	.LC39
 3328 02a0 24000000 		.word	.LC40
 3329 02a4 00000000 		.word	p_Fifo1
 3330 02a8 B0812142 		.word	1109492144
 3331 02ac 34812142 		.word	1109492020
 3332              		.size	LoRaRX1, .-LoRaRX1
 3333              		.section	.text.LoRaTX,"ax",%progbits
 3334              		.align	1
 3335              		.p2align 2,,3
 3336              		.global	LoRaTX
 3337              		.syntax unified
 3338              		.thumb
 3339              		.thumb_func
 3340              		.fpu softvfp
 3341              		.type	LoRaTX, %function
 3342              	LoRaTX:
 3343              		@ args = 0, pretend = 0, frame = 8
 3344              		@ frame_needed = 0, uses_anonymous_args = 0
 3345 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 3346              	@ main.c:5442: 		TIM3->CR1 = 0;
 3347 0004 0024     		movs	r4, #0	@ tmp160,
 3348              	@ main.c:5443: 		TIM3->PSC = (F_CPU/(1000000)) - 1;
 3349 0006 4FF04708 		mov	r8, #71	@ tmp163,
 3350              	@ main.c:5437: 		RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
 3351 000a 634F     		ldr	r7, .L272	@ tmp156,
 3352              	@ main.c:1481: void LoRaTX(void)		{
 3353 000c 85B0     		sub	sp, sp, #20	@,,
 3354              	@ main.c:1500: 		RtcInit();
 3355 000e FFF7FEFF 		bl	RtcInit	@
 3356              	@ main.c:5437: 		RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
 3357 0012 FA69     		ldr	r2, [r7, #28]	@ _71, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 3358              	@ main.c:5442: 		TIM3->CR1 = 0;
 3359 0014 614B     		ldr	r3, .L272+4	@ tmp158,
 3360              	@ main.c:5437: 		RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
 3361 0016 42F00202 		orr	r2, r2, #2	@ _72, _71,
 3362 001a FA61     		str	r2, [r7, #28]	@ _72, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 3363              	@ main.c:5444: 		TIM3->ARR = TIM3_ARR - 1;
ARM GAS  /tmp/ccpmJ073.s 			page 60


 3364 001c 4FF6FE7E 		movw	lr, #65534	@ tmp166,
 3365              	@ main.c:5442: 		TIM3->CR1 = 0;
 3366 0020 1C80     		strh	r4, [r3]	@ movhi	@ tmp160, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 3367              	@ main.c:5443: 		TIM3->PSC = (F_CPU/(1000000)) - 1;
 3368 0022 A3F82880 		strh	r8, [r3, #40]	@ movhi	@ tmp163, MEM[(struct TIM_TypeDef *)1073742848B].PSC
 3369              	@ main.c:5446: 		TIM3->DIER = TIM_DIER_UIE;
 3370 0026 4FF00108 		mov	r8, #1	@ movhi	@ tmp269,
 3371              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 3372 002a 4FF0005C 		mov	ip, #536870912	@ tmp181,
 3373              	@ main.c:1502: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3374 002e 3025     		movs	r5, #48	@ tmp187,
 3375              	@ main.c:1521: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3376 0030 0920     		movs	r0, #9	@ tmp212,
 3377              	@ main.c:5444: 		TIM3->ARR = TIM3_ARR - 1;
 3378 0032 A3F82CE0 		strh	lr, [r3, #44]	@ movhi	@ tmp166, MEM[(struct TIM_TypeDef *)1073742848B].ARR
 3379              	@ main.c:5446: 		TIM3->DIER = TIM_DIER_UIE;
 3380 0036 A3F80C80 		strh	r8, [r3, #12]	@ movhi	@ tmp269, MEM[(struct TIM_TypeDef *)1073742848B].DIER
 3381              	@ main.c:5447: 		TIM3->CR1  |= TIM_CR1_DIR;
 3382 003a 1A88     		ldrh	r2, [r3]	@, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 3383              	@ main.c:1502: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3384 003c DFF88CE1 		ldr	lr, .L272+52	@ tmp182,
 3385              	@ main.c:5447: 		TIM3->CR1  |= TIM_CR1_DIR;
 3386 0040 42F01002 		orr	r2, r2, #16	@ _74, MEM[(struct TIM_TypeDef *)1073742848B].CR1,
 3387 0044 1A80     		strh	r2, [r3]	@ movhi	@ _74, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 3388              	@ main.c:5448: 		TIM3->CR1  |= TIM_CR1_CEN;
 3389 0046 1A88     		ldrh	r2, [r3]	@, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 3390              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 3391 0048 5549     		ldr	r1, .L272+8	@ tmp180,
 3392              	@ main.c:5448: 		TIM3->CR1  |= TIM_CR1_CEN;
 3393 004a 42F00102 		orr	r2, r2, #1	@ _76, MEM[(struct TIM_TypeDef *)1073742848B].CR1,
 3394 004e 1A80     		strh	r2, [r3]	@ movhi	@ _76, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 3395              	@ main.c:1502: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3396 0050 DEF80030 		ldr	r3, [lr]	@ p_Fifo1.94_2, p_Fifo1
 3397              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 3398 0054 C1F800C0 		str	ip, [r1]	@ tmp181, MEM[(struct NVIC_Type *)3758153984B].ISER
 3399              	@ main.c:1505: 		GPIOA->CRL = (GPIOA->CRL & 0xfff00000) | 0x00044343;	//   PA2=MOSI, PA1=MISO, PA0=
 3400 0058 A7F58437 		sub	r7, r7, #67584	@ tmp189, tmp189,
 3401              	@ main.c:1502: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3402 005c A3F80480 		strh	r8, [r3, #4]	@ movhi	@ tmp270, p_Fifo1.94_2->rct
 3403 0060 A3F80280 		strh	r8, [r3, #2]	@ movhi	@ tmp271, p_Fifo1.94_2->rwi
 3404 0064 9D71     		strb	r5, [r3, #6]	@ tmp187, p_Fifo1.94_2->rbuf
 3405              	@ main.c:1505: 		GPIOA->CRL = (GPIOA->CRL & 0xfff00000) | 0x00044343;	//   PA2=MOSI, PA1=MISO, PA0=
 3406 0066 3B68     		ldr	r3, [r7]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 3407 0068 4E49     		ldr	r1, .L272+12	@ _6,
 3408 006a 1B0D     		lsrs	r3, r3, #20	@ tmp190, _4,
 3409 006c 1B05     		lsls	r3, r3, #20	@ tmp190, tmp190,
 3410              	@ main.c:1506: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 3411 006e 4E4A     		ldr	r2, .L272+16	@ tmp194,
 3412              	@ main.c:1505: 		GPIOA->CRL = (GPIOA->CRL & 0xfff00000) | 0x00044343;	//   PA2=MOSI, PA1=MISO, PA0=
 3413 0070 1943     		orrs	r1, r1, r3	@, _6, _6, tmp190
 3414 0072 3960     		str	r1, [r7]	@ _6, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 3415              	@ main.c:1506: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 3416 0074 5368     		ldr	r3, [r2, #4]	@ _7, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 3417              	@ main.c:1507: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 2); 
 3418 0076 4D4D     		ldr	r5, .L272+20	@ tmp197,
 3419 0078 DFF854E1 		ldr	lr, .L272+56	@ tmp198,
 3420              	@ main.c:1508: 		SX1278_hw1.miso = (u32 *)m_BITBAND_PERIPH(&GPIOA->IDR, 1); 
ARM GAS  /tmp/ccpmJ073.s 			page 61


 3421 007c DFF854C1 		ldr	ip, .L272+60	@ tmp200,
 3422              	@ main.c:1506: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 3423 0080 23F0FF03 		bic	r3, r3, #255	@ tmp195, _7,
 3424 0084 43F03303 		orr	r3, r3, #51	@ _9, tmp195,
 3425 0088 5360     		str	r3, [r2, #4]	@ _9, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 3426              	@ main.c:1521: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3427 008a 0090     		str	r0, [sp]	@ tmp212,
 3428              	@ main.c:1507: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 2); 
 3429 008c C5F800E0 		str	lr, [r5]	@ tmp198, SX1278_hw1.mosi
 3430              	@ main.c:1508: 		SX1278_hw1.miso = (u32 *)m_BITBAND_PERIPH(&GPIOA->IDR, 1); 
 3431 0090 C5F804C0 		str	ip, [r5, #4]	@ tmp200, SX1278_hw1.miso
 3432              	@ main.c:1509: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 0); 
 3433 0094 AEF1080E 		sub	lr, lr, #8	@ tmp202, tmp202,
 3434              	@ main.c:1510: 		SX1278_hw1.nss  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 8); 
 3435 0098 0CF5004C 		add	ip, ip, #32768	@ tmp204, tmp204,
 3436              	@ main.c:1509: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 0); 
 3437 009c C5F808E0 		str	lr, [r5, #8]	@ tmp202, SX1278_hw1.sck
 3438              	@ main.c:1520: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 3439 00a0 DFF83481 		ldr	r8, .L272+64	@ tmp209,
 3440              	@ main.c:1510: 		SX1278_hw1.nss  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 8); 
 3441 00a4 0CF19C0C 		add	ip, ip, #156	@ tmp204, tmp204,
 3442              	@ main.c:1511: 		SX1278_hw1.rst  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 9); 
 3443 00a8 0EF5004E 		add	lr, lr, #32768	@ tmp206, tmp206,
 3444              	@ main.c:1510: 		SX1278_hw1.nss  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 8); 
 3445 00ac C5F80CC0 		str	ip, [r5, #12]	@ tmp204, SX1278_hw1.nss
 3446              	@ main.c:1511: 		SX1278_hw1.rst  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 9); 
 3447 00b0 0EF1240E 		add	lr, lr, #36	@ tmp206, tmp206,
 3448              	@ main.c:1512: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 1); 
 3449 00b4 ACF19C0C 		sub	ip, ip, #156	@ tmp208, tmp208,
 3450              	@ main.c:1521: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3451 00b8 2246     		mov	r2, r4	@, tmp160
 3452 00ba 2146     		mov	r1, r4	@, tmp160
 3453 00bc 0123     		movs	r3, #1	@,
 3454 00be 4046     		mov	r0, r8	@, tmp209
 3455              	@ main.c:1520: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 3456 00c0 C8F80050 		str	r5, [r8]	@ tmp197, SX1278_1.hw
 3457              	@ main.c:1512: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 1); 
 3458 00c4 C5E904EC 		strd	lr, ip, [r5, #16]	@ tmp206, tmp208, tmp197,
 3459              	@ main.c:1521: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3460 00c8 FFF7FEFF 		bl	SX1278_begin	@
 3461              	@ main.c:1525: 		GPIOA->CRH = (GPIOA->CRH & 0x0fffffff) | 0x60000000;
 3462 00cc 7B68     		ldr	r3, [r7, #4]	@ _10, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 3463              	@ main.c:1535: 		GPIOA->ODR = 0b0001010000000000;
 3464 00ce 4FF4A051 		mov	r1, #5120	@ tmp228,
 3465              	@ main.c:1525: 		GPIOA->CRH = (GPIOA->CRH & 0x0fffffff) | 0x60000000;
 3466 00d2 23F07043 		bic	r3, r3, #-268435456	@ tmp214, _10,
 3467 00d6 43F0C043 		orr	r3, r3, #1610612736	@ _12, tmp214,
 3468 00da 7B60     		str	r3, [r7, #4]	@ _12, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 3469              	@ main.c:1531: 		LED	   = 1;		
 3470 00dc 0123     		movs	r3, #1	@ tmp272,
 3471              	@ main.c:1530: 		flag_9 = 0;		
 3472 00de 344A     		ldr	r2, .L272+24	@ tmp217,
 3473              	@ main.c:1531: 		LED	   = 1;		
 3474 00e0 3448     		ldr	r0, .L272+28	@ tmp220,
 3475              	@ main.c:1530: 		flag_9 = 0;		
 3476 00e2 5201     		lsls	r2, r2, #5	@ tmp218, tmp217,
 3477 00e4 5462     		str	r4, [r2, #36]	@ tmp160, *_17
ARM GAS  /tmp/ccpmJ073.s 			page 62


 3478              	@ main.c:1531: 		LED	   = 1;		
 3479 00e6 0360     		str	r3, [r0]	@ tmp272, MEM[(volatile long unsigned int *)1109524916B]
 3480              	@ main.c:1533: 		GPIOA->CRH = (GPIOA->CRH & 0xfff0f0ff)|0x00020200 ; //low power
 3481 00e8 7B68     		ldr	r3, [r7, #4]	@ _18, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 3482 00ea DFF8F090 		ldr	r9, .L272+68	@ tmp263,
 3483 00ee 23F47023 		bic	r3, r3, #983040	@ tmp223, _18,
 3484 00f2 23F47063 		bic	r3, r3, #3840	@ tmp223, tmp223,
 3485 00f6 43F40033 		orr	r3, r3, #131072	@ _20, tmp223,
 3486 00fa 43F40073 		orr	r3, r3, #512	@ _20, _20,
 3487 00fe 7B60     		str	r3, [r7, #4]	@ _20, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 3488              	@ main.c:1535: 		GPIOA->ODR = 0b0001010000000000;
 3489 0100 F960     		str	r1, [r7, #12]	@ tmp228, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
 3490              	@ main.c:1536: 		GPIOA->ODR |= (1<<10)|(1<<12); 
 3491 0102 FB68     		ldr	r3, [r7, #12]	@ _21, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
 3492              	@ main.c:1571: 				LED ^= 1;
 3493 0104 8346     		mov	fp, r0	@ tmp238, tmp220
 3494              	@ main.c:1536: 		GPIOA->ODR |= (1<<10)|(1<<12); 
 3495 0106 0B43     		orrs	r3, r3, r1	@, _22, _21,
 3496 0108 FB60     		str	r3, [r7, #12]	@ _22, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
 3497              	@ main.c:1566: 		flag_9=1;	
 3498 010a 0123     		movs	r3, #1	@ tmp274,
 3499 010c CA46     		mov	r10, r9	@ tmp265, tmp263
 3500              	@ main.c:1530: 		flag_9 = 0;		
 3501 010e 3046     		mov	r0, r6	@ n, n
 3502              	@ main.c:1566: 		flag_9=1;	
 3503 0110 5362     		str	r3, [r2, #36]	@ tmp274, *_17
 3504 0112 294D     		ldr	r5, .L272+32	@ tmp261,
 3505              	@ main.c:1530: 		flag_9 = 0;		
 3506 0114 02F12403 		add	r3, r2, #36	@ _17, tmp218,
 3507              	@ main.c:1569: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 3508 0118 284C     		ldr	r4, .L272+36	@ tmp233,
 3509 011a 294F     		ldr	r7, .L272+40	@ tmp235,
 3510              	@ main.c:1530: 		flag_9 = 0;		
 3511 011c 0393     		str	r3, [sp, #12]	@ _17, %sfp
 3512              	.L268:
 3513              	@ main.c:1569: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 3514 011e 2B68     		ldr	r3, [r5]	@ trg0.99_23, trg0
 3515 0120 A268     		ldr	r2, [r4, #8]	@ _24, MEM[(struct SysTick_Type *)3758153744B].VAL
 3516 0122 9B1A     		subs	r3, r3, r2	@ tmp234, trg0.99_23, _24
 3517 0124 BB42     		cmp	r3, r7	@ tmp234, tmp235
 3518 0126 FAD9     		bls	.L268	@,
 3519              	@ main.c:1573: 				strcpy (buf_tx," ");		
 3520 0128 4FF0200E 		mov	lr, #32	@ tmp242,
 3521              	@ main.c:1570: 				trg0 = SysTick->VAL; 
 3522 012c A368     		ldr	r3, [r4, #8]	@ _26, MEM[(struct SysTick_Type *)3758153744B].VAL
 3523              	@ main.c:1575: 				strcat (buf_tx,unt2str(n++,str_num,5));
 3524 012e 00F1010C 		add	ip, r0, #1	@ tmp243, n,
 3525              	@ main.c:1570: 				trg0 = SysTick->VAL; 
 3526 0132 2B60     		str	r3, [r5]	@ _26, trg0
 3527              	@ main.c:1571: 				LED ^= 1;
 3528 0134 DBF80020 		ldr	r2, [fp]	@ _27, MEM[(volatile long unsigned int *)1109524916B]
 3529              	@ main.c:1575: 				strcat (buf_tx,unt2str(n++,str_num,5));
 3530 0138 1FFA8CF3 		uxth	r3, ip	@ n, tmp243
 3531              	@ main.c:1571: 				LED ^= 1;
 3532 013c 82F00102 		eor	r2, r2, #1	@ _28, _27,
 3533 0140 CBF80020 		str	r2, [fp]	@ _28, MEM[(volatile long unsigned int *)1109524916B]
 3534              	@ main.c:1575: 				strcat (buf_tx,unt2str(n++,str_num,5));
ARM GAS  /tmp/ccpmJ073.s 			page 63


 3535 0144 1F49     		ldr	r1, .L272+44	@,
 3536 0146 0522     		movs	r2, #5	@,
 3537              	@ main.c:1573: 				strcpy (buf_tx," ");		
 3538 0148 A9F800E0 		strh	lr, [r9]	@ movhi	@ tmp242, MEM[(void *)&buf_tx]
 3539              	@ main.c:1575: 				strcat (buf_tx,unt2str(n++,str_num,5));
 3540 014c 0293     		str	r3, [sp, #8]	@ n, %sfp
 3541 014e FFF7FEFF 		bl	unt2str	@
 3542 0152 0646     		mov	r6, r0	@ _30,
 3543 0154 5046     		mov	r0, r10	@, tmp265
 3544 0156 FFF7FEFF 		bl	strlen	@
 3545 015a 3146     		mov	r1, r6	@, _30
 3546 015c 4844     		add	r0, r0, r9	@, tmp263
 3547 015e FFF7FEFF 		bl	stpcpy	@
 3548              	@ main.c:1576: 				strcat (buf_tx," ");
 3549 0162 194B     		ldr	r3, .L272+48	@ tmp278,
 3550 0164 A0EB0906 		sub	r6, r0, r9	@ _64, tmp249, tmp263
 3551 0168 1A88     		ldrh	r2, [r3]	@ unaligned	@ tmp254, MEM[(void *)" "]
 3552              	@ main.c:1577: 				message_length = strlen(buf_tx); 
 3553 016a 0136     		adds	r6, r6, #1	@ tmp255, _64,
 3554              	@ main.c:1579: 				SX1278_LoRaEntryTx (&SX1278_1, message_length, 2000);
 3555 016c F6B2     		uxtb	r6, r6	@ _32, tmp255
 3556              	@ main.c:1576: 				strcat (buf_tx," ");
 3557 016e 0280     		strh	r2, [r0]	@ unaligned	@ tmp254, MEM[(void *)_65]
 3558              	@ main.c:1579: 				SX1278_LoRaEntryTx (&SX1278_1, message_length, 2000);
 3559 0170 3146     		mov	r1, r6	@, _32
 3560 0172 4FF4FA62 		mov	r2, #2000	@,
 3561 0176 4046     		mov	r0, r8	@, tmp266
 3562 0178 FFF7FEFF 		bl	SX1278_LoRaEntryTx	@
 3563              	@ main.c:1583: 				SX1278_LoRaTxPacketStart(&SX1278_1, (uint8_t *) buf_tx, message_length);  // Sta
 3564 017c 3246     		mov	r2, r6	@, _32
 3565 017e 5146     		mov	r1, r10	@, tmp265
 3566 0180 4046     		mov	r0, r8	@, tmp266
 3567 0182 FFF7FEFF 		bl	SX1278_LoRaTxPacketStart	@
 3568              	@ main.c:1584: 				flag_9=1;	
 3569 0186 0122     		movs	r2, #1	@ tmp259,
 3570 0188 039B     		ldr	r3, [sp, #12]	@ _17, %sfp
 3571              	@ main.c:1585: 				SX1278_sleep(&SX1278_1);
 3572 018a 4046     		mov	r0, r8	@, tmp266
 3573              	@ main.c:1584: 				flag_9=1;	
 3574 018c 1A60     		str	r2, [r3]	@ tmp259, *_17
 3575              	@ main.c:1585: 				SX1278_sleep(&SX1278_1);
 3576 018e FFF7FEFF 		bl	SX1278_sleep	@
 3577              	@ main.c:1575: 				strcat (buf_tx,unt2str(n++,str_num,5));
 3578 0192 029B     		ldr	r3, [sp, #8]	@ n, %sfp
 3579 0194 1846     		mov	r0, r3	@ n, n
 3580 0196 C2E7     		b	.L268	@
 3581              	.L273:
 3582              		.align	2
 3583              	.L272:
 3584 0198 00100240 		.word	1073876992
 3585 019c 00040040 		.word	1073742848
 3586 01a0 00E100E0 		.word	-536813312
 3587 01a4 43430400 		.word	279363
 3588 01a8 000C0140 		.word	1073810432
 3589 01ac 00000000 		.word	.LANCHOR14
 3590 01b0 00001001 		.word	.LANCHOR8+17825792
 3591 01b4 B4012242 		.word	1109524916
ARM GAS  /tmp/ccpmJ073.s 			page 64


 3592 01b8 00000000 		.word	trg0
 3593 01bc 10E000E0 		.word	-536813552
 3594 01c0 40548900 		.word	9000000
 3595 01c4 00000000 		.word	.LANCHOR17
 3596 01c8 30000000 		.word	.LC15
 3597 01cc 00000000 		.word	p_Fifo1
 3598 01d0 88012142 		.word	1109459336
 3599 01d4 04012142 		.word	1109459204
 3600 01d8 00000000 		.word	.LANCHOR15
 3601 01dc 00000000 		.word	.LANCHOR16
 3602              		.size	LoRaTX, .-LoRaTX
 3603              		.section	.text.col1,"ax",%progbits
 3604              		.align	1
 3605              		.p2align 2,,3
 3606              		.global	col1
 3607              		.syntax unified
 3608              		.thumb
 3609              		.thumb_func
 3610              		.fpu softvfp
 3611              		.type	col1, %function
 3612              	col1:
 3613              		@ args = 0, pretend = 0, frame = 0
 3614              		@ frame_needed = 0, uses_anonymous_args = 0
 3615              		@ link register save eliminated.
 3616              	@ main.c:1703: 			dma_buf[0]=0xe0;	dma_buf[8]  =0xe0;	dma_buf[16]=0xe0;
 3617 0000 4FF0E032 		mov	r2, #-522133280	@ tmp111,
 3618 0004 044B     		ldr	r3, .L275	@ tmp110,
 3619              	@ main.c:1706: 			dma_buf[3]=0xe0;	dma_buf[11] =0xe0;	dma_buf[19]=0xe0;
 3620 0006 0549     		ldr	r1, .L275+4	@ tmp113,
 3621              	@ main.c:1703: 			dma_buf[0]=0xe0;	dma_buf[8]  =0xe0;	dma_buf[16]=0xe0;
 3622 0008 1A60     		str	r2, [r3]	@ tmp111, MEM[(u08[24] *)&dma_buf]
 3623              	@ main.c:1706: 			dma_buf[3]=0xe0;	dma_buf[11] =0xe0;	dma_buf[19]=0xe0;
 3624 000a C3E90222 		strd	r2, r2, [r3, #8]	@ tmp111, tmp111, tmp110,
 3625 000e C3E90422 		strd	r2, r2, [r3, #16]	@ tmp111, tmp111, tmp110,
 3626 0012 5960     		str	r1, [r3, #4]	@ tmp113, MEM[(u08[24] *)&dma_buf + 4B]
 3627              	@ main.c:1711: 		}
 3628 0014 7047     		bx	lr	@
 3629              	.L276:
 3630 0016 00BF     		.align	2
 3631              	.L275:
 3632 0018 00000000 		.word	.LANCHOR18
 3633 001c E0F8F8F8 		.word	-117901088
 3634              		.size	col1, .-col1
 3635              		.section	.text.col2,"ax",%progbits
 3636              		.align	1
 3637              		.p2align 2,,3
 3638              		.global	col2
 3639              		.syntax unified
 3640              		.thumb
 3641              		.thumb_func
 3642              		.fpu softvfp
 3643              		.type	col2, %function
 3644              	col2:
 3645              		@ args = 0, pretend = 0, frame = 0
 3646              		@ frame_needed = 0, uses_anonymous_args = 0
 3647              		@ link register save eliminated.
 3648              	@ main.c:1713: 			dma_buf[0]=0xe0;	dma_buf[8]  =0xe0;	dma_buf[16]=0xe0;
ARM GAS  /tmp/ccpmJ073.s 			page 65


 3649 0000 4FF0E032 		mov	r2, #-522133280	@ tmp111,
 3650 0004 034B     		ldr	r3, .L278	@ tmp110,
 3651              	@ main.c:1716: 			dma_buf[3]=0xe0;	dma_buf[11] =0xe0;	dma_buf[19]=0xe0;
 3652 0006 C3E90022 		strd	r2, r2, [r3]	@ tmp111, tmp111, tmp110
 3653 000a C3E90222 		strd	r2, r2, [r3, #8]	@ tmp111, tmp111, tmp110,
 3654 000e C3E90422 		strd	r2, r2, [r3, #16]	@ tmp111, tmp111, tmp110,
 3655              	@ main.c:1721: 	}	
 3656 0012 7047     		bx	lr	@
 3657              	.L279:
 3658              		.align	2
 3659              	.L278:
 3660 0014 00000000 		.word	.LANCHOR18
 3661              		.size	col2, .-col2
 3662              		.section	.text.col0,"ax",%progbits
 3663              		.align	1
 3664              		.p2align 2,,3
 3665              		.global	col0
 3666              		.syntax unified
 3667              		.thumb
 3668              		.thumb_func
 3669              		.fpu softvfp
 3670              		.type	col0, %function
 3671              	col0:
 3672              		@ args = 0, pretend = 0, frame = 0
 3673              		@ frame_needed = 0, uses_anonymous_args = 0
 3674              		@ link register save eliminated.
 3675              	@ main.c:1723: 			dma_buf[0]=0;	dma_buf[8]  =0x0;	dma_buf[16]=0x0;
 3676 0000 0022     		movs	r2, #0	@ tmp111,
 3677 0002 044B     		ldr	r3, .L281	@ tmp110,
 3678              	@ main.c:1726: 			dma_buf[3]=0;	dma_buf[11] =0x0;	dma_buf[19]=0x0;
 3679 0004 C3E90022 		strd	r2, r2, [r3]	@ tmp111, tmp111, tmp110
 3680 0008 C3E90222 		strd	r2, r2, [r3, #8]	@ tmp111, tmp111, tmp110,
 3681 000c C3E90422 		strd	r2, r2, [r3, #16]	@ tmp111, tmp111, tmp110,
 3682              	@ main.c:1731: 	}
 3683 0010 7047     		bx	lr	@
 3684              	.L282:
 3685 0012 00BF     		.align	2
 3686              	.L281:
 3687 0014 00000000 		.word	.LANCHOR18
 3688              		.size	col0, .-col0
 3689              		.section	.text.ws2812led,"ax",%progbits
 3690              		.align	1
 3691              		.p2align 2,,3
 3692              		.global	ws2812led
 3693              		.syntax unified
 3694              		.thumb
 3695              		.thumb_func
 3696              		.fpu softvfp
 3697              		.type	ws2812led, %function
 3698              	ws2812led:
 3699              		@ args = 0, pretend = 0, frame = 0
 3700              		@ frame_needed = 0, uses_anonymous_args = 0
 3701 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 3702              	@ main.c:1743: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|SPI_CR1_MSTR|SPI_CR1_BR_0|SPI_CR1_BR_1;	// 0x0
 3703 0004 4FF44774 		mov	r4, #796	@ tmp152,
 3704              	@ main.c:1737: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0xBBB30000;	// PA5~7
 3705 0008 3648     		ldr	r0, .L295	@ tmp143,
ARM GAS  /tmp/ccpmJ073.s 			page 66


 3706              	@ main.c:1741: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 3707 000a 3749     		ldr	r1, .L295+4	@ tmp148,
 3708              	@ main.c:1737: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0xBBB30000;	// PA5~7
 3709 000c 0368     		ldr	r3, [r0]	@ _2, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 3710              	@ main.c:1743: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|SPI_CR1_MSTR|SPI_CR1_BR_0|SPI_CR1_BR_1;	// 0x0
 3711 000e 374A     		ldr	r2, .L295+8	@ tmp150,
 3712              	@ main.c:1737: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0xBBB30000;	// PA5~7
 3713 0010 9BB2     		uxth	r3, r3	@ tmp144, _2
 3714 0012 43F03B43 		orr	r3, r3, #-1157627904	@ _5, tmp144,
 3715 0016 43F43303 		orr	r3, r3, #11730944	@ _5, _5,
 3716 001a 0360     		str	r3, [r0]	@ _5, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 3717              	@ main.c:1756: 		DMA1_Channel3->CCR 	= 0;										//Disable channel
 3718 001c 0020     		movs	r0, #0	@ tmp167,
 3719              	@ main.c:1741: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 3720 001e 8B69     		ldr	r3, [r1, #24]	@ _7, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 3721              	@ main.c:1771: 		DMA1_Channel3->CCR =  CCR_reg;	
 3722 0020 B026     		movs	r6, #176	@ tmp175,
 3723              	@ main.c:1741: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 3724 0022 43F48053 		orr	r3, r3, #4096	@ _8, _7,
 3725 0026 8B61     		str	r3, [r1, #24]	@ _8, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 3726              	@ main.c:1743: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|SPI_CR1_MSTR|SPI_CR1_BR_0|SPI_CR1_BR_1;	// 0x0
 3727 0028 1480     		strh	r4, [r2]	@ movhi	@ tmp152, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 3728              	@ main.c:1744: 		SPI1->CR2 |= SPI_CR2_TXDMAEN;
 3729 002a 9388     		ldrh	r3, [r2, #4]	@, MEM[(struct SPI_TypeDef *)1073819648B].CR2
 3730              	@ main.c:1778: 		u08 fl=0;
 3731 002c 0446     		mov	r4, r0	@ fl, tmp167
 3732              	@ main.c:1744: 		SPI1->CR2 |= SPI_CR2_TXDMAEN;
 3733 002e 43F00203 		orr	r3, r3, #2	@ _10, MEM[(struct SPI_TypeDef *)1073819648B].CR2,
 3734 0032 9380     		strh	r3, [r2, #4]	@ movhi	@ _10, MEM[(struct SPI_TypeDef *)1073819648B].CR2
 3735              	@ main.c:1745: 		SPI1->CR1 |= SPI_CR1_SPE;		
 3736 0034 1388     		ldrh	r3, [r2]	@, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 3737              	@ main.c:1773: 		DMA1->IFCR = DMA_IFCR_CGIF3 | DMA_IFCR_CTCIF3;
 3738 0036 4FF44075 		mov	r5, #768	@ tmp177,
 3739              	@ main.c:1745: 		SPI1->CR1 |= SPI_CR1_SPE;		
 3740 003a 43F04003 		orr	r3, r3, #64	@ _12, MEM[(struct SPI_TypeDef *)1073819648B].CR1,
 3741 003e 1380     		strh	r3, [r2]	@ movhi	@ _12, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 3742              	@ main.c:1753: 		col0();
 3743 0040 FFF7FEFF 		bl	col0	@
 3744              	@ main.c:1760: 		DMA1_Channel3->CNDTR = 24;		//Buffor size :
 3745 0044 4FF0180C 		mov	ip, #24	@ tmp173,
 3746              	@ main.c:1755: 		RCC->AHBENR   			|= RCC_AHBENR_DMA1EN;		// enable clock for DMA1
 3747 0048 4A69     		ldr	r2, [r1, #20]	@ _13, MEM[(struct RCC_TypeDef *)1073876992B].AHBENR
 3748              	@ main.c:1756: 		DMA1_Channel3->CCR 	= 0;										//Disable channel
 3749 004a 294B     		ldr	r3, .L295+12	@ tmp166,
 3750              	@ main.c:1755: 		RCC->AHBENR   			|= RCC_AHBENR_DMA1EN;		// enable clock for DMA1
 3751 004c 42F00102 		orr	r2, r2, #1	@ _14, _13,
 3752 0050 4A61     		str	r2, [r1, #20]	@ _14, MEM[(struct RCC_TypeDef *)1073876992B].AHBENR
 3753              	@ main.c:1757: 		DMA1_Channel3->CMAR = (uint32_t)dma_buf;	 	//Destination address:
 3754 0052 2849     		ldr	r1, .L295+16	@ tmp168,
 3755              	@ main.c:1758: 		DMA1_Channel3->CPAR = (uint32_t)&SPI1->DR;	//Source PERIPHERAL address:
 3756 0054 284A     		ldr	r2, .L295+20	@ tmp171,
 3757              	@ main.c:1756: 		DMA1_Channel3->CCR 	= 0;										//Disable channel
 3758 0056 1860     		str	r0, [r3]	@ tmp167, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CCR
 3759              	@ main.c:1757: 		DMA1_Channel3->CMAR = (uint32_t)dma_buf;	 	//Destination address:
 3760 0058 D960     		str	r1, [r3, #12]	@ tmp168, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CMAR
 3761              	@ main.c:1758: 		DMA1_Channel3->CPAR = (uint32_t)&SPI1->DR;	//Source PERIPHERAL address:
 3762 005a 9A60     		str	r2, [r3, #8]	@ tmp171, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CPAR
ARM GAS  /tmp/ccpmJ073.s 			page 67


 3763              	@ main.c:1773: 		DMA1->IFCR = DMA_IFCR_CGIF3 | DMA_IFCR_CTCIF3;
 3764 005c 274A     		ldr	r2, .L295+24	@ tmp176,
 3765              	@ main.c:1760: 		DMA1_Channel3->CNDTR = 24;		//Buffor size :
 3766 005e C3F804C0 		str	ip, [r3, #4]	@ tmp173, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CNDTR
 3767              	@ main.c:1771: 		DMA1_Channel3->CCR =  CCR_reg;	
 3768 0062 1E60     		str	r6, [r3]	@ tmp175, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CCR
 3769              	@ main.c:1773: 		DMA1->IFCR = DMA_IFCR_CGIF3 | DMA_IFCR_CTCIF3;
 3770 0064 5560     		str	r5, [r2, #4]	@ tmp177, MEM[(struct DMA_TypeDef *)1073872896B].IFCR
 3771              	@ main.c:1774: 		DMA1_Channel3->CCR |= DMA_CCR1_EN;
 3772 0066 1A68     		ldr	r2, [r3]	@ _16, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CCR
 3773              	@ main.c:1777: 		UaPutK("\r\n DMA start...");
 3774 0068 2548     		ldr	r0, .L295+28	@,
 3775              	@ main.c:1774: 		DMA1_Channel3->CCR |= DMA_CCR1_EN;
 3776 006a 42F00102 		orr	r2, r2, #1	@ _17, _16,
 3777 006e 1A60     		str	r2, [r3]	@ _17, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CCR
 3778              	@ main.c:1777: 		UaPutK("\r\n DMA start...");
 3779 0070 FFF7FEFF 		bl	UaPutK	@
 3780 0074 234F     		ldr	r7, .L295+32	@ tmp206,
 3781 0076 DFF8A080 		ldr	r8, .L295+52	@ tmp208,
 3782 007a 234E     		ldr	r6, .L295+36	@ tmp207,
 3783              	@ main.c:1782: 			if(STCLK_MS*100 < (trg0 - SysTick->VAL)){
 3784 007c 2348     		ldr	r0, .L295+40	@ tmp182,
 3785              	@ main.c:1809: 					LED ^= 1;
 3786 007e 244D     		ldr	r5, .L295+44	@ tmp209,
 3787              	.L290:
 3788              	@ main.c:1782: 			if(STCLK_MS*100 < (trg0 - SysTick->VAL)){
 3789 0080 DFF898C0 		ldr	ip, .L295+56	@ tmp184,
 3790              	@ main.c:1786: 			if(STCLK_MS*200 < (trg1 - SysTick->VAL)){
 3791 0084 2349     		ldr	r1, .L295+48	@ tmp190,
 3792              	.L285:
 3793              	@ main.c:1782: 			if(STCLK_MS*100 < (trg0 - SysTick->VAL)){
 3794 0086 3B68     		ldr	r3, [r7]	@ trg0.108_18, trg0
 3795 0088 8268     		ldr	r2, [r0, #8]	@ _19, MEM[(struct SysTick_Type *)3758153744B].VAL
 3796 008a 9B1A     		subs	r3, r3, r2	@ tmp183, trg0.108_18, _19
 3797 008c 6345     		cmp	r3, ip	@ tmp183, tmp184
 3798              	@ main.c:1783: 				trg0 = SysTick->VAL;
 3799 008e 84BF     		itt	hi
 3800 0090 8368     		ldrhi	r3, [r0, #8]	@ _21, MEM[(struct SysTick_Type *)3758153744B].VAL
 3801 0092 3B60     		strhi	r3, [r7]	@ _21, trg0
 3802              	@ main.c:1786: 			if(STCLK_MS*200 < (trg1 - SysTick->VAL)){
 3803 0094 D8F80030 		ldr	r3, [r8]	@ trg1.109_22, trg1
 3804 0098 8268     		ldr	r2, [r0, #8]	@ _23, MEM[(struct SysTick_Type *)3758153744B].VAL
 3805 009a 9B1A     		subs	r3, r3, r2	@ tmp189, trg1.109_22, _23
 3806 009c 8B42     		cmp	r3, r1	@ tmp189, tmp190
 3807 009e F2D9     		bls	.L285	@,
 3808              	@ main.c:1787: 				trg1 = SysTick->VAL;
 3809 00a0 8368     		ldr	r3, [r0, #8]	@ _25, MEM[(struct SysTick_Type *)3758153744B].VAL
 3810 00a2 C8F80030 		str	r3, [r8]	@ _25, trg1
 3811              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 3812 00a6 8368     		ldr	r3, [r0, #8]	@ _55, MEM[(struct SysTick_Type *)3758153744B].VAL
 3813 00a8 3360     		str	r3, [r6]	@ _55, delay_us
 3814              	.L286:
 3815              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 3816 00aa 3368     		ldr	r3, [r6]	@ delay_us.48_56, delay_us
 3817 00ac 8268     		ldr	r2, [r0, #8]	@ _57, MEM[(struct SysTick_Type *)3758153744B].VAL
 3818 00ae 9B1A     		subs	r3, r3, r2	@ tmp197, delay_us.48_56, _57
 3819 00b0 B3F5E17F 		cmp	r3, #450	@ tmp197,
ARM GAS  /tmp/ccpmJ073.s 			page 68


 3820 00b4 F9D3     		bcc	.L286	@,
 3821              	@ main.c:1803: 				if(fl){
 3822 00b6 74B1     		cbz	r4, .L287	@ fl,
 3823              	@ main.c:1804: 					col1();
 3824 00b8 FFF7FEFF 		bl	col1	@
 3825              	@ main.c:1805: 					fl=0;
 3826 00bc 0024     		movs	r4, #0	@ fl,
 3827              	.L288:
 3828              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 3829 00be 40F62311 		movw	r1, #2339	@ tmp205,
 3830              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 3831 00c2 8368     		ldr	r3, [r0, #8]	@ _59, MEM[(struct SysTick_Type *)3758153744B].VAL
 3832 00c4 3360     		str	r3, [r6]	@ _59, delay_us
 3833              	.L289:
 3834              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 3835 00c6 3368     		ldr	r3, [r6]	@ delay_us.48_60, delay_us
 3836 00c8 8268     		ldr	r2, [r0, #8]	@ _61, MEM[(struct SysTick_Type *)3758153744B].VAL
 3837 00ca 9B1A     		subs	r3, r3, r2	@ tmp204, delay_us.48_60, _61
 3838 00cc 8B42     		cmp	r3, r1	@ tmp204, tmp205
 3839 00ce FAD9     		bls	.L289	@,
 3840              	@ main.c:1813: 				col0();
 3841 00d0 FFF7FEFF 		bl	col0	@
 3842 00d4 D4E7     		b	.L290	@
 3843              	.L287:
 3844              	@ main.c:1808: 					fl=1;
 3845 00d6 0124     		movs	r4, #1	@ fl,
 3846              	@ main.c:1807: 					col1();
 3847 00d8 FFF7FEFF 		bl	col1	@
 3848              	@ main.c:1809: 					LED ^= 1;
 3849 00dc 2B68     		ldr	r3, [r5]	@ _26, MEM[(volatile long unsigned int *)1109524916B]
 3850 00de 6340     		eors	r3, r3, r4	@, _27, _26,
 3851 00e0 2B60     		str	r3, [r5]	@ _27, MEM[(volatile long unsigned int *)1109524916B]
 3852 00e2 ECE7     		b	.L288	@
 3853              	.L296:
 3854              		.align	2
 3855              	.L295:
 3856 00e4 00080140 		.word	1073809408
 3857 00e8 00100240 		.word	1073876992
 3858 00ec 00300140 		.word	1073819648
 3859 00f0 30000240 		.word	1073872944
 3860 00f4 00000000 		.word	.LANCHOR18
 3861 00f8 0C300140 		.word	1073819660
 3862 00fc 00000240 		.word	1073872896
 3863 0100 00000000 		.word	.LC51
 3864 0104 00000000 		.word	trg0
 3865 0108 00000000 		.word	delay_us
 3866 010c 10E000E0 		.word	-536813552
 3867 0110 B4012242 		.word	1109524916
 3868 0114 40771B00 		.word	1800000
 3869 0118 00000000 		.word	trg1
 3870 011c A0BB0D00 		.word	900000
 3871              		.size	ws2812led, .-ws2812led
 3872              		.section	.text.lexmark_lcd,"ax",%progbits
 3873              		.align	1
 3874              		.p2align 2,,3
 3875              		.global	lexmark_lcd
 3876              		.syntax unified
ARM GAS  /tmp/ccpmJ073.s 			page 69


 3877              		.thumb
 3878              		.thumb_func
 3879              		.fpu softvfp
 3880              		.type	lexmark_lcd, %function
 3881              	lexmark_lcd:
 3882              		@ Volatile: function does not return.
 3883              		@ args = 0, pretend = 0, frame = 8
 3884              		@ frame_needed = 0, uses_anonymous_args = 0
 3885 0000 00B5     		push	{lr}	@
 3886 0002 83B0     		sub	sp, sp, #12	@,,
 3887              	@ main.c:1894: 		UC1608_Init();
 3888 0004 FFF7FEFF 		bl	UC1608_Init	@
 3889              	@ main.c:1900: 		UC1608_Clr();
 3890 0008 FFF7FEFF 		bl	UC1608_Clr	@
 3891              	@ main.c:1902: 		UC1608_str (0, 0,"Witaj szkolo         ");
 3892 000c 0021     		movs	r1, #0	@,
 3893 000e 174A     		ldr	r2, .L302	@,
 3894 0010 0846     		mov	r0, r1	@,
 3895 0012 FFF7FEFF 		bl	UC1608_str	@
 3896              	@ main.c:1903: 		UC1608_str (1, 0,"Zapraszam do pracy        ");
 3897 0016 164A     		ldr	r2, .L302+4	@,
 3898 0018 0021     		movs	r1, #0	@,
 3899 001a 0120     		movs	r0, #1	@,
 3900 001c FFF7FEFF 		bl	UC1608_str	@
 3901              	@ main.c:1904: 		UC1608_Refresh();
 3902 0020 FFF7FEFF 		bl	UC1608_Refresh	@
 3903              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 3904 0024 134B     		ldr	r3, .L302+8	@ tmp122,
 3905 0026 144A     		ldr	r2, .L302+12	@ tmp137,
 3906              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 3907 0028 1D46     		mov	r5, r3	@ tmp125, tmp122
 3908              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 3909 002a 9B68     		ldr	r3, [r3, #8]	@ _17, MEM[(struct SysTick_Type *)3758153744B].VAL
 3910              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 3911 002c 1349     		ldr	r1, .L302+16	@ tmp127,
 3912              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 3913 002e 1360     		str	r3, [r2]	@ _17, delay_us
 3914              	.L298:
 3915              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 3916 0030 1368     		ldr	r3, [r2]	@ delay_us.116_18, delay_us
 3917 0032 A868     		ldr	r0, [r5, #8]	@ _19, MEM[(struct SysTick_Type *)3758153744B].VAL
 3918 0034 1B1A     		subs	r3, r3, r0	@ tmp126, delay_us.116_18, _19
 3919 0036 8B42     		cmp	r3, r1	@ tmp126, tmp127
 3920 0038 FAD9     		bls	.L298	@,
 3921              	@ main.c:1907: 		UC1608_str (1, 0,"                          ");
 3922 003a 114A     		ldr	r2, .L302+20	@,
 3923 003c 0021     		movs	r1, #0	@,
 3924 003e 0120     		movs	r0, #1	@,
 3925 0040 FFF7FEFF 		bl	UC1608_str	@
 3926              	@ main.c:1908: 		UC1608_Refresh();
 3927 0044 FFF7FEFF 		bl	UC1608_Refresh	@
 3928              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 3929 0048 AA68     		ldr	r2, [r5, #8]	@ _16, MEM[(struct SysTick_Type *)3758153744B].VAL
 3930 004a 0E4B     		ldr	r3, .L302+24	@ tmp130,
 3931              	@ main.c:1913: 		UaPutS(" T[us]="); sint2uart(tim/TIM_US);
 3932 004c 0E48     		ldr	r0, .L302+28	@,
 3933              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
ARM GAS  /tmp/ccpmJ073.s 			page 70


 3934 004e 1A60     		str	r2, [r3]	@ _16, Timt
 3935              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 3936 0050 1C68     		ldr	r4, [r3]	@ Timt.47_13, Timt
 3937 0052 AB68     		ldr	r3, [r5, #8]	@ _14, MEM[(struct SysTick_Type *)3758153744B].VAL
 3938 0054 E41A     		subs	r4, r4, r3	@ _15, Timt.47_13, _14
 3939 0056 0194     		str	r4, [sp, #4]	@ _15, MEM[(volatile u32 *)&tim]
 3940              	@ main.c:1913: 		UaPutS(" T[us]="); sint2uart(tim/TIM_US);
 3941 0058 FFF7FEFF 		bl	UaPutS	@
 3942 005c 0B48     		ldr	r0, .L302+32	@ tmp136,
 3943 005e A0FB0430 		umull	r3, r0, r0, r4	@ tmp138, tmp135, tmp136, _15
 3944 0062 4008     		lsrs	r0, r0, #1	@, tmp135,
 3945 0064 FFF7FEFF 		bl	sint2uart	@
 3946              	.L299:
 3947 0068 FEE7     		b	.L299	@
 3948              	.L303:
 3949 006a 00BF     		.align	2
 3950              	.L302:
 3951 006c 00000000 		.word	.LC52
 3952 0070 18000000 		.word	.LC53
 3953 0074 10E000E0 		.word	-536813552
 3954 0078 00000000 		.word	delay_us
 3955 007c 3F548900 		.word	8999999
 3956 0080 34000000 		.word	.LC54
 3957 0084 00000000 		.word	Timt
 3958 0088 50000000 		.word	.LC55
 3959 008c 398EE338 		.word	954437177
 3960              		.size	lexmark_lcd, .-lexmark_lcd
 3961              		.section	.text.softUTX_init,"ax",%progbits
 3962              		.align	1
 3963              		.p2align 2,,3
 3964              		.global	softUTX_init
 3965              		.syntax unified
 3966              		.thumb
 3967              		.thumb_func
 3968              		.fpu softvfp
 3969              		.type	softUTX_init, %function
 3970              	softUTX_init:
 3971              		@ args = 0, pretend = 0, frame = 0
 3972              		@ frame_needed = 0, uses_anonymous_args = 0
 3973              		@ link register save eliminated.
 3974              	@ main.c:1983: 		GPIOC->CRH = (GPIOC->CRH & 0xf0ffffff) | 0x01000000;  				// PC14 = softUART
 3975 0000 034A     		ldr	r2, .L305	@ tmp113,
 3976 0002 5368     		ldr	r3, [r2, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 3977 0004 23F07063 		bic	r3, r3, #251658240	@ tmp114, _1,
 3978 0008 43F08073 		orr	r3, r3, #16777216	@ _3, tmp114,
 3979 000c 5360     		str	r3, [r2, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 3980              	@ main.c:1984: 	}
 3981 000e 7047     		bx	lr	@
 3982              	.L306:
 3983              		.align	2
 3984              	.L305:
 3985 0010 00100140 		.word	1073811456
 3986              		.size	softUTX_init, .-softUTX_init
 3987              		.section	.text.sofUTX,"ax",%progbits
 3988              		.align	1
 3989              		.p2align 2,,3
 3990              		.global	sofUTX
ARM GAS  /tmp/ccpmJ073.s 			page 71


 3991              		.syntax unified
 3992              		.thumb
 3993              		.thumb_func
 3994              		.fpu softvfp
 3995              		.type	sofUTX, %function
 3996              	sofUTX:
 3997              		@ args = 0, pretend = 0, frame = 8
 3998              		@ frame_needed = 0, uses_anonymous_args = 0
 3999              		@ link register save eliminated.
 4000              	@ main.c:1988: 		p_SofTX=0;				  //START Bit
 4001 0000 0021     		movs	r1, #0	@ tmp129,
 4002              	@ main.c:1985: void sofUTX(volatile u08 bTX)	{  /// Sotware Transmit USART Frame [8N1] with TIMER P
 4003 0002 F0B4     		push	{r4, r5, r6, r7}	@
 4004              	@ main.c:1988: 		p_SofTX=0;				  //START Bit
 4005 0004 194A     		ldr	r2, .L319	@ tmp128,
 4006              	@ inc/tool/delay.h:99: 		delay_us = SysTick->VAL; 
 4007 0006 1A4B     		ldr	r3, .L319+4	@ tmp130,
 4008              	@ main.c:1985: void sofUTX(volatile u08 bTX)	{  /// Sotware Transmit USART Frame [8N1] with TIMER P
 4009 0008 82B0     		sub	sp, sp, #8	@,,
 4010              	@ main.c:1985: void sofUTX(volatile u08 bTX)	{  /// Sotware Transmit USART Frame [8N1] with TIMER P
 4011 000a 8DF80700 		strb	r0, [sp, #7]	@ bTX, bTX
 4012              	@ main.c:1988: 		p_SofTX=0;				  //START Bit
 4013 000e 1160     		str	r1, [r2]	@ tmp129, MEM[(volatile long unsigned int *)1109524920B]
 4014              	@ inc/tool/delay.h:100: 		while( STCLK_DN*ns > (delay_us - SysTick->VAL) );
 4015 0010 1C46     		mov	r4, r3	@ tmp133, tmp130
 4016              	@ inc/tool/delay.h:99: 		delay_us = SysTick->VAL; 
 4017 0012 1849     		ldr	r1, .L319+8	@ tmp158,
 4018 0014 9B68     		ldr	r3, [r3, #8]	@ _16, MEM[(struct SysTick_Type *)3758153744B].VAL
 4019 0016 0B60     		str	r3, [r1]	@ _16, delay_us
 4020              	.L308:
 4021              	@ inc/tool/delay.h:100: 		while( STCLK_DN*ns > (delay_us - SysTick->VAL) );
 4022 0018 0B68     		ldr	r3, [r1]	@ delay_us.118_17, delay_us
 4023 001a A268     		ldr	r2, [r4, #8]	@ _18, MEM[(struct SysTick_Type *)3758153744B].VAL
 4024 001c 9B1A     		subs	r3, r3, r2	@ tmp134, delay_us.118_17, _18
 4025 001e 112B     		cmp	r3, #17	@ tmp134,
 4026 0020 FAD9     		bls	.L308	@,
 4027              	@ main.c:1986: 		u08  cTX = 1 ;
 4028 0022 0124     		movs	r4, #1	@ cTX,
 4029              	@ inc/tool/delay.h:100: 		while( STCLK_DN*ns > (delay_us - SysTick->VAL) );
 4030 0024 0825     		movs	r5, #8	@ ivtmp_3,
 4031              	@ main.c:1991: 		 if(bTX & cTX)  p_SofTX=1;
 4032 0026 2746     		mov	r7, r4	@ tmp160, cTX
 4033              	@ main.c:1992: 		 else 					p_SofTX=0;
 4034 0028 104E     		ldr	r6, .L319	@ tmp159,
 4035              	@ inc/tool/delay.h:99: 		delay_us = SysTick->VAL; 
 4036 002a 1148     		ldr	r0, .L319+4	@ tmp146,
 4037              	.L312:
 4038              	@ main.c:1991: 		 if(bTX & cTX)  p_SofTX=1;
 4039 002c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2	@ bTX, bTX
 4040 0030 2340     		ands	r3, r3, r4	@ tmp140, bTX, cTX
 4041 0032 14BF     		ite	ne
 4042 0034 3760     		strne	r7, [r6]	@ tmp160, MEM[(volatile long unsigned int *)1109524920B]
 4043              	@ main.c:1992: 		 else 					p_SofTX=0;
 4044 0036 3360     		streq	r3, [r6]	@ tmp140, MEM[(volatile long unsigned int *)1109524920B]
 4045              	@ inc/tool/delay.h:99: 		delay_us = SysTick->VAL; 
 4046 0038 8368     		ldr	r3, [r0, #8]	@ _20, MEM[(struct SysTick_Type *)3758153744B].VAL
 4047              	@ main.c:1993: 		 cTX <<= 1;
ARM GAS  /tmp/ccpmJ073.s 			page 72


 4048 003a 6400     		lsls	r4, r4, #1	@ tmp145, cTX,
 4049 003c E4B2     		uxtb	r4, r4	@ cTX, tmp145
 4050              	@ inc/tool/delay.h:99: 		delay_us = SysTick->VAL; 
 4051 003e 0B60     		str	r3, [r1]	@ _20, delay_us
 4052              	.L311:
 4053              	@ inc/tool/delay.h:100: 		while( STCLK_DN*ns > (delay_us - SysTick->VAL) );
 4054 0040 0B68     		ldr	r3, [r1]	@ delay_us.118_21, delay_us
 4055 0042 8268     		ldr	r2, [r0, #8]	@ _22, MEM[(struct SysTick_Type *)3758153744B].VAL
 4056 0044 9B1A     		subs	r3, r3, r2	@ tmp150, delay_us.118_21, _22
 4057 0046 112B     		cmp	r3, #17	@ tmp150,
 4058 0048 FAD9     		bls	.L311	@,
 4059              	@ main.c:1990: 		while(cTX != 0){		//Wait to send Data
 4060 004a 013D     		subs	r5, r5, #1	@ ivtmp_3, ivtmp_3,
 4061 004c EED1     		bne	.L312	@,
 4062              	@ main.c:1996: 		p_SofTX=1;				//STOP Bit		
 4063 004e 0122     		movs	r2, #1	@ tmp152,
 4064 0050 064B     		ldr	r3, .L319	@ tmp151,
 4065              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4066 0052 074C     		ldr	r4, .L319+4	@ tmp156,
 4067              	@ main.c:1996: 		p_SofTX=1;				//STOP Bit		
 4068 0054 1A60     		str	r2, [r3]	@ tmp152, MEM[(volatile long unsigned int *)1109524920B]
 4069              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4070 0056 8368     		ldr	r3, [r0, #8]	@ _12, MEM[(struct SysTick_Type *)3758153744B].VAL
 4071 0058 0B60     		str	r3, [r1]	@ _12, delay_us
 4072              	.L313:
 4073              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4074 005a 0B68     		ldr	r3, [r1]	@ delay_us.48_13, delay_us
 4075 005c A268     		ldr	r2, [r4, #8]	@ _14, MEM[(struct SysTick_Type *)3758153744B].VAL
 4076 005e 9B1A     		subs	r3, r3, r2	@ tmp157, delay_us.48_13, _14
 4077 0060 592B     		cmp	r3, #89	@ tmp157,
 4078 0062 FAD9     		bls	.L313	@,
 4079              	@ main.c:1998: 	}
 4080 0064 02B0     		add	sp, sp, #8	@,,
 4081              		@ sp needed	@
 4082 0066 F0BC     		pop	{r4, r5, r6, r7}	@
 4083 0068 7047     		bx	lr	@
 4084              	.L320:
 4085 006a 00BF     		.align	2
 4086              	.L319:
 4087 006c B8012242 		.word	1109524920
 4088 0070 10E000E0 		.word	-536813552
 4089 0074 00000000 		.word	delay_us
 4090              		.size	sofUTX, .-sofUTX
 4091              		.section	.text.ToLED,"ax",%progbits
 4092              		.align	1
 4093              		.p2align 2,,3
 4094              		.global	ToLED
 4095              		.syntax unified
 4096              		.thumb
 4097              		.thumb_func
 4098              		.fpu softvfp
 4099              		.type	ToLED, %function
 4100              	ToLED:
 4101              		@ args = 0, pretend = 0, frame = 0
 4102              		@ frame_needed = 0, uses_anonymous_args = 0
 4103 0000 70B5     		push	{r4, r5, r6, lr}	@
 4104              	@ main.c:1999: void ToLED(u16 B,u16 A,u08 dot)	{
ARM GAS  /tmp/ccpmJ073.s 			page 73


 4105 0002 0546     		mov	r5, r0	@ B, B
 4106 0004 0C46     		mov	r4, r1	@ A, A
 4107 0006 1646     		mov	r6, r2	@ dot, dot
 4108              	@ main.c:2000: 		sofUTX(B&0x00ff);	// segment LO
 4109 0008 C0B2     		uxtb	r0, r0	@, B
 4110 000a FFF7FEFF 		bl	sofUTX	@
 4111              	@ main.c:2001: 		sofUTX(B>>8);			// segment HI
 4112 000e 280A     		lsrs	r0, r5, #8	@, B,
 4113 0010 FFF7FEFF 		bl	sofUTX	@
 4114              	@ main.c:2002: 		sofUTX(A&0x00ff);	// segment LO
 4115 0014 E0B2     		uxtb	r0, r4	@, A
 4116 0016 FFF7FEFF 		bl	sofUTX	@
 4117              	@ main.c:2003: 		sofUTX(A>>8);			// segment HI
 4118 001a 200A     		lsrs	r0, r4, #8	@, A,
 4119 001c FFF7FEFF 		bl	sofUTX	@
 4120              	@ main.c:2004: 		sofUTX(dot);
 4121 0020 3046     		mov	r0, r6	@, dot
 4122              	@ main.c:2005: 	}
 4123 0022 BDE87040 		pop	{r4, r5, r6, lr}	@
 4124              	@ main.c:2004: 		sofUTX(dot);
 4125 0026 FFF7FEBF 		b	sofUTX	@
 4126              		.size	ToLED, .-ToLED
 4127 002a 00BF     		.section	.text.cmd_LCD,"ax",%progbits
 4128              		.align	1
 4129              		.p2align 2,,3
 4130              		.global	cmd_LCD
 4131              		.syntax unified
 4132              		.thumb
 4133              		.thumb_func
 4134              		.fpu softvfp
 4135              		.type	cmd_LCD, %function
 4136              	cmd_LCD:
 4137              		@ args = 0, pretend = 0, frame = 0
 4138              		@ frame_needed = 0, uses_anonymous_args = 0
 4139 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 4140              	@ main.c:2010: 			if (byte & 0x80)	sMOSI = 1;
 4141 0004 4FF0010E 		mov	lr, #1	@ tmp147,
 4142              	@ main.c:2006: void cmd_LCD(uint8_t byte)	{
 4143 0008 0825     		movs	r5, #8	@ ivtmp_2,
 4144              	@ main.c:2013: 			sSCK = 1; /* a slave latches input data bit */
 4145 000a F046     		mov	r8, lr	@ MEM[(volatile long unsigned int *)1109459348B], tmp147
 4146              	@ main.c:2011: 			else							sMOSI = 0;
 4147 000c 0027     		movs	r7, #0	@ tmp146,
 4148 000e 1249     		ldr	r1, .L333	@ tmp144,
 4149 0010 DFF850C0 		ldr	ip, .L333+12	@ tmp145,
 4150              	@ main.c:2013: 			sSCK = 1; /* a slave latches input data bit */
 4151 0014 114E     		ldr	r6, .L333+4	@ tmp129,
 4152              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4153 0016 124A     		ldr	r2, .L333+8	@ tmp131,
 4154              	.L328:
 4155              	@ main.c:2010: 			if (byte & 0x80)	sMOSI = 1;
 4156 0018 0306     		lsls	r3, r0, #24	@, byte,
 4157 001a 4CBF     		ite	mi
 4158 001c CCF800E0 		strmi	lr, [ip]	@ tmp147, MEM[(volatile long unsigned int *)1109459356B]
 4159              	@ main.c:2011: 			else							sMOSI = 0;
 4160 0020 CCF80070 		strpl	r7, [ip]	@ tmp146, MEM[(volatile long unsigned int *)1109459356B]
 4161              	@ main.c:2013: 			sSCK = 1; /* a slave latches input data bit */
ARM GAS  /tmp/ccpmJ073.s 			page 74


 4162 0024 C6F80080 		str	r8, [r6]	@ MEM[(volatile long unsigned int *)1109459348B], MEM[(volatile long unsigned int *)1
 4163              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4164 0028 9368     		ldr	r3, [r2, #8]	@ _18, MEM[(struct SysTick_Type *)3758153744B].VAL
 4165              	@ main.c:2012: 			byte <<= 1;
 4166 002a 4000     		lsls	r0, r0, #1	@ tmp128, byte,
 4167 002c C0B2     		uxtb	r0, r0	@ byte, tmp128
 4168              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4169 002e 0B60     		str	r3, [r1]	@ _18, delay_us
 4170              	.L326:
 4171              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4172 0030 0B68     		ldr	r3, [r1]	@ delay_us.48_19, delay_us
 4173 0032 9468     		ldr	r4, [r2, #8]	@ _20, MEM[(struct SysTick_Type *)3758153744B].VAL
 4174 0034 1B1B     		subs	r3, r3, r4	@ tmp135, delay_us.48_19, _20
 4175 0036 112B     		cmp	r3, #17	@ tmp135,
 4176 0038 FAD9     		bls	.L326	@,
 4177              	@ main.c:2015: 			sSCK = 0; /* a slave shifts out next output data bit */
 4178 003a 3760     		str	r7, [r6]	@ tmp146, MEM[(volatile long unsigned int *)1109459348B]
 4179              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4180 003c 9368     		ldr	r3, [r2, #8]	@ _14, MEM[(struct SysTick_Type *)3758153744B].VAL
 4181 003e 0B60     		str	r3, [r1]	@ _14, delay_us
 4182              	.L327:
 4183              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4184 0040 0B68     		ldr	r3, [r1]	@ delay_us.48_15, delay_us
 4185 0042 9468     		ldr	r4, [r2, #8]	@ _16, MEM[(struct SysTick_Type *)3758153744B].VAL
 4186 0044 1B1B     		subs	r3, r3, r4	@ tmp142, delay_us.48_15, _16
 4187 0046 112B     		cmp	r3, #17	@ tmp142,
 4188 0048 FAD9     		bls	.L327	@,
 4189 004a 013D     		subs	r5, r5, #1	@ tmp143, ivtmp_2,
 4190              	@ main.c:2008: 		for(counter = 8; counter; counter--)
 4191 004c 15F0FF05 		ands	r5, r5, #255	@ ivtmp_2, tmp143,
 4192 0050 E2D1     		bne	.L328	@,
 4193              	@ main.c:2019: 	}
 4194 0052 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}	@
 4195              	.L334:
 4196 0056 00BF     		.align	2
 4197              	.L333:
 4198 0058 00000000 		.word	delay_us
 4199 005c 94012142 		.word	1109459348
 4200 0060 10E000E0 		.word	-536813552
 4201 0064 9C012142 		.word	1109459356
 4202              		.size	cmd_LCD, .-cmd_LCD
 4203              		.section	.text.CalculateLux,"ax",%progbits
 4204              		.align	1
 4205              		.p2align 2,,3
 4206              		.global	CalculateLux
 4207              		.syntax unified
 4208              		.thumb
 4209              		.thumb_func
 4210              		.fpu softvfp
 4211              		.type	CalculateLux, %function
 4212              	CalculateLux:
 4213              		@ args = 4, pretend = 0, frame = 0
 4214              		@ frame_needed = 0, uses_anonymous_args = 0
 4215              		@ link register save eliminated.
 4216 0000 30B4     		push	{r4, r5}	@
 4217              	@ main.c:2020: u16  CalculateLux(u16 iGain, u16 tInt, u16 ch0, u16 ch1, int iType)	{
 4218 0002 029D     		ldr	r5, [sp, #8]	@ iType, iType
ARM GAS  /tmp/ccpmJ073.s 			page 75


 4219              	@ main.c:2038:     switch (tInt)
 4220 0004 0029     		cmp	r1, #0	@ tInt
 4221 0006 47D0     		beq	.L337	@
 4222              	@ main.c:2049:        chScale = (1 << CH_SCALE);
 4223 0008 40F6E774 		movw	r4, #4071	@ tmp153,
 4224 000c 0129     		cmp	r1, #1	@ tInt,
 4225 000e 0CBF     		ite	eq
 4226 0010 2146     		moveq	r1, r4	@ chScale, tmp153
 4227 0012 4FF48061 		movne	r1, #1024	@ chScale,
 4228              	.L338:
 4229              	@ main.c:2054:     if (!iGain) chScale = chScale << 4; // scale 1X to 16X
 4230 0016 00B9     		cbnz	r0, .L339	@ iGain,
 4231              	@ main.c:2054:     if (!iGain) chScale = chScale << 4; // scale 1X to 16X
 4232 0018 0901     		lsls	r1, r1, #4	@ chScale, chScale,
 4233              	.L339:
 4234              	@ main.c:2058:     channel1 = (ch1 * chScale) >> CH_SCALE;
 4235 001a 01FB03F3 		mul	r3, r1, r3	@ _4, chScale, ch1
 4236              	@ main.c:2057:     channel0 = (ch0 * chScale) >> CH_SCALE;
 4237 001e 01FB02F1 		mul	r1, r1, r2	@ tmp139, chScale, ch0
 4238              	@ main.c:2064:     if (channel0 != 0) ratio1 = (channel1 << (RATIO_SCALE+1)) / channel0;
 4239 0022 890A     		lsrs	r1, r1, #10	@ channel0, tmp139,
 4240              	@ main.c:2058:     channel1 = (ch1 * chScale) >> CH_SCALE;
 4241 0024 4FEA9320 		lsr	r0, r3, #10	@ channel1, _4,
 4242              	@ main.c:2064:     if (channel0 != 0) ratio1 = (channel1 << (RATIO_SCALE+1)) / channel0;
 4243 0028 18D0     		beq	.L340	@,
 4244              	@ main.c:2064:     if (channel0 != 0) ratio1 = (channel1 << (RATIO_SCALE+1)) / channel0;
 4245 002a 23F47F73 		bic	r3, r3, #1020	@ tmp140, _4,
 4246 002e 23F00303 		bic	r3, r3, #3	@ tmp140, tmp140,
 4247 0032 B3FBF1F3 		udiv	r3, r3, r1	@ ratio1, tmp140, channel0
 4248 0036 0133     		adds	r3, r3, #1	@ tmp144, ratio1,
 4249 0038 5B08     		lsrs	r3, r3, #1	@ prephitmp_18, tmp144,
 4250              	@ main.c:2072:     switch (iType)
 4251 003a ADB3     		cbz	r5, .L342	@ iType,
 4252 003c 012D     		cmp	r5, #1	@ iType,
 4253 003e 15D0     		beq	.L343	@,
 4254              	.L341:
 4255 0040 0022     		movs	r2, #0	@ _164,
 4256 0042 1346     		mov	r3, r2	@ _166, _164
 4257              	.L344:
 4258              	@ main.c:2115:     temp = (u32)((channel0 * b) - (channel1 * m));
 4259 0044 02FB01F1 		mul	r1, r2, r1	@ tmp148, _164, channel0
 4260 0048 03FB1011 		mls	r1, r3, r0, r1	@ temp, _166, channel1, tmp148
 4261 004c 21EAE171 		bic	r1, r1, r1, asr #31	@ temp, temp
 4262 0050 01F50051 		add	r1, r1, #8192	@ tmp150, temp,
 4263 0054 C1F38F30 		ubfx	r0, r1, #14, #16	@ <retval>, tmp150,,
 4264              	.L365:
 4265              	@ main.c:2127: 	}
 4266 0058 30BC     		pop	{r4, r5}	@
 4267 005a 7047     		bx	lr	@
 4268              	.L340:
 4269              	@ main.c:2072:     switch (iType)
 4270 005c FDB1     		cbz	r5, .L361	@ iType,
 4271 005e 012D     		cmp	r5, #1	@ iType,
 4272 0060 EED1     		bne	.L341	@,
 4273              	.L354:
 4274 0062 40F2AD13 		movw	r3, #429	@ _166,
 4275 0066 4FF40172 		mov	r2, #516	@ _164,
ARM GAS  /tmp/ccpmJ073.s 			page 76


 4276 006a EBE7     		b	.L344	@
 4277              	.L343:
 4278              	@ main.c:2094:             if ((ratio >= 0) && (ratio <= K1C))
 4279 006c 432B     		cmp	r3, #67	@ prephitmp_18,
 4280 006e F8D9     		bls	.L354	@,
 4281              	@ main.c:2096:             else if (ratio <= K2C)
 4282 0070 852B     		cmp	r3, #133	@ prephitmp_18,
 4283 0072 34D9     		bls	.L355	@,
 4284              	@ main.c:2098:             else if (ratio <= K3C)
 4285 0074 C82B     		cmp	r3, #200	@ prephitmp_18,
 4286 0076 37DD     		ble	.L356	@,
 4287              	@ main.c:2100:             else if (ratio <= K4C)
 4288 0078 B3F5857F 		cmp	r3, #266	@ prephitmp_18,
 4289 007c 43DD     		ble	.L357	@,
 4290              	@ main.c:2102:             else if (ratio <= K5C)
 4291 007e B3F5A77F 		cmp	r3, #334	@ prephitmp_18,
 4292 0082 45DB     		blt	.L358	@,
 4293              	@ main.c:2104:             else if (ratio <= K6C)
 4294 0084 B3F5CD7F 		cmp	r3, #410	@ prephitmp_18,
 4295 0088 51DD     		ble	.L359	@,
 4296              	@ main.c:2106:             else if (ratio <= K7C)
 4297 008a 40F29A22 		movw	r2, #666	@ tmp146,
 4298 008e 9342     		cmp	r3, r2	@ prephitmp_18, tmp146
 4299 0090 4BDC     		bgt	.L360	@,
 4300 0092 2B23     		movs	r3, #43	@ _166,
 4301 0094 3722     		movs	r2, #55	@ _164,
 4302 0096 D5E7     		b	.L344	@
 4303              	.L337:
 4304              	@ main.c:2041:        chScale = CHSCALE_TINT0;
 4305 0098 47F21751 		movw	r1, #29975	@ chScale,
 4306 009c BBE7     		b	.L338	@
 4307              	.L361:
 4308              	@ main.c:2072:     switch (iType)
 4309 009e 4FF4DF73 		mov	r3, #446	@ _166,
 4310 00a2 4FF4F972 		mov	r2, #498	@ _164,
 4311 00a6 CDE7     		b	.L344	@
 4312              	.L342:
 4313              	@ main.c:2075:         if ((ratio >= 0) && (ratio <= K1T))
 4314 00a8 402B     		cmp	r3, #64	@ prephitmp_18,
 4315 00aa F8D9     		bls	.L361	@,
 4316              	@ main.c:2077:             else if (ratio <= K2T)
 4317 00ac 802B     		cmp	r3, #128	@ prephitmp_18,
 4318 00ae 11D9     		bls	.L348	@,
 4319              	@ main.c:2079:             else if (ratio <= K3T)
 4320 00b0 C02B     		cmp	r3, #192	@ prephitmp_18,
 4321 00b2 1EDD     		ble	.L349	@,
 4322              	@ main.c:2081:             else if (ratio <= K4T)
 4323 00b4 B3F5807F 		cmp	r3, #256	@ prephitmp_18,
 4324 00b8 20DD     		ble	.L350	@,
 4325              	@ main.c:2083:             else if (ratio <= K5T)
 4326 00ba B3F59C7F 		cmp	r3, #312	@ prephitmp_18,
 4327 00be 2CDD     		ble	.L351	@,
 4328              	@ main.c:2085:             else if (ratio <= K6T)
 4329 00c0 B3F5CD7F 		cmp	r3, #410	@ prephitmp_18,
 4330 00c4 2EDD     		ble	.L352	@,
 4331              	@ main.c:2087:             else if (ratio <= K7T)
 4332 00c6 40F29A22 		movw	r2, #666	@ tmp145,
ARM GAS  /tmp/ccpmJ073.s 			page 77


 4333 00ca 9342     		cmp	r3, r2	@ prephitmp_18, tmp145
 4334 00cc 2DDC     		bgt	.L360	@,
 4335 00ce 1223     		movs	r3, #18	@ _166,
 4336 00d0 1822     		movs	r2, #24	@ _164,
 4337 00d2 B7E7     		b	.L344	@
 4338              	.L348:
 4339 00d4 40F2D123 		movw	r3, #721	@ _166,
 4340 00d8 4FF40572 		mov	r2, #532	@ _164,
 4341 00dc B2E7     		b	.L344	@
 4342              	.L355:
 4343 00de 40F2C123 		movw	r3, #705	@ _166,
 4344 00e2 4FF40A72 		mov	r2, #552	@ _164,
 4345 00e6 ADE7     		b	.L344	@
 4346              	.L356:
 4347 00e8 40F26333 		movw	r3, #867	@ _166,
 4348 00ec 40F25322 		movw	r2, #595	@ _164,
 4349 00f0 A8E7     		b	.L344	@
 4350              	.L349:
 4351 00f2 40F27B33 		movw	r3, #891	@ _166,
 4352 00f6 40F23F22 		movw	r2, #575	@ _164,
 4353 00fa A3E7     		b	.L344	@
 4354              	.L350:
 4355 00fc 40F2FE33 		movw	r3, #1022	@ _166,
 4356 0100 4FF41C72 		mov	r2, #624	@ _164,
 4357 0104 9EE7     		b	.L344	@
 4358              	.L357:
 4359 0106 40F2DF33 		movw	r3, #991	@ _166,
 4360 010a 40F28222 		movw	r2, #642	@ _164,
 4361 010e 99E7     		b	.L344	@
 4362              	.L358:
 4363 0110 40F2DD13 		movw	r3, #477	@ _166,
 4364 0114 40F27712 		movw	r2, #375	@ _164,
 4365 0118 94E7     		b	.L344	@
 4366              	.L351:
 4367 011a 4FF4FE73 		mov	r3, #508	@ _166,
 4368 011e 40F26F12 		movw	r2, #367	@ _164,
 4369 0122 8FE7     		b	.L344	@
 4370              	.L352:
 4371 0124 FB23     		movs	r3, #251	@ _166,
 4372 0126 D222     		movs	r2, #210	@ _164,
 4373 0128 8CE7     		b	.L344	@
 4374              	.L360:
 4375 012a 0020     		movs	r0, #0	@ <retval>,
 4376              	@ main.c:2126:     return(lux);
 4377 012c 94E7     		b	.L365	@
 4378              	.L359:
 4379 012e 40F22713 		movw	r3, #295	@ _166,
 4380 0132 40F20112 		movw	r2, #257	@ _164,
 4381 0136 85E7     		b	.L344	@
 4382              		.size	CalculateLux, .-CalculateLux
 4383              		.section	.text.TSL2561_i2c,"ax",%progbits
 4384              		.align	1
 4385              		.p2align 2,,3
 4386              		.global	TSL2561_i2c
 4387              		.syntax unified
 4388              		.thumb
 4389              		.thumb_func
ARM GAS  /tmp/ccpmJ073.s 			page 78


 4390              		.fpu softvfp
 4391              		.type	TSL2561_i2c, %function
 4392              	TSL2561_i2c:
 4393              		@ args = 0, pretend = 0, frame = 8
 4394              		@ frame_needed = 0, uses_anonymous_args = 0
 4395              	@ main.c:2142: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 4396 0000 0122     		movs	r2, #1	@ tmp142,
 4397              	@ main.c:2128: void TSL2561_i2c(void){
 4398 0002 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}	@
 4399              	@ main.c:2162: 		buf[0]=0x80;
 4400 0006 4FF46070 		mov	r0, #896	@ tmp159,
 4401              	@ main.c:2144: 		I2C2_CR1_SWRST_bb = 0;
 4402 000a 0027     		movs	r7, #0	@ tmp146,
 4403              	@ main.c:2145: 		I2C2->TRISE = 37;               		// limit slope
 4404 000c 2526     		movs	r6, #37	@ tmp149,
 4405              	@ main.c:2147: 		I2C2->CCR = (F_CPU/(4*400000));             // setup speed (100kHz)
 4406 000e 2D25     		movs	r5, #45	@ tmp152,
 4407              	@ main.c:2150: 		I2C2->CR2 = I2C_CR2_FREQ_36MHz;     // config I2C2 module
 4408 0010 2424     		movs	r4, #36	@ tmp155,
 4409              	@ main.c:2140: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// ...009900 PB11=SDA (Open-d
 4410 0012 3249     		ldr	r1, .L372	@ tmp138,
 4411              	@ main.c:2128: void TSL2561_i2c(void){
 4412 0014 82B0     		sub	sp, sp, #8	@,,
 4413              	@ main.c:2140: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// ...009900 PB11=SDA (Open-d
 4414 0016 4B68     		ldr	r3, [r1, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 4415              	@ main.c:2162: 		buf[0]=0x80;
 4416 0018 0DF10808 		add	r8, sp, #8	@ tmp195,,
 4417              	@ main.c:2140: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// ...009900 PB11=SDA (Open-d
 4418 001c 23F47F43 		bic	r3, r3, #65280	@ tmp139, _1,
 4419 0020 43F45D43 		orr	r3, r3, #56576	@ _3, tmp139,
 4420 0024 4B60     		str	r3, [r1, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 4421              	@ main.c:2142: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 4422 0026 2E4B     		ldr	r3, .L372+4	@ tmp141,
 4423              	@ main.c:2143: 		I2C2_CR1_SWRST_bb = 1;            	// force software reset of I2C peripheral
 4424 0028 2E49     		ldr	r1, .L372+8	@ tmp143,
 4425              	@ main.c:2142: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 4426 002a 1A60     		str	r2, [r3]	@ tmp142, MEM[(volatile long unsigned int *)1111622616B]
 4427              	@ main.c:2145: 		I2C2->TRISE = 37;               		// limit slope
 4428 002c 2E4B     		ldr	r3, .L372+12	@ tmp147,
 4429              	@ main.c:2143: 		I2C2_CR1_SWRST_bb = 1;            	// force software reset of I2C peripheral
 4430 002e 0A60     		str	r2, [r1]	@ tmp142, MEM[(volatile long unsigned int *)1108017212B]
 4431              	@ main.c:2144: 		I2C2_CR1_SWRST_bb = 0;
 4432 0030 0F60     		str	r7, [r1]	@ tmp146, MEM[(volatile long unsigned int *)1108017212B]
 4433              	@ main.c:2145: 		I2C2->TRISE = 37;               		// limit slope
 4434 0032 1E84     		strh	r6, [r3, #32]	@ movhi	@ tmp149, MEM[(struct I2C_TypeDef *)1073764352B].TRISE
 4435              	@ main.c:2147: 		I2C2->CCR = (F_CPU/(4*400000));             // setup speed (100kHz)
 4436 0034 9D83     		strh	r5, [r3, #28]	@ movhi	@ tmp152, MEM[(struct I2C_TypeDef *)1073764352B].CCR
 4437              	@ main.c:2150: 		I2C2->CR2 = I2C_CR2_FREQ_36MHz;     // config I2C2 module
 4438 0036 9C80     		strh	r4, [r3, #4]	@ movhi	@ tmp155, MEM[(struct I2C_TypeDef *)1073764352B].CR2
 4439              	@ main.c:2151: 		I2C2_CR1_PE_bb = 1;               	// enable peripheral
 4440 0038 41F83C2C 		str	r2, [r1, #-60]	@ tmp142, MEM[(volatile long unsigned int *)1108017152B]
 4441              	@ main.c:2162: 		buf[0]=0x80;
 4442 003c 28F8080D 		strh	r0, [r8, #-8]!	@ movhi	@ tmp159, MEM[(u08[3] *)&buf]
 4443              	@ main.c:2164: 		i2c2_write(TSL2561_ADR,buf,2); // init control Power UP
 4444 0040 4146     		mov	r1, r8	@, tmp195
 4445 0042 0222     		movs	r2, #2	@,
 4446 0044 7220     		movs	r0, #114	@,
ARM GAS  /tmp/ccpmJ073.s 			page 79


 4447 0046 FFF7FEFF 		bl	i2c2_write	@
 4448              	@ main.c:2165: 		buf[0]=0x81;
 4449 004a 40F28123 		movw	r3, #641	@ tmp162,
 4450              	@ main.c:2167: 		i2c2_write(TSL2561_ADR,buf,2); // init Timing 
 4451 004e 4146     		mov	r1, r8	@, tmp195
 4452 0050 0222     		movs	r2, #2	@,
 4453 0052 7220     		movs	r0, #114	@,
 4454              	@ main.c:2165: 		buf[0]=0x81;
 4455 0054 ADF80030 		strh	r3, [sp]	@ movhi	@ tmp162, MEM[(u08[3] *)&buf]
 4456              	@ main.c:2167: 		i2c2_write(TSL2561_ADR,buf,2); // init Timing 
 4457 0058 FFF7FEFF 		bl	i2c2_write	@
 4458 005c 234D     		ldr	r5, .L372+16	@ tmp196,
 4459 005e 244F     		ldr	r7, .L372+20	@ tmp194,
 4460              	@ main.c:2172: 			if(STCLK_MS*300 < (trg0 - SysTick->VAL)){
 4461 0060 244C     		ldr	r4, .L372+24	@ tmp165,
 4462 0062 254E     		ldr	r6, .L372+28	@ tmp167,
 4463              	.L368:
 4464 0064 2B68     		ldr	r3, [r5]	@ trg0.123_4, trg0
 4465 0066 A268     		ldr	r2, [r4, #8]	@ _5, MEM[(struct SysTick_Type *)3758153744B].VAL
 4466 0068 9B1A     		subs	r3, r3, r2	@ tmp166, trg0.123_4, _5
 4467 006a B342     		cmp	r3, r6	@ tmp166, tmp167
 4468 006c FAD9     		bls	.L368	@,
 4469              	@ main.c:2173: 				trg0 = SysTick->VAL;
 4470 006e D4F808C0 		ldr	ip, [r4, #8]	@ _7, MEM[(struct SysTick_Type *)3758153744B].VAL
 4471              	@ main.c:2179: 				i2c2_read(TSL2561_ADR, DATA0LOW, buf,2 );
 4472 0072 0223     		movs	r3, #2	@,
 4473 0074 4246     		mov	r2, r8	@, tmp195
 4474 0076 8C21     		movs	r1, #140	@,
 4475 0078 7220     		movs	r0, #114	@,
 4476              	@ main.c:2173: 				trg0 = SysTick->VAL;
 4477 007a C5F800C0 		str	ip, [r5]	@ _7, trg0
 4478              	@ main.c:2179: 				i2c2_read(TSL2561_ADR, DATA0LOW, buf,2 );
 4479 007e FFF7FEFF 		bl	i2c2_read	@
 4480              	@ main.c:2180: 				ch0 = (buf[1]<<8)+buf[0];
 4481 0082 9DF80120 		ldrb	r2, [sp, #1]	@ zero_extendqisi2	@ buf, buf
 4482 0086 9DF800A0 		ldrb	r10, [sp]	@ zero_extendqisi2	@ buf, buf
 4483              	@ main.c:2181: 				i2c2_read(TSL2561_ADR, DATA1LOW, buf,2 );
 4484 008a 8E21     		movs	r1, #142	@,
 4485 008c 0223     		movs	r3, #2	@,
 4486              	@ main.c:2180: 				ch0 = (buf[1]<<8)+buf[0];
 4487 008e 0AEB022A 		add	r10, r10, r2, lsl #8	@ tmp177, buf, buf,
 4488              	@ main.c:2181: 				i2c2_read(TSL2561_ADR, DATA1LOW, buf,2 );
 4489 0092 7220     		movs	r0, #114	@,
 4490 0094 4246     		mov	r2, r8	@, tmp195
 4491 0096 FFF7FEFF 		bl	i2c2_read	@
 4492              	@ main.c:2182: 				ch1	= (buf[1]<<8)+buf[0];
 4493 009a 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2	@ buf, buf
 4494 009e 9DF80090 		ldrb	r9, [sp]	@ zero_extendqisi2	@ buf, buf
 4495              	@ main.c:2180: 				ch0 = (buf[1]<<8)+buf[0];
 4496 00a2 1FFA8AFA 		uxth	r10, r10	@ ch0, tmp177
 4497              	@ main.c:2182: 				ch1	= (buf[1]<<8)+buf[0];
 4498 00a6 09EB0329 		add	r9, r9, r3, lsl #8	@ tmp185, buf, buf,
 4499              	@ main.c:2192: 				sint2uart(ch0);
 4500 00aa 5046     		mov	r0, r10	@, ch0
 4501 00ac FFF7FEFF 		bl	sint2uart	@
 4502              	@ main.c:2182: 				ch1	= (buf[1]<<8)+buf[0];
 4503 00b0 1FFA89F9 		uxth	r9, r9	@ ch1, tmp185
ARM GAS  /tmp/ccpmJ073.s 			page 80


 4504              	@ main.c:2193: 				UaPutK(",");	
 4505 00b4 1148     		ldr	r0, .L372+32	@,
 4506 00b6 FFF7FEFF 		bl	UaPutK	@
 4507              	@ main.c:2194: 				sint2uart(ch1);
 4508 00ba 4846     		mov	r0, r9	@, ch1
 4509 00bc FFF7FEFF 		bl	sint2uart	@
 4510              	@ main.c:2195: 				UaPutK("\r\n");	
 4511 00c0 0F48     		ldr	r0, .L372+36	@,
 4512 00c2 FFF7FEFF 		bl	UaPutK	@
 4513              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 4514 00c6 A368     		ldr	r3, [r4, #8]	@ _52, MEM[(struct SysTick_Type *)3758153744B].VAL
 4515 00c8 3B60     		str	r3, [r7]	@ _52, Timt
 4516              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 4517 00ca 3B68     		ldr	r3, [r7]	@ Timt.47_49, Timt
 4518 00cc A268     		ldr	r2, [r4, #8]	@ _50, MEM[(struct SysTick_Type *)3758153744B].VAL
 4519 00ce 9B1A     		subs	r3, r3, r2	@ _51, Timt.47_49, _50
 4520 00d0 0193     		str	r3, [sp, #4]	@ _51, MEM[(volatile u32 *)&tim]
 4521 00d2 3B68     		ldr	r3, [r7]	@ Timt.47_42, Timt
 4522 00d4 A268     		ldr	r2, [r4, #8]	@ _47, MEM[(struct SysTick_Type *)3758153744B].VAL
 4523 00d6 9B1A     		subs	r3, r3, r2	@ _48, Timt.47_42, _47
 4524 00d8 0193     		str	r3, [sp, #4]	@ _48, MEM[(volatile u32 *)&tim]
 4525 00da C3E7     		b	.L368	@
 4526              	.L373:
 4527              		.align	2
 4528              	.L372:
 4529 00dc 000C0140 		.word	1073810432
 4530 00e0 D8034242 		.word	1111622616
 4531 00e4 3C000B42 		.word	1108017212
 4532 00e8 00580040 		.word	1073764352
 4533 00ec 00000000 		.word	trg0
 4534 00f0 00000000 		.word	Timt
 4535 00f4 10E000E0 		.word	-536813552
 4536 00f8 E0322900 		.word	2700000
 4537 00fc 00000000 		.word	.LC56
 4538 0100 48000000 		.word	.LC19
 4539              		.size	TSL2561_i2c, .-TSL2561_i2c
 4540              		.section	.text.set_mode,"ax",%progbits
 4541              		.align	1
 4542              		.p2align 2,,3
 4543              		.global	set_mode
 4544              		.syntax unified
 4545              		.thumb
 4546              		.thumb_func
 4547              		.fpu softvfp
 4548              		.type	set_mode, %function
 4549              	set_mode:
 4550              		@ args = 0, pretend = 0, frame = 8
 4551              		@ frame_needed = 0, uses_anonymous_args = 0
 4552 0000 30B5     		push	{r4, r5, lr}	@
 4553 0002 83B0     		sub	sp, sp, #12	@,,
 4554              	@ main.c:2228: 		i2c1_read(APDS9960_ADR, APDS9960_ENABLE, buf,1 );
 4555 0004 0123     		movs	r3, #1	@,
 4556              	@ main.c:2225: void set_mode( u08 mode, bool enable )	{
 4557 0006 0446     		mov	r4, r0	@ mode, mode
 4558 0008 0D46     		mov	r5, r1	@ enable, enable
 4559              	@ main.c:2228: 		i2c1_read(APDS9960_ADR, APDS9960_ENABLE, buf,1 );
 4560 000a 01AA     		add	r2, sp, #4	@ tmp134,,
ARM GAS  /tmp/ccpmJ073.s 			page 81


 4561 000c 8021     		movs	r1, #128	@,
 4562 000e 7220     		movs	r0, #114	@,
 4563 0010 FFF7FEFF 		bl	i2c1_read	@
 4564              	@ main.c:2229: 		uint8_t reg_val = buf[0];
 4565 0014 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2	@ reg_val, buf
 4566              	@ main.c:2231:     if( reg_val == ERROR )
 4567 0018 FF2B     		cmp	r3, #255	@ reg_val,
 4568 001a 0FD0     		beq	.L374	@,
 4569              	@ main.c:2236:     if( mode == ALL )
 4570 001c 062C     		cmp	r4, #6	@ mode,
 4571 001e 0FD9     		bls	.L376	@,
 4572              	@ main.c:2240:       reg_val = 0x7F;
 4573 0020 002D     		cmp	r5, #0	@ enable,
 4574 0022 0CBF     		ite	eq
 4575 0024 0023     		moveq	r3, #0	@ reg_val,
 4576 0026 7F23     		movne	r3, #127	@ reg_val,
 4577              	.L377:
 4578              	@ main.c:2249: 		buf[0]=APDS9960_ENABLE;			buf[1]=reg_val; 			i2c1_write(APDS9960_ADR,buf,2); 
 4579 0028 8024     		movs	r4, #128	@ tmp129,
 4580 002a 01A9     		add	r1, sp, #4	@ tmp135,,
 4581 002c 0222     		movs	r2, #2	@,
 4582 002e 7220     		movs	r0, #114	@,
 4583 0030 8DF80530 		strb	r3, [sp, #5]	@ reg_val, buf
 4584 0034 8DF80440 		strb	r4, [sp, #4]	@ tmp129, buf
 4585 0038 FFF7FEFF 		bl	i2c1_write	@
 4586              	.L374:
 4587              	@ main.c:2250: 	}
 4588 003c 03B0     		add	sp, sp, #12	@,,
 4589              		@ sp needed	@
 4590 003e 30BD     		pop	{r4, r5, pc}	@
 4591              	.L376:
 4592              	@ main.c:2242:       reg_val &= ~( 1 << mode );
 4593 0040 0120     		movs	r0, #1	@ tmp123,
 4594 0042 A040     		lsls	r0, r0, r4	@ tmp122, tmp123, mode
 4595 0044 5BB2     		sxtb	r3, r3	@ reg_val.124_5, reg_val
 4596 0046 40B2     		sxtb	r0, r0	@ _3, tmp122
 4597              	@ main.c:2243:       if( enable )
 4598 0048 15B1     		cbz	r5, .L385	@ enable,
 4599              	@ main.c:2244:       reg_val |= ( 1 << mode );
 4600 004a 1843     		orrs	r0, r0, r3	@, tmp128, _3, reg_val.124_5
 4601 004c C3B2     		uxtb	r3, r0	@ reg_val, tmp128
 4602 004e EBE7     		b	.L377	@
 4603              	.L385:
 4604              	@ main.c:2242:       reg_val &= ~( 1 << mode );
 4605 0050 23EA0003 		bic	r3, r3, r0	@ tmp127, reg_val.124_5, _3
 4606 0054 DBB2     		uxtb	r3, r3	@ reg_val, tmp127
 4607 0056 E7E7     		b	.L377	@
 4608              		.size	set_mode, .-set_mode
 4609              		.section	.text.MAX44009_i2c,"ax",%progbits
 4610              		.align	1
 4611              		.p2align 2,,3
 4612              		.global	MAX44009_i2c
 4613              		.syntax unified
 4614              		.thumb
 4615              		.thumb_func
 4616              		.fpu softvfp
 4617              		.type	MAX44009_i2c, %function
ARM GAS  /tmp/ccpmJ073.s 			page 82


 4618              	MAX44009_i2c:
 4619              		@ args = 0, pretend = 0, frame = 16
 4620              		@ frame_needed = 0, uses_anonymous_args = 0
 4621 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 4622              	@ main.c:2267: 		I2C2->CR2     = 0;
 4623 0004 0020     		movs	r0, #0	@ tmp203,
 4624              	@ main.c:2268: 		I2C2->CCR     = (F_CPU/(4*400000));             	// setup speed (100kHz)
 4625 0006 2D21     		movs	r1, #45	@ tmp206,
 4626              	@ main.c:2265: 		I2C2->TRISE   = 37;               								// limit slope
 4627 0008 2525     		movs	r5, #37	@ tmp200,
 4628              	@ main.c:2262: 		GPIOB->CRH    = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// PB11=SDA (Open-drain) P
 4629 000a 784F     		ldr	r7, .L393	@ tmp193,
 4630              	@ main.c:2301: 		buf[0]=0x02;
 4631 000c 44F20204 		movw	r4, #16386	@ tmp234,
 4632              	@ main.c:2262: 		GPIOB->CRH    = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// PB11=SDA (Open-drain) P
 4633 0010 7B68     		ldr	r3, [r7, #4]	@ _2, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 4634              	@ main.c:2263: 		RCC->APB1ENR |= RCC_APB1ENR_I2C2EN;
 4635 0012 774A     		ldr	r2, .L393+4	@ tmp196,
 4636              	@ main.c:2262: 		GPIOB->CRH    = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// PB11=SDA (Open-drain) P
 4637 0014 23F47F43 		bic	r3, r3, #65280	@ tmp194, _2,
 4638 0018 43F45D43 		orr	r3, r3, #56576	@ _4, tmp194,
 4639 001c 7B60     		str	r3, [r7, #4]	@ _4, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 4640              	@ main.c:2263: 		RCC->APB1ENR |= RCC_APB1ENR_I2C2EN;
 4641 001e D2F81CC0 		ldr	ip, [r2, #28]	@ _5, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 4642              	@ main.c:2265: 		I2C2->TRISE   = 37;               								// limit slope
 4643 0022 744B     		ldr	r3, .L393+8	@ tmp198,
 4644              	@ main.c:2263: 		RCC->APB1ENR |= RCC_APB1ENR_I2C2EN;
 4645 0024 4CF4800C 		orr	ip, ip, #4194304	@ _6, _5,
 4646 0028 C2F81CC0 		str	ip, [r2, #28]	@ _6, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 4647              	@ main.c:2265: 		I2C2->TRISE   = 37;               								// limit slope
 4648 002c 1D84     		strh	r5, [r3, #32]	@ movhi	@ tmp200, MEM[(struct I2C_TypeDef *)1073764352B].TRISE
 4649              	@ main.c:2267: 		I2C2->CR2     = 0;
 4650 002e 9880     		strh	r0, [r3, #4]	@ movhi	@ tmp203, MEM[(struct I2C_TypeDef *)1073764352B].CR2
 4651              	@ main.c:2268: 		I2C2->CCR     = (F_CPU/(4*400000));             	// setup speed (100kHz)
 4652 0030 9983     		strh	r1, [r3, #28]	@ movhi	@ tmp206, MEM[(struct I2C_TypeDef *)1073764352B].CCR
 4653              	@ main.c:2270: 		I2C2->CR1    |= I2C_CR1_PE;											  // I2C2 Pheripherial enable
 4654 0032 B3F800C0 		ldrh	ip, [r3]	@, MEM[(struct I2C_TypeDef *)1073764352B].CR1
 4655              	@ main.c:2251: void MAX44009_i2c(void){
 4656 0036 87B0     		sub	sp, sp, #28	@,,
 4657              	@ main.c:2270: 		I2C2->CR1    |= I2C_CR1_PE;											  // I2C2 Pheripherial enable
 4658 0038 4CF0010C 		orr	ip, ip, #1	@ _8, MEM[(struct I2C_TypeDef *)1073764352B].CR1,
 4659 003c A3F800C0 		strh	ip, [r3]	@ movhi	@ _8, MEM[(struct I2C_TypeDef *)1073764352B].CR1
 4660              	@ main.c:2272: 		AFIO->MAPR   |= AFIO_MAPR_I2C1_REMAP;		// Remap TIM3 CH2->PB5
 4661 0040 DFF8D8C1 		ldr	ip, .L393+48	@ tmp212,
 4662              	@ main.c:2301: 		buf[0]=0x02;
 4663 0044 06AE     		add	r6, sp, #24	@ tmp332,,
 4664              	@ main.c:2272: 		AFIO->MAPR   |= AFIO_MAPR_I2C1_REMAP;		// Remap TIM3 CH2->PB5
 4665 0046 DCF80430 		ldr	r3, [ip, #4]	@ _9, MEM[(struct AFIO_TypeDef *)1073807360B].MAPR
 4666 004a 43F00203 		orr	r3, r3, #2	@ _10, _9,
 4667 004e CCF80430 		str	r3, [ip, #4]	@ _10, MEM[(struct AFIO_TypeDef *)1073807360B].MAPR
 4668              	@ main.c:2273: 		GPIOB->CRH    = (GPIOB->CRH & 0xffffff00) | 0x000000dd;	// PB9=SDA (Alternate Open
 4669 0052 7B68     		ldr	r3, [r7, #4]	@ _11, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 4670 0054 23F0FF03 		bic	r3, r3, #255	@ tmp215, _11,
 4671 0058 43F0DD03 		orr	r3, r3, #221	@ _13, tmp215,
 4672 005c 7B60     		str	r3, [r7, #4]	@ _13, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 4673              	@ main.c:2274: 		RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;
 4674 005e D769     		ldr	r7, [r2, #28]	@ _14, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
ARM GAS  /tmp/ccpmJ073.s 			page 83


 4675              	@ main.c:2275: 		I2C1->TRISE   = 37;               		// limit slope
 4676 0060 654B     		ldr	r3, .L393+12	@ tmp219,
 4677              	@ main.c:2274: 		RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;
 4678 0062 47F40017 		orr	r7, r7, #2097152	@ _15, _14,
 4679 0066 D761     		str	r7, [r2, #28]	@ _15, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 4680              	@ main.c:2275: 		I2C1->TRISE   = 37;               		// limit slope
 4681 0068 1D84     		strh	r5, [r3, #32]	@ movhi	@ tmp200, MEM[(struct I2C_TypeDef *)1073763328B].TRISE
 4682              	@ main.c:2276: 		I2C1->CR2     = 0;
 4683 006a 9880     		strh	r0, [r3, #4]	@ movhi	@ tmp203, MEM[(struct I2C_TypeDef *)1073763328B].CR2
 4684              	@ main.c:2277: 		I2C1->CCR     = (F_CPU/(4*400000));   // setup speed (400kHz)
 4685 006c 9983     		strh	r1, [r3, #28]	@ movhi	@ tmp206, MEM[(struct I2C_TypeDef *)1073763328B].CCR
 4686              	@ main.c:2278: 		I2C1->CR1    |= I2C_CR1_PE;						// I2C2 Pheripherial enable
 4687 006e 1988     		ldrh	r1, [r3]	@, MEM[(struct I2C_TypeDef *)1073763328B].CR1
 4688              	@ main.c:2303: 		i2c2_write(MAX44009_ADR,buf,2); // init control Power UP
 4689 0070 0222     		movs	r2, #2	@,
 4690              	@ main.c:2278: 		I2C1->CR1    |= I2C_CR1_PE;						// I2C2 Pheripherial enable
 4691 0072 41F00101 		orr	r1, r1, #1	@ _17, MEM[(struct I2C_TypeDef *)1073763328B].CR1,
 4692 0076 1980     		strh	r1, [r3]	@ movhi	@ _17, MEM[(struct I2C_TypeDef *)1073763328B].CR1
 4693              	@ main.c:2301: 		buf[0]=0x02;
 4694 0078 26F80C4D 		strh	r4, [r6, #-12]!	@ movhi	@ tmp234, MEM[(u08[10] *)&buf]
 4695              	@ main.c:2303: 		i2c2_write(MAX44009_ADR,buf,2); // init control Power UP
 4696 007c 3146     		mov	r1, r6	@, tmp332
 4697 007e 9420     		movs	r0, #148	@,
 4698 0080 FFF7FEFF 		bl	i2c2_write	@
 4699              	@ main.c:2321: 		set_mode( AMBIENT_LIGHT, true );
 4700 0084 0121     		movs	r1, #1	@,
 4701 0086 0846     		mov	r0, r1	@,
 4702 0088 FFF7FEFF 		bl	set_mode	@
 4703              	@ main.c:2324: 		i2c1_read(APDS9960_ADR, APDS9960_ID, buf,1 );
 4704 008c 3246     		mov	r2, r6	@, tmp332
 4705 008e 0123     		movs	r3, #1	@,
 4706 0090 9221     		movs	r1, #146	@,
 4707 0092 7220     		movs	r0, #114	@,
 4708 0094 FFF7FEFF 		bl	i2c1_read	@
 4709              	@ main.c:2325: 		UaPutK("\r\n APDS9960_ID=0x");	
 4710 0098 5848     		ldr	r0, .L393+16	@,
 4711 009a FFF7FEFF 		bl	UaPutK	@
 4712              	@ main.c:2326: 		hex2uart(buf[0],2);
 4713 009e 0221     		movs	r1, #2	@,
 4714 00a0 9DF80C00 		ldrb	r0, [sp, #12]	@ zero_extendqisi2	@, buf
 4715 00a4 FFF7FEFF 		bl	hex2uart	@
 4716              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 4717 00a8 554B     		ldr	r3, .L393+20	@ tmp239,
 4718 00aa 564A     		ldr	r2, .L393+24	@ tmp330,
 4719              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 4720 00ac 1846     		mov	r0, r3	@ tmp242, tmp239
 4721              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 4722 00ae 9B68     		ldr	r3, [r3, #8]	@ _106, MEM[(struct SysTick_Type *)3758153744B].VAL
 4723              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 4724 00b0 5549     		ldr	r1, .L393+28	@ tmp244,
 4725              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 4726 00b2 1360     		str	r3, [r2]	@ _106, delay_us
 4727              	.L387:
 4728              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 4729 00b4 1368     		ldr	r3, [r2]	@ delay_us.116_123, delay_us
 4730 00b6 8468     		ldr	r4, [r0, #8]	@ _124, MEM[(struct SysTick_Type *)3758153744B].VAL
 4731 00b8 1B1B     		subs	r3, r3, r4	@ tmp243, delay_us.116_123, _124
ARM GAS  /tmp/ccpmJ073.s 			page 84


 4732 00ba 8B42     		cmp	r3, r1	@ tmp243, tmp244
 4733 00bc FAD9     		bls	.L387	@,
 4734 00be 534D     		ldr	r5, .L393+32	@ tmp331,
 4735              	@ main.c:2332: 			if(STCLK_MS*100 < (trg0 - SysTick->VAL)){
 4736 00c0 4F4C     		ldr	r4, .L393+20	@ tmp246,
 4737 00c2 534F     		ldr	r7, .L393+36	@ tmp248,
 4738              	@ main.c:2344: 				lux = ((1<<exponent) * mantissa * 45 ) /1000 ;
 4739 00c4 DFF85881 		ldr	r8, .L393+52	@ tmp270,
 4740              	.L388:
 4741              	@ main.c:2332: 			if(STCLK_MS*100 < (trg0 - SysTick->VAL)){
 4742 00c8 2B68     		ldr	r3, [r5]	@ trg0.126_20, trg0
 4743 00ca A268     		ldr	r2, [r4, #8]	@ _21, MEM[(struct SysTick_Type *)3758153744B].VAL
 4744 00cc 9B1A     		subs	r3, r3, r2	@ tmp247, trg0.126_20, _21
 4745 00ce BB42     		cmp	r3, r7	@ tmp247, tmp248
 4746 00d0 FAD9     		bls	.L388	@,
 4747              	@ main.c:2333: 				trg0 = SysTick->VAL;
 4748 00d2 A368     		ldr	r3, [r4, #8]	@ _23, MEM[(struct SysTick_Type *)3758153744B].VAL
 4749              	@ main.c:2335: 				UaPutK("\r\n");	
 4750 00d4 4F48     		ldr	r0, .L393+40	@,
 4751              	@ main.c:2333: 				trg0 = SysTick->VAL;
 4752 00d6 2B60     		str	r3, [r5]	@ _23, trg0
 4753              	@ main.c:2335: 				UaPutK("\r\n");	
 4754 00d8 FFF7FEFF 		bl	UaPutK	@
 4755              	@ main.c:2339: 				i2c2_read(MAX44009_ADR, 0x03, buf,2 );
 4756 00dc 0321     		movs	r1, #3	@,
 4757 00de 3246     		mov	r2, r6	@, tmp332
 4758 00e0 0223     		movs	r3, #2	@,
 4759 00e2 9420     		movs	r0, #148	@,
 4760 00e4 FFF7FEFF 		bl	i2c2_read	@
 4761              	@ main.c:2341: 				exponent = (buf[0] & 0xF0) >> 4;
 4762 00e8 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2	@ _24, buf
 4763              	@ main.c:2342: 				mantissa = ((buf[0] & 0x0F) << 4) | (buf[1] & 0x0F);
 4764 00ec 9DF80D20 		ldrb	r2, [sp, #13]	@ zero_extendqisi2	@ buf, buf
 4765 00f0 1801     		lsls	r0, r3, #4	@ tmp253, _24,
 4766 00f2 02F00F02 		and	r2, r2, #15	@ tmp258, buf,
 4767 00f6 C0B2     		uxtb	r0, r0	@ tmp254, tmp253
 4768              	@ main.c:2341: 				exponent = (buf[0] & 0xF0) >> 4;
 4769 00f8 1B09     		lsrs	r3, r3, #4	@ exponent, _24,
 4770              	@ main.c:2342: 				mantissa = ((buf[0] & 0x0F) << 4) | (buf[1] & 0x0F);
 4771 00fa 1043     		orrs	r0, r0, r2	@, mantissa, tmp254, tmp258
 4772              	@ main.c:2344: 				lux = ((1<<exponent) * mantissa * 45 ) /1000 ;
 4773 00fc 9840     		lsls	r0, r0, r3	@ tmp262, mantissa, exponent
 4774 00fe 00EB4000 		add	r0, r0, r0, lsl #1	@ tmp265, tmp262, tmp262,
 4775 0102 C0EB0010 		rsb	r0, r0, r0, lsl #4	@ tmp267, tmp265, tmp265,
 4776 0106 A8FB0030 		umull	r3, r0, r8, r0	@ tmp336, tmp269, tmp270, tmp267
 4777              	@ main.c:2347: 				sint2uart(lux);
 4778 010a 8009     		lsrs	r0, r0, #6	@, tmp269,
 4779 010c FFF7FEFF 		bl	sint2uart	@
 4780              	@ main.c:2348: 				UaPutK(",");	
 4781 0110 4148     		ldr	r0, .L393+44	@,
 4782 0112 FFF7FEFF 		bl	UaPutK	@
 4783              	@ main.c:2350: 				i2c2_read(TSL2561_ADR, DATA0LOW, buf,2 );
 4784 0116 3246     		mov	r2, r6	@, tmp332
 4785 0118 0223     		movs	r3, #2	@,
 4786 011a 8C21     		movs	r1, #140	@,
 4787 011c 7220     		movs	r0, #114	@,
 4788 011e FFF7FEFF 		bl	i2c2_read	@
ARM GAS  /tmp/ccpmJ073.s 			page 85


 4789              	@ main.c:2351: 				ch0 = (buf[1]<<8)+buf[0];
 4790 0122 9DF80D20 		ldrb	r2, [sp, #13]	@ zero_extendqisi2	@ buf, buf
 4791 0126 9DF80C90 		ldrb	r9, [sp, #12]	@ zero_extendqisi2	@ buf, buf
 4792              	@ main.c:2352: 				i2c2_read(TSL2561_ADR, DATA1LOW, buf,2 );
 4793 012a 0223     		movs	r3, #2	@,
 4794              	@ main.c:2351: 				ch0 = (buf[1]<<8)+buf[0];
 4795 012c 09EB0229 		add	r9, r9, r2, lsl #8	@ tmp284, buf, buf,
 4796              	@ main.c:2352: 				i2c2_read(TSL2561_ADR, DATA1LOW, buf,2 );
 4797 0130 8E21     		movs	r1, #142	@,
 4798 0132 3246     		mov	r2, r6	@, tmp332
 4799 0134 7220     		movs	r0, #114	@,
 4800 0136 FFF7FEFF 		bl	i2c2_read	@
 4801              	@ main.c:2355: 				lux=CalculateLux(1,2,ch0,ch1,0);
 4802 013a 0021     		movs	r1, #0	@ tmp294,
 4803              	@ main.c:2353: 				ch1	= (buf[1]<<8)+buf[0];
 4804 013c 9DF80D00 		ldrb	r0, [sp, #13]	@ zero_extendqisi2	@ buf, buf
 4805 0140 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2	@ buf, buf
 4806              	@ main.c:2351: 				ch0 = (buf[1]<<8)+buf[0];
 4807 0144 1FFA89F9 		uxth	r9, r9	@ ch0, tmp284
 4808              	@ main.c:2353: 				ch1	= (buf[1]<<8)+buf[0];
 4809 0148 03EB0023 		add	r3, r3, r0, lsl #8	@ tmp292, buf, buf,
 4810              	@ main.c:2355: 				lux=CalculateLux(1,2,ch0,ch1,0);
 4811 014c 4A46     		mov	r2, r9	@, ch0
 4812 014e 9BB2     		uxth	r3, r3	@, tmp292
 4813 0150 0091     		str	r1, [sp]	@ tmp294,
 4814 0152 0120     		movs	r0, #1	@,
 4815 0154 0221     		movs	r1, #2	@,
 4816 0156 FFF7FEFF 		bl	CalculateLux	@
 4817              	@ main.c:2356: 				sint2uart(lux);
 4818 015a FFF7FEFF 		bl	sint2uart	@
 4819              	@ main.c:2358: 				UaPutC(',');
 4820 015e 2C20     		movs	r0, #44	@,
 4821 0160 FFF7FEFF 		bl	UaPutC	@
 4822              	@ main.c:2361: 				memset ( buf, 1, 10);
 4823 0164 4FF0013C 		mov	ip, #16843009	@ tmp298,
 4824              	@ main.c:2362: 				i2c1_read(APDS9960_ADR, 0x94, buf,8 );
 4825 0168 3246     		mov	r2, r6	@, tmp332
 4826 016a 0823     		movs	r3, #8	@,
 4827 016c 9421     		movs	r1, #148	@,
 4828 016e 7220     		movs	r0, #114	@,
 4829              	@ main.c:2361: 				memset ( buf, 1, 10);
 4830 0170 C6E900CC 		strd	ip, ip, [r6]	@ tmp298, tmp298, tmp332
 4831 0174 A6F808C0 		strh	ip, [r6, #8]	@ movhi	@ tmp298, MEM[(void *)&buf]
 4832              	@ main.c:2362: 				i2c1_read(APDS9960_ADR, 0x94, buf,8 );
 4833 0178 FFF7FEFF 		bl	i2c1_read	@
 4834              	@ main.c:2363: 				aC = (buf[1]<<8)+buf[0];
 4835 017c 9DF80DC0 		ldrb	ip, [sp, #13]	@ zero_extendqisi2	@ buf, buf
 4836 0180 9DF80C00 		ldrb	r0, [sp, #12]	@ zero_extendqisi2	@ buf, buf
 4837              	@ main.c:2364: 				aR = (buf[3]<<8)+buf[2];
 4838 0184 9DF80F10 		ldrb	r1, [sp, #15]	@ zero_extendqisi2	@ buf, buf
 4839 0188 9DF80EB0 		ldrb	fp, [sp, #14]	@ zero_extendqisi2	@ buf, buf
 4840              	@ main.c:2365: 				aG = (buf[5]<<8)+buf[4];
 4841 018c 9DF81120 		ldrb	r2, [sp, #17]	@ zero_extendqisi2	@ buf, buf
 4842              	@ main.c:2366: 				aB = (buf[7]<<8)+buf[6];
 4843 0190 9DF81330 		ldrb	r3, [sp, #19]	@ zero_extendqisi2	@ buf, buf
 4844              	@ main.c:2363: 				aC = (buf[1]<<8)+buf[0];
 4845 0194 00EB0C20 		add	r0, r0, ip, lsl #8	@ tmp328, buf, buf,
ARM GAS  /tmp/ccpmJ073.s 			page 86


 4846              	@ main.c:2365: 				aG = (buf[5]<<8)+buf[4];
 4847 0198 9DF810A0 		ldrb	r10, [sp, #16]	@ zero_extendqisi2	@ buf, buf
 4848              	@ main.c:2366: 				aB = (buf[7]<<8)+buf[6];
 4849 019c 9DF81290 		ldrb	r9, [sp, #18]	@ zero_extendqisi2	@ buf, buf
 4850              	@ main.c:2364: 				aR = (buf[3]<<8)+buf[2];
 4851 01a0 0BEB012B 		add	fp, fp, r1, lsl #8	@ tmp307, buf, buf,
 4852              	@ main.c:2368: 				sint2uart(aC); UaPutC(','); //hex2uart((buf[1]<<8)+buf[0],4);
 4853 01a4 80B2     		uxth	r0, r0	@, tmp328
 4854              	@ main.c:2365: 				aG = (buf[5]<<8)+buf[4];
 4855 01a6 0AEB022A 		add	r10, r10, r2, lsl #8	@ tmp314, buf, buf,
 4856              	@ main.c:2366: 				aB = (buf[7]<<8)+buf[6];
 4857 01aa 09EB0329 		add	r9, r9, r3, lsl #8	@ tmp321, buf, buf,
 4858              	@ main.c:2364: 				aR = (buf[3]<<8)+buf[2];
 4859 01ae 1FFA8BFB 		uxth	fp, fp	@ aR, tmp307
 4860              	@ main.c:2368: 				sint2uart(aC); UaPutC(','); //hex2uart((buf[1]<<8)+buf[0],4);
 4861 01b2 FFF7FEFF 		bl	sint2uart	@
 4862 01b6 2C20     		movs	r0, #44	@,
 4863 01b8 FFF7FEFF 		bl	UaPutC	@
 4864              	@ main.c:2369: 				sint2uart(aR); UaPutC(','); //hex2uart((buf[3]<<8)+buf[2],4);
 4865 01bc 5846     		mov	r0, fp	@, aR
 4866 01be FFF7FEFF 		bl	sint2uart	@
 4867              	@ main.c:2365: 				aG = (buf[5]<<8)+buf[4];
 4868 01c2 1FFA8AFA 		uxth	r10, r10	@ aG, tmp314
 4869              	@ main.c:2369: 				sint2uart(aR); UaPutC(','); //hex2uart((buf[3]<<8)+buf[2],4);
 4870 01c6 2C20     		movs	r0, #44	@,
 4871 01c8 FFF7FEFF 		bl	UaPutC	@
 4872              	@ main.c:2370: 				sint2uart(aG); UaPutC(','); //hex2uart((buf[5]<<8)+buf[4],4);
 4873 01cc 5046     		mov	r0, r10	@, aG
 4874 01ce FFF7FEFF 		bl	sint2uart	@
 4875              	@ main.c:2366: 				aB = (buf[7]<<8)+buf[6];
 4876 01d2 1FFA89F9 		uxth	r9, r9	@ aB, tmp321
 4877              	@ main.c:2370: 				sint2uart(aG); UaPutC(','); //hex2uart((buf[5]<<8)+buf[4],4);
 4878 01d6 2C20     		movs	r0, #44	@,
 4879 01d8 FFF7FEFF 		bl	UaPutC	@
 4880              	@ main.c:2371: 				sint2uart(aB); UaPutC(',');//hex2uart((buf[7]<<8)+buf[6],4);
 4881 01dc 4846     		mov	r0, r9	@, aB
 4882 01de FFF7FEFF 		bl	sint2uart	@
 4883 01e2 2C20     		movs	r0, #44	@,
 4884 01e4 FFF7FEFF 		bl	UaPutC	@
 4885 01e8 6EE7     		b	.L388	@
 4886              	.L394:
 4887 01ea 00BF     		.align	2
 4888              	.L393:
 4889 01ec 000C0140 		.word	1073810432
 4890 01f0 00100240 		.word	1073876992
 4891 01f4 00580040 		.word	1073764352
 4892 01f8 00540040 		.word	1073763328
 4893 01fc 00000000 		.word	.LC57
 4894 0200 10E000E0 		.word	-536813552
 4895 0204 00000000 		.word	delay_us
 4896 0208 3F771B00 		.word	1799999
 4897 020c 00000000 		.word	trg0
 4898 0210 A0BB0D00 		.word	900000
 4899 0214 48000000 		.word	.LC19
 4900 0218 00000000 		.word	.LC56
 4901 021c 00000140 		.word	1073807360
 4902 0220 D34D6210 		.word	274877907
ARM GAS  /tmp/ccpmJ073.s 			page 87


 4903              		.size	MAX44009_i2c, .-MAX44009_i2c
 4904              		.section	.text.BMP280_i2c,"ax",%progbits
 4905              		.align	1
 4906              		.p2align 2,,3
 4907              		.global	BMP280_i2c
 4908              		.syntax unified
 4909              		.thumb
 4910              		.thumb_func
 4911              		.fpu softvfp
 4912              		.type	BMP280_i2c, %function
 4913              	BMP280_i2c:
 4914              		@ args = 0, pretend = 0, frame = 80
 4915              		@ frame_needed = 0, uses_anonymous_args = 0
 4916 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 4917              	@ main.c:2399: 		I2C2->CCR = (1<<15) | 25;               			// setup speed (800kHz)
 4918 0004 48F2190C 		movw	ip, #32793	@ tmp322,
 4919              	@ main.c:2396: 		I2C2->TRISE = 37;               		// limit slope
 4920 0008 4FF0250E 		mov	lr, #37	@ tmp319,
 4921              	@ main.c:2393: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 4922 000c 0125     		movs	r5, #1	@ tmp312,
 4923              	@ main.c:2395: 		I2C2_CR1_SWRST_bb = 0;
 4924 000e 4FF00008 		mov	r8, #0	@ tmp316,
 4925              	@ main.c:2400: 		I2C2->CR2 = I2C_CR2_FREQ_36MHz;     // config I2C2 module
 4926 0012 2427     		movs	r7, #36	@ tmp325,
 4927              	@ main.c:2391: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000bf00;	// ...009d00 PB10=SCL(Push-pu
 4928 0014 C74A     		ldr	r2, .L404	@ tmp308,
 4929              	@ main.c:2396: 		I2C2->TRISE = 37;               		// limit slope
 4930 0016 C84C     		ldr	r4, .L404+4	@ tmp317,
 4931              	@ main.c:2391: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000bf00;	// ...009d00 PB10=SCL(Push-pu
 4932 0018 5368     		ldr	r3, [r2, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 4933              	@ main.c:2394: 		I2C2_CR1_SWRST_bb = 1;            	// force software reset of I2C peripheral
 4934 001a C848     		ldr	r0, .L404+8	@ tmp313,
 4935              	@ main.c:2393: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 4936 001c C849     		ldr	r1, .L404+12	@ tmp311,
 4937              	@ main.c:2401: 		I2C2_CR1_PE_bb = 1;               	// enable peripheral
 4938 001e C94E     		ldr	r6, .L404+16	@ tmp326,
 4939              	@ main.c:2391: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000bf00;	// ...009d00 PB10=SCL(Push-pu
 4940 0020 23F47F43 		bic	r3, r3, #65280	@ tmp309, _1,
 4941              	@ main.c:2384: void BMP280_i2c(void){
 4942 0024 95B0     		sub	sp, sp, #84	@,,
 4943              	@ main.c:2391: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000bf00;	// ...009d00 PB10=SCL(Push-pu
 4944 0026 43F43F43 		orr	r3, r3, #48896	@ _3, tmp309,
 4945 002a 5360     		str	r3, [r2, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 4946              	@ main.c:2393: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 4947 002c 0D60     		str	r5, [r1]	@ tmp312, MEM[(volatile long unsigned int *)1111622616B]
 4948              	@ main.c:2403: 		i2c2_read(BMP280_ADR,  0xD0, buf,1 );
 4949 002e 2B46     		mov	r3, r5	@, tmp312
 4950              	@ main.c:2394: 		I2C2_CR1_SWRST_bb = 1;            	// force software reset of I2C peripheral
 4951 0030 0560     		str	r5, [r0]	@ tmp312, MEM[(volatile long unsigned int *)1108017212B]
 4952              	@ main.c:2403: 		i2c2_read(BMP280_ADR,  0xD0, buf,1 );
 4953 0032 0EAA     		add	r2, sp, #56	@ tmp503,,
 4954              	@ main.c:2395: 		I2C2_CR1_SWRST_bb = 0;
 4955 0034 C0F80080 		str	r8, [r0]	@ tmp316, MEM[(volatile long unsigned int *)1108017212B]
 4956              	@ main.c:2403: 		i2c2_read(BMP280_ADR,  0xD0, buf,1 );
 4957 0038 D021     		movs	r1, #208	@,
 4958              	@ main.c:2396: 		I2C2->TRISE = 37;               		// limit slope
 4959 003a A4F820E0 		strh	lr, [r4, #32]	@ movhi	@ tmp319, MEM[(struct I2C_TypeDef *)1073764352B].TRISE
ARM GAS  /tmp/ccpmJ073.s 			page 88


 4960              	@ main.c:2403: 		i2c2_read(BMP280_ADR,  0xD0, buf,1 );
 4961 003e EC20     		movs	r0, #236	@,
 4962              	@ main.c:2399: 		I2C2->CCR = (1<<15) | 25;               			// setup speed (800kHz)
 4963 0040 A4F81CC0 		strh	ip, [r4, #28]	@ movhi	@ tmp322, MEM[(struct I2C_TypeDef *)1073764352B].CCR
 4964              	@ main.c:2400: 		I2C2->CR2 = I2C_CR2_FREQ_36MHz;     // config I2C2 module
 4965 0044 A780     		strh	r7, [r4, #4]	@ movhi	@ tmp325, MEM[(struct I2C_TypeDef *)1073764352B].CR2
 4966              	@ main.c:2401: 		I2C2_CR1_PE_bb = 1;               	// enable peripheral
 4967 0046 3560     		str	r5, [r6]	@ tmp312, MEM[(volatile long unsigned int *)1108017152B]
 4968              	@ main.c:2403: 		i2c2_read(BMP280_ADR,  0xD0, buf,1 );
 4969 0048 FFF7FEFF 		bl	i2c2_read	@
 4970              	@ main.c:2404: 		UaPutK("\r\n i2c_BMP280 = 0x");	
 4971 004c BE48     		ldr	r0, .L404+20	@,
 4972 004e FFF7FEFF 		bl	UaPutK	@
 4973              	@ main.c:2405: 		hex2uart(buf[0],2);
 4974 0052 0221     		movs	r1, #2	@,
 4975 0054 9DF83800 		ldrb	r0, [sp, #56]	@ zero_extendqisi2	@, buf
 4976 0058 FFF7FEFF 		bl	hex2uart	@
 4977              	@ main.c:2408: 		buf[0]=0xf4;
 4978 005c 4BF2F473 		movw	r3, #47092	@ tmp332,
 4979              	@ main.c:2410: 		i2c2_write(BMP280_ADR,buf,2); // set mode
 4980 0060 0EA9     		add	r1, sp, #56	@ tmp504,,
 4981 0062 0222     		movs	r2, #2	@,
 4982 0064 EC20     		movs	r0, #236	@,
 4983              	@ main.c:2408: 		buf[0]=0xf4;
 4984 0066 ADF83830 		strh	r3, [sp, #56]	@ movhi	@ tmp332, MEM[(u08[24] *)&buf]
 4985              	@ main.c:2410: 		i2c2_write(BMP280_ADR,buf,2); // set mode
 4986 006a FFF7FEFF 		bl	i2c2_write	@
 4987              	@ main.c:2412: 		buf[0]=0xf5;
 4988 006e 41F2F503 		movw	r3, #4341	@ tmp335,
 4989              	@ main.c:2414: 		i2c2_write(BMP280_ADR,buf,2); // set mode
 4990 0072 0EA9     		add	r1, sp, #56	@ tmp505,,
 4991 0074 0222     		movs	r2, #2	@,
 4992 0076 EC20     		movs	r0, #236	@,
 4993              	@ main.c:2412: 		buf[0]=0xf5;
 4994 0078 ADF83830 		strh	r3, [sp, #56]	@ movhi	@ tmp335, MEM[(u08[24] *)&buf]
 4995              	@ main.c:2414: 		i2c2_write(BMP280_ADR,buf,2); // set mode
 4996 007c FFF7FEFF 		bl	i2c2_write	@
 4997              	@ main.c:2416: 		i2c2_read(BMP280_ADR,  0x88, buf,6+16 );
 4998 0080 0EAA     		add	r2, sp, #56	@ tmp506,,
 4999 0082 1623     		movs	r3, #22	@,
 5000 0084 8821     		movs	r1, #136	@,
 5001 0086 EC20     		movs	r0, #236	@,
 5002 0088 FFF7FEFF 		bl	i2c2_read	@
 5003              	@ main.c:2419: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5004 008c 9DF83D20 		ldrb	r2, [sp, #61]	@ zero_extendqisi2	@ buf, buf
 5005              	@ main.c:2422: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5006 0090 9DF84110 		ldrb	r1, [sp, #65]	@ zero_extendqisi2	@ buf, buf
 5007              	@ main.c:2419: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5008 0094 0692     		str	r2, [sp, #24]	@ buf, %sfp
 5009              	@ main.c:2429: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5010 0096 9DF84F20 		ldrb	r2, [sp, #79]	@ zero_extendqisi2	@ buf, buf
 5011              	@ main.c:2419: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5012 009a 9DF83CA0 		ldrb	r10, [sp, #60]	@ zero_extendqisi2	@ buf, buf
 5013              	@ main.c:2429: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5014 009e 0592     		str	r2, [sp, #20]	@ buf, %sfp
 5015              	@ main.c:2419: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5016 00a0 069A     		ldr	r2, [sp, #24]	@ buf, %sfp
ARM GAS  /tmp/ccpmJ073.s 			page 89


 5017              	@ main.c:2422: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5018 00a2 0091     		str	r1, [sp]	@ buf, %sfp
 5019              	@ main.c:2423: 		dig_P3 = (s16)((buf[11]<<8) | buf[10]);
 5020 00a4 9DF84300 		ldrb	r0, [sp, #67]	@ zero_extendqisi2	@ buf, buf
 5021              	@ main.c:2419: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5022 00a8 4AEA022A 		orr	r10, r10, r2, lsl #8	@ tmp349, buf, buf,
 5023              	@ main.c:2422: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5024 00ac 9DF84090 		ldrb	r9, [sp, #64]	@ zero_extendqisi2	@ buf, buf
 5025 00b0 009A     		ldr	r2, [sp]	@ buf, %sfp
 5026              	@ main.c:2423: 		dig_P3 = (s16)((buf[11]<<8) | buf[10]);
 5027 00b2 0190     		str	r0, [sp, #4]	@ buf, %sfp
 5028              	@ main.c:2425: 		dig_P5 = (s16)((buf[15]<<8) | buf[14]);
 5029 00b4 9DF84760 		ldrb	r6, [sp, #71]	@ zero_extendqisi2	@ buf, buf
 5030              	@ main.c:2422: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5031 00b8 49EA0229 		orr	r9, r9, r2, lsl #8	@ tmp355, buf, buf,
 5032              	@ main.c:2423: 		dig_P3 = (s16)((buf[11]<<8) | buf[10]);
 5033 00bc 9DF84280 		ldrb	r8, [sp, #66]	@ zero_extendqisi2	@ buf, buf
 5034 00c0 019A     		ldr	r2, [sp, #4]	@ buf, %sfp
 5035              	@ main.c:2425: 		dig_P5 = (s16)((buf[15]<<8) | buf[14]);
 5036 00c2 0296     		str	r6, [sp, #8]	@ buf, %sfp
 5037              	@ main.c:2426: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5038 00c4 9DF84970 		ldrb	r7, [sp, #73]	@ zero_extendqisi2	@ buf, buf
 5039              	@ main.c:2427: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5040 00c8 9DF84B10 		ldrb	r1, [sp, #75]	@ zero_extendqisi2	@ buf, buf
 5041              	@ main.c:2418: 		dig_T2 = (s16)((buf[3]<<8) | buf[2]);
 5042 00cc 9DF83B30 		ldrb	r3, [sp, #59]	@ zero_extendqisi2	@ buf, buf
 5043              	@ main.c:2423: 		dig_P3 = (s16)((buf[11]<<8) | buf[10]);
 5044 00d0 48EA0228 		orr	r8, r8, r2, lsl #8	@ tmp361, buf, buf,
 5045              	@ main.c:2418: 		dig_T2 = (s16)((buf[3]<<8) | buf[2]);
 5046 00d4 9DF83AB0 		ldrb	fp, [sp, #58]	@ zero_extendqisi2	@ buf, buf
 5047              	@ main.c:2425: 		dig_P5 = (s16)((buf[15]<<8) | buf[14]);
 5048 00d8 029A     		ldr	r2, [sp, #8]	@ buf, %sfp
 5049 00da 9DF846E0 		ldrb	lr, [sp, #70]	@ zero_extendqisi2	@ buf, buf
 5050              	@ main.c:2426: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5051 00de 0397     		str	r7, [sp, #12]	@ buf, %sfp
 5052              	@ main.c:2428: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5053 00e0 9DF84C60 		ldrb	r6, [sp, #76]	@ zero_extendqisi2	@ buf, buf
 5054              	@ main.c:2427: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5055 00e4 0491     		str	r1, [sp, #16]	@ buf, %sfp
 5056              	@ main.c:2428: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5057 00e6 9DF84D10 		ldrb	r1, [sp, #77]	@ zero_extendqisi2	@ buf, buf
 5058              	@ main.c:2425: 		dig_P5 = (s16)((buf[15]<<8) | buf[14]);
 5059 00ea 4EEA022E 		orr	lr, lr, r2, lsl #8	@ tmp373, buf, buf,
 5060              	@ main.c:2418: 		dig_T2 = (s16)((buf[3]<<8) | buf[2]);
 5061 00ee 4BEA032B 		orr	fp, fp, r3, lsl #8	@ tmp343, buf, buf,
 5062              	@ main.c:2426: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5063 00f2 9DF848C0 		ldrb	ip, [sp, #72]	@ zero_extendqisi2	@ buf, buf
 5064 00f6 039A     		ldr	r2, [sp, #12]	@ buf, %sfp
 5065              	@ main.c:2428: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5066 00f8 46EA0121 		orr	r1, r6, r1, lsl #8	@ tmp391, buf, buf,
 5067              	@ main.c:2418: 		dig_T2 = (s16)((buf[3]<<8) | buf[2]);
 5068 00fc 0FFA8BF6 		sxth	r6, fp	@ dig_T2, tmp343
 5069              	@ main.c:2426: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5070 0100 4CEA022C 		orr	ip, ip, r2, lsl #8	@ tmp379, buf, buf,
 5071              	@ main.c:2424: 		dig_P4 = (s16)((buf[13]<<8) | buf[12]);
 5072 0104 9DF84500 		ldrb	r0, [sp, #69]	@ zero_extendqisi2	@ buf, buf
 5073 0108 9DF84440 		ldrb	r4, [sp, #68]	@ zero_extendqisi2	@ buf, buf
ARM GAS  /tmp/ccpmJ073.s 			page 90


 5074              	@ main.c:2427: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5075 010c 9DF84A70 		ldrb	r7, [sp, #74]	@ zero_extendqisi2	@ buf, buf
 5076              	@ main.c:2429: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5077 0110 9DF84E30 		ldrb	r3, [sp, #78]	@ zero_extendqisi2	@ buf, buf
 5078              	@ main.c:2427: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5079 0114 049A     		ldr	r2, [sp, #16]	@ buf, %sfp
 5080              	@ main.c:2418: 		dig_T2 = (s16)((buf[3]<<8) | buf[2]);
 5081 0116 0296     		str	r6, [sp, #8]	@ dig_T2, %sfp
 5082              	@ main.c:2419: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5083 0118 0FFA8AF6 		sxth	r6, r10	@ dig_T3, tmp349
 5084 011c 0396     		str	r6, [sp, #12]	@ dig_T3, %sfp
 5085              	@ main.c:2422: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5086 011e 0FFA89F6 		sxth	r6, r9	@ dig_P2, tmp355
 5087              	@ main.c:2427: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5088 0122 47EA0227 		orr	r7, r7, r2, lsl #8	@ tmp385, buf, buf,
 5089              	@ main.c:2429: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5090 0126 059A     		ldr	r2, [sp, #20]	@ buf, %sfp
 5091              	@ main.c:2422: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5092 0128 0596     		str	r6, [sp, #20]	@ dig_P2, %sfp
 5093              	@ main.c:2423: 		dig_P3 = (s16)((buf[11]<<8) | buf[10]);
 5094 012a 0FFA88F6 		sxth	r6, r8	@ dig_P3, tmp361
 5095 012e 0696     		str	r6, [sp, #24]	@ dig_P3, %sfp
 5096              	@ main.c:2425: 		dig_P5 = (s16)((buf[15]<<8) | buf[14]);
 5097 0130 0FFA8EF6 		sxth	r6, lr	@ dig_P5, tmp373
 5098 0134 0796     		str	r6, [sp, #28]	@ dig_P5, %sfp
 5099              	@ main.c:2426: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5100 0136 0FFA8CF6 		sxth	r6, ip	@ dig_P6, tmp379
 5101              	@ main.c:2428: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5102 013a 0091     		str	r1, [sp]	@ tmp391, %sfp
 5103              	@ main.c:2426: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5104 013c 0896     		str	r6, [sp, #32]	@ dig_P6, %sfp
 5105              	@ main.c:2427: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5106 013e 3EB2     		sxth	r6, r7	@ dig_P7, tmp385
 5107              	@ main.c:2429: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5108 0140 43EA0223 		orr	r3, r3, r2, lsl #8	@ tmp397, buf, buf,
 5109              	@ main.c:2427: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5110 0144 0996     		str	r6, [sp, #36]	@ dig_P7, %sfp
 5111              	@ main.c:2428: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5112 0146 BDF90060 		ldrsh	r6, [sp]	@ dig_P8, %sfp
 5113              	@ main.c:2429: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5114 014a 0193     		str	r3, [sp, #4]	@ tmp397, %sfp
 5115              	@ main.c:2428: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5116 014c 0A96     		str	r6, [sp, #40]	@ dig_P8, %sfp
 5117              	@ main.c:2429: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5118 014e BDF90460 		ldrsh	r6, [sp, #4]	@ dig_P9, %sfp
 5119              	@ main.c:2431: 		i2c2_read(BMP280_ADR,  0xf4, buf,1 ); hex2uart(buf[0],2);
 5120 0152 2B46     		mov	r3, r5	@, tmp312
 5121              	@ main.c:2429: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5122 0154 0B96     		str	r6, [sp, #44]	@ dig_P9, %sfp
 5123              	@ main.c:2421: 		dig_P1 = (u16)(((u16)(buf[7]<<8)) | buf[6]);
 5124 0156 BDF83E60 		ldrh	r6, [sp, #62]	@ dig_P1, MEM[(u08[24] *)&buf + 6B]
 5125              	@ main.c:2431: 		i2c2_read(BMP280_ADR,  0xf4, buf,1 ); hex2uart(buf[0],2);
 5126 015a 0EAA     		add	r2, sp, #56	@ tmp533,,
 5127              	@ main.c:2424: 		dig_P4 = (s16)((buf[13]<<8) | buf[12]);
 5128 015c 44EA0024 		orr	r4, r4, r0, lsl #8	@ tmp367, buf, buf,
 5129              	@ main.c:2431: 		i2c2_read(BMP280_ADR,  0xf4, buf,1 ); hex2uart(buf[0],2);
 5130 0160 F421     		movs	r1, #244	@,
ARM GAS  /tmp/ccpmJ073.s 			page 91


 5131 0162 EC20     		movs	r0, #236	@,
 5132              	@ main.c:2417: 		dig_T1 = (u16)(((u16)(buf[1]<<8)) | buf[0]);
 5133 0164 BDF838A0 		ldrh	r10, [sp, #56]	@ dig_T1, MEM[(u08[24] *)&buf]
 5134              	@ main.c:2421: 		dig_P1 = (u16)(((u16)(buf[7]<<8)) | buf[6]);
 5135 0168 0496     		str	r6, [sp, #16]	@ dig_P1, %sfp
 5136              	@ main.c:2431: 		i2c2_read(BMP280_ADR,  0xf4, buf,1 ); hex2uart(buf[0],2);
 5137 016a FFF7FEFF 		bl	i2c2_read	@
 5138 016e 0221     		movs	r1, #2	@,
 5139 0170 9DF83800 		ldrb	r0, [sp, #56]	@ zero_extendqisi2	@, buf
 5140 0174 FFF7FEFF 		bl	hex2uart	@
 5141              	@ main.c:2432: 		i2c2_read(BMP280_ADR,  0xf5, buf,1 ); hex2uart(buf[0],2);
 5142 0178 2B46     		mov	r3, r5	@, tmp312
 5143 017a 0EAA     		add	r2, sp, #56	@ tmp554,,
 5144 017c F521     		movs	r1, #245	@,
 5145 017e EC20     		movs	r0, #236	@,
 5146 0180 FFF7FEFF 		bl	i2c2_read	@
 5147              	@ main.c:2424: 		dig_P4 = (s16)((buf[13]<<8) | buf[12]);
 5148 0184 24B2     		sxth	r4, r4	@ dig_P4, tmp367
 5149              	@ main.c:2432: 		i2c2_read(BMP280_ADR,  0xf5, buf,1 ); hex2uart(buf[0],2);
 5150 0186 0221     		movs	r1, #2	@,
 5151 0188 9DF83800 		ldrb	r0, [sp, #56]	@ zero_extendqisi2	@, buf
 5152 018c FFF7FEFF 		bl	hex2uart	@
 5153              	@ main.c:2484: 				var2 = (var2>>2)+(((s32)dig_P4)<<16); 
 5154 0190 2304     		lsls	r3, r4, #16	@ _139, dig_P4,
 5155 0192 0193     		str	r3, [sp, #4]	@ _139, %sfp
 5156 0194 DFF8DC81 		ldr	r8, .L404+64	@ tmp494,
 5157              	@ main.c:2458: 				var1 = ((((adc_T>>3)  - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5158 0198 0AFA05F3 		lsl	r3, r10, r5	@ _99, dig_T1,
 5159 019c 6B4F     		ldr	r7, .L404+24	@ tmp496,
 5160              	@ main.c:2443: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL)){
 5161 019e DFF8D891 		ldr	r9, .L404+68	@ tmp405,
 5162              	@ main.c:2510: 			if( STCLK_MS*1000 < (trg1 - SysTick->VAL)){
 5163 01a2 DFF8D8B1 		ldr	fp, .L404+72	@ tmp498,
 5164              	@ main.c:2443: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL)){
 5165 01a6 6A4E     		ldr	r6, .L404+28	@ tmp403,
 5166              	@ main.c:2458: 				var1 = ((((adc_T>>3)  - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5167 01a8 0093     		str	r3, [sp]	@ _99, %sfp
 5168              	.L400:
 5169              	@ main.c:2443: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL)){
 5170 01aa D8F80030 		ldr	r3, [r8]	@ trg0.129_80, trg0
 5171 01ae B268     		ldr	r2, [r6, #8]	@ _81, MEM[(struct SysTick_Type *)3758153744B].VAL
 5172 01b0 9B1A     		subs	r3, r3, r2	@ tmp404, trg0.129_80, _81
 5173 01b2 4B45     		cmp	r3, r9	@ tmp404, tmp405
 5174 01b4 40F2B080 		bls	.L396	@,
 5175              	@ main.c:2444: 				trg0 = SysTick->VAL;
 5176 01b8 B368     		ldr	r3, [r6, #8]	@ _83, MEM[(struct SysTick_Type *)3758153744B].VAL
 5177              	@ main.c:2446: 				UaPutK("\r\n BMP280 ");	
 5178 01ba 6648     		ldr	r0, .L404+32	@,
 5179              	@ main.c:2444: 				trg0 = SysTick->VAL;
 5180 01bc C8F80030 		str	r3, [r8]	@ _83, trg0
 5181              	@ main.c:2446: 				UaPutK("\r\n BMP280 ");	
 5182 01c0 FFF7FEFF 		bl	UaPutK	@
 5183              	@ main.c:2453: 				i2c2_read(BMP280_ADR,  0xFA, buf,3 );
 5184 01c4 0323     		movs	r3, #3	@,
 5185 01c6 0EAA     		add	r2, sp, #56	@ tmp558,,
 5186 01c8 FA21     		movs	r1, #250	@,
 5187 01ca EC20     		movs	r0, #236	@,
ARM GAS  /tmp/ccpmJ073.s 			page 92


 5188 01cc FFF7FEFF 		bl	i2c2_read	@
 5189              	@ main.c:2457: 				adc_T = ( (u32)((u16)((buf[0]) << 8) | buf[1] ) << 4) | ( (buf[2]) >> 4);
 5190 01d0 BDF83830 		ldrh	r3, [sp, #56]	@, MEM[(u08[24] *)&buf]
 5191 01d4 9DF83A20 		ldrb	r2, [sp, #58]	@ zero_extendqisi2	@ buf, buf
 5192 01d8 5BBA     		rev16	r3, r3	@ tmp412, MEM[(u08[24] *)&buf]
 5193 01da 9BB2     		uxth	r3, r3	@ tmp414, tmp412
 5194 01dc 1209     		lsrs	r2, r2, #4	@ tmp418, buf,
 5195 01de 42EA0312 		orr	r2, r2, r3, lsl #4	@ adc_T, tmp418, tmp414,
 5196              	@ main.c:2459:         var2 = (((((adc_T>>4) - ((s32)dig_T1)) * ((adc_T>>4) - ((s32)dig_T1))) >> 12
 5197 01e2 CAEB1213 		rsb	r3, r10, r2, lsr #4	@ _105, dig_T1, adc_T,
 5198 01e6 03FB03F3 		mul	r3, r3, r3	@ tmp424, _105, _105
 5199              	@ main.c:2460: 				* ((s32)dig_T3))>>14;
 5200 01ea 0398     		ldr	r0, [sp, #12]	@ dig_T3, %sfp
 5201              	@ main.c:2459:         var2 = (((((adc_T>>4) - ((s32)dig_T1)) * ((adc_T>>4) - ((s32)dig_T1))) >> 12
 5202 01ec 1B0B     		lsrs	r3, r3, #12	@ tmp425, tmp424,
 5203              	@ main.c:2460: 				* ((s32)dig_T3))>>14;
 5204 01ee 00FB03F3 		mul	r3, r0, r3	@ tmp426, dig_T3, tmp425
 5205              	@ main.c:2458: 				var1 = ((((adc_T>>3)  - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5206 01f2 0098     		ldr	r0, [sp]	@ _99, %sfp
 5207              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5208 01f4 B168     		ldr	r1, [r6, #8]	@ _259, MEM[(struct SysTick_Type *)3758153744B].VAL
 5209              	@ main.c:2458: 				var1 = ((((adc_T>>3)  - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5210 01f6 C0EBD202 		rsb	r2, r0, r2, lsr #3	@ tmp421, _99, adc_T,
 5211 01fa 0298     		ldr	r0, [sp, #8]	@ dig_T2, %sfp
 5212              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5213 01fc 3960     		str	r1, [r7]	@ _259, Timt
 5214              	@ main.c:2458: 				var1 = ((((adc_T>>3)  - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5215 01fe 00FB02F2 		mul	r2, r0, r2	@ tmp422, dig_T2, tmp421
 5216              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5217 0202 3D68     		ldr	r5, [r7]	@ Timt.47_256, Timt
 5218 0204 B168     		ldr	r1, [r6, #8]	@ _257, MEM[(struct SysTick_Type *)3758153744B].VAL
 5219              	@ main.c:2459:         var2 = (((((adc_T>>4) - ((s32)dig_T1)) * ((adc_T>>4) - ((s32)dig_T1))) >> 12
 5220 0206 9B0B     		lsrs	r3, r3, #14	@ var2, tmp426,
 5221              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5222 0208 6D1A     		subs	r5, r5, r1	@ _258, Timt.47_256, _257
 5223              	@ main.c:2469: 				UaPutS("tt="); sint2uart(tim);
 5224 020a 5348     		ldr	r0, .L404+36	@,
 5225              	@ main.c:2462:         t_fine = var1 + var2;
 5226 020c 03EBD224 		add	r4, r3, r2, lsr #11	@ t_fine, var2, tmp422,
 5227              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5228 0210 0D95     		str	r5, [sp, #52]	@ _258, MEM[(volatile u32 *)&tim]
 5229              	@ main.c:2469: 				UaPutS("tt="); sint2uart(tim);
 5230 0212 FFF7FEFF 		bl	UaPutS	@
 5231 0216 2846     		mov	r0, r5	@, _258
 5232 0218 FFF7FEFF 		bl	sint2uart	@
 5233              	@ main.c:2472: 				UaPutK(" T=");	
 5234 021c 4F48     		ldr	r0, .L404+40	@,
 5235 021e FFF7FEFF 		bl	UaPutK	@
 5236              	@ main.c:2465: 				T     = (t_fine * 50 + 1280) >> 8; // resolution 0.001 C
 5237 0222 3220     		movs	r0, #50	@ tmp433,
 5238 0224 00FB04F0 		mul	r0, r0, r4	@ tmp432, tmp433, t_fine
 5239 0228 00F5A060 		add	r0, r0, #1280	@ tmp434, tmp432,
 5240              	@ main.c:2473: 				num2uart(T,5,3);
 5241 022c 000A     		lsrs	r0, r0, #8	@, tmp434,
 5242 022e 0322     		movs	r2, #3	@,
 5243 0230 0521     		movs	r1, #5	@,
 5244 0232 FFF7FEFF 		bl	num2uart	@
ARM GAS  /tmp/ccpmJ073.s 			page 93


 5245              	@ main.c:2477: 				i2c2_read(BMP280_ADR,  0xF7, buf,3 );				
 5246 0236 0323     		movs	r3, #3	@,
 5247 0238 0EAA     		add	r2, sp, #56	@ tmp563,,
 5248 023a F721     		movs	r1, #247	@,
 5249 023c EC20     		movs	r0, #236	@,
 5250 023e FFF7FEFF 		bl	i2c2_read	@
 5251              	@ main.c:2481: 				var1 = (((s32)t_fine)>>1) - 64000UL; 
 5252 0242 6210     		asrs	r2, r4, #1	@ tmp446, t_fine,
 5253 0244 A2F57A42 		sub	r2, r2, #64000	@ var1, tmp446,
 5254              	@ main.c:2482: 				var2 = (((var1>>2) * (var1>>2)) >> 11 ) * ((s32)dig_P6); 
 5255 0248 9308     		lsrs	r3, r2, #2	@ _129, var1,
 5256 024a 03FB03F3 		mul	r3, r3, r3	@ _130, _129, _129
 5257              	@ main.c:2485: 				var1 = (((dig_P3 * (((var1>>2) * (var1>>2)) >> 13 )) >> 3) + ((((s32)dig_P2) * v
 5258 024e 0599     		ldr	r1, [sp, #20]	@ dig_P2, %sfp
 5259 0250 069C     		ldr	r4, [sp, #24]	@ dig_P3, %sfp
 5260 0252 01FB02F0 		mul	r0, r1, r2	@ tmp454, dig_P2, var1
 5261 0256 590B     		lsrs	r1, r3, #13	@ tmp451, _130,
 5262 0258 04FB01F1 		mul	r1, r4, r1	@ tmp452, dig_P3, tmp451
 5263              	@ main.c:2483: 				var2 = var2 + ((var1*((s32)dig_P5))<<1); 
 5264 025c 079C     		ldr	r4, [sp, #28]	@ dig_P5, %sfp
 5265              	@ main.c:2485: 				var1 = (((dig_P3 * (((var1>>2) * (var1>>2)) >> 13 )) >> 3) + ((((s32)dig_P2) * v
 5266 025e 4008     		lsrs	r0, r0, #1	@ tmp455, tmp454,
 5267              	@ main.c:2483: 				var2 = var2 + ((var1*((s32)dig_P5))<<1); 
 5268 0260 04FB02F2 		mul	r2, r4, r2	@ tmp448, dig_P5, var1
 5269              	@ main.c:2485: 				var1 = (((dig_P3 * (((var1>>2) * (var1>>2)) >> 13 )) >> 3) + ((((s32)dig_P2) * v
 5270 0264 00EBD100 		add	r0, r0, r1, lsr #3	@ _147, tmp455, tmp452,
 5271 0268 800C     		lsrs	r0, r0, #18	@ var1, _147,
 5272              	@ main.c:2486: 				var1 =((((32768+var1))*((s32)dig_P1))>>15); 
 5273 026a 0499     		ldr	r1, [sp, #16]	@ dig_P1, %sfp
 5274 026c 00F50040 		add	r0, r0, #32768	@ tmp457, var1,
 5275 0270 01FB00F0 		mul	r0, r1, r0	@ _150, dig_P1, tmp457
 5276              	@ main.c:2483: 				var2 = var2 + ((var1*((s32)dig_P5))<<1); 
 5277 0274 0899     		ldr	r1, [sp, #32]	@ dig_P6, %sfp
 5278 0276 5200     		lsls	r2, r2, #1	@ tmp449, tmp448,
 5279              	@ main.c:2482: 				var2 = (((var1>>2) * (var1>>2)) >> 11 ) * ((s32)dig_P6); 
 5280 0278 DB0A     		lsrs	r3, r3, #11	@ tmp447, _130,
 5281              	@ main.c:2483: 				var2 = var2 + ((var1*((s32)dig_P5))<<1); 
 5282 027a 01FB0323 		mla	r3, r1, r3, r2	@ var2, dig_P6, tmp447, tmp449
 5283              	@ main.c:2478: 				adc_P   = ((u32)((u16)(buf[0] << 8) | buf[1])<<4) | (buf[2]>>4);
 5284 027e BDF83810 		ldrh	r1, [sp, #56]	@, MEM[(u08[24] *)&buf]
 5285 0282 9DF83A20 		ldrb	r2, [sp, #58]	@ zero_extendqisi2	@ buf, buf
 5286 0286 49BA     		rev16	r1, r1	@ tmp437, MEM[(u08[24] *)&buf]
 5287 0288 89B2     		uxth	r1, r1	@ tmp439, tmp437
 5288              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5289 028a B468     		ldr	r4, [r6, #8]	@ _255, MEM[(struct SysTick_Type *)3758153744B].VAL
 5290              	@ main.c:2478: 				adc_P   = ((u32)((u16)(buf[0] << 8) | buf[1])<<4) | (buf[2]>>4);
 5291 028c 1209     		lsrs	r2, r2, #4	@ tmp443, buf,
 5292              	@ main.c:2484: 				var2 = (var2>>2)+(((s32)dig_P4)<<16); 
 5293 028e 019D     		ldr	r5, [sp, #4]	@ _139, %sfp
 5294              	@ main.c:2478: 				adc_P   = ((u32)((u16)(buf[0] << 8) | buf[1])<<4) | (buf[2]>>4);
 5295 0290 42EA0112 		orr	r2, r2, r1, lsl #4	@ adc_P, tmp443, tmp439,
 5296              	@ main.c:2487: 				if (var1 == 0) 
 5297 0294 C10B     		lsrs	r1, r0, #15	@ var1, _150,
 5298              	@ main.c:2484: 				var2 = (var2>>2)+(((s32)dig_P4)<<16); 
 5299 0296 05EB9303 		add	r3, r5, r3, lsr #2	@ var2, _139, var2,
 5300              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5301 029a 3C60     		str	r4, [r7]	@ _255, Timt
ARM GAS  /tmp/ccpmJ073.s 			page 94


 5302              	@ main.c:2487: 				if (var1 == 0) 
 5303 029c 46D0     		beq	.L395	@,
 5304              	@ main.c:2492: 					p = (((u32)(((s32)1048576)-adc_P)-(var2>>12)))*3125; 
 5305 029e 3048     		ldr	r0, .L404+44	@ tmp461,
 5306 02a0 02EB1333 		add	r3, r2, r3, lsr #12	@ tmp459, adc_P, var2,
 5307 02a4 00FB03F0 		mul	r0, r0, r3	@ tmp460, tmp461, tmp459
 5308 02a8 00F14340 		add	r0, r0, #-1023410176	@ p, tmp460,
 5309 02ac 00F5A000 		add	r0, r0, #5242880	@ p, p,
 5310              	@ main.c:2493: 					if (p < 0x80000000) { p = (p << 1) / ((u32)var1); 	}  
 5311 02b0 0028     		cmp	r0, #0	@ p,
 5312              	@ main.c:2494: 					else  							{ p = (p 			 /  (u32)var1)*2; } 
 5313 02b2 B3BF     		iteet	lt
 5314 02b4 B0FBF1F0 		udivlt	r0, r0, r1	@ _157, p, var1
 5315              	@ main.c:2493: 					if (p < 0x80000000) { p = (p << 1) / ((u32)var1); 	}  
 5316 02b8 4000     		lslge	r0, r0, #1	@ _156, p,
 5317 02ba B0FBF1F0 		udivge	r0, r0, r1	@ p, _156, var1
 5318              	@ main.c:2494: 					else  							{ p = (p 			 /  (u32)var1)*2; } 
 5319 02be 4000     		lsllt	r0, r0, #1	@ p, _157,
 5320              	@ main.c:2495: 					var1 = (((s32)dig_P9) * ((s32)(((p>>3) * (p>>3))>>13)))>>12; 
 5321 02c0 C308     		lsrs	r3, r0, #3	@ _159, p,
 5322 02c2 03FB03F3 		mul	r3, r3, r3	@ tmp463, _159, _159
 5323              	@ main.c:2496: 					var2 = (((s32)(p>>2)) * ((s32)dig_P8))>>13; 
 5324 02c6 0A99     		ldr	r1, [sp, #40]	@ dig_P8, %sfp
 5325 02c8 8208     		lsrs	r2, r0, #2	@ tmp467, p,
 5326 02ca 01FB02F2 		mul	r2, r1, r2	@ tmp468, dig_P8, tmp467
 5327              	@ main.c:2495: 					var1 = (((s32)dig_P9) * ((s32)(((p>>3) * (p>>3))>>13)))>>12; 
 5328 02ce 0B99     		ldr	r1, [sp, #44]	@ dig_P9, %sfp
 5329 02d0 5B0B     		lsrs	r3, r3, #13	@ tmp464, tmp463,
 5330 02d2 01FB03F3 		mul	r3, r1, r3	@ tmp465, dig_P9, tmp464
 5331              	@ main.c:2497: 					p = (u32)((s32)p + ((var1 + var2 + dig_P7) >> 4)); 
 5332 02d6 0999     		ldr	r1, [sp, #36]	@ dig_P7, %sfp
 5333 02d8 01EB6232 		add	r2, r1, r2, asr #13	@ tmp470, dig_P7, tmp468,
 5334 02dc 02EB2333 		add	r3, r2, r3, asr #12	@ tmp471, tmp470, tmp465,
 5335 02e0 00EB1310 		add	r0, r0, r3, lsr #4	@ p, p, tmp471,
 5336              	@ main.c:2498: 					p = (p*5)/8;
 5337 02e4 00EB8000 		add	r0, r0, r0, lsl #2	@ tmp475, p, p,
 5338 02e8 C008     		lsrs	r0, r0, #3	@ p, tmp475,
 5339              	@ main.c:2499: 					p = (p*5)/8;
 5340 02ea 00EB8004 		add	r4, r0, r0, lsl #2	@ tmp479, p, p,
 5341              	@ main.c:2500: 					UaPutK(" p= ");	
 5342 02ee 1D48     		ldr	r0, .L404+48	@,
 5343 02f0 FFF7FEFF 		bl	UaPutK	@
 5344              	@ main.c:2501: 					num2uart(p,9,3);
 5345 02f4 E008     		lsrs	r0, r4, #3	@, tmp479,
 5346 02f6 0322     		movs	r2, #3	@,
 5347 02f8 0921     		movs	r1, #9	@,
 5348 02fa FFF7FEFF 		bl	num2uart	@
 5349              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5350 02fe 3C68     		ldr	r4, [r7]	@ Timt.47_260, Timt
 5351 0300 B368     		ldr	r3, [r6, #8]	@ _261, MEM[(struct SysTick_Type *)3758153744B].VAL
 5352              	@ main.c:2505: 				UaPutS(" tp="); sint2uart(tim/TIM_US);
 5353 0302 1948     		ldr	r0, .L404+52	@,
 5354              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5355 0304 E41A     		subs	r4, r4, r3	@ _262, Timt.47_260, _261
 5356 0306 0D94     		str	r4, [sp, #52]	@ _262, MEM[(volatile u32 *)&tim]
 5357              	@ main.c:2505: 				UaPutS(" tp="); sint2uart(tim/TIM_US);
 5358 0308 FFF7FEFF 		bl	UaPutS	@
ARM GAS  /tmp/ccpmJ073.s 			page 95


 5359 030c 174B     		ldr	r3, .L404+56	@ tmp577,
 5360 030e A3FB0430 		umull	r3, r0, r3, r4	@ tmp502, tmp486, tmp577, _262
 5361 0312 4008     		lsrs	r0, r0, #1	@, tmp486,
 5362 0314 FFF7FEFF 		bl	sint2uart	@
 5363              	.L396:
 5364              	@ main.c:2510: 			if( STCLK_MS*1000 < (trg1 - SysTick->VAL)){
 5365 0318 154A     		ldr	r2, .L404+60	@ tmp488,
 5366 031a 1368     		ldr	r3, [r2]	@ trg1.135_178, trg1
 5367 031c B168     		ldr	r1, [r6, #8]	@ _179, MEM[(struct SysTick_Type *)3758153744B].VAL
 5368 031e 5B1A     		subs	r3, r3, r1	@ tmp490, trg1.135_178, _179
 5369 0320 5B45     		cmp	r3, fp	@ tmp490, tmp498
 5370 0322 7FF642AF 		bls	.L400	@,
 5371              	@ main.c:2511: 				trg1 = SysTick->VAL;
 5372 0326 B368     		ldr	r3, [r6, #8]	@ _181, MEM[(struct SysTick_Type *)3758153744B].VAL
 5373 0328 1360     		str	r3, [r2]	@ _181, trg1
 5374 032a 3EE7     		b	.L400	@
 5375              	.L395:
 5376              	@ main.c:2515: 	}
 5377 032c 15B0     		add	sp, sp, #84	@,,
 5378              		@ sp needed	@
 5379 032e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 5380              	.L405:
 5381 0332 00BF     		.align	2
 5382              	.L404:
 5383 0334 000C0140 		.word	1073810432
 5384 0338 00580040 		.word	1073764352
 5385 033c 3C000B42 		.word	1108017212
 5386 0340 D8034242 		.word	1111622616
 5387 0344 00000B42 		.word	1108017152
 5388 0348 00000000 		.word	.LC58
 5389 034c 00000000 		.word	Timt
 5390 0350 10E000E0 		.word	-536813552
 5391 0354 14000000 		.word	.LC59
 5392 0358 20000000 		.word	.LC60
 5393 035c 24000000 		.word	.LC61
 5394 0360 CBF3FFFF 		.word	-3125
 5395 0364 28000000 		.word	.LC62
 5396 0368 30000000 		.word	.LC63
 5397 036c 398EE338 		.word	954437177
 5398 0370 00000000 		.word	trg1
 5399 0374 00000000 		.word	trg0
 5400 0378 20AA4400 		.word	4500000
 5401 037c 40548900 		.word	9000000
 5402              		.size	BMP280_i2c, .-BMP280_i2c
 5403              		.section	.text.BMP280_spi,"ax",%progbits
 5404              		.align	1
 5405              		.p2align 2,,3
 5406              		.global	BMP280_spi
 5407              		.syntax unified
 5408              		.thumb
 5409              		.thumb_func
 5410              		.fpu softvfp
 5411              		.type	BMP280_spi, %function
 5412              	BMP280_spi:
 5413              		@ args = 0, pretend = 0, frame = 16
 5414              		@ frame_needed = 0, uses_anonymous_args = 0
 5415 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
ARM GAS  /tmp/ccpmJ073.s 			page 96


 5416              	@ main.c:2529: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|7<<3|SPI_CR1_MSTR|SPI_CR1_CPOL|SPI_CR1_CPHA;		
 5417 0004 40F23F36 		movw	r6, #831	@ tmp198,
 5418              	@ main.c:2545: 		RX1276_CS1 = 0;
 5419 0008 0025     		movs	r5, #0	@ tmp211,
 5420              	@ main.c:2525: 		GPIOA->CRL = (GPIOA->CRL&0x0000ffff)|0xB4B30000;	// PA4~7
 5421 000a 6C48     		ldr	r0, .L413	@ tmp189,
 5422              	@ main.c:2526: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 5423 000c 6C49     		ldr	r1, .L413+4	@ tmp194,
 5424              	@ main.c:2525: 		GPIOA->CRL = (GPIOA->CRL&0x0000ffff)|0xB4B30000;	// PA4~7
 5425 000e 0368     		ldr	r3, [r0]	@ _1, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 5426              	@ main.c:2529: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|7<<3|SPI_CR1_MSTR|SPI_CR1_CPOL|SPI_CR1_CPHA;		
 5427 0010 6C4A     		ldr	r2, .L413+8	@ tmp196,
 5428              	@ main.c:2525: 		GPIOA->CRL = (GPIOA->CRL&0x0000ffff)|0xB4B30000;	// PA4~7
 5429 0012 9BB2     		uxth	r3, r3	@ tmp190, _1
 5430 0014 43F03443 		orr	r3, r3, #-1275068416	@ _4, tmp190,
 5431 0018 43F43303 		orr	r3, r3, #11730944	@ _4, _4,
 5432 001c 0360     		str	r3, [r0]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 5433              	@ main.c:2526: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 5434 001e 8B69     		ldr	r3, [r1, #24]	@ _6, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 5435              	@ main.c:2535: 		trg0 = SysTick->VAL;		trg1 = SysTick->VAL;		trg2 = SysTick->VAL;
 5436 0020 694C     		ldr	r4, .L413+12	@ tmp204,
 5437              	@ main.c:2526: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 5438 0022 43F48053 		orr	r3, r3, #4096	@ _8, _6,
 5439 0026 8B61     		str	r3, [r1, #24]	@ _8, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 5440              	@ main.c:2529: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|7<<3|SPI_CR1_MSTR|SPI_CR1_CPOL|SPI_CR1_CPHA;		
 5441 0028 1680     		strh	r6, [r2]	@ movhi	@ tmp198, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 5442              	@ main.c:2533: 		SPI1->CR1 |= SPI_CR1_SPE;		
 5443 002a 1388     		ldrh	r3, [r2]	@, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 5444              	@ main.c:2535: 		trg0 = SysTick->VAL;		trg1 = SysTick->VAL;		trg2 = SysTick->VAL;
 5445 002c 6749     		ldr	r1, .L413+16	@ tmp205,
 5446              	@ main.c:2533: 		SPI1->CR1 |= SPI_CR1_SPE;		
 5447 002e 43F04003 		orr	r3, r3, #64	@ _11, MEM[(struct SPI_TypeDef *)1073819648B].CR1,
 5448 0032 1380     		strh	r3, [r2]	@ movhi	@ _11, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 5449              	@ main.c:2535: 		trg0 = SysTick->VAL;		trg1 = SysTick->VAL;		trg2 = SysTick->VAL;
 5450 0034 A268     		ldr	r2, [r4, #8]	@ _12, MEM[(struct SysTick_Type *)3758153744B].VAL
 5451 0036 664B     		ldr	r3, .L413+20	@ tmp207,
 5452 0038 0A60     		str	r2, [r1]	@ _12, trg0
 5453 003a A268     		ldr	r2, [r4, #8]	@ _13, MEM[(struct SysTick_Type *)3758153744B].VAL
 5454 003c DFF8B091 		ldr	r9, .L413+52	@ tmp285,
 5455 0040 1A60     		str	r2, [r3]	@ _13, trg1
 5456 0042 A268     		ldr	r2, [r4, #8]	@ _14, MEM[(struct SysTick_Type *)3758153744B].VAL
 5457              	@ main.c:2545: 		RX1276_CS1 = 0;
 5458 0044 634B     		ldr	r3, .L413+24	@ tmp210,
 5459              	@ main.c:2535: 		trg0 = SysTick->VAL;		trg1 = SysTick->VAL;		trg2 = SysTick->VAL;
 5460 0046 C9F80020 		str	r2, [r9]	@ _14, trg2
 5461              	@ main.c:2545: 		RX1276_CS1 = 0;
 5462 004a 1D60     		str	r5, [r3]	@ tmp211, MEM[(volatile long unsigned int *)1109459344B]
 5463              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 5464 004c 2546     		mov	r5, r4	@ tmp215, tmp204
 5465              	@ main.c:2516: void BMP280_spi(void){
 5466 004e 85B0     		sub	sp, sp, #20	@,,
 5467              	@ main.c:2547: 		spi1_rw(0xE0 & 0x7f);   // reset write
 5468 0050 6020     		movs	r0, #96	@,
 5469 0052 FFF7FEFF 		bl	spi1_rw	@
 5470              	@ main.c:2548: 		spi1_rw(0xB6); 			    // reset value
 5471 0056 B620     		movs	r0, #182	@,
 5472 0058 FFF7FEFF 		bl	spi1_rw	@
ARM GAS  /tmp/ccpmJ073.s 			page 97


 5473              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 5474 005c A368     		ldr	r3, [r4, #8]	@ _123, MEM[(struct SysTick_Type *)3758153744B].VAL
 5475 005e 5E49     		ldr	r1, .L413+28	@ tmp286,
 5476              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 5477 0060 5E48     		ldr	r0, .L413+32	@ tmp217,
 5478              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 5479 0062 0B60     		str	r3, [r1]	@ _123, delay_us
 5480              	.L407:
 5481              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 5482 0064 0B68     		ldr	r3, [r1]	@ delay_us.116_124, delay_us
 5483 0066 AA68     		ldr	r2, [r5, #8]	@ _125, MEM[(struct SysTick_Type *)3758153744B].VAL
 5484 0068 9B1A     		subs	r3, r3, r2	@ tmp216, delay_us.116_124, _125
 5485 006a 8342     		cmp	r3, r0	@ tmp216, tmp217
 5486 006c FAD9     		bls	.L407	@,
 5487              	@ main.c:2552: 		spi1_rw(0xf4 & 0x7f); 	// Select Control register 
 5488 006e 7420     		movs	r0, #116	@,
 5489 0070 FFF7FEFF 		bl	spi1_rw	@
 5490              	@ main.c:2553: 		spi1_rw(0x27); 					// Write  Control register 
 5491 0074 2720     		movs	r0, #39	@,
 5492 0076 FFF7FEFF 		bl	spi1_rw	@
 5493              	@ main.c:2557: 		RX1276_CS1 = 1;
 5494 007a 564A     		ldr	r2, .L413+24	@ tmp218,
 5495 007c 0121     		movs	r1, #1	@ tmp219,
 5496              	@ main.c:2567: 				RX1276_CS1 = 0;
 5497 007e 9346     		mov	fp, r2	@ tmp226, tmp218
 5498              	@ main.c:2563: 			if( STCLK_MS*2000 < (trg2 - SysTick->VAL)){
 5499 0080 DFF844A1 		ldr	r10, .L413+12	@ tmp221,
 5500 0084 564B     		ldr	r3, .L413+36	@ tmp223,
 5501              	@ main.c:2557: 		RX1276_CS1 = 1;
 5502 0086 1160     		str	r1, [r2]	@ tmp219, MEM[(volatile long unsigned int *)1109459344B]
 5503              	.L408:
 5504              	@ main.c:2563: 			if( STCLK_MS*2000 < (trg2 - SysTick->VAL)){
 5505 0088 D9F80020 		ldr	r2, [r9]	@ trg2.136_15, trg2
 5506 008c DAF80810 		ldr	r1, [r10, #8]	@ _16, MEM[(struct SysTick_Type *)3758153744B].VAL
 5507 0090 521A     		subs	r2, r2, r1	@ tmp222, trg2.136_15, _16
 5508 0092 9A42     		cmp	r2, r3	@ tmp222, tmp223
 5509 0094 F8D9     		bls	.L408	@,
 5510              	@ main.c:2567: 				RX1276_CS1 = 0;
 5511 0096 0022     		movs	r2, #0	@ tmp227,
 5512              	@ main.c:2564: 				trg2 = SysTick->VAL;
 5513 0098 DAF80810 		ldr	r1, [r10, #8]	@ _18, MEM[(struct SysTick_Type *)3758153744B].VAL
 5514 009c 0393     		str	r3, [sp, #12]	@ tmp223, %sfp
 5515 009e C9F80010 		str	r1, [r9]	@ _18, trg2
 5516              	@ main.c:2569: 				spi1_rw(0xF4 & 0x7f); 	// Select Control register 
 5517 00a2 7420     		movs	r0, #116	@,
 5518              	@ main.c:2567: 				RX1276_CS1 = 0;
 5519 00a4 CBF80020 		str	r2, [fp]	@ tmp227, MEM[(volatile long unsigned int *)1109459344B]
 5520              	@ main.c:2569: 				spi1_rw(0xF4 & 0x7f); 	// Select Control register 
 5521 00a8 FFF7FEFF 		bl	spi1_rw	@
 5522              	@ main.c:2570: 				spi1_rw(0x27); 					// Write  Control register 
 5523 00ac 2720     		movs	r0, #39	@,
 5524 00ae FFF7FEFF 		bl	spi1_rw	@
 5525              	@ main.c:2572: 				spi1_rw(0xF4);
 5526 00b2 F420     		movs	r0, #244	@,
 5527 00b4 FFF7FEFF 		bl	spi1_rw	@
 5528              	@ main.c:2573: 				ctrl_meas = spi1_rw(0xff);
 5529 00b8 FF20     		movs	r0, #255	@,
ARM GAS  /tmp/ccpmJ073.s 			page 98


 5530 00ba FFF7FEFF 		bl	spi1_rw	@
 5531 00be 0190     		str	r0, [sp, #4]	@, %sfp
 5532              	@ main.c:2575: 				spi1_rw(0x88);
 5533 00c0 8820     		movs	r0, #136	@,
 5534 00c2 FFF7FEFF 		bl	spi1_rw	@
 5535              	@ main.c:2576: 				v0 = spi1_rw(0xff);
 5536 00c6 FF20     		movs	r0, #255	@,
 5537 00c8 FFF7FEFF 		bl	spi1_rw	@
 5538 00cc 0546     		mov	r5, r0	@ tmp229,
 5539              	@ main.c:2577: 				v1 = spi1_rw(0xff);
 5540 00ce FF20     		movs	r0, #255	@,
 5541 00d0 FFF7FEFF 		bl	spi1_rw	@
 5542              	@ main.c:2578: 				dig_T1 = (u16)(((u16)(v1<<8)) | v0);
 5543 00d4 EDB2     		uxtb	r5, r5	@ _20, tmp229
 5544 00d6 45EA0025 		orr	r5, r5, r0, lsl #8	@ tmp235, _20,,
 5545              	@ main.c:2580: 				spi1_rw(0x8A);
 5546 00da 8A20     		movs	r0, #138	@,
 5547 00dc FFF7FEFF 		bl	spi1_rw	@
 5548              	@ main.c:2581: 				v0 = spi1_rw(0xff);
 5549 00e0 FF20     		movs	r0, #255	@,
 5550 00e2 FFF7FEFF 		bl	spi1_rw	@
 5551 00e6 0646     		mov	r6, r0	@ tmp236,
 5552              	@ main.c:2582: 				v1 = spi1_rw(0xff);
 5553 00e8 FF20     		movs	r0, #255	@,
 5554 00ea FFF7FEFF 		bl	spi1_rw	@
 5555              	@ main.c:2583: 				dig_T2 = (s16)((v1<<8) | v0);
 5556 00ee F6B2     		uxtb	r6, r6	@ _24, tmp236
 5557 00f0 C0B2     		uxtb	r0, r0	@ _25,
 5558 00f2 46EA0026 		orr	r6, r6, r0, lsl #8	@ tmp243, _24, _25,
 5559              	@ main.c:2585: 				spi1_rw(0x8C);
 5560 00f6 8C20     		movs	r0, #140	@,
 5561 00f8 FFF7FEFF 		bl	spi1_rw	@
 5562              	@ main.c:2586: 				v0 = spi1_rw(0xff);
 5563 00fc FF20     		movs	r0, #255	@,
 5564 00fe FFF7FEFF 		bl	spi1_rw	@
 5565 0102 0446     		mov	r4, r0	@ tmp244,
 5566              	@ main.c:2587: 				v1 = spi1_rw(0xff);
 5567 0104 FF20     		movs	r0, #255	@,
 5568 0106 FFF7FEFF 		bl	spi1_rw	@
 5569              	@ main.c:2588: 				dig_T3 = (s16)((v1<<8) | v0);
 5570 010a E4B2     		uxtb	r4, r4	@ _30, tmp244
 5571 010c C0B2     		uxtb	r0, r0	@ _31,
 5572 010e 44EA0024 		orr	r4, r4, r0, lsl #8	@ tmp251, _30, _31,
 5573              	@ main.c:2590: 				spi1_rw(0xFA);
 5574 0112 FA20     		movs	r0, #250	@,
 5575 0114 FFF7FEFF 		bl	spi1_rw	@
 5576              	@ main.c:2591: 				value[0] = spi1_rw(0xff);
 5577 0118 FF20     		movs	r0, #255	@,
 5578 011a FFF7FEFF 		bl	spi1_rw	@
 5579 011e 0746     		mov	r7, r0	@ tmp252,
 5580              	@ main.c:2592: 				value[1] = spi1_rw(0xff);
 5581 0120 FF20     		movs	r0, #255	@,
 5582 0122 FFF7FEFF 		bl	spi1_rw	@
 5583 0126 0290     		str	r0, [sp, #8]	@ tmp253, %sfp
 5584              	@ main.c:2593: 				value[2] = spi1_rw(0xff);
 5585 0128 FF20     		movs	r0, #255	@,
 5586 012a FFF7FEFF 		bl	spi1_rw	@
ARM GAS  /tmp/ccpmJ073.s 			page 99


 5587              	@ main.c:2599: 				RX1276_CS1 = 1;
 5588 012e 0121     		movs	r1, #1	@ tmp256,
 5589              	@ main.c:2593: 				value[2] = spi1_rw(0xff);
 5590 0130 8046     		mov	r8, r0	@ tmp254,
 5591              	@ main.c:2599: 				RX1276_CS1 = 1;
 5592 0132 CBF80010 		str	r1, [fp]	@ tmp256, MEM[(volatile long unsigned int *)1109459344B]
 5593              	@ main.c:2601: 				UaPutK("\r\n BMP280T1 = 0x");	
 5594 0136 2B48     		ldr	r0, .L413+40	@,
 5595 0138 FFF7FEFF 		bl	UaPutK	@
 5596              	@ main.c:2578: 				dig_T1 = (u16)(((u16)(v1<<8)) | v0);
 5597 013c ADB2     		uxth	r5, r5	@ dig_T1, tmp235
 5598              	@ main.c:2602: 				hex2uart(ctrl_meas,2);
 5599 013e 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2	@, %sfp
 5600 0142 0221     		movs	r1, #2	@,
 5601 0144 FFF7FEFF 		bl	hex2uart	@
 5602              	@ main.c:2583: 				dig_T2 = (s16)((v1<<8) | v0);
 5603 0148 36B2     		sxth	r6, r6	@ dig_T2, tmp243
 5604              	@ main.c:2604: 				hex2uart(dig_T1,4);
 5605 014a 2846     		mov	r0, r5	@, dig_T1
 5606 014c 0421     		movs	r1, #4	@,
 5607 014e FFF7FEFF 		bl	hex2uart	@
 5608              	@ main.c:2588: 				dig_T3 = (s16)((v1<<8) | v0);
 5609 0152 24B2     		sxth	r4, r4	@ dig_T3, tmp251
 5610              	@ main.c:2605: 				hex2uart(dig_T2,4);
 5611 0154 3046     		mov	r0, r6	@, dig_T2
 5612 0156 0421     		movs	r1, #4	@,
 5613 0158 FFF7FEFF 		bl	hex2uart	@
 5614              	@ main.c:2606: 				hex2uart(dig_T3,4);
 5615 015c 0421     		movs	r1, #4	@,
 5616 015e 2046     		mov	r0, r4	@, dig_T3
 5617 0160 FFF7FEFF 		bl	hex2uart	@
 5618              	@ main.c:2613: 				adc = ( (u32)((u16)((value[0]) << 8) | value[1] ) << 4) | ( (value[2]) >> 4);
 5619 0164 029A     		ldr	r2, [sp, #8]	@ tmp253, %sfp
 5620 0166 3F02     		lsls	r7, r7, #8	@ tmp259, tmp252,
 5621 0168 BFB2     		uxth	r7, r7	@ tmp260, tmp259
 5622 016a D2B2     		uxtb	r2, r2	@ _37, tmp253
 5623 016c 3A43     		orrs	r2, r2, r7	@, tmp262, _37, tmp260
 5624 016e C8F30317 		ubfx	r7, r8, #4, #4	@ tmp266, tmp254,,
 5625 0172 47EA0217 		orr	r7, r7, r2, lsl #4	@ adc, tmp266, tmp262,
 5626              	@ main.c:2624: 				UaPutK(" T=");	
 5627 0176 1C48     		ldr	r0, .L413+44	@,
 5628 0178 FFF7FEFF 		bl	UaPutK	@
 5629              	@ main.c:2625: 				sint2uart(adc);
 5630 017c 3846     		mov	r0, r7	@, adc
 5631 017e FFF7FEFF 		bl	sint2uart	@
 5632              	@ main.c:2617:         var2 = (((((adc>>4) - ((s32)dig_T1)) * ((adc>>4) - ((s32)dig_T1))) >> 12)
 5633 0182 C5EB1718 		rsb	r8, r5, r7, lsr #4	@ _61, dig_T1, adc,
 5634              	@ main.c:2626: 				UaPutK(" ");	
 5635 0186 1948     		ldr	r0, .L413+48	@,
 5636 0188 FFF7FEFF 		bl	UaPutK	@
 5637              	@ main.c:2617:         var2 = (((((adc>>4) - ((s32)dig_T1)) * ((adc>>4) - ((s32)dig_T1))) >> 12)
 5638 018c 08FB08F0 		mul	r0, r8, r8	@ tmp275, _61, _61
 5639              	@ main.c:2616: 				var1 = ((((adc>>3) - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5640 0190 6D00     		lsls	r5, r5, #1	@ tmp271, dig_T1,
 5641              	@ main.c:2617:         var2 = (((((adc>>4) - ((s32)dig_T1)) * ((adc>>4) - ((s32)dig_T1))) >> 12)
 5642 0192 000B     		lsrs	r0, r0, #12	@ tmp276, tmp275,
 5643              	@ main.c:2616: 				var1 = ((((adc>>3) - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
ARM GAS  /tmp/ccpmJ073.s 			page 100


 5644 0194 C5EBD705 		rsb	r5, r5, r7, lsr #3	@ tmp272, tmp271, adc,
 5645              	@ main.c:2618: 				* ((s32)dig_T3))>>14;
 5646 0198 04FB00F0 		mul	r0, r4, r0	@ tmp277, dig_T3, tmp276
 5647              	@ main.c:2616: 				var1 = ((((adc>>3) - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5648 019c 06FB05F5 		mul	r5, r6, r5	@ tmp273, dig_T2, tmp272
 5649              	@ main.c:2617:         var2 = (((((adc>>4) - ((s32)dig_T1)) * ((adc>>4) - ((s32)dig_T1))) >> 12)
 5650 01a0 800B     		lsrs	r0, r0, #14	@ var2, tmp277,
 5651              	@ main.c:2621:         tFine = var1 + var2;
 5652 01a2 00EBD520 		add	r0, r0, r5, lsr #11	@ tFine, var2, tmp273,
 5653              	@ main.c:2622: 				T     = (tFine * 5 + 128) >> 8;
 5654 01a6 00EB8000 		add	r0, r0, r0, lsl #2	@ tmp282, tFine, tFine,
 5655 01aa 8030     		adds	r0, r0, #128	@ tmp283, tmp282,
 5656              	@ main.c:2627: 				num2uart(T,5,3);
 5657 01ac 000A     		lsrs	r0, r0, #8	@, tmp283,
 5658 01ae 0322     		movs	r2, #3	@,
 5659 01b0 0521     		movs	r1, #5	@,
 5660 01b2 FFF7FEFF 		bl	num2uart	@
 5661 01b6 039B     		ldr	r3, [sp, #12]	@ tmp223, %sfp
 5662 01b8 66E7     		b	.L408	@
 5663              	.L414:
 5664 01ba 00BF     		.align	2
 5665              	.L413:
 5666 01bc 00080140 		.word	1073809408
 5667 01c0 00100240 		.word	1073876992
 5668 01c4 00300140 		.word	1073819648
 5669 01c8 10E000E0 		.word	-536813552
 5670 01cc 00000000 		.word	trg0
 5671 01d0 00000000 		.word	trg1
 5672 01d4 90012142 		.word	1109459344
 5673 01d8 00000000 		.word	delay_us
 5674 01dc 8F5F0100 		.word	89999
 5675 01e0 80A81201 		.word	18000000
 5676 01e4 00000000 		.word	.LC64
 5677 01e8 24000000 		.word	.LC61
 5678 01ec 30000000 		.word	.LC15
 5679 01f0 00000000 		.word	trg2
 5680              		.size	BMP280_spi, .-BMP280_spi
 5681              		.section	.text.fun_tool,"ax",%progbits
 5682              		.align	1
 5683              		.p2align 2,,3
 5684              		.global	fun_tool
 5685              		.syntax unified
 5686              		.thumb
 5687              		.thumb_func
 5688              		.fpu softvfp
 5689              		.type	fun_tool, %function
 5690              	fun_tool:
 5691              		@ args = 0, pretend = 0, frame = 528
 5692              		@ frame_needed = 0, uses_anonymous_args = 0
 5693 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 5694              	@ main.c:2644: 	switch(znak){
 5695 0004 6338     		subs	r0, r0, #99	@ tmp279, znak,
 5696              	@ main.c:2635: void fun_tool(u08 znak,T_SD1 * sda){
 5697 0006 ADF5057D 		sub	sp, sp, #532	@,,
 5698              	@ main.c:2644: 	switch(znak){
 5699 000a 1428     		cmp	r0, #20	@ tmp279,
 5700 000c 00F28880 		bhi	.L416	@
ARM GAS  /tmp/ccpmJ073.s 			page 101


 5701 0010 DFE810F0 		tbh	[pc, r0, lsl #1]	@ tmp279
 5702              	.L418:
 5703 0014 B200     		.2byte	(.L417-.L418)/2
 5704 0016 8600     		.2byte	(.L416-.L418)/2
 5705 0018 8600     		.2byte	(.L416-.L418)/2
 5706 001a 8600     		.2byte	(.L416-.L418)/2
 5707 001c 8600     		.2byte	(.L416-.L418)/2
 5708 001e 8600     		.2byte	(.L416-.L418)/2
 5709 0020 8600     		.2byte	(.L416-.L418)/2
 5710 0022 8600     		.2byte	(.L416-.L418)/2
 5711 0024 8600     		.2byte	(.L416-.L418)/2
 5712 0026 8600     		.2byte	(.L416-.L418)/2
 5713 0028 BF00     		.2byte	(.L419-.L418)/2
 5714 002a 8600     		.2byte	(.L416-.L418)/2
 5715 002c 1500     		.2byte	(.L420-.L418)/2
 5716 002e 8600     		.2byte	(.L416-.L418)/2
 5717 0030 8600     		.2byte	(.L416-.L418)/2
 5718 0032 FF00     		.2byte	(.L421-.L418)/2
 5719 0034 8600     		.2byte	(.L416-.L418)/2
 5720 0036 8600     		.2byte	(.L416-.L418)/2
 5721 0038 5401     		.2byte	(.L422-.L418)/2
 5722 003a 8600     		.2byte	(.L416-.L418)/2
 5723 003c 8D00     		.2byte	(.L423-.L418)/2
 5724              		.p2align 1
 5725              	.L420:
 5726              	@ main.c:2756: 		UaPutK("Read sector");
 5727 003e B648     		ldr	r0, .L455	@,
 5728 0040 FFF7FEFF 		bl	UaPutK	@
 5729              	@ main.c:2757: 		UaPutK("\r\n sectorNumber = ");
 5730 0044 B548     		ldr	r0, .L455+4	@,
 5731 0046 FFF7FEFF 		bl	UaPutK	@
 5732              	@ main.c:2760: 		strBlock=UART_getNum();
 5733 004a FFF7FEFF 		bl	UART_getNum	@
 5734              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5735 004e B44C     		ldr	r4, .L455+8	@ tmp341,
 5736 0050 B44D     		ldr	r5, .L455+12	@ tmp342,
 5737 0052 A368     		ldr	r3, [r4, #8]	@ _169, MEM[(struct SysTick_Type *)3758153744B].VAL
 5738              	@ main.c:2763: 		sd_status=mci_read_sect (strBlock,buffer,1);
 5739 0054 0122     		movs	r2, #1	@,
 5740 0056 04A9     		add	r1, sp, #16	@ tmp393,,
 5741              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5742 0058 2B60     		str	r3, [r5]	@ _169, Timt
 5743              	@ main.c:2760: 		strBlock=UART_getNum();
 5744 005a 0746     		mov	r7, r0	@ strBlock,
 5745              	@ main.c:2763: 		sd_status=mci_read_sect (strBlock,buffer,1);
 5746 005c FFF7FEFF 		bl	mmc_read_sect	@
 5747              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5748 0060 2A68     		ldr	r2, [r5]	@ Timt.47_166, Timt
 5749 0062 A368     		ldr	r3, [r4, #8]	@ _167, MEM[(struct SysTick_Type *)3758153744B].VAL
 5750 0064 D31A     		subs	r3, r2, r3	@ _168, Timt.47_166, _167
 5751 0066 0193     		str	r3, [sp, #4]	@ _168, %sfp
 5752 0068 0393     		str	r3, [sp, #12]	@ _168, MEM[(volatile u32 *)&tim]
 5753              	@ main.c:2766: 		if(sd_status){
 5754 006a 0028     		cmp	r0, #0	@
 5755 006c 00F04F81 		beq	.L434	@
 5756              	@ main.c:2767: 			UaPutS("\r\n ");
 5757 0070 AD48     		ldr	r0, .L455+16	@,
ARM GAS  /tmp/ccpmJ073.s 			page 102


 5758 0072 FFF7FEFF 		bl	UaPutS	@
 5759              	@ main.c:2769: 			hex2uart(strBlock, 8);
 5760 0076 0821     		movs	r1, #8	@,
 5761 0078 3846     		mov	r0, r7	@, strBlock
 5762 007a FFF7FEFF 		bl	hex2uart	@
 5763 007e 0024     		movs	r4, #0	@ ivtmp.528,
 5764              	.L435:
 5765              	@ main.c:2771: 				hex2uart(k, 2);
 5766 0080 2046     		mov	r0, r4	@, ivtmp.528
 5767 0082 0221     		movs	r1, #2	@,
 5768 0084 0134     		adds	r4, r4, #1	@ ivtmp.528, ivtmp.528,
 5769 0086 FFF7FEFF 		bl	hex2uart	@
 5770              	@ main.c:2770: 			for(u08 k=0;k<16;k++){
 5771 008a 102C     		cmp	r4, #16	@ ivtmp.528,
 5772 008c F8D1     		bne	.L435	@,
 5773              	@ main.c:2774: 			UaPutS("\r\n\n ");
 5774 008e A748     		ldr	r0, .L455+20	@,
 5775 0090 FFF7FEFF 		bl	UaPutS	@
 5776              	@ main.c:2776: 				hex2uart(strBlock*512 + i, 8);
 5777 0094 04AE     		add	r6, sp, #16	@ tmp396,,
 5778              	@ main.c:2780: 				UaPutS("  ");
 5779 0096 DFF8DC92 		ldr	r9, .L455+92	@ tmp378,
 5780              	@ main.c:2785: 				UaPutS("\r\n ");
 5781 009a DFF88C82 		ldr	r8, .L455+16	@ tmp379,
 5782 009e 0DF5047A 		add	r10, sp, #528	@ _54,,
 5783 00a2 C6EB4727 		rsb	r7, r6, r7, lsl #9	@ tmp371, tmp397, strBlock,
 5784 00a6 08AD     		add	r5, sp, #32	@ ivtmp.526,,
 5785              	.L440:
 5786              	@ main.c:2776: 				hex2uart(strBlock*512 + i, 8);
 5787 00a8 0821     		movs	r1, #8	@,
 5788 00aa B819     		adds	r0, r7, r6	@, tmp371, ivtmp.527
 5789 00ac FFF7FEFF 		bl	hex2uart	@
 5790 00b0 3446     		mov	r4, r6	@ ivtmp.518, ivtmp.527
 5791              	.L436:
 5792              	@ main.c:2778: 					hex2uart(buffer[k+i], 2);
 5793 00b2 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2	@, MEM[base: _181, offset: 0B]
 5794 00b6 0221     		movs	r1, #2	@,
 5795 00b8 FFF7FEFF 		bl	hex2uart	@
 5796              	@ main.c:2777: 				for(u08 k=0;k<16;k++){
 5797 00bc A542     		cmp	r5, r4	@ ivtmp.526, ivtmp.518
 5798 00be F8D1     		bne	.L436	@,
 5799              	@ main.c:2780: 				UaPutS("  ");
 5800 00c0 4846     		mov	r0, r9	@, tmp378
 5801 00c2 FFF7FEFF 		bl	UaPutS	@
 5802 00c6 B346     		mov	fp, r6	@ ivtmp.509, ivtmp.527
 5803              	.L439:
 5804              	@ main.c:2782: 					if ( buffer[k+i]<0x20 || buffer[k+i]>127 ) UaPutC('.');
 5805 00c8 1BF8010B 		ldrb	r0, [fp], #1	@ zero_extendqisi2	@ _39, MEM[base: _195, offset: 0B]
 5806 00cc A0F12002 		sub	r2, r0, #32	@ tmp355, _39,
 5807 00d0 5F2A     		cmp	r2, #95	@ tmp355,
 5808 00d2 88BF     		it	hi
 5809 00d4 2E20     		movhi	r0, #46	@,
 5810              	@ main.c:2783: 					else UaPutC(buffer[k+i]);
 5811 00d6 FFF7FEFF 		bl	UaPutC	@
 5812              	@ main.c:2781: 				for(u08 k=0;k<16;k++){
 5813 00da 5C45     		cmp	r4, fp	@ ivtmp.518, ivtmp.509
 5814 00dc F4D1     		bne	.L439	@,
ARM GAS  /tmp/ccpmJ073.s 			page 103


 5815 00de 1036     		adds	r6, r6, #16	@ ivtmp.527, ivtmp.527,
 5816              	@ main.c:2785: 				UaPutS("\r\n ");
 5817 00e0 4046     		mov	r0, r8	@, tmp379
 5818 00e2 FFF7FEFF 		bl	UaPutS	@
 5819              	@ main.c:2775: 			for(u32 i=0;i<512;i+=16){
 5820 00e6 B245     		cmp	r10, r6	@ _54, ivtmp.527
 5821 00e8 05F11005 		add	r5, r5, #16	@ ivtmp.526, ivtmp.526,
 5822 00ec DCD1     		bne	.L440	@,
 5823              	@ main.c:2787: 			UaPutK(" t_rsdio = ");	uint2uart(tim/TIM_US);
 5824 00ee 9048     		ldr	r0, .L455+24	@,
 5825 00f0 FFF7FEFF 		bl	UaPutK	@
 5826 00f4 019B     		ldr	r3, [sp, #4]	@ _168, %sfp
 5827 00f6 8F48     		ldr	r0, .L455+28	@ tmp360,
 5828 00f8 A0FB0330 		umull	r3, r0, r0, r3	@ tmp390, tmp359, tmp360, _168
 5829 00fc 4008     		lsrs	r0, r0, #1	@, tmp359,
 5830 00fe FFF7FEFF 		bl	uint2uart	@
 5831              	@ main.c:2789: 			crc16_spi2( (u16*) buffer,256, &crc16 );
 5832 0102 4FF48071 		mov	r1, #256	@,
 5833 0106 04A8     		add	r0, sp, #16	@ tmp400,,
 5834 0108 0DF10A02 		add	r2, sp, #10	@ tmp401,,
 5835              	.L453:
 5836 010c FFF7FEFF 		bl	crc16_spi2	@
 5837              	@ main.c:2791: 			UaPutK(" crc = ");	hex2uart(crc16,4);
 5838 0110 8948     		ldr	r0, .L455+32	@,
 5839 0112 FFF7FEFF 		bl	UaPutK	@
 5840 0116 BDF80A00 		ldrh	r0, [sp, #10]	@, crc16
 5841 011a 0421     		movs	r1, #4	@,
 5842 011c FFF7FEFF 		bl	hex2uart	@
 5843              	.L416:
 5844              	@ main.c:2800: 	UaPutS("\r\n ");
 5845 0120 8148     		ldr	r0, .L455+16	@,
 5846 0122 FFF7FEFF 		bl	UaPutS	@
 5847              	@ main.c:2801: }
 5848 0126 0DF5057D 		add	sp, sp, #532	@,,
 5849              		@ sp needed	@
 5850 012a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 5851              	.L423:
 5852              	@ main.c:2695: 		UaPutK("\r\n Flash memory Page = ");
 5853 012e 8348     		ldr	r0, .L455+36	@,
 5854 0130 FFF7FEFF 		bl	UaPutK	@
 5855              	@ main.c:2696: 		strBlock = UART_getNum();
 5856 0134 FFF7FEFF 		bl	UART_getNum	@
 5857              	@ main.c:2697: 		strBlock = strBlock > 254 ? 254 : strBlock;
 5858 0138 FE28     		cmp	r0, #254	@,
 5859 013a 28BF     		it	cs
 5860 013c FE20     		movcs	r0, #254	@ strBlock,
 5861              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5862 013e 784D     		ldr	r5, .L455+8	@ tmp297,
 5863 0140 784C     		ldr	r4, .L455+12	@ tmp298,
 5864 0142 AB68     		ldr	r3, [r5, #8]	@ _161, MEM[(struct SysTick_Type *)3758153744B].VAL
 5865              	@ main.c:2698: 		strBlock = (u32)(0x800*strBlock + 0x08000000);
 5866 0144 00F58030 		add	r0, r0, #65536	@ _17, strBlock,
 5867              	@ main.c:2701: 		EraseFlashPage(strBlock);
 5868 0148 C002     		lsls	r0, r0, #11	@, _17,
 5869              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5870 014a 2360     		str	r3, [r4]	@ _161, Timt
 5871              	@ main.c:2701: 		EraseFlashPage(strBlock);
ARM GAS  /tmp/ccpmJ073.s 			page 104


 5872 014c FFF7FEFF 		bl	EraseFlashPage	@
 5873              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5874 0150 2468     		ldr	r4, [r4]	@ Timt.47_158, Timt
 5875 0152 AB68     		ldr	r3, [r5, #8]	@ _159, MEM[(struct SysTick_Type *)3758153744B].VAL
 5876              	@ main.c:2703: 		UaPutS("\r\n Kasowanie pamieci FLASH = "); sint2uart(tim/TIM_US);
 5877 0154 7A48     		ldr	r0, .L455+40	@,
 5878              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5879 0156 E41A     		subs	r4, r4, r3	@ _160, Timt.47_158, _159
 5880 0158 0394     		str	r4, [sp, #12]	@ _160, MEM[(volatile u32 *)&tim]
 5881              	@ main.c:2703: 		UaPutS("\r\n Kasowanie pamieci FLASH = "); sint2uart(tim/TIM_US);
 5882 015a FFF7FEFF 		bl	UaPutS	@
 5883 015e 7548     		ldr	r0, .L455+28	@ tmp307,
 5884 0160 A0FB0430 		umull	r3, r0, r0, r4	@ tmp388, tmp306, tmp307, _160
 5885 0164 4008     		lsrs	r0, r0, #1	@, tmp306,
 5886 0166 FFF7FEFF 		bl	sint2uart	@
 5887              	@ main.c:2800: 	UaPutS("\r\n ");
 5888 016a 6F48     		ldr	r0, .L455+16	@,
 5889 016c FFF7FEFF 		bl	UaPutS	@
 5890              	@ main.c:2801: }
 5891 0170 0DF5057D 		add	sp, sp, #532	@,,
 5892              		@ sp needed	@
 5893 0174 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 5894              	.L417:
 5895              	@ main.c:2750: 		TFT_Clear(BLACK);
 5896 0178 0020     		movs	r0, #0	@,
 5897 017a FFF7FEFF 		bl	TFT_Clear	@
 5898              	@ main.c:2752: 		UaPutS("\r\n Clear !");
 5899 017e 7148     		ldr	r0, .L455+44	@,
 5900 0180 FFF7FEFF 		bl	UaPutS	@
 5901              	@ main.c:2800: 	UaPutS("\r\n ");
 5902 0184 6848     		ldr	r0, .L455+16	@,
 5903 0186 FFF7FEFF 		bl	UaPutS	@
 5904              	@ main.c:2801: }
 5905 018a 0DF5057D 		add	sp, sp, #532	@,,
 5906              		@ sp needed	@
 5907 018e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 5908              	.L419:
 5909              	@ main.c:2736: 		UaPutS("\r\n Read Start !");
 5910 0192 6D48     		ldr	r0, .L455+48	@,
 5911 0194 FFF7FEFF 		bl	UaPutS	@
 5912 0198 0025     		movs	r5, #0	@ ivtmp.499,
 5913 019a DFF88891 		ldr	r9, .L455+12	@ tmp370,
 5914              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5915 019e 604E     		ldr	r6, .L455+8	@ tmp325,
 5916              	@ main.c:2741: 			tim = tim/TIM_US;
 5917 01a0 644F     		ldr	r7, .L455+28	@ tmp332,
 5918              	@ main.c:2744: 			if(tim>1000 || tim<700){ UaPutK("\r\n"); int2uart(n,7,0); int2uart(tim,6,3); }
 5919 01a2 DFF8D481 		ldr	r8, .L455+96	@ tmp374,
 5920 01a6 05E0     		b	.L441	@
 5921              	.L430:
 5922 01a8 BAF5967F 		cmp	r10, #300	@ _56,
 5923 01ac 18D8     		bhi	.L433	@,
 5924              	@ main.c:2737: 		for(u32 n=0;n<125;n++){
 5925 01ae 7C2D     		cmp	r5, #124	@ ivtmp.499,
 5926 01b0 25D0     		beq	.L454	@,
 5927              	.L431:
 5928 01b2 0135     		adds	r5, r5, #1	@ ivtmp.499, ivtmp.499,
ARM GAS  /tmp/ccpmJ073.s 			page 105


 5929              	.L441:
 5930              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5931 01b4 B368     		ldr	r3, [r6, #8]	@ _165, MEM[(struct SysTick_Type *)3758153744B].VAL
 5932 01b6 C9F80030 		str	r3, [r9]	@ _165, Timt
 5933              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5934 01ba D9F80030 		ldr	r3, [r9]	@ Timt.47_162, Timt
 5935 01be B268     		ldr	r2, [r6, #8]	@ _163, MEM[(struct SysTick_Type *)3758153744B].VAL
 5936 01c0 9B1A     		subs	r3, r3, r2	@ _164, Timt.47_162, _163
 5937              	@ main.c:2741: 			tim = tim/TIM_US;
 5938 01c2 A7FB0324 		umull	r2, r4, r7, r3	@ tmp389, tmp331, tmp332, _164
 5939 01c6 6408     		lsrs	r4, r4, #1	@ _24, tmp331,
 5940              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5941 01c8 0393     		str	r3, [sp, #12]	@ _164, MEM[(volatile u32 *)&tim]
 5942 01ca A4F52F7A 		sub	r10, r4, #700	@ _56, _24,
 5943              	@ main.c:2741: 			tim = tim/TIM_US;
 5944 01ce 0394     		str	r4, [sp, #12]	@ _24, tim
 5945              	@ main.c:2743: 			if(n%1000==0) UaPutK(".");
 5946 01d0 002D     		cmp	r5, #0	@ ivtmp.499
 5947 01d2 E9D1     		bne	.L430	@
 5948              	@ main.c:2743: 			if(n%1000==0) UaPutK(".");
 5949 01d4 5D48     		ldr	r0, .L455+52	@,
 5950 01d6 FFF7FEFF 		bl	UaPutK	@
 5951              	@ main.c:2744: 			if(tim>1000 || tim<700){ UaPutK("\r\n"); int2uart(n,7,0); int2uart(tim,6,3); }
 5952 01da BAF5967F 		cmp	r10, #300	@ _56,
 5953 01de E8D9     		bls	.L431	@,
 5954              	.L433:
 5955              	@ main.c:2744: 			if(tim>1000 || tim<700){ UaPutK("\r\n"); int2uart(n,7,0); int2uart(tim,6,3); }
 5956 01e0 4046     		mov	r0, r8	@, tmp374
 5957 01e2 FFF7FEFF 		bl	UaPutK	@
 5958 01e6 0022     		movs	r2, #0	@,
 5959 01e8 0721     		movs	r1, #7	@,
 5960 01ea 2846     		mov	r0, r5	@, ivtmp.499
 5961 01ec FFF7FEFF 		bl	int2uart	@
 5962 01f0 2046     		mov	r0, r4	@, _24
 5963 01f2 0322     		movs	r2, #3	@,
 5964 01f4 0621     		movs	r1, #6	@,
 5965 01f6 FFF7FEFF 		bl	int2uart	@
 5966              	@ main.c:2737: 		for(u32 n=0;n<125;n++){
 5967 01fa 7C2D     		cmp	r5, #124	@ ivtmp.499,
 5968 01fc D9D1     		bne	.L431	@,
 5969              	.L454:
 5970              	@ main.c:2746: 		UaPutS("\r\n Read Done !");
 5971 01fe 5448     		ldr	r0, .L455+56	@,
 5972 0200 FFF7FEFF 		bl	UaPutS	@
 5973              	@ main.c:2800: 	UaPutS("\r\n ");
 5974 0204 4848     		ldr	r0, .L455+16	@,
 5975 0206 FFF7FEFF 		bl	UaPutS	@
 5976              	@ main.c:2801: }
 5977 020a 0DF5057D 		add	sp, sp, #532	@,,
 5978              		@ sp needed	@
 5979 020e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 5980              	.L421:
 5981              	@ main.c:2647: 		UaPutK("\r\n FLASH memory Read = ");
 5982 0212 5048     		ldr	r0, .L455+60	@,
 5983 0214 FFF7FEFF 		bl	UaPutK	@
 5984              	@ main.c:2648: 		UaPutK("\r\n FLASH memory Read = ");
 5985 0218 4E48     		ldr	r0, .L455+60	@,
ARM GAS  /tmp/ccpmJ073.s 			page 106


 5986 021a FFF7FEFF 		bl	UaPutK	@
 5987              	@ main.c:2650: 		strBlock = UART_getNum();
 5988 021e FFF7FEFF 		bl	UART_getNum	@
 5989              	@ main.c:2653: 		strBlock = strBlock > 254 ? 254 : strBlock;
 5990 0222 FE28     		cmp	r0, #254	@ tmp391,
 5991 0224 28BF     		it	cs
 5992 0226 FE20     		movcs	r0, #254	@ tmp391,
 5993 0228 0446     		mov	r4, r0	@ strBlock, tmp391
 5994              	@ main.c:2654: 		UaPutK("\r\n Flash memory Page ="); sint2uart(strBlock);
 5995 022a 4B48     		ldr	r0, .L455+64	@,
 5996 022c FFF7FEFF 		bl	UaPutK	@
 5997 0230 2046     		mov	r0, r4	@, strBlock
 5998              	@ main.c:2655: 		strBlock = 0x800*strBlock + 0x08000000;
 5999 0232 04F58034 		add	r4, r4, #65536	@ _2, strBlock,
 6000              	@ main.c:2654: 		UaPutK("\r\n Flash memory Page ="); sint2uart(strBlock);
 6001 0236 FFF7FEFF 		bl	sint2uart	@
 6002              	@ main.c:2655: 		strBlock = 0x800*strBlock + 0x08000000;
 6003 023a E402     		lsls	r4, r4, #11	@ ivtmp.554, _2,
 6004              	@ main.c:2663: 			UaPutS("\r\n ");
 6005 023c 3A48     		ldr	r0, .L455+16	@,
 6006 023e FFF7FEFF 		bl	UaPutS	@
 6007              	@ main.c:2665: 			hex2uart(strBlock, 8);
 6008 0242 2046     		mov	r0, r4	@, ivtmp.554
 6009 0244 0821     		movs	r1, #8	@,
 6010 0246 FFF7FEFF 		bl	hex2uart	@
 6011              	@ main.c:2660: 		p_buf = (u08 *) strBlock;
 6012 024a A346     		mov	fp, r4	@ p_buf, ivtmp.554
 6013              	@ main.c:2665: 			hex2uart(strBlock, 8);
 6014 024c 0025     		movs	r5, #0	@ ivtmp.556,
 6015              	.L424:
 6016              	@ main.c:2667: 				hex2uart(k, 2);
 6017 024e 2846     		mov	r0, r5	@, ivtmp.556
 6018 0250 0221     		movs	r1, #2	@,
 6019 0252 0135     		adds	r5, r5, #1	@ ivtmp.556, ivtmp.556,
 6020 0254 FFF7FEFF 		bl	hex2uart	@
 6021              	@ main.c:2666: 			for(u08 k=0;k<16;k++){
 6022 0258 102D     		cmp	r5, #16	@ ivtmp.556,
 6023 025a F8D1     		bne	.L424	@,
 6024              	@ main.c:2670: 			UaPutS("\r\n\n ");
 6025 025c 3348     		ldr	r0, .L455+20	@,
 6026 025e 04F12007 		add	r7, r4, #32	@ ivtmp.554, ivtmp.554,
 6027 0262 FFF7FEFF 		bl	UaPutS	@
 6028 0266 3E46     		mov	r6, r7	@ ivtmp.555, ivtmp.554
 6029              	@ main.c:2677: 				UaPutS("  ");
 6030 0268 DFF808A1 		ldr	r10, .L455+92	@ tmp384,
 6031              	@ main.c:2682: 				UaPutS("\r\n ");
 6032 026c DFF8B890 		ldr	r9, .L455+16	@ tmp385,
 6033 0270 04F50068 		add	r8, r4, #2048	@ _241, ivtmp.554,
 6034              	.L429:
 6035              	@ main.c:2673: 				hex2uart(strBlock + i, 8);	// memory
 6036 0274 0821     		movs	r1, #8	@,
 6037 0276 2046     		mov	r0, r4	@, ivtmp.554
 6038 0278 FFF7FEFF 		bl	hex2uart	@
 6039 027c 2546     		mov	r5, r4	@ ivtmp.547, ivtmp.554
 6040              	.L425:
 6041              	@ main.c:2675: 					hex2uart(p_buf[k+i], 2);
 6042 027e 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2	@, *_7
ARM GAS  /tmp/ccpmJ073.s 			page 107


 6043 0282 0221     		movs	r1, #2	@,
 6044 0284 FFF7FEFF 		bl	hex2uart	@
 6045              	@ main.c:2674: 				for(u08 k=0;k<32;k++){
 6046 0288 B542     		cmp	r5, r6	@ ivtmp.547, ivtmp.555
 6047 028a F8D1     		bne	.L425	@,
 6048              	@ main.c:2677: 				UaPutS("  ");
 6049 028c 5046     		mov	r0, r10	@, tmp384
 6050 028e FFF7FEFF 		bl	UaPutS	@
 6051              	.L428:
 6052              	@ main.c:2679: 					if ( p_buf[k+i]<0x20 || p_buf[k+i]>127 ) UaPutC('.');
 6053 0292 2078     		ldrb	r0, [r4]	@ zero_extendqisi2	@ _13, *_12
 6054 0294 0134     		adds	r4, r4, #1	@ ivtmp.540, ivtmp.540,
 6055 0296 A0F12003 		sub	r3, r0, #32	@ tmp288, _13,
 6056 029a 5F2B     		cmp	r3, #95	@ tmp288,
 6057 029c 88BF     		it	hi
 6058 029e 2E20     		movhi	r0, #46	@,
 6059              	@ main.c:2680: 					else UaPutC(p_buf[k+i]);
 6060 02a0 FFF7FEFF 		bl	UaPutC	@
 6061              	@ main.c:2678: 				for(u08 k=0;k<32;k++){
 6062 02a4 AC42     		cmp	r4, r5	@ ivtmp.540, ivtmp.547
 6063 02a6 F4D1     		bne	.L428	@,
 6064              	@ main.c:2682: 				UaPutS("\r\n ");
 6065 02a8 4846     		mov	r0, r9	@, tmp385
 6066 02aa FFF7FEFF 		bl	UaPutS	@
 6067              	@ main.c:2671: 			for(u32 i=0;i<2048;i+=32){
 6068 02ae 4745     		cmp	r7, r8	@ ivtmp.554, _241
 6069 02b0 06F12006 		add	r6, r6, #32	@ ivtmp.555, ivtmp.555,
 6070 02b4 3C46     		mov	r4, r7	@ ivtmp.554, ivtmp.554
 6071 02b6 24D0     		beq	.L450	@,
 6072 02b8 2037     		adds	r7, r7, #32	@ ivtmp.554, ivtmp.554,
 6073 02ba DBE7     		b	.L429	@
 6074              	.L422:
 6075              	@ main.c:2714: 		UaPutK("\r\n Godzina = ");
 6076 02bc 2748     		ldr	r0, .L455+68	@,
 6077 02be FFF7FEFF 		bl	UaPutK	@
 6078              	@ main.c:2715: 		datetime.hor = UART_getNum();
 6079 02c2 FFF7FEFF 		bl	UART_getNum	@
 6080 02c6 264C     		ldr	r4, .L455+72	@ tmp309,
 6081 02c8 A070     		strb	r0, [r4, #2]	@, datetime.hor
 6082              	@ main.c:2716: 		UaPutK("\r\n Minut   = ");
 6083 02ca 2648     		ldr	r0, .L455+76	@,
 6084 02cc FFF7FEFF 		bl	UaPutK	@
 6085              	@ main.c:2717: 		datetime.min = UART_getNum();
 6086 02d0 FFF7FEFF 		bl	UART_getNum	@
 6087 02d4 6070     		strb	r0, [r4, #1]	@, datetime.min
 6088              	@ main.c:2718: 		UaPutK("\r\n Sekunda = ");
 6089 02d6 2448     		ldr	r0, .L455+80	@,
 6090 02d8 FFF7FEFF 		bl	UaPutK	@
 6091              	@ main.c:2719: 		datetime.sec = UART_getNum();
 6092 02dc FFF7FEFF 		bl	UART_getNum	@
 6093              	@ main.c:2723: 		datetime.mdy=18;		// 1..31	dzien miesiaca
 6094 02e0 0B23     		movs	r3, #11	@ tmp321,
 6095              	@ main.c:2721: 		datetime.yer=2016;	// 1970..2106
 6096 02e2 4FF4FC61 		mov	r1, #2016	@ tmp317,
 6097              	@ main.c:2726: 		datetime.sec=30;		// 0..59	sekunda
 6098 02e6 214A     		ldr	r2, .L455+84	@ tmp319,
 6099              	@ main.c:2727: 		rtc_SetTime(&datetime );
ARM GAS  /tmp/ccpmJ073.s 			page 108


 6100 02e8 2046     		mov	r0, r4	@, tmp309
 6101              	@ main.c:2726: 		datetime.sec=30;		// 0..59	sekunda
 6102 02ea 2260     		str	r2, [r4]	@ tmp319, MEM[(unsigned char *)&datetime]
 6103              	@ main.c:2723: 		datetime.mdy=18;		// 1..31	dzien miesiaca
 6104 02ec 2371     		strb	r3, [r4, #4]	@ tmp321, MEM[(unsigned char *)&datetime + 4B]
 6105              	@ main.c:2721: 		datetime.yer=2016;	// 1970..2106
 6106 02ee E180     		strh	r1, [r4, #6]	@ movhi	@ tmp317, datetime.yer
 6107              	@ main.c:2727: 		rtc_SetTime(&datetime );
 6108 02f0 FFF7FEFF 		bl	rtc_SetTime	@
 6109              	@ main.c:2800: 	UaPutS("\r\n ");
 6110 02f4 0C48     		ldr	r0, .L455+16	@,
 6111 02f6 FFF7FEFF 		bl	UaPutS	@
 6112              	@ main.c:2801: }
 6113 02fa 0DF5057D 		add	sp, sp, #532	@,,
 6114              		@ sp needed	@
 6115 02fe BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 6116              	.L450:
 6117              	@ main.c:2687: 			crc16_spi2((u16*)p_buf,2048, &crc16 );
 6118 0302 5846     		mov	r0, fp	@, p_buf
 6119 0304 0DF10A02 		add	r2, sp, #10	@ tmp392,,
 6120 0308 4FF40061 		mov	r1, #2048	@,
 6121 030c FEE6     		b	.L453	@
 6122              	.L434:
 6123              	@ main.c:2794: 		} else UaPutK("\r\n Read Error !!!");
 6124 030e 1848     		ldr	r0, .L455+88	@,
 6125 0310 FFF7FEFF 		bl	UaPutK	@
 6126 0314 04E7     		b	.L416	@
 6127              	.L456:
 6128 0316 00BF     		.align	2
 6129              	.L455:
 6130 0318 E0000000 		.word	.LC80
 6131 031c EC000000 		.word	.LC81
 6132 0320 10E000E0 		.word	-536813552
 6133 0324 00000000 		.word	Timt
 6134 0328 30000000 		.word	.LC67
 6135 032c 34000000 		.word	.LC68
 6136 0330 00010000 		.word	.LC82
 6137 0334 398EE338 		.word	954437177
 6138 0338 40000000 		.word	.LC70
 6139 033c 48000000 		.word	.LC71
 6140 0340 60000000 		.word	.LC72
 6141 0344 D4000000 		.word	.LC79
 6142 0348 B0000000 		.word	.LC76
 6143 034c C0000000 		.word	.LC77
 6144 0350 C4000000 		.word	.LC78
 6145 0354 00000000 		.word	.LC65
 6146 0358 18000000 		.word	.LC66
 6147 035c 80000000 		.word	.LC73
 6148 0360 00000000 		.word	.LANCHOR19
 6149 0364 90000000 		.word	.LC74
 6150 0368 A0000000 		.word	.LC75
 6151 036c 1E320A12 		.word	302658078
 6152 0370 0C010000 		.word	.LC83
 6153 0374 3C000000 		.word	.LC69
 6154 0378 48000000 		.word	.LC19
 6155              		.size	fun_tool, .-fun_tool
 6156              		.section	.text.qtouch_mesaure,"ax",%progbits
ARM GAS  /tmp/ccpmJ073.s 			page 109


 6157              		.align	1
 6158              		.p2align 2,,3
 6159              		.global	qtouch_mesaure
 6160              		.syntax unified
 6161              		.thumb
 6162              		.thumb_func
 6163              		.fpu softvfp
 6164              		.type	qtouch_mesaure, %function
 6165              	qtouch_mesaure:
 6166              		@ args = 0, pretend = 0, frame = 0
 6167              		@ frame_needed = 0, uses_anonymous_args = 0
 6168              		@ link register save eliminated.
 6169              	@ main.c:3145: 		PE2_o = 0;
 6170 0000 0021     		movs	r1, #0	@ tmp118,
 6171 0002 0E4B     		ldr	r3, .L466	@ tmp117,
 6172              	@ main.c:3146: 		while(PE4_i == 1);
 6173 0004 0E4A     		ldr	r2, .L466+4	@ tmp119,
 6174              	@ main.c:3145: 		PE2_o = 0;
 6175 0006 1960     		str	r1, [r3]	@ tmp118, MEM[(volatile long unsigned int *)1109590408B]
 6176              	.L458:
 6177              	@ main.c:3146: 		while(PE4_i == 1);
 6178 0008 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109590288B]
 6179 000a 012B     		cmp	r3, #1	@ _1,
 6180 000c FCD0     		beq	.L458	@,
 6181              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 6182 000e 0D4B     		ldr	r3, .L466+8	@ tmp120,
 6183 0010 0D49     		ldr	r1, .L466+12	@ tmp131,
 6184              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 6185 0012 1846     		mov	r0, r3	@ tmp123, tmp120
 6186              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 6187 0014 9B68     		ldr	r3, [r3, #8]	@ _10, MEM[(struct SysTick_Type *)3758153744B].VAL
 6188 0016 0B60     		str	r3, [r1]	@ _10, delay_us
 6189              	.L459:
 6190              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 6191 0018 0B68     		ldr	r3, [r1]	@ delay_us.48_11, delay_us
 6192 001a 8268     		ldr	r2, [r0, #8]	@ _12, MEM[(struct SysTick_Type *)3758153744B].VAL
 6193 001c 9B1A     		subs	r3, r3, r2	@ tmp124, delay_us.48_11, _12
 6194 001e 112B     		cmp	r3, #17	@ tmp124,
 6195 0020 FAD9     		bls	.L459	@,
 6196              	@ main.c:3148: 		PE2_o = 1;
 6197 0022 0121     		movs	r1, #1	@ tmp126,
 6198              	@ main.c:3144: 		u32 i=0;
 6199 0024 0020     		movs	r0, #0	@ <retval>,
 6200              	@ main.c:3148: 		PE2_o = 1;
 6201 0026 054B     		ldr	r3, .L466	@ tmp125,
 6202              	@ main.c:3149: 		do{i++;} while (PE4_i == 0);
 6203 0028 054A     		ldr	r2, .L466+4	@ tmp127,
 6204              	@ main.c:3148: 		PE2_o = 1;
 6205 002a 1960     		str	r1, [r3]	@ tmp126, MEM[(volatile long unsigned int *)1109590408B]
 6206              	.L460:
 6207              	@ main.c:3149: 		do{i++;} while (PE4_i == 0);
 6208 002c 1368     		ldr	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109590288B]
 6209 002e 0130     		adds	r0, r0, #1	@ <retval>, <retval>,
 6210 0030 002B     		cmp	r3, #0	@ _2
 6211 0032 FBD0     		beq	.L460	@
 6212              	@ main.c:3150: 		PE2_o = 0;
 6213 0034 0022     		movs	r2, #0	@ tmp129,
ARM GAS  /tmp/ccpmJ073.s 			page 110


 6214 0036 014B     		ldr	r3, .L466	@ tmp128,
 6215 0038 1A60     		str	r2, [r3]	@ tmp129, MEM[(volatile long unsigned int *)1109590408B]
 6216              	@ main.c:3152: 	}
 6217 003a 7047     		bx	lr	@
 6218              	.L467:
 6219              		.align	2
 6220              	.L466:
 6221 003c 88012342 		.word	1109590408
 6222 0040 10012342 		.word	1109590288
 6223 0044 10E000E0 		.word	-536813552
 6224 0048 00000000 		.word	delay_us
 6225              		.size	qtouch_mesaure, .-qtouch_mesaure
 6226              		.section	.text.qtouch,"ax",%progbits
 6227              		.align	1
 6228              		.p2align 2,,3
 6229              		.global	qtouch
 6230              		.syntax unified
 6231              		.thumb
 6232              		.thumb_func
 6233              		.fpu softvfp
 6234              		.type	qtouch, %function
 6235              	qtouch:
 6236              		@ args = 0, pretend = 0, frame = 0
 6237              		@ frame_needed = 0, uses_anonymous_args = 0
 6238              	@ main.c:3155: 		GPIOE->CRL = (GPIOE->CRL & 0xfff0f0ff) | 0x00040300;	
 6239 0000 114A     		ldr	r2, .L473	@ tmp119,
 6240              	@ main.c:3153: void qtouch(void)					{
 6241 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 6242              	@ main.c:3155: 		GPIOE->CRL = (GPIOE->CRL & 0xfff0f0ff) | 0x00040300;	
 6243 0006 1368     		ldr	r3, [r2]	@ _1, MEM[(struct GPIO_TypeDef *)1073813504B].CRL
 6244 0008 104D     		ldr	r5, .L473+4	@ tmp131,
 6245 000a 23F47023 		bic	r3, r3, #983040	@ tmp120, _1,
 6246 000e 23F47063 		bic	r3, r3, #3840	@ tmp120, tmp120,
 6247 0012 43F48023 		orr	r3, r3, #262144	@ _3, tmp120,
 6248 0016 43F44073 		orr	r3, r3, #768	@ _3, _3,
 6249              	@ main.c:3157: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL) ){
 6250 001a 0D4C     		ldr	r4, .L473+8	@ tmp125,
 6251 001c 0D4E     		ldr	r6, .L473+12	@ tmp127,
 6252              	@ main.c:3160: 				UaPutS("\r\n QT =");		sint2uart(qt);
 6253 001e DFF83880 		ldr	r8, .L473+16	@ tmp132,
 6254              	@ main.c:3155: 		GPIOE->CRL = (GPIOE->CRL & 0xfff0f0ff) | 0x00040300;	
 6255 0022 1360     		str	r3, [r2]	@ _3, MEM[(struct GPIO_TypeDef *)1073813504B].CRL
 6256              	.L469:
 6257              	@ main.c:3157: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL) ){
 6258 0024 2B68     		ldr	r3, [r5]	@ trg0.172_4, trg0
 6259 0026 A268     		ldr	r2, [r4, #8]	@ _5, MEM[(struct SysTick_Type *)3758153744B].VAL
 6260 0028 9B1A     		subs	r3, r3, r2	@ tmp126, trg0.172_4, _5
 6261 002a B342     		cmp	r3, r6	@ tmp126, tmp127
 6262 002c FAD9     		bls	.L469	@,
 6263              	@ main.c:3158: 				trg0 = SysTick->VAL;
 6264 002e A368     		ldr	r3, [r4, #8]	@ _7, MEM[(struct SysTick_Type *)3758153744B].VAL
 6265 0030 2B60     		str	r3, [r5]	@ _7, trg0
 6266              	@ main.c:3159: 				qt = qtouch_mesaure();
 6267 0032 FFF7FEFF 		bl	qtouch_mesaure	@
 6268 0036 0746     		mov	r7, r0	@ qt,
 6269              	@ main.c:3160: 				UaPutS("\r\n QT =");		sint2uart(qt);
 6270 0038 4046     		mov	r0, r8	@, tmp132
ARM GAS  /tmp/ccpmJ073.s 			page 111


 6271 003a FFF7FEFF 		bl	UaPutS	@
 6272 003e 3846     		mov	r0, r7	@, qt
 6273 0040 FFF7FEFF 		bl	sint2uart	@
 6274 0044 EEE7     		b	.L469	@
 6275              	.L474:
 6276 0046 00BF     		.align	2
 6277              	.L473:
 6278 0048 00180140 		.word	1073813504
 6279 004c 00000000 		.word	trg0
 6280 0050 10E000E0 		.word	-536813552
 6281 0054 20AA4400 		.word	4500000
 6282 0058 00000000 		.word	.LC84
 6283              		.size	qtouch, .-qtouch
 6284              		.section	.text.DHT_Tool,"ax",%progbits
 6285              		.align	1
 6286              		.p2align 2,,3
 6287              		.global	DHT_Tool
 6288              		.syntax unified
 6289              		.thumb
 6290              		.thumb_func
 6291              		.fpu softvfp
 6292              		.type	DHT_Tool, %function
 6293              	DHT_Tool:
 6294              		@ args = 0, pretend = 0, frame = 0
 6295              		@ frame_needed = 0, uses_anonymous_args = 0
 6296              		@ link register save eliminated.
 6297              	@ main.c:3354: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6298 0000 0A49     		ldr	r1, .L476	@ tmp116,
 6299              	@ main.c:3355: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 6300 0002 0B4A     		ldr	r2, .L476+4	@ tmp121,
 6301              	@ main.c:3354: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6302 0004 4B68     		ldr	r3, [r1, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 6303              	@ main.c:3358: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 6304 0006 0B48     		ldr	r0, .L476+8	@ tmp124,
 6305              	@ main.c:3354: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6306 0008 23F0F023 		bic	r3, r3, #-268374016	@ tmp117, _1,
 6307 000c 23F47023 		bic	r3, r3, #983040	@ tmp117, tmp117,
 6308 0010 43F01023 		orr	r3, r3, #268439552	@ _3, tmp117,
 6309 0014 43F48033 		orr	r3, r3, #65536	@ _3, _3,
 6310 0018 4B60     		str	r3, [r1, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 6311              	@ main.c:3355: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 6312 001a 1368     		ldr	r3, [r2]	@ _4, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 6313              	@ main.c:3358: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 6314 001c 0649     		ldr	r1, .L476+12	@ tmp125,
 6315              	@ main.c:3355: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 6316 001e 23F47F23 		bic	r3, r3, #1044480	@ tmp122, _4,
 6317 0022 43F48833 		orr	r3, r3, #69632	@ _6, tmp122,
 6318 0026 1360     		str	r3, [r2]	@ _6, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 6319              	@ main.c:3358: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 6320 0028 0160     		str	r1, [r0]	@ tmp125, oled_hw.mosi
 6321              	@ main.c:3360: }
 6322 002a 7047     		bx	lr	@
 6323              	.L477:
 6324              		.align	2
 6325              	.L476:
 6326 002c 00080140 		.word	1073809408
 6327 0030 000C0140 		.word	1073810432
ARM GAS  /tmp/ccpmJ073.s 			page 112


 6328 0034 00000000 		.word	oled_hw
 6329 0038 8C812142 		.word	1109492108
 6330              		.size	DHT_Tool, .-DHT_Tool
 6331              		.section	.text.SPI_Tool_Menu,"ax",%progbits
 6332              		.align	1
 6333              		.p2align 2,,3
 6334              		.global	SPI_Tool_Menu
 6335              		.syntax unified
 6336              		.thumb
 6337              		.thumb_func
 6338              		.fpu softvfp
 6339              		.type	SPI_Tool_Menu, %function
 6340              	SPI_Tool_Menu:
 6341              		@ args = 0, pretend = 0, frame = 0
 6342              		@ frame_needed = 0, uses_anonymous_args = 0
 6343 0000 08B5     		push	{r3, lr}	@
 6344              	@ main.c:3362: 	UaPutK("\n\r\n======= STM32F1 SPI TOOL =========================\r\n");
 6345 0002 0848     		ldr	r0, .L480	@,
 6346 0004 FFF7FEFF 		bl	UaPutK	@
 6347              	@ main.c:3363: 	UaPutK(" i - Init      r - Read  sector  e -                \r\n");
 6348 0008 0748     		ldr	r0, .L480+4	@,
 6349 000a FFF7FEFF 		bl	UaPutK	@
 6350              	@ main.c:3364: 	UaPutK(" d - Delete    f - Write sector  s -                \r\n");
 6351 000e 0748     		ldr	r0, .L480+8	@,
 6352 0010 FFF7FEFF 		bl	UaPutK	@
 6353              	@ main.c:3365: 	UaPutK(" m - Modf      c - Copy  sector  n -               \r\n");
 6354 0014 0648     		ldr	r0, .L480+12	@,
 6355 0016 FFF7FEFF 		bl	UaPutK	@
 6356              	@ main.c:3367: }
 6357 001a BDE80840 		pop	{r3, lr}	@
 6358              	@ main.c:3366: 	UaPutK("==================================================\r\n > ");
 6359 001e 0548     		ldr	r0, .L480+16	@,
 6360 0020 FFF7FEBF 		b	UaPutK	@
 6361              	.L481:
 6362              		.align	2
 6363              	.L480:
 6364 0024 00000000 		.word	.LC85
 6365 0028 38000000 		.word	.LC86
 6366 002c 70000000 		.word	.LC87
 6367 0030 A8000000 		.word	.LC88
 6368 0034 94000000 		.word	.LC35
 6369              		.size	SPI_Tool_Menu, .-SPI_Tool_Menu
 6370              		.section	.text.SPI_Tool,"ax",%progbits
 6371              		.align	1
 6372              		.p2align 2,,3
 6373              		.global	SPI_Tool
 6374              		.syntax unified
 6375              		.thumb
 6376              		.thumb_func
 6377              		.fpu softvfp
 6378              		.type	SPI_Tool, %function
 6379              	SPI_Tool:
 6380              		@ args = 0, pretend = 0, frame = 16
 6381              		@ frame_needed = 0, uses_anonymous_args = 0
 6382              	@ main.c:3375: 	LED=1;
 6383 0000 0122     		movs	r2, #1	@ tmp125,
 6384 0002 444B     		ldr	r3, .L495	@ tmp124,
ARM GAS  /tmp/ccpmJ073.s 			page 113


 6385              	@ main.c:3377: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6386 0004 4449     		ldr	r1, .L495+4	@ tmp126,
 6387              	@ main.c:3368: void SPI_Tool(void)				{
 6388 0006 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 6389              	@ main.c:3375: 	LED=1;
 6390 000a 1A60     		str	r2, [r3]	@ tmp125, MEM[(volatile long unsigned int *)1109524916B]
 6391              	@ main.c:3377: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6392 000c 4B68     		ldr	r3, [r1, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 6393              	@ main.c:3378: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 6394 000e 434A     		ldr	r2, .L495+8	@ tmp131,
 6395              	@ main.c:3377: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6396 0010 23F0F023 		bic	r3, r3, #-268374016	@ tmp127, _1,
 6397 0014 23F47023 		bic	r3, r3, #983040	@ tmp127, tmp127,
 6398 0018 43F01023 		orr	r3, r3, #268439552	@ _3, tmp127,
 6399 001c 43F48033 		orr	r3, r3, #65536	@ _3, _3,
 6400 0020 4B60     		str	r3, [r1, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 6401              	@ main.c:3378: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 6402 0022 1368     		ldr	r3, [r2]	@ _4, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 6403              	@ main.c:3380: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 6404 0024 3E48     		ldr	r0, .L495+12	@ tmp134,
 6405              	@ main.c:3378: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 6406 0026 23F47F23 		bic	r3, r3, #1044480	@ tmp132, _4,
 6407 002a 43F48833 		orr	r3, r3, #69632	@ _6, tmp132,
 6408 002e 1360     		str	r3, [r2]	@ _6, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 6409              	@ main.c:3380: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 6410 0030 3C4E     		ldr	r6, .L495+16	@ tmp135,
 6411              	@ main.c:3381: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 6412 0032 3D49     		ldr	r1, .L495+20	@ tmp137,
 6413              	@ main.c:3382: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 6414 0034 3D4D     		ldr	r5, .L495+24	@ tmp139,
 6415              	@ main.c:3383: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 6416 0036 3E4A     		ldr	r2, .L495+28	@ tmp141,
 6417              	@ main.c:3384: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 6418 0038 3E4C     		ldr	r4, .L495+32	@ tmp143,
 6419              	@ main.c:3368: void SPI_Tool(void)				{
 6420 003a 84B0     		sub	sp, sp, #16	@,,
 6421              	@ main.c:3380: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 6422 003c 4660     		str	r6, [r0, #4]	@ tmp135, oled_hw.sck
 6423              	@ main.c:3388: 	int2str(12345678 ,tbuf,8,0);		
 6424 003e 0023     		movs	r3, #0	@,
 6425              	@ main.c:3381: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 6426 0040 0160     		str	r1, [r0]	@ tmp137, oled_hw.mosi
 6427              	@ main.c:3382: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 6428 0042 8560     		str	r5, [r0, #8]	@ tmp139, oled_hw.dc
 6429              	@ main.c:3388: 	int2str(12345678 ,tbuf,8,0);		
 6430 0044 01A9     		add	r1, sp, #4	@ tmp175,,
 6431              	@ main.c:3383: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 6432 0046 C260     		str	r2, [r0, #12]	@ tmp141, oled_hw.cs
 6433              	@ main.c:3384: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 6434 0048 0461     		str	r4, [r0, #16]	@ tmp143, oled_hw.rst
 6435              	@ main.c:3388: 	int2str(12345678 ,tbuf,8,0);		
 6436 004a 0822     		movs	r2, #8	@,
 6437 004c 3A48     		ldr	r0, .L495+36	@,
 6438 004e FFF7FEFF 		bl	int2str	@
 6439              	@ main.c:3389: 	oled_num24(0, 4,tbuf);
 6440 0052 01AA     		add	r2, sp, #4	@ tmp176,,
 6441 0054 0421     		movs	r1, #4	@,
ARM GAS  /tmp/ccpmJ073.s 			page 114


 6442 0056 0020     		movs	r0, #0	@,
 6443 0058 FFF7FEFF 		bl	oled_num24	@
 6444              	@ main.c:3390: 	oled_num24(0, 0,tbuf);
 6445 005c 0021     		movs	r1, #0	@,
 6446 005e 01AA     		add	r2, sp, #4	@ tmp177,,
 6447 0060 0846     		mov	r0, r1	@,
 6448 0062 FFF7FEFF 		bl	oled_num24	@
 6449              	@ main.c:3391: 	oled_refresh_gram();	
 6450 0066 FFF7FEFF 		bl	oled_refresh_gram	@
 6451              	@ main.c:3394: 	SPI2_init();
 6452 006a FFF7FEFF 		bl	SPI2_init	@
 6453 006e 334D     		ldr	r5, .L495+40	@ tmp171,
 6454              	@ main.c:3407: 		UaPutK("\r\n ");
 6455 0070 334C     		ldr	r4, .L495+44	@ tmp172,
 6456              	@ main.c:3413: 			UaPutK("\r\nInit spi    = "); uint2uart(1);
 6457 0072 344F     		ldr	r7, .L495+48	@ tmp173,
 6458              	@ main.c:3418: 			SPI2_CS = 0; 
 6459 0074 2036     		adds	r6, r6, #32	@ tmp174, tmp174,
 6460              	.L483:
 6461              	@ main.c:3401: 		SPI_Tool_Menu();
 6462 0076 FFF7FEFF 		bl	SPI_Tool_Menu	@
 6463              	@ main.c:3402: 		while(!p_Fifo1->rct);
 6464 007a 2A68     		ldr	r2, [r5]	@ p_Fifo1.174_7, p_Fifo1
 6465              	.L484:
 6466              	@ main.c:3402: 		while(!p_Fifo1->rct);
 6467 007c 9388     		ldrh	r3, [r2, #4]	@, p_Fifo1.174_7->rct
 6468 007e 9BB2     		uxth	r3, r3	@ _8, p_Fifo1.174_7->rct
 6469 0080 002B     		cmp	r3, #0	@ _8
 6470 0082 FBD0     		beq	.L484	@
 6471              	@ main.c:3405: 		UART_getChar((char*)&switcH);
 6472 0084 0DF10300 		add	r0, sp, #3	@ tmp178,,
 6473 0088 FFF7FEFF 		bl	UART_getChar	@
 6474              	@ main.c:3407: 		UaPutK("\r\n ");
 6475 008c 2046     		mov	r0, r4	@, tmp172
 6476 008e FFF7FEFF 		bl	UaPutK	@
 6477              	@ main.c:3408: 		switch (switcH)	{
 6478 0092 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2	@ switcH, switcH
 6479 0096 692B     		cmp	r3, #105	@ switcH,
 6480 0098 07D0     		beq	.L486	@,
 6481 009a 722B     		cmp	r3, #114	@ switcH,
 6482 009c 21D0     		beq	.L487	@,
 6483 009e 632B     		cmp	r3, #99	@ switcH,
 6484 00a0 0CD0     		beq	.L494	@,
 6485              	@ main.c:3436: 			UaPutK("Nieznana Komenda");
 6486 00a2 2948     		ldr	r0, .L495+52	@,
 6487 00a4 FFF7FEFF 		bl	UaPutK	@
 6488              	@ main.c:3437: 			break;
 6489 00a8 E5E7     		b	.L483	@
 6490              	.L486:
 6491              	@ main.c:3412: 			SPI2_init();
 6492 00aa FFF7FEFF 		bl	SPI2_init	@
 6493              	@ main.c:3413: 			UaPutK("\r\nInit spi    = "); uint2uart(1);
 6494 00ae 3846     		mov	r0, r7	@, tmp173
 6495 00b0 FFF7FEFF 		bl	UaPutK	@
 6496 00b4 0120     		movs	r0, #1	@,
 6497 00b6 FFF7FEFF 		bl	uint2uart	@
 6498              	@ main.c:3415: 			break;
ARM GAS  /tmp/ccpmJ073.s 			page 115


 6499 00ba DCE7     		b	.L483	@
 6500              	.L494:
 6501              	@ main.c:3427: 			UaPutK("Copy memory");
 6502 00bc 2348     		ldr	r0, .L495+56	@,
 6503 00be FFF7FEFF 		bl	UaPutK	@
 6504              	@ main.c:3428: 			UaPutK("\r\n Src Mem adr = 0x");	reg=UART_getHex();
 6505 00c2 2348     		ldr	r0, .L495+60	@,
 6506 00c4 FFF7FEFF 		bl	UaPutK	@
 6507 00c8 FFF7FEFF 		bl	UART_getHex	@
 6508              	@ main.c:3429: 			UaPutK("\r\n How many byte = ");	reg=UART_getNum();
 6509 00cc 2148     		ldr	r0, .L495+64	@,
 6510 00ce FFF7FEFF 		bl	UaPutK	@
 6511 00d2 FFF7FEFF 		bl	UART_getNum	@
 6512              	@ main.c:3430: 			UaPutK("\r\n Dst mem adr = 0x");	reg=UART_getHex();
 6513 00d6 2048     		ldr	r0, .L495+68	@,
 6514 00d8 FFF7FEFF 		bl	UaPutK	@
 6515 00dc FFF7FEFF 		bl	UART_getHex	@
 6516              	@ main.c:3433: 			break;
 6517 00e0 C9E7     		b	.L483	@
 6518              	.L487:
 6519              	@ main.c:3418: 			SPI2_CS = 0; 
 6520 00e2 4FF00008 		mov	r8, #0	@ tmp156,
 6521              	@ main.c:3419: 			UaPutK("\r\n Reg = ");	reg=UART_getNum();
 6522 00e6 1D48     		ldr	r0, .L495+72	@,
 6523              	@ main.c:3418: 			SPI2_CS = 0; 
 6524 00e8 C6F80080 		str	r8, [r6]	@ tmp156, MEM[(volatile long unsigned int *)1109492144B]
 6525              	@ main.c:3419: 			UaPutK("\r\n Reg = ");	reg=UART_getNum();
 6526 00ec FFF7FEFF 		bl	UaPutK	@
 6527 00f0 FFF7FEFF 		bl	UART_getNum	@
 6528              	@ main.c:3420: 			spi2_rw(reg);						// Read status register
 6529 00f4 C0B2     		uxtb	r0, r0	@,
 6530 00f6 FFF7FEFF 		bl	spi2_rw	@
 6531              	@ main.c:3421: 			UaPutK("\r\n Reg = ");	hex2uart(spi2_rw(0x00),2);
 6532 00fa 1848     		ldr	r0, .L495+72	@,
 6533 00fc FFF7FEFF 		bl	UaPutK	@
 6534 0100 4046     		mov	r0, r8	@, tmp156
 6535 0102 FFF7FEFF 		bl	spi2_rw	@
 6536 0106 0221     		movs	r1, #2	@,
 6537 0108 FFF7FEFF 		bl	hex2uart	@
 6538              	@ main.c:3422: 			SPI2_CS = 1;			
 6539 010c 0123     		movs	r3, #1	@ tmp164,
 6540 010e 3360     		str	r3, [r6]	@ tmp164, MEM[(volatile long unsigned int *)1109492144B]
 6541              	@ main.c:3424: 			break;
 6542 0110 B1E7     		b	.L483	@
 6543              	.L496:
 6544 0112 00BF     		.align	2
 6545              	.L495:
 6546 0114 B4012242 		.word	1109524916
 6547 0118 00080140 		.word	1073809408
 6548 011c 000C0140 		.word	1073810432
 6549 0120 00000000 		.word	oled_hw
 6550 0124 90812142 		.word	1109492112
 6551 0128 8C812142 		.word	1109492108
 6552 012c B0012142 		.word	1109459376
 6553 0130 AC012142 		.word	1109459372
 6554 0134 BC012142 		.word	1109459388
 6555 0138 4E61BC00 		.word	12345678
ARM GAS  /tmp/ccpmJ073.s 			page 116


 6556 013c 00000000 		.word	p_Fifo1
 6557 0140 30000000 		.word	.LC67
 6558 0144 00000000 		.word	.LC89
 6559 0148 68000000 		.word	.LC95
 6560 014c 20000000 		.word	.LC91
 6561 0150 2C000000 		.word	.LC92
 6562 0154 40000000 		.word	.LC93
 6563 0158 54000000 		.word	.LC94
 6564 015c 14000000 		.word	.LC90
 6565              		.size	SPI_Tool, .-SPI_Tool
 6566              		.section	.text.Menu1,"ax",%progbits
 6567              		.align	1
 6568              		.p2align 2,,3
 6569              		.global	Menu1
 6570              		.syntax unified
 6571              		.thumb
 6572              		.thumb_func
 6573              		.fpu softvfp
 6574              		.type	Menu1, %function
 6575              	Menu1:
 6576              		@ args = 0, pretend = 0, frame = 0
 6577              		@ frame_needed = 0, uses_anonymous_args = 0
 6578 0000 08B5     		push	{r3, lr}	@
 6579              	@ main.c:3887: 	UaPutK("\n\r\n======= STM32F4 SD/MMC Card ======================\r\n");
 6580 0002 0848     		ldr	r0, .L499	@,
 6581 0004 FFF7FEFF 		bl	UaPutK	@
 6582              	@ main.c:3888: 	UaPutK(" i - Init      r - Read  sector  e - Erase sector   \r\n");
 6583 0008 0748     		ldr	r0, .L499+4	@,
 6584 000a FFF7FEFF 		bl	UaPutK	@
 6585              	@ main.c:3889: 	UaPutK(" d - Delete    f - Write sector  s - Statistic Card \r\n");
 6586 000e 0748     		ldr	r0, .L499+8	@,
 6587 0010 FFF7FEFF 		bl	UaPutK	@
 6588              	@ main.c:3890: 	UaPutK(" m - Modf mem  c - Copy  sector  n - Next Cluster  \r\n");
 6589 0014 0648     		ldr	r0, .L499+12	@,
 6590 0016 FFF7FEFF 		bl	UaPutK	@
 6591              	@ main.c:3892: }
 6592 001a BDE80840 		pop	{r3, lr}	@
 6593              	@ main.c:3891: 	UaPutK("==================================================\r\n > ");
 6594 001e 0548     		ldr	r0, .L499+16	@,
 6595 0020 FFF7FEBF 		b	UaPutK	@
 6596              	.L500:
 6597              		.align	2
 6598              	.L499:
 6599 0024 00000000 		.word	.LC96
 6600 0028 38000000 		.word	.LC97
 6601 002c 70000000 		.word	.LC98
 6602 0030 A8000000 		.word	.LC99
 6603 0034 94000000 		.word	.LC35
 6604              		.size	Menu1, .-Menu1
 6605              		.section	.text.MemCard_Menu,"ax",%progbits
 6606              		.align	1
 6607              		.p2align 2,,3
 6608              		.global	MemCard_Menu
 6609              		.syntax unified
 6610              		.thumb
 6611              		.thumb_func
 6612              		.fpu softvfp
ARM GAS  /tmp/ccpmJ073.s 			page 117


 6613              		.type	MemCard_Menu, %function
 6614              	MemCard_Menu:
 6615              		@ args = 0, pretend = 0, frame = 40
 6616              		@ frame_needed = 0, uses_anonymous_args = 0
 6617              	@ main.c:3897: 	u16 crc=1,x=0,y1=0,y2=0;
 6618 0000 0123     		movs	r3, #1	@ tmp371,
 6619              	@ main.c:3893: void MemCard_Menu(void)		{
 6620 0002 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 6621 0006 8DB0     		sub	sp, sp, #52	@,,
 6622              	@ main.c:3897: 	u16 crc=1,x=0,y1=0,y2=0;
 6623 0008 ADF81E30 		strh	r3, [sp, #30]	@ movhi	@ tmp371, crc
 6624              	@ main.c:3899: 	TFT_Init();
 6625 000c FFF7FEFF 		bl	TFT_Init	@
 6626              	@ main.c:3900: 	TFT_Clear(BLACK);
 6627 0010 0020     		movs	r0, #0	@,
 6628 0012 FFF7FEFF 		bl	TFT_Clear	@
 6629              	@ main.c:3909: 	crc16_spi2_init();
 6630 0016 FFF7FEFF 		bl	crc16_spi2_init	@
 6631              	@ main.c:3911: 	if(dinit){
 6632 001a A94B     		ldr	r3, .L615	@ tmp701,
 6633 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2	@ dinit, dinit
 6634 001e 002B     		cmp	r3, #0	@ dinit
 6635 0020 00F01084 		beq	.L502	@
 6636              	@ main.c:3912: 		UaPutK("\r\nSD Card Init = "); sint2uart(CardType);
 6637 0024 A74B     		ldr	r3, .L615+4	@ tmp613,
 6638 0026 A848     		ldr	r0, .L615+8	@,
 6639 0028 1C46     		mov	r4, r3	@ tmp613, tmp613
 6640 002a 0393     		str	r3, [sp, #12]	@ tmp613, %sfp
 6641 002c FFF7FEFF 		bl	UaPutK	@
 6642 0030 2078     		ldrb	r0, [r4]	@ zero_extendqisi2	@, CardType
 6643 0032 FFF7FEFF 		bl	sint2uart	@
 6644              	.L503:
 6645              	@ main.c:3897: 	u16 crc=1,x=0,y1=0,y2=0;
 6646 0036 0023     		movs	r3, #0	@ y1,
 6647 0038 6FF4FF70 		mvn	r0, #510	@,
 6648              	@ main.c:3915: 	p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='i';
 6649 003c 0122     		movs	r2, #1	@ tmp380,
 6650 003e 6921     		movs	r1, #105	@ tmp383,
 6651              	@ main.c:3897: 	u16 crc=1,x=0,y1=0,y2=0;
 6652 0040 0493     		str	r3, [sp, #16]	@ y1, %sfp
 6653              	@ main.c:3915: 	p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='i';
 6654 0042 A24B     		ldr	r3, .L615+12	@ tmp708,
 6655 0044 DFF8D492 		ldr	r9, .L615+92	@ _443,
 6656 0048 1B68     		ldr	r3, [r3]	@ p_Fifo1.178_4, p_Fifo1
 6657 004a 4844     		add	r0, r9, r0	@ ivtmp.627, _443,
 6658 004c 9A80     		strh	r2, [r3, #4]	@ movhi	@ tmp380, p_Fifo1.178_4->rct
 6659 004e 0590     		str	r0, [sp, #20]	@ ivtmp.627, %sfp
 6660 0050 5A80     		strh	r2, [r3, #2]	@ movhi	@ tmp380, p_Fifo1.178_4->rwi
 6661 0052 9971     		strb	r1, [r3, #6]	@ tmp383, p_Fifo1.178_4->rbuf
 6662              	.L504:
 6663              	@ main.c:3918: 		Menu1();
 6664 0054 FFF7FEFF 		bl	Menu1	@
 6665              	@ main.c:3919: 		while(!p_Fifo1->rct);
 6666 0058 9C4B     		ldr	r3, .L615+12	@ tmp711,
 6667 005a 1A68     		ldr	r2, [r3]	@ p_Fifo1.181_7, p_Fifo1
 6668              	.L505:
 6669              	@ main.c:3919: 		while(!p_Fifo1->rct);
ARM GAS  /tmp/ccpmJ073.s 			page 118


 6670 005c 9388     		ldrh	r3, [r2, #4]	@, p_Fifo1.181_7->rct
 6671 005e 9BB2     		uxth	r3, r3	@ _8, p_Fifo1.181_7->rct
 6672 0060 002B     		cmp	r3, #0	@ _8
 6673 0062 FBD0     		beq	.L505	@
 6674              	@ main.c:3922: 		UART_getChar((char*)&switcH);
 6675 0064 0DF11D00 		add	r0, sp, #29	@ tmp712,,
 6676 0068 FFF7FEFF 		bl	UART_getChar	@
 6677              	@ main.c:3924: 		UaPutK("\r\n ");
 6678 006c 9848     		ldr	r0, .L615+16	@,
 6679 006e FFF7FEFF 		bl	UaPutK	@
 6680              	@ main.c:3925: 		switch (switcH)	{
 6681 0072 9DF81D30 		ldrb	r3, [sp, #29]	@ zero_extendqisi2	@ switcH, switcH
 6682 0076 523B     		subs	r3, r3, #82	@ tmp391, switcH,
 6683 0078 262B     		cmp	r3, #38	@ tmp391,
 6684 007a 00F27B82 		bhi	.L506	@
 6685 007e DFE813F0 		tbh	[pc, r3, lsl #1]	@ tmp391
 6686              	.L508:
 6687 0082 4202     		.2byte	(.L507-.L508)/2
 6688 0084 7902     		.2byte	(.L506-.L508)/2
 6689 0086 7902     		.2byte	(.L506-.L508)/2
 6690 0088 7902     		.2byte	(.L506-.L508)/2
 6691 008a 7902     		.2byte	(.L506-.L508)/2
 6692 008c 7902     		.2byte	(.L506-.L508)/2
 6693 008e 7902     		.2byte	(.L506-.L508)/2
 6694 0090 7902     		.2byte	(.L506-.L508)/2
 6695 0092 7902     		.2byte	(.L506-.L508)/2
 6696 0094 7902     		.2byte	(.L506-.L508)/2
 6697 0096 7902     		.2byte	(.L506-.L508)/2
 6698 0098 7902     		.2byte	(.L506-.L508)/2
 6699 009a 7902     		.2byte	(.L506-.L508)/2
 6700 009c 7902     		.2byte	(.L506-.L508)/2
 6701 009e 7902     		.2byte	(.L506-.L508)/2
 6702 00a0 7902     		.2byte	(.L506-.L508)/2
 6703 00a2 7902     		.2byte	(.L506-.L508)/2
 6704 00a4 CB01     		.2byte	(.L509-.L508)/2
 6705 00a6 7902     		.2byte	(.L506-.L508)/2
 6706 00a8 7902     		.2byte	(.L506-.L508)/2
 6707 00aa 7901     		.2byte	(.L510-.L508)/2
 6708 00ac 7902     		.2byte	(.L506-.L508)/2
 6709 00ae 7902     		.2byte	(.L506-.L508)/2
 6710 00b0 5101     		.2byte	(.L511-.L508)/2
 6711 00b2 7902     		.2byte	(.L506-.L508)/2
 6712 00b4 7902     		.2byte	(.L506-.L508)/2
 6713 00b6 7902     		.2byte	(.L506-.L508)/2
 6714 00b8 4B02     		.2byte	(.L512-.L508)/2
 6715 00ba 7902     		.2byte	(.L506-.L508)/2
 6716 00bc 7902     		.2byte	(.L506-.L508)/2
 6717 00be 7902     		.2byte	(.L506-.L508)/2
 6718 00c0 D800     		.2byte	(.L513-.L508)/2
 6719 00c2 7000     		.2byte	(.L514-.L508)/2
 6720 00c4 6400     		.2byte	(.L515-.L508)/2
 6721 00c6 9100     		.2byte	(.L516-.L508)/2
 6722 00c8 2B00     		.2byte	(.L517-.L508)/2
 6723 00ca 7902     		.2byte	(.L506-.L508)/2
 6724 00cc 7902     		.2byte	(.L506-.L508)/2
 6725 00ce 2700     		.2byte	(.L518-.L508)/2
 6726              		.p2align 1
ARM GAS  /tmp/ccpmJ073.s 			page 119


 6727              	.L518:
 6728              	@ main.c:4236: 			UaPutK("Testing ...");
 6729 00d0 8048     		ldr	r0, .L615+20	@,
 6730 00d2 FFF7FEFF 		bl	UaPutK	@
 6731              	@ main.c:4238: 			break;
 6732 00d6 BDE7     		b	.L504	@
 6733              	.L517:
 6734              	@ main.c:4134: 			UaPutK("View last sector");
 6735 00d8 7F48     		ldr	r0, .L615+24	@,
 6736 00da FFF7FEFF 		bl	UaPutK	@
 6737              	@ main.c:4135: 			UaPutK("\r\n First Sector = 0x");
 6738 00de 7F48     		ldr	r0, .L615+28	@,
 6739 00e0 FFF7FEFF 		bl	UaPutK	@
 6740              	@ main.c:4136: 			strBlock=UART_getHex();
 6741 00e4 FFF7FEFF 		bl	UART_getHex	@
 6742 00e8 0546     		mov	r5, r0	@ strBlock,
 6743              	@ main.c:4137: 			UaPutK("\r\n Searching ");
 6744 00ea 7D48     		ldr	r0, .L615+32	@,
 6745 00ec FFF7FEFF 		bl	UaPutK	@
 6746              	@ main.c:4146: 				if( mci_read_sect (strBlock++,buffer,1) ) {
 6747 00f0 7C4E     		ldr	r6, .L615+36	@ tmp637,
 6748 00f2 05E0     		b	.L547	@
 6749              	.L546:
 6750              	@ main.c:4156: 			while(crc != 0x822d );
 6751 00f4 48F22D23 		movw	r3, #33325	@ tmp561,
 6752 00f8 BDF81E20 		ldrh	r2, [sp, #30]	@ crc, crc
 6753 00fc 9A42     		cmp	r2, r3	@ crc, tmp561
 6754 00fe 16D0     		beq	.L545	@,
 6755              	.L547:
 6756              	@ main.c:4146: 				if( mci_read_sect (strBlock++,buffer,1) ) {
 6757 0100 0122     		movs	r2, #1	@,
 6758 0102 3146     		mov	r1, r6	@, tmp637
 6759 0104 2846     		mov	r0, r5	@, strBlock
 6760 0106 AC18     		adds	r4, r5, r2	@ strBlock, strBlock,
 6761 0108 FFF7FEFF 		bl	mmc_read_sect	@
 6762              	@ main.c:4153: 					if(!(strBlock%1024)) UaPutC('.');
 6763 010c C4F30903 		ubfx	r3, r4, #0, #10	@ tmp558, strBlock,,
 6764              	@ main.c:4146: 				if( mci_read_sect (strBlock++,buffer,1) ) {
 6765 0110 0028     		cmp	r0, #0	@
 6766 0112 40F06182 		bne	.L608	@
 6767 0116 2546     		mov	r5, r4	@ strBlock, strBlock
 6768              	@ main.c:4153: 					if(!(strBlock%1024)) UaPutC('.');
 6769 0118 002B     		cmp	r3, #0	@ tmp558
 6770 011a EBD1     		bne	.L546	@
 6771              	@ main.c:4153: 					if(!(strBlock%1024)) UaPutC('.');
 6772 011c 2E20     		movs	r0, #46	@,
 6773 011e FFF7FEFF 		bl	UaPutC	@
 6774              	@ main.c:4156: 			while(crc != 0x822d );
 6775 0122 48F22D23 		movw	r3, #33325	@ tmp561,
 6776 0126 BDF81E20 		ldrh	r2, [sp, #30]	@ crc, crc
 6777 012a 9A42     		cmp	r2, r3	@ crc, tmp561
 6778 012c E8D1     		bne	.L547	@,
 6779              	.L545:
 6780              	@ main.c:4186: 			UaPutK("\r\n Find Sector = 0x");	hex2uart(strBlock, 8);
 6781 012e 6E48     		ldr	r0, .L615+40	@,
 6782 0130 FFF7FEFF 		bl	UaPutK	@
 6783 0134 2046     		mov	r0, r4	@, strBlock
ARM GAS  /tmp/ccpmJ073.s 			page 120


 6784 0136 0821     		movs	r1, #8	@,
 6785 0138 FFF7FEFF 		bl	hex2uart	@
 6786              	@ main.c:4187: 			UaPutK("\r\n     lenBlock= ");		sint2uart(lenBlock);
 6787 013c 6B48     		ldr	r0, .L615+44	@,
 6788 013e FFF7FEFF 		bl	UaPutK	@
 6789 0142 0120     		movs	r0, #1	@,
 6790 0144 FFF7FEFF 		bl	sint2uart	@
 6791              	@ main.c:4188: 			break;
 6792 0148 84E7     		b	.L504	@
 6793              	.L515:
 6794              	@ main.c:3947: 			UaPutK("Statistic Card  ");
 6795 014a 6948     		ldr	r0, .L615+48	@,
 6796 014c FFF7FEFF 		bl	UaPutK	@
 6797              	@ main.c:3948: 			if(dinit){
 6798 0150 5B4B     		ldr	r3, .L615	@ tmp715,
 6799 0152 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2	@ dinit, dinit
 6800 0154 002B     		cmp	r3, #0	@ dinit
 6801 0156 40F0EC80 		bne	.L607	@
 6802              	@ main.c:3959: 			}else UaPutK("\r\nSD Card Not Init");
 6803 015a 6648     		ldr	r0, .L615+52	@,
 6804 015c FFF7FEFF 		bl	UaPutK	@
 6805 0160 78E7     		b	.L504	@
 6806              	.L514:
 6807              	@ main.c:4046: 			UaPutK("Read sector");
 6808 0162 6548     		ldr	r0, .L615+56	@,
 6809 0164 FFF7FEFF 		bl	UaPutK	@
 6810              	@ main.c:4047: 			UaPutK("\r\n sectorNumber = 0x");
 6811 0168 6448     		ldr	r0, .L615+60	@,
 6812 016a FFF7FEFF 		bl	UaPutK	@
 6813              	@ main.c:4049: 			strBlock=UART_getHex();
 6814 016e FFF7FEFF 		bl	UART_getHex	@
 6815              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6816 0172 634C     		ldr	r4, .L615+64	@ tmp475,
 6817 0174 634D     		ldr	r5, .L615+68	@ tmp727,
 6818 0176 A368     		ldr	r3, [r4, #8]	@ _373, MEM[(struct SysTick_Type *)3758153744B].VAL
 6819              	@ main.c:4052: 			d=mci_read_sect (strBlock,buffer,1);
 6820 0178 0122     		movs	r2, #1	@,
 6821 017a 5A49     		ldr	r1, .L615+36	@,
 6822              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6823 017c 2B60     		str	r3, [r5]	@ _373, Timt
 6824              	@ main.c:4049: 			strBlock=UART_getHex();
 6825 017e 0746     		mov	r7, r0	@ strBlock,
 6826              	@ main.c:4052: 			d=mci_read_sect (strBlock,buffer,1);
 6827 0180 FFF7FEFF 		bl	mmc_read_sect	@
 6828              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 6829 0184 2A68     		ldr	r2, [r5]	@ Timt.47_370, Timt
 6830 0186 A368     		ldr	r3, [r4, #8]	@ _371, MEM[(struct SysTick_Type *)3758153744B].VAL
 6831              	@ main.c:4054: 			if(d){
 6832 0188 0446     		mov	r4, r0	@ tmp478,
 6833              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 6834 018a D31A     		subs	r3, r2, r3	@ _372, Timt.47_370, _371
 6835 018c 0293     		str	r3, [sp, #8]	@ _372, %sfp
 6836 018e 0893     		str	r3, [sp, #32]	@ _372, MEM[(volatile u32 *)&tim]
 6837              	@ main.c:4054: 			if(d){
 6838 0190 0028     		cmp	r0, #0	@ tmp478
 6839 0192 40F07382 		bne	.L609	@
 6840              	@ main.c:4081: 				UaPutK("\r\n Read Error = ");
ARM GAS  /tmp/ccpmJ073.s 			page 121


 6841 0196 5C48     		ldr	r0, .L615+72	@,
 6842 0198 FFF7FEFF 		bl	UaPutK	@
 6843              	@ main.c:4082: 				uint2uart(d);
 6844 019c 2046     		mov	r0, r4	@, tmp478
 6845 019e FFF7FEFF 		bl	uint2uart	@
 6846 01a2 57E7     		b	.L504	@
 6847              	.L516:
 6848              	@ main.c:4191: 			UaPutK("Read sector");
 6849 01a4 5448     		ldr	r0, .L615+56	@,
 6850 01a6 FFF7FEFF 		bl	UaPutK	@
 6851              	@ main.c:4192: 			UaPutK("\r\n sectorNumber = 0x");
 6852 01aa 5448     		ldr	r0, .L615+60	@,
 6853 01ac FFF7FEFF 		bl	UaPutK	@
 6854              	@ main.c:4194: 			strBlock=UART_getHex();
 6855 01b0 FFF7FEFF 		bl	UART_getHex	@
 6856 01b4 0446     		mov	r4, r0	@ strBlock,
 6857              	@ main.c:4195: 			UaPutK("\r\n sectorNumber = 0x");		hex2uart(strBlock, 8);
 6858 01b6 5148     		ldr	r0, .L615+60	@,
 6859 01b8 FFF7FEFF 		bl	UaPutK	@
 6860 01bc 2046     		mov	r0, r4	@, strBlock
 6861 01be 0821     		movs	r1, #8	@,
 6862 01c0 FFF7FEFF 		bl	hex2uart	@
 6863              	@ main.c:4196: 			while(strBlock <  31116288 ){
 6864 01c4 514B     		ldr	r3, .L615+76	@ tmp748,
 6865 01c6 9C42     		cmp	r4, r3	@ strBlock, tmp748
 6866 01c8 26D8     		bhi	.L549	@,
 6867              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6868 01ca 4D4E     		ldr	r6, .L615+64	@ tmp570,
 6869              	@ main.c:4199: 				if( mci_read_sect (strBlock,buffer,1*16)) {
 6870 01cc 454D     		ldr	r5, .L615+36	@ tmp634,
 6871              	.L548:
 6872              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6873 01ce B368     		ldr	r3, [r6, #8]	@ _382, MEM[(struct SysTick_Type *)3758153744B].VAL
 6874 01d0 4C4F     		ldr	r7, .L615+68	@ tmp749,
 6875              	@ main.c:4199: 				if( mci_read_sect (strBlock,buffer,1*16)) {
 6876 01d2 1022     		movs	r2, #16	@,
 6877 01d4 2946     		mov	r1, r5	@, tmp634
 6878 01d6 2046     		mov	r0, r4	@, strBlock
 6879              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6880 01d8 3B60     		str	r3, [r7]	@ _382, Timt
 6881              	@ main.c:4199: 				if( mci_read_sect (strBlock,buffer,1*16)) {
 6882 01da FFF7FEFF 		bl	mmc_read_sect	@
 6883 01de 0028     		cmp	r0, #0	@
 6884 01e0 00F0CC81 		beq	.L550	@
 6885              	@ main.c:4200: 					crc16_spi2((u16*)buffer,256*16, &crc );
 6886 01e4 0DF11E02 		add	r2, sp, #30	@ tmp750,,
 6887 01e8 4FF48051 		mov	r1, #4096	@,
 6888 01ec 2846     		mov	r0, r5	@, tmp634
 6889 01ee FFF7FEFF 		bl	crc16_spi2	@
 6890              	@ main.c:4201: 					if( crc ) {
 6891 01f2 BDF81E30 		ldrh	r3, [sp, #30]	@ crc, crc
 6892 01f6 002B     		cmp	r3, #0	@ crc
 6893 01f8 40F0E181 		bne	.L610	@
 6894              	.L551:
 6895              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 6896 01fc 414B     		ldr	r3, .L615+68	@ tmp751,
 6897              	@ main.c:4207: 				if(p_Fifo1->rct) break;
ARM GAS  /tmp/ccpmJ073.s 			page 122


 6898 01fe 334A     		ldr	r2, .L615+12	@ tmp752,
 6899              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 6900 0200 1B68     		ldr	r3, [r3]	@ Timt.47_383, Timt
 6901 0202 B168     		ldr	r1, [r6, #8]	@ _384, MEM[(struct SysTick_Type *)3758153744B].VAL
 6902              	@ main.c:4207: 				if(p_Fifo1->rct) break;
 6903 0204 1268     		ldr	r2, [r2]	@ p_Fifo1.207_87, p_Fifo1
 6904              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 6905 0206 5B1A     		subs	r3, r3, r1	@ _385, Timt.47_383, _384
 6906 0208 0893     		str	r3, [sp, #32]	@ _385, MEM[(volatile u32 *)&tim]
 6907              	@ main.c:4207: 				if(p_Fifo1->rct) break;
 6908 020a 9388     		ldrh	r3, [r2, #4]	@, p_Fifo1.207_87->rct
 6909              	@ main.c:4204: 					strBlock+=1*16;
 6910 020c 1034     		adds	r4, r4, #16	@ strBlock, strBlock,
 6911              	@ main.c:4207: 				if(p_Fifo1->rct) break;
 6912 020e 9BB2     		uxth	r3, r3	@ _88, p_Fifo1.207_87->rct
 6913 0210 13B9     		cbnz	r3, .L549	@ _88,
 6914              	@ main.c:4196: 			while(strBlock <  31116288 ){
 6915 0212 3E4B     		ldr	r3, .L615+76	@ tmp754,
 6916 0214 9C42     		cmp	r4, r3	@ strBlock, tmp754
 6917 0216 DAD9     		bls	.L548	@,
 6918              	.L549:
 6919              	@ main.c:4210: 			UaPutK("\r\n Block = ");	hex2uart(strBlock,8); hex2uart(crc,4);
 6920 0218 3D48     		ldr	r0, .L615+80	@,
 6921 021a FFF7FEFF 		bl	UaPutK	@
 6922 021e 2046     		mov	r0, r4	@, strBlock
 6923 0220 0821     		movs	r1, #8	@,
 6924 0222 FFF7FEFF 		bl	hex2uart	@
 6925 0226 0421     		movs	r1, #4	@,
 6926 0228 BDF81E00 		ldrh	r0, [sp, #30]	@, crc
 6927 022c FFF7FEFF 		bl	hex2uart	@
 6928              	@ main.c:4211: 			break;
 6929 0230 10E7     		b	.L504	@
 6930              	.L513:
 6931              	@ main.c:4217: 				UaPutK("\r\n SD_Status \r\n ");
 6932 0232 3848     		ldr	r0, .L615+84	@,
 6933 0234 FFF7FEFF 		bl	UaPutK	@
 6934              	@ main.c:4218: 				hex2uart(0,4);
 6935 0238 0421     		movs	r1, #4	@,
 6936 023a 0020     		movs	r0, #0	@,
 6937 023c FFF7FEFF 		bl	hex2uart	@
 6938 0240 0024     		movs	r4, #0	@ ivtmp.628,
 6939              	.L555:
 6940              	@ main.c:4219: 				for(u08 k=0;k<8;k++){ hex2uart(k, 2);	}
 6941 0242 2046     		mov	r0, r4	@, ivtmp.628
 6942 0244 0221     		movs	r1, #2	@,
 6943 0246 0134     		adds	r4, r4, #1	@ ivtmp.628, ivtmp.628,
 6944 0248 FFF7FEFF 		bl	hex2uart	@
 6945 024c 082C     		cmp	r4, #8	@ ivtmp.628,
 6946 024e F8D1     		bne	.L555	@,
 6947              	@ main.c:4220: 				UaPutK("\r\n\n ");
 6948 0250 3148     		ldr	r0, .L615+88	@,
 6949 0252 FFF7FEFF 		bl	UaPutK	@
 6950 0256 4FF00008 		mov	r8, #0	@ ivtmp.625,
 6951 025a 224F     		ldr	r7, .L615+36	@ ivtmp.627,
 6952              	@ main.c:4226: 					UaPutS("  ");
 6953 025c DFF8C0B0 		ldr	fp, .L615+96	@ tmp625,
 6954              	@ main.c:4231: 					UaPutS("\r\n ");
ARM GAS  /tmp/ccpmJ073.s 			page 123


 6955 0260 DFF86CA0 		ldr	r10, .L615+16	@ tmp626,
 6956 0264 07F10806 		add	r6, r7, #8	@ ivtmp.626, ivtmp.627,
 6957              	.L560:
 6958              	@ main.c:4222: 					unt2uart(i*8,4);	UaPutC(' ');
 6959 0268 0421     		movs	r1, #4	@,
 6960 026a 4046     		mov	r0, r8	@, ivtmp.625
 6961 026c FFF7FEFF 		bl	unt2uart	@
 6962 0270 2020     		movs	r0, #32	@,
 6963 0272 FFF7FEFF 		bl	UaPutC	@
 6964 0276 3C46     		mov	r4, r7	@ ivtmp.618, ivtmp.627
 6965              	.L556:
 6966              	@ main.c:4224: 						hex2uart(buffer[k+i], 2);
 6967 0278 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2	@, MEM[base: _425, offset: 0B]
 6968 027c 0221     		movs	r1, #2	@,
 6969 027e FFF7FEFF 		bl	hex2uart	@
 6970              	@ main.c:4223: 					for(u08 k=0;k<8;k++){
 6971 0282 A642     		cmp	r6, r4	@ ivtmp.626, ivtmp.618
 6972 0284 F8D1     		bne	.L556	@,
 6973              	@ main.c:4226: 					UaPutS("  ");
 6974 0286 5846     		mov	r0, fp	@, tmp625
 6975 0288 FFF7FEFF 		bl	UaPutS	@
 6976 028c 3D46     		mov	r5, r7	@ ivtmp.609, ivtmp.627
 6977              	.L559:
 6978              	@ main.c:4228: 						if ( buffer[k+i]<0x20 || buffer[k+i]>127 ) UaPutC('.');
 6979 028e 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2	@ _99, MEM[base: _423, offset: 0B]
 6980 0292 A0F12003 		sub	r3, r0, #32	@ tmp595, _99,
 6981 0296 5F2B     		cmp	r3, #95	@ tmp595,
 6982 0298 88BF     		it	hi
 6983 029a 2E20     		movhi	r0, #46	@,
 6984              	@ main.c:4229: 						else UaPutC(buffer[k+i]);
 6985 029c FFF7FEFF 		bl	UaPutC	@
 6986              	@ main.c:4227: 					for(u08 k=0;k<8;k++){
 6987 02a0 A542     		cmp	r5, r4	@ ivtmp.609, ivtmp.618
 6988 02a2 F4D1     		bne	.L559	@,
 6989 02a4 08F14008 		add	r8, r8, #64	@ ivtmp.625, ivtmp.625,
 6990              	@ main.c:4231: 					UaPutS("\r\n ");
 6991 02a8 5046     		mov	r0, r10	@, tmp626
 6992 02aa FFF7FEFF 		bl	UaPutS	@
 6993              	@ main.c:4221: 				for(u32 i=0;i<64;i+=8){
 6994 02ae B8F5007F 		cmp	r8, #512	@ ivtmp.625,
 6995 02b2 06F10806 		add	r6, r6, #8	@ ivtmp.626, ivtmp.626,
 6996 02b6 07F10807 		add	r7, r7, #8	@ ivtmp.627, ivtmp.627,
 6997 02ba D5D1     		bne	.L560	@,
 6998 02bc CAE6     		b	.L504	@
 6999              	.L616:
 7000 02be 00BF     		.align	2
 7001              	.L615:
 7002 02c0 00000000 		.word	.LANCHOR20
 7003 02c4 00000000 		.word	CardType
 7004 02c8 00000000 		.word	.LC100
 7005 02cc 00000000 		.word	p_Fifo1
 7006 02d0 30000000 		.word	.LC67
 7007 02d4 14030000 		.word	.LC144
 7008 02d8 68020000 		.word	.LC135
 7009 02dc 7C020000 		.word	.LC136
 7010 02e0 94020000 		.word	.LC137
 7011 02e4 00000000 		.word	buffer.8851
ARM GAS  /tmp/ccpmJ073.s 			page 124


 7012 02e8 BC020000 		.word	.LC139
 7013 02ec D0020000 		.word	.LC140
 7014 02f0 8C000000 		.word	.LC106
 7015 02f4 A0000000 		.word	.LC107
 7016 02f8 E0000000 		.word	.LC80
 7017 02fc DC010000 		.word	.LC126
 7018 0300 10E000E0 		.word	-536813552
 7019 0304 00000000 		.word	Timt
 7020 0308 00020000 		.word	.LC128
 7021 030c FFCBDA01 		.word	31116287
 7022 0310 E4020000 		.word	.LC141
 7023 0314 00030000 		.word	.LC143
 7024 0318 34000000 		.word	.LC68
 7025 031c FF010000 		.word	buffer.8851+511
 7026 0320 3C000000 		.word	.LC69
 7027              	.L511:
 7028              	@ main.c:3929: 			dinit=mci_init();
 7029 0324 FFF7FEFF 		bl	mmc_init	@
 7030 0328 AF4B     		ldr	r3, .L617	@ tmp713,
 7031 032a 1870     		strb	r0, [r3]	@ tmp392, dinit
 7032              	@ main.c:3930: 			if(dinit){
 7033 032c 0028     		cmp	r0, #0	@ tmp392
 7034 032e 00F0EF80 		beq	.L537	@
 7035              	.L607:
 7036              	@ main.c:3953: 				if(	mci_read_config (&mmcfg)){
 7037 0332 09A8     		add	r0, sp, #36	@ tmp716,,
 7038 0334 FFF7FEFF 		bl	mmc_read_config	@
 7039 0338 0028     		cmp	r0, #0	@
 7040 033a 3FF48BAE 		beq	.L504	@
 7041              	@ main.c:3954: 					UaPutK("\r\nSD Card ser_num    = "); uint2uart(mmcfg.sernum);
 7042 033e AB48     		ldr	r0, .L617+4	@,
 7043 0340 FFF7FEFF 		bl	UaPutK	@
 7044 0344 0998     		ldr	r0, [sp, #36]	@, mmcfg.sernum
 7045 0346 FFF7FEFF 		bl	uint2uart	@
 7046              	@ main.c:3955: 					UaPutK("\r\nSD Card block_num  = "); uint2uart(mmcfg.blocknr);
 7047 034a A948     		ldr	r0, .L617+8	@,
 7048 034c FFF7FEFF 		bl	UaPutK	@
 7049 0350 0A98     		ldr	r0, [sp, #40]	@, mmcfg.blocknr
 7050 0352 FFF7FEFF 		bl	uint2uart	@
 7051              	@ main.c:3956: 					UaPutK("\r\nSD Card read_blen  = "); uint2uart(mmcfg.read_blen);
 7052 0356 A748     		ldr	r0, .L617+12	@,
 7053 0358 FFF7FEFF 		bl	UaPutK	@
 7054 035c BDF82C00 		ldrh	r0, [sp, #44]	@, mmcfg.read_blen
 7055 0360 FFF7FEFF 		bl	uint2uart	@
 7056              	@ main.c:3957: 					UaPutK("\r\nSD Card write_blen = "); uint2uart(mmcfg.write_blen);
 7057 0364 A448     		ldr	r0, .L617+16	@,
 7058 0366 FFF7FEFF 		bl	UaPutK	@
 7059 036a BDF82E00 		ldrh	r0, [sp, #46]	@, mmcfg.write_blen
 7060 036e FFF7FEFF 		bl	uint2uart	@
 7061 0372 6FE6     		b	.L504	@
 7062              	.L510:
 7063              	@ main.c:3963: 			UaPutK("Fill sector");
 7064 0374 A148     		ldr	r0, .L617+20	@,
 7065 0376 FFF7FEFF 		bl	UaPutK	@
 7066              	@ main.c:3964: 			UaPutK("\r\n Start Block  = 0x");		strBlock=UART_getHex();
 7067 037a A148     		ldr	r0, .L617+24	@,
 7068 037c FFF7FEFF 		bl	UaPutK	@
ARM GAS  /tmp/ccpmJ073.s 			page 125


 7069 0380 FFF7FEFF 		bl	UART_getHex	@
 7070 0384 0446     		mov	r4, r0	@ strBlock,
 7071              	@ main.c:3966: 			UaPutK("\r\n End   Blocks = 0x");		dstBlock=UART_getHex();
 7072 0386 9F48     		ldr	r0, .L617+28	@,
 7073 0388 FFF7FEFF 		bl	UaPutK	@
 7074 038c FFF7FEFF 		bl	UART_getHex	@
 7075              	@ main.c:3967: 			dstBlock = dstBlock > strBlock ? dstBlock - strBlock + 1 : 1;
 7076 0390 8442     		cmp	r4, r0	@ strBlock, dstBlock
 7077 0392 80F02581 		bcs	.L561	@,
 7078              	@ main.c:3967: 			dstBlock = dstBlock > strBlock ? dstBlock - strBlock + 1 : 1;
 7079 0396 0130     		adds	r0, r0, #1	@ tmp423, dstBlock,
 7080 0398 051B     		subs	r5, r0, r4	@ iftmp.185_131, tmp423, strBlock
 7081 039a 05F1FF3B 		add	fp, r5, #-1	@ prephitmp_139, iftmp.185_131,
 7082              	.L522:
 7083              	@ main.c:3969: 			UaPutK("\r\n Num Blocks   = ");				uint2uart(dstBlock);
 7084 039e 9A48     		ldr	r0, .L617+32	@,
 7085 03a0 FFF7FEFF 		bl	UaPutK	@
 7086 03a4 2846     		mov	r0, r5	@, iftmp.185_131
 7087 03a6 FFF7FEFF 		bl	uint2uart	@
 7088              	@ main.c:3970: 			UaPutK("\r\n Data to fill = 0x");
 7089 03aa 9848     		ldr	r0, .L617+36	@,
 7090 03ac FFF7FEFF 		bl	UaPutK	@
 7091              	@ main.c:3971: 			znak=UART_getHex();
 7092 03b0 FFF7FEFF 		bl	UART_getHex	@
 7093 03b4 964B     		ldr	r3, .L617+40	@ ivtmp.599,
 7094 03b6 C0B2     		uxtb	r0, r0	@ znak,
 7095              	.L523:
 7096              	@ main.c:3973: 				buffer[i] = znak;
 7097 03b8 03F8010F 		strb	r0, [r3, #1]!	@ znak, MEM[base: _101, offset: 0B]
 7098              	@ main.c:3972: 			for(u32 i=0;i<512;i++){
 7099 03bc 4B45     		cmp	r3, r9	@ ivtmp.599, _443
 7100 03be FBD1     		bne	.L523	@,
 7101              	@ main.c:3975: 			while(dstBlock--){
 7102 03c0 002D     		cmp	r5, #0	@ iftmp.185_131
 7103 03c2 3FF447AE 		beq	.L504	@
 7104 03c6 651C     		adds	r5, r4, #1	@ strBlock, strBlock,
 7105              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7106 03c8 924F     		ldr	r7, .L617+44	@ tmp429,
 7107              	@ main.c:3978: 				d = mci_write_sect(strBlock, buffer, 1);
 7108 03ca DFF88482 		ldr	r8, .L617+104	@ tmp620,
 7109              	@ main.c:3986: 						UaPutS("\r\n Fill OK ");
 7110 03ce DFF8A8A2 		ldr	r10, .L617+144	@ tmp621,
 7111 03d2 AB44     		add	fp, fp, r5	@ _134, strBlock
 7112 03d4 07E0     		b	.L526	@
 7113              	.L524:
 7114              	@ main.c:3984: 					if(!(strBlock%1024)){
 7115 03d6 002A     		cmp	r2, #0	@ tmp434
 7116 03d8 00F0DB80 		beq	.L611	@
 7117              	.L525:
 7118              	@ main.c:3975: 			while(dstBlock--){
 7119 03dc AB45     		cmp	fp, r5	@ _134, strBlock
 7120              	@ main.c:3992: 				strBlock++;
 7121 03de 2C46     		mov	r4, r5	@ strBlock, strBlock
 7122              	@ main.c:3975: 			while(dstBlock--){
 7123 03e0 3FF438AE 		beq	.L504	@,
 7124 03e4 0135     		adds	r5, r5, #1	@ strBlock, strBlock,
 7125              	.L526:
ARM GAS  /tmp/ccpmJ073.s 			page 126


 7126              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7127 03e6 BB68     		ldr	r3, [r7, #8]	@ _366, MEM[(struct SysTick_Type *)3758153744B].VAL
 7128 03e8 8B4E     		ldr	r6, .L617+48	@ tmp717,
 7129              	@ main.c:3978: 				d = mci_write_sect(strBlock, buffer, 1);
 7130 03ea 0122     		movs	r2, #1	@,
 7131 03ec 4146     		mov	r1, r8	@, tmp620
 7132 03ee 2046     		mov	r0, r4	@, strBlock
 7133              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7134 03f0 3360     		str	r3, [r6]	@ _366, Timt
 7135              	@ main.c:3978: 				d = mci_write_sect(strBlock, buffer, 1);
 7136 03f2 FFF7FEFF 		bl	mmc_write_sect	@
 7137              	@ main.c:3984: 					if(!(strBlock%1024)){
 7138 03f6 C4F30902 		ubfx	r2, r4, #0, #10	@ tmp434, strBlock,,
 7139              	@ main.c:3979: 				if(d==0) {
 7140 03fa 0646     		mov	r6, r0	@ tmp432,
 7141 03fc 0028     		cmp	r0, #0	@ tmp432
 7142 03fe EAD1     		bne	.L524	@
 7143              	@ main.c:3980: 					UaPutS("\r\n Fill error = 0x");
 7144 0400 8648     		ldr	r0, .L617+52	@,
 7145 0402 FFF7FEFF 		bl	UaPutS	@
 7146              	@ main.c:3981: 					hex2uart(strBlock,8); hex2uart(d,2);
 7147 0406 2046     		mov	r0, r4	@, strBlock
 7148 0408 0821     		movs	r1, #8	@,
 7149 040a FFF7FEFF 		bl	hex2uart	@
 7150 040e 3046     		mov	r0, r6	@, tmp432
 7151 0410 0221     		movs	r1, #2	@,
 7152 0412 FFF7FEFF 		bl	hex2uart	@
 7153 0416 E1E7     		b	.L525	@
 7154              	.L509:
 7155              	@ main.c:4015: 			UaPutK("Copy memory");
 7156 0418 8148     		ldr	r0, .L617+56	@,
 7157 041a FFF7FEFF 		bl	UaPutK	@
 7158              	@ main.c:4016: 			UaPutK("\r\n Src Mem adr = 0x");	strBlock=UART_getHex();
 7159 041e 8148     		ldr	r0, .L617+60	@,
 7160 0420 FFF7FEFF 		bl	UaPutK	@
 7161 0424 FFF7FEFF 		bl	UART_getHex	@
 7162 0428 0446     		mov	r4, r0	@ strBlock,
 7163              	@ main.c:4017: 			UaPutK("\r\n How many byte = ");	lenBlock=UART_getNum();
 7164 042a 7F48     		ldr	r0, .L617+64	@,
 7165 042c FFF7FEFF 		bl	UaPutK	@
 7166 0430 FFF7FEFF 		bl	UART_getNum	@
 7167 0434 8246     		mov	r10, r0	@ _38,
 7168              	@ main.c:4018: 			UaPutK("\r\n Dst mem adr = 0x");	dstBlock=UART_getHex();
 7169 0436 7D48     		ldr	r0, .L617+68	@,
 7170 0438 FFF7FEFF 		bl	UaPutK	@
 7171 043c FFF7FEFF 		bl	UART_getHex	@
 7172              	@ main.c:4021: 			for(u32 bl=(dstBlock/512);bl <= ((dstBlock+lenBlock-1)/512); bl++){
 7173 0440 8244     		add	r10, r10, r0	@ _130, dstBlock
 7174 0442 0AF1FF37 		add	r7, r10, #-1	@ tmp460, _130,
 7175 0446 7F0A     		lsrs	r7, r7, #9	@ _129, tmp460,
 7176 0448 4FEA502B 		lsr	fp, r0, #9	@ bl, dstBlock,
 7177 044c 5F45     		cmp	r7, fp	@ _129, bl
 7178              	@ main.c:4020: 			u32 dbl = dstBlock%512, sBlk=strBlock/512, sMem=strBlock%512;
 7179 044e 4FEA5426 		lsr	r6, r4, #9	@ sBlk, strBlock,
 7180 0452 C0F30805 		ubfx	r5, r0, #0, #9	@ dbl, dstBlock,,
 7181 0456 C4F30804 		ubfx	r4, r4, #0, #9	@ sMem, strBlock,,
 7182              	@ main.c:4021: 			for(u32 bl=(dstBlock/512);bl <= ((dstBlock+lenBlock-1)/512); bl++){
ARM GAS  /tmp/ccpmJ073.s 			page 127


 7183 045a FFF4FBAD 		bcc	.L504	@,
 7184              	@ main.c:4031: 					if (bl == ((dstBlock+lenBlock)/512))	hex2uart((dstBlock+lenBlock)%512, 3);		//L
 7185 045e 4FEA5A23 		lsr	r3, r10, #9	@ _43, _130,
 7186 0462 0293     		str	r3, [sp, #8]	@ _43, %sfp
 7187 0464 5346     		mov	r3, r10	@ _130, _130
 7188              	@ main.c:4022: 				if (mci_read_sect(bl,buffer,1)){
 7189 0466 DFF8E881 		ldr	r8, .L617+104	@ tmp617,
 7190              	@ main.c:4031: 					if (bl == ((dstBlock+lenBlock)/512))	hex2uart((dstBlock+lenBlock)%512, 3);		//L
 7191 046a DA46     		mov	r10, fp	@ bl, bl
 7192 046c 9B46     		mov	fp, r3	@ _130, _130
 7193 046e 04E0     		b	.L529	@
 7194              	.L527:
 7195              	@ main.c:4021: 			for(u32 bl=(dstBlock/512);bl <= ((dstBlock+lenBlock-1)/512); bl++){
 7196 0470 0AF1010A 		add	r10, r10, #1	@ bl, bl,
 7197 0474 5745     		cmp	r7, r10	@ _129, bl
 7198 0476 FFF4EDAD 		bcc	.L504	@,
 7199              	.L529:
 7200              	@ main.c:4022: 				if (mci_read_sect(bl,buffer,1)){
 7201 047a 0122     		movs	r2, #1	@,
 7202 047c 4146     		mov	r1, r8	@, tmp617
 7203 047e 5046     		mov	r0, r10	@, bl
 7204 0480 FFF7FEFF 		bl	mmc_read_sect	@
 7205 0484 0028     		cmp	r0, #0	@
 7206 0486 F3D0     		beq	.L527	@
 7207              	@ main.c:4023: 					UaPutK("\r\n ReadB 0x");							hex2uart(sBlk++,3);
 7208 0488 6948     		ldr	r0, .L617+72	@,
 7209 048a FFF7FEFF 		bl	UaPutK	@
 7210 048e 0321     		movs	r1, #3	@,
 7211 0490 3046     		mov	r0, r6	@, sBlk
 7212 0492 FFF7FEFF 		bl	hex2uart	@
 7213 0496 0136     		adds	r6, r6, #1	@ sBlk, sBlk,
 7214              	@ main.c:4024: 					UaPutC(',');													hex2uart(sBlk, 	3);
 7215 0498 2C20     		movs	r0, #44	@,
 7216 049a FFF7FEFF 		bl	UaPutC	@
 7217 049e 0321     		movs	r1, #3	@,
 7218 04a0 3046     		mov	r0, r6	@, sBlk
 7219 04a2 FFF7FEFF 		bl	hex2uart	@
 7220              	@ main.c:4025: 					UaPutK("  From 0x");							    hex2uart(sMem, 	3);
 7221 04a6 6348     		ldr	r0, .L617+76	@,
 7222 04a8 FFF7FEFF 		bl	UaPutK	@
 7223 04ac 0321     		movs	r1, #3	@,
 7224 04ae 2046     		mov	r0, r4	@, sMem
 7225 04b0 FFF7FEFF 		bl	hex2uart	@
 7226 04b4 04F50074 		add	r4, r4, #512	@ _445, sMem,
 7227              	@ main.c:4027: 					UaPutK("->0x");											  hex2uart(sMem + (0x200-dbl), 3);
 7228 04b8 5F48     		ldr	r0, .L617+80	@,
 7229 04ba FFF7FEFF 		bl	UaPutK	@
 7230              	@ main.c:4026: 					sMem = sMem + (0x200-dbl);
 7231 04be 641B     		subs	r4, r4, r5	@ sMem, _445, dbl
 7232              	@ main.c:4027: 					UaPutK("->0x");											  hex2uart(sMem + (0x200-dbl), 3);
 7233 04c0 C5F50070 		rsb	r0, r5, #512	@ tmp466, dbl,
 7234 04c4 0321     		movs	r1, #3	@,
 7235 04c6 2044     		add	r0, r0, r4	@, sMem
 7236 04c8 FFF7FEFF 		bl	hex2uart	@
 7237              	@ main.c:4028: 					UaPutK("  WriteB 0x");								hex2uart(bl, 		3);
 7238 04cc 5B48     		ldr	r0, .L617+84	@,
 7239 04ce FFF7FEFF 		bl	UaPutK	@
ARM GAS  /tmp/ccpmJ073.s 			page 128


 7240 04d2 0321     		movs	r1, #3	@,
 7241 04d4 5046     		mov	r0, r10	@, bl
 7242 04d6 FFF7FEFF 		bl	hex2uart	@
 7243              	@ main.c:4029: 					UaPutK("  0x");					  						hex2uart(dbl, 	3);
 7244 04da 5948     		ldr	r0, .L617+88	@,
 7245 04dc FFF7FEFF 		bl	UaPutK	@
 7246 04e0 2846     		mov	r0, r5	@, dbl
 7247 04e2 0321     		movs	r1, #3	@,
 7248 04e4 FFF7FEFF 		bl	hex2uart	@
 7249              	@ main.c:4030: 					UaPutK("->0x");
 7250 04e8 5348     		ldr	r0, .L617+80	@,
 7251 04ea FFF7FEFF 		bl	UaPutK	@
 7252              	@ main.c:4031: 					if (bl == ((dstBlock+lenBlock)/512))	hex2uart((dstBlock+lenBlock)%512, 3);		//L
 7253 04ee 029B     		ldr	r3, [sp, #8]	@ _43, %sfp
 7254 04f0 0321     		movs	r1, #3	@,
 7255 04f2 5345     		cmp	r3, r10	@ _43, bl
 7256 04f4 0CBF     		ite	eq
 7257 04f6 CBF30800 		ubfxeq	r0, fp, #0, #9	@, _130,,
 7258              	@ main.c:4032: 					else																	hex2uart(0x200, 3);
 7259 04fa 4FF40070 		movne	r0, #512	@,
 7260 04fe FFF7FEFF 		bl	hex2uart	@
 7261              	@ main.c:4033: 					dbl = 0;
 7262 0502 0025     		movs	r5, #0	@ dbl,
 7263 0504 B4E7     		b	.L527	@
 7264              	.L507:
 7265              	@ main.c:4087: 			if(CardType){
 7266 0506 039B     		ldr	r3, [sp, #12]	@ tmp613, %sfp
 7267 0508 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2	@ CardType, CardType
 7268 050a 002B     		cmp	r3, #0	@ CardType
 7269 050c 40F02081 		bne	.L612	@
 7270              	.L537:
 7271              	@ main.c:4130: 			} else UaPutK("\r\nSD Card Init ERROR ");
 7272 0510 4C48     		ldr	r0, .L617+92	@,
 7273 0512 FFF7FEFF 		bl	UaPutK	@
 7274 0516 9DE5     		b	.L504	@
 7275              	.L512:
 7276              	@ main.c:3998: 			UaPutS("Modify memory");
 7277 0518 4B48     		ldr	r0, .L617+96	@,
 7278 051a FFF7FEFF 		bl	UaPutS	@
 7279              	@ main.c:3999: 			UaPutS("\r\n Memory Addr = 0x");
 7280 051e 4B48     		ldr	r0, .L617+100	@,
 7281 0520 FFF7FEFF 		bl	UaPutS	@
 7282              	@ main.c:4001: 			strBlock=UART_getHex();
 7283 0524 FFF7FEFF 		bl	UART_getHex	@
 7284              	@ main.c:4003: 			if (mci_read_sect	(strBlock/512, buffer, 1)){
 7285 0528 450A     		lsrs	r5, r0, #9	@ _31, strBlock,
 7286              	@ main.c:4001: 			strBlock=UART_getHex();
 7287 052a 0446     		mov	r4, r0	@ strBlock,
 7288              	@ main.c:4003: 			if (mci_read_sect	(strBlock/512, buffer, 1)){
 7289 052c 0122     		movs	r2, #1	@,
 7290 052e 2846     		mov	r0, r5	@, _31
 7291 0530 4749     		ldr	r1, .L617+104	@,
 7292 0532 FFF7FEFF 		bl	mmc_read_sect	@
 7293 0536 0028     		cmp	r0, #0	@
 7294 0538 3FF48CAD 		beq	.L504	@
 7295              	@ main.c:4004: 				UaPutS("\r\n Memory Data = 0x");
 7296 053c 4548     		ldr	r0, .L617+108	@,
ARM GAS  /tmp/ccpmJ073.s 			page 129


 7297 053e FFF7FEFF 		bl	UaPutS	@
 7298              	@ main.c:4005: 				hex2uart(buffer[strBlock%512], 2);
 7299 0542 059E     		ldr	r6, [sp, #20]	@ ivtmp.627, %sfp
 7300 0544 C4F30804 		ubfx	r4, r4, #0, #9	@ _33, strBlock,,
 7301 0548 0221     		movs	r1, #2	@,
 7302 054a 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2	@, buffer
 7303 054c FFF7FEFF 		bl	hex2uart	@
 7304              	@ main.c:4006: 				UaPutS("\r\n New Data    = 0x");
 7305 0550 4148     		ldr	r0, .L617+112	@,
 7306 0552 FFF7FEFF 		bl	UaPutS	@
 7307              	@ main.c:4007: 				StrBlock=UART_getHex();
 7308 0556 FFF7FEFF 		bl	UART_getHex	@
 7309              	@ main.c:4010: 				if (mci_write_sect		(strBlock/512, buffer,1))  UaPutS("\r\n Modify OK");
 7310 055a 0122     		movs	r2, #1	@,
 7311              	@ main.c:4008: 				buffer[strBlock%512] = StrBlock;
 7312 055c 3055     		strb	r0, [r6, r4]	@, buffer
 7313              	@ main.c:4010: 				if (mci_write_sect		(strBlock/512, buffer,1))  UaPutS("\r\n Modify OK");
 7314 055e 3C49     		ldr	r1, .L617+104	@,
 7315 0560 2846     		mov	r0, r5	@, _31
 7316 0562 FFF7FEFF 		bl	mmc_write_sect	@
 7317 0566 0028     		cmp	r0, #0	@
 7318 0568 3FF474AD 		beq	.L504	@
 7319              	@ main.c:4010: 				if (mci_write_sect		(strBlock/512, buffer,1))  UaPutS("\r\n Modify OK");
 7320 056c 3B48     		ldr	r0, .L617+116	@,
 7321 056e FFF7FEFF 		bl	UaPutS	@
 7322 0572 6FE5     		b	.L504	@
 7323              	.L506:
 7324              	@ main.c:4241: 			UaPutK("Unkr_dma_buf Command !");
 7325 0574 3A48     		ldr	r0, .L617+120	@,
 7326 0576 FFF7FEFF 		bl	UaPutK	@
 7327              	@ main.c:4242: 			break;
 7328 057a 6BE5     		b	.L504	@
 7329              	.L550:
 7330              	@ main.c:4206: 				} else UaPutK("\r\n Read Error ");
 7331 057c 3948     		ldr	r0, .L617+124	@,
 7332 057e FFF7FEFF 		bl	UaPutK	@
 7333              	@ main.c:4207: 				if(p_Fifo1->rct) break;
 7334 0582 394B     		ldr	r3, .L617+128	@ tmp753,
 7335 0584 1B68     		ldr	r3, [r3]	@ p_Fifo1.207_492, p_Fifo1
 7336 0586 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.207_492->rct
 7337 0588 9BB2     		uxth	r3, r3	@ _493, p_Fifo1.207_492->rct
 7338 058a 002B     		cmp	r3, #0	@ _493
 7339 058c 3FF41FAE 		beq	.L548	@
 7340 0590 42E6     		b	.L549	@
 7341              	.L611:
 7342              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7343 0592 214B     		ldr	r3, .L617+48	@ tmp718,
 7344              	@ main.c:3986: 						UaPutS("\r\n Fill OK ");
 7345 0594 5046     		mov	r0, r10	@, tmp621
 7346              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7347 0596 1E68     		ldr	r6, [r3]	@ Timt.47_367, Timt
 7348 0598 BB68     		ldr	r3, [r7, #8]	@ _368, MEM[(struct SysTick_Type *)3758153744B].VAL
 7349 059a 0292     		str	r2, [sp, #8]	@ tmp434, %sfp
 7350 059c F61A     		subs	r6, r6, r3	@ _369, Timt.47_367, _368
 7351 059e 0896     		str	r6, [sp, #32]	@ _369, MEM[(volatile u32 *)&tim]
 7352              	@ main.c:3986: 						UaPutS("\r\n Fill OK ");
 7353 05a0 FFF7FEFF 		bl	UaPutS	@
ARM GAS  /tmp/ccpmJ073.s 			page 130


 7354              	@ main.c:3987: 						hex2uart(strBlock,  8);
 7355 05a4 2046     		mov	r0, r4	@, strBlock
 7356 05a6 0821     		movs	r1, #8	@,
 7357 05a8 FFF7FEFF 		bl	hex2uart	@
 7358              	@ main.c:3988: 						UaPutS(" Time[us] = " );
 7359 05ac 2F48     		ldr	r0, .L617+132	@,
 7360 05ae FFF7FEFF 		bl	UaPutS	@
 7361              	@ main.c:3989: 						num2uart(tim, 8,0);
 7362 05b2 029A     		ldr	r2, [sp, #8]	@ tmp434, %sfp
 7363 05b4 3046     		mov	r0, r6	@, _369
 7364 05b6 0821     		movs	r1, #8	@,
 7365 05b8 FFF7FEFF 		bl	num2uart	@
 7366 05bc 0EE7     		b	.L525	@
 7367              	.L610:
 7368              	@ main.c:4202: 						UaPutK("\r\n Block = ");	hex2uart(strBlock,8); hex2uart(crc,4);
 7369 05be 2C48     		ldr	r0, .L617+136	@,
 7370 05c0 FFF7FEFF 		bl	UaPutK	@
 7371 05c4 2046     		mov	r0, r4	@, strBlock
 7372 05c6 0821     		movs	r1, #8	@,
 7373 05c8 FFF7FEFF 		bl	hex2uart	@
 7374 05cc 0421     		movs	r1, #4	@,
 7375 05ce BDF81E00 		ldrh	r0, [sp, #30]	@, crc
 7376 05d2 FFF7FEFF 		bl	hex2uart	@
 7377 05d6 11E6     		b	.L551	@
 7378              	.L608:
 7379              	@ main.c:4147: 					UaPutK("\r\n Exit Read Error !!!");
 7380 05d8 2648     		ldr	r0, .L617+140	@,
 7381 05da FFF7FEFF 		bl	UaPutK	@
 7382              	@ main.c:4148: 					break;
 7383 05de A6E5     		b	.L545	@
 7384              	.L561:
 7385 05e0 4FF0000B 		mov	fp, #0	@ prephitmp_139,
 7386              	@ main.c:3967: 			dstBlock = dstBlock > strBlock ? dstBlock - strBlock + 1 : 1;
 7387 05e4 0125     		movs	r5, #1	@ iftmp.185_131,
 7388 05e6 DAE6     		b	.L522	@
 7389              	.L618:
 7390              		.align	2
 7391              	.L617:
 7392 05e8 00000000 		.word	.LANCHOR20
 7393 05ec 2C000000 		.word	.LC102
 7394 05f0 44000000 		.word	.LC103
 7395 05f4 5C000000 		.word	.LC104
 7396 05f8 74000000 		.word	.LC105
 7397 05fc B4000000 		.word	.LC108
 7398 0600 C0000000 		.word	.LC109
 7399 0604 D8000000 		.word	.LC110
 7400 0608 F0000000 		.word	.LC111
 7401 060c 04010000 		.word	.LC112
 7402 0610 FFFFFFFF 		.word	buffer.8851-1
 7403 0614 10E000E0 		.word	-536813552
 7404 0618 00000000 		.word	Timt
 7405 061c 1C010000 		.word	.LC113
 7406 0620 20000000 		.word	.LC91
 7407 0624 2C000000 		.word	.LC92
 7408 0628 40000000 		.word	.LC93
 7409 062c 54000000 		.word	.LC94
 7410 0630 A8010000 		.word	.LC121
ARM GAS  /tmp/ccpmJ073.s 			page 131


 7411 0634 B4010000 		.word	.LC122
 7412 0638 C0010000 		.word	.LC123
 7413 063c C8010000 		.word	.LC124
 7414 0640 D4010000 		.word	.LC125
 7415 0644 14000000 		.word	.LC101
 7416 0648 4C010000 		.word	.LC116
 7417 064c 5C010000 		.word	.LC117
 7418 0650 00000000 		.word	buffer.8851
 7419 0654 70010000 		.word	.LC118
 7420 0658 84010000 		.word	.LC119
 7421 065c 98010000 		.word	.LC120
 7422 0660 20030000 		.word	.LC145
 7423 0664 F0020000 		.word	.LC142
 7424 0668 00000000 		.word	p_Fifo1
 7425 066c 3C010000 		.word	.LC115
 7426 0670 E4020000 		.word	.LC141
 7427 0674 A4020000 		.word	.LC138
 7428 0678 30010000 		.word	.LC114
 7429              	.L609:
 7430              	@ main.c:4055: 				UaPutS("\r\n ");
 7431 067c 7548     		ldr	r0, .L619	@,
 7432 067e FFF7FEFF 		bl	UaPutS	@
 7433              	@ main.c:4056: 				hex2uart(strBlock, 8);
 7434 0682 0821     		movs	r1, #8	@,
 7435 0684 3846     		mov	r0, r7	@, strBlock
 7436 0686 FFF7FEFF 		bl	hex2uart	@
 7437 068a 0024     		movs	r4, #0	@ ivtmp.661,
 7438              	.L531:
 7439              	@ main.c:4058: 					hex2uart(k, 2);
 7440 068c 2046     		mov	r0, r4	@, ivtmp.661
 7441 068e 0221     		movs	r1, #2	@,
 7442 0690 0134     		adds	r4, r4, #1	@ ivtmp.661, ivtmp.661,
 7443 0692 FFF7FEFF 		bl	hex2uart	@
 7444              	@ main.c:4057: 				for(u08 k=0;k<16;k++){
 7445 0696 102C     		cmp	r4, #16	@ ivtmp.661,
 7446 0698 F8D1     		bne	.L531	@,
 7447 069a 6F4D     		ldr	r5, .L619+4	@ _474,
 7448              	@ main.c:4060: 				UaPutS("\r\n\n ");
 7449 069c 6F48     		ldr	r0, .L619+8	@,
 7450              	@ main.c:4066: 					UaPutS("  ");
 7451 069e DFF80CA2 		ldr	r10, .L619+88	@ tmp631,
 7452              	@ main.c:4071: 					UaPutS("\r\n ");
 7453 06a2 DFF8B081 		ldr	r8, .L619	@ tmp632,
 7454              	@ main.c:4060: 				UaPutS("\r\n\n ");
 7455 06a6 FFF7FEFF 		bl	UaPutS	@
 7456              	@ main.c:4062: 					hex2uart(strBlock*512 + i, 8);
 7457 06aa 2E46     		mov	r6, r5	@ ivtmp.660, ivtmp.627
 7458 06ac 0595     		str	r5, [sp, #20]	@ ivtmp.627, %sfp
 7459 06ae C5EB4727 		rsb	r7, r5, r7, lsl #9	@ tmp602, ivtmp.627, strBlock,
 7460 06b2 1035     		adds	r5, r5, #16	@ ivtmp.659, _474,
 7461              	.L536:
 7462 06b4 0821     		movs	r1, #8	@,
 7463 06b6 B819     		adds	r0, r7, r6	@, tmp602, ivtmp.660
 7464 06b8 FFF7FEFF 		bl	hex2uart	@
 7465 06bc 3446     		mov	r4, r6	@ ivtmp.651, ivtmp.660
 7466              	.L532:
 7467              	@ main.c:4064: 						hex2uart(buffer[k+i], 2);
ARM GAS  /tmp/ccpmJ073.s 			page 132


 7468 06be 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2	@, MEM[base: _428, offset: 0B]
 7469 06c2 0221     		movs	r1, #2	@,
 7470 06c4 FFF7FEFF 		bl	hex2uart	@
 7471              	@ main.c:4063: 					for(u08 k=0;k<16;k++){
 7472 06c8 AC42     		cmp	r4, r5	@ ivtmp.651, ivtmp.659
 7473 06ca F8D1     		bne	.L532	@,
 7474              	@ main.c:4066: 					UaPutS("  ");
 7475 06cc 5046     		mov	r0, r10	@, tmp631
 7476 06ce FFF7FEFF 		bl	UaPutS	@
 7477 06d2 B346     		mov	fp, r6	@ ivtmp.642, ivtmp.660
 7478              	.L535:
 7479              	@ main.c:4068: 						if ( buffer[k+i]<0x20 || buffer[k+i]>126 ) UaPutC('.');
 7480 06d4 1BF8010B 		ldrb	r0, [fp], #1	@ zero_extendqisi2	@ _58, MEM[base: _413, offset: 0B]
 7481 06d8 A0F12003 		sub	r3, r0, #32	@ tmp487, _58,
 7482 06dc 5E2B     		cmp	r3, #94	@ tmp487,
 7483 06de 88BF     		it	hi
 7484 06e0 2E20     		movhi	r0, #46	@,
 7485              	@ main.c:4069: 						else UaPutC(buffer[k+i]);
 7486 06e2 FFF7FEFF 		bl	UaPutC	@
 7487              	@ main.c:4067: 					for(u08 k=0;k<16;k++){
 7488 06e6 A345     		cmp	fp, r4	@ ivtmp.642, ivtmp.651
 7489 06e8 F4D1     		bne	.L535	@,
 7490              	@ main.c:4071: 					UaPutS("\r\n ");
 7491 06ea 4046     		mov	r0, r8	@, tmp632
 7492 06ec FFF7FEFF 		bl	UaPutS	@
 7493              	@ main.c:4061: 				for(u32 i=0;i<512;i+=16){
 7494 06f0 5B4B     		ldr	r3, .L619+12	@ tmp733,
 7495 06f2 1036     		adds	r6, r6, #16	@ ivtmp.660, ivtmp.660,
 7496 06f4 9E42     		cmp	r6, r3	@ ivtmp.660, tmp733
 7497 06f6 05F11005 		add	r5, r5, #16	@ ivtmp.659, ivtmp.659,
 7498 06fa DBD1     		bne	.L536	@,
 7499              	@ main.c:4073: 				UaPutK(" t_rsdio = ");	uint2uart(tim/TIM_US);
 7500 06fc 5948     		ldr	r0, .L619+16	@,
 7501 06fe FFF7FEFF 		bl	UaPutK	@
 7502 0702 594E     		ldr	r6, .L619+20	@ tmp735,
 7503 0704 029B     		ldr	r3, [sp, #8]	@ _372, %sfp
 7504              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7505 0706 594D     		ldr	r5, .L619+24	@ tmp493,
 7506              	@ main.c:4073: 				UaPutK(" t_rsdio = ");	uint2uart(tim/TIM_US);
 7507 0708 A6FB0330 		umull	r3, r0, r6, r3	@ tmp697, tmp491, tmp735, _372
 7508 070c 4008     		lsrs	r0, r0, #1	@, tmp491,
 7509 070e FFF7FEFF 		bl	uint2uart	@
 7510              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7511 0712 574C     		ldr	r4, .L619+28	@ tmp738,
 7512 0714 AB68     		ldr	r3, [r5, #8]	@ _377, MEM[(struct SysTick_Type *)3758153744B].VAL
 7513              	@ main.c:4075: 				crc16_spi2( (u16*) buffer,256, &crc );
 7514 0716 0DF11E02 		add	r2, sp, #30	@ tmp737,,
 7515 071a 4FF48071 		mov	r1, #256	@,
 7516 071e 4E48     		ldr	r0, .L619+4	@,
 7517              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7518 0720 2360     		str	r3, [r4]	@ _377, Timt
 7519              	@ main.c:4075: 				crc16_spi2( (u16*) buffer,256, &crc );
 7520 0722 FFF7FEFF 		bl	crc16_spi2	@
 7521              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7522 0726 2468     		ldr	r4, [r4]	@ Timt.47_374, Timt
 7523 0728 AB68     		ldr	r3, [r5, #8]	@ _375, MEM[(struct SysTick_Type *)3758153744B].VAL
 7524              	@ main.c:4078: 				UaPutK(" crc = ");	hex2uart(crc,4);
ARM GAS  /tmp/ccpmJ073.s 			page 133


 7525 072a 5248     		ldr	r0, .L619+32	@,
 7526              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7527 072c E41A     		subs	r4, r4, r3	@ _376, Timt.47_374, _375
 7528 072e 0894     		str	r4, [sp, #32]	@ _376, MEM[(volatile u32 *)&tim]
 7529              	@ main.c:4078: 				UaPutK(" crc = ");	hex2uart(crc,4);
 7530 0730 FFF7FEFF 		bl	UaPutK	@
 7531 0734 0421     		movs	r1, #4	@,
 7532 0736 BDF81E00 		ldrh	r0, [sp, #30]	@, crc
 7533 073a FFF7FEFF 		bl	hex2uart	@
 7534              	@ main.c:4079: 				UaPutK(" t_crc = ");	uint2uart(tim/TIM_US);
 7535 073e 4E48     		ldr	r0, .L619+36	@,
 7536 0740 FFF7FEFF 		bl	UaPutK	@
 7537 0744 A6FB0430 		umull	r3, r0, r6, r4	@ tmp698, tmp503, tmp740, _376
 7538 0748 4008     		lsrs	r0, r0, #1	@, tmp503,
 7539 074a FFF7FEFF 		bl	uint2uart	@
 7540 074e 81E4     		b	.L504	@
 7541              	.L612:
 7542              	@ main.c:4095: 				x=0;
 7543 0750 0024     		movs	r4, #0	@ x,
 7544              	@ main.c:4088: 				UaPutK("Read multi sector");
 7545 0752 4A48     		ldr	r0, .L619+40	@,
 7546 0754 FFF7FEFF 		bl	UaPutK	@
 7547              	@ main.c:4094: 				UaPutK("\r\n Num Sectors  = ");			uint2uart(dstBlock);
 7548 0758 4948     		ldr	r0, .L619+44	@,
 7549 075a FFF7FEFF 		bl	UaPutK	@
 7550 075e 4948     		ldr	r0, .L619+48	@,
 7551 0760 FFF7FEFF 		bl	uint2uart	@
 7552              	@ main.c:4096: 				TFT_Clear(BLACK);
 7553 0764 2046     		mov	r0, r4	@, x
 7554 0766 FFF7FEFF 		bl	TFT_Clear	@
 7555              	@ main.c:4091: 				strBlock = 0;
 7556 076a 2646     		mov	r6, r4	@ strBlock, x
 7557              	@ main.c:4099: 					d = mci_read_sect (strBlock,buffer,1);
 7558 076c 3A4F     		ldr	r7, .L619+4	@ tmp614,
 7559 076e DDF81080 		ldr	r8, [sp, #16]	@ y1, %sfp
 7560 0772 1BE0     		b	.L543	@
 7561              	.L614:
 7562              	@ main.c:4118: 								TFT_dy( x, y1, y2, YELLOW, 0);
 7563 0774 0020     		movs	r0, #0	@ tmp529,
 7564 0776 4FF6E073 		movw	r3, #65504	@,
 7565 077a 0090     		str	r0, [sp]	@ tmp529,
 7566 077c 2046     		mov	r0, r4	@, x
 7567 077e FFF7FEFF 		bl	TFT_dy	@
 7568              	.L542:
 7569              	@ main.c:4124: 							x = (x+1)%(wXmax-wXmin);
 7570 0782 414B     		ldr	r3, .L619+52	@ tmp746,
 7571 0784 0134     		adds	r4, r4, #1	@ tmp530, x,
 7572 0786 A3FB0423 		umull	r2, r3, r3, r4	@ tmp700, tmp531, tmp746, tmp530
 7573 078a 5B09     		lsrs	r3, r3, #5	@ _76, tmp531,
 7574 078c 03EBC302 		add	r2, r3, r3, lsl #3	@ tmp535, _76, _76,
 7575 0790 C3EB4213 		rsb	r3, r3, r2, lsl #5	@ tmp537, _76, tmp535,
 7576 0794 E31A     		subs	r3, r4, r3	@ _76, tmp530, tmp537
 7577 0796 9CB2     		uxth	r4, r3	@ x, _76
 7578              	.L539:
 7579              	@ main.c:4128: 					if(p_Fifo1->rct) break;
 7580 0798 3C4B     		ldr	r3, .L619+56	@ tmp747,
 7581              	@ main.c:4097: 				while(dstBlock--){
ARM GAS  /tmp/ccpmJ073.s 			page 134


 7582 079a 3A4A     		ldr	r2, .L619+48	@ tmp550,
 7583              	@ main.c:4128: 					if(p_Fifo1->rct) break;
 7584 079c 1B68     		ldr	r3, [r3]	@ p_Fifo1.201_77, p_Fifo1
 7585              	@ main.c:4127: 					strBlock++;
 7586 079e 0136     		adds	r6, r6, #1	@ strBlock, strBlock,
 7587              	@ main.c:4128: 					if(p_Fifo1->rct) break;
 7588 07a0 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.201_77->rct
 7589 07a2 9BB2     		uxth	r3, r3	@ _78, p_Fifo1.201_77->rct
 7590 07a4 002B     		cmp	r3, #0	@ _78
 7591 07a6 3BD1     		bne	.L603	@
 7592              	@ main.c:4097: 				while(dstBlock--){
 7593 07a8 9642     		cmp	r6, r2	@ strBlock, tmp550
 7594 07aa 39D0     		beq	.L603	@,
 7595              	.L543:
 7596              	@ main.c:4099: 					d = mci_read_sect (strBlock,buffer,1);
 7597 07ac 0122     		movs	r2, #1	@,
 7598 07ae 3946     		mov	r1, r7	@, tmp614
 7599 07b0 3046     		mov	r0, r6	@, strBlock
 7600 07b2 FFF7FEFF 		bl	mmc_read_sect	@
 7601              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7602 07b6 2D4A     		ldr	r2, .L619+24	@ tmp516,
 7603              	@ main.c:4108: 							if(!(strBlock%4096)){
 7604 07b8 C6F30B03 		ubfx	r3, r6, #0, #12	@ tmp517, strBlock,,
 7605              	@ main.c:4100: 					if(!d) {
 7606 07bc 0028     		cmp	r0, #0	@ tmp512
 7607 07be 32D0     		beq	.L613	@
 7608              	@ main.c:4106: 						if(!(strBlock%256)){
 7609 07c0 16F0FF0F 		tst	r6, #255	@ strBlock
 7610 07c4 E8D1     		bne	.L539	@,
 7611              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7612 07c6 2A49     		ldr	r1, .L619+28	@ tmp743,
 7613 07c8 0D68     		ldr	r5, [r1]	@ Timt.47_378, Timt
 7614 07ca 9268     		ldr	r2, [r2, #8]	@ _379, MEM[(struct SysTick_Type *)3758153744B].VAL
 7615 07cc AD1A     		subs	r5, r5, r2	@ _380, Timt.47_378, _379
 7616 07ce 0895     		str	r5, [sp, #32]	@ _380, MEM[(volatile u32 *)&tim]
 7617              	@ main.c:4108: 							if(!(strBlock%4096)){
 7618 07d0 93B9     		cbnz	r3, .L540	@ tmp517,
 7619              	@ main.c:4109: 								UaPutS("\r\n Read OK ");
 7620 07d2 2F48     		ldr	r0, .L619+60	@,
 7621 07d4 FFF7FEFF 		bl	UaPutS	@
 7622              	@ main.c:4110: 								hex2uart(strBlock,  8);
 7623 07d8 0821     		movs	r1, #8	@,
 7624 07da 3046     		mov	r0, r6	@, strBlock
 7625 07dc FFF7FEFF 		bl	hex2uart	@
 7626              	@ main.c:4111: 								UaPutS(" y2 = " );
 7627 07e0 2C48     		ldr	r0, .L619+64	@,
 7628 07e2 FFF7FEFF 		bl	UaPutS	@
 7629              	@ main.c:4112: 								uint2uart(y1); UaPutS("\t" ); uint2uart(y2);
 7630 07e6 4046     		mov	r0, r8	@, y1
 7631 07e8 FFF7FEFF 		bl	uint2uart	@
 7632 07ec 2A48     		ldr	r0, .L619+68	@,
 7633 07ee FFF7FEFF 		bl	UaPutS	@
 7634 07f2 4046     		mov	r0, r8	@, y1
 7635 07f4 FFF7FEFF 		bl	uint2uart	@
 7636              	.L540:
 7637              	@ main.c:4116: 							y2 = tim/(3*TIM_MS);
 7638 07f8 284A     		ldr	r2, .L619+72	@ tmp744,
ARM GAS  /tmp/ccpmJ073.s 			page 135


 7639 07fa EB08     		lsrs	r3, r5, #3	@ tmp524, _380,
 7640 07fc A2FB0323 		umull	r2, r3, r2, r3	@ tmp699, tmp525, tmp744, tmp524
 7641              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7642 0800 1A4A     		ldr	r2, .L619+24	@ tmp522,
 7643              	@ main.c:4116: 							y2 = tim/(3*TIM_MS);
 7644 0802 5B0A     		lsrs	r3, r3, #9	@ _71, tmp525,
 7645              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7646 0804 9068     		ldr	r0, [r2, #8]	@ _381, MEM[(struct SysTick_Type *)3758153744B].VAL
 7647              	@ main.c:4118: 								TFT_dy( x, y1, y2, YELLOW, 0);
 7648 0806 5FFA88F1 		uxtb	r1, r8	@, y1
 7649 080a DAB2     		uxtb	r2, r3	@, _71
 7650              	@ main.c:4116: 							y2 = tim/(3*TIM_MS);
 7651 080c 1FFA83F8 		uxth	r8, r3	@ y2, _71
 7652              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7653 0810 174B     		ldr	r3, .L619+28	@ tmp745,
 7654 0812 1860     		str	r0, [r3]	@ _381, Timt
 7655              	@ main.c:4117: 							if(x){
 7656 0814 002C     		cmp	r4, #0	@ x
 7657 0816 ADD1     		bne	.L614	@
 7658              	@ main.c:4121: 								TFT_Clear(BLACK);
 7659 0818 2046     		mov	r0, r4	@, x
 7660 081a FFF7FEFF 		bl	TFT_Clear	@
 7661 081e B0E7     		b	.L542	@
 7662              	.L603:
 7663 0820 CDF81080 		str	r8, [sp, #16]	@ y1, %sfp
 7664 0824 16E4     		b	.L504	@
 7665              	.L613:
 7666 0826 0546     		mov	r5, r0	@ tmp512, tmp512
 7667              	@ main.c:4101: 						UaPutS("\r\n Read error = 0x");
 7668 0828 1D48     		ldr	r0, .L619+76	@,
 7669 082a CDF81080 		str	r8, [sp, #16]	@ y1, %sfp
 7670 082e FFF7FEFF 		bl	UaPutS	@
 7671              	@ main.c:4102: 						hex2uart(strBlock,8); hex2uart(d,2);
 7672 0832 3046     		mov	r0, r6	@, strBlock
 7673 0834 0821     		movs	r1, #8	@,
 7674 0836 FFF7FEFF 		bl	hex2uart	@
 7675 083a 2846     		mov	r0, r5	@, tmp512
 7676 083c 0221     		movs	r1, #2	@,
 7677 083e FFF7FEFF 		bl	hex2uart	@
 7678              	@ main.c:4103: 						break;
 7679 0842 07E4     		b	.L504	@
 7680              	.L502:
 7681              	@ main.c:3913: 	} else UaPutK("\r\nSD Card Init ERROR ");
 7682 0844 1748     		ldr	r0, .L619+80	@,
 7683 0846 FFF7FEFF 		bl	UaPutK	@
 7684 084a 174B     		ldr	r3, .L619+84	@ tmp613,
 7685 084c 0393     		str	r3, [sp, #12]	@ tmp613, %sfp
 7686 084e FFF7F2BB 		b	.L503	@
 7687              	.L620:
 7688 0852 00BF     		.align	2
 7689              	.L619:
 7690 0854 30000000 		.word	.LC67
 7691 0858 00000000 		.word	buffer.8851
 7692 085c 34000000 		.word	.LC68
 7693 0860 00020000 		.word	buffer.8851+512
 7694 0864 00010000 		.word	.LC82
 7695 0868 398EE338 		.word	954437177
ARM GAS  /tmp/ccpmJ073.s 			page 136


 7696 086c 10E000E0 		.word	-536813552
 7697 0870 00000000 		.word	Timt
 7698 0874 40000000 		.word	.LC70
 7699 0878 F4010000 		.word	.LC127
 7700 087c 14020000 		.word	.LC129
 7701 0880 28020000 		.word	.LC130
 7702 0884 41420F00 		.word	1000001
 7703 0888 5B268B1C 		.word	478881371
 7704 088c 00000000 		.word	p_Fifo1
 7705 0890 50020000 		.word	.LC132
 7706 0894 5C020000 		.word	.LC133
 7707 0898 64020000 		.word	.LC134
 7708 089c CF0DD626 		.word	651562447
 7709 08a0 3C020000 		.word	.LC131
 7710 08a4 14000000 		.word	.LC101
 7711 08a8 00000000 		.word	CardType
 7712 08ac 3C000000 		.word	.LC69
 7713              		.size	MemCard_Menu, .-MemCard_Menu
 7714              		.section	.text.CopyClock,"ax",%progbits
 7715              		.align	1
 7716              		.p2align 2,,3
 7717              		.global	CopyClock
 7718              		.syntax unified
 7719              		.thumb
 7720              		.thumb_func
 7721              		.fpu softvfp
 7722              		.type	CopyClock, %function
 7723              	CopyClock:
 7724              		@ args = 0, pretend = 0, frame = 8
 7725              		@ frame_needed = 0, uses_anonymous_args = 0
 7726 0000 30B5     		push	{r4, r5, lr}	@
 7727 0002 0D46     		mov	r5, r1	@ lrtc, lrtc
 7728 0004 83B0     		sub	sp, sp, #12	@,,
 7729              	@ main.c:4982: void CopyClock(char *dczas, T_RTC *lrtc)	{
 7730 0006 0446     		mov	r4, r0	@ dczas, dczas
 7731              	@ main.c:4988: 		dczas += 0;	memcpy(dczas,unt2str(lrtc->yer,tbuf,4) ,4);
 7732 0008 6946     		mov	r1, sp	@,
 7733 000a E888     		ldrh	r0, [r5, #6]	@, lrtc_21(D)->yer
 7734 000c 0422     		movs	r2, #4	@,
 7735 000e FFF7FEFF 		bl	unt2str	@
 7736 0012 0368     		ldr	r3, [r0]	@ unaligned	@ tmp138, MEM[(char * {ref-all})_3]
 7737              	@ main.c:4989: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 7738 0014 6946     		mov	r1, sp	@,
 7739              	@ main.c:4988: 		dczas += 0;	memcpy(dczas,unt2str(lrtc->yer,tbuf,4) ,4);
 7740 0016 2360     		str	r3, [r4]	@ unaligned	@ tmp138, MEM[(char * {ref-all})dczas_19(D)]
 7741              	@ main.c:4989: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 7742 0018 2879     		ldrb	r0, [r5, #4]	@ zero_extendqisi2	@, lrtc_21(D)->mon
 7743 001a 0222     		movs	r2, #2	@,
 7744 001c FFF7FEFF 		bl	unt2str	@
 7745 0020 0388     		ldrh	r3, [r0]	@ unaligned	@ _26, MEM[(char * {ref-all})_6]
 7746              	@ main.c:4990: 		dczas += 3; memcpy(dczas,unt2str(lrtc->mdy,tbuf,2) ,2);
 7747 0022 6946     		mov	r1, sp	@,
 7748              	@ main.c:4989: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 7749 0024 A4F80530 		strh	r3, [r4, #5]	@ unaligned	@ _26, MEM[(char * {ref-all})dczas_19(D) + 5B]
 7750              	@ main.c:4990: 		dczas += 3; memcpy(dczas,unt2str(lrtc->mdy,tbuf,2) ,2);
 7751 0028 E878     		ldrb	r0, [r5, #3]	@ zero_extendqisi2	@, lrtc_21(D)->mdy
 7752 002a 0222     		movs	r2, #2	@,
ARM GAS  /tmp/ccpmJ073.s 			page 137


 7753 002c FFF7FEFF 		bl	unt2str	@
 7754 0030 0388     		ldrh	r3, [r0]	@ unaligned	@ _29, MEM[(char * {ref-all})_9]
 7755              	@ main.c:4991: 		dczas += 3; memcpy(dczas,unt2str(lrtc->hor,tbuf,2) ,2);
 7756 0032 6946     		mov	r1, sp	@,
 7757              	@ main.c:4990: 		dczas += 3; memcpy(dczas,unt2str(lrtc->mdy,tbuf,2) ,2);
 7758 0034 2381     		strh	r3, [r4, #8]	@ unaligned	@ _29, MEM[(char * {ref-all})dczas_19(D) + 8B]
 7759              	@ main.c:4991: 		dczas += 3; memcpy(dczas,unt2str(lrtc->hor,tbuf,2) ,2);
 7760 0036 A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2	@, lrtc_21(D)->hor
 7761 0038 0222     		movs	r2, #2	@,
 7762 003a FFF7FEFF 		bl	unt2str	@
 7763 003e 0388     		ldrh	r3, [r0]	@ unaligned	@ _32, MEM[(char * {ref-all})_12]
 7764              	@ main.c:4992: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 7765 0040 6946     		mov	r1, sp	@,
 7766              	@ main.c:4991: 		dczas += 3; memcpy(dczas,unt2str(lrtc->hor,tbuf,2) ,2);
 7767 0042 A4F80B30 		strh	r3, [r4, #11]	@ unaligned	@ _32, MEM[(char * {ref-all})dczas_19(D) + 11B]
 7768              	@ main.c:4992: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 7769 0046 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2	@, lrtc_21(D)->min
 7770 0048 0222     		movs	r2, #2	@,
 7771 004a FFF7FEFF 		bl	unt2str	@
 7772 004e 0388     		ldrh	r3, [r0]	@ unaligned	@ _35, MEM[(char * {ref-all})_15]
 7773              	@ main.c:4993: 		dczas += 3; memcpy(dczas,unt2str(lrtc->sec,tbuf,2) ,2);
 7774 0050 6946     		mov	r1, sp	@,
 7775              	@ main.c:4992: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 7776 0052 E381     		strh	r3, [r4, #14]	@ unaligned	@ _35, MEM[(char * {ref-all})dczas_19(D) + 14B]
 7777              	@ main.c:4993: 		dczas += 3; memcpy(dczas,unt2str(lrtc->sec,tbuf,2) ,2);
 7778 0054 2878     		ldrb	r0, [r5]	@ zero_extendqisi2	@, lrtc_21(D)->sec
 7779 0056 0222     		movs	r2, #2	@,
 7780 0058 FFF7FEFF 		bl	unt2str	@
 7781 005c 0388     		ldrh	r3, [r0]	@ unaligned	@ _38, MEM[(char * {ref-all})_18]
 7782 005e A4F81130 		strh	r3, [r4, #17]	@ unaligned	@ _38, MEM[(char * {ref-all})dczas_19(D) + 17B]
 7783              	@ main.c:4995: 	}
 7784 0062 03B0     		add	sp, sp, #12	@,,
 7785              		@ sp needed	@
 7786 0064 30BD     		pop	{r4, r5, pc}	@
 7787              		.size	CopyClock, .-CopyClock
 7788 0066 00BF     		.section	.text.Intro2,"ax",%progbits
 7789              		.align	1
 7790              		.p2align 2,,3
 7791              		.global	Intro2
 7792              		.syntax unified
 7793              		.thumb
 7794              		.thumb_func
 7795              		.fpu softvfp
 7796              		.type	Intro2, %function
 7797              	Intro2:
 7798              		@ args = 0, pretend = 0, frame = 32
 7799              		@ frame_needed = 0, uses_anonymous_args = 0
 7800 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 7801              	@ main.c:2857: 		uint32_t tim=0;
 7802 0004 0025     		movs	r5, #0	@ tmp236,
 7803              	@ main.c:5174: 		DMA1_Channel1->CCR =  DMA_CCR1_PL_0 | DMA_CCR1_MSIZE_0 | DMA_CCR1_PSIZE_0 | DMA_CC
 7804 0006 41F2A256 		movw	r6, #5538	@ tmp246,
 7805              	@ main.c:2849: void Intro2(void){	
 7806 000a 8BB0     		sub	sp, sp, #44	@,,
 7807              	@ main.c:2852: 		UaPutS("\r\n Start programu... \r\n"); 
 7808 000c B448     		ldr	r0, .L680	@,
 7809 000e FFF7FEFF 		bl	UaPutS	@
ARM GAS  /tmp/ccpmJ073.s 			page 138


 7810              	@ main.c:2879: 		UaPutS("\r\n Debug0..."); 
 7811 0012 B448     		ldr	r0, .L680+4	@,
 7812              	@ main.c:2857: 		uint32_t tim=0;
 7813 0014 0995     		str	r5, [sp, #36]	@ tmp236, tim
 7814              	@ main.c:2879: 		UaPutS("\r\n Debug0..."); 
 7815 0016 FFF7FEFF 		bl	UaPutS	@
 7816              	@ main.c:2880: 		RtcInit();
 7817 001a FFF7FEFF 		bl	RtcInit	@
 7818              	@ main.c:2881: 		rtc_GetTime(1,&Rtc);
 7819 001e B249     		ldr	r1, .L680+8	@,
 7820 0020 0120     		movs	r0, #1	@,
 7821 0022 FFF7FEFF 		bl	rtc_GetTime	@
 7822              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 7823 0026 B148     		ldr	r0, .L680+12	@ tmp249,
 7824              	@ main.c:5169: 		RCC->AHBENR   |= RCC_AHBENR_DMA1EN;					// enable clock for DMA1
 7825 0028 B149     		ldr	r1, .L680+16	@ tmp239,
 7826              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 7827 002a 0446     		mov	r4, r0	@ tmp252, tmp249
 7828              	@ main.c:5169: 		RCC->AHBENR   |= RCC_AHBENR_DMA1EN;					// enable clock for DMA1
 7829 002c 4A69     		ldr	r2, [r1, #20]	@ _190, MEM[(struct RCC_TypeDef *)1073876992B].AHBENR
 7830              	@ main.c:5170: 		DMA1_Channel1->CCR  = 0;										// Disable channel
 7831 002e B14B     		ldr	r3, .L680+20	@ tmp241,
 7832              	@ main.c:5169: 		RCC->AHBENR   |= RCC_AHBENR_DMA1EN;					// enable clock for DMA1
 7833 0030 42F00102 		orr	r2, r2, #1	@ _191, _190,
 7834 0034 4A61     		str	r2, [r1, #20]	@ _191, MEM[(struct RCC_TypeDef *)1073876992B].AHBENR
 7835              	@ main.c:5172: 		DMA1_Channel1->CPAR = (uint32_t)&ADC1->DR;	// Source address:
 7836 0036 A1F56B41 		sub	r1, r1, #60160	@ tmp244, tmp244,
 7837 003a B439     		subs	r1, r1, #180	@ tmp244, tmp244,
 7838              	@ main.c:5187: 		GPIOB->CRH   |= 0x00000090;	// PB9 out
 7839 003c AE4A     		ldr	r2, .L680+24	@ tmp247,
 7840              	@ main.c:5170: 		DMA1_Channel1->CCR  = 0;										// Disable channel
 7841 003e 1D60     		str	r5, [r3]	@ tmp236, MEM[(struct DMA_Channel_TypeDef *)1073872904B].CCR
 7842              	@ main.c:5172: 		DMA1_Channel1->CPAR = (uint32_t)&ADC1->DR;	// Source address:
 7843 0040 9960     		str	r1, [r3, #8]	@ tmp244, MEM[(struct DMA_Channel_TypeDef *)1073872904B].CPAR
 7844              	@ main.c:5174: 		DMA1_Channel1->CCR =  DMA_CCR1_PL_0 | DMA_CCR1_MSIZE_0 | DMA_CCR1_PSIZE_0 | DMA_CC
 7845 0042 1E60     		str	r6, [r3]	@ tmp246, MEM[(struct DMA_Channel_TypeDef *)1073872904B].CCR
 7846              	@ main.c:5187: 		GPIOB->CRH   |= 0x00000090;	// PB9 out
 7847 0044 5368     		ldr	r3, [r2, #4]	@ _192, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 7848              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 7849 0046 AD49     		ldr	r1, .L680+28	@ tmp496,
 7850              	@ main.c:5187: 		GPIOB->CRH   |= 0x00000090;	// PB9 out
 7851 0048 43F09003 		orr	r3, r3, #144	@ _193, _192,
 7852 004c 5360     		str	r3, [r2, #4]	@ _193, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 7853              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 7854 004e 8368     		ldr	r3, [r0, #8]	@ _194, MEM[(struct SysTick_Type *)3758153744B].VAL
 7855 0050 0B60     		str	r3, [r1]	@ _194, delay_us
 7856              	.L624:
 7857              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 7858 0052 0B68     		ldr	r3, [r1]	@ delay_us.48_195, delay_us
 7859 0054 A268     		ldr	r2, [r4, #8]	@ _196, MEM[(struct SysTick_Type *)3758153744B].VAL
 7860 0056 9B1A     		subs	r3, r3, r2	@ tmp253, delay_us.48_195, _196
 7861 0058 592B     		cmp	r3, #89	@ tmp253,
 7862 005a FAD9     		bls	.L624	@,
 7863              	@ main.c:5194: 		TIM4->CCMR2 = TIM_CCMR2_OC4M_2 | TIM_CCMR2_OC4M_1;
 7864 005c 4FF4C045 		mov	r5, #24576	@ tmp270,
 7865              	@ main.c:5195: 		TIM4->CCER  = TIM_CCER_CC4E;
 7866 0060 4FF48050 		mov	r0, #4096	@ tmp273,
ARM GAS  /tmp/ccpmJ073.s 			page 139


 7867              	@ main.c:5190: 		TIM4->PSC   = 100-1;
 7868 0064 4FF0630E 		mov	lr, #99	@ tmp258,
 7869              	@ main.c:5191:     TIM4->ARR   = 120-1;
 7870 0068 4FF0770C 		mov	ip, #119	@ tmp261,
 7871              	@ main.c:5192:     TIM4->CCR4  = 10;		//width pulse on PB9 out channel
 7872 006c 0A27     		movs	r7, #10	@ tmp264,
 7873              	@ main.c:5193: 		TIM4->CCMR1 = 0;
 7874 006e 0026     		movs	r6, #0	@ tmp267,
 7875              	@ main.c:5189: 		RCC->APB1ENR |= RCC_APB1ENR_TIM4EN;
 7876 0070 9F4B     		ldr	r3, .L680+16	@ tmp254,
 7877 0072 DA69     		ldr	r2, [r3, #28]	@ _198, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 7878 0074 42F00402 		orr	r2, r2, #4	@ _199, _198,
 7879 0078 DA61     		str	r2, [r3, #28]	@ _199, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 7880              	@ main.c:5190: 		TIM4->PSC   = 100-1;
 7881 007a A14A     		ldr	r2, .L680+32	@ tmp256,
 7882 007c A2F828E0 		strh	lr, [r2, #40]	@ movhi	@ tmp258, MEM[(struct TIM_TypeDef *)1073743872B].PSC
 7883              	@ main.c:5191:     TIM4->ARR   = 120-1;
 7884 0080 A2F82CC0 		strh	ip, [r2, #44]	@ movhi	@ tmp261, MEM[(struct TIM_TypeDef *)1073743872B].ARR
 7885              	@ main.c:5192:     TIM4->CCR4  = 10;		//width pulse on PB9 out channel
 7886 0084 A2F84070 		strh	r7, [r2, #64]	@ movhi	@ tmp264, MEM[(struct TIM_TypeDef *)1073743872B].CCR4
 7887              	@ main.c:5193: 		TIM4->CCMR1 = 0;
 7888 0088 1683     		strh	r6, [r2, #24]	@ movhi	@ tmp267, MEM[(struct TIM_TypeDef *)1073743872B].CCMR1
 7889              	@ main.c:5194: 		TIM4->CCMR2 = TIM_CCMR2_OC4M_2 | TIM_CCMR2_OC4M_1;
 7890 008a 9583     		strh	r5, [r2, #28]	@ movhi	@ tmp270, MEM[(struct TIM_TypeDef *)1073743872B].CCMR2
 7891              	@ main.c:5195: 		TIM4->CCER  = TIM_CCER_CC4E;
 7892 008c 1084     		strh	r0, [r2, #32]	@ movhi	@ tmp273, MEM[(struct TIM_TypeDef *)1073743872B].CCER
 7893              	@ main.c:5199: 		RCC->APB2ENR  |= RCC_APB2ENR_ADC1EN;			// enable clock for ADC1
 7894 008e 9A69     		ldr	r2, [r3, #24]	@ _200, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 7895              	@ main.c:5201: 		GPIOA->CRL = (GPIOA->CRL & 0xffff0000);
 7896 0090 05F18045 		add	r5, r5, #1073741824	@ tmp278, tmp278,
 7897              	@ main.c:5199: 		RCC->APB2ENR  |= RCC_APB2ENR_ADC1EN;			// enable clock for ADC1
 7898 0094 42F40072 		orr	r2, r2, #512	@ _201, _200,
 7899 0098 9A61     		str	r2, [r3, #24]	@ _201, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 7900              	@ main.c:5200: 		RCC->CFGR 		|= RCC_CFGR_ADCPRE_DIV4;  	// 2/4/6/8 str98
 7901 009a 5868     		ldr	r0, [r3, #4]	@ _202, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 7902              	@ main.c:5201: 		GPIOA->CRL = (GPIOA->CRL & 0xffff0000);
 7903 009c 05F52845 		add	r5, r5, #43008	@ tmp278, tmp278,
 7904              	@ main.c:5200: 		RCC->CFGR 		|= RCC_CFGR_ADCPRE_DIV4;  	// 2/4/6/8 str98
 7905 00a0 40F48040 		orr	r0, r0, #16384	@ _203, _202,
 7906 00a4 5860     		str	r0, [r3, #4]	@ _203, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 7907              	@ main.c:5201: 		GPIOA->CRL = (GPIOA->CRL & 0xffff0000);
 7908 00a6 2B68     		ldr	r3, [r5]	@ _204, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 7909              	@ main.c:5204: 		ADC1->CR1 |= ADC_CR1_SCAN;	// multi channel mode
 7910 00a8 964A     		ldr	r2, .L680+36	@ tmp281,
 7911              	@ main.c:5201: 		GPIOA->CRL = (GPIOA->CRL & 0xffff0000);
 7912 00aa 1B0C     		lsrs	r3, r3, #16	@ _205, _204,
 7913 00ac 1B04     		lsls	r3, r3, #16	@ _205, _205,
 7914 00ae 2B60     		str	r3, [r5]	@ _205, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 7915              	@ main.c:5204: 		ADC1->CR1 |= ADC_CR1_SCAN;	// multi channel mode
 7916 00b0 5368     		ldr	r3, [r2, #4]	@ _206, MEM[(struct ADC_TypeDef *)1073816576B].CR1
 7917              	@ main.c:5205: 		ADC1->CR2 =  ADC_CR2_DMA | ADC_CR2_ADON | ADC_CR2_EXTTRIG | ADC_CR2_EXTSEL_2 | ADC
 7918 00b2 9548     		ldr	r0, .L680+40	@ tmp284,
 7919              	@ main.c:5204: 		ADC1->CR1 |= ADC_CR1_SCAN;	// multi channel mode
 7920 00b4 43F48073 		orr	r3, r3, #256	@ _207, _206,
 7921 00b8 5360     		str	r3, [r2, #4]	@ _207, MEM[(struct ADC_TypeDef *)1073816576B].CR1
 7922              	@ main.c:5205: 		ADC1->CR2 =  ADC_CR2_DMA | ADC_CR2_ADON | ADC_CR2_EXTTRIG | ADC_CR2_EXTSEL_2 | ADC
 7923 00ba 9060     		str	r0, [r2, #8]	@ tmp284, MEM[(struct ADC_TypeDef *)1073816576B].CR2
ARM GAS  /tmp/ccpmJ073.s 			page 140


 7924              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 7925 00bc A368     		ldr	r3, [r4, #8]	@ _208, MEM[(struct SysTick_Type *)3758153744B].VAL
 7926              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 7927 00be 8B4D     		ldr	r5, .L680+12	@ tmp288,
 7928              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 7929 00c0 0B60     		str	r3, [r1]	@ _208, delay_us
 7930              	.L625:
 7931              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 7932 00c2 0B68     		ldr	r3, [r1]	@ delay_us.48_209, delay_us
 7933 00c4 AA68     		ldr	r2, [r5, #8]	@ _210, MEM[(struct SysTick_Type *)3758153744B].VAL
 7934 00c6 9B1A     		subs	r3, r3, r2	@ tmp289, delay_us.48_209, _210
 7935 00c8 082B     		cmp	r3, #8	@ tmp289,
 7936 00ca FAD9     		bls	.L625	@,
 7937              	@ main.c:5215: 		ADC1->SMPR2 = 7<<0*3 | 7<<1*3 ;
 7938 00cc 3F21     		movs	r1, #63	@ tmp295,
 7939              	@ main.c:5210: 		ADC1->SQR1  = 0<<20;
 7940 00ce 0024     		movs	r4, #0	@ tmp291,
 7941              	@ main.c:5213: 		ADC1->SQR3  = 0<<1*5 | 1<<0*5 ;
 7942 00d0 0120     		movs	r0, #1	@ tmp293,
 7943              	@ main.c:5210: 		ADC1->SQR1  = 0<<20;
 7944 00d2 8C4B     		ldr	r3, .L680+36	@ tmp290,
 7945              	@ main.c:5218: 		while(ADC1->CR2 & ADC_CR2_RSTCAL);		// wait for reset
 7946 00d4 1A46     		mov	r2, r3	@ tmp298, tmp290
 7947              	@ main.c:5210: 		ADC1->SQR1  = 0<<20;
 7948 00d6 DC62     		str	r4, [r3, #44]	@ tmp291, MEM[(struct ADC_TypeDef *)1073816576B].SQR1
 7949              	@ main.c:5213: 		ADC1->SQR3  = 0<<1*5 | 1<<0*5 ;
 7950 00d8 5863     		str	r0, [r3, #52]	@ tmp293, MEM[(struct ADC_TypeDef *)1073816576B].SQR3
 7951              	@ main.c:5215: 		ADC1->SMPR2 = 7<<0*3 | 7<<1*3 ;
 7952 00da 1961     		str	r1, [r3, #16]	@ tmp295, MEM[(struct ADC_TypeDef *)1073816576B].SMPR2
 7953              	@ main.c:5217: 		ADC1->CR2 |= ADC_CR2_RSTCAL;					// reset calibration
 7954 00dc 9968     		ldr	r1, [r3, #8]	@ _212, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 7955 00de 41F00801 		orr	r1, r1, #8	@ _213, _212,
 7956 00e2 9960     		str	r1, [r3, #8]	@ _213, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 7957              	.L626:
 7958              	@ main.c:5218: 		while(ADC1->CR2 & ADC_CR2_RSTCAL);		// wait for reset
 7959 00e4 9368     		ldr	r3, [r2, #8]	@ _214, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 7960 00e6 1807     		lsls	r0, r3, #28	@, _214,
 7961 00e8 FCD4     		bmi	.L626	@,
 7962              	@ main.c:5219: 		ADC1->CR2 |= ADC_CR2_CAL;							// start calibration
 7963 00ea 9168     		ldr	r1, [r2, #8]	@ _216, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 7964              	@ main.c:5220: 		while(ADC1->CR2 & ADC_CR2_CAL);				// wait till calibration is done
 7965 00ec 854B     		ldr	r3, .L680+36	@ tmp302,
 7966              	@ main.c:5219: 		ADC1->CR2 |= ADC_CR2_CAL;							// start calibration
 7967 00ee 41F00401 		orr	r1, r1, #4	@ _217, _216,
 7968 00f2 9160     		str	r1, [r2, #8]	@ _217, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 7969              	.L627:
 7970              	@ main.c:5220: 		while(ADC1->CR2 & ADC_CR2_CAL);				// wait till calibration is done
 7971 00f4 9A68     		ldr	r2, [r3, #8]	@ _218, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 7972 00f6 5107     		lsls	r1, r2, #29	@, _218,
 7973 00f8 FCD4     		bmi	.L627	@,
 7974              	@ main.c:5221: 		ADC1->CR2 |= ADC_CR2_ADON;						// start conversion
 7975 00fa 9A68     		ldr	r2, [r3, #8]	@ _220, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 7976              	@ main.c:5222: 		while( !( ADC1->SR & ADC_SR_STRT ));
 7977 00fc 8149     		ldr	r1, .L680+36	@ tmp306,
 7978              	@ main.c:5221: 		ADC1->CR2 |= ADC_CR2_ADON;						// start conversion
 7979 00fe 42F00102 		orr	r2, r2, #1	@ _221, _220,
 7980 0102 9A60     		str	r2, [r3, #8]	@ _221, MEM[(struct ADC_TypeDef *)1073816576B].CR2
ARM GAS  /tmp/ccpmJ073.s 			page 141


 7981              	.L628:
 7982              	@ main.c:5222: 		while( !( ADC1->SR & ADC_SR_STRT ));
 7983 0104 0B68     		ldr	r3, [r1]	@ _222, MEM[(struct ADC_TypeDef *)1073816576B].SR
 7984 0106 DA06     		lsls	r2, r3, #27	@, _222,
 7985 0108 FCD5     		bpl	.L628	@,
 7986              	@ main.c:5225: 		TIM3->CR1 = TIM_CR1_CEN;
 7987 010a 0122     		movs	r2, #1	@ tmp310,
 7988 010c 7F4B     		ldr	r3, .L680+44	@ tmp308,
 7989              	@ main.c:5226: 		while( ! (ADC1->SR & ADC_SR_EOC) );
 7990 010e 7D49     		ldr	r1, .L680+36	@ tmp311,
 7991              	@ main.c:5225: 		TIM3->CR1 = TIM_CR1_CEN;
 7992 0110 1A80     		strh	r2, [r3]	@ movhi	@ tmp310, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 7993              	.L629:
 7994              	@ main.c:5226: 		while( ! (ADC1->SR & ADC_SR_EOC) );
 7995 0112 0B68     		ldr	r3, [r1]	@ _224, MEM[(struct ADC_TypeDef *)1073816576B].SR
 7996 0114 9B07     		lsls	r3, r3, #30	@, _224,
 7997 0116 FCD5     		bpl	.L629	@,
 7998              	@ main.c:2884: 		f7_dma1 = 0;
 7999 0118 0026     		movs	r6, #0	@ tmp315,
 8000              	@ main.c:2905: 		TFT_Fill(wXmin-1,wYmin-1,wXmax+1,wYmin-1,DGRAY);	// pozioma dolna
 8001 011a 47F6EF35 		movw	r5, #31727	@ tmp316,
 8002              	@ main.c:2884: 		f7_dma1 = 0;
 8003 011e 7C4C     		ldr	r4, .L680+48	@ tmp314,
 8004              	@ main.c:2905: 		TFT_Fill(wXmin-1,wYmin-1,wXmax+1,wYmin-1,DGRAY);	// pozioma dolna
 8005 0120 3346     		mov	r3, r6	@, tmp315
 8006              	@ main.c:2884: 		f7_dma1 = 0;
 8007 0122 6401     		lsls	r4, r4, #5	@ _3, tmp314,
 8008 0124 E661     		str	r6, [r4, #28]	@ tmp315, *_5
 8009              	@ main.c:2905: 		TFT_Fill(wXmin-1,wYmin-1,wXmax+1,wYmin-1,DGRAY);	// pozioma dolna
 8010 0126 3146     		mov	r1, r6	@, tmp315
 8011 0128 0095     		str	r5, [sp]	@ tmp316,
 8012 012a 40F23F12 		movw	r2, #319	@,
 8013 012e 1E20     		movs	r0, #30	@,
 8014 0130 FFF7FEFF 		bl	TFT_Fill	@
 8015              	@ main.c:2906: 		TFT_Fill(wXmin-1,wYmax+1,wXmax+1,wYmax+1,DGRAY);	// pozioma górna
 8016 0134 E423     		movs	r3, #228	@,
 8017 0136 0095     		str	r5, [sp]	@ tmp316,
 8018 0138 1946     		mov	r1, r3	@,
 8019 013a 40F23F12 		movw	r2, #319	@,
 8020 013e 1E20     		movs	r0, #30	@,
 8021 0140 FFF7FEFF 		bl	TFT_Fill	@
 8022              	@ main.c:2907: 		TFT_Fill(wXmin-1,wYmin-1,wXmin-1,wYmax+1,DGRAY);	// pionowa lewa
 8023 0144 1E22     		movs	r2, #30	@,
 8024 0146 3146     		mov	r1, r6	@, tmp315
 8025 0148 1046     		mov	r0, r2	@,
 8026 014a 0095     		str	r5, [sp]	@ tmp316,
 8027 014c E423     		movs	r3, #228	@,
 8028 014e FFF7FEFF 		bl	TFT_Fill	@
 8029              	@ main.c:2908: 		TFT_Fill(wXmax+1,wYmin-1,wXmax+1,wYmax+1,DGRAY);	// pionowa prawa
 8030 0152 40F23F12 		movw	r2, #319	@,
 8031 0156 3146     		mov	r1, r6	@, tmp315
 8032 0158 1046     		mov	r0, r2	@,
 8033 015a 0095     		str	r5, [sp]	@ tmp316,
 8034 015c E423     		movs	r3, #228	@,
 8035 015e FFF7FEFF 		bl	TFT_Fill	@
 8036              	@ main.c:2912: 			yb[f] =wYmin;	
 8037 0162 0123     		movs	r3, #1	@ tmp321,
ARM GAS  /tmp/ccpmJ073.s 			page 142


 8038 0164 DFF8DCA1 		ldr	r10, .L680+100	@ tmp498,
 8039              	@ main.c:2913: 			yn[f] =wYmin;
 8040 0168 6A4D     		ldr	r5, .L680+52	@ tmp499,
 8041              	@ main.c:2929: 		UaPutS("\r\n wXlen ");	sint2uart(wXlen); 
 8042 016a 6B48     		ldr	r0, .L680+56	@,
 8043              	@ main.c:2912: 			yb[f] =wYmin;	
 8044 016c 8AF80030 		strb	r3, [r10]	@ tmp321, yb
 8045              	@ main.c:2913: 			yn[f] =wYmin;
 8046 0170 2B70     		strb	r3, [r5]	@ tmp321, yn
 8047              	@ main.c:2929: 		UaPutS("\r\n wXlen ");	sint2uart(wXlen); 
 8048 0172 FFF7FEFF 		bl	UaPutS	@
 8049 0176 4FF49070 		mov	r0, #288	@,
 8050 017a FFF7FEFF 		bl	sint2uart	@
 8051              	@ main.c:2932: 		DMA1_Channel1->CNDTR = wXlen*nMES;					//Buffor size 
 8052 017e 4FF49070 		mov	r0, #288	@ tmp330,
 8053              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 8054 0182 4FF4006C 		mov	ip, #2048	@ tmp332,
 8055              	@ main.c:2955: 			dma_buf[i]=0x10;
 8056 0186 1027     		movs	r7, #16	@ tmp345,
 8057              	@ main.c:2931: 		DMA1_Channel1->CMAR = (uint32_t)dma_buf;	 	//Destination address:
 8058 0188 5A4A     		ldr	r2, .L680+20	@ tmp328,
 8059              	@ main.c:2940: 		TIM4->ARR   = BKP->DR42; //1200-1
 8060 018a 3346     		mov	r3, r6	@ ivtmp.683, tmp315
 8061              	@ main.c:2931: 		DMA1_Channel1->CMAR = (uint32_t)dma_buf;	 	//Destination address:
 8062 018c 634E     		ldr	r6, .L680+60	@ tmp500,
 8063              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 8064 018e 6449     		ldr	r1, .L680+64	@ tmp331,
 8065              	@ main.c:2931: 		DMA1_Channel1->CMAR = (uint32_t)dma_buf;	 	//Destination address:
 8066 0190 D660     		str	r6, [r2, #12]	@ tmp500, MEM[(struct DMA_Channel_TypeDef *)1073872904B].CMAR
 8067              	@ main.c:2932: 		DMA1_Channel1->CNDTR = wXlen*nMES;					//Buffor size 
 8068 0192 5060     		str	r0, [r2, #4]	@ tmp330, MEM[(struct DMA_Channel_TypeDef *)1073872904B].CNDTR
 8069              	@ main.c:2939: 		TIM4->PSC   = BKP->DR41; //1000-1
 8070 0194 6348     		ldr	r0, .L680+68	@ tmp333,
 8071              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 8072 0196 C1F800C0 		str	ip, [r1]	@ tmp332, MEM[(struct NVIC_Type *)3758153984B].ISER
 8073              	@ main.c:2939: 		TIM4->PSC   = BKP->DR41; //1000-1
 8074 019a B0F8B820 		ldrh	r2, [r0, #184]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8075 019e 5849     		ldr	r1, .L680+32	@ tmp336,
 8076 01a0 92B2     		uxth	r2, r2	@ _9, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8077 01a2 0A85     		strh	r2, [r1, #40]	@ movhi	@ _9, MEM[(struct TIM_TypeDef *)1073743872B].PSC
 8078              	@ main.c:2940: 		TIM4->ARR   = BKP->DR42; //1200-1
 8079 01a4 B0F8BC20 		ldrh	r2, [r0, #188]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR42
 8080 01a8 92B2     		uxth	r2, r2	@ _10, MEM[(struct BKP_TypeDef *)1073769472B].DR42
 8081 01aa 8A85     		strh	r2, [r1, #44]	@ movhi	@ _10, MEM[(struct TIM_TypeDef *)1073743872B].ARR
 8082              	.L630:
 8083              	@ main.c:2955: 			dma_buf[i]=0x10;
 8084 01ac 26F81370 		strh	r7, [r6, r3, lsl #1]	@ movhi	@ tmp345, dma_buf
 8085 01b0 0133     		adds	r3, r3, #1	@ ivtmp.683, ivtmp.683,
 8086              	@ main.c:2952: 		for(u16 i=0;i<wXlen;i++){
 8087 01b2 B3F5907F 		cmp	r3, #288	@ ivtmp.683,
 8088 01b6 F9D1     		bne	.L630	@,
 8089              	@ main.c:2859: 		u16 x,c_dma1,r_dma_buf,idx,c_num,n1=10,cnt_dma=0;
 8090 01b8 4FF00008 		mov	r8, #0	@ cnt_dma,
 8091 01bc 04F10C03 		add	r3, r4, #12	@ _82, _3,
 8092 01c0 0593     		str	r3, [sp, #20]	@ _82, %sfp
 8093              	.L631:
 8094              	@ main.c:2960: 			if( STCLK_MS*BKP->DR41 < (trg0 - SysTick->VAL) ){
ARM GAS  /tmp/ccpmJ073.s 			page 143


 8095 01c2 42F22830 		movw	r0, #9000	@ tmp367,
 8096 01c6 584F     		ldr	r7, .L680+72	@ tmp523,
 8097 01c8 08F10102 		add	r2, r8, #1	@ tmp351, cnt_dma,
 8098 01cc A7FB0213 		umull	r1, r3, r7, r2	@ tmp518, tmp352, tmp523, tmp351
 8099 01d0 5449     		ldr	r1, .L680+68	@ tmp524,
 8100 01d2 464C     		ldr	r4, .L680+12	@ tmp526,
 8101 01d4 B1F8B810 		ldrh	r1, [r1, #184]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8102 01d8 9B09     		lsrs	r3, r3, #6	@ _95, tmp352,
 8103 01da 00FB01F0 		mul	r0, r0, r1	@ tmp366, tmp367, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8104 01de 5349     		ldr	r1, .L680+76	@ tmp525,
 8105 01e0 03EBC303 		add	r3, r3, r3, lsl #3	@ tmp356, _95, _95,
 8106 01e4 0968     		ldr	r1, [r1]	@ trg0.158_16, trg0
 8107 01e6 A468     		ldr	r4, [r4, #8]	@ _17, MEM[(struct SysTick_Type *)3758153744B].VAL
 8108 01e8 A2EB4313 		sub	r3, r2, r3, lsl #5	@ _95, tmp351, tmp356,
 8109 01ec 091B     		subs	r1, r1, r4	@ tmp368, trg0.158_16, _17
 8110 01ee 8842     		cmp	r0, r1	@ tmp366, tmp368
 8111 01f0 1FFA83F9 		uxth	r9, r3	@ _152, _95
 8112 01f4 4246     		mov	r2, r8	@ _91, cnt_dma
 8113 01f6 13D2     		bcs	.L632	@,
 8114              	@ main.c:2963: 				dma_buf[cnt_dma]=0x1;
 8115 01f8 0120     		movs	r0, #1	@ tmp373,
 8116 01fa 1A18     		adds	r2, r3, r0	@ tmp374, _95,
 8117 01fc A7FB0271 		umull	r7, r1, r7, r2	@ tmp519, tmp375, tmp527, tmp374
 8118 0200 8909     		lsrs	r1, r1, #6	@ _49, tmp375,
 8119 0202 01EBC101 		add	r1, r1, r1, lsl #3	@ tmp379, _49, _49,
 8120 0206 A2EB4111 		sub	r1, r2, r1, lsl #5	@ _49, tmp374, tmp379,
 8121              	@ main.c:2961: 				trg0 = SysTick->VAL;
 8122 020a 384A     		ldr	r2, .L680+12	@ tmp528,
 8123 020c 474C     		ldr	r4, .L680+76	@ tmp529,
 8124 020e 9268     		ldr	r2, [r2, #8]	@ _19, MEM[(struct SysTick_Type *)3758153744B].VAL
 8125              	@ main.c:2962: 				cnt_dma=(cnt_dma+1)%wXlen;
 8126 0210 C846     		mov	r8, r9	@ cnt_dma, _152
 8127              	@ main.c:2961: 				trg0 = SysTick->VAL;
 8128 0212 2260     		str	r2, [r4]	@ _19, trg0
 8129              	@ main.c:2963: 				dma_buf[cnt_dma]=0x1;
 8130 0214 26F81300 		strh	r0, [r6, r3, lsl #1]	@ movhi	@ tmp373, dma_buf
 8131 0218 1A46     		mov	r2, r3	@ _91, _95
 8132 021a 0B46     		mov	r3, r1	@ _95, _49
 8133 021c 1FFA81F9 		uxth	r9, r1	@ _152, _95
 8134              	.L632:
 8135              	@ main.c:2968: 			if (c_dma1 != wXlen-cnt_dma){
 8136 0220 0499     		ldr	r1, [sp, #16]	@ c_dma1, %sfp
 8137 0222 C2F59072 		rsb	r2, r2, #288	@ tmp389, _91,
 8138 0226 9142     		cmp	r1, r2	@ c_dma1, tmp389
 8139 0228 24D1     		bne	.L673	@,
 8140              	.L633:
 8141              	@ main.c:3075: 			if( STCLK_MS*500 < (trg1 - SysTick->VAL) ){
 8142 022a 414B     		ldr	r3, .L680+80	@ tmp543,
 8143 022c 2F4A     		ldr	r2, .L680+12	@ tmp544,
 8144 022e 1B68     		ldr	r3, [r3]	@ trg1.165_60, trg1
 8145 0230 9268     		ldr	r2, [r2, #8]	@ _61, MEM[(struct SysTick_Type *)3758153744B].VAL
 8146 0232 9B1A     		subs	r3, r3, r2	@ tmp438, trg1.165_60, _61
 8147 0234 3F4A     		ldr	r2, .L680+84	@ tmp545,
 8148 0236 9342     		cmp	r3, r2	@ tmp438, tmp545
 8149 0238 00F2E680 		bhi	.L674	@,
 8150              	.L643:
 8151              	@ main.c:3093: 			if(p_Fifo1->rct){	// Wywolanie interfejsu szeregowego gdy odebrano znak
ARM GAS  /tmp/ccpmJ073.s 			page 144


 8152 023c 3E4B     		ldr	r3, .L680+88	@ tmp553,
 8153 023e 1B68     		ldr	r3, [r3]	@ p_Fifo1.167_72, p_Fifo1
 8154 0240 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.167_72->rct
 8155 0242 9BB2     		uxth	r3, r3	@ _73, p_Fifo1.167_72->rct
 8156 0244 002B     		cmp	r3, #0	@ _73
 8157 0246 40F0C780 		bne	.L675	@
 8158              	.L645:
 8159              	@ main.c:3130: 			if(f3_rtc_1sec){	// Aktualizacja zegara
 8160 024a 059A     		ldr	r2, [sp, #20]	@ _82, %sfp
 8161 024c 1368     		ldr	r3, [r2]	@ _83, *_82
 8162 024e 002B     		cmp	r3, #0	@ _83
 8163 0250 B7D0     		beq	.L631	@
 8164              	@ main.c:3131: 				f3_rtc_1sec = 0;
 8165 0252 0020     		movs	r0, #0	@ tmp478,
 8166              	@ main.c:3133: 				rtc_GetTime(0, &Rtc);
 8167 0254 2449     		ldr	r1, .L680+8	@,
 8168              	@ main.c:3131: 				f3_rtc_1sec = 0;
 8169 0256 1060     		str	r0, [r2]	@ tmp478, *_82
 8170              	@ main.c:3133: 				rtc_GetTime(0, &Rtc);
 8171 0258 FFF7FEFF 		bl	rtc_GetTime	@
 8172              	@ main.c:3134: 				CopyClock(tbuf,&Rtc); TFT_txt(tbuf,180, 229,YELLOW);
 8173 025c 2249     		ldr	r1, .L680+8	@,
 8174 025e 3748     		ldr	r0, .L680+92	@,
 8175 0260 FFF7FEFF 		bl	CopyClock	@
 8176 0264 4FF6E073 		movw	r3, #65504	@,
 8177 0268 E522     		movs	r2, #229	@,
 8178 026a B421     		movs	r1, #180	@,
 8179 026c 3348     		ldr	r0, .L680+92	@,
 8180 026e FFF7FEFF 		bl	TFT_txt	@
 8181 0272 A6E7     		b	.L631	@
 8182              	.L673:
 8183              	@ main.c:2973: 				dma_buf[cnt_dma]=0x1;
 8184 0274 4FF0010B 		mov	fp, #1	@ tmp393,
 8185              	@ main.c:3005: 				TFT_Fill(wXmin+(wXmax-wXmin)/2,wYmin-1,wXmin+(wXmax-wXmin)/2,wYmax+1,DGRAY);	// 
 8186 0278 AE22     		movs	r2, #174	@,
 8187 027a 47F6EF37 		movw	r7, #31727	@ tmp398,
 8188              	@ main.c:2973: 				dma_buf[cnt_dma]=0x1;
 8189 027e 26F813B0 		strh	fp, [r6, r3, lsl #1]	@ movhi	@ tmp393, dma_buf
 8190              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 8191 0282 1A48     		ldr	r0, .L680+12	@ tmp533,
 8192 0284 2E4B     		ldr	r3, .L680+96	@ tmp532,
 8193              	@ main.c:2970: 				c_dma1 = wXlen-cnt_dma;
 8194 0286 C8F59078 		rsb	r8, r8, #288	@ tmp390, cnt_dma,
 8195              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 8196 028a 1B68     		ldr	r3, [r3]	@ Timt.47_184, Timt
 8197 028c 8168     		ldr	r1, [r0, #8]	@ _185, MEM[(struct SysTick_Type *)3758153744B].VAL
 8198              	@ main.c:2970: 				c_dma1 = wXlen-cnt_dma;
 8199 028e 1FFA88F4 		uxth	r4, r8	@ c_dma1, tmp390
 8200              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 8201 0292 5B1A     		subs	r3, r3, r1	@ _186, Timt.47_184, _185
 8202 0294 0993     		str	r3, [sp, #36]	@ _186, MEM[(volatile u32 *)&tim]
 8203              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 8204 0296 D0F808C0 		ldr	ip, [r0, #8]	@ _183, MEM[(struct SysTick_Type *)3758153744B].VAL
 8205              	@ main.c:2970: 				c_dma1 = wXlen-cnt_dma;
 8206 029a 0494     		str	r4, [sp, #16]	@ c_dma1, %sfp
 8207              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 8208 029c 284C     		ldr	r4, .L680+96	@ tmp537,
ARM GAS  /tmp/ccpmJ073.s 			page 145


 8209              	@ main.c:3005: 				TFT_Fill(wXmin+(wXmax-wXmin)/2,wYmin-1,wXmin+(wXmax-wXmin)/2,wYmax+1,DGRAY);	// 
 8210 029e 1046     		mov	r0, r2	@,
 8211 02a0 0097     		str	r7, [sp]	@ tmp398,
 8212 02a2 E423     		movs	r3, #228	@,
 8213              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 8214 02a4 C4F800C0 		str	ip, [r4]	@ _183, Timt
 8215              	@ main.c:3005: 				TFT_Fill(wXmin+(wXmax-wXmin)/2,wYmin-1,wXmin+(wXmax-wXmin)/2,wYmax+1,DGRAY);	// 
 8216 02a8 0021     		movs	r1, #0	@,
 8217 02aa FFF7FEFF 		bl	TFT_Fill	@
 8218              	@ main.c:3006: 				TFT_Fill(wXmin-1,(wYmax-wYmin)/2,wXmax+1,(wYmax-wYmin)/2,DGRAY);						// pozioma
 8219 02ae 7123     		movs	r3, #113	@,
 8220 02b0 40F23F12 		movw	r2, #319	@,
 8221 02b4 1946     		mov	r1, r3	@,
 8222 02b6 1E20     		movs	r0, #30	@,
 8223 02b8 0097     		str	r7, [sp]	@ tmp398,
 8224 02ba FFF7FEFF 		bl	TFT_Fill	@
 8225              	@ main.c:3008: 				TFT_SetWindow(wXmin,wYmin,wXmax,wYmax);
 8226 02be 5946     		mov	r1, fp	@, tmp393
 8227 02c0 E323     		movs	r3, #227	@,
 8228 02c2 4FF49F72 		mov	r2, #318	@,
 8229 02c6 1F20     		movs	r0, #31	@,
 8230 02c8 FFF7FEFF 		bl	TFT_SetWindow	@
 8231 02cc 09F1FF33 		add	r3, r9, #-1	@ tmp504, _152,
 8232 02d0 0024     		movs	r4, #0	@ ivtmp.676,
 8233 02d2 2978     		ldrb	r1, [r5]	@ zero_extendqisi2	@ pretmp_47, yn
 8234 02d4 09F21F1B 		addw	fp, r9, #287	@ tmp503, _152,
 8235 02d8 0393     		str	r3, [sp, #12]	@ tmp504, %sfp
 8236              	@ main.c:3062: 						else {	yn[i]=wYmax-wYmin;		}
 8237 02da 4FF0E208 		mov	r8, #226	@ tmp505,
 8238 02de 46E0     		b	.L634	@
 8239              	.L681:
 8240              		.align	2
 8241              	.L680:
 8242 02e0 00000000 		.word	.LC146
 8243 02e4 18000000 		.word	.LC147
 8244 02e8 00000000 		.word	Rtc
 8245 02ec 10E000E0 		.word	-536813552
 8246 02f0 00100240 		.word	1073876992
 8247 02f4 08000240 		.word	1073872904
 8248 02f8 000C0140 		.word	1073810432
 8249 02fc 00000000 		.word	delay_us
 8250 0300 00080040 		.word	1073743872
 8251 0304 00240140 		.word	1073816576
 8252 0308 01011A00 		.word	1704193
 8253 030c 00040040 		.word	1073742848
 8254 0310 00001001 		.word	.LANCHOR8+17825792
 8255 0314 00000000 		.word	.LANCHOR22
 8256 0318 28000000 		.word	.LC148
 8257 031c 00000000 		.word	.LANCHOR23
 8258 0320 00E100E0 		.word	-536813312
 8259 0324 006C0040 		.word	1073769472
 8260 0328 398EE338 		.word	954437177
 8261 032c 00000000 		.word	trg0
 8262 0330 00000000 		.word	trg1
 8263 0334 20AA4400 		.word	4500000
 8264 0338 00000000 		.word	p_Fifo1
 8265 033c 00000000 		.word	.LANCHOR25
ARM GAS  /tmp/ccpmJ073.s 			page 146


 8266 0340 00000000 		.word	Timt
 8267 0344 00000000 		.word	.LANCHOR21
 8268              	.L651:
 8269              	@ main.c:3061: 						yn[i]=wYmin + (r_dma_buf);	}
 8270 0348 0133     		adds	r3, r3, #1	@ tmp423, _43,
 8271              	@ main.c:3066: 					if(x==wXlen-2){
 8272 034a B4F58F7F 		cmp	r4, #286	@ ivtmp.676,
 8273              	@ main.c:3061: 						yn[i]=wYmin + (r_dma_buf);	}
 8274 034e 2B70     		strb	r3, [r5]	@ tmp423, yn
 8275              	@ main.c:3066: 					if(x==wXlen-2){
 8276 0350 20D0     		beq	.L676	@,
 8277              	.L640:
 8278              	@ main.c:3010: 				for(x=0;x<wXlen;x++){
 8279 0352 40F21F13 		movw	r3, #287	@ tmp435,
 8280 0356 9C42     		cmp	r4, r3	@ ivtmp.676, tmp435
 8281 0358 3CD0     		beq	.L677	@,
 8282              	@ main.c:3032: 					if( x>0 && x< wXlen-0 ){
 8283 035a B4F58F7F 		cmp	r4, #286	@ ivtmp.676,
 8284 035e 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2	@ prephitmp_27, yn
 8285 0360 1DD9     		bls	.L641	@,
 8286 0362 671C     		adds	r7, r4, #1	@ tmp406, ivtmp.676,
 8287 0364 BFB2     		uxth	r7, r7	@ ivtmp.676, tmp406
 8288              	@ main.c:3041: 					if(x>1){
 8289 0366 012F     		cmp	r7, #1	@ ivtmp.676,
 8290 0368 25D1     		bne	.L678	@,
 8291              	.L636:
 8292              	@ main.c:2963: 				dma_buf[cnt_dma]=0x1;
 8293 036a 3C46     		mov	r4, r7	@ ivtmp.676, ivtmp.676
 8294 036c 1146     		mov	r1, r2	@ pretmp_47, prephitmp_27
 8295              	.L634:
 8296              	@ main.c:3052: 					if(x<cnt_dma)	idx=(0    +cnt_dma-x-1)*nMES; 
 8297 036e A145     		cmp	r9, r4	@ _152, ivtmp.676
 8298 0370 8ABF     		itet	hi
 8299 0372 039B     		ldrhi	r3, [sp, #12]	@ tmp504, %sfp
 8300 0374 ABEB0402 		subls	r2, fp, r4	@ tmp420, tmp503, ivtmp.676
 8301 0378 1A1B     		subhi	r2, r3, r4	@ tmp417, tmp504, ivtmp.676
 8302 037a 92B2     		uxth	r2, r2	@ idx, tmp420
 8303              	@ main.c:3057: 						r_dma_buf =(dma_buf[i+idx]-rz[i])*mn[i]/dl[i]; 
 8304 037c 36F81230 		ldrh	r3, [r6, r2, lsl #1]	@, dma_buf
 8305              	@ main.c:3058: 						yb[i]=yn[i];
 8306 0380 8AF80010 		strb	r1, [r10]	@ pretmp_47, yb
 8307              	@ main.c:3057: 						r_dma_buf =(dma_buf[i+idx]-rz[i])*mn[i]/dl[i]; 
 8308 0384 9BB2     		uxth	r3, r3	@ _43, tmp486
 8309              	@ main.c:3060: 						if(r_dma_buf < (wYmax-wYmin) ){
 8310 0386 E12B     		cmp	r3, #225	@ _43,
 8311 0388 DED9     		bls	.L651	@,
 8312              	@ main.c:3066: 					if(x==wXlen-2){
 8313 038a B4F58F7F 		cmp	r4, #286	@ ivtmp.676,
 8314              	@ main.c:3062: 						else {	yn[i]=wYmax-wYmin;		}
 8315 038e 85F80080 		strb	r8, [r5]	@ tmp505, yn
 8316              	@ main.c:3066: 					if(x==wXlen-2){
 8317 0392 DED1     		bne	.L640	@,
 8318              	.L676:
 8319              	@ main.c:3068: 							val[i]=dma_buf[i+idx];
 8320 0394 36F81230 		ldrh	r3, [r6, r2, lsl #1]	@, dma_buf
 8321 0398 3D48     		ldr	r0, .L682	@ tmp542,
 8322 039a 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2	@ prephitmp_27, yn
ARM GAS  /tmp/ccpmJ073.s 			page 147


 8323 039c 0380     		strh	r3, [r0]	@ movhi	@ tmp431, val
 8324              	.L641:
 8325              	@ main.c:3035: 							TFT_dy(wXmin+x-1, yb[i], yn[i],BLACK,WID);
 8326 039e 0023     		movs	r3, #0	@ tmp404,
 8327 03a0 04F11F00 		add	r0, r4, #31	@ tmp402, ivtmp.676,
 8328 03a4 671C     		adds	r7, r4, #1	@ tmp406, ivtmp.676,
 8329 03a6 0093     		str	r3, [sp]	@ tmp404,
 8330 03a8 80B2     		uxth	r0, r0	@, tmp402
 8331 03aa BFB2     		uxth	r7, r7	@ ivtmp.676, tmp406
 8332 03ac FFF7FEFF 		bl	TFT_dy	@
 8333              	@ main.c:3041: 					if(x>1){
 8334 03b0 012F     		cmp	r7, #1	@ ivtmp.676,
 8335 03b2 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2	@ prephitmp_27, yn
 8336 03b4 D9D0     		beq	.L636	@,
 8337              	.L678:
 8338              	@ main.c:3043: 							TFT_dy(wXmin+x-2, yb[i], yn[i],ColCon[6+i],WID);
 8339 03b6 4FF0000C 		mov	ip, #0	@ tmp413,
 8340 03ba 364B     		ldr	r3, .L682+4	@ tmp540,
 8341 03bc 04F11E00 		add	r0, r4, #30	@ tmp411, ivtmp.676,
 8342 03c0 9B89     		ldrh	r3, [r3, #12]	@ ColCon, ColCon
 8343 03c2 9AF80010 		ldrb	r1, [r10]	@ zero_extendqisi2	@ yb, yb
 8344 03c6 80B2     		uxth	r0, r0	@, tmp411
 8345 03c8 CDF800C0 		str	ip, [sp]	@ tmp413,
 8346 03cc FFF7FEFF 		bl	TFT_dy	@
 8347 03d0 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2	@ prephitmp_27, yn
 8348 03d2 CAE7     		b	.L636	@
 8349              	.L677:
 8350 03d4 C846     		mov	r8, r9	@ cnt_dma, _152
 8351 03d6 28E7     		b	.L633	@
 8352              	.L675:
 8353              	@ main.c:3094: 				UART_getChar(&chr);
 8354 03d8 0DF11F00 		add	r0, sp, #31	@ tmp554,,
 8355 03dc FFF7FEFF 		bl	UART_getChar	@
 8356              	@ main.c:3095: 				if(chr=='q'){
 8357 03e0 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2	@ chr.168_74, chr
 8358 03e4 712B     		cmp	r3, #113	@ chr.168_74,
 8359 03e6 31D0     		beq	.L679	@,
 8360              	@ main.c:3109: 				if(chr=='b'){	
 8361 03e8 622B     		cmp	r3, #98	@ chr.168_74,
 8362 03ea 7FF42EAF 		bne	.L645	@,
 8363              	.L648:
 8364              	@ main.c:3111: 					TFT_Clear(BLACK);
 8365 03ee 0020     		movs	r0, #0	@,
 8366 03f0 FFF7FEFF 		bl	TFT_Clear	@
 8367              	@ main.c:3112: 					TFT_Fill(wXmin-1,wYmin-1,wXmin-1,wYmax+1,DGRAY);	// pionowa lewa
 8368 03f4 47F6EF33 		movw	r3, #31727	@ tmp477,
 8369 03f8 1E22     		movs	r2, #30	@,
 8370 03fa 0093     		str	r3, [sp]	@ tmp477,
 8371 03fc 1046     		mov	r0, r2	@,
 8372 03fe E423     		movs	r3, #228	@,
 8373 0400 0021     		movs	r1, #0	@,
 8374 0402 FFF7FEFF 		bl	TFT_Fill	@
 8375 0406 20E7     		b	.L645	@
 8376              	.L674:
 8377              	@ main.c:3076: 				trg1 = SysTick->VAL;
 8378 0408 234B     		ldr	r3, .L682+8	@ tmp546,
 8379              	@ main.c:3086: 				TFT_txt(int2str(val[0],str,4,0),30,229-12*0,WHITE);
ARM GAS  /tmp/ccpmJ073.s 			page 148


 8380 040a 2148     		ldr	r0, .L682	@ tmp548,
 8381              	@ main.c:3076: 				trg1 = SysTick->VAL;
 8382 040c 9C68     		ldr	r4, [r3, #8]	@ _63, MEM[(struct SysTick_Type *)3758153744B].VAL
 8383 040e 234F     		ldr	r7, .L682+12	@ tmp549,
 8384              	@ main.c:3086: 				TFT_txt(int2str(val[0],str,4,0),30,229-12*0,WHITE);
 8385 0410 08A9     		add	r1, sp, #32	@ tmp547,,
 8386 0412 0023     		movs	r3, #0	@,
 8387 0414 0422     		movs	r2, #4	@,
 8388 0416 0088     		ldrh	r0, [r0]	@, val
 8389              	@ main.c:3076: 				trg1 = SysTick->VAL;
 8390 0418 3C60     		str	r4, [r7]	@ _63, trg1
 8391              	@ main.c:3086: 				TFT_txt(int2str(val[0],str,4,0),30,229-12*0,WHITE);
 8392 041a FFF7FEFF 		bl	int2str	@
 8393 041e 4FF6FF73 		movw	r3, #65535	@,
 8394 0422 E522     		movs	r2, #229	@,
 8395 0424 1E21     		movs	r1, #30	@,
 8396 0426 FFF7FEFF 		bl	TFT_txt	@
 8397              	@ main.c:3088: 				TFT_txt(int2str(tim/TIM_MS,str,5,0),110,229-12*0,ColCon[6]);
 8398 042a 099A     		ldr	r2, [sp, #36]	@ tim, tim
 8399 042c 1C49     		ldr	r1, .L682+16	@ tmp550,
 8400 042e 0023     		movs	r3, #0	@,
 8401 0430 A1FB0220 		umull	r2, r0, r1, r2	@ tmp520, tmp448, tmp550, tim
 8402 0434 08A9     		add	r1, sp, #32	@ tmp551,,
 8403 0436 0522     		movs	r2, #5	@,
 8404 0438 400B     		lsrs	r0, r0, #13	@, tmp448,
 8405 043a FFF7FEFF 		bl	int2str	@
 8406 043e 154B     		ldr	r3, .L682+4	@ tmp552,
 8407 0440 E522     		movs	r2, #229	@,
 8408 0442 9B89     		ldrh	r3, [r3, #12]	@, ColCon
 8409 0444 6E21     		movs	r1, #110	@,
 8410 0446 FFF7FEFF 		bl	TFT_txt	@
 8411 044a F7E6     		b	.L643	@
 8412              	.L679:
 8413              	@ main.c:3096: 					UaPutS("\r\n TIM4->PSC/ARR="); 	sint2uart(TIM4->PSC);	UaPutC('/'); c_num=UART_g
 8414 044c 154C     		ldr	r4, .L682+20	@ tmp457,
 8415 044e 1648     		ldr	r0, .L682+24	@,
 8416 0450 FFF7FEFF 		bl	UaPutS	@
 8417 0454 208D     		ldrh	r0, [r4, #40]	@, MEM[(struct TIM_TypeDef *)1073743872B].PSC
 8418 0456 FFF7FEFF 		bl	sint2uart	@
 8419 045a 2F20     		movs	r0, #47	@,
 8420 045c FFF7FEFF 		bl	UaPutC	@
 8421 0460 FFF7FEFF 		bl	UART_getNum	@
 8422 0464 80B2     		uxth	r0, r0	@ c_num,
 8423              	@ main.c:3097: 					if(c_num){ 
 8424 0466 60B1     		cbz	r0, .L647	@ c_num,
 8425              	@ main.c:3098: 						BKP->DR41=c_num; TIM4->PSC=BKP->DR41;
 8426 0468 104A     		ldr	r2, .L682+28	@ tmp555,
 8427 046a A2F8B800 		strh	r0, [r2, #184]	@ movhi	@ c_num, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8428 046e B2F8B830 		ldrh	r3, [r2, #184]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8429 0472 9BB2     		uxth	r3, r3	@ _78, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8430 0474 2385     		strh	r3, [r4, #40]	@ movhi	@ _78, MEM[(struct TIM_TypeDef *)1073743872B].PSC
 8431              	@ main.c:3099: 						BKP->DR42=c_num; TIM4->ARR=BKP->DR42;
 8432 0476 A2F8BC00 		strh	r0, [r2, #188]	@ movhi	@ c_num, MEM[(struct BKP_TypeDef *)1073769472B].DR42
 8433 047a B2F8BC30 		ldrh	r3, [r2, #188]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR42
 8434 047e 9BB2     		uxth	r3, r3	@ _79, MEM[(struct BKP_TypeDef *)1073769472B].DR42
 8435 0480 A385     		strh	r3, [r4, #44]	@ movhi	@ _79, MEM[(struct TIM_TypeDef *)1073743872B].ARR
 8436              	.L647:
ARM GAS  /tmp/ccpmJ073.s 			page 149


 8437              	@ main.c:3105: 					UaPutS("\r\n");
 8438 0482 0B48     		ldr	r0, .L682+32	@,
 8439 0484 FFF7FEFF 		bl	UaPutS	@
 8440              	@ main.c:3106: 					chr='b';
 8441 0488 6223     		movs	r3, #98	@ tmp475,
 8442 048a 8DF81F30 		strb	r3, [sp, #31]	@ tmp475, chr
 8443 048e AEE7     		b	.L648	@
 8444              	.L683:
 8445              		.align	2
 8446              	.L682:
 8447 0490 00000000 		.word	.LANCHOR24
 8448 0494 00000000 		.word	ColCon
 8449 0498 10E000E0 		.word	-536813552
 8450 049c 00000000 		.word	trg1
 8451 04a0 D55204E9 		.word	-385592619
 8452 04a4 00080040 		.word	1073743872
 8453 04a8 34000000 		.word	.LC149
 8454 04ac 006C0040 		.word	1073769472
 8455 04b0 48000000 		.word	.LC19
 8456              		.size	Intro2, .-Intro2
 8457              		.section	.text.CopyTime,"ax",%progbits
 8458              		.align	1
 8459              		.p2align 2,,3
 8460              		.global	CopyTime
 8461              		.syntax unified
 8462              		.thumb
 8463              		.thumb_func
 8464              		.fpu softvfp
 8465              		.type	CopyTime, %function
 8466              	CopyTime:
 8467              		@ args = 0, pretend = 0, frame = 8
 8468              		@ frame_needed = 0, uses_anonymous_args = 0
 8469 0000 30B5     		push	{r4, r5, lr}	@
 8470 0002 0D46     		mov	r5, r1	@ lrtc, lrtc
 8471 0004 83B0     		sub	sp, sp, #12	@,,
 8472              	@ main.c:4996: void CopyTime(char *dczas,  T_RTC *lrtc)	{
 8473 0006 0446     		mov	r4, r0	@ dczas, dczas
 8474              	@ main.c:5001: 		dczas += 0; memcpy(dczas,unt2str(lrtc->hor,tbuf,2) ,2);
 8475 0008 01A9     		add	r1, sp, #4	@ tmp139,,
 8476 000a A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2	@, lrtc_12(D)->hor
 8477 000c 0222     		movs	r2, #2	@,
 8478 000e FFF7FEFF 		bl	unt2str	@
 8479 0012 0388     		ldrh	r3, [r0]	@ unaligned	@ _14, MEM[(char * {ref-all})_3]
 8480              	@ main.c:5002: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 8481 0014 01A9     		add	r1, sp, #4	@ tmp140,,
 8482              	@ main.c:5001: 		dczas += 0; memcpy(dczas,unt2str(lrtc->hor,tbuf,2) ,2);
 8483 0016 2380     		strh	r3, [r4]	@ unaligned	@ _14, MEM[(char * {ref-all})dczas_10(D)]
 8484              	@ main.c:5002: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 8485 0018 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2	@, lrtc_12(D)->min
 8486 001a 0222     		movs	r2, #2	@,
 8487 001c FFF7FEFF 		bl	unt2str	@
 8488 0020 0388     		ldrh	r3, [r0]	@ unaligned	@ _17, MEM[(char * {ref-all})_6]
 8489              	@ main.c:5003: 		dczas += 3; memcpy(dczas,unt2str(lrtc->sec,tbuf,2) ,2);
 8490 0022 01A9     		add	r1, sp, #4	@ tmp141,,
 8491              	@ main.c:5002: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 8492 0024 A4F80330 		strh	r3, [r4, #3]	@ unaligned	@ _17, MEM[(char * {ref-all})dczas_10(D) + 3B]
 8493              	@ main.c:5003: 		dczas += 3; memcpy(dczas,unt2str(lrtc->sec,tbuf,2) ,2);
ARM GAS  /tmp/ccpmJ073.s 			page 150


 8494 0028 2878     		ldrb	r0, [r5]	@ zero_extendqisi2	@, lrtc_12(D)->sec
 8495 002a 0222     		movs	r2, #2	@,
 8496 002c FFF7FEFF 		bl	unt2str	@
 8497 0030 0388     		ldrh	r3, [r0]	@ unaligned	@ _20, MEM[(char * {ref-all})_9]
 8498 0032 E380     		strh	r3, [r4, #6]	@ unaligned	@ _20, MEM[(char * {ref-all})dczas_10(D) + 6B]
 8499              	@ main.c:5004: 	}
 8500 0034 03B0     		add	sp, sp, #12	@,,
 8501              		@ sp needed	@
 8502 0036 30BD     		pop	{r4, r5, pc}	@
 8503              		.size	CopyTime, .-CopyTime
 8504              		.section	.text.CopyDate,"ax",%progbits
 8505              		.align	1
 8506              		.p2align 2,,3
 8507              		.global	CopyDate
 8508              		.syntax unified
 8509              		.thumb
 8510              		.thumb_func
 8511              		.fpu softvfp
 8512              		.type	CopyDate, %function
 8513              	CopyDate:
 8514              		@ args = 0, pretend = 0, frame = 8
 8515              		@ frame_needed = 0, uses_anonymous_args = 0
 8516 0000 30B5     		push	{r4, r5, lr}	@
 8517 0002 0D46     		mov	r5, r1	@ lrtc, lrtc
 8518 0004 83B0     		sub	sp, sp, #12	@,,
 8519              	@ main.c:5005: void CopyDate(char *dczas,  T_RTC *lrtc)	{
 8520 0006 0446     		mov	r4, r0	@ dczas, dczas
 8521              	@ main.c:5008: 		dczas += 0;	memcpy(dczas,unt2str(lrtc->yer,tbuf,4) ,4);
 8522 0008 6946     		mov	r1, sp	@,
 8523 000a E888     		ldrh	r0, [r5, #6]	@, lrtc_12(D)->yer
 8524 000c 0422     		movs	r2, #4	@,
 8525 000e FFF7FEFF 		bl	unt2str	@
 8526 0012 0368     		ldr	r3, [r0]	@ unaligned	@ tmp126, MEM[(char * {ref-all})_3]
 8527              	@ main.c:5009: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 8528 0014 6946     		mov	r1, sp	@,
 8529              	@ main.c:5008: 		dczas += 0;	memcpy(dczas,unt2str(lrtc->yer,tbuf,4) ,4);
 8530 0016 2360     		str	r3, [r4]	@ unaligned	@ tmp126, MEM[(char * {ref-all})dczas_10(D)]
 8531              	@ main.c:5009: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 8532 0018 2879     		ldrb	r0, [r5, #4]	@ zero_extendqisi2	@, lrtc_12(D)->mon
 8533 001a 0222     		movs	r2, #2	@,
 8534 001c FFF7FEFF 		bl	unt2str	@
 8535 0020 0388     		ldrh	r3, [r0]	@ unaligned	@ _17, MEM[(char * {ref-all})_6]
 8536              	@ main.c:5010: 		dczas += 3; memcpy(dczas,unt2str(lrtc->mdy,tbuf,2) ,2);
 8537 0022 6946     		mov	r1, sp	@,
 8538              	@ main.c:5009: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 8539 0024 A4F80530 		strh	r3, [r4, #5]	@ unaligned	@ _17, MEM[(char * {ref-all})dczas_10(D) + 5B]
 8540              	@ main.c:5010: 		dczas += 3; memcpy(dczas,unt2str(lrtc->mdy,tbuf,2) ,2);
 8541 0028 E878     		ldrb	r0, [r5, #3]	@ zero_extendqisi2	@, lrtc_12(D)->mdy
 8542 002a 0222     		movs	r2, #2	@,
 8543 002c FFF7FEFF 		bl	unt2str	@
 8544 0030 0388     		ldrh	r3, [r0]	@ unaligned	@ _20, MEM[(char * {ref-all})_9]
 8545 0032 2381     		strh	r3, [r4, #8]	@ unaligned	@ _20, MEM[(char * {ref-all})dczas_10(D) + 8B]
 8546              	@ main.c:5011: 	}
 8547 0034 03B0     		add	sp, sp, #12	@,,
 8548              		@ sp needed	@
 8549 0036 30BD     		pop	{r4, r5, pc}	@
 8550              		.size	CopyDate, .-CopyDate
ARM GAS  /tmp/ccpmJ073.s 			page 151


 8551              		.section	.text.Zegarek,"ax",%progbits
 8552              		.align	1
 8553              		.p2align 2,,3
 8554              		.global	Zegarek
 8555              		.syntax unified
 8556              		.thumb
 8557              		.thumb_func
 8558              		.fpu softvfp
 8559              		.type	Zegarek, %function
 8560              	Zegarek:
 8561              		@ args = 0, pretend = 0, frame = 24
 8562              		@ frame_needed = 0, uses_anonymous_args = 0
 8563 0000 F0B5     		push	{r4, r5, r6, r7, lr}	@
 8564 0002 87B0     		sub	sp, sp, #28	@,,
 8565              	@ main.c:893: 		char tbuf[9] ={"00-00-00"};
 8566 0004 6C46     		mov	r4, sp	@ tmp115,
 8567 0006 134A     		ldr	r2, .L693	@ tmp114,
 8568              	@ main.c:894: 		char dbuf[11]={"0000-00-00"}; // data
 8569 0008 03AB     		add	r3, sp, #12	@ tmp137,,
 8570              	@ main.c:893: 		char tbuf[9] ={"00-00-00"};
 8571 000a 07CA     		ldm	r2, {r0, r1, r2}	@ tmp114,,,
 8572 000c 03C4     		stmia	r4!, {r0, r1}	@ tmp115,,
 8573              	@ main.c:894: 		char dbuf[11]={"0000-00-00"}; // data
 8574 000e 1249     		ldr	r1, .L693+4	@ tmp117,
 8575              	@ main.c:893: 		char tbuf[9] ={"00-00-00"};
 8576 0010 2270     		strb	r2, [r4]	@, tbuf
 8577              	@ main.c:894: 		char dbuf[11]={"0000-00-00"}; // data
 8578 0012 07C9     		ldm	r1, {r0, r1, r2}	@ tmp117,,,
 8579 0014 03C3     		stmia	r3!, {r0, r1}	@ tmp118,,
 8580 0016 110C     		lsrs	r1, r2, #16	@ tmp120,,
 8581 0018 23F8022B 		strh	r2, [r3], #2	@ movhi	@, dbuf
 8582 001c 1970     		strb	r1, [r3]	@ tmp120, dbuf
 8583              	@ main.c:896: 		RtcInit();
 8584 001e FFF7FEFF 		bl	RtcInit	@
 8585 0022 0E4D     		ldr	r5, .L693+8	@ tmp133,
 8586              	@ main.c:904: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 8587 0024 0E4C     		ldr	r4, .L693+12	@ tmp123,
 8588 0026 0F4E     		ldr	r6, .L693+16	@ tmp125,
 8589              	@ main.c:906: 				rtc_GetTime(1,&Rtc);
 8590 0028 0F4F     		ldr	r7, .L693+20	@ tmp136,
 8591              	.L689:
 8592              	@ main.c:904: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 8593 002a 2B68     		ldr	r3, [r5]	@ trg0.58_1, trg0
 8594 002c A268     		ldr	r2, [r4, #8]	@ _2, MEM[(struct SysTick_Type *)3758153744B].VAL
 8595 002e 9B1A     		subs	r3, r3, r2	@ tmp124, trg0.58_1, _2
 8596 0030 B342     		cmp	r3, r6	@ tmp124, tmp125
 8597 0032 FAD9     		bls	.L689	@,
 8598              	@ main.c:905: 				trg0  = SysTick->VAL;
 8599 0034 A368     		ldr	r3, [r4, #8]	@ _4, MEM[(struct SysTick_Type *)3758153744B].VAL
 8600              	@ main.c:906: 				rtc_GetTime(1,&Rtc);
 8601 0036 3946     		mov	r1, r7	@, tmp136
 8602 0038 0120     		movs	r0, #1	@,
 8603              	@ main.c:905: 				trg0  = SysTick->VAL;
 8604 003a 2B60     		str	r3, [r5]	@ _4, trg0
 8605              	@ main.c:906: 				rtc_GetTime(1,&Rtc);
 8606 003c FFF7FEFF 		bl	rtc_GetTime	@
 8607              	@ main.c:907: 				CopyTime(tbuf,&Rtc);
ARM GAS  /tmp/ccpmJ073.s 			page 152


 8608 0040 3946     		mov	r1, r7	@, tmp136
 8609 0042 6846     		mov	r0, sp	@,
 8610 0044 FFF7FEFF 		bl	CopyTime	@
 8611              	@ main.c:908: 				CopyDate(dbuf,&Rtc);
 8612 0048 3946     		mov	r1, r7	@, tmp136
 8613 004a 03A8     		add	r0, sp, #12	@ tmp138,,
 8614 004c FFF7FEFF 		bl	CopyDate	@
 8615 0050 EBE7     		b	.L689	@
 8616              	.L694:
 8617 0052 00BF     		.align	2
 8618              	.L693:
 8619 0054 00000000 		.word	.LC150
 8620 0058 0C000000 		.word	.LC151
 8621 005c 00000000 		.word	trg0
 8622 0060 10E000E0 		.word	-536813552
 8623 0064 40548900 		.word	9000000
 8624 0068 00000000 		.word	Rtc
 8625              		.size	Zegarek, .-Zegarek
 8626              		.section	.text.SysTick_Handler,"ax",%progbits
 8627              		.align	1
 8628              		.p2align 2,,3
 8629              		.global	SysTick_Handler
 8630              		.syntax unified
 8631              		.thumb
 8632              		.thumb_func
 8633              		.fpu softvfp
 8634              		.type	SysTick_Handler, %function
 8635              	SysTick_Handler:
 8636              		@ args = 0, pretend = 0, frame = 0
 8637              		@ frame_needed = 0, uses_anonymous_args = 0
 8638              		@ link register save eliminated.
 8639              	@ main.c:5053: 		N = Timt + STCLK_LD; Timt = N;
 8640 0000 1448     		ldr	r0, .L696	@ tmp130,
 8641 0002 154B     		ldr	r3, .L696+4	@ tmp131,
 8642 0004 0268     		ldr	r2, [r0]	@ Timt.212_1, Timt
 8643              	@ main.c:5055: 		n = delay_us + STCLK_LD; delay_us = n;
 8644 0006 1549     		ldr	r1, .L696+8	@ tmp133,
 8645              	@ main.c:5053: 		N = Timt + STCLK_LD; Timt = N;
 8646 0008 1A44     		add	r2, r2, r3	@ N, tmp131
 8647 000a 0260     		str	r2, [r0]	@ N, Timt
 8648              	@ main.c:5055: 		n = delay_us + STCLK_LD; delay_us = n;
 8649 000c 0A68     		ldr	r2, [r1]	@ delay_us.213_2, delay_us
 8650              	@ main.c:5059: 		n = (Tim0 + STCLK_LD); Tim0 = n;
 8651 000e 1448     		ldr	r0, .L696+12	@ tmp136,
 8652              	@ main.c:5055: 		n = delay_us + STCLK_LD; delay_us = n;
 8653 0010 1A44     		add	r2, r2, r3	@ _3, tmp131
 8654 0012 0A60     		str	r2, [r1]	@ _3, delay_us
 8655              	@ main.c:5059: 		n = (Tim0 + STCLK_LD); Tim0 = n;
 8656 0014 0268     		ldr	r2, [r0]	@ Tim0.215_4, Tim0
 8657              	@ main.c:5060: 		n = (Tim1 + STCLK_LD); Tim1 = n;
 8658 0016 1349     		ldr	r1, .L696+16	@ tmp139,
 8659              	@ main.c:5059: 		n = (Tim0 + STCLK_LD); Tim0 = n;
 8660 0018 1A44     		add	r2, r2, r3	@ _5, tmp131
 8661 001a 0260     		str	r2, [r0]	@ _5, Tim0
 8662              	@ main.c:5060: 		n = (Tim1 + STCLK_LD); Tim1 = n;
 8663 001c 0A68     		ldr	r2, [r1]	@ Tim1.217_6, Tim1
 8664              	@ main.c:5062: 		n = (trg0 + STCLK_LD); trg0 = n;
ARM GAS  /tmp/ccpmJ073.s 			page 153


 8665 001e 1248     		ldr	r0, .L696+20	@ tmp142,
 8666              	@ main.c:5060: 		n = (Tim1 + STCLK_LD); Tim1 = n;
 8667 0020 1A44     		add	r2, r2, r3	@ _7, tmp131
 8668 0022 0A60     		str	r2, [r1]	@ _7, Tim1
 8669              	@ main.c:5062: 		n = (trg0 + STCLK_LD); trg0 = n;
 8670 0024 0268     		ldr	r2, [r0]	@ trg0.219_8, trg0
 8671              	@ main.c:5063: 		n = (trg1 + STCLK_LD); trg1 = n;
 8672 0026 1149     		ldr	r1, .L696+24	@ tmp145,
 8673              	@ main.c:5062: 		n = (trg0 + STCLK_LD); trg0 = n;
 8674 0028 1A44     		add	r2, r2, r3	@ _9, tmp131
 8675 002a 0260     		str	r2, [r0]	@ _9, trg0
 8676              	@ main.c:5063: 		n = (trg1 + STCLK_LD); trg1 = n;
 8677 002c 0A68     		ldr	r2, [r1]	@ trg1.221_10, trg1
 8678              	@ main.c:5064: 		n = (trg2 + STCLK_LD); trg2 = n;
 8679 002e 1048     		ldr	r0, .L696+28	@ tmp148,
 8680              	@ main.c:5063: 		n = (trg1 + STCLK_LD); trg1 = n;
 8681 0030 1A44     		add	r2, r2, r3	@ _11, tmp131
 8682 0032 0A60     		str	r2, [r1]	@ _11, trg1
 8683              	@ main.c:5064: 		n = (trg2 + STCLK_LD); trg2 = n;
 8684 0034 0268     		ldr	r2, [r0]	@ trg2.223_12, trg2
 8685              	@ main.c:5065: 		n = (trg3 + STCLK_LD); trg3 = n;
 8686 0036 0F49     		ldr	r1, .L696+32	@ tmp151,
 8687              	@ main.c:5064: 		n = (trg2 + STCLK_LD); trg2 = n;
 8688 0038 1A44     		add	r2, r2, r3	@ _13, tmp131
 8689 003a 0260     		str	r2, [r0]	@ _13, trg2
 8690              	@ main.c:5065: 		n = (trg3 + STCLK_LD); trg3 = n;
 8691 003c 0A68     		ldr	r2, [r1]	@ trg3.225_14, trg3
 8692              	@ main.c:5066: 		n = (trg4 + STCLK_LD); trg4 = n;
 8693 003e 0E48     		ldr	r0, .L696+36	@ tmp154,
 8694              	@ main.c:5065: 		n = (trg3 + STCLK_LD); trg3 = n;
 8695 0040 1A44     		add	r2, r2, r3	@ _15, tmp131
 8696 0042 0A60     		str	r2, [r1]	@ _15, trg3
 8697              	@ main.c:5066: 		n = (trg4 + STCLK_LD); trg4 = n;
 8698 0044 0268     		ldr	r2, [r0]	@ trg4.227_16, trg4
 8699              	@ main.c:5067: 		n = (trg5 + STCLK_LD); trg5 = n;
 8700 0046 0D49     		ldr	r1, .L696+40	@ tmp157,
 8701              	@ main.c:5066: 		n = (trg4 + STCLK_LD); trg4 = n;
 8702 0048 1A44     		add	r2, r2, r3	@ _17, tmp131
 8703 004a 0260     		str	r2, [r0]	@ _17, trg4
 8704              	@ main.c:5067: 		n = (trg5 + STCLK_LD); trg5 = n;
 8705 004c 0A68     		ldr	r2, [r1]	@ trg5.229_18, trg5
 8706 004e 1344     		add	r3, r3, r2	@ _19, trg5.229_18
 8707 0050 0B60     		str	r3, [r1]	@ _19, trg5
 8708              	@ main.c:5070: 	}
 8709 0052 7047     		bx	lr	@
 8710              	.L697:
 8711              		.align	2
 8712              	.L696:
 8713 0054 00000000 		.word	Timt
 8714 0058 40548900 		.word	9000000
 8715 005c 00000000 		.word	delay_us
 8716 0060 00000000 		.word	Tim0
 8717 0064 00000000 		.word	Tim1
 8718 0068 00000000 		.word	trg0
 8719 006c 00000000 		.word	trg1
 8720 0070 00000000 		.word	trg2
 8721 0074 00000000 		.word	trg3
ARM GAS  /tmp/ccpmJ073.s 			page 154


 8722 0078 00000000 		.word	trg4
 8723 007c 00000000 		.word	trg5
 8724              		.size	SysTick_Handler, .-SysTick_Handler
 8725              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 8726              		.align	1
 8727              		.p2align 2,,3
 8728              		.global	TIM2_IRQHandler
 8729              		.syntax unified
 8730              		.thumb
 8731              		.thumb_func
 8732              		.fpu softvfp
 8733              		.type	TIM2_IRQHandler, %function
 8734              	TIM2_IRQHandler:
 8735              		@ Stack Align: May be called with mis-aligned SP.
 8736              		@ args = 0, pretend = 0, frame = 0
 8737              		@ frame_needed = 0, uses_anonymous_args = 0
 8738              		@ link register save eliminated.
 8739 0000 6846     		mov	r0, sp	@,
 8740 0002 20F00701 		bic	r1, r0, #7	@,,
 8741 0006 8D46     		mov	sp, r1	@,
 8742              	@ main.c:5072: 		bTIM2_SR_UIF = 0;
 8743 0008 0023     		movs	r3, #0	@ tmp111,
 8744              	@ main.c:5073: 		TIM2->SR = 0;
 8745 000a 4FF08042 		mov	r2, #1073741824	@ tmp112,
 8746              	@ main.c:5071: __attribute__((interrupt)) void TIM2_IRQHandler(void)				{
 8747 000e 01B4     		push	{r0}	@
 8748              	@ main.c:5072: 		bTIM2_SR_UIF = 0;
 8749 0010 0249     		ldr	r1, .L699	@ tmp110,
 8750              	@ main.c:5075: 	}
 8751 0012 01BC     		pop	{r0}	@
 8752              	@ main.c:5072: 		bTIM2_SR_UIF = 0;
 8753 0014 0B60     		str	r3, [r1]	@ tmp111, MEM[(volatile long unsigned int *)1107296768B]
 8754              	@ main.c:5075: 	}
 8755 0016 8546     		mov	sp, r0	@,
 8756              	@ main.c:5073: 		TIM2->SR = 0;
 8757 0018 1382     		strh	r3, [r2, #16]	@ movhi	@ tmp111, MEM[(struct TIM_TypeDef *)1073741824B].SR
 8758              	@ main.c:5075: 	}
 8759 001a 7047     		bx	lr	@
 8760              	.L700:
 8761              		.align	2
 8762              	.L699:
 8763 001c 00020042 		.word	1107296768
 8764              		.size	TIM2_IRQHandler, .-TIM2_IRQHandler
 8765              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 8766              		.align	1
 8767              		.p2align 2,,3
 8768              		.global	TIM3_IRQHandler
 8769              		.syntax unified
 8770              		.thumb
 8771              		.thumb_func
 8772              		.fpu softvfp
 8773              		.type	TIM3_IRQHandler, %function
 8774              	TIM3_IRQHandler:
 8775              		@ Stack Align: May be called with mis-aligned SP.
 8776              		@ args = 0, pretend = 0, frame = 0
 8777              		@ frame_needed = 0, uses_anonymous_args = 0
 8778              		@ link register save eliminated.
ARM GAS  /tmp/ccpmJ073.s 			page 155


 8779 0000 6846     		mov	r0, sp	@,
 8780 0002 20F00701 		bic	r1, r0, #7	@,,
 8781 0006 8D46     		mov	sp, r1	@,
 8782 0008 01B4     		push	{r0}	@
 8783              	@ main.c:5077: 		TIM3->SR = 0;
 8784 000a 0020     		movs	r0, #0	@ tmp122,
 8785              	@ main.c:5081: 		N = Timt3     + TIM3_ARR; Timt3 = N;
 8786 000c 4FF6FF73 		movw	r3, #65535	@ tmp124,
 8787              	@ main.c:5077: 		TIM3->SR = 0;
 8788 0010 0C4A     		ldr	r2, .L702	@ tmp120,
 8789              	@ main.c:5081: 		N = Timt3     + TIM3_ARR; Timt3 = N;
 8790 0012 0D49     		ldr	r1, .L702+4	@ tmp123,
 8791              	@ main.c:5077: 		TIM3->SR = 0;
 8792 0014 1082     		strh	r0, [r2, #16]	@ movhi	@ tmp122, MEM[(struct TIM_TypeDef *)1073742848B].SR
 8793              	@ main.c:5081: 		N = Timt3     + TIM3_ARR; Timt3 = N;
 8794 0016 0A68     		ldr	r2, [r1]	@ Timt3.231_1, Timt3
 8795              	@ main.c:5082: 		n = delay3_us + TIM3_ARR; delay3_us = n;
 8796 0018 0C48     		ldr	r0, .L702+8	@ tmp126,
 8797              	@ main.c:5081: 		N = Timt3     + TIM3_ARR; Timt3 = N;
 8798 001a 1A44     		add	r2, r2, r3	@ N, tmp124
 8799 001c 0A60     		str	r2, [r1]	@ N, Timt3
 8800              	@ main.c:5082: 		n = delay3_us + TIM3_ARR; delay3_us = n;
 8801 001e 0268     		ldr	r2, [r0]	@ delay3_us.232_2, delay3_us
 8802              	@ main.c:5086: 		n = (t3rg0 + TIM3_ARR); t3rg0 = n;
 8803 0020 0B49     		ldr	r1, .L702+12	@ tmp129,
 8804              	@ main.c:5082: 		n = delay3_us + TIM3_ARR; delay3_us = n;
 8805 0022 1A44     		add	r2, r2, r3	@ n, tmp124
 8806 0024 0260     		str	r2, [r0]	@ n, delay3_us
 8807              	@ main.c:5086: 		n = (t3rg0 + TIM3_ARR); t3rg0 = n;
 8808 0026 0A68     		ldr	r2, [r1]	@ t3rg0.233_3, t3rg0
 8809              	@ main.c:5087: 		n = (t3rg1 + TIM3_ARR); t3rg1 = n;
 8810 0028 0A48     		ldr	r0, .L702+16	@ tmp132,
 8811              	@ main.c:5086: 		n = (t3rg0 + TIM3_ARR); t3rg0 = n;
 8812 002a 1A44     		add	r2, r2, r3	@ n, tmp124
 8813 002c 0A60     		str	r2, [r1]	@ n, t3rg0
 8814              	@ main.c:5087: 		n = (t3rg1 + TIM3_ARR); t3rg1 = n;
 8815 002e 0268     		ldr	r2, [r0]	@ t3rg1.234_4, t3rg1
 8816              	@ main.c:5088: 		n = (t3rg2 + TIM3_ARR); t3rg2 = n;
 8817 0030 0949     		ldr	r1, .L702+20	@ tmp135,
 8818              	@ main.c:5087: 		n = (t3rg1 + TIM3_ARR); t3rg1 = n;
 8819 0032 1A44     		add	r2, r2, r3	@ n, tmp124
 8820 0034 0260     		str	r2, [r0]	@ n, t3rg1
 8821              	@ main.c:5088: 		n = (t3rg2 + TIM3_ARR); t3rg2 = n;
 8822 0036 0A68     		ldr	r2, [r1]	@ t3rg2.235_5, t3rg2
 8823              	@ main.c:5092: 	}
 8824 0038 01BC     		pop	{r0}	@
 8825              	@ main.c:5088: 		n = (t3rg2 + TIM3_ARR); t3rg2 = n;
 8826 003a 1344     		add	r3, r3, r2	@ n, t3rg2.235_5
 8827 003c 0B60     		str	r3, [r1]	@ n, t3rg2
 8828              	@ main.c:5092: 	}
 8829 003e 8546     		mov	sp, r0	@,
 8830 0040 7047     		bx	lr	@
 8831              	.L703:
 8832 0042 00BF     		.align	2
 8833              	.L702:
 8834 0044 00040040 		.word	1073742848
 8835 0048 00000000 		.word	Timt3
ARM GAS  /tmp/ccpmJ073.s 			page 156


 8836 004c 00000000 		.word	delay3_us
 8837 0050 00000000 		.word	t3rg0
 8838 0054 00000000 		.word	t3rg1
 8839 0058 00000000 		.word	t3rg2
 8840              		.size	TIM3_IRQHandler, .-TIM3_IRQHandler
 8841              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 8842              		.align	1
 8843              		.p2align 2,,3
 8844              		.global	EXTI0_IRQHandler
 8845              		.syntax unified
 8846              		.thumb
 8847              		.thumb_func
 8848              		.fpu softvfp
 8849              		.type	EXTI0_IRQHandler, %function
 8850              	EXTI0_IRQHandler:
 8851              		@ Stack Align: May be called with mis-aligned SP.
 8852              		@ args = 0, pretend = 0, frame = 0
 8853              		@ frame_needed = 0, uses_anonymous_args = 0
 8854              		@ link register save eliminated.
 8855 0000 6846     		mov	r0, sp	@,
 8856 0002 20F00701 		bic	r1, r0, #7	@,,
 8857 0006 8D46     		mov	sp, r1	@,
 8858              	@ main.c:5094: 		if(PB0_i){
 8859 0008 064B     		ldr	r3, .L709	@ tmp116,
 8860              	@ main.c:5093: __attribute__((interrupt)) void EXTI0_IRQHandler(void)			{
 8861 000a 01B4     		push	{r0}	@
 8862              	@ main.c:5094: 		if(PB0_i){
 8863 000c 1B68     		ldr	r3, [r3]	@ _1, MEM[(volatile long unsigned int *)1109491968B]
 8864 000e 1BB1     		cbz	r3, .L705	@ _1,
 8865              	@ main.c:5095: 			flag_9=1;
 8866 0010 0122     		movs	r2, #1	@ tmp120,
 8867 0012 054B     		ldr	r3, .L709+4	@ tmp118,
 8868 0014 5B01     		lsls	r3, r3, #5	@ tmp119, tmp118,
 8869 0016 5A62     		str	r2, [r3, #36]	@ tmp120, *_6
 8870              	.L705:
 8871              	@ main.c:5097: 		EXTI->PR   = EXTI_PR_PR0;				// Clear interupt request
 8872 0018 0122     		movs	r2, #1	@ tmp122,
 8873 001a 044B     		ldr	r3, .L709+8	@ tmp121,
 8874              	@ main.c:5098: 	}
 8875 001c 01BC     		pop	{r0}	@
 8876              	@ main.c:5097: 		EXTI->PR   = EXTI_PR_PR0;				// Clear interupt request
 8877 001e 5A61     		str	r2, [r3, #20]	@ tmp122, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 8878              	@ main.c:5098: 	}
 8879 0020 8546     		mov	sp, r0	@,
 8880 0022 7047     		bx	lr	@
 8881              	.L710:
 8882              		.align	2
 8883              	.L709:
 8884 0024 00812142 		.word	1109491968
 8885 0028 00001001 		.word	.LANCHOR8+17825792
 8886 002c 00040140 		.word	1073808384
 8887              		.size	EXTI0_IRQHandler, .-EXTI0_IRQHandler
 8888              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
 8889              		.align	1
 8890              		.p2align 2,,3
 8891              		.global	EXTI1_IRQHandler
 8892              		.syntax unified
ARM GAS  /tmp/ccpmJ073.s 			page 157


 8893              		.thumb
 8894              		.thumb_func
 8895              		.fpu softvfp
 8896              		.type	EXTI1_IRQHandler, %function
 8897              	EXTI1_IRQHandler:
 8898              		@ Stack Align: May be called with mis-aligned SP.
 8899              		@ args = 0, pretend = 0, frame = 0
 8900              		@ frame_needed = 0, uses_anonymous_args = 0
 8901              		@ link register save eliminated.
 8902 0000 6846     		mov	r0, sp	@,
 8903 0002 20F00701 		bic	r1, r0, #7	@,,
 8904 0006 8D46     		mov	sp, r1	@,
 8905              	@ main.c:5101: 		EXTI->PR   = EXTI_PR_PR1;				// Clear interupt request
 8906 0008 0221     		movs	r1, #2	@ tmp113,
 8907 000a 054B     		ldr	r3, .L712	@ tmp112,
 8908              	@ main.c:5102: 		LED ^=1;
 8909 000c 054A     		ldr	r2, .L712+4	@ tmp114,
 8910              	@ main.c:5099: __attribute__((interrupt)) void EXTI1_IRQHandler(void)			{
 8911 000e 01B4     		push	{r0}	@
 8912              	@ main.c:5101: 		EXTI->PR   = EXTI_PR_PR1;				// Clear interupt request
 8913 0010 5961     		str	r1, [r3, #20]	@ tmp113, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 8914              	@ main.c:5102: 		LED ^=1;
 8915 0012 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109524916B]
 8916              	@ main.c:5103: 	}
 8917 0014 01BC     		pop	{r0}	@
 8918              	@ main.c:5102: 		LED ^=1;
 8919 0016 83F00103 		eor	r3, r3, #1	@ _2, _1,
 8920 001a 1360     		str	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109524916B]
 8921              	@ main.c:5103: 	}
 8922 001c 8546     		mov	sp, r0	@,
 8923 001e 7047     		bx	lr	@
 8924              	.L713:
 8925              		.align	2
 8926              	.L712:
 8927 0020 00040140 		.word	1073808384
 8928 0024 B4012242 		.word	1109524916
 8929              		.size	EXTI1_IRQHandler, .-EXTI1_IRQHandler
 8930              		.section	.text.EXTI2_IRQHandler,"ax",%progbits
 8931              		.align	1
 8932              		.p2align 2,,3
 8933              		.global	EXTI2_IRQHandler
 8934              		.syntax unified
 8935              		.thumb
 8936              		.thumb_func
 8937              		.fpu softvfp
 8938              		.type	EXTI2_IRQHandler, %function
 8939              	EXTI2_IRQHandler:
 8940              		@ Stack Align: May be called with mis-aligned SP.
 8941              		@ args = 0, pretend = 0, frame = 0
 8942              		@ frame_needed = 0, uses_anonymous_args = 0
 8943              		@ link register save eliminated.
 8944 0000 6846     		mov	r0, sp	@,
 8945 0002 20F00701 		bic	r1, r0, #7	@,,
 8946 0006 8D46     		mov	sp, r1	@,
 8947              	@ main.c:5105: 		bEXTI_PR_2 = 1;
 8948 0008 0121     		movs	r1, #1	@ tmp113,
 8949 000a 054B     		ldr	r3, .L715	@ tmp112,
ARM GAS  /tmp/ccpmJ073.s 			page 158


 8950              	@ main.c:5106: 		LED ^= 1;
 8951 000c 054A     		ldr	r2, .L715+4	@ tmp114,
 8952              	@ main.c:5104: __attribute__((interrupt)) void EXTI2_IRQHandler(void)			{
 8953 000e 01B4     		push	{r0}	@
 8954              	@ main.c:5105: 		bEXTI_PR_2 = 1;
 8955 0010 1960     		str	r1, [r3]	@ tmp113, MEM[(volatile long unsigned int *)1109426824B]
 8956              	@ main.c:5106: 		LED ^= 1;
 8957 0012 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109524916B]
 8958              	@ main.c:5107: 	}
 8959 0014 01BC     		pop	{r0}	@
 8960              	@ main.c:5106: 		LED ^= 1;
 8961 0016 4B40     		eors	r3, r3, r1	@, _2, _1,
 8962 0018 1360     		str	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109524916B]
 8963              	@ main.c:5107: 	}
 8964 001a 8546     		mov	sp, r0	@,
 8965 001c 7047     		bx	lr	@
 8966              	.L716:
 8967 001e 00BF     		.align	2
 8968              	.L715:
 8969 0020 88822042 		.word	1109426824
 8970 0024 B4012242 		.word	1109524916
 8971              		.size	EXTI2_IRQHandler, .-EXTI2_IRQHandler
 8972              		.section	.text.EXTI3_IRQHandler,"ax",%progbits
 8973              		.align	1
 8974              		.p2align 2,,3
 8975              		.global	EXTI3_IRQHandler
 8976              		.syntax unified
 8977              		.thumb
 8978              		.thumb_func
 8979              		.fpu softvfp
 8980              		.type	EXTI3_IRQHandler, %function
 8981              	EXTI3_IRQHandler:
 8982              		@ Stack Align: May be called with mis-aligned SP.
 8983              		@ args = 0, pretend = 0, frame = 0
 8984              		@ frame_needed = 0, uses_anonymous_args = 0
 8985              		@ link register save eliminated.
 8986 0000 6846     		mov	r0, sp	@,
 8987 0002 20F00701 		bic	r1, r0, #7	@,,
 8988 0006 8D46     		mov	sp, r1	@,
 8989              	@ main.c:5109: 		EXTI->PR   = EXTI_PR_PR3;				// Clear interupt request
 8990 0008 0821     		movs	r1, #8	@ tmp113,
 8991 000a 054B     		ldr	r3, .L718	@ tmp112,
 8992              	@ main.c:5110: 		LED ^=1;
 8993 000c 054A     		ldr	r2, .L718+4	@ tmp114,
 8994              	@ main.c:5108: __attribute__((interrupt)) void EXTI3_IRQHandler(void)			{
 8995 000e 01B4     		push	{r0}	@
 8996              	@ main.c:5109: 		EXTI->PR   = EXTI_PR_PR3;				// Clear interupt request
 8997 0010 5961     		str	r1, [r3, #20]	@ tmp113, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 8998              	@ main.c:5110: 		LED ^=1;
 8999 0012 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109524916B]
 9000              	@ main.c:5111: 	}
 9001 0014 01BC     		pop	{r0}	@
 9002              	@ main.c:5110: 		LED ^=1;
 9003 0016 83F00103 		eor	r3, r3, #1	@ _2, _1,
 9004 001a 1360     		str	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109524916B]
 9005              	@ main.c:5111: 	}
 9006 001c 8546     		mov	sp, r0	@,
ARM GAS  /tmp/ccpmJ073.s 			page 159


 9007 001e 7047     		bx	lr	@
 9008              	.L719:
 9009              		.align	2
 9010              	.L718:
 9011 0020 00040140 		.word	1073808384
 9012 0024 B4012242 		.word	1109524916
 9013              		.size	EXTI3_IRQHandler, .-EXTI3_IRQHandler
 9014              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
 9015              		.align	1
 9016              		.p2align 2,,3
 9017              		.global	EXTI4_IRQHandler
 9018              		.syntax unified
 9019              		.thumb
 9020              		.thumb_func
 9021              		.fpu softvfp
 9022              		.type	EXTI4_IRQHandler, %function
 9023              	EXTI4_IRQHandler:
 9024              		@ Stack Align: May be called with mis-aligned SP.
 9025              		@ args = 0, pretend = 0, frame = 0
 9026              		@ frame_needed = 0, uses_anonymous_args = 0
 9027              		@ link register save eliminated.
 9028 0000 6846     		mov	r0, sp	@,
 9029 0002 20F00701 		bic	r1, r0, #7	@,,
 9030 0006 8D46     		mov	sp, r1	@,
 9031              	@ main.c:5113: 		EXTI->PR   = EXTI_PR_PR4;			
 9032 0008 1021     		movs	r1, #16	@ tmp113,
 9033 000a 054B     		ldr	r3, .L721	@ tmp112,
 9034              	@ main.c:5114: 		LED ^= 1;
 9035 000c 054A     		ldr	r2, .L721+4	@ tmp114,
 9036              	@ main.c:5112: __attribute__((interrupt)) void EXTI4_IRQHandler(void)			{
 9037 000e 01B4     		push	{r0}	@
 9038              	@ main.c:5113: 		EXTI->PR   = EXTI_PR_PR4;			
 9039 0010 5961     		str	r1, [r3, #20]	@ tmp113, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9040              	@ main.c:5114: 		LED ^= 1;
 9041 0012 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109524916B]
 9042              	@ main.c:5115: 	}
 9043 0014 01BC     		pop	{r0}	@
 9044              	@ main.c:5114: 		LED ^= 1;
 9045 0016 83F00103 		eor	r3, r3, #1	@ _2, _1,
 9046 001a 1360     		str	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109524916B]
 9047              	@ main.c:5115: 	}
 9048 001c 8546     		mov	sp, r0	@,
 9049 001e 7047     		bx	lr	@
 9050              	.L722:
 9051              		.align	2
 9052              	.L721:
 9053 0020 00040140 		.word	1073808384
 9054 0024 B4012242 		.word	1109524916
 9055              		.size	EXTI4_IRQHandler, .-EXTI4_IRQHandler
 9056              		.section	.text.EXTI15_10_IRQHandler,"ax",%progbits
 9057              		.align	1
 9058              		.p2align 2,,3
 9059              		.global	EXTI15_10_IRQHandler
 9060              		.syntax unified
 9061              		.thumb
 9062              		.thumb_func
 9063              		.fpu softvfp
ARM GAS  /tmp/ccpmJ073.s 			page 160


 9064              		.type	EXTI15_10_IRQHandler, %function
 9065              	EXTI15_10_IRQHandler:
 9066              		@ Stack Align: May be called with mis-aligned SP.
 9067              		@ args = 0, pretend = 0, frame = 0
 9068              		@ frame_needed = 0, uses_anonymous_args = 0
 9069              		@ link register save eliminated.
 9070 0000 6846     		mov	r0, sp	@,
 9071 0002 20F00701 		bic	r1, r0, #7	@,,
 9072 0006 8D46     		mov	sp, r1	@,
 9073              	@ main.c:5117: 		if(bEXTI_PR_13) {
 9074 0008 044B     		ldr	r3, .L728	@ tmp111,
 9075              	@ main.c:5116: __attribute__((interrupt)) void EXTI15_10_IRQHandler(void)	{
 9076 000a 01B4     		push	{r0}	@
 9077              	@ main.c:5117: 		if(bEXTI_PR_13) {
 9078 000c 1A68     		ldr	r2, [r3]	@ _1, MEM[(volatile long unsigned int *)1109426868B]
 9079 000e 0AB1     		cbz	r2, .L723	@ _1,
 9080              	@ main.c:5118: 			bEXTI_PR_13 = 1;
 9081 0010 0122     		movs	r2, #1	@ tmp113,
 9082 0012 1A60     		str	r2, [r3]	@ tmp113, MEM[(volatile long unsigned int *)1109426868B]
 9083              	.L723:
 9084              	@ main.c:5122: 	}
 9085 0014 01BC     		pop	{r0}	@
 9086 0016 8546     		mov	sp, r0	@,
 9087 0018 7047     		bx	lr	@
 9088              	.L729:
 9089 001a 00BF     		.align	2
 9090              	.L728:
 9091 001c B4822042 		.word	1109426868
 9092              		.size	EXTI15_10_IRQHandler, .-EXTI15_10_IRQHandler
 9093              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 9094              		.align	1
 9095              		.p2align 2,,3
 9096              		.global	EXTI9_5_IRQHandler
 9097              		.syntax unified
 9098              		.thumb
 9099              		.thumb_func
 9100              		.fpu softvfp
 9101              		.type	EXTI9_5_IRQHandler, %function
 9102              	EXTI9_5_IRQHandler:
 9103              		@ Stack Align: May be called with mis-aligned SP.
 9104              		@ args = 0, pretend = 0, frame = 0
 9105              		@ frame_needed = 0, uses_anonymous_args = 0
 9106              		@ link register save eliminated.
 9107 0000 6846     		mov	r0, sp	@,
 9108 0002 20F00701 		bic	r1, r0, #7	@,,
 9109 0006 8D46     		mov	sp, r1	@,
 9110              	@ main.c:5124: 		if((bPBI_6 == 0)&&(EXTI->PR & EXTI_PR_PR6)) {			// check request PB6 touchpad
 9111 0008 0B4B     		ldr	r3, .L735	@ tmp120,
 9112              	@ main.c:5123: __attribute__((interrupt)) void EXTI9_5_IRQHandler	 (void)	{
 9113 000a 01B4     		push	{r0}	@
 9114              	@ main.c:5124: 		if((bPBI_6 == 0)&&(EXTI->PR & EXTI_PR_PR6)) {			// check request PB6 touchpad
 9115 000c 1B68     		ldr	r3, [r3]	@ _1, MEM[(volatile long unsigned int *)1109491992B]
 9116 000e 83B9     		cbnz	r3, .L730	@ _1,
 9117              	@ main.c:5124: 		if((bPBI_6 == 0)&&(EXTI->PR & EXTI_PR_PR6)) {			// check request PB6 touchpad
 9118 0010 03F18043 		add	r3, r3, #1073741824	@ tmp121, tmp121,
 9119 0014 03F58233 		add	r3, r3, #66560	@ tmp121, tmp121,
 9120 0018 5A69     		ldr	r2, [r3, #20]	@ _2, MEM[(struct EXTI_TypeDef *)1073808384B].PR
ARM GAS  /tmp/ccpmJ073.s 			page 161


 9121 001a 5206     		lsls	r2, r2, #25	@, _2,
 9122 001c 09D5     		bpl	.L730	@,
 9123              	@ main.c:5127: 			f1_tpirq   = 1;									// set IRQ_TP FLAG
 9124 001e 0120     		movs	r0, #1	@ tmp126,
 9125              	@ main.c:5128: 			EXTI->PR   = EXTI_PR_PR6;				// Clear interupt request
 9126 0020 4021     		movs	r1, #64	@ tmp128,
 9127              	@ main.c:5127: 			f1_tpirq   = 1;									// set IRQ_TP FLAG
 9128 0022 064A     		ldr	r2, .L735+4	@ tmp124,
 9129 0024 5201     		lsls	r2, r2, #5	@ tmp125, tmp124,
 9130 0026 5060     		str	r0, [r2, #4]	@ tmp126, *_8
 9131              	@ main.c:5128: 			EXTI->PR   = EXTI_PR_PR6;				// Clear interupt request
 9132 0028 5961     		str	r1, [r3, #20]	@ tmp128, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9133              	@ main.c:5131: 			EXTI->FTSR &= ~EXTI_FTSR_TR6;  	// Failing trigger disabled
 9134 002a DA68     		ldr	r2, [r3, #12]	@ _9, MEM[(struct EXTI_TypeDef *)1073808384B].FTSR
 9135 002c 22F04002 		bic	r2, r2, #64	@ _10, _9,
 9136 0030 DA60     		str	r2, [r3, #12]	@ _10, MEM[(struct EXTI_TypeDef *)1073808384B].FTSR
 9137              	.L730:
 9138              	@ main.c:5135: 	}
 9139 0032 01BC     		pop	{r0}	@
 9140 0034 8546     		mov	sp, r0	@,
 9141 0036 7047     		bx	lr	@
 9142              	.L736:
 9143              		.align	2
 9144              	.L735:
 9145 0038 18812142 		.word	1109491992
 9146 003c 00001001 		.word	.LANCHOR8+17825792
 9147              		.size	EXTI9_5_IRQHandler, .-EXTI9_5_IRQHandler
 9148              		.section	.text.RTC_IRQHandler,"ax",%progbits
 9149              		.align	1
 9150              		.p2align 2,,3
 9151              		.global	RTC_IRQHandler
 9152              		.syntax unified
 9153              		.thumb
 9154              		.thumb_func
 9155              		.fpu softvfp
 9156              		.type	RTC_IRQHandler, %function
 9157              	RTC_IRQHandler:
 9158              		@ Stack Align: May be called with mis-aligned SP.
 9159              		@ args = 0, pretend = 0, frame = 0
 9160              		@ frame_needed = 0, uses_anonymous_args = 0
 9161              		@ link register save eliminated.
 9162 0000 6846     		mov	r0, sp	@,
 9163 0002 20F00701 		bic	r1, r0, #7	@,,
 9164 0006 8D46     		mov	sp, r1	@,
 9165              	@ main.c:5140: 		f3_rtc_1sec = 1;
 9166 0008 0121     		movs	r1, #1	@ tmp121,
 9167              	@ main.c:5136: __attribute__((interrupt)) void RTC_IRQHandler 	(void)			{
 9168 000a 11B4     		push	{r0, r4}	@
 9169              	@ main.c:5139: 		bRTC_CRL_SECF = 0;		//Clear Interrupt Flag bit
 9170 000c 0024     		movs	r4, #0	@ tmp117,
 9171              	@ main.c:5140: 		f3_rtc_1sec = 1;
 9172 000e 064B     		ldr	r3, .L741	@ tmp119,
 9173              	@ main.c:5139: 		bRTC_CRL_SECF = 0;		//Clear Interrupt Flag bit
 9174 0010 0648     		ldr	r0, .L741+4	@ tmp116,
 9175              	@ main.c:5140: 		f3_rtc_1sec = 1;
 9176 0012 5B01     		lsls	r3, r3, #5	@ tmp120, tmp119,
 9177              	@ main.c:5141: 		while( bRTC_CRL_RTOFF == 0 );
ARM GAS  /tmp/ccpmJ073.s 			page 162


 9178 0014 064A     		ldr	r2, .L741+8	@ tmp122,
 9179              	@ main.c:5139: 		bRTC_CRL_SECF = 0;		//Clear Interrupt Flag bit
 9180 0016 0460     		str	r4, [r0]	@ tmp117, MEM[(volatile long unsigned int *)1107624064B]
 9181              	@ main.c:5140: 		f3_rtc_1sec = 1;
 9182 0018 D960     		str	r1, [r3, #12]	@ tmp121, *_5
 9183              	.L738:
 9184              	@ main.c:5141: 		while( bRTC_CRL_RTOFF == 0 );
 9185 001a 1368     		ldr	r3, [r2]	@ _6, MEM[(volatile long unsigned int *)1107624084B]
 9186 001c 002B     		cmp	r3, #0	@ _6
 9187 001e FCD0     		beq	.L738	@
 9188              	@ main.c:5142: 	}
 9189 0020 11BC     		pop	{r0, r4}	@
 9190 0022 8546     		mov	sp, r0	@,
 9191 0024 7047     		bx	lr	@
 9192              	.L742:
 9193 0026 00BF     		.align	2
 9194              	.L741:
 9195 0028 00001001 		.word	.LANCHOR8+17825792
 9196 002c 80000542 		.word	1107624064
 9197 0030 94000542 		.word	1107624084
 9198              		.size	RTC_IRQHandler, .-RTC_IRQHandler
 9199              		.section	.text.RTCAlarm_IRQHandler,"ax",%progbits
 9200              		.align	1
 9201              		.p2align 2,,3
 9202              		.global	RTCAlarm_IRQHandler
 9203              		.syntax unified
 9204              		.thumb
 9205              		.thumb_func
 9206              		.fpu softvfp
 9207              		.type	RTCAlarm_IRQHandler, %function
 9208              	RTCAlarm_IRQHandler:
 9209              		@ Stack Align: May be called with mis-aligned SP.
 9210              		@ args = 0, pretend = 0, frame = 0
 9211              		@ frame_needed = 0, uses_anonymous_args = 0
 9212              		@ link register save eliminated.
 9213 0000 6846     		mov	r0, sp	@,
 9214 0002 20F00701 		bic	r1, r0, #7	@,,
 9215 0006 8D46     		mov	sp, r1	@,
 9216              	@ main.c:5144: 		RTC->CRL &= ~(RTC_CRL_ALRF); // potrzebne do wakeup
 9217 0008 0749     		ldr	r1, .L744	@ tmp114,
 9218              	@ main.c:5145: 		EXTI->PR |= EXTI_PR_PR17;
 9219 000a 084A     		ldr	r2, .L744+4	@ tmp120,
 9220              	@ main.c:5144: 		RTC->CRL &= ~(RTC_CRL_ALRF); // potrzebne do wakeup
 9221 000c 8B88     		ldrh	r3, [r1, #4]	@, MEM[(struct RTC_TypeDef *)1073752064B].CRL
 9222              	@ main.c:5143: __attribute__((interrupt)) void RTCAlarm_IRQHandler(void){
 9223 000e 01B4     		push	{r0}	@
 9224              	@ main.c:5144: 		RTC->CRL &= ~(RTC_CRL_ALRF); // potrzebne do wakeup
 9225 0010 23F00203 		bic	r3, r3, #2	@ _2, MEM[(struct RTC_TypeDef *)1073752064B].CRL,
 9226 0014 1B04     		lsls	r3, r3, #16	@ _2, _2,
 9227 0016 1B0C     		lsrs	r3, r3, #16	@ _2, _2,
 9228 0018 8B80     		strh	r3, [r1, #4]	@ movhi	@ _2, MEM[(struct RTC_TypeDef *)1073752064B].CRL
 9229              	@ main.c:5145: 		EXTI->PR |= EXTI_PR_PR17;
 9230 001a 5369     		ldr	r3, [r2, #20]	@ _3, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9231              	@ main.c:5148: 	}
 9232 001c 01BC     		pop	{r0}	@
 9233              	@ main.c:5145: 		EXTI->PR |= EXTI_PR_PR17;
 9234 001e 43F40033 		orr	r3, r3, #131072	@ _4, _3,
ARM GAS  /tmp/ccpmJ073.s 			page 163


 9235 0022 5361     		str	r3, [r2, #20]	@ _4, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9236              	@ main.c:5148: 	}
 9237 0024 8546     		mov	sp, r0	@,
 9238 0026 7047     		bx	lr	@
 9239              	.L745:
 9240              		.align	2
 9241              	.L744:
 9242 0028 00280040 		.word	1073752064
 9243 002c 00040140 		.word	1073808384
 9244              		.size	RTCAlarm_IRQHandler, .-RTCAlarm_IRQHandler
 9245              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 9246              		.align	1
 9247              		.p2align 2,,3
 9248              		.global	DMA1_Channel1_IRQHandler
 9249              		.syntax unified
 9250              		.thumb
 9251              		.thumb_func
 9252              		.fpu softvfp
 9253              		.type	DMA1_Channel1_IRQHandler, %function
 9254              	DMA1_Channel1_IRQHandler:
 9255              		@ Stack Align: May be called with mis-aligned SP.
 9256              		@ args = 0, pretend = 0, frame = 0
 9257              		@ frame_needed = 0, uses_anonymous_args = 0
 9258              		@ link register save eliminated.
 9259 0000 6846     		mov	r0, sp	@,
 9260 0002 20F00701 		bic	r1, r0, #7	@,,
 9261 0006 8D46     		mov	sp, r1	@,
 9262              	@ main.c:5150: 		if(DMA1->ISR & DMA_ISR_GIF1){
 9263 0008 084B     		ldr	r3, .L751	@ tmp119,
 9264              	@ main.c:5149: __attribute__((interrupt)) void DMA1_Channel1_IRQHandler(void){
 9265 000a 11B4     		push	{r0, r4}	@
 9266              	@ main.c:5150: 		if(DMA1->ISR & DMA_ISR_GIF1){
 9267 000c 1A68     		ldr	r2, [r3]	@ _1, MEM[(struct DMA_TypeDef *)1073872896B].ISR
 9268 000e D207     		lsls	r2, r2, #31	@, _1,
 9269 0010 09D5     		bpl	.L746	@,
 9270              	@ main.c:5155: 			f7_dma1 = 1;
 9271 0012 0120     		movs	r0, #1	@ tmp126,
 9272              	@ main.c:5152: 			DMA1->IFCR =                  DMA_IFCR_CTCIF1;
 9273 0014 0224     		movs	r4, #2	@ tmp122,
 9274              	@ main.c:5155: 			f7_dma1 = 1;
 9275 0016 064A     		ldr	r2, .L751+4	@ tmp124,
 9276              	@ main.c:5156: 			LED1   ^= 1;
 9277 0018 0649     		ldr	r1, .L751+8	@ tmp127,
 9278              	@ main.c:5155: 			f7_dma1 = 1;
 9279 001a 5201     		lsls	r2, r2, #5	@ tmp125, tmp124,
 9280              	@ main.c:5152: 			DMA1->IFCR =                  DMA_IFCR_CTCIF1;
 9281 001c 5C60     		str	r4, [r3, #4]	@ tmp122, MEM[(struct DMA_TypeDef *)1073872896B].IFCR
 9282              	@ main.c:5155: 			f7_dma1 = 1;
 9283 001e D061     		str	r0, [r2, #28]	@ tmp126, *_7
 9284              	@ main.c:5156: 			LED1   ^= 1;
 9285 0020 0B68     		ldr	r3, [r1]	@ _8, MEM[(volatile long unsigned int *)1109492096B]
 9286 0022 4340     		eors	r3, r3, r0	@, _9, _8,
 9287 0024 0B60     		str	r3, [r1]	@ _9, MEM[(volatile long unsigned int *)1109492096B]
 9288              	.L746:
 9289              	@ main.c:5160: 	}
 9290 0026 11BC     		pop	{r0, r4}	@
 9291 0028 8546     		mov	sp, r0	@,
ARM GAS  /tmp/ccpmJ073.s 			page 164


 9292 002a 7047     		bx	lr	@
 9293              	.L752:
 9294              		.align	2
 9295              	.L751:
 9296 002c 00000240 		.word	1073872896
 9297 0030 00001001 		.word	.LANCHOR8+17825792
 9298 0034 80812142 		.word	1109492096
 9299              		.size	DMA1_Channel1_IRQHandler, .-DMA1_Channel1_IRQHandler
 9300              		.section	.text.FSMC_IRQHandler,"ax",%progbits
 9301              		.align	1
 9302              		.p2align 2,,3
 9303              		.global	FSMC_IRQHandler
 9304              		.syntax unified
 9305              		.thumb
 9306              		.thumb_func
 9307              		.fpu softvfp
 9308              		.type	FSMC_IRQHandler, %function
 9309              	FSMC_IRQHandler:
 9310              		@ Stack Align: May be called with mis-aligned SP.
 9311              		@ args = 0, pretend = 0, frame = 0
 9312              		@ frame_needed = 0, uses_anonymous_args = 0
 9313              		@ link register save eliminated.
 9314 0000 6846     		mov	r0, sp	@,
 9315 0002 20F00701 		bic	r1, r0, #7	@,,
 9316 0006 8D46     		mov	sp, r1	@,
 9317 0008 01B4     		push	{r0}	@
 9318              	@ main.c:5163: }
 9319 000a 01BC     		pop	{r0}	@
 9320 000c 8546     		mov	sp, r0	@,
 9321 000e 7047     		bx	lr	@
 9322              		.size	FSMC_IRQHandler, .-FSMC_IRQHandler
 9323              		.section	.text.DACDmaInit,"ax",%progbits
 9324              		.align	1
 9325              		.p2align 2,,3
 9326              		.global	DACDmaInit
 9327              		.syntax unified
 9328              		.thumb
 9329              		.thumb_func
 9330              		.fpu softvfp
 9331              		.type	DACDmaInit, %function
 9332              	DACDmaInit:
 9333              		@ args = 0, pretend = 0, frame = 0
 9334              		@ frame_needed = 0, uses_anonymous_args = 0
 9335              		@ link register save eliminated.
 9336 0000 10B4     		push	{r4}	@
 9337              	@ main.c:5354: 	DAC->DHR12RD	= (0<<16) | 900;
 9338 0002 4FF46174 		mov	r4, #900	@ tmp125,
 9339              	@ main.c:5345: 	RCC->APB1ENR  |= RCC_APB1ENR_DACEN;
 9340 0006 0A48     		ldr	r0, .L756	@ tmp116,
 9341              	@ main.c:5346: 	GPIOA->CRL   	&= 0xff00ffff;
 9342 0008 0A4B     		ldr	r3, .L756+4	@ tmp118,
 9343              	@ main.c:5345: 	RCC->APB1ENR  |= RCC_APB1ENR_DACEN;
 9344 000a C269     		ldr	r2, [r0, #28]	@ _1, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 9345              	@ main.c:5350: 	DAC->CR				= DAC_CR_TEN1|DAC_CR_TEN2|DAC_CR_WAVE1|DAC_CR_WAVE2|DAC_CR_EN1|DAC_CR_EN
 9346 000c 0A49     		ldr	r1, .L756+8	@ tmp122,
 9347              	@ main.c:5345: 	RCC->APB1ENR  |= RCC_APB1ENR_DACEN;
 9348 000e 42F00052 		orr	r2, r2, #536870912	@ _2, _1,
ARM GAS  /tmp/ccpmJ073.s 			page 165


 9349 0012 C261     		str	r2, [r0, #28]	@ _2, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 9350              	@ main.c:5346: 	GPIOA->CRL   	&= 0xff00ffff;
 9351 0014 1A68     		ldr	r2, [r3]	@ _3, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 9352              	@ main.c:5350: 	DAC->CR				= DAC_CR_TEN1|DAC_CR_TEN2|DAC_CR_WAVE1|DAC_CR_WAVE2|DAC_CR_EN1|DAC_CR_EN
 9353 0016 0948     		ldr	r0, .L756+12	@ tmp123,
 9354              	@ main.c:5346: 	GPIOA->CRL   	&= 0xff00ffff;
 9355 0018 22F47F02 		bic	r2, r2, #16711680	@ _4, _3,
 9356 001c 1A60     		str	r2, [r3]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 9357              	@ main.c:5347: 	GPIOA->CRL   	|= 0x00dd0000;
 9358 001e 1A68     		ldr	r2, [r3]	@ _5, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 9359 0020 42F45D02 		orr	r2, r2, #14483456	@ _6, _5,
 9360 0024 1A60     		str	r2, [r3]	@ _6, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 9361              	@ main.c:5350: 	DAC->CR				= DAC_CR_TEN1|DAC_CR_TEN2|DAC_CR_WAVE1|DAC_CR_WAVE2|DAC_CR_EN1|DAC_CR_EN
 9362 0026 0860     		str	r0, [r1]	@ tmp123, MEM[(struct DAC_TypeDef *)1073771520B].CR
 9363              	@ main.c:5354: 	DAC->DHR12RD	= (0<<16) | 900;
 9364 0028 0C62     		str	r4, [r1, #32]	@ tmp125, MEM[(struct DAC_TypeDef *)1073771520B].DHR12RD
 9365              	@ main.c:5356: }
 9366 002a 10BC     		pop	{r4}	@
 9367 002c 7047     		bx	lr	@
 9368              	.L757:
 9369 002e 00BF     		.align	2
 9370              	.L756:
 9371 0030 00100240 		.word	1073876992
 9372 0034 00080140 		.word	1073809408
 9373 0038 00740040 		.word	1073771520
 9374 003c D50AD50A 		.word	181734101
 9375              		.size	DACDmaInit, .-DACDmaInit
 9376              		.section	.text.TIM4_IRQHandler,"ax",%progbits
 9377              		.align	1
 9378              		.p2align 2,,3
 9379              		.global	TIM4_IRQHandler
 9380              		.syntax unified
 9381              		.thumb
 9382              		.thumb_func
 9383              		.fpu softvfp
 9384              		.type	TIM4_IRQHandler, %function
 9385              	TIM4_IRQHandler:
 9386              		@ args = 0, pretend = 0, frame = 0
 9387              		@ frame_needed = 0, uses_anonymous_args = 0
 9388              		@ link register save eliminated.
 9389              	@ main.c:5430: 		TIM4->SR = 0;
 9390 0000 0021     		movs	r1, #0	@ tmp114,
 9391 0002 034B     		ldr	r3, .L759	@ tmp112,
 9392              	@ main.c:5432: 		Tim4++;
 9393 0004 034A     		ldr	r2, .L759+4	@ tmp115,
 9394              	@ main.c:5430: 		TIM4->SR = 0;
 9395 0006 1982     		strh	r1, [r3, #16]	@ movhi	@ tmp114, MEM[(struct TIM_TypeDef *)1073743872B].SR
 9396              	@ main.c:5432: 		Tim4++;
 9397 0008 1368     		ldr	r3, [r2]	@ Tim4.240_1, Tim4
 9398 000a 0133     		adds	r3, r3, #1	@ _2, Tim4.240_1,
 9399 000c 1360     		str	r3, [r2]	@ _2, Tim4
 9400              	@ main.c:5433: 	}
 9401 000e 7047     		bx	lr	@
 9402              	.L760:
 9403              		.align	2
 9404              	.L759:
 9405 0010 00080040 		.word	1073743872
ARM GAS  /tmp/ccpmJ073.s 			page 166


 9406 0014 00000000 		.word	Tim4
 9407              		.size	TIM4_IRQHandler, .-TIM4_IRQHandler
 9408              		.section	.text.adc1_init_injected,"ax",%progbits
 9409              		.align	1
 9410              		.p2align 2,,3
 9411              		.global	adc1_init_injected
 9412              		.syntax unified
 9413              		.thumb
 9414              		.thumb_func
 9415              		.fpu softvfp
 9416              		.type	adc1_init_injected, %function
 9417              	adc1_init_injected:
 9418              		@ args = 0, pretend = 0, frame = 0
 9419              		@ frame_needed = 0, uses_anonymous_args = 0
 9420              		@ link register save eliminated.
 9421 0000 F0B4     		push	{r4, r5, r6, r7}	@
 9422              	@ main.c:5478: 	ADC1_CR1_SCAN_bb = 1;									// enable scan mode (multi channel mode)
 9423 0002 0124     		movs	r4, #1	@ tmp144,
 9424              	@ main.c:5468: 	ADC1->SMPR2 = (0<<channel*3);
 9425 0004 0026     		movs	r6, #0	@ tmp131,
 9426              	@ main.c:5476: 	ADC1->CR2 = ADC_CR2_JEXTSEL_JSWSTART | ADC_CR2_JEXTTRIG | ADC_CR2_CAL | ADC_CR2_ADO
 9427 0006 4FF20505 		movw	r5, #61445	@ tmp142,
 9428              	@ main.c:5465: 	RCC->CFGR |= RCC_CFGR_ADCPRE_DIV2;		// divide the ADC clock by 6 -> f_SAMP = 0.85MH
 9429 000a 114A     		ldr	r2, .L769	@ tmp126,
 9430              	@ main.c:5472: 			(channel << ADC_JSQR_JSQ3_bit) |
 9431 000c 8B02     		lsls	r3, r1, #10	@ tmp133, channel,
 9432              	@ main.c:5465: 	RCC->CFGR |= RCC_CFGR_ADCPRE_DIV2;		// divide the ADC clock by 6 -> f_SAMP = 0.85MH
 9433 000e 5768     		ldr	r7, [r2, #4]	@ _1, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 9434              	@ main.c:5473: 			(channel << ADC_JSQR_JSQ2_bit) |
 9435 0010 43EAC133 		orr	r3, r3, r1, lsl #15	@ tmp134, tmp133, channel,
 9436 0014 0B43     		orrs	r3, r3, r1	@, tmp135, tmp134, channel
 9437              	@ main.c:5465: 	RCC->CFGR |= RCC_CFGR_ADCPRE_DIV2;		// divide the ADC clock by 6 -> f_SAMP = 0.85MH
 9438 0016 5760     		str	r7, [r2, #4]	@ _1, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 9439              	@ main.c:5470: 	ADC1->JSQR = ((conversions - 1) << ADC_JSQR_JL_bit) |	// configure desired number o
 9440 0018 0138     		subs	r0, r0, #1	@ tmp138, conversions,
 9441              	@ main.c:5473: 			(channel << ADC_JSQR_JSQ2_bit) |
 9442 001a 43EA4113 		orr	r3, r3, r1, lsl #5	@ tmp137, tmp135, channel,
 9443 001e 43EA0053 		orr	r3, r3, r0, lsl #20	@ _12, tmp137, tmp138,
 9444              	@ main.c:5466: 	RCC->APB2ENR   |= RCC_APB2ENR_ADC1EN;	// enable clock for ADC1
 9445 0022 9069     		ldr	r0, [r2, #24]	@ _2, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 9446              	@ main.c:5468: 	ADC1->SMPR2 = (0<<channel*3);
 9447 0024 0B49     		ldr	r1, .L769+4	@ tmp130,
 9448              	@ main.c:5466: 	RCC->APB2ENR   |= RCC_APB2ENR_ADC1EN;	// enable clock for ADC1
 9449 0026 40F40070 		orr	r0, r0, #512	@ _3, _2,
 9450 002a 9061     		str	r0, [r2, #24]	@ _3, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 9451              	@ main.c:5478: 	ADC1_CR1_SCAN_bb = 1;									// enable scan mode (multi channel mode)
 9452 002c 0A4F     		ldr	r7, .L769+8	@ tmp143,
 9453              	@ main.c:5480: 	ADC1_CR2_JSWSTART_bb = 1;						// start Injected Group
 9454 002e 0B48     		ldr	r0, .L769+12	@ tmp145,
 9455              	@ main.c:5481: 	while (ADC1_SR_JSTRT_bb == 0);			// wait for conversion to start
 9456 0030 0B4A     		ldr	r2, .L769+16	@ tmp147,
 9457              	@ main.c:5468: 	ADC1->SMPR2 = (0<<channel*3);
 9458 0032 0E61     		str	r6, [r1, #16]	@ tmp131, MEM[(struct ADC_TypeDef *)1073816576B].SMPR2
 9459              	@ main.c:5470: 	ADC1->JSQR = ((conversions - 1) << ADC_JSQR_JL_bit) |	// configure desired number o
 9460 0034 8B63     		str	r3, [r1, #56]	@ _12, MEM[(struct ADC_TypeDef *)1073816576B].JSQR
 9461              	@ main.c:5476: 	ADC1->CR2 = ADC_CR2_JEXTSEL_JSWSTART | ADC_CR2_JEXTTRIG | ADC_CR2_CAL | ADC_CR2_ADO
 9462 0036 8D60     		str	r5, [r1, #8]	@ tmp142, MEM[(struct ADC_TypeDef *)1073816576B].CR2
ARM GAS  /tmp/ccpmJ073.s 			page 167


 9463              	@ main.c:5478: 	ADC1_CR1_SCAN_bb = 1;									// enable scan mode (multi channel mode)
 9464 0038 3C60     		str	r4, [r7]	@ tmp144, MEM[(volatile long unsigned int *)1109688480B]
 9465              	@ main.c:5480: 	ADC1_CR2_JSWSTART_bb = 1;						// start Injected Group
 9466 003a 0460     		str	r4, [r0]	@ tmp144, MEM[(volatile long unsigned int *)1109688660B]
 9467              	.L762:
 9468              	@ main.c:5481: 	while (ADC1_SR_JSTRT_bb == 0);			// wait for conversion to start
 9469 003c 1368     		ldr	r3, [r2]	@ _13, MEM[(volatile long unsigned int *)1109688332B]
 9470 003e 002B     		cmp	r3, #0	@ _13
 9471 0040 FCD0     		beq	.L762	@
 9472              	@ main.c:5487: 	while (ADC1_CR2_CAL_bb == 1);					// wait for calibration end
 9473 0042 084A     		ldr	r2, .L769+20	@ tmp148,
 9474              	.L763:
 9475              	@ main.c:5487: 	while (ADC1_CR2_CAL_bb == 1);					// wait for calibration end
 9476 0044 1368     		ldr	r3, [r2]	@ _14, MEM[(volatile long unsigned int *)1109688584B]
 9477 0046 012B     		cmp	r3, #1	@ _14,
 9478 0048 FCD0     		beq	.L763	@,
 9479              	@ main.c:5488: }
 9480 004a F0BC     		pop	{r4, r5, r6, r7}	@
 9481 004c 7047     		bx	lr	@
 9482              	.L770:
 9483 004e 00BF     		.align	2
 9484              	.L769:
 9485 0050 00100240 		.word	1073876992
 9486 0054 00240140 		.word	1073816576
 9487 0058 A0802442 		.word	1109688480
 9488 005c 54812442 		.word	1109688660
 9489 0060 0C802442 		.word	1109688332
 9490 0064 08812442 		.word	1109688584
 9491              		.size	adc1_init_injected, .-adc1_init_injected
 9492              		.section	.text.adc_get_internals,"ax",%progbits
 9493              		.align	1
 9494              		.p2align 2,,3
 9495              		.global	adc_get_internals
 9496              		.syntax unified
 9497              		.thumb
 9498              		.thumb_func
 9499              		.fpu softvfp
 9500              		.type	adc_get_internals, %function
 9501              	adc_get_internals:
 9502              		@ args = 0, pretend = 0, frame = 0
 9503              		@ frame_needed = 0, uses_anonymous_args = 0
 9504              		@ link register save eliminated.
 9505              	@ main.c:5494: 	ADC1_CR2_JSWSTART_bb = 1;						// start Injected Group
 9506 0000 0122     		movs	r2, #1	@ tmp122,
 9507              	@ main.c:5489: uint32_t adc_get_internals(uint32_t avg_cycles)		{
 9508 0002 10B4     		push	{r4}	@
 9509              	@ main.c:5489: uint32_t adc_get_internals(uint32_t avg_cycles)		{
 9510 0004 0446     		mov	r4, r0	@ avg_cycles, avg_cycles
 9511              	@ main.c:5494: 	ADC1_CR2_JSWSTART_bb = 1;						// start Injected Group
 9512 0006 134B     		ldr	r3, .L785	@ tmp121,
 9513              	@ main.c:5495: 	while (ADC1_SR_JSTRT_bb == 0);			// wait for conversion to start
 9514 0008 1349     		ldr	r1, .L785+4	@ tmp123,
 9515              	@ main.c:5494: 	ADC1_CR2_JSWSTART_bb = 1;						// start Injected Group
 9516 000a 1A60     		str	r2, [r3]	@ tmp122, MEM[(volatile long unsigned int *)1109688660B]
 9517              	.L772:
 9518              	@ main.c:5495: 	while (ADC1_SR_JSTRT_bb == 0);			// wait for conversion to start
 9519 000c 0B68     		ldr	r3, [r1]	@ _1, MEM[(volatile long unsigned int *)1109688332B]
ARM GAS  /tmp/ccpmJ073.s 			page 168


 9520 000e 002B     		cmp	r3, #0	@ _1
 9521 0010 FCD0     		beq	.L772	@
 9522              	@ main.c:5496: 	ADC1_SR_JSTRT_bb = 0;								// reset "Injected Group start of conversion" flag
 9523 0012 0023     		movs	r3, #0	@ tmp125,
 9524              	@ main.c:5497: 	while (ADC1_SR_JEOC_bb == 0);				// wait for conversions to end
 9525 0014 114A     		ldr	r2, .L785+8	@ tmp126,
 9526              	@ main.c:5496: 	ADC1_SR_JSTRT_bb = 0;								// reset "Injected Group start of conversion" flag
 9527 0016 0B60     		str	r3, [r1]	@ tmp125, MEM[(volatile long unsigned int *)1109688332B]
 9528              	.L773:
 9529              	@ main.c:5497: 	while (ADC1_SR_JEOC_bb == 0);				// wait for conversions to end
 9530 0018 1368     		ldr	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109688328B]
 9531 001a 002B     		cmp	r3, #0	@ _2
 9532 001c FCD0     		beq	.L773	@
 9533              	@ main.c:5498: 	ADC1_SR_JEOC_bb = 0;								// reset "end of conversion" flag
 9534 001e 0020     		movs	r0, #0	@ tmp128,
 9535 0020 1060     		str	r0, [r2]	@ tmp128, MEM[(volatile long unsigned int *)1109688328B]
 9536              	@ main.c:5500: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9537 0022 A4B1     		cbz	r4, .L777	@ avg_cycles,
 9538 0024 0E49     		ldr	r1, .L785+12	@ tmp129,
 9539 0026 0F4A     		ldr	r2, .L785+16	@ pretmp_5,
 9540 0028 0B1D     		adds	r3, r1, #4	@ ivtmp.740, tmp129,
 9541              	@ main.c:5501: 		value += *jdrs[i];
 9542 002a 1268     		ldr	r2, [r2]	@ _14, *prephitmp_20
 9543 002c 01EB8401 		add	r1, r1, r4, lsl #2	@ _24, tmp129, avg_cycles,
 9544              	@ main.c:5500: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9545 0030 8B42     		cmp	r3, r1	@ ivtmp.740, _24
 9546              	@ main.c:5501: 		value += *jdrs[i];
 9547 0032 1044     		add	r0, r0, r2	@ <retval>, _14
 9548              	@ main.c:5500: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9549 0034 05D0     		beq	.L775	@,
 9550              	.L784:
 9551 0036 53F8042B 		ldr	r2, [r3], #4	@ pretmp_5, MEM[base: _25, offset: 0B]
 9552              	@ main.c:5501: 		value += *jdrs[i];
 9553 003a 1268     		ldr	r2, [r2]	@ _14, *prephitmp_20
 9554              	@ main.c:5500: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9555 003c 8B42     		cmp	r3, r1	@ ivtmp.740, _24
 9556              	@ main.c:5501: 		value += *jdrs[i];
 9557 003e 1044     		add	r0, r0, r2	@ <retval>, _14
 9558              	@ main.c:5500: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9559 0040 F9D1     		bne	.L784	@,
 9560              	.L775:
 9561              	@ main.c:5503: 	if (avg_cycles > 1)									// should the samples be averaged?
 9562 0042 012C     		cmp	r4, #1	@ avg_cycles,
 9563 0044 01D9     		bls	.L771	@,
 9564              	@ main.c:5506: 		value /= avg_cycles;
 9565 0046 B0FBF4F0 		udiv	r0, r0, r4	@ <retval>, <retval>, avg_cycles
 9566              	.L771:
 9567              	@ main.c:5510: }
 9568 004a 10BC     		pop	{r4}	@
 9569 004c 7047     		bx	lr	@
 9570              	.L777:
 9571              	@ main.c:5492: 	uint32_t i, value = 0;
 9572 004e 2046     		mov	r0, r4	@ <retval>, avg_cycles
 9573              	@ main.c:5510: }
 9574 0050 10BC     		pop	{r4}	@
 9575 0052 7047     		bx	lr	@
 9576              	.L786:
ARM GAS  /tmp/ccpmJ073.s 			page 169


 9577              		.align	2
 9578              	.L785:
 9579 0054 54812442 		.word	1109688660
 9580 0058 0C802442 		.word	1109688332
 9581 005c 08802442 		.word	1109688328
 9582 0060 00000000 		.word	.LANCHOR26
 9583 0064 3C240140 		.word	1073816636
 9584              		.size	adc_get_internals, .-adc_get_internals
 9585              		.section	.text.adc_get_injected,"ax",%progbits
 9586              		.align	1
 9587              		.p2align 2,,3
 9588              		.global	adc_get_injected
 9589              		.syntax unified
 9590              		.thumb
 9591              		.thumb_func
 9592              		.fpu softvfp
 9593              		.type	adc_get_injected, %function
 9594              	adc_get_injected:
 9595              		@ args = 0, pretend = 0, frame = 0
 9596              		@ frame_needed = 0, uses_anonymous_args = 0
 9597              		@ link register save eliminated.
 9598              	@ main.c:5516: 	ADC1_CR2_JSWSTART_bb = 1;
 9599 0000 0121     		movs	r1, #1	@ tmp121,
 9600              	@ main.c:5511: uint32_t adc_get_injected(uint32_t avg_cycles)		{
 9601 0002 10B4     		push	{r4}	@
 9602              	@ main.c:5511: uint32_t adc_get_injected(uint32_t avg_cycles)		{
 9603 0004 0446     		mov	r4, r0	@ avg_cycles, avg_cycles
 9604              	@ main.c:5516: 	ADC1_CR2_JSWSTART_bb = 1;
 9605 0006 104B     		ldr	r3, .L798	@ tmp120,
 9606              	@ main.c:5517: 	while (ADC1_SR_JEOC_bb == 0);				// wait for conversions to end
 9607 0008 104A     		ldr	r2, .L798+4	@ tmp122,
 9608              	@ main.c:5516: 	ADC1_CR2_JSWSTART_bb = 1;
 9609 000a 1960     		str	r1, [r3]	@ tmp121, MEM[(volatile long unsigned int *)1109688660B]
 9610              	.L788:
 9611              	@ main.c:5517: 	while (ADC1_SR_JEOC_bb == 0);				// wait for conversions to end
 9612 000c 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109688328B]
 9613 000e 002B     		cmp	r3, #0	@ _1
 9614 0010 FCD0     		beq	.L788	@
 9615              	@ main.c:5518: 	ADC1_SR_JEOC_bb = 0;								// reset "end of conversion" flag
 9616 0012 0020     		movs	r0, #0	@ tmp124,
 9617 0014 1060     		str	r0, [r2]	@ tmp124, MEM[(volatile long unsigned int *)1109688328B]
 9618              	@ main.c:5520: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9619 0016 A4B1     		cbz	r4, .L792	@ avg_cycles,
 9620 0018 0D4B     		ldr	r3, .L798+8	@ ivtmp.754,
 9621 001a 0E4A     		ldr	r2, .L798+12	@ pretmp_4,
 9622 001c 191F     		subs	r1, r3, #4	@ tmp126, ivtmp.754,
 9623 001e 01EB8401 		add	r1, r1, r4, lsl #2	@ _22, tmp126, avg_cycles,
 9624              	@ main.c:5521: 		value += *jdrs[i];
 9625 0022 1268     		ldr	r2, [r2]	@ _12, *prephitmp_18
 9626              	@ main.c:5520: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9627 0024 8B42     		cmp	r3, r1	@ ivtmp.754, _22
 9628              	@ main.c:5521: 		value += *jdrs[i];
 9629 0026 1044     		add	r0, r0, r2	@ <retval>, _12
 9630              	@ main.c:5520: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9631 0028 05D0     		beq	.L790	@,
 9632              	.L797:
 9633 002a 53F8042B 		ldr	r2, [r3], #4	@ pretmp_4, MEM[base: _23, offset: 0B]
ARM GAS  /tmp/ccpmJ073.s 			page 170


 9634              	@ main.c:5521: 		value += *jdrs[i];
 9635 002e 1268     		ldr	r2, [r2]	@ _12, *prephitmp_18
 9636              	@ main.c:5520: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9637 0030 8B42     		cmp	r3, r1	@ ivtmp.754, _22
 9638              	@ main.c:5521: 		value += *jdrs[i];
 9639 0032 1044     		add	r0, r0, r2	@ <retval>, _12
 9640              	@ main.c:5520: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9641 0034 F9D1     		bne	.L797	@,
 9642              	.L790:
 9643              	@ main.c:5523: 	if (avg_cycles > 1)									// should the samples be averaged?
 9644 0036 012C     		cmp	r4, #1	@ avg_cycles,
 9645 0038 01D9     		bls	.L787	@,
 9646              	@ main.c:5526: 		value /= avg_cycles;
 9647 003a B0FBF4F0 		udiv	r0, r0, r4	@ <retval>, <retval>, avg_cycles
 9648              	.L787:
 9649              	@ main.c:5530: }
 9650 003e 10BC     		pop	{r4}	@
 9651 0040 7047     		bx	lr	@
 9652              	.L792:
 9653              	@ main.c:5514: 	uint32_t i, value = 0;
 9654 0042 2046     		mov	r0, r4	@ <retval>, avg_cycles
 9655              	@ main.c:5530: }
 9656 0044 10BC     		pop	{r4}	@
 9657 0046 7047     		bx	lr	@
 9658              	.L799:
 9659              		.align	2
 9660              	.L798:
 9661 0048 54812442 		.word	1109688660
 9662 004c 08802442 		.word	1109688328
 9663 0050 04000000 		.word	jdrs.9077+4
 9664 0054 3C240140 		.word	1073816636
 9665              		.size	adc_get_injected, .-adc_get_injected
 9666              		.section	.text.NVIC_conf,"ax",%progbits
 9667              		.align	1
 9668              		.p2align 2,,3
 9669              		.global	NVIC_conf
 9670              		.syntax unified
 9671              		.thumb
 9672              		.thumb_func
 9673              		.fpu softvfp
 9674              		.type	NVIC_conf, %function
 9675              	NVIC_conf:
 9676              		@ args = 0, pretend = 0, frame = 0
 9677              		@ frame_needed = 0, uses_anonymous_args = 0
 9678              		@ link register save eliminated.
 9679 0000 70B4     		push	{r4, r5, r6}	@
 9680              	@ main.c:5539: 	NVIC->IP[TIM1_CC_IRQn] = (0<<4);           //Set the highest priority for TIMER1, s
 9681 0002 0020     		movs	r0, #0	@ tmp122,
 9682              	@ main.c:5537: 	NVIC->IP[ADC1_2_IRQn]  = (2<<4);
 9683 0004 2025     		movs	r5, #32	@ tmp116,
 9684              	@ main.c:5538: 	NVIC->IP[DMA1_Channel1_IRQn] = (1<<4);
 9685 0006 1024     		movs	r4, #16	@ tmp119,
 9686              	@ main.c:5534: 	SCB->AIRCR |= AIRCR_VECTKEY_MASK | (3<<8);      //[Optional] Define interrupt field
 9687 0008 0749     		ldr	r1, .L802	@ tmp112,
 9688 000a 084A     		ldr	r2, .L802+4	@ _2,
 9689 000c CE68     		ldr	r6, [r1, #12]	@ _1, MEM[(struct SCB_Type *)3758157056B].AIRCR
 9690              	@ main.c:5537: 	NVIC->IP[ADC1_2_IRQn]  = (2<<4);
ARM GAS  /tmp/ccpmJ073.s 			page 171


 9691 000e 084B     		ldr	r3, .L802+8	@ tmp115,
 9692              	@ main.c:5534: 	SCB->AIRCR |= AIRCR_VECTKEY_MASK | (3<<8);      //[Optional] Define interrupt field
 9693 0010 3243     		orrs	r2, r2, r6	@, _2, _2, _1
 9694 0012 CA60     		str	r2, [r1, #12]	@ _2, MEM[(struct SCB_Type *)3758157056B].AIRCR
 9695              	@ main.c:5542: 	NVIC->ISER[0]= (1<<TIM1_CC_IRQn )|(1<<ADC1_2_IRQn)|(1<<DMA1_Channel1_IRQn);   //Ena
 9696 0014 074A     		ldr	r2, .L802+12	@ tmp125,
 9697              	@ main.c:5537: 	NVIC->IP[ADC1_2_IRQn]  = (2<<4);
 9698 0016 83F81253 		strb	r5, [r3, #786]	@ tmp116, MEM[(struct NVIC_Type *)3758153984B].IP
 9699              	@ main.c:5538: 	NVIC->IP[DMA1_Channel1_IRQn] = (1<<4);
 9700 001a 83F80B43 		strb	r4, [r3, #779]	@ tmp119, MEM[(struct NVIC_Type *)3758153984B].IP
 9701              	@ main.c:5539: 	NVIC->IP[TIM1_CC_IRQn] = (0<<4);           //Set the highest priority for TIMER1, s
 9702 001e 83F81B03 		strb	r0, [r3, #795]	@ tmp122, MEM[(struct NVIC_Type *)3758153984B].IP
 9703              	@ main.c:5543: }
 9704 0022 70BC     		pop	{r4, r5, r6}	@
 9705              	@ main.c:5542: 	NVIC->ISER[0]= (1<<TIM1_CC_IRQn )|(1<<ADC1_2_IRQn)|(1<<DMA1_Channel1_IRQn);   //Ena
 9706 0024 1A60     		str	r2, [r3]	@ tmp125, MEM[(struct NVIC_Type *)3758153984B].ISER
 9707              	@ main.c:5543: }
 9708 0026 7047     		bx	lr	@
 9709              	.L803:
 9710              		.align	2
 9711              	.L802:
 9712 0028 00ED00E0 		.word	-536810240
 9713 002c 0003FA05 		.word	100270848
 9714 0030 00E100E0 		.word	-536813312
 9715 0034 00080408 		.word	134481920
 9716              		.size	NVIC_conf, .-NVIC_conf
 9717              		.section	.text.SetDate,"ax",%progbits
 9718              		.align	1
 9719              		.p2align 2,,3
 9720              		.global	SetDate
 9721              		.syntax unified
 9722              		.thumb
 9723              		.thumb_func
 9724              		.fpu softvfp
 9725              		.type	SetDate, %function
 9726              	SetDate:
 9727              		@ args = 0, pretend = 0, frame = 40
 9728              		@ frame_needed = 0, uses_anonymous_args = 0
 9729 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 9730              	@ main.c:5550: 	UaPutS("\r\n rok = ");
 9731 0004 6548     		ldr	r0, .L820	@,
 9732              	@ main.c:5547: void SetDate(void)	{
 9733 0006 8BB0     		sub	sp, sp, #44	@,,
 9734              	@ main.c:5550: 	UaPutS("\r\n rok = ");
 9735 0008 FFF7FEFF 		bl	UaPutS	@
 9736              	@ main.c:5551: 	u16 yer = str2int((char *)u1buf);
 9737 000c 06A8     		add	r0, sp, #24	@ tmp230,,
 9738 000e FFF7FEFF 		bl	str2int	@
 9739              	@ main.c:5552: 	memset((char *)u1buf,0,16);
 9740 0012 0027     		movs	r7, #0	@ tmp152,
 9741              	@ main.c:5551: 	u16 yer = str2int((char *)u1buf);
 9742 0014 0546     		mov	r5, r0	@ _1,
 9743              	@ main.c:5553: 	UaPutS("\r\n mies = ");
 9744 0016 6248     		ldr	r0, .L820+4	@,
 9745              	@ main.c:5552: 	memset((char *)u1buf,0,16);
 9746 0018 CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 9747 001c CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
ARM GAS  /tmp/ccpmJ073.s 			page 172


 9748              	@ main.c:5553: 	UaPutS("\r\n mies = ");
 9749 0020 FFF7FEFF 		bl	UaPutS	@
 9750              	@ main.c:5554: 	u08 mon = str2int((char *)u1buf);
 9751 0024 06A8     		add	r0, sp, #24	@ tmp231,,
 9752 0026 FFF7FEFF 		bl	str2int	@
 9753 002a 0646     		mov	r6, r0	@ _2,
 9754              	@ main.c:5556: 	UaPutS("\r\n dzien = ");
 9755 002c 5D48     		ldr	r0, .L820+8	@,
 9756              	@ main.c:5555: 	memset((char *)u1buf,0,16);
 9757 002e CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 9758 0032 CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 9759              	@ main.c:5556: 	UaPutS("\r\n dzien = ");
 9760 0036 FFF7FEFF 		bl	UaPutS	@
 9761              	@ main.c:5557: 	u08 day = str2int((char *)u1buf);
 9762 003a 06A8     		add	r0, sp, #24	@ tmp232,,
 9763 003c FFF7FEFF 		bl	str2int	@
 9764 0040 8246     		mov	r10, r0	@ _3,
 9765              	@ main.c:5559: 	UaPutS("\r\n gdz = ");
 9766 0042 5948     		ldr	r0, .L820+12	@,
 9767              	@ main.c:5558: 	memset((char *)u1buf,0,16);
 9768 0044 CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 9769 0048 CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 9770              	@ main.c:5559: 	UaPutS("\r\n gdz = ");
 9771 004c FFF7FEFF 		bl	UaPutS	@
 9772              	@ main.c:5560: 	u08 hor = str2int((char *)u1buf);
 9773 0050 06A8     		add	r0, sp, #24	@ tmp233,,
 9774 0052 FFF7FEFF 		bl	str2int	@
 9775 0056 8046     		mov	r8, r0	@ _4,
 9776              	@ main.c:5562: 	UaPutS("\r\n min = ");
 9777 0058 5448     		ldr	r0, .L820+16	@,
 9778              	@ main.c:5561: 	memset((char *)u1buf,0,16);
 9779 005a CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 9780 005e CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 9781              	@ main.c:5562: 	UaPutS("\r\n min = ");
 9782 0062 FFF7FEFF 		bl	UaPutS	@
 9783              	@ main.c:5563: 	u08 min = str2int((char *)u1buf);
 9784 0066 06A8     		add	r0, sp, #24	@ tmp234,,
 9785 0068 FFF7FEFF 		bl	str2int	@
 9786 006c 8146     		mov	r9, r0	@ _5,
 9787              	@ main.c:5565: 	UaPutS("\r\n sek = ");
 9788 006e 5048     		ldr	r0, .L820+20	@,
 9789              	@ main.c:5564: 	memset((char *)u1buf,0,16);
 9790 0070 CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 9791 0074 CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 9792              	@ main.c:5565: 	UaPutS("\r\n sek = ");
 9793 0078 FFF7FEFF 		bl	UaPutS	@
 9794              	@ main.c:5566: 	u08 sec = str2int((char *)u1buf);
 9795 007c 06A8     		add	r0, sp, #24	@ tmp235,,
 9796 007e FFF7FEFF 		bl	str2int	@
 9797              	@ main.c:5567: 	memset((char *)u1buf,0,16);
 9798 0082 CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 9799 0086 CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 9800              	@ main.c:5568: 	u32 Uxt = 1924984799;
 9801 008a 4A4C     		ldr	r4, .L820+24	@ Uxt,
 9802 008c DFF830B1 		ldr	fp, .L820+36	@ tmp226,
 9803              	@ main.c:5566: 	u08 sec = str2int((char *)u1buf);
 9804 0090 0190     		str	r0, [sp, #4]	@, %sfp
ARM GAS  /tmp/ccpmJ073.s 			page 173


 9805 0092 ADB2     		uxth	r5, r5	@ _92, _1
 9806              	@ main.c:5572: 			if(ptm.tm_mon == mon) 	{
 9807 0094 F6B2     		uxtb	r6, r6	@ _2, _2
 9808              	@ main.c:5573: 				if(ptm.tm_mday == day)  {
 9809 0096 5FFA8AFA 		uxtb	r10, r10	@ _3, _3
 9810              	@ main.c:5574: 					if(ptm.tm_hour == hor)  {
 9811 009a 5FFA88F8 		uxtb	r8, r8	@ _4, _4
 9812              	.L813:
 9813              	@ main.c:5570: 		gmtime_r (&Uxt, &ptm);
 9814 009e 2046     		mov	r0, r4	@, Uxt
 9815 00a0 FFF7FEFF 		bl	gmtime_r.isra.0.constprop.2	@
 9816              	@ main.c:5571: 		if(ptm.tm_year == yer) 	{
 9817 00a4 DBF81430 		ldr	r3, [fp, #20]	@ ptm.tm_year, ptm.tm_year
 9818 00a8 AB42     		cmp	r3, r5	@ ptm.tm_year, _92
 9819 00aa 08D0     		beq	.L816	@,
 9820              	.L805:
 9821              	@ main.c:5592: 		} else Uxt -= 86400;
 9822 00ac A4F5A834 		sub	r4, r4, #86016	@ Uxt, Uxt,
 9823 00b0 A4F5C074 		sub	r4, r4, #384	@ Uxt, Uxt,
 9824              	@ main.c:5594: 	while(Uxt);
 9825 00b4 002C     		cmp	r4, #0	@ Uxt
 9826 00b6 F2D1     		bne	.L813	@
 9827              	.L804:
 9828              	@ main.c:5595: }
 9829 00b8 0BB0     		add	sp, sp, #44	@,,
 9830              		@ sp needed	@
 9831 00ba BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 9832              	.L816:
 9833              	@ main.c:5572: 			if(ptm.tm_mon == mon) 	{
 9834 00be DBF81030 		ldr	r3, [fp, #16]	@ ptm.tm_mon, ptm.tm_mon
 9835 00c2 B342     		cmp	r3, r6	@ ptm.tm_mon, _2
 9836 00c4 F2D1     		bne	.L805	@,
 9837              	@ main.c:5573: 				if(ptm.tm_mday == day)  {
 9838 00c6 DBF80C30 		ldr	r3, [fp, #12]	@ ptm.tm_mday, ptm.tm_mday
 9839 00ca 5345     		cmp	r3, r10	@ ptm.tm_mday, _3
 9840 00cc EED1     		bne	.L805	@,
 9841              	@ main.c:5574: 					if(ptm.tm_hour == hor)  {
 9842 00ce DBF80830 		ldr	r3, [fp, #8]	@ ptm.tm_hour, ptm.tm_hour
 9843 00d2 4345     		cmp	r3, r8	@ ptm.tm_hour, _4
 9844 00d4 04D0     		beq	.L817	@,
 9845              	@ main.c:5589: 					}else Uxt -= 3600;
 9846 00d6 A4F56164 		sub	r4, r4, #3600	@ Uxt, Uxt,
 9847              	@ main.c:5594: 	while(Uxt);
 9848 00da 002C     		cmp	r4, #0	@ Uxt
 9849 00dc DFD1     		bne	.L813	@
 9850 00de EBE7     		b	.L804	@
 9851              	.L817:
 9852              	@ main.c:5575: 						if(ptm.tm_min == min) 	{
 9853 00e0 DBF80420 		ldr	r2, [fp, #4]	@ ptm.tm_min, ptm.tm_min
 9854 00e4 5FFA89F3 		uxtb	r3, r9	@ _5, _5
 9855 00e8 9A42     		cmp	r2, r3	@ ptm.tm_min, _5
 9856 00ea 03D0     		beq	.L818	@,
 9857              	@ main.c:5588: 						}else Uxt -= 60;
 9858 00ec 3C3C     		subs	r4, r4, #60	@ Uxt, Uxt,
 9859              	@ main.c:5594: 	while(Uxt);
 9860 00ee 002C     		cmp	r4, #0	@ Uxt
 9861 00f0 D5D1     		bne	.L813	@
ARM GAS  /tmp/ccpmJ073.s 			page 174


 9862 00f2 E1E7     		b	.L804	@
 9863              	.L818:
 9864              	@ main.c:5576: 							if(ptm.tm_sec == sec)		{
 9865 00f4 DBF80020 		ldr	r2, [fp]	@ ptm.tm_sec, ptm.tm_sec
 9866 00f8 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2	@ _6, %sfp
 9867 00fc 9A42     		cmp	r2, r3	@ ptm.tm_sec, _6
 9868 00fe 03D0     		beq	.L819	@,
 9869              	@ main.c:5587: 							} else Uxt --;
 9870 0100 013C     		subs	r4, r4, #1	@ Uxt, Uxt,
 9871              	@ main.c:5594: 	while(Uxt);
 9872 0102 002C     		cmp	r4, #0	@ Uxt
 9873 0104 CBD1     		bne	.L813	@
 9874 0106 D7E7     		b	.L804	@
 9875              	.L819:
 9876              	@ main.c:5577: 								gmtime_r (&Uxt, &ptm);
 9877 0108 2046     		mov	r0, r4	@, Uxt
 9878 010a FFF7FEFF 		bl	gmtime_r.isra.0.constprop.2	@
 9879              	@ main.c:5578: 								UaPutS("\r\n ");
 9880 010e 2A48     		ldr	r0, .L820+28	@,
 9881 0110 FFF7FEFF 		bl	UaPutS	@
 9882              	@ main.c:5579: 								UaPutS(uint2str(ptm.tm_year,tbuf));		UaPutC('-');
 9883 0114 02A9     		add	r1, sp, #8	@,,
 9884 0116 DBF81400 		ldr	r0, [fp, #20]	@, ptm.tm_year
 9885 011a FFF7FEFF 		bl	uint2str	@
 9886 011e FFF7FEFF 		bl	UaPutS	@
 9887 0122 2D20     		movs	r0, #45	@,
 9888 0124 FFF7FEFF 		bl	UaPutC	@
 9889              	@ main.c:5580: 								UaPutS(uint2str(ptm.tm_mon,tbuf));		UaPutC('-');
 9890 0128 02A9     		add	r1, sp, #8	@,,
 9891 012a DBF81000 		ldr	r0, [fp, #16]	@, ptm.tm_mon
 9892 012e FFF7FEFF 		bl	uint2str	@
 9893 0132 FFF7FEFF 		bl	UaPutS	@
 9894 0136 2D20     		movs	r0, #45	@,
 9895 0138 FFF7FEFF 		bl	UaPutC	@
 9896              	@ main.c:5581: 								UaPutS(uint2str(ptm.tm_mday,tbuf));		UaPutC(' ');
 9897 013c 02A9     		add	r1, sp, #8	@,,
 9898 013e DBF80C00 		ldr	r0, [fp, #12]	@, ptm.tm_mday
 9899 0142 FFF7FEFF 		bl	uint2str	@
 9900 0146 FFF7FEFF 		bl	UaPutS	@
 9901 014a 2020     		movs	r0, #32	@,
 9902 014c FFF7FEFF 		bl	UaPutC	@
 9903              	@ main.c:5582: 								UaPutS(uint2str(ptm.tm_hour,tbuf));		UaPutC(':');
 9904 0150 02A9     		add	r1, sp, #8	@,,
 9905 0152 DBF80800 		ldr	r0, [fp, #8]	@, ptm.tm_hour
 9906 0156 FFF7FEFF 		bl	uint2str	@
 9907 015a FFF7FEFF 		bl	UaPutS	@
 9908 015e 3A20     		movs	r0, #58	@,
 9909 0160 FFF7FEFF 		bl	UaPutC	@
 9910              	@ main.c:5583: 								UaPutS(uint2str(ptm.tm_min,tbuf));		UaPutC(':');
 9911 0164 02A9     		add	r1, sp, #8	@,,
 9912 0166 DBF80400 		ldr	r0, [fp, #4]	@, ptm.tm_min
 9913 016a FFF7FEFF 		bl	uint2str	@
 9914 016e FFF7FEFF 		bl	UaPutS	@
 9915 0172 3A20     		movs	r0, #58	@,
 9916 0174 FFF7FEFF 		bl	UaPutC	@
 9917              	@ main.c:5584: 								UaPutS(uint2str(ptm.tm_sec,tbuf));		UaPutS("\r\n TimStmp = ");
 9918 0178 02A9     		add	r1, sp, #8	@,,
ARM GAS  /tmp/ccpmJ073.s 			page 175


 9919 017a DBF80000 		ldr	r0, [fp]	@, ptm.tm_sec
 9920 017e FFF7FEFF 		bl	uint2str	@
 9921 0182 FFF7FEFF 		bl	UaPutS	@
 9922 0186 0D48     		ldr	r0, .L820+32	@,
 9923 0188 FFF7FEFF 		bl	UaPutS	@
 9924              	@ main.c:5585: 								UaPutS(uint2str(Uxt,tbuf));
 9925 018c 02A9     		add	r1, sp, #8	@,,
 9926 018e 2046     		mov	r0, r4	@, Uxt
 9927 0190 FFF7FEFF 		bl	uint2str	@
 9928 0194 FFF7FEFF 		bl	UaPutS	@
 9929              	@ main.c:5586: 								break;
 9930 0198 8EE7     		b	.L804	@
 9931              	.L821:
 9932 019a 00BF     		.align	2
 9933              	.L820:
 9934 019c 00000000 		.word	.LC152
 9935 01a0 0C000000 		.word	.LC153
 9936 01a4 18000000 		.word	.LC154
 9937 01a8 24000000 		.word	.LC155
 9938 01ac 30000000 		.word	.LC156
 9939 01b0 3C000000 		.word	.LC157
 9940 01b4 DFEFBC72 		.word	1924984799
 9941 01b8 30000000 		.word	.LC67
 9942 01bc 48000000 		.word	.LC158
 9943 01c0 00000000 		.word	ptm
 9944              		.size	SetDate, .-SetDate
 9945              		.section	.text.flash_latency,"ax",%progbits
 9946              		.align	1
 9947              		.p2align 2,,3
 9948              		.global	flash_latency
 9949              		.syntax unified
 9950              		.thumb
 9951              		.thumb_func
 9952              		.fpu softvfp
 9953              		.type	flash_latency, %function
 9954              	flash_latency:
 9955              		@ args = 0, pretend = 0, frame = 0
 9956              		@ frame_needed = 0, uses_anonymous_args = 0
 9957              		@ link register save eliminated.
 9958              	@ main.c:5631: 	if (frequency < 24000000ul)			// 0 wait states for core speed below 24MHz
 9959 0000 084B     		ldr	r3, .L826	@ tmp114,
 9960 0002 9842     		cmp	r0, r3	@ frequency, tmp114
 9961 0004 0CD9     		bls	.L824	@,
 9962              	@ main.c:5633: 	else if (frequency < 48000000ul)// 1 wait state for core 24MHz < speed >48MHz
 9963 0006 03F1B773 		add	r3, r3, #23986176	@ tmp115, tmp115,
 9964 000a 03F55853 		add	r3, r3, #13824	@ tmp115, tmp115,
 9965              	@ main.c:5636: 		wait_states = 2;
 9966 000e 9842     		cmp	r0, r3	@ frequency, tmp115
 9967 0010 94BF     		ite	ls	@
 9968 0012 0120     		movls	r0, #1	@, wait_states,
 9969 0014 0220     		movhi	r0, #2	@, wait_states,
 9970              	.L823:
 9971              	@ main.c:5638: 	FLASH->ACR |= wait_states;				// set the latency
 9972 0016 044A     		ldr	r2, .L826+4	@ tmp116,
 9973 0018 1368     		ldr	r3, [r2]	@ _1, MEM[(struct FLASH_TypeDef *)1073881088B].ACR
 9974 001a 1843     		orrs	r0, r0, r3	@, _2, wait_states, _1
 9975 001c 1060     		str	r0, [r2]	@ _2, MEM[(struct FLASH_TypeDef *)1073881088B].ACR
ARM GAS  /tmp/ccpmJ073.s 			page 176


 9976              	@ main.c:5639: }
 9977 001e 7047     		bx	lr	@
 9978              	.L824:
 9979              	@ main.c:5632: 		wait_states = 0;
 9980 0020 0020     		movs	r0, #0	@ wait_states,
 9981 0022 F8E7     		b	.L823	@
 9982              	.L827:
 9983              		.align	2
 9984              	.L826:
 9985 0024 FF356E01 		.word	23999999
 9986 0028 00200240 		.word	1073881088
 9987              		.size	flash_latency, .-flash_latency
 9988              		.set	jdrs.9077,jdrs.9062
 9989              		.global	p_TSpm
 9990              		.comm	Rtc,8,4
 9991              		.global	FLAG
 9992              		.global	_ytab
 9993              		.comm	Timt3,4,4
 9994              		.comm	Timt,4,4
 9995              		.comm	Time6,4,4
 9996              		.comm	Tim6,4,4
 9997              		.comm	Tim4,4,4
 9998              		.comm	delay_us,4,4
 9999              		.comm	Tim2,4,4
 10000              		.comm	Tim1,4,4
 10001              		.comm	Tim0,4,4
 10002              		.comm	delay3_us,4,4
 10003              		.comm	t3rg2,4,4
 10004              		.comm	t3rg1,4,4
 10005              		.comm	t3rg0,4,4
 10006              		.comm	trg5,4,4
 10007              		.comm	trg4,4,4
 10008              		.comm	trg3,4,4
 10009              		.comm	trg2,4,4
 10010              		.comm	trg1,4,4
 10011              		.comm	trg0,4,4
 10012              		.comm	PutChar,4,4
 10013              		.comm	ptm,36,4
 10014              		.section	.rodata
 10015              		.align	2
 10016              		.set	.LANCHOR1,. + 0
 10017              	.LC0:
 10018 0000 6D01     		.short	365
 10019 0002 6401     		.short	356
 10020 0004 0000     		.short	0
 10021 0006 1E00     		.short	30
 10022 0008 0000     		.short	0
 10023 000a 0000     		.short	0
 10024 000c 0000     		.short	0
 10025 000e 0000     		.short	0
 10026              	.LC1:
 10027 0010 D007     		.short	2000
 10028 0012 0019     		.short	6400
 10029 0014 0000     		.short	0
 10030 0016 1E00     		.short	30
 10031 0018 0000     		.short	0
 10032 001a 0000     		.short	0
ARM GAS  /tmp/ccpmJ073.s 			page 177


 10033 001c 0000     		.short	0
 10034 001e 0000     		.short	0
 10035              	.LC2:
 10036 0020 5601     		.short	342
 10037 0022 5001     		.short	336
 10038 0024 0000     		.short	0
 10039 0026 0200     		.short	2
 10040 0028 0000     		.short	0
 10041 002a 0000     		.short	0
 10042 002c 0000     		.short	0
 10043 002e 0000     		.short	0
 10044              	.LC3:
 10045 0030 7200     		.short	114
 10046 0032 0701     		.short	263
 10047 0034 0000     		.short	0
 10048 0036 0200     		.short	2
 10049 0038 0000     		.short	0
 10050 003a 0000     		.short	0
 10051 003c 0000     		.short	0
 10052 003e 0000     		.short	0
 10053              		.section	.bss.FLAG,"aw",%nobits
 10054              		.align	2
 10055              		.set	.LANCHOR8,. + 0
 10056              		.type	FLAG, %object
 10057              		.size	FLAG, 4
 10058              	FLAG:
 10059 0000 00000000 		.space	4
 10060              		.section	.bss.SX1278_1.8446,"aw",%nobits
 10061              		.align	2
 10062              		.set	.LANCHOR10,. + 0
 10063              		.type	SX1278_1.8446, %object
 10064              		.size	SX1278_1.8446, 76
 10065              	SX1278_1.8446:
 10066 0000 00000000 		.space	76
 10066      00000000 
 10066      00000000 
 10066      00000000 
 10066      00000000 
 10067              		.section	.bss.SX1278_1.8472,"aw",%nobits
 10068              		.align	2
 10069              		.set	.LANCHOR12,. + 0
 10070              		.type	SX1278_1.8472, %object
 10071              		.size	SX1278_1.8472, 76
 10072              	SX1278_1.8472:
 10073 0000 00000000 		.space	76
 10073      00000000 
 10073      00000000 
 10073      00000000 
 10073      00000000 
 10074              		.section	.bss.SX1278_1.8497,"aw",%nobits
 10075              		.align	2
 10076              		.set	.LANCHOR15,. + 0
 10077              		.type	SX1278_1.8497, %object
 10078              		.size	SX1278_1.8497, 76
 10079              	SX1278_1.8497:
 10080 0000 00000000 		.space	76
 10080      00000000 
ARM GAS  /tmp/ccpmJ073.s 			page 178


 10080      00000000 
 10080      00000000 
 10080      00000000 
 10081              		.section	.bss.SX1278_hw1.8445,"aw",%nobits
 10082              		.align	2
 10083              		.set	.LANCHOR9,. + 0
 10084              		.type	SX1278_hw1.8445, %object
 10085              		.size	SX1278_hw1.8445, 24
 10086              	SX1278_hw1.8445:
 10087 0000 00000000 		.space	24
 10087      00000000 
 10087      00000000 
 10087      00000000 
 10087      00000000 
 10088              		.section	.bss.SX1278_hw1.8471,"aw",%nobits
 10089              		.align	2
 10090              		.set	.LANCHOR11,. + 0
 10091              		.type	SX1278_hw1.8471, %object
 10092              		.size	SX1278_hw1.8471, 24
 10093              	SX1278_hw1.8471:
 10094 0000 00000000 		.space	24
 10094      00000000 
 10094      00000000 
 10094      00000000 
 10094      00000000 
 10095              		.section	.bss.SX1278_hw1.8496,"aw",%nobits
 10096              		.align	2
 10097              		.set	.LANCHOR14,. + 0
 10098              		.type	SX1278_hw1.8496, %object
 10099              		.size	SX1278_hw1.8496, 24
 10100              	SX1278_hw1.8496:
 10101 0000 00000000 		.space	24
 10101      00000000 
 10101      00000000 
 10101      00000000 
 10101      00000000 
 10102              		.section	.bss.TSpm,"aw",%nobits
 10103              		.align	2
 10104              		.type	TSpm, %object
 10105              		.size	TSpm, 4096
 10106              	TSpm:
 10107 0000 00000000 		.space	4096
 10107      00000000 
 10107      00000000 
 10107      00000000 
 10107      00000000 
 10108              		.section	.bss.buf_rx.8475,"aw",%nobits
 10109              		.align	2
 10110              		.set	.LANCHOR13,. + 0
 10111              		.type	buf_rx.8475, %object
 10112              		.size	buf_rx.8475, 256
 10113              	buf_rx.8475:
 10114 0000 00000000 		.space	256
 10114      00000000 
 10114      00000000 
 10114      00000000 
 10114      00000000 
ARM GAS  /tmp/ccpmJ073.s 			page 179


 10115              		.section	.bss.buf_tx.8499,"aw",%nobits
 10116              		.align	2
 10117              		.set	.LANCHOR16,. + 0
 10118              		.type	buf_tx.8499, %object
 10119              		.size	buf_tx.8499, 10
 10120              	buf_tx.8499:
 10121 0000 00000000 		.space	10
 10121      00000000 
 10121      0000
 10122              		.section	.bss.buffer.8851,"aw",%nobits
 10123              		.align	2
 10124              		.type	buffer.8851, %object
 10125              		.size	buffer.8851, 8192
 10126              	buffer.8851:
 10127 0000 00000000 		.space	8192
 10127      00000000 
 10127      00000000 
 10127      00000000 
 10127      00000000 
 10128              		.section	.bss.cap.8272,"aw",%nobits
 10129              		.align	2
 10130              		.set	.LANCHOR2,. + 0
 10131              		.type	cap.8272, %object
 10132              		.size	cap.8272, 4
 10133              	cap.8272:
 10134 0000 00000000 		.space	4
 10135              		.section	.bss.cnt.8277,"aw",%nobits
 10136              		.set	.LANCHOR7,. + 0
 10137              		.type	cnt.8277, %object
 10138              		.size	cnt.8277, 1
 10139              	cnt.8277:
 10140 0000 00       		.space	1
 10141              		.section	.bss.cur.8268,"aw",%nobits
 10142              		.align	1
 10143              		.set	.LANCHOR4,. + 0
 10144              		.type	cur.8268, %object
 10145              		.size	cur.8268, 2
 10146              	cur.8268:
 10147 0000 0000     		.space	2
 10148              		.section	.bss.datetime.8674,"aw",%nobits
 10149              		.align	2
 10150              		.set	.LANCHOR19,. + 0
 10151              		.type	datetime.8674, %object
 10152              		.size	datetime.8674, 8
 10153              	datetime.8674:
 10154 0000 00000000 		.space	8
 10154      00000000 
 10155              		.section	.bss.dinit.8852,"aw",%nobits
 10156              		.set	.LANCHOR20,. + 0
 10157              		.type	dinit.8852, %object
 10158              		.size	dinit.8852, 1
 10159              	dinit.8852:
 10160 0000 00       		.space	1
 10161              		.section	.bss.dma_buf,"aw",%nobits
 10162              		.align	2
 10163              		.set	.LANCHOR18,. + 0
 10164              		.type	dma_buf, %object
ARM GAS  /tmp/ccpmJ073.s 			page 180


 10165              		.size	dma_buf, 24
 10166              	dma_buf:
 10167 0000 00000000 		.space	24
 10167      00000000 
 10167      00000000 
 10167      00000000 
 10167      00000000 
 10168              		.section	.bss.dma_buf.8762,"aw",%nobits
 10169              		.align	2
 10170              		.set	.LANCHOR23,. + 0
 10171              		.type	dma_buf.8762, %object
 10172              		.size	dma_buf.8762, 578
 10173              	dma_buf.8762:
 10174 0000 00000000 		.space	578
 10174      00000000 
 10174      00000000 
 10174      00000000 
 10174      00000000 
 10175              		.section	.bss.pow.8273,"aw",%nobits
 10176              		.align	1
 10177              		.set	.LANCHOR6,. + 0
 10178              		.type	pow.8273, %object
 10179              		.size	pow.8273, 2
 10180              	pow.8273:
 10181 0000 0000     		.space	2
 10182              		.section	.bss.str_num.8500,"aw",%nobits
 10183              		.align	2
 10184              		.set	.LANCHOR17,. + 0
 10185              		.type	str_num.8500, %object
 10186              		.size	str_num.8500, 5
 10187              	str_num.8500:
 10188 0000 00000000 		.space	5
 10188      00
 10189              		.section	.bss.vacu.8270,"aw",%nobits
 10190              		.align	1
 10191              		.set	.LANCHOR5,. + 0
 10192              		.type	vacu.8270, %object
 10193              		.size	vacu.8270, 2
 10194              	vacu.8270:
 10195 0000 0000     		.space	2
 10196              		.section	.bss.val.8747,"aw",%nobits
 10197              		.align	2
 10198              		.set	.LANCHOR24,. + 0
 10199              		.type	val.8747, %object
 10200              		.size	val.8747, 20
 10201              	val.8747:
 10202 0000 00000000 		.space	20
 10202      00000000 
 10202      00000000 
 10202      00000000 
 10202      00000000 
 10203              		.section	.bss.vbus.8269,"aw",%nobits
 10204              		.align	1
 10205              		.set	.LANCHOR3,. + 0
 10206              		.type	vbus.8269, %object
 10207              		.size	vbus.8269, 2
 10208              	vbus.8269:
ARM GAS  /tmp/ccpmJ073.s 			page 181


 10209 0000 0000     		.space	2
 10210              		.section	.bss.yb.8743,"aw",%nobits
 10211              		.align	2
 10212              		.set	.LANCHOR21,. + 0
 10213              		.type	yb.8743, %object
 10214              		.size	yb.8743, 1
 10215              	yb.8743:
 10216 0000 00       		.space	1
 10217              		.section	.bss.yn.8744,"aw",%nobits
 10218              		.align	2
 10219              		.set	.LANCHOR22,. + 0
 10220              		.type	yn.8744, %object
 10221              		.size	yn.8744, 1
 10222              	yn.8744:
 10223 0000 00       		.space	1
 10224              		.section	.data.p_TSpm,"aw",%progbits
 10225              		.align	2
 10226              		.type	p_TSpm, %object
 10227              		.size	p_TSpm, 4
 10228              	p_TSpm:
 10229 0000 00000000 		.word	TSpm
 10230              		.section	.data.tbuf.8749,"aw",%progbits
 10231              		.align	2
 10232              		.set	.LANCHOR25,. + 0
 10233              		.type	tbuf.8749, %object
 10234              		.size	tbuf.8749, 20
 10235              	tbuf.8749:
 10236 0000 30303030 		.ascii	"0000-00-00 00:00:00\000"
 10236      2D30302D 
 10236      30302030 
 10236      303A3030 
 10236      3A303000 
 10237              		.section	.rodata.BMP280_i2c.str1.4,"aMS",%progbits,1
 10238              		.align	2
 10239              	.LC58:
 10240 0000 0D0A2069 		.ascii	"\015\012 i2c_BMP280 = 0x\000"
 10240      32635F42 
 10240      4D503238 
 10240      30203D20 
 10240      307800
 10241 0013 00       		.space	1
 10242              	.LC59:
 10243 0014 0D0A2042 		.ascii	"\015\012 BMP280 \000"
 10243      4D503238 
 10243      302000
 10244 001f 00       		.space	1
 10245              	.LC60:
 10246 0020 74743D00 		.ascii	"tt=\000"
 10247              	.LC61:
 10248 0024 20543D00 		.ascii	" T=\000"
 10249              	.LC62:
 10250 0028 20703D20 		.ascii	" p= \000"
 10250      00
 10251 002d 000000   		.space	3
 10252              	.LC63:
 10253 0030 2074703D 		.ascii	" tp=\000"
 10253      00
ARM GAS  /tmp/ccpmJ073.s 			page 182


 10254              		.section	.rodata.BMP280_spi.str1.4,"aMS",%progbits,1
 10255              		.align	2
 10256              	.LC64:
 10257 0000 0D0A2042 		.ascii	"\015\012 BMP280T1 = 0x\000"
 10257      4D503238 
 10257      30543120 
 10257      3D203078 
 10257      00
 10258              		.section	.rodata.Intro2.str1.4,"aMS",%progbits,1
 10259              		.align	2
 10260              	.LC146:
 10261 0000 0D0A2053 		.ascii	"\015\012 Start programu... \015\012\000"
 10261      74617274 
 10261      2070726F 
 10261      6772616D 
 10261      752E2E2E 
 10262              	.LC147:
 10263 0018 0D0A2044 		.ascii	"\015\012 Debug0...\000"
 10263      65627567 
 10263      302E2E2E 
 10263      00
 10264 0025 000000   		.space	3
 10265              	.LC148:
 10266 0028 0D0A2077 		.ascii	"\015\012 wXlen \000"
 10266      586C656E 
 10266      2000
 10267 0032 0000     		.space	2
 10268              	.LC149:
 10269 0034 0D0A2054 		.ascii	"\015\012 TIM4->PSC/ARR=\000"
 10269      494D342D 
 10269      3E505343 
 10269      2F415252 
 10269      3D00
 10270              		.section	.rodata.LoRaRX.str1.4,"aMS",%progbits,1
 10271              		.align	2
 10272              	.LC36:
 10273 0000 0A00     		.ascii	"\012\000"
 10274              		.section	.rodata.LoRaRX1.str1.4,"aMS",%progbits,1
 10275              		.align	2
 10276              	.LC37:
 10277 0000 2054696D 		.ascii	" Time=\000"
 10277      653D00
 10278 0007 00       		.space	1
 10279              	.LC38:
 10280 0008 0D0A2052 		.ascii	"\015\012 Read Reg1=0x\000"
 10280      65616420 
 10280      52656731 
 10280      3D307800 
 10281              	.LC39:
 10282 0018 20526567 		.ascii	" Reg1 0x\000"
 10282      31203078 
 10282      00
 10283 0021 000000   		.space	3
 10284              	.LC40:
 10285 0024 3D203078 		.ascii	"= 0x\000"
 10285      00
 10286 0029 000000   		.space	3
ARM GAS  /tmp/ccpmJ073.s 			page 183


 10287              	.LC41:
 10288 002c 0D0A2030 		.ascii	"\015\012 0-3(\000"
 10288      2D332800 
 10289              	.LC42:
 10290 0034 2920504F 		.ascii	") POWER=\000"
 10290      5745523D 
 10290      00
 10291 003d 000000   		.space	3
 10292              	.LC43:
 10293 0040 0D0A2030 		.ascii	"\015\012 0-6(\000"
 10293      2D362800 
 10294              	.LC44:
 10295 0048 29205346 		.ascii	") SF=\000"
 10295      3D00
 10296 004e 0000     		.space	2
 10297              	.LC45:
 10298 0050 0D0A2030 		.ascii	"\015\012 0-9(\000"
 10298      2D392800 
 10299              	.LC46:
 10300 0058 29204257 		.ascii	") BW=\000"
 10300      3D00
 10301 005e 0000     		.space	2
 10302              	.LC47:
 10303 0060 0D0A2073 		.ascii	"\015\012 sek(\000"
 10303      656B2800 
 10304              	.LC48:
 10305 0068 29204465 		.ascii	") Delay=\000"
 10305      6C61793D 
 10305      00
 10306 0071 000000   		.space	3
 10307              	.LC49:
 10308 0074 0D0A204D 		.ascii	"\015\012 Menu > \000"
 10308      656E7520 
 10308      3E2000
 10309 007f 00       		.space	1
 10310              	.LC50:
 10311 0080 0D0A2070 		.ascii	"\015\012 prssi->\000"
 10311      72737369 
 10311      2D3E00
 10312              		.section	.rodata.MAX44009_i2c.str1.4,"aMS",%progbits,1
 10313              		.align	2
 10314              	.LC57:
 10315 0000 0D0A2041 		.ascii	"\015\012 APDS9960_ID=0x\000"
 10315      50445339 
 10315      3936305F 
 10315      49443D30 
 10315      7800
 10316              		.section	.rodata.MemCard_Menu.str1.4,"aMS",%progbits,1
 10317              		.align	2
 10318              	.LC100:
 10319 0000 0D0A5344 		.ascii	"\015\012SD Card Init = \000"
 10319      20436172 
 10319      6420496E 
 10319      6974203D 
 10319      2000
 10320 0012 0000     		.space	2
 10321              	.LC101:
ARM GAS  /tmp/ccpmJ073.s 			page 184


 10322 0014 0D0A5344 		.ascii	"\015\012SD Card Init ERROR \000"
 10322      20436172 
 10322      6420496E 
 10322      69742045 
 10322      52524F52 
 10323 002a 0000     		.space	2
 10324              	.LC102:
 10325 002c 0D0A5344 		.ascii	"\015\012SD Card ser_num    = \000"
 10325      20436172 
 10325      64207365 
 10325      725F6E75 
 10325      6D202020 
 10326              	.LC103:
 10327 0044 0D0A5344 		.ascii	"\015\012SD Card block_num  = \000"
 10327      20436172 
 10327      6420626C 
 10327      6F636B5F 
 10327      6E756D20 
 10328              	.LC104:
 10329 005c 0D0A5344 		.ascii	"\015\012SD Card read_blen  = \000"
 10329      20436172 
 10329      64207265 
 10329      61645F62 
 10329      6C656E20 
 10330              	.LC105:
 10331 0074 0D0A5344 		.ascii	"\015\012SD Card write_blen = \000"
 10331      20436172 
 10331      64207772 
 10331      6974655F 
 10331      626C656E 
 10332              	.LC106:
 10333 008c 53746174 		.ascii	"Statistic Card  \000"
 10333      69737469 
 10333      63204361 
 10333      72642020 
 10333      00
 10334 009d 000000   		.space	3
 10335              	.LC107:
 10336 00a0 0D0A5344 		.ascii	"\015\012SD Card Not Init\000"
 10336      20436172 
 10336      64204E6F 
 10336      7420496E 
 10336      697400
 10337 00b3 00       		.space	1
 10338              	.LC108:
 10339 00b4 46696C6C 		.ascii	"Fill sector\000"
 10339      20736563 
 10339      746F7200 
 10340              	.LC109:
 10341 00c0 0D0A2053 		.ascii	"\015\012 Start Block  = 0x\000"
 10341      74617274 
 10341      20426C6F 
 10341      636B2020 
 10341      3D203078 
 10342 00d5 000000   		.space	3
 10343              	.LC110:
 10344 00d8 0D0A2045 		.ascii	"\015\012 End   Blocks = 0x\000"
ARM GAS  /tmp/ccpmJ073.s 			page 185


 10344      6E642020 
 10344      20426C6F 
 10344      636B7320 
 10344      3D203078 
 10345 00ed 000000   		.space	3
 10346              	.LC111:
 10347 00f0 0D0A204E 		.ascii	"\015\012 Num Blocks   = \000"
 10347      756D2042 
 10347      6C6F636B 
 10347      73202020 
 10347      3D2000
 10348 0103 00       		.space	1
 10349              	.LC112:
 10350 0104 0D0A2044 		.ascii	"\015\012 Data to fill = 0x\000"
 10350      61746120 
 10350      746F2066 
 10350      696C6C20 
 10350      3D203078 
 10351 0119 000000   		.space	3
 10352              	.LC113:
 10353 011c 0D0A2046 		.ascii	"\015\012 Fill error = 0x\000"
 10353      696C6C20 
 10353      6572726F 
 10353      72203D20 
 10353      307800
 10354 012f 00       		.space	1
 10355              	.LC114:
 10356 0130 0D0A2046 		.ascii	"\015\012 Fill OK \000"
 10356      696C6C20 
 10356      4F4B2000 
 10357              	.LC115:
 10358 013c 2054696D 		.ascii	" Time[us] = \000"
 10358      655B7573 
 10358      5D203D20 
 10358      00
 10359 0149 000000   		.space	3
 10360              	.LC116:
 10361 014c 4D6F6469 		.ascii	"Modify memory\000"
 10361      6679206D 
 10361      656D6F72 
 10361      7900
 10362 015a 0000     		.space	2
 10363              	.LC117:
 10364 015c 0D0A204D 		.ascii	"\015\012 Memory Addr = 0x\000"
 10364      656D6F72 
 10364      79204164 
 10364      6472203D 
 10364      20307800 
 10365              	.LC118:
 10366 0170 0D0A204D 		.ascii	"\015\012 Memory Data = 0x\000"
 10366      656D6F72 
 10366      79204461 
 10366      7461203D 
 10366      20307800 
 10367              	.LC119:
 10368 0184 0D0A204E 		.ascii	"\015\012 New Data    = 0x\000"
 10368      65772044 
ARM GAS  /tmp/ccpmJ073.s 			page 186


 10368      61746120 
 10368      2020203D 
 10368      20307800 
 10369              	.LC120:
 10370 0198 0D0A204D 		.ascii	"\015\012 Modify OK\000"
 10370      6F646966 
 10370      79204F4B 
 10370      00
 10371 01a5 000000   		.space	3
 10372              	.LC121:
 10373 01a8 0D0A2052 		.ascii	"\015\012 ReadB 0x\000"
 10373      65616442 
 10373      20307800 
 10374              	.LC122:
 10375 01b4 20204672 		.ascii	"  From 0x\000"
 10375      6F6D2030 
 10375      7800
 10376 01be 0000     		.space	2
 10377              	.LC123:
 10378 01c0 2D3E3078 		.ascii	"->0x\000"
 10378      00
 10379 01c5 000000   		.space	3
 10380              	.LC124:
 10381 01c8 20205772 		.ascii	"  WriteB 0x\000"
 10381      69746542 
 10381      20307800 
 10382              	.LC125:
 10383 01d4 20203078 		.ascii	"  0x\000"
 10383      00
 10384 01d9 000000   		.space	3
 10385              	.LC126:
 10386 01dc 0D0A2073 		.ascii	"\015\012 sectorNumber = 0x\000"
 10386      6563746F 
 10386      724E756D 
 10386      62657220 
 10386      3D203078 
 10387 01f1 000000   		.space	3
 10388              	.LC127:
 10389 01f4 20745F63 		.ascii	" t_crc = \000"
 10389      7263203D 
 10389      2000
 10390 01fe 0000     		.space	2
 10391              	.LC128:
 10392 0200 0D0A2052 		.ascii	"\015\012 Read Error = \000"
 10392      65616420 
 10392      4572726F 
 10392      72203D20 
 10392      00
 10393 0211 000000   		.space	3
 10394              	.LC129:
 10395 0214 52656164 		.ascii	"Read multi sector\000"
 10395      206D756C 
 10395      74692073 
 10395      6563746F 
 10395      7200
 10396 0226 0000     		.space	2
 10397              	.LC130:
ARM GAS  /tmp/ccpmJ073.s 			page 187


 10398 0228 0D0A204E 		.ascii	"\015\012 Num Sectors  = \000"
 10398      756D2053 
 10398      6563746F 
 10398      72732020 
 10398      3D2000
 10399 023b 00       		.space	1
 10400              	.LC131:
 10401 023c 0D0A2052 		.ascii	"\015\012 Read error = 0x\000"
 10401      65616420 
 10401      6572726F 
 10401      72203D20 
 10401      307800
 10402 024f 00       		.space	1
 10403              	.LC132:
 10404 0250 0D0A2052 		.ascii	"\015\012 Read OK \000"
 10404      65616420 
 10404      4F4B2000 
 10405              	.LC133:
 10406 025c 20793220 		.ascii	" y2 = \000"
 10406      3D2000
 10407 0263 00       		.space	1
 10408              	.LC134:
 10409 0264 0900     		.ascii	"\011\000"
 10410 0266 0000     		.space	2
 10411              	.LC135:
 10412 0268 56696577 		.ascii	"View last sector\000"
 10412      206C6173 
 10412      74207365 
 10412      63746F72 
 10412      00
 10413 0279 000000   		.space	3
 10414              	.LC136:
 10415 027c 0D0A2046 		.ascii	"\015\012 First Sector = 0x\000"
 10415      69727374 
 10415      20536563 
 10415      746F7220 
 10415      3D203078 
 10416 0291 000000   		.space	3
 10417              	.LC137:
 10418 0294 0D0A2053 		.ascii	"\015\012 Searching \000"
 10418      65617263 
 10418      68696E67 
 10418      2000
 10419 02a2 0000     		.space	2
 10420              	.LC138:
 10421 02a4 0D0A2045 		.ascii	"\015\012 Exit Read Error !!!\000"
 10421      78697420 
 10421      52656164 
 10421      20457272 
 10421      6F722021 
 10422 02bb 00       		.space	1
 10423              	.LC139:
 10424 02bc 0D0A2046 		.ascii	"\015\012 Find Sector = 0x\000"
 10424      696E6420 
 10424      53656374 
 10424      6F72203D 
 10424      20307800 
ARM GAS  /tmp/ccpmJ073.s 			page 188


 10425              	.LC140:
 10426 02d0 0D0A2020 		.ascii	"\015\012     lenBlock= \000"
 10426      2020206C 
 10426      656E426C 
 10426      6F636B3D 
 10426      2000
 10427 02e2 0000     		.space	2
 10428              	.LC141:
 10429 02e4 0D0A2042 		.ascii	"\015\012 Block = \000"
 10429      6C6F636B 
 10429      203D2000 
 10430              	.LC142:
 10431 02f0 0D0A2052 		.ascii	"\015\012 Read Error \000"
 10431      65616420 
 10431      4572726F 
 10431      722000
 10432 02ff 00       		.space	1
 10433              	.LC143:
 10434 0300 0D0A2053 		.ascii	"\015\012 SD_Status \015\012 \000"
 10434      445F5374 
 10434      61747573 
 10434      200D0A20 
 10434      00
 10435 0311 000000   		.space	3
 10436              	.LC144:
 10437 0314 54657374 		.ascii	"Testing ...\000"
 10437      696E6720 
 10437      2E2E2E00 
 10438              	.LC145:
 10439 0320 556E6B72 		.ascii	"Unkr_dma_buf Command !\000"
 10439      5F646D61 
 10439      5F627566 
 10439      20436F6D 
 10439      6D616E64 
 10440              		.section	.rodata.Menu1.str1.4,"aMS",%progbits,1
 10441              		.align	2
 10442              	.LC96:
 10443 0000 0A0D0A3D 		.ascii	"\012\015\012======= STM32F4 SD/MMC Card ==========="
 10443      3D3D3D3D 
 10443      3D3D2053 
 10443      544D3332 
 10443      46342053 
 10444 002a 3D3D3D3D 		.ascii	"===========\015\012\000"
 10444      3D3D3D3D 
 10444      3D3D3D0D 
 10444      0A00
 10445              	.LC97:
 10446 0038 2069202D 		.ascii	" i - Init      r - Read  sector  e - Erase sector  "
 10446      20496E69 
 10446      74202020 
 10446      20202072 
 10446      202D2052 
 10447 006b 200D0A00 		.ascii	" \015\012\000"
 10448 006f 00       		.space	1
 10449              	.LC98:
 10450 0070 2064202D 		.ascii	" d - Delete    f - Write sector  s - Statistic Card"
 10450      2044656C 
ARM GAS  /tmp/ccpmJ073.s 			page 189


 10450      65746520 
 10450      20202066 
 10450      202D2057 
 10451 00a3 200D0A00 		.ascii	" \015\012\000"
 10452 00a7 00       		.space	1
 10453              	.LC99:
 10454 00a8 206D202D 		.ascii	" m - Modf mem  c - Copy  sector  n - Next Cluster  "
 10454      204D6F64 
 10454      66206D65 
 10454      6D202063 
 10454      202D2043 
 10455 00db 0D0A00   		.ascii	"\015\012\000"
 10456              		.section	.rodata.SPI_Tool.str1.4,"aMS",%progbits,1
 10457              		.align	2
 10458              	.LC89:
 10459 0000 0D0A496E 		.ascii	"\015\012Init spi    = \000"
 10459      69742073 
 10459      70692020 
 10459      20203D20 
 10459      00
 10460 0011 000000   		.space	3
 10461              	.LC90:
 10462 0014 0D0A2052 		.ascii	"\015\012 Reg = \000"
 10462      6567203D 
 10462      2000
 10463 001e 0000     		.space	2
 10464              	.LC91:
 10465 0020 436F7079 		.ascii	"Copy memory\000"
 10465      206D656D 
 10465      6F727900 
 10466              	.LC92:
 10467 002c 0D0A2053 		.ascii	"\015\012 Src Mem adr = 0x\000"
 10467      7263204D 
 10467      656D2061 
 10467      6472203D 
 10467      20307800 
 10468              	.LC93:
 10469 0040 0D0A2048 		.ascii	"\015\012 How many byte = \000"
 10469      6F77206D 
 10469      616E7920 
 10469      62797465 
 10469      203D2000 
 10470              	.LC94:
 10471 0054 0D0A2044 		.ascii	"\015\012 Dst mem adr = 0x\000"
 10471      7374206D 
 10471      656D2061 
 10471      6472203D 
 10471      20307800 
 10472              	.LC95:
 10473 0068 4E69657A 		.ascii	"Nieznana Komenda\000"
 10473      6E616E61 
 10473      204B6F6D 
 10473      656E6461 
 10473      00
 10474              		.section	.rodata.SPI_Tool_Menu.str1.4,"aMS",%progbits,1
 10475              		.align	2
 10476              	.LC85:
ARM GAS  /tmp/ccpmJ073.s 			page 190


 10477 0000 0A0D0A3D 		.ascii	"\012\015\012======= STM32F1 SPI TOOL =============="
 10477      3D3D3D3D 
 10477      3D3D2053 
 10477      544D3332 
 10477      46312053 
 10478 002a 3D3D3D3D 		.ascii	"===========\015\012\000"
 10478      3D3D3D3D 
 10478      3D3D3D0D 
 10478      0A00
 10479              	.LC86:
 10480 0038 2069202D 		.ascii	" i - Init      r - Read  sector  e -               "
 10480      20496E69 
 10480      74202020 
 10480      20202072 
 10480      202D2052 
 10481 006b 200D0A00 		.ascii	" \015\012\000"
 10482 006f 00       		.space	1
 10483              	.LC87:
 10484 0070 2064202D 		.ascii	" d - Delete    f - Write sector  s -               "
 10484      2044656C 
 10484      65746520 
 10484      20202066 
 10484      202D2057 
 10485 00a3 200D0A00 		.ascii	" \015\012\000"
 10486 00a7 00       		.space	1
 10487              	.LC88:
 10488 00a8 206D202D 		.ascii	" m - Modf      c - Copy  sector  n -               "
 10488      204D6F64 
 10488      66202020 
 10488      20202063 
 10488      202D2043 
 10489 00db 0D0A00   		.ascii	"\015\012\000"
 10490              		.section	.rodata.SetDate.str1.4,"aMS",%progbits,1
 10491              		.align	2
 10492              	.LC152:
 10493 0000 0D0A2072 		.ascii	"\015\012 rok = \000"
 10493      6F6B203D 
 10493      2000
 10494 000a 0000     		.space	2
 10495              	.LC153:
 10496 000c 0D0A206D 		.ascii	"\015\012 mies = \000"
 10496      69657320 
 10496      3D2000
 10497 0017 00       		.space	1
 10498              	.LC154:
 10499 0018 0D0A2064 		.ascii	"\015\012 dzien = \000"
 10499      7A69656E 
 10499      203D2000 
 10500              	.LC155:
 10501 0024 0D0A2067 		.ascii	"\015\012 gdz = \000"
 10501      647A203D 
 10501      2000
 10502 002e 0000     		.space	2
 10503              	.LC156:
 10504 0030 0D0A206D 		.ascii	"\015\012 min = \000"
 10504      696E203D 
 10504      2000
ARM GAS  /tmp/ccpmJ073.s 			page 191


 10505 003a 0000     		.space	2
 10506              	.LC157:
 10507 003c 0D0A2073 		.ascii	"\015\012 sek = \000"
 10507      656B203D 
 10507      2000
 10508 0046 0000     		.space	2
 10509              	.LC158:
 10510 0048 0D0A2054 		.ascii	"\015\012 TimStmp = \000"
 10510      696D5374 
 10510      6D70203D 
 10510      2000
 10511              		.section	.rodata.TSL2561_i2c.str1.4,"aMS",%progbits,1
 10512              		.align	2
 10513              	.LC56:
 10514 0000 2C00     		.ascii	",\000"
 10515              		.section	.rodata.Zegarek.str1.4,"aMS",%progbits,1
 10516              		.align	2
 10517              	.LC150:
 10518 0000 30302D30 		.ascii	"00-00-00\000"
 10518      302D3030 
 10518      00
 10519 0009 000000   		.space	3
 10520              	.LC151:
 10521 000c 30303030 		.ascii	"0000-00-00\000"
 10521      2D30302D 
 10521      303000
 10522              		.section	.rodata._ytab,"a",%progbits
 10523              		.align	2
 10524              		.set	.LANCHOR0,. + 0
 10525              		.type	_ytab, %object
 10526              		.size	_ytab, 96
 10527              	_ytab:
 10528 0000 1F000000 		.word	31
 10529 0004 1C000000 		.word	28
 10530 0008 1F000000 		.word	31
 10531 000c 1E000000 		.word	30
 10532 0010 1F000000 		.word	31
 10533 0014 1E000000 		.word	30
 10534 0018 1F000000 		.word	31
 10535 001c 1F000000 		.word	31
 10536 0020 1E000000 		.word	30
 10537 0024 1F000000 		.word	31
 10538 0028 1E000000 		.word	30
 10539 002c 1F000000 		.word	31
 10540 0030 1F000000 		.word	31
 10541 0034 1D000000 		.word	29
 10542 0038 1F000000 		.word	31
 10543 003c 1E000000 		.word	30
 10544 0040 1F000000 		.word	31
 10545 0044 1E000000 		.word	30
 10546 0048 1F000000 		.word	31
 10547 004c 1F000000 		.word	31
 10548 0050 1E000000 		.word	30
 10549 0054 1F000000 		.word	31
 10550 0058 1E000000 		.word	30
 10551 005c 1F000000 		.word	31
 10552              		.section	.rodata.fun_tool.str1.4,"aMS",%progbits,1
ARM GAS  /tmp/ccpmJ073.s 			page 192


 10553              		.align	2
 10554              	.LC65:
 10555 0000 0D0A2046 		.ascii	"\015\012 FLASH memory Read = \000"
 10555      4C415348 
 10555      206D656D 
 10555      6F727920 
 10555      52656164 
 10556              	.LC66:
 10557 0018 0D0A2046 		.ascii	"\015\012 Flash memory Page =\000"
 10557      6C617368 
 10557      206D656D 
 10557      6F727920 
 10557      50616765 
 10558 002f 00       		.space	1
 10559              	.LC67:
 10560 0030 0D0A2000 		.ascii	"\015\012 \000"
 10561              	.LC68:
 10562 0034 0D0A0A20 		.ascii	"\015\012\012 \000"
 10562      00
 10563 0039 000000   		.space	3
 10564              	.LC69:
 10565 003c 202000   		.ascii	"  \000"
 10566 003f 00       		.space	1
 10567              	.LC70:
 10568 0040 20637263 		.ascii	" crc = \000"
 10568      203D2000 
 10569              	.LC71:
 10570 0048 0D0A2046 		.ascii	"\015\012 Flash memory Page = \000"
 10570      6C617368 
 10570      206D656D 
 10570      6F727920 
 10570      50616765 
 10571              	.LC72:
 10572 0060 0D0A204B 		.ascii	"\015\012 Kasowanie pamieci FLASH = \000"
 10572      61736F77 
 10572      616E6965 
 10572      2070616D 
 10572      69656369 
 10573 007e 0000     		.space	2
 10574              	.LC73:
 10575 0080 0D0A2047 		.ascii	"\015\012 Godzina = \000"
 10575      6F647A69 
 10575      6E61203D 
 10575      2000
 10576 008e 0000     		.space	2
 10577              	.LC74:
 10578 0090 0D0A204D 		.ascii	"\015\012 Minut   = \000"
 10578      696E7574 
 10578      2020203D 
 10578      2000
 10579 009e 0000     		.space	2
 10580              	.LC75:
 10581 00a0 0D0A2053 		.ascii	"\015\012 Sekunda = \000"
 10581      656B756E 
 10581      6461203D 
 10581      2000
 10582 00ae 0000     		.space	2
ARM GAS  /tmp/ccpmJ073.s 			page 193


 10583              	.LC76:
 10584 00b0 0D0A2052 		.ascii	"\015\012 Read Start !\000"
 10584      65616420 
 10584      53746172 
 10584      74202100 
 10585              	.LC77:
 10586 00c0 2E00     		.ascii	".\000"
 10587 00c2 0000     		.space	2
 10588              	.LC78:
 10589 00c4 0D0A2052 		.ascii	"\015\012 Read Done !\000"
 10589      65616420 
 10589      446F6E65 
 10589      202100
 10590 00d3 00       		.space	1
 10591              	.LC79:
 10592 00d4 0D0A2043 		.ascii	"\015\012 Clear !\000"
 10592      6C656172 
 10592      202100
 10593 00df 00       		.space	1
 10594              	.LC80:
 10595 00e0 52656164 		.ascii	"Read sector\000"
 10595      20736563 
 10595      746F7200 
 10596              	.LC81:
 10597 00ec 0D0A2073 		.ascii	"\015\012 sectorNumber = \000"
 10597      6563746F 
 10597      724E756D 
 10597      62657220 
 10597      3D2000
 10598 00ff 00       		.space	1
 10599              	.LC82:
 10600 0100 20745F72 		.ascii	" t_rsdio = \000"
 10600      7364696F 
 10600      203D2000 
 10601              	.LC83:
 10602 010c 0D0A2052 		.ascii	"\015\012 Read Error !!!\000"
 10602      65616420 
 10602      4572726F 
 10602      72202121 
 10602      2100
 10603              		.section	.rodata.head.str1.4,"aMS",%progbits,1
 10604              		.align	2
 10605              	.LC8:
 10606 0000 0C0D0A20 		.ascii	"\014\015\012 Mini STM32F103C8T6 RAM   \000"
 10606      4D696E69 
 10606      2053544D 
 10606      33324631 
 10606      30334338 
 10607 001e 0000     		.space	2
 10608              	.LC9:
 10609 0020 204D487A 		.ascii	" MHz\000"
 10609      00
 10610              		.section	.rodata.ili9486.str1.4,"aMS",%progbits,1
 10611              		.align	2
 10612              	.LC29:
 10613 0000 0D0A2072 		.ascii	"\015\012 reg = 0x\000"
 10613      6567203D 
ARM GAS  /tmp/ccpmJ073.s 			page 194


 10613      20307800 
 10614              	.LC30:
 10615 000c 0D0A2064 		.ascii	"\015\012 dat = 0x\000"
 10615      6174203D 
 10615      20307800 
 10616              	.LC31:
 10617 0018 0C00     		.ascii	"\014\000"
 10618 001a 0000     		.space	2
 10619              	.LC32:
 10620 001c 0A0D0A3D 		.ascii	"\012\015\012======= ILI9486 ======================="
 10620      3D3D3D3D 
 10620      3D3D2049 
 10620      4C493934 
 10620      3836203D 
 10621 0046 3D3D3D3D 		.ascii	"===========\015\012\000"
 10621      3D3D3D3D 
 10621      3D3D3D0D 
 10621      0A00
 10622              	.LC33:
 10623 0054 2072202D 		.ascii	" r - Read   c - Clear page  \015\012\000"
 10623      20526561 
 10623      64202020 
 10623      63202D20 
 10623      436C6561 
 10624 0073 00       		.space	1
 10625              	.LC34:
 10626 0074 2077202D 		.ascii	" w - Write  l - Loop read   \015\012\000"
 10626      20577269 
 10626      74652020 
 10626      6C202D20 
 10626      4C6F6F70 
 10627 0093 00       		.space	1
 10628              	.LC35:
 10629 0094 3D3D3D3D 		.ascii	"==================================================\015"
 10629      3D3D3D3D 
 10629      3D3D3D3D 
 10629      3D3D3D3D 
 10629      3D3D3D3D 
 10630 00c7 0A203E20 		.ascii	"\012 > \000"
 10630      00
 10631              		.section	.rodata.jdrs.9062,"a",%progbits
 10632              		.align	2
 10633              		.set	.LANCHOR26,. + 0
 10634              		.type	jdrs.9062, %object
 10635              		.size	jdrs.9062, 16
 10636              	jdrs.9062:
 10637 0000 3C240140 		.word	1073816636
 10638 0004 40240140 		.word	1073816640
 10639 0008 44240140 		.word	1073816644
 10640 000c 48240140 		.word	1073816648
 10641              		.section	.rodata.lexmark_lcd.str1.4,"aMS",%progbits,1
 10642              		.align	2
 10643              	.LC52:
 10644 0000 57697461 		.ascii	"Witaj szkolo         \000"
 10644      6A20737A 
 10644      6B6F6C6F 
 10644      20202020 
ARM GAS  /tmp/ccpmJ073.s 			page 195


 10644      20202020 
 10645 0016 0000     		.space	2
 10646              	.LC53:
 10647 0018 5A617072 		.ascii	"Zapraszam do pracy        \000"
 10647      61737A61 
 10647      6D20646F 
 10647      20707261 
 10647      63792020 
 10648 0033 00       		.space	1
 10649              	.LC54:
 10650 0034 20202020 		.ascii	"                          \000"
 10650      20202020 
 10650      20202020 
 10650      20202020 
 10650      20202020 
 10651 004f 00       		.space	1
 10652              	.LC55:
 10653 0050 20545B75 		.ascii	" T[us]=\000"
 10653      735D3D00 
 10654              		.section	.rodata.lion_updown.str1.4,"aMS",%progbits,1
 10655              		.align	2
 10656              	.LC24:
 10657 0000 5600     		.ascii	"V\000"
 10658 0002 0000     		.space	2
 10659              	.LC25:
 10660 0004 6D4100   		.ascii	"mA\000"
 10661 0007 00       		.space	1
 10662              	.LC26:
 10663 0008 5700     		.ascii	"W\000"
 10664 000a 0000     		.space	2
 10665              	.LC27:
 10666 000c 6D416800 		.ascii	"mAh\000"
 10667              	.LC28:
 10668 0010 0D2000   		.ascii	"\015 \000"
 10669              		.section	.rodata.liontrend.str1.4,"aMS",%progbits,1
 10670              		.align	2
 10671              	.LC22:
 10672 0000 763D00   		.ascii	"v=\000"
 10673 0003 00       		.space	1
 10674              	.LC23:
 10675 0004 633D00   		.ascii	"c=\000"
 10676              		.section	.rodata.minios.str1.4,"aMS",%progbits,1
 10677              		.align	2
 10678              	.LC10:
 10679 0000 0C205541 		.ascii	"\014 UART1 \000"
 10679      52543120 
 10679      00
 10680 0009 000000   		.space	3
 10681              	.LC11:
 10682 000c 20622F73 		.ascii	" b/s \015\012\000"
 10682      200D0A00 
 10683              	.LC12:
 10684 0014 0C205541 		.ascii	"\014 UART2 \000"
 10684      52543220 
 10684      00
 10685 001d 000000   		.space	3
 10686              	.LC13:
ARM GAS  /tmp/ccpmJ073.s 			page 196


 10687 0020 64656275 		.ascii	"debug_0\000"
 10687      675F3000 
 10688              	.LC14:
 10689 0028 436F6E66 		.ascii	"Config=\000"
 10689      69673D00 
 10690              	.LC15:
 10691 0030 2000     		.ascii	" \000"
 10692 0032 0000     		.space	2
 10693              	.LC16:
 10694 0034 0D00     		.ascii	"\015\000"
 10695 0036 0000     		.space	2
 10696              	.LC17:
 10697 0038 76627573 		.ascii	"vbus=\000"
 10697      3D00
 10698 003e 0000     		.space	2
 10699              	.LC18:
 10700 0040 20637572 		.ascii	" cur=\000"
 10700      3D00
 10701 0046 0000     		.space	2
 10702              	.LC19:
 10703 0048 0D0A00   		.ascii	"\015\012\000"
 10704 004b 00       		.space	1
 10705              	.LC20:
 10706 004c 09096120 		.ascii	"\011\011a Podaj liczbe  \000"
 10706      506F6461 
 10706      6A206C69 
 10706      637A6265 
 10706      202000
 10707 005f 00       		.space	1
 10708              	.LC21:
 10709 0060 206E756D 		.ascii	" num=\000"
 10709      3D00
 10710              		.section	.rodata.qtouch.str1.4,"aMS",%progbits,1
 10711              		.align	2
 10712              	.LC84:
 10713 0000 0D0A2051 		.ascii	"\015\012 QT =\000"
 10713      54203D00 
 10714              		.section	.rodata.ws2812led.str1.4,"aMS",%progbits,1
 10715              		.align	2
 10716              	.LC51:
 10717 0000 0D0A2044 		.ascii	"\015\012 DMA start...\000"
 10717      4D412073 
 10717      74617274 
 10717      2E2E2E00 
 10718              		.ident	"GCC: (15:7-2018-q2-6) 7.3.1 20180622 (release) [ARM/embedded-7-branch revision 261907]"
ARM GAS  /tmp/ccpmJ073.s 			page 197


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccpmJ073.s:69     .text.gmtime_r.isra.0.constprop.2:00000000 $t
     /tmp/ccpmJ073.s:76     .text.gmtime_r.isra.0.constprop.2:00000000 gmtime_r.isra.0.constprop.2
     /tmp/ccpmJ073.s:264    .text.gmtime_r.isra.0.constprop.2:00000154 $d
                            *COM*:00000024 ptm
     /tmp/ccpmJ073.s:274    .text.head:00000000 $t
     /tmp/ccpmJ073.s:282    .text.head:00000000 head
     /tmp/ccpmJ073.s:305    .text.head:00000024 $d
     /tmp/ccpmJ073.s:309    .text.minios:00000000 $t
     /tmp/ccpmJ073.s:317    .text.minios:00000000 minios
     /tmp/ccpmJ073.s:665    .text.minios:00000274 $d
                            *COM*:00000004 trg0
                            *COM*:00000004 PutChar
     /tmp/ccpmJ073.s:695    .text.startup.main:00000000 $t
     /tmp/ccpmJ073.s:703    .text.startup.main:00000000 main
     /tmp/ccpmJ073.s:794    .text.startup.main:00000074 $d
     /tmp/ccpmJ073.s:805    .text.liontrend:00000000 $t
     /tmp/ccpmJ073.s:813    .text.liontrend:00000000 liontrend
     /tmp/ccpmJ073.s:942    .text.liontrend:00000124 $d
     /tmp/ccpmJ073.s:948    .text.oblicz:00000000 $t
     /tmp/ccpmJ073.s:956    .text.oblicz:00000000 oblicz
     /tmp/ccpmJ073.s:1087   .text.oblicz:000000dc $d
     /tmp/ccpmJ073.s:1102   .text.lion_updown:00000000 $t
     /tmp/ccpmJ073.s:1110   .text.lion_updown:00000000 lion_updown
     /tmp/ccpmJ073.s:1356   .text.lion_updown:000001b4 $d
     /tmp/ccpmJ073.s:1382   .text.lion_updown:0000021c $t
     /tmp/ccpmJ073.s:1522   .text.lion_updown:000002c4 $d
                            *COM*:00000004 trg1
                            *COM*:00000004 trg2
     /tmp/ccpmJ073.s:1552   .text.lion_updown:00000334 $t
     /tmp/ccpmJ073.s:1741   .text.lion_updown:000004ac $d
     /tmp/ccpmJ073.s:1759   .text.uht:00000000 $t
     /tmp/ccpmJ073.s:1767   .text.uht:00000000 uht
     /tmp/ccpmJ073.s:1782   .text.uht:00000010 $d
     /tmp/ccpmJ073.s:1785   .text.rtc_calibrate:00000000 $t
     /tmp/ccpmJ073.s:1793   .text.rtc_calibrate:00000000 rtc_calibrate
     /tmp/ccpmJ073.s:1956   .text.rtc_calibrate:00000104 $d
                            *COM*:00000004 Timt
                            *COM*:00000004 delay_us
     /tmp/ccpmJ073.s:1971   .text.testwsk:00000000 $t
     /tmp/ccpmJ073.s:1979   .text.testwsk:00000000 testwsk
     /tmp/ccpmJ073.s:1987   .text.veml6075:00000000 $t
     /tmp/ccpmJ073.s:1995   .text.veml6075:00000000 veml6075
     /tmp/ccpmJ073.s:2100   .text.veml6075:000000a0 $d
     /tmp/ccpmJ073.s:2115   .text.softSPI_w:00000000 $t
     /tmp/ccpmJ073.s:2123   .text.softSPI_w:00000000 softSPI_w
     /tmp/ccpmJ073.s:2193   .text.softSPI_w:00000064 $d
     /tmp/ccpmJ073.s:2200   .text.softSPI_r:00000000 $t
     /tmp/ccpmJ073.s:2208   .text.softSPI_r:00000000 softSPI_r
     /tmp/ccpmJ073.s:2260   .text.softSPI_r:00000038 $d
     /tmp/ccpmJ073.s:2265   .text.ili9486:00000000 $t
     /tmp/ccpmJ073.s:2273   .text.ili9486:00000000 ili9486
     /tmp/ccpmJ073.s:2475   .text.ili9486:00000128 $d
     /tmp/ccpmJ073.s:2492   .text.wiznet5500:00000000 $t
     /tmp/ccpmJ073.s:2500   .text.wiznet5500:00000000 wiznet5500
     /tmp/ccpmJ073.s:2574   .text.wiznet5500:00000074 $d
ARM GAS  /tmp/ccpmJ073.s 			page 198


     /tmp/ccpmJ073.s:2584   .text.uv_meter:00000000 $t
     /tmp/ccpmJ073.s:2592   .text.uv_meter:00000000 uv_meter
     /tmp/ccpmJ073.s:2682   .text.uv_meter:00000078 $d
     /tmp/ccpmJ073.s:2690   .text.IRQLoraInit:00000000 $t
     /tmp/ccpmJ073.s:2698   .text.IRQLoraInit:00000000 IRQLoraInit
     /tmp/ccpmJ073.s:2731   .text.IRQLoraInit:0000001c $d
     /tmp/ccpmJ073.s:2736   .text.LoRaRX:00000000 $t
     /tmp/ccpmJ073.s:2744   .text.LoRaRX:00000000 LoRaRX
     /tmp/ccpmJ073.s:2953   .text.LoRaRX:00000144 $d
     /tmp/ccpmJ073.s:2971   .text.LoRaRX1:00000000 $t
     /tmp/ccpmJ073.s:2979   .text.LoRaRX1:00000000 LoRaRX1
     /tmp/ccpmJ073.s:3135   .text.LoRaRX1:00000100 $d
     /tmp/ccpmJ073.s:3153   .text.LoRaRX1:00000112 $t
     /tmp/ccpmJ073.s:3302   .text.LoRaRX1:00000238 $d
     /tmp/ccpmJ073.s:3334   .text.LoRaTX:00000000 $t
     /tmp/ccpmJ073.s:3342   .text.LoRaTX:00000000 LoRaTX
     /tmp/ccpmJ073.s:3584   .text.LoRaTX:00000198 $d
     /tmp/ccpmJ073.s:3604   .text.col1:00000000 $t
     /tmp/ccpmJ073.s:3612   .text.col1:00000000 col1
     /tmp/ccpmJ073.s:3632   .text.col1:00000018 $d
     /tmp/ccpmJ073.s:3636   .text.col2:00000000 $t
     /tmp/ccpmJ073.s:3644   .text.col2:00000000 col2
     /tmp/ccpmJ073.s:3660   .text.col2:00000014 $d
     /tmp/ccpmJ073.s:3663   .text.col0:00000000 $t
     /tmp/ccpmJ073.s:3671   .text.col0:00000000 col0
     /tmp/ccpmJ073.s:3687   .text.col0:00000014 $d
     /tmp/ccpmJ073.s:3690   .text.ws2812led:00000000 $t
     /tmp/ccpmJ073.s:3698   .text.ws2812led:00000000 ws2812led
     /tmp/ccpmJ073.s:3856   .text.ws2812led:000000e4 $d
     /tmp/ccpmJ073.s:3873   .text.lexmark_lcd:00000000 $t
     /tmp/ccpmJ073.s:3881   .text.lexmark_lcd:00000000 lexmark_lcd
     /tmp/ccpmJ073.s:3951   .text.lexmark_lcd:0000006c $d
     /tmp/ccpmJ073.s:3962   .text.softUTX_init:00000000 $t
     /tmp/ccpmJ073.s:3970   .text.softUTX_init:00000000 softUTX_init
     /tmp/ccpmJ073.s:3985   .text.softUTX_init:00000010 $d
     /tmp/ccpmJ073.s:3988   .text.sofUTX:00000000 $t
     /tmp/ccpmJ073.s:3996   .text.sofUTX:00000000 sofUTX
     /tmp/ccpmJ073.s:4087   .text.sofUTX:0000006c $d
     /tmp/ccpmJ073.s:4092   .text.ToLED:00000000 $t
     /tmp/ccpmJ073.s:4100   .text.ToLED:00000000 ToLED
     /tmp/ccpmJ073.s:4128   .text.cmd_LCD:00000000 $t
     /tmp/ccpmJ073.s:4136   .text.cmd_LCD:00000000 cmd_LCD
     /tmp/ccpmJ073.s:4198   .text.cmd_LCD:00000058 $d
     /tmp/ccpmJ073.s:4204   .text.CalculateLux:00000000 $t
     /tmp/ccpmJ073.s:4212   .text.CalculateLux:00000000 CalculateLux
     /tmp/ccpmJ073.s:4384   .text.TSL2561_i2c:00000000 $t
     /tmp/ccpmJ073.s:4392   .text.TSL2561_i2c:00000000 TSL2561_i2c
     /tmp/ccpmJ073.s:4529   .text.TSL2561_i2c:000000dc $d
     /tmp/ccpmJ073.s:4541   .text.set_mode:00000000 $t
     /tmp/ccpmJ073.s:4549   .text.set_mode:00000000 set_mode
     /tmp/ccpmJ073.s:4610   .text.MAX44009_i2c:00000000 $t
     /tmp/ccpmJ073.s:4618   .text.MAX44009_i2c:00000000 MAX44009_i2c
     /tmp/ccpmJ073.s:4889   .text.MAX44009_i2c:000001ec $d
     /tmp/ccpmJ073.s:4905   .text.BMP280_i2c:00000000 $t
     /tmp/ccpmJ073.s:4913   .text.BMP280_i2c:00000000 BMP280_i2c
     /tmp/ccpmJ073.s:5383   .text.BMP280_i2c:00000334 $d
     /tmp/ccpmJ073.s:5404   .text.BMP280_spi:00000000 $t
ARM GAS  /tmp/ccpmJ073.s 			page 199


     /tmp/ccpmJ073.s:5412   .text.BMP280_spi:00000000 BMP280_spi
     /tmp/ccpmJ073.s:5666   .text.BMP280_spi:000001bc $d
     /tmp/ccpmJ073.s:5682   .text.fun_tool:00000000 $t
     /tmp/ccpmJ073.s:5690   .text.fun_tool:00000000 fun_tool
     /tmp/ccpmJ073.s:5703   .text.fun_tool:00000014 $d
     /tmp/ccpmJ073.s:5724   .text.fun_tool:0000003e $t
     /tmp/ccpmJ073.s:6130   .text.fun_tool:00000318 $d
     /tmp/ccpmJ073.s:6157   .text.qtouch_mesaure:00000000 $t
     /tmp/ccpmJ073.s:6165   .text.qtouch_mesaure:00000000 qtouch_mesaure
     /tmp/ccpmJ073.s:6221   .text.qtouch_mesaure:0000003c $d
     /tmp/ccpmJ073.s:6227   .text.qtouch:00000000 $t
     /tmp/ccpmJ073.s:6235   .text.qtouch:00000000 qtouch
     /tmp/ccpmJ073.s:6278   .text.qtouch:00000048 $d
     /tmp/ccpmJ073.s:6285   .text.DHT_Tool:00000000 $t
     /tmp/ccpmJ073.s:6293   .text.DHT_Tool:00000000 DHT_Tool
     /tmp/ccpmJ073.s:6326   .text.DHT_Tool:0000002c $d
     /tmp/ccpmJ073.s:6332   .text.SPI_Tool_Menu:00000000 $t
     /tmp/ccpmJ073.s:6340   .text.SPI_Tool_Menu:00000000 SPI_Tool_Menu
     /tmp/ccpmJ073.s:6364   .text.SPI_Tool_Menu:00000024 $d
     /tmp/ccpmJ073.s:6371   .text.SPI_Tool:00000000 $t
     /tmp/ccpmJ073.s:6379   .text.SPI_Tool:00000000 SPI_Tool
     /tmp/ccpmJ073.s:6546   .text.SPI_Tool:00000114 $d
     /tmp/ccpmJ073.s:6567   .text.Menu1:00000000 $t
     /tmp/ccpmJ073.s:6575   .text.Menu1:00000000 Menu1
     /tmp/ccpmJ073.s:6599   .text.Menu1:00000024 $d
     /tmp/ccpmJ073.s:6606   .text.MemCard_Menu:00000000 $t
     /tmp/ccpmJ073.s:6614   .text.MemCard_Menu:00000000 MemCard_Menu
     /tmp/ccpmJ073.s:6687   .text.MemCard_Menu:00000082 $d
     /tmp/ccpmJ073.s:6726   .text.MemCard_Menu:000000d0 $t
     /tmp/ccpmJ073.s:7002   .text.MemCard_Menu:000002c0 $d
     /tmp/ccpmJ073.s:10126  .bss.buffer.8851:00000000 buffer.8851
     /tmp/ccpmJ073.s:7029   .text.MemCard_Menu:00000324 $t
     /tmp/ccpmJ073.s:7392   .text.MemCard_Menu:000005e8 $d
     /tmp/ccpmJ073.s:7431   .text.MemCard_Menu:0000067c $t
     /tmp/ccpmJ073.s:7690   .text.MemCard_Menu:00000854 $d
     /tmp/ccpmJ073.s:7715   .text.CopyClock:00000000 $t
     /tmp/ccpmJ073.s:7723   .text.CopyClock:00000000 CopyClock
     /tmp/ccpmJ073.s:7789   .text.Intro2:00000000 $t
     /tmp/ccpmJ073.s:7797   .text.Intro2:00000000 Intro2
     /tmp/ccpmJ073.s:8242   .text.Intro2:000002e0 $d
                            *COM*:00000008 Rtc
     /tmp/ccpmJ073.s:8270   .text.Intro2:00000348 $t
     /tmp/ccpmJ073.s:8447   .text.Intro2:00000490 $d
     /tmp/ccpmJ073.s:8458   .text.CopyTime:00000000 $t
     /tmp/ccpmJ073.s:8466   .text.CopyTime:00000000 CopyTime
     /tmp/ccpmJ073.s:8505   .text.CopyDate:00000000 $t
     /tmp/ccpmJ073.s:8513   .text.CopyDate:00000000 CopyDate
     /tmp/ccpmJ073.s:8552   .text.Zegarek:00000000 $t
     /tmp/ccpmJ073.s:8560   .text.Zegarek:00000000 Zegarek
     /tmp/ccpmJ073.s:8619   .text.Zegarek:00000054 $d
     /tmp/ccpmJ073.s:8627   .text.SysTick_Handler:00000000 $t
     /tmp/ccpmJ073.s:8635   .text.SysTick_Handler:00000000 SysTick_Handler
     /tmp/ccpmJ073.s:8713   .text.SysTick_Handler:00000054 $d
                            *COM*:00000004 Tim0
                            *COM*:00000004 Tim1
                            *COM*:00000004 trg3
                            *COM*:00000004 trg4
ARM GAS  /tmp/ccpmJ073.s 			page 200


                            *COM*:00000004 trg5
     /tmp/ccpmJ073.s:8726   .text.TIM2_IRQHandler:00000000 $t
     /tmp/ccpmJ073.s:8734   .text.TIM2_IRQHandler:00000000 TIM2_IRQHandler
     /tmp/ccpmJ073.s:8763   .text.TIM2_IRQHandler:0000001c $d
     /tmp/ccpmJ073.s:8766   .text.TIM3_IRQHandler:00000000 $t
     /tmp/ccpmJ073.s:8774   .text.TIM3_IRQHandler:00000000 TIM3_IRQHandler
     /tmp/ccpmJ073.s:8834   .text.TIM3_IRQHandler:00000044 $d
                            *COM*:00000004 Timt3
                            *COM*:00000004 delay3_us
                            *COM*:00000004 t3rg0
                            *COM*:00000004 t3rg1
                            *COM*:00000004 t3rg2
     /tmp/ccpmJ073.s:8842   .text.EXTI0_IRQHandler:00000000 $t
     /tmp/ccpmJ073.s:8850   .text.EXTI0_IRQHandler:00000000 EXTI0_IRQHandler
     /tmp/ccpmJ073.s:8884   .text.EXTI0_IRQHandler:00000024 $d
     /tmp/ccpmJ073.s:8889   .text.EXTI1_IRQHandler:00000000 $t
     /tmp/ccpmJ073.s:8897   .text.EXTI1_IRQHandler:00000000 EXTI1_IRQHandler
     /tmp/ccpmJ073.s:8927   .text.EXTI1_IRQHandler:00000020 $d
     /tmp/ccpmJ073.s:8931   .text.EXTI2_IRQHandler:00000000 $t
     /tmp/ccpmJ073.s:8939   .text.EXTI2_IRQHandler:00000000 EXTI2_IRQHandler
     /tmp/ccpmJ073.s:8969   .text.EXTI2_IRQHandler:00000020 $d
     /tmp/ccpmJ073.s:8973   .text.EXTI3_IRQHandler:00000000 $t
     /tmp/ccpmJ073.s:8981   .text.EXTI3_IRQHandler:00000000 EXTI3_IRQHandler
     /tmp/ccpmJ073.s:9011   .text.EXTI3_IRQHandler:00000020 $d
     /tmp/ccpmJ073.s:9015   .text.EXTI4_IRQHandler:00000000 $t
     /tmp/ccpmJ073.s:9023   .text.EXTI4_IRQHandler:00000000 EXTI4_IRQHandler
     /tmp/ccpmJ073.s:9053   .text.EXTI4_IRQHandler:00000020 $d
     /tmp/ccpmJ073.s:9057   .text.EXTI15_10_IRQHandler:00000000 $t
     /tmp/ccpmJ073.s:9065   .text.EXTI15_10_IRQHandler:00000000 EXTI15_10_IRQHandler
     /tmp/ccpmJ073.s:9091   .text.EXTI15_10_IRQHandler:0000001c $d
     /tmp/ccpmJ073.s:9094   .text.EXTI9_5_IRQHandler:00000000 $t
     /tmp/ccpmJ073.s:9102   .text.EXTI9_5_IRQHandler:00000000 EXTI9_5_IRQHandler
     /tmp/ccpmJ073.s:9145   .text.EXTI9_5_IRQHandler:00000038 $d
     /tmp/ccpmJ073.s:9149   .text.RTC_IRQHandler:00000000 $t
     /tmp/ccpmJ073.s:9157   .text.RTC_IRQHandler:00000000 RTC_IRQHandler
     /tmp/ccpmJ073.s:9195   .text.RTC_IRQHandler:00000028 $d
     /tmp/ccpmJ073.s:9200   .text.RTCAlarm_IRQHandler:00000000 $t
     /tmp/ccpmJ073.s:9208   .text.RTCAlarm_IRQHandler:00000000 RTCAlarm_IRQHandler
     /tmp/ccpmJ073.s:9242   .text.RTCAlarm_IRQHandler:00000028 $d
     /tmp/ccpmJ073.s:9246   .text.DMA1_Channel1_IRQHandler:00000000 $t
     /tmp/ccpmJ073.s:9254   .text.DMA1_Channel1_IRQHandler:00000000 DMA1_Channel1_IRQHandler
     /tmp/ccpmJ073.s:9296   .text.DMA1_Channel1_IRQHandler:0000002c $d
     /tmp/ccpmJ073.s:9301   .text.FSMC_IRQHandler:00000000 $t
     /tmp/ccpmJ073.s:9309   .text.FSMC_IRQHandler:00000000 FSMC_IRQHandler
     /tmp/ccpmJ073.s:9324   .text.DACDmaInit:00000000 $t
     /tmp/ccpmJ073.s:9332   .text.DACDmaInit:00000000 DACDmaInit
     /tmp/ccpmJ073.s:9371   .text.DACDmaInit:00000030 $d
     /tmp/ccpmJ073.s:9377   .text.TIM4_IRQHandler:00000000 $t
     /tmp/ccpmJ073.s:9385   .text.TIM4_IRQHandler:00000000 TIM4_IRQHandler
     /tmp/ccpmJ073.s:9405   .text.TIM4_IRQHandler:00000010 $d
                            *COM*:00000004 Tim4
     /tmp/ccpmJ073.s:9409   .text.adc1_init_injected:00000000 $t
     /tmp/ccpmJ073.s:9417   .text.adc1_init_injected:00000000 adc1_init_injected
     /tmp/ccpmJ073.s:9485   .text.adc1_init_injected:00000050 $d
     /tmp/ccpmJ073.s:9493   .text.adc_get_internals:00000000 $t
     /tmp/ccpmJ073.s:9501   .text.adc_get_internals:00000000 adc_get_internals
     /tmp/ccpmJ073.s:9579   .text.adc_get_internals:00000054 $d
ARM GAS  /tmp/ccpmJ073.s 			page 201


     /tmp/ccpmJ073.s:9586   .text.adc_get_injected:00000000 $t
     /tmp/ccpmJ073.s:9594   .text.adc_get_injected:00000000 adc_get_injected
     /tmp/ccpmJ073.s:9661   .text.adc_get_injected:00000048 $d
                .rodata.jdrs.9062:00000000 jdrs.9077
     /tmp/ccpmJ073.s:9667   .text.NVIC_conf:00000000 $t
     /tmp/ccpmJ073.s:9675   .text.NVIC_conf:00000000 NVIC_conf
     /tmp/ccpmJ073.s:9712   .text.NVIC_conf:00000028 $d
     /tmp/ccpmJ073.s:9718   .text.SetDate:00000000 $t
     /tmp/ccpmJ073.s:9726   .text.SetDate:00000000 SetDate
     /tmp/ccpmJ073.s:9934   .text.SetDate:0000019c $d
     /tmp/ccpmJ073.s:9946   .text.flash_latency:00000000 $t
     /tmp/ccpmJ073.s:9954   .text.flash_latency:00000000 flash_latency
     /tmp/ccpmJ073.s:9985   .text.flash_latency:00000024 $d
     /tmp/ccpmJ073.s:10636  .rodata.jdrs.9062:00000000 jdrs.9062
     /tmp/ccpmJ073.s:10228  .data.p_TSpm:00000000 p_TSpm
     /tmp/ccpmJ073.s:10058  .bss.FLAG:00000000 FLAG
     /tmp/ccpmJ073.s:10527  .rodata._ytab:00000000 _ytab
                            *COM*:00000004 Time6
                            *COM*:00000004 Tim6
                            *COM*:00000004 Tim2
     /tmp/ccpmJ073.s:10015  .rodata:00000000 $d
     /tmp/ccpmJ073.s:10054  .bss.FLAG:00000000 $d
     /tmp/ccpmJ073.s:10061  .bss.SX1278_1.8446:00000000 $d
     /tmp/ccpmJ073.s:10065  .bss.SX1278_1.8446:00000000 SX1278_1.8446
     /tmp/ccpmJ073.s:10068  .bss.SX1278_1.8472:00000000 $d
     /tmp/ccpmJ073.s:10072  .bss.SX1278_1.8472:00000000 SX1278_1.8472
     /tmp/ccpmJ073.s:10075  .bss.SX1278_1.8497:00000000 $d
     /tmp/ccpmJ073.s:10079  .bss.SX1278_1.8497:00000000 SX1278_1.8497
     /tmp/ccpmJ073.s:10082  .bss.SX1278_hw1.8445:00000000 $d
     /tmp/ccpmJ073.s:10086  .bss.SX1278_hw1.8445:00000000 SX1278_hw1.8445
     /tmp/ccpmJ073.s:10089  .bss.SX1278_hw1.8471:00000000 $d
     /tmp/ccpmJ073.s:10093  .bss.SX1278_hw1.8471:00000000 SX1278_hw1.8471
     /tmp/ccpmJ073.s:10096  .bss.SX1278_hw1.8496:00000000 $d
     /tmp/ccpmJ073.s:10100  .bss.SX1278_hw1.8496:00000000 SX1278_hw1.8496
     /tmp/ccpmJ073.s:10103  .bss.TSpm:00000000 $d
     /tmp/ccpmJ073.s:10106  .bss.TSpm:00000000 TSpm
     /tmp/ccpmJ073.s:10109  .bss.buf_rx.8475:00000000 $d
     /tmp/ccpmJ073.s:10113  .bss.buf_rx.8475:00000000 buf_rx.8475
     /tmp/ccpmJ073.s:10116  .bss.buf_tx.8499:00000000 $d
     /tmp/ccpmJ073.s:10120  .bss.buf_tx.8499:00000000 buf_tx.8499
     /tmp/ccpmJ073.s:10123  .bss.buffer.8851:00000000 $d
     /tmp/ccpmJ073.s:10129  .bss.cap.8272:00000000 $d
     /tmp/ccpmJ073.s:10133  .bss.cap.8272:00000000 cap.8272
     /tmp/ccpmJ073.s:10139  .bss.cnt.8277:00000000 cnt.8277
     /tmp/ccpmJ073.s:10140  .bss.cnt.8277:00000000 $d
     /tmp/ccpmJ073.s:10142  .bss.cur.8268:00000000 $d
     /tmp/ccpmJ073.s:10146  .bss.cur.8268:00000000 cur.8268
     /tmp/ccpmJ073.s:10149  .bss.datetime.8674:00000000 $d
     /tmp/ccpmJ073.s:10153  .bss.datetime.8674:00000000 datetime.8674
     /tmp/ccpmJ073.s:10159  .bss.dinit.8852:00000000 dinit.8852
     /tmp/ccpmJ073.s:10160  .bss.dinit.8852:00000000 $d
     /tmp/ccpmJ073.s:10162  .bss.dma_buf:00000000 $d
     /tmp/ccpmJ073.s:10166  .bss.dma_buf:00000000 dma_buf
     /tmp/ccpmJ073.s:10169  .bss.dma_buf.8762:00000000 $d
     /tmp/ccpmJ073.s:10173  .bss.dma_buf.8762:00000000 dma_buf.8762
     /tmp/ccpmJ073.s:10176  .bss.pow.8273:00000000 $d
     /tmp/ccpmJ073.s:10180  .bss.pow.8273:00000000 pow.8273
ARM GAS  /tmp/ccpmJ073.s 			page 202


     /tmp/ccpmJ073.s:10183  .bss.str_num.8500:00000000 $d
     /tmp/ccpmJ073.s:10187  .bss.str_num.8500:00000000 str_num.8500
     /tmp/ccpmJ073.s:10190  .bss.vacu.8270:00000000 $d
     /tmp/ccpmJ073.s:10194  .bss.vacu.8270:00000000 vacu.8270
     /tmp/ccpmJ073.s:10197  .bss.val.8747:00000000 $d
     /tmp/ccpmJ073.s:10201  .bss.val.8747:00000000 val.8747
     /tmp/ccpmJ073.s:10204  .bss.vbus.8269:00000000 $d
     /tmp/ccpmJ073.s:10208  .bss.vbus.8269:00000000 vbus.8269
     /tmp/ccpmJ073.s:10211  .bss.yb.8743:00000000 $d
     /tmp/ccpmJ073.s:10215  .bss.yb.8743:00000000 yb.8743
     /tmp/ccpmJ073.s:10218  .bss.yn.8744:00000000 $d
     /tmp/ccpmJ073.s:10222  .bss.yn.8744:00000000 yn.8744
     /tmp/ccpmJ073.s:10225  .data.p_TSpm:00000000 $d
     /tmp/ccpmJ073.s:10231  .data.tbuf.8749:00000000 $d
     /tmp/ccpmJ073.s:10235  .data.tbuf.8749:00000000 tbuf.8749
     /tmp/ccpmJ073.s:10238  .rodata.BMP280_i2c.str1.4:00000000 $d
     /tmp/ccpmJ073.s:10255  .rodata.BMP280_spi.str1.4:00000000 $d
     /tmp/ccpmJ073.s:10259  .rodata.Intro2.str1.4:00000000 $d
     /tmp/ccpmJ073.s:10271  .rodata.LoRaRX.str1.4:00000000 $d
     /tmp/ccpmJ073.s:10275  .rodata.LoRaRX1.str1.4:00000000 $d
     /tmp/ccpmJ073.s:10313  .rodata.MAX44009_i2c.str1.4:00000000 $d
     /tmp/ccpmJ073.s:10317  .rodata.MemCard_Menu.str1.4:00000000 $d
     /tmp/ccpmJ073.s:10441  .rodata.Menu1.str1.4:00000000 $d
     /tmp/ccpmJ073.s:10457  .rodata.SPI_Tool.str1.4:00000000 $d
     /tmp/ccpmJ073.s:10475  .rodata.SPI_Tool_Menu.str1.4:00000000 $d
     /tmp/ccpmJ073.s:10491  .rodata.SetDate.str1.4:00000000 $d
     /tmp/ccpmJ073.s:10512  .rodata.TSL2561_i2c.str1.4:00000000 $d
     /tmp/ccpmJ073.s:10516  .rodata.Zegarek.str1.4:00000000 $d
     /tmp/ccpmJ073.s:10523  .rodata._ytab:00000000 $d
     /tmp/ccpmJ073.s:10553  .rodata.fun_tool.str1.4:00000000 $d
     /tmp/ccpmJ073.s:10604  .rodata.head.str1.4:00000000 $d
     /tmp/ccpmJ073.s:10611  .rodata.ili9486.str1.4:00000000 $d
     /tmp/ccpmJ073.s:10632  .rodata.jdrs.9062:00000000 $d
     /tmp/ccpmJ073.s:10642  .rodata.lexmark_lcd.str1.4:00000000 $d
     /tmp/ccpmJ073.s:10655  .rodata.lion_updown.str1.4:00000000 $d
     /tmp/ccpmJ073.s:10670  .rodata.liontrend.str1.4:00000000 $d
     /tmp/ccpmJ073.s:10677  .rodata.minios.str1.4:00000000 $d
     /tmp/ccpmJ073.s:10711  .rodata.qtouch.str1.4:00000000 $d
     /tmp/ccpmJ073.s:10715  .rodata.ws2812led.str1.4:00000000 $d

UNDEFINED SYMBOLS
tr_pen_color
UaPutK
uint2uart
UaPutS
uint2str
i2c1r_init
i2c1_write
i2c1_read
tr_locate
unt2uart
UART_getChar
int2uart
UART_getNum
UART1_putc
UART2_putc
p_Fifo1
ARM GAS  /tmp/ccpmJ073.s 			page 203


sint2uart
BkpRegInit
int2uarz
UaPutC
RtcInit
i2c1_init
ssd1306_init
num2uart
int2str
oled_str16
oled_refresh_gram
oled_hw
oled_num24
UART_getHex
hex2uart
SPI1_init_
DHT_Init
DHT_read
I2C2_init
i2c2_scan
SX1278_begin
SX1278_LoRaEntryRx
SX1278_LoRaRx
SX1278_SPIRead
SX1278_LoRaRxPacket
SX1278_read
unt2str
strlen
stpcpy
SX1278_LoRaEntryTx
SX1278_LoRaTxPacketStart
SX1278_sleep
UC1608_Init
UC1608_Clr
UC1608_str
UC1608_Refresh
i2c2_write
i2c2_read
spi1_rw
mmc_read_sect
crc16_spi2
EraseFlashPage
TFT_Clear
rtc_SetTime
SPI2_init
spi2_rw
TFT_Init
crc16_spi2_init
CardType
mmc_init
mmc_read_config
mmc_write_sect
TFT_dy
rtc_GetTime
TFT_Fill
TFT_txt
TFT_SetWindow
ARM GAS  /tmp/ccpmJ073.s 			page 204


ColCon
str2int
