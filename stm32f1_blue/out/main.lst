ARM GAS  /tmp/ccDfNsWv.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   3              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   4              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   5              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   6              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   7              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
   8              		.eabi_attribute 30, 2	@ Tag_ABI_optimization_goals
   9              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  10              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  11              		.file	"main.c"
  12              	@ GNU C99 (15:7-2018-q2-6) version 7.3.1 20180622 (release) [ARM/embedded-7-branch revision 261907]
  13              	@	compiled by GNU C version 8.2.0, GMP version 6.1.2, MPFR version 4.0.2, MPC version 1.1.0, isl ve
  14              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  15              	@ options passed:  -I . -imultilib thumb/v7-m -MD out/main.d -MF out/main.d
  16              	@ -MP -MQ out/main.o -D__USES_INITFINI__ -D RAMCODE -D STM32F10X_HD main.c
  17              	@ -mcpu=cortex-m3 -mthumb -auxbase-strip out/main.o -O2 -Wall
  18              	@ -Wstrict-prototypes -Wextra -Wno-uninitialized
  19              	@ -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable
  20              	@ -std=gnu99 -ffunction-sections -fdata-sections -fverbose-asm
  21              	@ options enabled:  -faggressive-loop-optimizations -falign-jumps
  22              	@ -falign-labels -falign-loops -fauto-inc-dec -fbranch-count-reg
  23              	@ -fcaller-saves -fchkp-check-incomplete-type -fchkp-check-read
  24              	@ -fchkp-check-write -fchkp-instrument-calls -fchkp-narrow-bounds
  25              	@ -fchkp-optimize -fchkp-store-bounds -fchkp-use-static-bounds
  26              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcode-hoisting
  27              	@ -fcombine-stack-adjustments -fcommon -fcompare-elim -fcprop-registers
  28              	@ -fcrossjumping -fcse-follow-jumps -fdata-sections -fdefer-pop
  29              	@ -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
  30              	@ -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-types
  31              	@ -fexpensive-optimizations -fforward-propagate -ffp-int-builtin-inexact
  32              	@ -ffunction-cse -ffunction-sections -fgcse -fgcse-lm -fgnu-runtime
  33              	@ -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  34              	@ -fif-conversion -fif-conversion2 -findirect-inlining -finline
  35              	@ -finline-atomics -finline-functions-called-once -finline-small-functions
  36              	@ -fipa-bit-cp -fipa-cp -fipa-icf -fipa-icf-functions -fipa-icf-variables
  37              	@ -fipa-profile -fipa-pure-const -fipa-ra -fipa-reference -fipa-sra
  38              	@ -fipa-vrp -fira-hoist-pressure -fira-share-save-slots
  39              	@ -fira-share-spill-slots -fisolate-erroneous-paths-dereference -fivopts
  40              	@ -fkeep-static-consts -fleading-underscore -flifetime-dse -flra-remat
  41              	@ -flto-odr-type-merging -fmath-errno -fmerge-constants
  42              	@ -fmerge-debug-strings -fmove-loop-invariants -fomit-frame-pointer
  43              	@ -foptimize-sibling-calls -foptimize-strlen -fpartial-inlining -fpeephole
  44              	@ -fpeephole2 -fplt -fprefetch-loop-arrays -freg-struct-return
  45              	@ -freorder-blocks -freorder-functions -frerun-cse-after-loop
  46              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  47              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  48              	@ -fsched-pressure -fsched-rank-heuristic -fsched-spec
  49              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-insns
  50              	@ -fschedule-insns2 -fsection-anchors -fsemantic-interposition
  51              	@ -fshow-column -fshrink-wrap -fshrink-wrap-separate -fsigned-zeros
  52              	@ -fsplit-ivs-in-unroller -fsplit-wide-types -fssa-backprop -fssa-phiopt
  53              	@ -fstdarg-opt -fstore-merging -fstrict-aliasing -fstrict-overflow
  54              	@ -fstrict-volatile-bitfields -fsync-libcalls -fthread-jumps
  55              	@ -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce
  56              	@ -ftree-ccp -ftree-ch -ftree-coalesce-vars -ftree-copy-prop -ftree-cselim
  57              	@ -ftree-dce -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
ARM GAS  /tmp/ccDfNsWv.s 			page 2


  58              	@ -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  59              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pre
  60              	@ -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slsr
  61              	@ -ftree-sra -ftree-switch-conversion -ftree-tail-merge -ftree-ter
  62              	@ -ftree-vrp -funit-at-a-time -fverbose-asm -fzero-initialized-in-bss
  63              	@ -masm-syntax-unified -mfix-cortex-m3-ldrd -mlittle-endian
  64              	@ -mpic-data-is-text-relative -msched-prolog -mthumb -munaligned-access
  65              	@ -mvectorize-with-neon-quad
  66              	
  67              		.text
  68              		.section	.text.gmtime_r.isra.0.constprop.2,"ax",%progbits
  69              		.align	1
  70              		.p2align 2,,3
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu softvfp
  75              		.type	gmtime_r.isra.0.constprop.2, %function
  76              	gmtime_r.isra.0.constprop.2:
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}	@
  80              	@ main.c:5601: 	tmbuf->tm_min = (dayclock % 3600) / 60;
  81 0004 4FF46164 		mov	r4, #3600	@ tmp221,
  82              	@ main.c:5597: 	dayclock = (u32) time % SECS_DAY;
  83 0008 524B     		ldr	r3, .L35	@ tmp191,
  84 000a 534A     		ldr	r2, .L35+4	@ tmp193,
  85 000c A3FB0013 		umull	r1, r3, r3, r0	@ tmp372, tmp190, tmp191, ISRA.271
  86 0010 190C     		lsrs	r1, r3, #16	@ dayclock, tmp190,
  87 0012 02FB1101 		mls	r1, r2, r1, r0	@ dayclock, tmp193, dayclock, ISRA.271
  88              	@ main.c:5601: 	tmbuf->tm_min = (dayclock % 3600) / 60;
  89 0016 514A     		ldr	r2, .L35+8	@ tmp219,
  90              	@ main.c:5598: 	dayno = (u32) time / SECS_DAY;
  91 0018 1B0C     		lsrs	r3, r3, #16	@ dayno, tmp190,
  92              	@ main.c:5601: 	tmbuf->tm_min = (dayclock % 3600) / 60;
  93 001a A2FB012E 		umull	r2, lr, r2, r1	@ tmp373, tmp218, tmp219, dayclock
  94              	@ main.c:5603: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
  95 001e 504A     		ldr	r2, .L35+12	@ tmp252,
  96 0020 1D1D     		adds	r5, r3, #4	@ tmp250, dayno,
  97              	@ main.c:5601: 	tmbuf->tm_min = (dayclock % 3600) / 60;
  98 0022 4FEADE2E 		lsr	lr, lr, #11	@ tmp217, tmp218,
  99              	@ main.c:5603: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 100 0026 A2FB0502 		umull	r0, r2, r2, r5	@ tmp374, tmp251, tmp252, tmp250
 101              	@ main.c:5600: 	tmbuf->tm_sec = dayclock % 60;
 102 002a 4E4E     		ldr	r6, .L35+16	@ tmp198,
 103              	@ main.c:5601: 	tmbuf->tm_min = (dayclock % 3600) / 60;
 104 002c 04FB1E10 		mls	r0, r4, lr, r1	@ tmp222, tmp221, tmp217, dayclock
 105              	@ main.c:5600: 	tmbuf->tm_sec = dayclock % 60;
 106 0030 A6FB0174 		umull	r7, r4, r6, r1	@ tmp375, tmp197, tmp198, dayclock
 107              	@ main.c:5603: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 108 0034 AF1A     		subs	r7, r5, r2	@ tmp253, tmp250, tmp251
 109              	@ main.c:5601: 	tmbuf->tm_min = (dayclock % 3600) / 60;
 110 0036 A6FB0060 		umull	r6, r0, r6, r0	@ tmp376, tmp232, tmp198, tmp222
 111              	@ main.c:5603: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 112 003a 02EB5702 		add	r2, r2, r7, lsr #1	@ tmp255, tmp251, tmp253,
 113 003e 9208     		lsrs	r2, r2, #2	@ tmp256, tmp255,
 114              	@ main.c:5600: 	tmbuf->tm_sec = dayclock % 60;
ARM GAS  /tmp/ccDfNsWv.s 			page 3


 115 0040 6409     		lsrs	r4, r4, #5	@ tmp199, tmp197,
 116 0042 DFF82CC1 		ldr	ip, .L35+28	@ tmp364,
 117              	@ main.c:5603: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 118 0046 C2EBC202 		rsb	r2, r2, r2, lsl #3	@ tmp259, tmp256, tmp256,
 119              	@ main.c:5600: 	tmbuf->tm_sec = dayclock % 60;
 120 004a C4EB0414 		rsb	r4, r4, r4, lsl #4	@ tmp202, tmp199, tmp199,
 121              	@ main.c:5603: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 122 004e AA1A     		subs	r2, r5, r2	@ tmp260, tmp250, tmp259
 123              	@ main.c:5601: 	tmbuf->tm_min = (dayclock % 3600) / 60;
 124 0050 4009     		lsrs	r0, r0, #5	@ tmp234, tmp232,
 125              	@ main.c:5600: 	tmbuf->tm_sec = dayclock % 60;
 126 0052 A1EB8401 		sub	r1, r1, r4, lsl #2	@ tmp204, dayclock, tmp202,
 127              	@ main.c:5603: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 128 0056 CCF81820 		str	r2, [ip, #24]	@ tmp260, ptm.tm_wday
 129              	@ main.c:5601: 	tmbuf->tm_min = (dayclock % 3600) / 60;
 130 005a CCE90010 		strd	r1, r0, [ip]	@ tmp204, tmp234, tmp364
 131              	@ main.c:5595: 	int year = EPOCH_YR;
 132 005e 40F2B272 		movw	r2, #1970	@ year,
 133              	@ main.c:5606: 		dayno -= YEARSIZE(year);
 134 0062 40F26D18 		movw	r8, #365	@ iftmp.249_20,
 135              	@ main.c:5604: 	while (dayno >= (u32) YEARSIZE(year))
 136 0066 404D     		ldr	r5, .L35+20	@ tmp368,
 137 0068 6420     		movs	r0, #100	@ tmp369,
 138 006a 4FF4C877 		mov	r7, #400	@ tmp371,
 139 006e 10E0     		b	.L2	@
 140              	.L31:
 141 0070 A5FB0241 		umull	r4, r1, r5, r2	@ tmp377, tmp285, tmp368, year
 142 0074 4C09     		lsrs	r4, r1, #5	@ _24, tmp285,
 143 0076 00FB1424 		mls	r4, r0, r4, r2	@ _24, tmp369, _24, year
 144 007a 9CB9     		cbnz	r4, .L5	@ _24,
 145 007c C909     		lsrs	r1, r1, #7	@ tmp365, tmp285,
 146 007e 07FB1121 		mls	r1, r7, r1, r2	@ _125, tmp371, tmp365, year
 147 0082 D9B9     		cbnz	r1, .L29	@ _125,
 148 0084 B3F5B77F 		cmp	r3, #366	@ dayno,
 149 0088 61D3     		bcc	.L30	@,
 150              	.L23:
 151              	@ main.c:5606: 		dayno -= YEARSIZE(year);
 152 008a 4FF4B771 		mov	r1, #366	@ iftmp.249_20,
 153              	.L3:
 154 008e 5B1A     		subs	r3, r3, r1	@ dayno, dayno, iftmp.249_20
 155              	@ main.c:5607: 		year++;
 156 0090 0132     		adds	r2, r2, #1	@ year, year,
 157              	.L2:
 158              	@ main.c:5604: 	while (dayno >= (u32) YEARSIZE(year))
 159 0092 12F00306 		ands	r6, r2, #3	@ _15, year,
 160 0096 EBD0     		beq	.L31	@,
 161 0098 B3F5B67F 		cmp	r3, #364	@ dayno,
 162 009c 13D9     		bls	.L32	@,
 163              	@ main.c:5606: 		dayno -= YEARSIZE(year);
 164 009e 40F26D11 		movw	r1, #365	@ iftmp.249_20,
 165 00a2 F4E7     		b	.L3	@
 166              	.L5:
 167              	@ main.c:5604: 	while (dayno >= (u32) YEARSIZE(year))
 168 00a4 B3F5B77F 		cmp	r3, #366	@ dayno,
 169 00a8 EFD2     		bcs	.L23	@,
 170              	.L17:
 171 00aa 4FF4C870 		mov	r0, #400	@ tmp355,
ARM GAS  /tmp/ccDfNsWv.s 			page 4


 172 00ae 2E49     		ldr	r1, .L35+20	@ tmp353,
 173 00b0 A1FB0251 		umull	r5, r1, r1, r2	@ tmp379, tmp352, tmp353, year
 174 00b4 C909     		lsrs	r1, r1, #7	@ _125, tmp352,
 175 00b6 00FB1121 		mls	r1, r0, r1, r2	@ _125, tmp355, _125, year
 176 00ba 10E0     		b	.L14	@
 177              	.L29:
 178 00bc B3F5B67F 		cmp	r3, #364	@ dayno,
 179 00c0 F3D9     		bls	.L17	@,
 180              	@ main.c:5606: 		dayno -= YEARSIZE(year);
 181 00c2 4146     		mov	r1, r8	@ iftmp.249_20, iftmp.249_20
 182 00c4 E3E7     		b	.L3	@
 183              	.L32:
 184 00c6 6425     		movs	r5, #100	@ tmp335,
 185 00c8 4FF4C870 		mov	r0, #400	@ tmp345,
 186 00cc 2649     		ldr	r1, .L35+20	@ tmp333,
 187 00ce A1FB0241 		umull	r4, r1, r1, r2	@ tmp378, tmp332, tmp333, year
 188 00d2 4C09     		lsrs	r4, r1, #5	@ _24, tmp332,
 189 00d4 C909     		lsrs	r1, r1, #7	@ _125, tmp332,
 190 00d6 05FB1424 		mls	r4, r5, r4, r2	@ _24, tmp335, _24, year
 191 00da 00FB1121 		mls	r1, r0, r1, r2	@ _125, tmp345, _125, year
 192              	.L14:
 193              	@ main.c:5610: 	tmbuf->tm_yday = dayno;
 194 00de CCF81C30 		str	r3, [ip, #28]	@ dayno, ptm.tm_yday
 195 00e2 2248     		ldr	r0, .L35+24	@ ivtmp.377,
 196 00e4 002C     		cmp	r4, #0	@ _24,
 197 00e6 14BF     		ite	ne	@
 198 00e8 4FF03008 		movne	r8, #48	@, tmp315,
 199 00ec 4FF00008 		moveq	r8, #0	@, tmp315,
 200 00f0 0029     		cmp	r1, #0	@ _125,
 201 00f2 0CBF     		ite	eq	@
 202 00f4 4FF03009 		moveq	r9, #48	@, tmp321,
 203 00f8 4FF00009 		movne	r9, #0	@, tmp321,
 204              	@ main.c:5614: 		dayno -= _ytab[LEAPYEAR(year)][tmbuf->tm_mon];
 205 00fc 0025     		movs	r5, #0	@ ivtmp.375,
 206              	@ main.c:5612: 	while (dayno >= (u32) _ytab[LEAPYEAR(year)][tmbuf->tm_mon])
 207 00fe 5EB9     		cbnz	r6, .L10	@ _15,
 208              	.L34:
 209 0100 D4B9     		cbnz	r4, .L11	@ _24,
 210 0102 F9B9     		cbnz	r1, .L33	@ _125,
 211 0104 076B     		ldr	r7, [r0, #48]	@ MEM[base: _42, offset: 48B], MEM[base: _42, offset: 48B]
 212 0106 BB42     		cmp	r3, r7	@ dayno, MEM[base: _42, offset: 48B]
 213 0108 09D3     		bcc	.L16	@,
 214              	.L15:
 215 010a 50F80970 		ldr	r7, [r0, r9]	@ _73, MEM[base: _120, index: _18, offset: 0B]
 216              	.L9:
 217              	@ main.c:5614: 		dayno -= _ytab[LEAPYEAR(year)][tmbuf->tm_mon];
 218 010e DB1B     		subs	r3, r3, r7	@ dayno, dayno, _73
 219 0110 0135     		adds	r5, r5, #1	@ ivtmp.375, ivtmp.375,
 220 0112 0430     		adds	r0, r0, #4	@ ivtmp.377, ivtmp.377,
 221              	@ main.c:5612: 	while (dayno >= (u32) _ytab[LEAPYEAR(year)][tmbuf->tm_mon])
 222 0114 002E     		cmp	r6, #0	@ _15
 223 0116 F3D0     		beq	.L34	@
 224              	.L10:
 225 0118 0768     		ldr	r7, [r0]	@ _73, MEM[base: _121, offset: 0B]
 226 011a BB42     		cmp	r3, r7	@ dayno, _73
 227 011c F7D2     		bcs	.L9	@,
 228              	.L16:
ARM GAS  /tmp/ccDfNsWv.s 			page 5


 229              	@ main.c:5618: 	tmbuf->tm_isdst = 1;
 230 011e 0121     		movs	r1, #1	@ tmp325,
 231              	@ main.c:5617: 	tmbuf->tm_mday = dayno + 1;
 232 0120 0B44     		add	r3, r3, r1	@ tmp323,
 233              	@ main.c:5619: 	tmbuf->tm_hour += TIMEZONE - tmbuf->tm_isdst;
 234 0122 0EEB0100 		add	r0, lr, r1	@ tmp327, tmp217,
 235              	@ main.c:5621: 	tmbuf->tm_mon  += 1;
 236 0126 0D44     		add	r5, r5, r1	@ tmp330,
 237              	@ main.c:5619: 	tmbuf->tm_hour += TIMEZONE - tmbuf->tm_isdst;
 238 0128 CCE90203 		strd	r0, r3, [ip, #8]	@ tmp327, tmp323, tmp364,
 239              	@ main.c:5620: 	tmbuf->tm_year += YEAR0;
 240 012c CCE90452 		strd	r5, r2, [ip, #16]	@ tmp330, year, tmp364,
 241              	@ main.c:5618: 	tmbuf->tm_isdst = 1;
 242 0130 CCF82010 		str	r1, [ip, #32]	@ tmp325, ptm.tm_isdst
 243              	@ main.c:5623: }
 244 0134 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}	@
 245              	.L11:
 246              	@ main.c:5612: 	while (dayno >= (u32) _ytab[LEAPYEAR(year)][tmbuf->tm_mon])
 247 0138 50F80870 		ldr	r7, [r0, r8]	@ MEM[base: _88, index: _74, offset: 0B], MEM[base: _88, index: _74, offset: 0B]
 248 013c BB42     		cmp	r3, r7	@ dayno, MEM[base: _88, index: _74, offset: 0B]
 249 013e EED3     		bcc	.L16	@,
 250 0140 076B     		ldr	r7, [r0, #48]	@ _73, MEM[base: _88, offset: 48B]
 251 0142 E4E7     		b	.L9	@
 252              	.L33:
 253 0144 50F80870 		ldr	r7, [r0, r8]	@ MEM[base: _32, index: _74, offset: 0B], MEM[base: _32, index: _74, offset: 0B]
 254 0148 BB42     		cmp	r3, r7	@ dayno, MEM[base: _32, index: _74, offset: 0B]
 255 014a DED2     		bcs	.L15	@,
 256 014c E7E7     		b	.L16	@
 257              	.L30:
 258              	@ main.c:5604: 	while (dayno >= (u32) YEARSIZE(year))
 259 014e 0C46     		mov	r4, r1	@ _24, _125
 260 0150 C5E7     		b	.L14	@
 261              	.L36:
 262 0152 00BF     		.align	2
 263              	.L35:
 264 0154 07452EC2 		.word	-1037155065
 265 0158 80510100 		.word	86400
 266 015c C5B3A291 		.word	-1851608123
 267 0160 25499224 		.word	613566757
 268 0164 89888888 		.word	-2004318071
 269 0168 1F85EB51 		.word	1374389535
 270 016c 00000000 		.word	.LANCHOR0
 271 0170 00000000 		.word	ptm
 272              		.size	gmtime_r.isra.0.constprop.2, .-gmtime_r.isra.0.constprop.2
 273              		.section	.text.head,"ax",%progbits
 274              		.align	1
 275              		.p2align 2,,3
 276              		.global	head
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 280              		.fpu softvfp
 281              		.type	head, %function
 282              	head:
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285 0000 08B5     		push	{r3, lr}	@
ARM GAS  /tmp/ccDfNsWv.s 			page 6


 286              	@ main.c:217: 		tr_pen_color( TGREEN );
 287 0002 0220     		movs	r0, #2	@,
 288 0004 FFF7FEFF 		bl	tr_pen_color	@
 289              	@ main.c:219: 		UaPutK("\f\r\n Mini STM32F103C8T6 RAM   "); // Boot from RAM 	 = B0+ B1+
 290 0008 0648     		ldr	r0, .L39	@,
 291 000a FFF7FEFF 		bl	UaPutK	@
 292              	@ main.c:223: 		uint2uart(F_CPU/1e6);	UaPutK(" MHz");
 293 000e 4820     		movs	r0, #72	@,
 294 0010 FFF7FEFF 		bl	uint2uart	@
 295 0014 0448     		ldr	r0, .L39+4	@,
 296 0016 FFF7FEFF 		bl	UaPutK	@
 297              	@ main.c:225: 	}
 298 001a BDE80840 		pop	{r3, lr}	@
 299              	@ main.c:224: 		tr_pen_color( TYELLOW );
 300 001e 0320     		movs	r0, #3	@,
 301 0020 FFF7FEBF 		b	tr_pen_color	@
 302              	.L40:
 303              		.align	2
 304              	.L39:
 305 0024 00000000 		.word	.LC8
 306 0028 20000000 		.word	.LC9
 307              		.size	head, .-head
 308              		.section	.text.minios,"ax",%progbits
 309              		.align	1
 310              		.p2align 2,,3
 311              		.global	minios
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu softvfp
 316              		.type	minios, %function
 317              	minios:
 318              		@ args = 0, pretend = 0, frame = 32
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320              	@ main.c:5356: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 321 0000 42F22C00 		movw	r0, #8236	@ tmp191,
 322              	@ main.c:246: void minios(void){
 323 0004 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 324              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 325 0008 4FF0200C 		mov	ip, #32	@ tmp199,
 326              	@ main.c:5357: 	USART1->BRR = (F_CPU+UART1_SPEED/2)/UART1_SPEED;
 327 000c 40F2712E 		movw	lr, #625	@ tmp197,
 328              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 329 0010 4022     		movs	r2, #64	@ tmp217,
 330              	@ main.c:5364: 	USART2->BRR = ((F_CPU+UART2_SPEED/2)/UART2_SPEED)/2;
 331 0012 4FF49C71 		mov	r1, #312	@ tmp215,
 332              	@ main.c:253: 		GPIOB->CRL = (GPIOB->CRL & 0x0fffffff) | 0x10000000;	// PB7
 333 0016 984C     		ldr	r4, .L53	@ tmp179,
 334              	@ main.c:5354: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 335 0018 984E     		ldr	r6, .L53+4	@ tmp182,
 336              	@ main.c:253: 		GPIOB->CRL = (GPIOB->CRL & 0x0fffffff) | 0x10000000;	// PB7
 337 001a 2368     		ldr	r3, [r4]	@ _1, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 338              	@ main.c:5355: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 339 001c 984D     		ldr	r5, .L53+8	@ tmp184,
 340              	@ main.c:253: 		GPIOB->CRL = (GPIOB->CRL & 0x0fffffff) | 0x10000000;	// PB7
 341 001e 23F07043 		bic	r3, r3, #-268435456	@ tmp180, _1,
 342 0022 43F08053 		orr	r3, r3, #268435456	@ _3, tmp180,
ARM GAS  /tmp/ccDfNsWv.s 			page 7


 343 0026 2360     		str	r3, [r4]	@ _3, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 344              	@ main.c:5354: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 345 0028 B369     		ldr	r3, [r6, #24]	@ _129, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 346              	@ main.c:5356: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 347 002a 04F53054 		add	r4, r4, #11264	@ tmp187, tmp187,
 348              	@ main.c:5354: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 349 002e 43F48043 		orr	r3, r3, #16384	@ _130, _129,
 350 0032 B361     		str	r3, [r6, #24]	@ _130, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 351              	@ main.c:5355: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 352 0034 6B68     		ldr	r3, [r5, #4]	@ _131, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 353              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 354 0036 934F     		ldr	r7, .L53+12	@ tmp198,
 355              	@ main.c:5355: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 356 0038 23F47F63 		bic	r3, r3, #4080	@ tmp185, _131,
 357 003c 43F49263 		orr	r3, r3, #1168	@ _133, tmp185,
 358 0040 6B60     		str	r3, [r5, #4]	@ _133, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 359              	@ main.c:5356: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 360 0042 A389     		ldrh	r3, [r4, #12]	@, MEM[(struct USART_TypeDef *)1073821696B].CR1
 361              	@ main.c:246: void minios(void){
 362 0044 89B0     		sub	sp, sp, #36	@,,
 363              	@ main.c:5356: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 364 0046 0343     		orrs	r3, r3, r0	@, _135, MEM[(struct USART_TypeDef *)1073821696B].CR1, tmp191
 365 0048 A381     		strh	r3, [r4, #12]	@ movhi	@ _135, MEM[(struct USART_TypeDef *)1073821696B].CR1
 366              	@ main.c:5357: 	USART1->BRR = (F_CPU+UART1_SPEED/2)/UART1_SPEED;
 367 004a A4F808E0 		strh	lr, [r4, #8]	@ movhi	@ tmp197, MEM[(struct USART_TypeDef *)1073821696B].BRR
 368              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 369 004e C7F804C0 		str	ip, [r7, #4]	@ tmp199, MEM[(struct NVIC_Type *)3758153984B].ISER
 370              	@ main.c:5361: 	RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 371 0052 F369     		ldr	r3, [r6, #28]	@ _122, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 372              	@ main.c:5363: 	USART2->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 373 0054 DFF878C2 		ldr	ip, .L53+88	@ tmp205,
 374              	@ main.c:5361: 	RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 375 0058 43F40033 		orr	r3, r3, #131072	@ _123, _122,
 376 005c F361     		str	r3, [r6, #28]	@ _123, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 377              	@ main.c:5362: 	GPIOA->CRL = (GPIOA->CRL & 0xffff00ff) | 0x00004900; // PA2=TX, PA3=RX 
 378 005e 2B68     		ldr	r3, [r5]	@ _124, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 379              	@ main.c:257: 			PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 380 0060 894E     		ldr	r6, .L53+16	@ tmp314,
 381              	@ main.c:5362: 	GPIOA->CRL = (GPIOA->CRL & 0xffff00ff) | 0x00004900; // PA2=TX, PA3=RX 
 382 0062 23F47F43 		bic	r3, r3, #65280	@ tmp203, _124,
 383 0066 43F49243 		orr	r3, r3, #18688	@ _126, tmp203,
 384 006a 2B60     		str	r3, [r5]	@ _126, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 385              	@ main.c:5363: 	USART2->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 386 006c BCF80C30 		ldrh	r3, [ip, #12]	@, MEM[(struct USART_TypeDef *)1073759232B].CR1
 387              	@ main.c:258: 			UaPutS("\f UART1 "); UaPutS (uint2str( (F_CPU/1)/(1*USART1->BRR-1),buf));	
 388 0070 864D     		ldr	r5, .L53+20	@ tmp228,
 389              	@ main.c:5363: 	USART2->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 390 0072 1843     		orrs	r0, r0, r3	@, _128, tmp191, MEM[(struct USART_TypeDef *)1073759232B].CR1
 391              	@ main.c:257: 			PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 392 0074 864B     		ldr	r3, .L53+24	@ tmp315,
 393              	@ main.c:5363: 	USART2->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 394 0076 ACF80C00 		strh	r0, [ip, #12]	@ movhi	@ _128, MEM[(struct USART_TypeDef *)1073759232B].CR1
 395              	@ main.c:5364: 	USART2->BRR = ((F_CPU+UART2_SPEED/2)/UART2_SPEED)/2;
 396 007a ACF80810 		strh	r1, [ip, #8]	@ movhi	@ tmp215, MEM[(struct USART_TypeDef *)1073759232B].BRR
 397              	@ main.c:257: 			PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 398 007e 0320     		movs	r0, #3	@,
 399              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
ARM GAS  /tmp/ccDfNsWv.s 			page 8


 400 0080 7A60     		str	r2, [r7, #4]	@ tmp217, MEM[(struct NVIC_Type *)3758153984B].ISER
 401              	@ main.c:257: 			PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 402 0082 3360     		str	r3, [r6]	@ tmp315, PutChar
 403 0084 FFF7FEFF 		bl	tr_pen_color	@
 404              	@ main.c:258: 			UaPutS("\f UART1 "); UaPutS (uint2str( (F_CPU/1)/(1*USART1->BRR-1),buf));	
 405 0088 8248     		ldr	r0, .L53+28	@,
 406 008a FFF7FEFF 		bl	UaPutS	@
 407 008e 2089     		ldrh	r0, [r4, #8]	@, MEM[(struct USART_TypeDef *)1073821696B].BRR
 408 0090 05A9     		add	r1, sp, #20	@ tmp316,,
 409 0092 0138     		subs	r0, r0, #1	@ tmp225, MEM[(struct USART_TypeDef *)1073821696B].BRR,
 410 0094 B5FBF0F0 		udiv	r0, r5, r0	@, tmp228, tmp225
 411 0098 FFF7FEFF 		bl	uint2str	@
 412 009c FFF7FEFF 		bl	UaPutS	@
 413              	@ main.c:259: 			UaPutS (" b/s \r\n");
 414 00a0 7D48     		ldr	r0, .L53+32	@,
 415 00a2 FFF7FEFF 		bl	UaPutS	@
 416              	@ main.c:261: 			PutChar = UART2_putc;	tr_pen_color ( TYELLOW );
 417 00a6 7D4B     		ldr	r3, .L53+36	@ tmp318,
 418 00a8 0320     		movs	r0, #3	@,
 419 00aa 3360     		str	r3, [r6]	@ tmp318, PutChar
 420 00ac FFF7FEFF 		bl	tr_pen_color	@
 421              	@ main.c:262: 			UaPutS("\f UART2 "); UaPutS (uint2str( (F_CPU/1)/(1*USART1->BRR-1),buf));	
 422 00b0 7B48     		ldr	r0, .L53+40	@,
 423 00b2 FFF7FEFF 		bl	UaPutS	@
 424 00b6 2089     		ldrh	r0, [r4, #8]	@, MEM[(struct USART_TypeDef *)1073821696B].BRR
 425 00b8 05A9     		add	r1, sp, #20	@ tmp319,,
 426 00ba 0138     		subs	r0, r0, #1	@ tmp237, MEM[(struct USART_TypeDef *)1073821696B].BRR,
 427 00bc B5FBF0F0 		udiv	r0, r5, r0	@, tmp228, tmp237
 428 00c0 FFF7FEFF 		bl	uint2str	@
 429 00c4 FFF7FEFF 		bl	UaPutS	@
 430              	@ main.c:263: 			UaPutS(" b/s \r\n");
 431 00c8 7348     		ldr	r0, .L53+32	@,
 432 00ca FFF7FEFF 		bl	UaPutS	@
 433              	@ main.c:271: 			i2weg[0]=0;     // Register
 434 00ce 4FF4F854 		mov	r4, #7936	@ tmp243,
 435              	@ main.c:270: 			i2c1r_init();
 436 00d2 FFF7FEFF 		bl	i2c1r_init	@
 437              	@ main.c:272: 			i2weg[1]=0x1f;  // MSB Data
 438 00d6 7723     		movs	r3, #119	@ tmp244,
 439              	@ main.c:274: 			i2c1_write(INA219_ADDR,i2weg,3);
 440 00d8 04A9     		add	r1, sp, #16	@ tmp320,,
 441 00da 0322     		movs	r2, #3	@,
 442 00dc 8020     		movs	r0, #128	@,
 443              	@ main.c:271: 			i2weg[0]=0;     // Register
 444 00de ADF81040 		strh	r4, [sp, #16]	@ movhi	@ tmp243, MEM[(u08[3] *)&i2weg]
 445              	@ main.c:272: 			i2weg[1]=0x1f;  // MSB Data
 446 00e2 8DF81230 		strb	r3, [sp, #18]	@ tmp244, MEM[(u08[3] *)&i2weg + 2B]
 447              	@ main.c:276: 			i2weg[0]=5;    	// Register
 448 00e6 40F20514 		movw	r4, #261	@ tmp248,
 449              	@ main.c:274: 			i2c1_write(INA219_ADDR,i2weg,3);
 450 00ea FFF7FEFF 		bl	i2c1_write	@
 451              	@ main.c:249: 		u16 vr1,vr2,cnt,cnt2=0,vbus;
 452 00ee 0025     		movs	r5, #0	@ cnt2,
 453              	@ main.c:277: 			i2weg[1]=0x1; 	// MSB Data
 454 00f0 9523     		movs	r3, #149	@ tmp249,
 455              	@ main.c:279: 			i2c1_write(INA219_ADDR,i2weg,3);
 456 00f2 04A9     		add	r1, sp, #16	@ tmp321,,
ARM GAS  /tmp/ccDfNsWv.s 			page 9


 457 00f4 0322     		movs	r2, #3	@,
 458 00f6 8020     		movs	r0, #128	@,
 459              	@ main.c:276: 			i2weg[0]=5;    	// Register
 460 00f8 ADF81040 		strh	r4, [sp, #16]	@ movhi	@ tmp248, MEM[(u08[3] *)&i2weg]
 461              	@ main.c:277: 			i2weg[1]=0x1; 	// MSB Data
 462 00fc 8DF81230 		strb	r3, [sp, #18]	@ tmp249, MEM[(u08[3] *)&i2weg + 2B]
 463              	@ main.c:279: 			i2c1_write(INA219_ADDR,i2weg,3);
 464 0100 FFF7FEFF 		bl	i2c1_write	@
 465              	@ main.c:281: 			i2c1_read (INA219_ADDR,0,i2reg,2);
 466 0104 03AA     		add	r2, sp, #12	@ tmp322,,
 467 0106 0223     		movs	r3, #2	@,
 468 0108 2946     		mov	r1, r5	@, cnt2
 469 010a 8020     		movs	r0, #128	@,
 470 010c FFF7FEFF 		bl	i2c1_read	@
 471              	@ main.c:282: 			tr_locate( 1,3);
 472 0110 0321     		movs	r1, #3	@,
 473 0112 0120     		movs	r0, #1	@,
 474 0114 FFF7FEFF 		bl	tr_locate	@
 475              	@ main.c:283: 			UaPutS("Config="); unt2uart(i2reg[0] + (i2reg[0]<<8) ,5); 
 476 0118 6248     		ldr	r0, .L53+44	@,
 477 011a FFF7FEFF 		bl	UaPutS	@
 478 011e 9DF80C00 		ldrb	r0, [sp, #12]	@ zero_extendqisi2	@ _17, i2reg
 479 0122 0521     		movs	r1, #5	@,
 480 0124 00EB0020 		add	r0, r0, r0, lsl #8	@, _17, _17,
 481 0128 FFF7FEFF 		bl	unt2uart	@
 482              	@ main.c:284: 			tr_locate( 1,2);
 483 012c 0221     		movs	r1, #2	@,
 484 012e 0120     		movs	r0, #1	@,
 485              	@ main.c:264: 			cnt=0;
 486 0130 2C46     		mov	r4, r5	@ cnt, cnt2
 487              	@ main.c:284: 			tr_locate( 1,2);
 488 0132 FFF7FEFF 		bl	tr_locate	@
 489 0136 5C4F     		ldr	r7, .L53+48	@ tmp306,
 490 0138 DFF898A1 		ldr	r10, .L53+92	@ tmp307,
 491              	@ main.c:288: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL)){
 492 013c 5B4E     		ldr	r6, .L53+52	@ tmp257,
 493 013e DFF89891 		ldr	r9, .L53+96	@ tmp259,
 494              	@ main.c:312: 			if(PB11_i==1) {
 495 0142 DFF89881 		ldr	r8, .L53+100	@ tmp286,
 496              	@ main.c:313: 				LED ^= 1;	
 497 0146 DFF898B1 		ldr	fp, .L53+104	@ tmp310,
 498              	.L42:
 499              	@ main.c:288: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL)){
 500 014a 3B68     		ldr	r3, [r7]	@ trg0.0_23, trg0
 501 014c B268     		ldr	r2, [r6, #8]	@ _24, MEM[(struct SysTick_Type *)3758153744B].VAL
 502 014e 9B1A     		subs	r3, r3, r2	@ tmp258, trg0.0_23, _24
 503 0150 4B45     		cmp	r3, r9	@ tmp258, tmp259
 504 0152 25D8     		bhi	.L52	@,
 505              	.L44:
 506              	@ main.c:312: 			if(PB11_i==1) {
 507 0154 D8F80030 		ldr	r3, [r8]	@ _47, MEM[(volatile long unsigned int *)1109492012B]
 508 0158 012B     		cmp	r3, #1	@ _47,
 509 015a 07D1     		bne	.L45	@,
 510              	@ main.c:313: 				LED ^= 1;	
 511 015c DBF80030 		ldr	r3, [fp]	@ _48, MEM[(volatile long unsigned int *)1109524916B]
 512              	@ main.c:314: 				cnt2++;
 513 0160 0135     		adds	r5, r5, #1	@ tmp289, cnt2,
ARM GAS  /tmp/ccDfNsWv.s 			page 10


 514              	@ main.c:313: 				LED ^= 1;	
 515 0162 83F00103 		eor	r3, r3, #1	@ _49, _48,
 516              	@ main.c:314: 				cnt2++;
 517 0166 ADB2     		uxth	r5, r5	@ cnt2, tmp289
 518              	@ main.c:313: 				LED ^= 1;	
 519 0168 CBF80030 		str	r3, [fp]	@ _49, MEM[(volatile long unsigned int *)1109524916B]
 520              	.L45:
 521              	@ main.c:317: 			if(p_Fifo1->rct){
 522 016c DAF80030 		ldr	r3, [r10]	@ p_Fifo1.3_50, p_Fifo1
 523 0170 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.3_50->rct
 524 0172 9BB2     		uxth	r3, r3	@ _51, p_Fifo1.3_50->rct
 525 0174 002B     		cmp	r3, #0	@ _51
 526 0176 E8D0     		beq	.L42	@
 527              	@ main.c:318: 				UART_getChar((char*)&swh);
 528 0178 0DF10B00 		add	r0, sp, #11	@ tmp329,,
 529 017c FFF7FEFF 		bl	UART_getChar	@
 530              	@ main.c:321: 				switch (swh){
 531 0180 9DF80B30 		ldrb	r3, [sp, #11]	@ zero_extendqisi2	@ swh, swh
 532 0184 612B     		cmp	r3, #97	@ swh,
 533 0186 60D0     		beq	.L46	@,
 534 0188 622B     		cmp	r3, #98	@ swh,
 535 018a DED1     		bne	.L42	@,
 536              	@ main.c:334: 					PB7_o ^= 1;
 537 018c 484A     		ldr	r2, .L53+56	@ tmp330,
 538 018e 1368     		ldr	r3, [r2]	@ _54, MEM[(volatile long unsigned int *)1109492124B]
 539 0190 83F00103 		eor	r3, r3, #1	@ _55, _54,
 540 0194 1360     		str	r3, [r2]	@ _55, MEM[(volatile long unsigned int *)1109492124B]
 541              	@ main.c:288: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL)){
 542 0196 3B68     		ldr	r3, [r7]	@ trg0.0_23, trg0
 543 0198 B268     		ldr	r2, [r6, #8]	@ _24, MEM[(struct SysTick_Type *)3758153744B].VAL
 544 019a 9B1A     		subs	r3, r3, r2	@ tmp258, trg0.0_23, _24
 545 019c 4B45     		cmp	r3, r9	@ tmp258, tmp259
 546 019e D9D9     		bls	.L44	@,
 547              	.L52:
 548              	@ main.c:289: 				trg0 = SysTick->VAL;
 549 01a0 B268     		ldr	r2, [r6, #8]	@ _26, MEM[(struct SysTick_Type *)3758153744B].VAL
 550              	@ main.c:293: 				unt2uart(cnt++,5); UaPutS(" "); unt2uart(cnt2,6); UaPutS("\r");
 551 01a2 631C     		adds	r3, r4, #1	@ tmp264, cnt,
 552 01a4 2046     		mov	r0, r4	@, cnt
 553              	@ main.c:289: 				trg0 = SysTick->VAL;
 554 01a6 3A60     		str	r2, [r7]	@ _26, trg0
 555              	@ main.c:292: 				PutChar = UART2_putc;
 556 01a8 3C4C     		ldr	r4, .L53+36	@ tmp324,
 557 01aa 374A     		ldr	r2, .L53+16	@ tmp323,
 558              	@ main.c:293: 				unt2uart(cnt++,5); UaPutS(" "); unt2uart(cnt2,6); UaPutS("\r");
 559 01ac 0521     		movs	r1, #5	@,
 560              	@ main.c:292: 				PutChar = UART2_putc;
 561 01ae 1460     		str	r4, [r2]	@ tmp324, PutChar
 562              	@ main.c:293: 				unt2uart(cnt++,5); UaPutS(" "); unt2uart(cnt2,6); UaPutS("\r");
 563 01b0 9CB2     		uxth	r4, r3	@ cnt, tmp264
 564 01b2 FFF7FEFF 		bl	unt2uart	@
 565 01b6 3F48     		ldr	r0, .L53+60	@,
 566 01b8 FFF7FEFF 		bl	UaPutS	@
 567 01bc 0621     		movs	r1, #6	@,
 568 01be 2846     		mov	r0, r5	@, cnt2
 569 01c0 FFF7FEFF 		bl	unt2uart	@
 570 01c4 3C48     		ldr	r0, .L53+64	@,
ARM GAS  /tmp/ccDfNsWv.s 			page 11


 571 01c6 FFF7FEFF 		bl	UaPutS	@
 572              	@ main.c:294: 				PutChar = UART1_putc;
 573 01ca 2F4A     		ldr	r2, .L53+16	@ tmp325,
 574 01cc 304B     		ldr	r3, .L53+24	@ tmp326,
 575              	@ main.c:295: 				unt2uart(cnt  ,5); UaPutS("\r");
 576 01ce 2046     		mov	r0, r4	@, cnt
 577 01d0 0521     		movs	r1, #5	@,
 578              	@ main.c:294: 				PutChar = UART1_putc;
 579 01d2 1360     		str	r3, [r2]	@ tmp326, PutChar
 580              	@ main.c:295: 				unt2uart(cnt  ,5); UaPutS("\r");
 581 01d4 FFF7FEFF 		bl	unt2uart	@
 582 01d8 3748     		ldr	r0, .L53+64	@,
 583 01da FFF7FEFF 		bl	UaPutS	@
 584              	@ main.c:297: 				i2c1_read( INA219_ADDR,2,i2reg,2);
 585 01de 0223     		movs	r3, #2	@,
 586 01e0 03AA     		add	r2, sp, #12	@ tmp327,,
 587 01e2 1946     		mov	r1, r3	@,
 588 01e4 8020     		movs	r0, #128	@,
 589 01e6 FFF7FEFF 		bl	i2c1_read	@
 590              	@ main.c:298: 				vbus = ((i2reg[1] | (i2reg[0]<<8))>>3)*4;
 591 01ea BDF80C30 		ldrh	r3, [sp, #12]	@, MEM[(u08[2] *)&i2reg]
 592              	@ main.c:299: 				tr_locate(1,3);
 593 01ee 0321     		movs	r1, #3	@,
 594              	@ main.c:298: 				vbus = ((i2reg[1] | (i2reg[0]<<8))>>3)*4;
 595 01f0 5BBA     		rev16	r3, r3	@ tmp271, MEM[(u08[2] *)&i2reg]
 596 01f2 C3F3CC03 		ubfx	r3, r3, #3, #13	@ tmp274, tmp271,,
 597 01f6 9B00     		lsls	r3, r3, #2	@ vbus, tmp274,
 598              	@ main.c:299: 				tr_locate(1,3);
 599 01f8 0120     		movs	r0, #1	@,
 600              	@ main.c:298: 				vbus = ((i2reg[1] | (i2reg[0]<<8))>>3)*4;
 601 01fa 0193     		str	r3, [sp, #4]	@ vbus, %sfp
 602              	@ main.c:299: 				tr_locate(1,3);
 603 01fc FFF7FEFF 		bl	tr_locate	@
 604              	@ main.c:300: 				UaPutS("vbus=");
 605 0200 2E48     		ldr	r0, .L53+68	@,
 606 0202 FFF7FEFF 		bl	UaPutS	@
 607              	@ main.c:302: 				int2uart (vbus ,4,3);
 608 0206 019B     		ldr	r3, [sp, #4]	@ vbus, %sfp
 609 0208 0322     		movs	r2, #3	@,
 610 020a 1846     		mov	r0, r3	@, vbus
 611 020c 0421     		movs	r1, #4	@,
 612 020e FFF7FEFF 		bl	int2uart	@
 613              	@ main.c:304: 				i2c1_read(INA219_ADDR,4,i2reg,2);
 614 0212 03AA     		add	r2, sp, #12	@ tmp328,,
 615 0214 0421     		movs	r1, #4	@,
 616 0216 0223     		movs	r3, #2	@,
 617 0218 8020     		movs	r0, #128	@,
 618 021a FFF7FEFF 		bl	i2c1_read	@
 619              	@ main.c:305: 				cur = ((i2reg[1]) | (i2reg[0]<<8));
 620 021e 9DF80C20 		ldrb	r2, [sp, #12]	@ zero_extendqisi2	@ i2reg, i2reg
 621 0222 9DF80D30 		ldrb	r3, [sp, #13]	@ zero_extendqisi2	@ i2reg, i2reg
 622              	@ main.c:306: 				UaPutS(" cur=");
 623 0226 2648     		ldr	r0, .L53+72	@,
 624              	@ main.c:305: 				cur = ((i2reg[1]) | (i2reg[0]<<8));
 625 0228 43EA0223 		orr	r3, r3, r2, lsl #8	@ tmp284, i2reg, i2reg,
 626 022c 1BB2     		sxth	r3, r3	@ cur, tmp284
 627 022e 0193     		str	r3, [sp, #4]	@ cur, %sfp
ARM GAS  /tmp/ccDfNsWv.s 			page 12


 628              	@ main.c:306: 				UaPutS(" cur=");
 629 0230 FFF7FEFF 		bl	UaPutS	@
 630              	@ main.c:307: 				int2uart (cur,4,3);
 631 0234 019B     		ldr	r3, [sp, #4]	@ cur, %sfp
 632 0236 0322     		movs	r2, #3	@,
 633 0238 1846     		mov	r0, r3	@, cur
 634 023a 0421     		movs	r1, #4	@,
 635 023c FFF7FEFF 		bl	int2uart	@
 636              	@ main.c:309: 				tr_locate(1,2);
 637 0240 0221     		movs	r1, #2	@,
 638 0242 0120     		movs	r0, #1	@,
 639 0244 FFF7FEFF 		bl	tr_locate	@
 640 0248 84E7     		b	.L44	@
 641              	.L46:
 642              	@ main.c:323: 					UaPutS("\r\n");
 643 024a 1E48     		ldr	r0, .L53+76	@,
 644 024c FFF7FEFF 		bl	UaPutS	@
 645              	@ main.c:324: 					UaPutS("\t\ta Podaj liczbe ");
 646 0250 1D48     		ldr	r0, .L53+80	@,
 647 0252 FFF7FEFF 		bl	UaPutS	@
 648              	@ main.c:325: 					vr1 = UART_getNum();
 649 0256 FFF7FEFF 		bl	UART_getNum	@
 650 025a 0190     		str	r0, [sp, #4]	@ _53, %sfp
 651              	@ main.c:326: 					UaPutS(" num=");	
 652 025c 1B48     		ldr	r0, .L53+84	@,
 653 025e FFF7FEFF 		bl	UaPutS	@
 654              	@ main.c:327: 					unt2uart(vr1,4);
 655 0262 019B     		ldr	r3, [sp, #4]	@ _53, %sfp
 656 0264 0421     		movs	r1, #4	@,
 657 0266 98B2     		uxth	r0, r3	@, _53
 658 0268 FFF7FEFF 		bl	unt2uart	@
 659              	@ main.c:328: 					tr_locate( 1, 2 );
 660 026c 0221     		movs	r1, #2	@,
 661 026e 0120     		movs	r0, #1	@,
 662 0270 FFF7FEFF 		bl	tr_locate	@
 663              	@ main.c:331: 					break;
 664 0274 69E7     		b	.L42	@
 665              	.L54:
 666 0276 00BF     		.align	2
 667              	.L53:
 668 0278 000C0140 		.word	1073810432
 669 027c 00100240 		.word	1073876992
 670 0280 00080140 		.word	1073809408
 671 0284 00E100E0 		.word	-536813312
 672 0288 00000000 		.word	PutChar
 673 028c 00A24A04 		.word	72000000
 674 0290 00000000 		.word	UART1_putc
 675 0294 00000000 		.word	.LC10
 676 0298 0C000000 		.word	.LC11
 677 029c 00000000 		.word	UART2_putc
 678 02a0 14000000 		.word	.LC12
 679 02a4 20000000 		.word	.LC13
 680 02a8 00000000 		.word	trg0
 681 02ac 10E000E0 		.word	-536813552
 682 02b0 9C812142 		.word	1109492124
 683 02b4 28000000 		.word	.LC14
 684 02b8 2C000000 		.word	.LC15
ARM GAS  /tmp/ccDfNsWv.s 			page 13


 685 02bc 30000000 		.word	.LC16
 686 02c0 38000000 		.word	.LC17
 687 02c4 40000000 		.word	.LC18
 688 02c8 44000000 		.word	.LC19
 689 02cc 58000000 		.word	.LC20
 690 02d0 00440040 		.word	1073759232
 691 02d4 00000000 		.word	p_Fifo1
 692 02d8 20AA4400 		.word	4500000
 693 02dc 2C812142 		.word	1109492012
 694 02e0 B4012242 		.word	1109524916
 695              		.size	minios, .-minios
 696              		.section	.text.startup.main,"ax",%progbits
 697              		.align	1
 698              		.p2align 2,,3
 699              		.global	main
 700              		.syntax unified
 701              		.thumb
 702              		.thumb_func
 703              		.fpu softvfp
 704              		.type	main, %function
 705              	main:
 706              		@ Volatile: function does not return.
 707              		@ args = 0, pretend = 0, frame = 0
 708              		@ frame_needed = 0, uses_anonymous_args = 0
 709              	@ main.c:5644: 	RCC_CR_HSEON_bb = 1;						// enable HSE clock
 710 0000 0121     		movs	r1, #1	@ tmp123,
 711              	@ main.c:228: int main(void){
 712 0002 08B5     		push	{r3, lr}	@
 713              	@ main.c:5644: 	RCC_CR_HSEON_bb = 1;						// enable HSE clock
 714 0004 1B4B     		ldr	r3, .L65	@ tmp122,
 715              	@ main.c:5645: 	while (!RCC_CR_HSERDY_bb);			// wait for stable clock
 716 0006 1C4A     		ldr	r2, .L65+4	@ tmp124,
 717              	@ main.c:5644: 	RCC_CR_HSEON_bb = 1;						// enable HSE clock
 718 0008 1960     		str	r1, [r3]	@ tmp123, MEM[(volatile long unsigned int *)1111621696B]
 719              	.L56:
 720              	@ main.c:5645: 	while (!RCC_CR_HSERDY_bb);			// wait for stable clock
 721 000a 1368     		ldr	r3, [r2]	@ _14, MEM[(volatile long unsigned int *)1111621700B]
 722 000c 002B     		cmp	r3, #0	@ _14
 723 000e FCD0     		beq	.L56	@
 724              	@ main.c:5649: 	RCC_CR_PLLON_bb = 1;						// enable PLL
 725 0010 0124     		movs	r4, #1	@ tmp129,
 726              	@ main.c:5647: 	RCC->CFGR |= ((mul - 2)<<RCC_CFGR_PLLMUL_bit)|RCC_CFGR_PLLSRC|RCC_CFGR_PPRE1_DIV2;	
 727 0012 1A49     		ldr	r1, .L65+8	@ tmp125,
 728              	@ main.c:5649: 	RCC_CR_PLLON_bb = 1;						// enable PLL
 729 0014 1A48     		ldr	r0, .L65+12	@ tmp128,
 730              	@ main.c:5647: 	RCC->CFGR |= ((mul - 2)<<RCC_CFGR_PLLMUL_bit)|RCC_CFGR_PLLSRC|RCC_CFGR_PPRE1_DIV2;	
 731 0016 4B68     		ldr	r3, [r1, #4]	@ _15, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 732              	@ main.c:5650: 	while (!RCC_CR_PLLRDY_bb);			// wait for PLL lock
 733 0018 1A4A     		ldr	r2, .L65+16	@ tmp130,
 734              	@ main.c:5647: 	RCC->CFGR |= ((mul - 2)<<RCC_CFGR_PLLMUL_bit)|RCC_CFGR_PLLSRC|RCC_CFGR_PPRE1_DIV2;	
 735 001a 43F4E813 		orr	r3, r3, #1900544	@ _20, _15,
 736 001e 43F48063 		orr	r3, r3, #1024	@ _20, _20,
 737 0022 4B60     		str	r3, [r1, #4]	@ _20, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 738              	@ main.c:5649: 	RCC_CR_PLLON_bb = 1;						// enable PLL
 739 0024 0460     		str	r4, [r0]	@ tmp129, MEM[(volatile long unsigned int *)1111621728B]
 740              	.L57:
 741              	@ main.c:5650: 	while (!RCC_CR_PLLRDY_bb);			// wait for PLL lock
ARM GAS  /tmp/ccDfNsWv.s 			page 14


 742 0026 1368     		ldr	r3, [r2]	@ _21, MEM[(volatile long unsigned int *)1111621732B]
 743 0028 002B     		cmp	r3, #0	@ _21
 744 002a FCD0     		beq	.L57	@
 745              	@ main.c:5652: 	RCC->CFGR |= RCC_CFGR_SW_PLL;		// change SYSCLK to PLL
 746 002c 134B     		ldr	r3, .L65+8	@ tmp131,
 747              	@ main.c:5653: 	while (((RCC->CFGR) & RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);	// wait for switch
 748 002e 1A46     		mov	r2, r3	@ tmp133, tmp131
 749              	@ main.c:5652: 	RCC->CFGR |= RCC_CFGR_SW_PLL;		// change SYSCLK to PLL
 750 0030 5968     		ldr	r1, [r3, #4]	@ _22, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 751 0032 41F00201 		orr	r1, r1, #2	@ _23, _22,
 752 0036 5960     		str	r1, [r3, #4]	@ _23, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 753              	.L58:
 754              	@ main.c:5653: 	while (((RCC->CFGR) & RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);	// wait for switch
 755 0038 5368     		ldr	r3, [r2, #4]	@ _24, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 756 003a 03F00C03 		and	r3, r3, #12	@ tmp134, _24,
 757 003e 082B     		cmp	r3, #8	@ tmp134,
 758 0040 FAD1     		bne	.L58	@,
 759              	@ main.c:5656: 	RCC->APB2ENR = RCC_APB2ENR_IOPAEN | RCC_APB2ENR_IOPBEN | RCC_APB2ENR_IOPCEN | RCC_A
 760 0042 1D20     		movs	r0, #29	@ tmp138,
 761              	@ main.c:187: 	SCB->VTOR = NVIC_VectTab_RAM;
 762 0044 4FF00056 		mov	r6, #536870912	@ tmp136,
 763              	@ main.c:195: 	AFIO->MAPR = AFIO_MAPR_SWJ_CFG_1; // enable pin PA15=JTDI,PB3=JTDO,PB4=JNTRST,
 764 0048 4FF00075 		mov	r5, #33554432	@ tmp140,
 765              	@ main.c:5450: 	SysTick->CTRL = SysTick_CTRL_TICKINT|SysTick_CTRL_ENABLE; // enable SysTick
 766 004c 0321     		movs	r1, #3	@ tmp144,
 767              	@ main.c:187: 	SCB->VTOR = NVIC_VectTab_RAM;
 768 004e 0E4B     		ldr	r3, .L65+20	@ tmp135,
 769              	@ main.c:195: 	AFIO->MAPR = AFIO_MAPR_SWJ_CFG_1; // enable pin PA15=JTDI,PB3=JTDO,PB4=JNTRST,
 770 0050 0E4C     		ldr	r4, .L65+24	@ tmp139,
 771              	@ main.c:187: 	SCB->VTOR = NVIC_VectTab_RAM;
 772 0052 9E60     		str	r6, [r3, #8]	@ tmp136, MEM[(struct SCB_Type *)3758157056B].VTOR
 773              	@ main.c:5656: 	RCC->APB2ENR = RCC_APB2ENR_IOPAEN | RCC_APB2ENR_IOPBEN | RCC_APB2ENR_IOPCEN | RCC_A
 774 0054 9061     		str	r0, [r2, #24]	@ tmp138, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 775              	@ main.c:5449: 	SysTick->LOAD = STCLK_LD - 1;    // 72/8/SysTick_LOAD interrupt every x s
 776 0056 0E48     		ldr	r0, .L65+28	@ tmp142,
 777 0058 A3F54F63 		sub	r3, r3, #3312	@ tmp141, tmp141,
 778              	@ main.c:232: 		 GPIOC->CRH = (GPIOC->CRH & 0xff0fffff) | 0x00100000;	// LED Blue  PC13		
 779 005c 0D4A     		ldr	r2, .L65+32	@ tmp145,
 780              	@ main.c:195: 	AFIO->MAPR = AFIO_MAPR_SWJ_CFG_1; // enable pin PA15=JTDI,PB3=JTDO,PB4=JNTRST,
 781 005e 6560     		str	r5, [r4, #4]	@ tmp140, MEM[(struct AFIO_TypeDef *)1073807360B].MAPR
 782              	@ main.c:5449: 	SysTick->LOAD = STCLK_LD - 1;    // 72/8/SysTick_LOAD interrupt every x s
 783 0060 5860     		str	r0, [r3, #4]	@ tmp142, MEM[(struct SysTick_Type *)3758153744B].LOAD
 784              	@ main.c:5450: 	SysTick->CTRL = SysTick_CTRL_TICKINT|SysTick_CTRL_ENABLE; // enable SysTick
 785 0062 1960     		str	r1, [r3]	@ tmp144, MEM[(struct SysTick_Type *)3758153744B].CTRL
 786              	@ main.c:232: 		 GPIOC->CRH = (GPIOC->CRH & 0xff0fffff) | 0x00100000;	// LED Blue  PC13		
 787 0064 5368     		ldr	r3, [r2, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 788 0066 23F47003 		bic	r3, r3, #15728640	@ tmp146, _1,
 789 006a 43F48013 		orr	r3, r3, #1048576	@ _3, tmp146,
 790 006e 5360     		str	r3, [r2, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 791              	@ main.c:243: 		minios();
 792 0070 FFF7FEFF 		bl	minios	@
 793              	.L66:
 794              		.align	2
 795              	.L65:
 796 0074 40004242 		.word	1111621696
 797 0078 44004242 		.word	1111621700
 798 007c 00100240 		.word	1073876992
ARM GAS  /tmp/ccDfNsWv.s 			page 15


 799 0080 60004242 		.word	1111621728
 800 0084 64004242 		.word	1111621732
 801 0088 00ED00E0 		.word	-536810240
 802 008c 00000140 		.word	1073807360
 803 0090 3F548900 		.word	8999999
 804 0094 00100140 		.word	1073811456
 805              		.size	main, .-main
 806              		.section	.text.liontrend,"ax",%progbits
 807              		.align	1
 808              		.p2align 2,,3
 809              		.global	liontrend
 810              		.syntax unified
 811              		.thumb
 812              		.thumb_func
 813              		.fpu softvfp
 814              		.type	liontrend, %function
 815              	liontrend:
 816              		@ args = 0, pretend = 0, frame = 0
 817              		@ frame_needed = 0, uses_anonymous_args = 0
 818 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}	@
 819              	@ main.c:345: 		v[6] = (100*(v[0]-v[1]))/(v[2]-v[3]); //a=(y2-y1)/(x2-x1)
 820 0004 6423     		movs	r3, #100	@ tmp194,
 821 0006 B0F90060 		ldrsh	r6, [r0]	@ _1, *v_82(D)
 822 000a B0F902E0 		ldrsh	lr, [r0, #2]	@ _3, MEM[(s16 *)v_82(D) + 2B]
 823 000e B0F90440 		ldrsh	r4, [r0, #4]	@ _8, MEM[(s16 *)v_82(D) + 4B]
 824 0012 A6EB0E0C 		sub	ip, r6, lr	@ tmp192, _1, _3
 825 0016 03FB0CFC 		mul	ip, r3, ip	@ tmp193, tmp194, tmp192
 826 001a B0F90620 		ldrsh	r2, [r0, #6]	@ _10, MEM[(s16 *)v_82(D) + 6B]
 827              	@ main.c:343: void liontrend(s16 v[],s16 c[]){
 828 001e 0546     		mov	r5, r0	@ v, v
 829              	@ main.c:345: 		v[6] = (100*(v[0]-v[1]))/(v[2]-v[3]); //a=(y2-y1)/(x2-x1)
 830 0020 A01A     		subs	r0, r4, r2	@ tmp195, _8, _10
 831 0022 9CFBF0FC 		sdiv	ip, ip, r0	@ tmp197, tmp193, tmp195
 832 0026 0FFA8CFC 		sxth	ip, ip	@ _13, tmp197
 833              	@ main.c:346: 		v[5] = v[0]-v[6]*v[2]/100;  //b=y-ax
 834 002a 0CFB04F4 		mul	r4, ip, r4	@ tmp199, _13, _8
 835 002e 3D4F     		ldr	r7, .L69	@ tmp202,
 836              	@ main.c:347: 		v[4] = v[1]-v[6]*v[3]/100;  //b=y-ax;
 837 0030 0CFB02F2 		mul	r2, ip, r2	@ tmp209, _13, _10
 838              	@ main.c:346: 		v[5] = v[0]-v[6]*v[2]/100;  //b=y-ax
 839 0034 87FB0408 		smull	r0, r8, r7, r4	@ tmp275, tmp201, tmp202, tmp199
 840 0038 E017     		asrs	r0, r4, #31	@ tmp204, tmp199,
 841 003a A0EB6810 		sub	r0, r0, r8, asr #5	@ tmp200, tmp204, tmp201,
 842 003e 3044     		add	r0, r0, r6	@ tmp207, _1
 843 0040 00B2     		sxth	r0, r0	@ _20, tmp207
 844              	@ main.c:348: 		v[7] = 100*(339-v[5])/v[6]; //x=(y-b)/a
 845 0042 C0F5A974 		rsb	r4, r0, #338	@ tmp220, _20,
 846 0046 0134     		adds	r4, r4, #1	@ tmp220, tmp220,
 847 0048 03FB04F4 		mul	r4, r3, r4	@ tmp221, tmp194, tmp220
 848 004c 94FBFCF4 		sdiv	r4, r4, ip	@ tmp224, tmp221, _13
 849              	@ main.c:343: void liontrend(s16 v[],s16 c[]){
 850 0050 0E46     		mov	r6, r1	@ c, c
 851              	@ main.c:347: 		v[4] = v[1]-v[6]*v[3]/100;  //b=y-ax;
 852 0052 87FB0281 		smull	r8, r1, r7, r2	@ tmp276, tmp211, tmp202, tmp209
 853 0056 D217     		asrs	r2, r2, #31	@ tmp214, tmp209,
 854 0058 A2EB6112 		sub	r2, r2, r1, asr #5	@ tmp210, tmp214, tmp211,
 855 005c 7244     		add	r2, r2, lr	@ tmp217, _3
ARM GAS  /tmp/ccDfNsWv.s 			page 16


 856 005e 2A81     		strh	r2, [r5, #8]	@ movhi	@ tmp217, MEM[(s16 *)v_82(D) + 8B]
 857              	@ main.c:346: 		v[5] = v[0]-v[6]*v[2]/100;  //b=y-ax
 858 0060 6881     		strh	r0, [r5, #10]	@ movhi	@ _20, MEM[(s16 *)v_82(D) + 10B]
 859              	@ main.c:348: 		v[7] = 100*(339-v[5])/v[6]; //x=(y-b)/a
 860 0062 EC81     		strh	r4, [r5, #14]	@ movhi	@ tmp224, MEM[(s16 *)v_82(D) + 14B]
 861              	@ main.c:345: 		v[6] = (100*(v[0]-v[1]))/(v[2]-v[3]); //a=(y2-y1)/(x2-x1)
 862 0064 A5F80CC0 		strh	ip, [r5, #12]	@ movhi	@ _13, MEM[(s16 *)v_82(D) + 12B]
 863              	@ main.c:350: 		c[6] = (100*(c[0]-c[1]))/(c[2]-c[3]);
 864 0068 B6F900E0 		ldrsh	lr, [r6]	@ _32, *c_87(D)
 865 006c B6F902C0 		ldrsh	ip, [r6, #2]	@ _34, MEM[(s16 *)c_87(D) + 2B]
 866 0070 B6F90440 		ldrsh	r4, [r6, #4]	@ _39, MEM[(s16 *)c_87(D) + 4B]
 867 0074 AEEB0C02 		sub	r2, lr, ip	@ tmp226, _32, _34
 868 0078 03FB02F3 		mul	r3, r3, r2	@ tmp227, tmp194, tmp226
 869 007c B6F90610 		ldrsh	r1, [r6, #6]	@ _41, MEM[(s16 *)c_87(D) + 6B]
 870              	@ main.c:355: 		UaPutS("v="); sint2uart(v[6]); sint2uart(v[5]); sint2uart(v[4]); sint2uart(v[7]); U
 871 0080 2948     		ldr	r0, .L69+4	@,
 872              	@ main.c:350: 		c[6] = (100*(c[0]-c[1]))/(c[2]-c[3]);
 873 0082 621A     		subs	r2, r4, r1	@ tmp229, _39, _41
 874 0084 93FBF2F3 		sdiv	r3, r3, r2	@ tmp231, tmp227, tmp229
 875 0088 1BB2     		sxth	r3, r3	@ _44, tmp231
 876              	@ main.c:351: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 877 008a 03FB04F4 		mul	r4, r3, r4	@ tmp233, _44, _39
 878              	@ main.c:352: 		c[4] = c[1]-c[6]*c[3]/100;//y-ax
 879 008e 03FB01F1 		mul	r1, r3, r1	@ tmp243, _44, _41
 880              	@ main.c:351: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 881 0092 87FB0429 		smull	r2, r9, r7, r4	@ tmp277, tmp235, tmp202, tmp233
 882              	@ main.c:352: 		c[4] = c[1]-c[6]*c[3]/100;//y-ax
 883 0096 87FB0128 		smull	r2, r8, r7, r1	@ tmp278, tmp245, tmp202, tmp243
 884              	@ main.c:351: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 885 009a E217     		asrs	r2, r4, #31	@ tmp238, tmp233,
 886 009c A2EB6912 		sub	r2, r2, r9, asr #5	@ tmp234, tmp238, tmp235,
 887              	@ main.c:352: 		c[4] = c[1]-c[6]*c[3]/100;//y-ax
 888 00a0 C917     		asrs	r1, r1, #31	@ tmp248, tmp243,
 889              	@ main.c:351: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 890 00a2 7244     		add	r2, r2, lr	@ tmp241, _32
 891              	@ main.c:352: 		c[4] = c[1]-c[6]*c[3]/100;//y-ax
 892 00a4 A1EB6811 		sub	r1, r1, r8, asr #5	@ tmp244, tmp248, tmp245,
 893 00a8 6144     		add	r1, r1, ip	@ tmp251, _34
 894              	@ main.c:351: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 895 00aa 92B2     		uxth	r2, r2	@ _50, tmp241
 896              	@ main.c:350: 		c[6] = (100*(c[0]-c[1]))/(c[2]-c[3]);
 897 00ac B381     		strh	r3, [r6, #12]	@ movhi	@ _44, MEM[(s16 *)c_87(D) + 12B]
 898              	@ main.c:351: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 899 00ae 7281     		strh	r2, [r6, #10]	@ movhi	@ _50, MEM[(s16 *)c_87(D) + 10B]
 900              	@ main.c:352: 		c[4] = c[1]-c[6]*c[3]/100;//y-ax
 901 00b0 3181     		strh	r1, [r6, #8]	@ movhi	@ tmp251, MEM[(s16 *)c_87(D) + 8B]
 902              	@ main.c:353: 		c[7] = c[5]+c[6]*v[7]/100;// szukana pojemnosc
 903 00b2 B5F90E10 		ldrsh	r1, [r5, #14]	@ MEM[(s16 *)v_82(D) + 14B], MEM[(s16 *)v_82(D) + 14B]
 904              	@ main.c:355: 		UaPutS("v="); sint2uart(v[6]); sint2uart(v[5]); sint2uart(v[4]); sint2uart(v[7]); U
 905 00b6 1D4C     		ldr	r4, .L69+8	@ tmp268,
 906              	@ main.c:353: 		c[7] = c[5]+c[6]*v[7]/100;// szukana pojemnosc
 907 00b8 03FB01F3 		mul	r3, r3, r1	@ tmp254, _44, MEM[(s16 *)v_82(D) + 14B]
 908 00bc 87FB0317 		smull	r1, r7, r7, r3	@ tmp279, tmp256, tmp202, tmp254
 909 00c0 DB17     		asrs	r3, r3, #31	@ tmp259, tmp254,
 910 00c2 C3EB6713 		rsb	r3, r3, r7, asr #5	@ tmp255, tmp259, tmp256,
 911 00c6 1A44     		add	r2, r2, r3	@ tmp261, tmp255
 912 00c8 F281     		strh	r2, [r6, #14]	@ movhi	@ tmp261, MEM[(s16 *)c_87(D) + 14B]
ARM GAS  /tmp/ccDfNsWv.s 			page 17


 913              	@ main.c:355: 		UaPutS("v="); sint2uart(v[6]); sint2uart(v[5]); sint2uart(v[4]); sint2uart(v[7]); U
 914 00ca FFF7FEFF 		bl	UaPutS	@
 915 00ce B5F90C00 		ldrsh	r0, [r5, #12]	@, MEM[(s16 *)v_82(D) + 12B]
 916 00d2 FFF7FEFF 		bl	sint2uart	@
 917 00d6 B5F90A00 		ldrsh	r0, [r5, #10]	@, MEM[(s16 *)v_82(D) + 10B]
 918 00da FFF7FEFF 		bl	sint2uart	@
 919 00de B5F90800 		ldrsh	r0, [r5, #8]	@, MEM[(s16 *)v_82(D) + 8B]
 920 00e2 FFF7FEFF 		bl	sint2uart	@
 921 00e6 B5F90E00 		ldrsh	r0, [r5, #14]	@, MEM[(s16 *)v_82(D) + 14B]
 922 00ea FFF7FEFF 		bl	sint2uart	@
 923 00ee 2046     		mov	r0, r4	@, tmp268
 924 00f0 FFF7FEFF 		bl	UaPutS	@
 925              	@ main.c:356: 		UaPutS("c="); sint2uart(c[6]); sint2uart(c[5]); sint2uart(c[4]); sint2uart(c[7]); U
 926 00f4 0E48     		ldr	r0, .L69+12	@,
 927 00f6 FFF7FEFF 		bl	UaPutS	@
 928 00fa B6F90C00 		ldrsh	r0, [r6, #12]	@, MEM[(s16 *)c_87(D) + 12B]
 929 00fe FFF7FEFF 		bl	sint2uart	@
 930 0102 B6F90A00 		ldrsh	r0, [r6, #10]	@, MEM[(s16 *)c_87(D) + 10B]
 931 0106 FFF7FEFF 		bl	sint2uart	@
 932 010a B6F90800 		ldrsh	r0, [r6, #8]	@, MEM[(s16 *)c_87(D) + 8B]
 933 010e FFF7FEFF 		bl	sint2uart	@
 934 0112 B6F90E00 		ldrsh	r0, [r6, #14]	@, MEM[(s16 *)c_87(D) + 14B]
 935 0116 FFF7FEFF 		bl	sint2uart	@
 936 011a 2046     		mov	r0, r4	@, tmp268
 937              	@ main.c:357: 	}
 938 011c BDE8F843 		pop	{r3, r4, r5, r6, r7, r8, r9, lr}	@
 939              	@ main.c:356: 		UaPutS("c="); sint2uart(c[6]); sint2uart(c[5]); sint2uart(c[4]); sint2uart(c[7]); U
 940 0120 FFF7FEBF 		b	UaPutS	@
 941              	.L70:
 942              		.align	2
 943              	.L69:
 944 0124 1F85EB51 		.word	1374389535
 945 0128 00000000 		.word	.LC21
 946 012c 40000000 		.word	.LC18
 947 0130 04000000 		.word	.LC22
 948              		.size	liontrend, .-liontrend
 949              		.section	.text.oblicz,"ax",%progbits
 950              		.align	1
 951              		.p2align 2,,3
 952              		.global	oblicz
 953              		.syntax unified
 954              		.thumb
 955              		.thumb_func
 956              		.fpu softvfp
 957              		.type	oblicz, %function
 958              	oblicz:
 959              		@ Volatile: function does not return.
 960              		@ args = 0, pretend = 0, frame = 80
 961              		@ frame_needed = 0, uses_anonymous_args = 0
 962              	@ main.c:5357: 	USART1->BRR = (F_CPU+UART1_SPEED/2)/UART1_SPEED;
 963 0000 40F27126 		movw	r6, #625	@ tmp141,
 964              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 965 0004 2025     		movs	r5, #32	@ tmp143,
 966              	@ main.c:358: void oblicz(void){
 967 0006 80B5     		push	{r7, lr}	@
 968 0008 94B0     		sub	sp, sp, #80	@,,
 969              	@ main.c:360: 		BkpRegInit();
ARM GAS  /tmp/ccDfNsWv.s 			page 18


 970 000a FFF7FEFF 		bl	BkpRegInit	@
 971              	@ main.c:366: 		PB12_o = 0;		// rozladowanie
 972 000e 0022     		movs	r2, #0	@ tmp150,
 973              	@ main.c:368: 		PB14_o = 1;   // dzwonek
 974 0010 0121     		movs	r1, #1	@ tmp154,
 975              	@ main.c:5354: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 976 0012 324F     		ldr	r7, .L74	@ tmp126,
 977              	@ main.c:5355: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 978 0014 3248     		ldr	r0, .L74+4	@ tmp128,
 979              	@ main.c:5354: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 980 0016 BB69     		ldr	r3, [r7, #24]	@ _28, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 981              	@ main.c:5356: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 982 0018 324C     		ldr	r4, .L74+8	@ tmp131,
 983              	@ main.c:5354: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 984 001a 43F48043 		orr	r3, r3, #16384	@ _29, _28,
 985 001e BB61     		str	r3, [r7, #24]	@ _29, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 986              	@ main.c:5355: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 987 0020 4368     		ldr	r3, [r0, #4]	@ _30, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 988              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 989 0022 314F     		ldr	r7, .L74+12	@ tmp142,
 990              	@ main.c:5355: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 991 0024 23F47F63 		bic	r3, r3, #4080	@ tmp129, _30,
 992 0028 43F49263 		orr	r3, r3, #1168	@ _32, tmp129,
 993 002c 4360     		str	r3, [r0, #4]	@ _32, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 994              	@ main.c:5356: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 995 002e A389     		ldrh	r3, [r4, #12]	@, MEM[(struct USART_TypeDef *)1073821696B].CR1
 996              	@ main.c:366: 		PB12_o = 0;		// rozladowanie
 997 0030 DFF8D8C0 		ldr	ip, .L74+48	@ tmp149,
 998              	@ main.c:5356: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 999 0034 43F40053 		orr	r3, r3, #8192	@ _34, MEM[(struct USART_TypeDef *)1073821696B].CR1,
 1000 0038 43F02C03 		orr	r3, r3, #44	@ _34, _34,
 1001 003c A381     		strh	r3, [r4, #12]	@ movhi	@ _34, MEM[(struct USART_TypeDef *)1073821696B].CR1
 1002              	@ main.c:5357: 	USART1->BRR = (F_CPU+UART1_SPEED/2)/UART1_SPEED;
 1003 003e 2681     		strh	r6, [r4, #8]	@ movhi	@ tmp141, MEM[(struct USART_TypeDef *)1073821696B].BRR
 1004              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 1005 0040 7D60     		str	r5, [r7, #4]	@ tmp143, MEM[(struct NVIC_Type *)3758153984B].ISER
 1006              	@ main.c:364: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 1007 0042 D0F80434 		ldr	r3, [r0, #1028]	@ _1, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 1008              	@ main.c:367: 		PB13_o = 0;   // ladowanie
 1009 0046 294F     		ldr	r7, .L74+16	@ tmp151,
 1010              	@ main.c:364: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 1011 0048 23F07F63 		bic	r3, r3, #267386880	@ tmp145, _1,
 1012 004c 23F47023 		bic	r3, r3, #983040	@ tmp145, tmp145,
 1013 0050 43F0AA63 		orr	r3, r3, #89128960	@ _3, tmp145,
 1014              	@ main.c:368: 		PB14_o = 1;   // dzwonek
 1015 0054 264E     		ldr	r6, .L74+20	@ tmp153,
 1016              	@ main.c:364: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 1017 0056 43F4A023 		orr	r3, r3, #327680	@ _3, _3,
 1018 005a C0F80434 		str	r3, [r0, #1028]	@ _3, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 1019              	@ main.c:370: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 1020 005e 254D     		ldr	r5, .L74+24	@ tmp155,
 1021 0060 254B     		ldr	r3, .L74+28	@ tmp156,
 1022              	@ main.c:366: 		PB12_o = 0;		// rozladowanie
 1023 0062 CCF80020 		str	r2, [ip]	@ tmp150, MEM[(volatile long unsigned int *)1109492144B]
 1024              	@ main.c:370: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 1025 0066 0320     		movs	r0, #3	@,
 1026              	@ main.c:367: 		PB13_o = 0;   // ladowanie
ARM GAS  /tmp/ccDfNsWv.s 			page 19


 1027 0068 3A60     		str	r2, [r7]	@ tmp150, MEM[(volatile long unsigned int *)1109492148B]
 1028              	@ main.c:368: 		PB14_o = 1;   // dzwonek
 1029 006a 3160     		str	r1, [r6]	@ tmp154, MEM[(volatile long unsigned int *)1109492152B]
 1030              	@ main.c:370: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 1031 006c 2B60     		str	r3, [r5]	@ tmp156, PutChar
 1032 006e FFF7FEFF 		bl	tr_pen_color	@
 1033              	@ main.c:371: 		UaPutS("\f UART1 "); UaPutS (uint2str( (F_CPU/1)/(1*USART1->BRR-1),buf));	
 1034 0072 2248     		ldr	r0, .L74+32	@,
 1035 0074 FFF7FEFF 		bl	UaPutS	@
 1036 0078 2389     		ldrh	r3, [r4, #8]	@, MEM[(struct USART_TypeDef *)1073821696B].BRR
 1037 007a 2148     		ldr	r0, .L74+36	@ tmp165,
 1038 007c 013B     		subs	r3, r3, #1	@ tmp162, MEM[(struct USART_TypeDef *)1073821696B].BRR,
 1039 007e B0FBF3F0 		udiv	r0, r0, r3	@, tmp165, tmp162
 1040 0082 01A9     		add	r1, sp, #4	@,,
 1041 0084 FFF7FEFF 		bl	uint2str	@
 1042              	@ main.c:375: 		s16 v[8]={365,356,0, 30,0,0,0,0};
 1043 0088 1E4C     		ldr	r4, .L74+40	@ tmp167,
 1044              	@ main.c:371: 		UaPutS("\f UART1 "); UaPutS (uint2str( (F_CPU/1)/(1*USART1->BRR-1),buf));	
 1045 008a FFF7FEFF 		bl	UaPutS	@
 1046              	@ main.c:372: 		UaPutS (" b/s \r\n");
 1047 008e 1E48     		ldr	r0, .L74+44	@,
 1048 0090 FFF7FEFF 		bl	UaPutS	@
 1049              	@ main.c:375: 		s16 v[8]={365,356,0, 30,0,0,0,0};
 1050 0094 94E80F00 		ldm	r4, {r0, r1, r2, r3}	@ tmp167,,,,
 1051              	@ main.c:376: 		s16 c[8]={2000 ,6400 ,0, 30,0,0,0,0};
 1052 0098 04F11005 		add	r5, r4, #16	@ tmp172, tmp167,
 1053 009c 0DF1200C 		add	ip, sp, #32	@ tmp171,,
 1054              	@ main.c:378: 		s16 a[8]={342,336,0,2,0,0,0,0};
 1055 00a0 04F12006 		add	r6, r4, #32	@ tmp175, tmp167,
 1056              	@ main.c:375: 		s16 v[8]={365,356,0, 30,0,0,0,0};
 1057 00a4 04AF     		add	r7, sp, #16	@ tmp168,,
 1058 00a6 87E80F00 		stm	r7, {r0, r1, r2, r3}	@ tmp168,,,,
 1059              	@ main.c:376: 		s16 c[8]={2000 ,6400 ,0, 30,0,0,0,0};
 1060 00aa 95E80F00 		ldm	r5, {r0, r1, r2, r3}	@ tmp172,,,,
 1061              	@ main.c:379: 		s16 b[8]={114,263,0,2,0,0,0,0};
 1062 00ae 3034     		adds	r4, r4, #48	@ tmp178, tmp167,
 1063              	@ main.c:378: 		s16 a[8]={342,336,0,2,0,0,0,0};
 1064 00b0 0CAD     		add	r5, sp, #48	@ tmp174,,
 1065              	@ main.c:376: 		s16 c[8]={2000 ,6400 ,0, 30,0,0,0,0};
 1066 00b2 8CE80F00 		stm	ip, {r0, r1, r2, r3}	@ tmp171,,,,
 1067              	@ main.c:378: 		s16 a[8]={342,336,0,2,0,0,0,0};
 1068 00b6 96E80F00 		ldm	r6, {r0, r1, r2, r3}	@ tmp175,,,,
 1069              	@ main.c:379: 		s16 b[8]={114,263,0,2,0,0,0,0};
 1070 00ba 10AE     		add	r6, sp, #64	@ tmp177,,
 1071              	@ main.c:378: 		s16 a[8]={342,336,0,2,0,0,0,0};
 1072 00bc 85E80F00 		stm	r5, {r0, r1, r2, r3}	@ tmp174,,,,
 1073              	@ main.c:379: 		s16 b[8]={114,263,0,2,0,0,0,0};
 1074 00c0 94E80F00 		ldm	r4, {r0, r1, r2, r3}	@ tmp178,,,,
 1075 00c4 86E80F00 		stm	r6, {r0, r1, r2, r3}	@ tmp177,,,,
 1076              	@ main.c:381: 		liontrend(v,c);
 1077 00c8 6146     		mov	r1, ip	@, tmp171
 1078 00ca 3846     		mov	r0, r7	@, tmp168
 1079 00cc FFF7FEFF 		bl	liontrend	@
 1080              	@ main.c:382: 		liontrend(a,b);
 1081 00d0 3146     		mov	r1, r6	@, tmp177
 1082 00d2 2846     		mov	r0, r5	@, tmp174
 1083 00d4 FFF7FEFF 		bl	liontrend	@
ARM GAS  /tmp/ccDfNsWv.s 			page 20


 1084              	.L72:
 1085 00d8 FEE7     		b	.L72	@
 1086              	.L75:
 1087 00da 00BF     		.align	2
 1088              	.L74:
 1089 00dc 00100240 		.word	1073876992
 1090 00e0 00080140 		.word	1073809408
 1091 00e4 00380140 		.word	1073821696
 1092 00e8 00E100E0 		.word	-536813312
 1093 00ec B4812142 		.word	1109492148
 1094 00f0 B8812142 		.word	1109492152
 1095 00f4 00000000 		.word	PutChar
 1096 00f8 00000000 		.word	UART1_putc
 1097 00fc 00000000 		.word	.LC10
 1098 0100 00A24A04 		.word	72000000
 1099 0104 00000000 		.word	.LANCHOR1
 1100 0108 0C000000 		.word	.LC11
 1101 010c B0812142 		.word	1109492144
 1102              		.size	oblicz, .-oblicz
 1103              		.section	.text.lion_updown,"ax",%progbits
 1104              		.align	1
 1105              		.p2align 2,,3
 1106              		.global	lion_updown
 1107              		.syntax unified
 1108              		.thumb
 1109              		.thumb_func
 1110              		.fpu softvfp
 1111              		.type	lion_updown, %function
 1112              	lion_updown:
 1113              		@ args = 0, pretend = 0, frame = 32
 1114              		@ frame_needed = 0, uses_anonymous_args = 0
 1115 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 1116 0004 89B0     		sub	sp, sp, #36	@,,
 1117              	@ main.c:395: 		BkpRegInit();
 1118 0006 FFF7FEFF 		bl	BkpRegInit	@
 1119              	@ main.c:5356: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 1120 000a 42F22C02 		movw	r2, #8236	@ tmp237,
 1121              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 1122 000e 4FF0200E 		mov	lr, #32	@ tmp245,
 1123              	@ main.c:5357: 	USART1->BRR = (F_CPU+UART1_SPEED/2)/UART1_SPEED;
 1124 0012 40F27128 		movw	r8, #625	@ tmp243,
 1125              	@ main.c:5364: 	USART2->BRR = ((F_CPU+UART2_SPEED/2)/UART2_SPEED)/2;
 1126 0016 4FF49C76 		mov	r6, #312	@ tmp261,
 1127              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 1128 001a 4025     		movs	r5, #64	@ tmp263,
 1129              	@ main.c:5354: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 1130 001c DFF800C3 		ldr	ip, .L102+92	@ tmp228,
 1131              	@ main.c:5355: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 1132 0020 A848     		ldr	r0, .L102	@ tmp230,
 1133              	@ main.c:5354: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 1134 0022 DCF81830 		ldr	r3, [ip, #24]	@ _203, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 1135              	@ main.c:5356: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 1136 0026 A84C     		ldr	r4, .L102+4	@ tmp233,
 1137              	@ main.c:5354: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 1138 0028 43F48043 		orr	r3, r3, #16384	@ _204, _203,
 1139 002c CCF81830 		str	r3, [ip, #24]	@ _204, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 1140              	@ main.c:5355: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
ARM GAS  /tmp/ccDfNsWv.s 			page 21


 1141 0030 4368     		ldr	r3, [r0, #4]	@ _205, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 1142              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 1143 0032 A649     		ldr	r1, .L102+8	@ tmp244,
 1144              	@ main.c:5355: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 1145 0034 23F47F63 		bic	r3, r3, #4080	@ tmp231, _205,
 1146 0038 43F49263 		orr	r3, r3, #1168	@ _207, tmp231,
 1147 003c 4360     		str	r3, [r0, #4]	@ _207, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 1148              	@ main.c:5356: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 1149 003e A389     		ldrh	r3, [r4, #12]	@, MEM[(struct USART_TypeDef *)1073821696B].CR1
 1150              	@ main.c:5363: 	USART2->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 1151 0040 A34F     		ldr	r7, .L102+12	@ tmp251,
 1152              	@ main.c:5356: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 1153 0042 1343     		orrs	r3, r3, r2	@, _209, MEM[(struct USART_TypeDef *)1073821696B].CR1, tmp237
 1154 0044 A381     		strh	r3, [r4, #12]	@ movhi	@ _209, MEM[(struct USART_TypeDef *)1073821696B].CR1
 1155              	@ main.c:5357: 	USART1->BRR = (F_CPU+UART1_SPEED/2)/UART1_SPEED;
 1156 0046 A4F80880 		strh	r8, [r4, #8]	@ movhi	@ tmp243, MEM[(struct USART_TypeDef *)1073821696B].BRR
 1157              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 1158 004a C1F804E0 		str	lr, [r1, #4]	@ tmp245, MEM[(struct NVIC_Type *)3758153984B].ISER
 1159              	@ main.c:5361: 	RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 1160 004e DCF81C30 		ldr	r3, [ip, #28]	@ _196, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 1161 0052 DFF8D092 		ldr	r9, .L102+96	@ tmp510,
 1162 0056 43F40033 		orr	r3, r3, #131072	@ _197, _196,
 1163 005a CCF81C30 		str	r3, [ip, #28]	@ _197, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 1164              	@ main.c:5362: 	GPIOA->CRL = (GPIOA->CRL & 0xffff00ff) | 0x00004900; // PA2=TX, PA3=RX 
 1165 005e 0368     		ldr	r3, [r0]	@ _198, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 1166 0060 DFF8C482 		ldr	r8, .L102+100	@ tmp503,
 1167 0064 23F47F43 		bic	r3, r3, #65280	@ tmp249, _198,
 1168 0068 43F49243 		orr	r3, r3, #18688	@ _200, tmp249,
 1169 006c 0360     		str	r3, [r0]	@ _200, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 1170              	@ main.c:5363: 	USART2->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 1171 006e BB89     		ldrh	r3, [r7, #12]	@, MEM[(struct USART_TypeDef *)1073759232B].CR1
 1172              	@ main.c:404: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 1173 0070 0320     		movs	r0, #3	@,
 1174              	@ main.c:5363: 	USART2->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 1175 0072 1A43     		orrs	r2, r2, r3	@, _202, tmp237, MEM[(struct USART_TypeDef *)1073759232B].CR1
 1176 0074 BA81     		strh	r2, [r7, #12]	@ movhi	@ _202, MEM[(struct USART_TypeDef *)1073759232B].CR1
 1177              	@ main.c:404: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 1178 0076 974B     		ldr	r3, .L102+16	@ tmp522,
 1179 0078 974A     		ldr	r2, .L102+20	@ tmp523,
 1180              	@ main.c:5364: 	USART2->BRR = ((F_CPU+UART2_SPEED/2)/UART2_SPEED)/2;
 1181 007a 3E81     		strh	r6, [r7, #8]	@ movhi	@ tmp261, MEM[(struct USART_TypeDef *)1073759232B].BRR
 1182              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 1183 007c 4D60     		str	r5, [r1, #4]	@ tmp263, MEM[(struct NVIC_Type *)3758153984B].ISER
 1184              	@ main.c:404: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 1185 007e 1A60     		str	r2, [r3]	@ tmp523, PutChar
 1186 0080 FFF7FEFF 		bl	tr_pen_color	@
 1187              	@ main.c:405: 		UaPutS("\f UART1 "); UaPutS (uint2str( (F_CPU/1)/(1*USART1->BRR-1),buf));	
 1188 0084 9548     		ldr	r0, .L102+24	@,
 1189 0086 FFF7FEFF 		bl	UaPutS	@
 1190 008a 2389     		ldrh	r3, [r4, #8]	@, MEM[(struct USART_TypeDef *)1073821696B].BRR
 1191 008c 9448     		ldr	r0, .L102+28	@ tmp274,
 1192 008e 013B     		subs	r3, r3, #1	@ tmp271, MEM[(struct USART_TypeDef *)1073821696B].BRR,
 1193 0090 B0FBF3F0 		udiv	r0, r0, r3	@, tmp274, tmp271
 1194 0094 05A9     		add	r1, sp, #20	@,,
 1195 0096 FFF7FEFF 		bl	uint2str	@
 1196 009a FFF7FEFF 		bl	UaPutS	@
 1197              	@ main.c:406: 		UaPutS (" b/s \r\n");
ARM GAS  /tmp/ccDfNsWv.s 			page 22


 1198 009e 9148     		ldr	r0, .L102+32	@,
 1199 00a0 FFF7FEFF 		bl	UaPutS	@
 1200              	@ main.c:428: 		i2weg[0]=0;    // Register
 1201 00a4 4FF4F854 		mov	r4, #7936	@ tmp277,
 1202              	@ main.c:426: 		i2c1r_init();
 1203 00a8 FFF7FEFF 		bl	i2c1r_init	@
 1204              	@ main.c:429: 		i2weg[1]=0x1f; // MSB Data
 1205 00ac 7723     		movs	r3, #119	@ tmp278,
 1206              	@ main.c:431: 		i2c1_write(INA219_ADDR,i2weg,3);
 1207 00ae 04A9     		add	r1, sp, #16	@ tmp524,,
 1208 00b0 0322     		movs	r2, #3	@,
 1209 00b2 8020     		movs	r0, #128	@,
 1210              	@ main.c:428: 		i2weg[0]=0;    // Register
 1211 00b4 ADF81040 		strh	r4, [sp, #16]	@ movhi	@ tmp277, MEM[(u08[3] *)&i2weg]
 1212              	@ main.c:429: 		i2weg[1]=0x1f; // MSB Data
 1213 00b8 8DF81230 		strb	r3, [sp, #18]	@ tmp278, MEM[(u08[3] *)&i2weg + 2B]
 1214              	@ main.c:433: 		i2weg[0]=5;    // Register
 1215 00bc 40F20514 		movw	r4, #261	@ tmp282,
 1216              	@ main.c:431: 		i2c1_write(INA219_ADDR,i2weg,3);
 1217 00c0 FFF7FEFF 		bl	i2c1_write	@
 1218              	@ main.c:434: 		i2weg[1]=0x1; // MSB Data
 1219 00c4 9523     		movs	r3, #149	@ tmp283,
 1220              	@ main.c:436: 		i2c1_write(INA219_ADDR,i2weg,3);
 1221 00c6 04A9     		add	r1, sp, #16	@ tmp525,,
 1222 00c8 0322     		movs	r2, #3	@,
 1223 00ca 8020     		movs	r0, #128	@,
 1224              	@ main.c:433: 		i2weg[0]=5;    // Register
 1225 00cc ADF81040 		strh	r4, [sp, #16]	@ movhi	@ tmp282, MEM[(u08[3] *)&i2weg]
 1226              	@ main.c:434: 		i2weg[1]=0x1; // MSB Data
 1227 00d0 8DF81230 		strb	r3, [sp, #18]	@ tmp283, MEM[(u08[3] *)&i2weg + 2B]
 1228              	@ main.c:436: 		i2c1_write(INA219_ADDR,i2weg,3);
 1229 00d4 FFF7FEFF 		bl	i2c1_write	@
 1230              	@ main.c:438: 		i2c1_read (INA219_ADDR,0,i2reg,2);
 1231 00d8 03AA     		add	r2, sp, #12	@ tmp526,,
 1232 00da 0223     		movs	r3, #2	@,
 1233 00dc 0021     		movs	r1, #0	@,
 1234 00de 8020     		movs	r0, #128	@,
 1235 00e0 FFF7FEFF 		bl	i2c1_read	@
 1236              	@ main.c:445: 		PB12_o = 0;		// rozladowanie
 1237 00e4 0022     		movs	r2, #0	@ tmp293,
 1238              	@ main.c:447: 		PB14_o = 1;   // dzwonek
 1239 00e6 0120     		movs	r0, #1	@ tmp297,
 1240              	@ main.c:443: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 1241 00e8 7F4D     		ldr	r5, .L102+36	@ tmp287,
 1242              	@ main.c:447: 		PB14_o = 1;   // dzwonek
 1243 00ea 8049     		ldr	r1, .L102+40	@ tmp296,
 1244              	@ main.c:443: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 1245 00ec 6B68     		ldr	r3, [r5, #4]	@ _7, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 1246              	@ main.c:445: 		PB12_o = 0;		// rozladowanie
 1247 00ee 804F     		ldr	r7, .L102+44	@ tmp292,
 1248              	@ main.c:443: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 1249 00f0 23F07F63 		bic	r3, r3, #267386880	@ tmp288, _7,
 1250 00f4 23F47023 		bic	r3, r3, #983040	@ tmp288, tmp288,
 1251              	@ main.c:446: 		PB13_o = 0;   // ladowanie
 1252 00f8 DFF80CC2 		ldr	ip, .L102+68	@ tmp294,
 1253              	@ main.c:443: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 1254 00fc 43F0AA63 		orr	r3, r3, #89128960	@ _9, tmp288,
ARM GAS  /tmp/ccDfNsWv.s 			page 23


 1255 0100 43F4A023 		orr	r3, r3, #327680	@ _9, _9,
 1256              	@ main.c:451: 		cap = (BKP->DR2<<16) + BKP->DR1;
 1257 0104 DFF80CE2 		ldr	lr, .L102+80	@ tmp298,
 1258              	@ main.c:470: 		PB13_o = 0;		PB12_o = 1;		beep=0; PB14_o = 1; // AP
 1259 0108 0192     		str	r2, [sp, #4]	@ tmp293, %sfp
 1260              	@ main.c:443: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 1261 010a 6B60     		str	r3, [r5, #4]	@ _9, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 1262              	@ main.c:445: 		PB12_o = 0;		// rozladowanie
 1263 010c 3A60     		str	r2, [r7]	@ tmp293, MEM[(volatile long unsigned int *)1109492144B]
 1264              	@ main.c:446: 		PB13_o = 0;   // ladowanie
 1265 010e CCF80020 		str	r2, [ip]	@ tmp293, MEM[(volatile long unsigned int *)1109492148B]
 1266              	@ main.c:447: 		PB14_o = 1;   // dzwonek
 1267 0112 0860     		str	r0, [r1]	@ tmp297, MEM[(volatile long unsigned int *)1109492152B]
 1268              	@ main.c:451: 		cap = (BKP->DR2<<16) + BKP->DR1;
 1269 0114 BEF80830 		ldrh	r3, [lr, #8]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR2
 1270 0118 BEF804E0 		ldrh	lr, [lr, #4]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR1
 1271 011c 754D     		ldr	r5, .L102+48	@ tmp500,
 1272              	@ main.c:471: 		trg1  = SysTick->VAL;	
 1273 011e 764E     		ldr	r6, .L102+52	@ tmp313,
 1274              	@ main.c:451: 		cap = (BKP->DR2<<16) + BKP->DR1;
 1275 0120 0EEB0343 		add	r3, lr, r3, lsl #16	@ tmp306, MEM[(struct BKP_TypeDef *)1073769472B].DR1, MEM[(struct BKP_Type
 1276 0124 2B60     		str	r3, [r5]	@ tmp306, cap
 1277              	@ main.c:470: 		PB13_o = 0;		PB12_o = 1;		beep=0; PB14_o = 1; // AP
 1278 0126 CCF80020 		str	r2, [ip]	@ tmp293, MEM[(volatile long unsigned int *)1109492148B]
 1279 012a 3860     		str	r0, [r7]	@ tmp297, MEM[(volatile long unsigned int *)1109492144B]
 1280 012c 0860     		str	r0, [r1]	@ tmp297, MEM[(volatile long unsigned int *)1109492152B]
 1281              	@ main.c:471: 		trg1  = SysTick->VAL;	
 1282 012e B368     		ldr	r3, [r6, #8]	@ _17, MEM[(struct SysTick_Type *)3758153744B].VAL
 1283              	@ main.c:473: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 1284 0130 3446     		mov	r4, r6	@ tmp316, tmp313
 1285              	@ main.c:471: 		trg1  = SysTick->VAL;	
 1286 0132 724E     		ldr	r6, .L102+56	@ tmp511,
 1287 0134 DFF8F4A1 		ldr	r10, .L102+104	@ tmp507,
 1288 0138 DFF8F4B1 		ldr	fp, .L102+108	@ tmp509,
 1289 013c 3360     		str	r3, [r6]	@ _17, trg1
 1290              	.L91:
 1291              	@ main.c:473: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 1292 013e D9F80030 		ldr	r3, [r9]	@ trg0.6_18, trg0
 1293 0142 A268     		ldr	r2, [r4, #8]	@ _19, MEM[(struct SysTick_Type *)3758153744B].VAL
 1294 0144 9B1A     		subs	r3, r3, r2	@ tmp317, trg0.6_18, _19
 1295 0146 6E4A     		ldr	r2, .L102+60	@ tmp527,
 1296 0148 9342     		cmp	r3, r2	@ tmp317, tmp527
 1297 014a 00F2F380 		bhi	.L101	@,
 1298              	.L77:
 1299              	@ main.c:511: 			if( (STCLK_MS*5000 < (trg1 - SysTick->VAL)) ){	
 1300 014e 3368     		ldr	r3, [r6]	@ trg1.28_82, trg1
 1301 0150 A268     		ldr	r2, [r4, #8]	@ _83, MEM[(struct SysTick_Type *)3758153744B].VAL
 1302 0152 9B1A     		subs	r3, r3, r2	@ tmp419, trg1.28_82, _83
 1303 0154 6B4A     		ldr	r2, .L102+64	@ tmp546,
 1304 0156 9342     		cmp	r3, r2	@ tmp419, tmp546
 1305 0158 40F29880 		bls	.L79	@,
 1306              	@ main.c:513: 				if(vacu > 2000 && vacu < 2750){
 1307 015c 6FF4FA63 		mvn	r3, #2000	@,
 1308 0160 B8F90020 		ldrsh	r2, [r8]	@ vacu.29_86, vacu
 1309              	@ main.c:512: 				trg1  = SysTick->VAL;	
 1310 0164 A168     		ldr	r1, [r4, #8]	@ _85, MEM[(struct SysTick_Type *)3758153744B].VAL
 1311              	@ main.c:513: 				if(vacu > 2000 && vacu < 2750){
ARM GAS  /tmp/ccDfNsWv.s 			page 24


 1312 0166 D318     		adds	r3, r2, r3	@ tmp425, vacu.29_86,
 1313 0168 9BB2     		uxth	r3, r3	@ tmp426, tmp425
 1314 016a B3F53B7F 		cmp	r3, #748	@ tmp426,
 1315              	@ main.c:512: 				trg1  = SysTick->VAL;	
 1316 016e 3160     		str	r1, [r6]	@ _85, trg1
 1317              	@ main.c:513: 				if(vacu > 2000 && vacu < 2750){
 1318 0170 79D8     		bhi	.L80	@,
 1319              	@ main.c:514: 					PB12_o = 0;
 1320 0172 0023     		movs	r3, #0	@ tmp428,
 1321 0174 5E49     		ldr	r1, .L102+44	@ tmp427,
 1322              	@ main.c:515: 					PB13_o = 0;
 1323 0176 644A     		ldr	r2, .L102+68	@ tmp429,
 1324              	@ main.c:514: 					PB12_o = 0;
 1325 0178 0B60     		str	r3, [r1]	@ tmp428, MEM[(volatile long unsigned int *)1109492144B]
 1326              	@ main.c:515: 					PB13_o = 0;
 1327 017a 1360     		str	r3, [r2]	@ tmp428, MEM[(volatile long unsigned int *)1109492148B]
 1328              	@ main.c:528: 			if( (STCLK_MS*500   < (trg2 - SysTick->VAL))) {
 1329 017c 634B     		ldr	r3, .L102+72	@ tmp576,
 1330 017e 644A     		ldr	r2, .L102+76	@ tmp434,
 1331 0180 1B68     		ldr	r3, [r3]	@ trg2.33_221, trg2
 1332 0182 A168     		ldr	r1, [r4, #8]	@ _226, MEM[(struct SysTick_Type *)3758153744B].VAL
 1333 0184 5B1A     		subs	r3, r3, r1	@ tmp433, trg2.33_221, _226
 1334 0186 9342     		cmp	r3, r2	@ tmp433, tmp434
 1335 0188 00F28781 		bhi	.L81	@,
 1336              	@ main.c:516: 					beep=1;
 1337 018c 0123     		movs	r3, #1	@ beep,
 1338 018e 0193     		str	r3, [sp, #4]	@ beep, %sfp
 1339              	.L82:
 1340              	@ main.c:537: 			if(p_Fifo1->rct){
 1341 0190 DBF80030 		ldr	r3, [fp]	@ p_Fifo1.34_98, p_Fifo1
 1342 0194 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.34_98->rct
 1343 0196 9BB2     		uxth	r3, r3	@ _99, p_Fifo1.34_98->rct
 1344 0198 002B     		cmp	r3, #0	@ _99
 1345 019a D0D0     		beq	.L91	@
 1346              	@ main.c:538: 				UART_getChar( (char*)&swh);
 1347 019c 0DF10B00 		add	r0, sp, #11	@ tmp555,,
 1348 01a0 FFF7FEFF 		bl	UART_getChar	@
 1349              	@ main.c:541: 				switch (swh)	{
 1350 01a4 9DF80B30 		ldrb	r3, [sp, #11]	@ zero_extendqisi2	@ swh, swh
 1351 01a8 613B     		subs	r3, r3, #97	@ tmp465, swh,
 1352 01aa 192B     		cmp	r3, #25	@ tmp465,
 1353 01ac C7D8     		bhi	.L91	@
 1354 01ae 01A2     		adr	r2, .L86	@ tmp521,
 1355 01b0 52F823F0 		ldr	pc, [r2, r3, lsl #2]	@ tmp521, tmp465
 1356              		.p2align 2
 1357              	.L86:
 1358 01b4 51020000 		.word	.L85+1
 1359 01b8 43020000 		.word	.L87+1
 1360 01bc 3F010000 		.word	.L91+1
 1361 01c0 2F020000 		.word	.L88+1
 1362 01c4 3F010000 		.word	.L91+1
 1363 01c8 3F010000 		.word	.L91+1
 1364 01cc 3F010000 		.word	.L91+1
 1365 01d0 3F010000 		.word	.L91+1
 1366 01d4 3F010000 		.word	.L91+1
 1367 01d8 3F010000 		.word	.L91+1
 1368 01dc 3F010000 		.word	.L91+1
ARM GAS  /tmp/ccDfNsWv.s 			page 25


 1369 01e0 3F010000 		.word	.L91+1
 1370 01e4 3F010000 		.word	.L91+1
 1371 01e8 3F010000 		.word	.L91+1
 1372 01ec 3F010000 		.word	.L91+1
 1373 01f0 3F010000 		.word	.L91+1
 1374 01f4 1D020000 		.word	.L89+1
 1375 01f8 3F010000 		.word	.L91+1
 1376 01fc 3F010000 		.word	.L91+1
 1377 0200 3F010000 		.word	.L91+1
 1378 0204 3F010000 		.word	.L91+1
 1379 0208 3F010000 		.word	.L91+1
 1380 020c 3F010000 		.word	.L91+1
 1381 0210 3F010000 		.word	.L91+1
 1382 0214 3F010000 		.word	.L91+1
 1383 0218 5B020000 		.word	.L90+1
 1384              		.p2align 1
 1385              	.L89:
 1386              	@ main.c:563: 					PB13_o = 0;
 1387 021c 0023     		movs	r3, #0	@ tmp487,
 1388              	@ main.c:565: 					PB14_o = 1;
 1389 021e 0122     		movs	r2, #1	@ tmp491,
 1390              	@ main.c:563: 					PB13_o = 0;
 1391 0220 3948     		ldr	r0, .L102+68	@ tmp486,
 1392              	@ main.c:564: 					PB12_o = 0;
 1393 0222 3349     		ldr	r1, .L102+44	@ tmp488,
 1394              	@ main.c:563: 					PB13_o = 0;
 1395 0224 0360     		str	r3, [r0]	@ tmp487, MEM[(volatile long unsigned int *)1109492148B]
 1396              	@ main.c:564: 					PB12_o = 0;
 1397 0226 0B60     		str	r3, [r1]	@ tmp487, MEM[(volatile long unsigned int *)1109492144B]
 1398              	@ main.c:565: 					PB14_o = 1;
 1399 0228 304B     		ldr	r3, .L102+40	@ tmp558,
 1400 022a 1A60     		str	r2, [r3]	@ tmp491, MEM[(volatile long unsigned int *)1109492152B]
 1401              	@ main.c:566: 					break;
 1402 022c 87E7     		b	.L91	@
 1403              	.L88:
 1404              	@ main.c:558: 					PB13_o = 0;
 1405 022e 0022     		movs	r2, #0	@ tmp481,
 1406              	@ main.c:559: 					PB12_o = 1;
 1407 0230 0123     		movs	r3, #1	@ tmp483,
 1408              	@ main.c:558: 					PB13_o = 0;
 1409 0232 3548     		ldr	r0, .L102+68	@ tmp480,
 1410              	@ main.c:559: 					PB12_o = 1;
 1411 0234 2E49     		ldr	r1, .L102+44	@ tmp482,
 1412              	.L100:
 1413              	@ main.c:558: 					PB13_o = 0;
 1414 0236 0260     		str	r2, [r0]	@ tmp481,
 1415              	@ main.c:560: 					beep=0; PB14_o = 1;
 1416 0238 0192     		str	r2, [sp, #4]	@ tmp481, %sfp
 1417 023a 2C4A     		ldr	r2, .L102+40	@ tmp557,
 1418              	@ main.c:559: 					PB12_o = 1;
 1419 023c 0B60     		str	r3, [r1]	@ tmp483,
 1420              	@ main.c:560: 					beep=0; PB14_o = 1;
 1421 023e 1360     		str	r3, [r2]	@ tmp483,
 1422              	@ main.c:561: 					break;
 1423 0240 7DE7     		b	.L91	@
 1424              	.L87:
 1425              	@ main.c:570: 					PB14_o = 1;
ARM GAS  /tmp/ccDfNsWv.s 			page 26


 1426 0242 0123     		movs	r3, #1	@ tmp494,
 1427              	@ main.c:569: 					beep  ^= 1;
 1428 0244 019A     		ldr	r2, [sp, #4]	@ beep, %sfp
 1429 0246 5A40     		eors	r2, r2, r3	@, beep, beep,
 1430 0248 0192     		str	r2, [sp, #4]	@ beep, %sfp
 1431              	@ main.c:570: 					PB14_o = 1;
 1432 024a 284A     		ldr	r2, .L102+40	@ tmp563,
 1433 024c 1360     		str	r3, [r2]	@ tmp494,
 1434              	@ main.c:472: 		while(1){
 1435 024e 76E7     		b	.L91	@
 1436              	.L85:
 1437              	@ main.c:553: 					PB12_o = 0;
 1438 0250 0022     		movs	r2, #0	@ tmp475,
 1439              	@ main.c:554: 					PB13_o = 1;
 1440 0252 0123     		movs	r3, #1	@ tmp477,
 1441              	@ main.c:553: 					PB12_o = 0;
 1442 0254 2648     		ldr	r0, .L102+44	@ tmp474,
 1443              	@ main.c:554: 					PB13_o = 1;
 1444 0256 2C49     		ldr	r1, .L102+68	@ tmp476,
 1445 0258 EDE7     		b	.L100	@
 1446              	.L90:
 1447              	@ main.c:544: 					cap = 0;
 1448 025a 0023     		movs	r3, #0	@ tmp467,
 1449              	@ main.c:545: 					BKP->DR1 = 0;
 1450 025c 2D4A     		ldr	r2, .L102+80	@ tmp468,
 1451              	@ main.c:544: 					cap = 0;
 1452 025e 2B60     		str	r3, [r5]	@ tmp467, cap
 1453              	@ main.c:545: 					BKP->DR1 = 0;
 1454 0260 9380     		strh	r3, [r2, #4]	@ movhi	@ tmp467, MEM[(struct BKP_TypeDef *)1073769472B].DR1
 1455              	@ main.c:546: 					BKP->DR2 = 0;
 1456 0262 1381     		strh	r3, [r2, #8]	@ movhi	@ tmp467, MEM[(struct BKP_TypeDef *)1073769472B].DR2
 1457              	@ main.c:551: 					break;
 1458 0264 6BE7     		b	.L91	@
 1459              	.L80:
 1460              	@ main.c:519: 				if(vacu > 4190 && cur < 100){
 1461 0266 41F25E03 		movw	r3, #4190	@ tmp435,
 1462 026a 9A42     		cmp	r2, r3	@ vacu.29_86, tmp435
 1463 026c 0EDD     		ble	.L79	@,
 1464              	@ main.c:519: 				if(vacu > 4190 && cur < 100){
 1465 026e 2A4B     		ldr	r3, .L102+84	@ tmp549,
 1466 0270 B3F90030 		ldrsh	r3, [r3]	@ cur, cur
 1467 0274 632B     		cmp	r3, #99	@ cur,
 1468 0276 09DC     		bgt	.L79	@,
 1469              	@ main.c:520: 					PB13_o = 0;
 1470 0278 0023     		movs	r3, #0	@ tmp439,
 1471              	@ main.c:521: 					PB12_o = 1;
 1472 027a 0120     		movs	r0, #1	@ tmp441,
 1473              	@ main.c:520: 					PB13_o = 0;
 1474 027c 224A     		ldr	r2, .L102+68	@ tmp438,
 1475              	@ main.c:521: 					PB12_o = 1;
 1476 027e 1C49     		ldr	r1, .L102+44	@ tmp440,
 1477              	@ main.c:520: 					PB13_o = 0;
 1478 0280 1360     		str	r3, [r2]	@ tmp439, MEM[(volatile long unsigned int *)1109492148B]
 1479              	@ main.c:523: 					BKP->DR1 = 0;
 1480 0282 244A     		ldr	r2, .L102+80	@ tmp444,
 1481              	@ main.c:521: 					PB12_o = 1;
 1482 0284 0860     		str	r0, [r1]	@ tmp441, MEM[(volatile long unsigned int *)1109492144B]
ARM GAS  /tmp/ccDfNsWv.s 			page 27


 1483              	@ main.c:522: 					cap = 0;
 1484 0286 2B60     		str	r3, [r5]	@ tmp439, cap
 1485              	@ main.c:523: 					BKP->DR1 = 0;
 1486 0288 9380     		strh	r3, [r2, #4]	@ movhi	@ tmp439, MEM[(struct BKP_TypeDef *)1073769472B].DR1
 1487              	@ main.c:524: 					BKP->DR2 = 0;
 1488 028a 1381     		strh	r3, [r2, #8]	@ movhi	@ tmp439, MEM[(struct BKP_TypeDef *)1073769472B].DR2
 1489              	.L79:
 1490              	@ main.c:528: 			if( (STCLK_MS*500   < (trg2 - SysTick->VAL))) {
 1491 028c 1F48     		ldr	r0, .L102+72	@ tmp575,
 1492 028e 204A     		ldr	r2, .L102+76	@ tmp453,
 1493 0290 0368     		ldr	r3, [r0]	@ trg2.33_90, trg2
 1494 0292 A168     		ldr	r1, [r4, #8]	@ _91, MEM[(struct SysTick_Type *)3758153744B].VAL
 1495 0294 5B1A     		subs	r3, r3, r1	@ tmp452, trg2.33_90, _91
 1496 0296 9342     		cmp	r3, r2	@ tmp452, tmp453
 1497 0298 7FF67AAF 		bls	.L82	@,
 1498              	@ main.c:529: 				trg2  = SysTick->VAL;	
 1499 029c A368     		ldr	r3, [r4, #8]	@ _93, MEM[(struct SysTick_Type *)3758153744B].VAL
 1500              	@ main.c:530: 				LED ^= 1;	
 1501 029e 1F4A     		ldr	r2, .L102+88	@ tmp456,
 1502              	@ main.c:529: 				trg2  = SysTick->VAL;	
 1503 02a0 0360     		str	r3, [r0]	@ _93, trg2
 1504              	@ main.c:530: 				LED ^= 1;	
 1505 02a2 1368     		ldr	r3, [r2]	@ _94, MEM[(volatile long unsigned int *)1109524916B]
 1506 02a4 83F00103 		eor	r3, r3, #1	@ _95, _94,
 1507 02a8 1360     		str	r3, [r2]	@ _95, MEM[(volatile long unsigned int *)1109524916B]
 1508              	@ main.c:531: 				if(beep){	PB14_o ^= 1; }
 1509 02aa 019B     		ldr	r3, [sp, #4]	@ beep, %sfp
 1510 02ac 002B     		cmp	r3, #0	@ beep
 1511 02ae 3FF46FAF 		beq	.L82	@
 1512              	.L92:
 1513              	@ main.c:531: 				if(beep){	PB14_o ^= 1; }
 1514 02b2 0123     		movs	r3, #1	@ beep,
 1515 02b4 0D4A     		ldr	r2, .L102+40	@ tmp553,
 1516 02b6 0193     		str	r3, [sp, #4]	@ beep, %sfp
 1517 02b8 1368     		ldr	r3, [r2]	@ _96, MEM[(volatile long unsigned int *)1109492152B]
 1518 02ba 83F00103 		eor	r3, r3, #1	@ _97, _96,
 1519 02be 1360     		str	r3, [r2]	@ _97, MEM[(volatile long unsigned int *)1109492152B]
 1520 02c0 66E7     		b	.L82	@
 1521              	.L103:
 1522 02c2 00BF     		.align	2
 1523              	.L102:
 1524 02c4 00080140 		.word	1073809408
 1525 02c8 00380140 		.word	1073821696
 1526 02cc 00E100E0 		.word	-536813312
 1527 02d0 00440040 		.word	1073759232
 1528 02d4 00000000 		.word	PutChar
 1529 02d8 00000000 		.word	UART1_putc
 1530 02dc 00000000 		.word	.LC10
 1531 02e0 00A24A04 		.word	72000000
 1532 02e4 0C000000 		.word	.LC11
 1533 02e8 000C0140 		.word	1073810432
 1534 02ec B8812142 		.word	1109492152
 1535 02f0 B0812142 		.word	1109492144
 1536 02f4 00000000 		.word	.LANCHOR2
 1537 02f8 10E000E0 		.word	-536813552
 1538 02fc 00000000 		.word	trg1
 1539 0300 40548900 		.word	9000000
ARM GAS  /tmp/ccDfNsWv.s 			page 28


 1540 0304 40A5AE02 		.word	45000000
 1541 0308 B4812142 		.word	1109492148
 1542 030c 00000000 		.word	trg2
 1543 0310 20AA4400 		.word	4500000
 1544 0314 006C0040 		.word	1073769472
 1545 0318 00000000 		.word	.LANCHOR4
 1546 031c B4012242 		.word	1109524916
 1547 0320 00100240 		.word	1073876992
 1548 0324 00000000 		.word	trg0
 1549 0328 00000000 		.word	.LANCHOR5
 1550 032c 00000000 		.word	.LANCHOR7
 1551 0330 00000000 		.word	p_Fifo1
 1552              	.L101:
 1553              	@ main.c:478: 				i2c1_read( INA219_ADDR,2,i2reg,2);
 1554 0334 0223     		movs	r3, #2	@,
 1555              	@ main.c:474: 				trg0  = SysTick->VAL;
 1556 0336 D4F808C0 		ldr	ip, [r4, #8]	@ _21, MEM[(struct SysTick_Type *)3758153744B].VAL
 1557              	@ main.c:478: 				i2c1_read( INA219_ADDR,2,i2reg,2);
 1558 033a 1946     		mov	r1, r3	@,
 1559 033c 03AA     		add	r2, sp, #12	@ tmp528,,
 1560 033e 8020     		movs	r0, #128	@,
 1561              	@ main.c:474: 				trg0  = SysTick->VAL;
 1562 0340 C9F800C0 		str	ip, [r9]	@ _21, trg0
 1563              	@ main.c:478: 				i2c1_read( INA219_ADDR,2,i2reg,2);
 1564 0344 FFF7FEFF 		bl	i2c1_read	@
 1565              	@ main.c:479: 				vbus = ((i2reg[1] | (i2reg[0]<<8))>>3)*515/128 ;
 1566 0348 BDF80C20 		ldrh	r2, [sp, #12]	@, MEM[(u08[2] *)&i2reg]
 1567 034c 574F     		ldr	r7, .L104	@ tmp530,
 1568 034e 52BA     		rev16	r2, r2	@ tmp323, MEM[(u08[2] *)&i2reg]
 1569 0350 C2F3CC02 		ubfx	r2, r2, #3, #13	@ tmp326, tmp323,,
 1570 0354 02EB022C 		add	ip, r2, r2, lsl #8	@ tmp329, tmp326, tmp326,
 1571 0358 02EB4C02 		add	r2, r2, ip, lsl #1	@ tmp331, tmp326, tmp329,
 1572 035c 4FEAE21C 		asr	ip, r2, #7	@ tmp332, tmp331,
 1573              	@ main.c:483: 				i2c1_read( INA219_ADDR,4,i2reg,2);
 1574 0360 0223     		movs	r3, #2	@,
 1575 0362 03AA     		add	r2, sp, #12	@ tmp529,,
 1576 0364 0421     		movs	r1, #4	@,
 1577 0366 8020     		movs	r0, #128	@,
 1578              	@ main.c:479: 				vbus = ((i2reg[1] | (i2reg[0]<<8))>>3)*515/128 ;
 1579 0368 A7F800C0 		strh	ip, [r7]	@ movhi	@ tmp332, vbus
 1580              	@ main.c:483: 				i2c1_read( INA219_ADDR,4,i2reg,2);
 1581 036c FFF7FEFF 		bl	i2c1_read	@
 1582              	@ main.c:485: 				vacu = vbus + cur*108/1000;
 1583 0370 6C22     		movs	r2, #108	@ tmp344,
 1584              	@ main.c:484: 				cur = ((i2reg[1]) | (i2reg[0]<<8)) ;
 1585 0372 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2	@ i2reg, i2reg
 1586 0376 9DF80D10 		ldrb	r1, [sp, #13]	@ zero_extendqisi2	@ i2reg, i2reg
 1587              	@ main.c:485: 				vacu = vbus + cur*108/1000;
 1588 037a B7F800C0 		ldrh	ip, [r7]	@, vbus
 1589              	@ main.c:484: 				cur = ((i2reg[1]) | (i2reg[0]<<8)) ;
 1590 037e 41EA0321 		orr	r1, r1, r3, lsl #8	@ tmp340, i2reg, i2reg,
 1591 0382 09B2     		sxth	r1, r1	@ _38, tmp340
 1592              	@ main.c:485: 				vacu = vbus + cur*108/1000;
 1593 0384 02FB01F2 		mul	r2, r2, r1	@ tmp343, tmp344, _38
 1594 0388 494F     		ldr	r7, .L104+4	@ tmp532,
 1595              	@ main.c:487: 				cap += abs(cur);
 1596 038a 81EAE170 		eor	r0, r1, r1, asr #31	@ tmp364, _38, _38,
ARM GAS  /tmp/ccDfNsWv.s 			page 29


 1597              	@ main.c:485: 				vacu = vbus + cur*108/1000;
 1598 038e 87FB023E 		smull	r3, lr, r7, r2	@ tmp517, tmp346, tmp532, tmp343
 1599 0392 D317     		asrs	r3, r2, #31	@ tmp349, tmp343,
 1600 0394 C3EBAE13 		rsb	r3, r3, lr, asr #6	@ tmp345, tmp349, tmp346,
 1601 0398 6344     		add	r3, r3, ip	@ tmp353, vbus
 1602 039a 1BB2     		sxth	r3, r3	@ _46, tmp353
 1603              	@ main.c:486: 				pow = vacu*cur/1000;
 1604 039c 01FB03FC 		mul	ip, r1, r3	@ tmp357, _38, _46
 1605 03a0 87FB0C2E 		smull	r2, lr, r7, ip	@ tmp518, tmp359, tmp533, tmp357
 1606              	@ main.c:487: 				cap += abs(cur);
 1607 03a4 2A68     		ldr	r2, [r5]	@ cap, cap
 1608 03a6 A0EBE170 		sub	r0, r0, r1, asr #31	@ tmp364, tmp364, _38,
 1609              	@ main.c:484: 				cur = ((i2reg[1]) | (i2reg[0]<<8)) ;
 1610 03aa 424F     		ldr	r7, .L104+8	@ tmp534,
 1611              	@ main.c:487: 				cap += abs(cur);
 1612 03ac 1044     		add	r0, r0, r2	@ _54, cap
 1613              	@ main.c:484: 				cur = ((i2reg[1]) | (i2reg[0]<<8)) ;
 1614 03ae 3980     		strh	r1, [r7]	@ movhi	@ _38, cur
 1615              	@ main.c:485: 				vacu = vbus + cur*108/1000;
 1616 03b0 A8F80030 		strh	r3, [r8]	@ movhi	@ _46, vacu
 1617              	@ main.c:487: 				cap += abs(cur);
 1618 03b4 2860     		str	r0, [r5]	@ _54, cap
 1619              	@ main.c:488: 				BKP->DR1 = cap & 0x00ff;
 1620 03b6 404A     		ldr	r2, .L104+12	@ tmp371,
 1621 03b8 C1B2     		uxtb	r1, r0	@ _56, _54
 1622              	@ main.c:489: 				BKP->DR2 = cap>>16;
 1623 03ba 030C     		lsrs	r3, r0, #16	@ _58, _54,
 1624              	@ main.c:486: 				pow = vacu*cur/1000;
 1625 03bc 4FEAEC7C 		asr	ip, ip, #31	@ tmp362, tmp357,
 1626 03c0 3E48     		ldr	r0, .L104+16	@ tmp535,
 1627 03c2 CCEBAE1C 		rsb	ip, ip, lr, asr #6	@ tmp358, tmp362, tmp359,
 1628 03c6 A0F800C0 		strh	ip, [r0]	@ movhi	@ tmp358, pow
 1629              	@ main.c:488: 				BKP->DR1 = cap & 0x00ff;
 1630 03ca 9180     		strh	r1, [r2, #4]	@ movhi	@ _56, MEM[(struct BKP_TypeDef *)1073769472B].DR1
 1631              	@ main.c:489: 				BKP->DR2 = cap>>16;
 1632 03cc 1381     		strh	r3, [r2, #8]	@ movhi	@ _58, MEM[(struct BKP_TypeDef *)1073769472B].DR2
 1633              	@ main.c:494: 				unt2uart (cnt++,3);
 1634 03ce 9AF80000 		ldrb	r0, [r10]	@ zero_extendqisi2	@ cnt.16_59, cnt
 1635              	@ main.c:493: 				PutChar = UART1_putc;
 1636 03d2 3B4A     		ldr	r2, .L104+20	@ tmp536,
 1637 03d4 3B4F     		ldr	r7, .L104+24	@ tmp537,
 1638              	@ main.c:494: 				unt2uart (cnt++,3);
 1639 03d6 431C     		adds	r3, r0, #1	@ tmp380, cnt.16_59,
 1640 03d8 0321     		movs	r1, #3	@,
 1641 03da 8AF80030 		strb	r3, [r10]	@ tmp380, cnt
 1642              	@ main.c:493: 				PutChar = UART1_putc;
 1643 03de 1760     		str	r7, [r2]	@ tmp537, PutChar
 1644              	@ main.c:494: 				unt2uart (cnt++,3);
 1645 03e0 FFF7FEFF 		bl	unt2uart	@
 1646              	@ main.c:496: 				int2uart (cur  ,5,0);				UaPutS("mA");
 1647 03e4 334F     		ldr	r7, .L104+8	@ tmp538,
 1648              	@ main.c:495: 				int2uart (vacu ,4,3);				UaPutS("V");
 1649 03e6 0322     		movs	r2, #3	@,
 1650 03e8 0421     		movs	r1, #4	@,
 1651 03ea B8F90000 		ldrsh	r0, [r8]	@, vacu
 1652 03ee FFF7FEFF 		bl	int2uart	@
 1653 03f2 3548     		ldr	r0, .L104+28	@,
ARM GAS  /tmp/ccDfNsWv.s 			page 30


 1654 03f4 FFF7FEFF 		bl	UaPutS	@
 1655              	@ main.c:496: 				int2uart (cur  ,5,0);				UaPutS("mA");
 1656 03f8 0022     		movs	r2, #0	@,
 1657 03fa 0521     		movs	r1, #5	@,
 1658 03fc B7F90000 		ldrsh	r0, [r7]	@, cur
 1659 0400 FFF7FEFF 		bl	int2uart	@
 1660 0404 3148     		ldr	r0, .L104+32	@,
 1661 0406 FFF7FEFF 		bl	UaPutS	@
 1662              	@ main.c:497: 				int2uart (pow  ,4,3);				UaPutS("W");
 1663 040a 2C48     		ldr	r0, .L104+16	@ tmp539,
 1664 040c 0322     		movs	r2, #3	@,
 1665 040e 0421     		movs	r1, #4	@,
 1666 0410 B0F90000 		ldrsh	r0, [r0]	@, pow
 1667 0414 FFF7FEFF 		bl	int2uart	@
 1668 0418 2D48     		ldr	r0, .L104+36	@,
 1669 041a FFF7FEFF 		bl	UaPutS	@
 1670              	@ main.c:498: 				int2uart (cap/36  ,6,2);	UaPutS("mAh");
 1671 041e 2868     		ldr	r0, [r5]	@ cap, cap
 1672 0420 2C49     		ldr	r1, .L104+40	@ tmp540,
 1673 0422 0222     		movs	r2, #2	@,
 1674 0424 A1FB00C0 		umull	ip, r0, r1, r0	@ tmp519, tmp394, tmp540, cap
 1675 0428 0621     		movs	r1, #6	@,
 1676 042a C008     		lsrs	r0, r0, #3	@, tmp394,
 1677 042c FFF7FEFF 		bl	int2uart	@
 1678 0430 2948     		ldr	r0, .L104+44	@,
 1679 0432 FFF7FEFF 		bl	UaPutS	@
 1680              	@ main.c:499: 				UaPutS("\r ");
 1681 0436 2948     		ldr	r0, .L104+48	@,
 1682 0438 FFF7FEFF 		bl	UaPutS	@
 1683              	@ main.c:501: 				PutChar = UART2_putc; //przypisanie callback 
 1684 043c 284F     		ldr	r7, .L104+52	@ tmp542,
 1685 043e 204B     		ldr	r3, .L104+20	@ tmp541,
 1686              	@ main.c:502: 				int2uarz (vacu ,4,3); 			UaPutC(',');
 1687 0440 0322     		movs	r2, #3	@,
 1688              	@ main.c:501: 				PutChar = UART2_putc; //przypisanie callback 
 1689 0442 1F60     		str	r7, [r3]	@ tmp542, PutChar
 1690              	@ main.c:502: 				int2uarz (vacu ,4,3); 			UaPutC(',');
 1691 0444 0421     		movs	r1, #4	@,
 1692 0446 B8F90000 		ldrsh	r0, [r8]	@, vacu
 1693              	@ main.c:503: 				int2uarz (cur  ,4,3); 			UaPutC(',');
 1694 044a 1A4F     		ldr	r7, .L104+8	@ tmp543,
 1695              	@ main.c:502: 				int2uarz (vacu ,4,3); 			UaPutC(',');
 1696 044c FFF7FEFF 		bl	int2uarz	@
 1697 0450 2C20     		movs	r0, #44	@,
 1698 0452 FFF7FEFF 		bl	UaPutC	@
 1699              	@ main.c:503: 				int2uarz (cur  ,4,3); 			UaPutC(',');
 1700 0456 0322     		movs	r2, #3	@,
 1701 0458 0421     		movs	r1, #4	@,
 1702 045a B7F90000 		ldrsh	r0, [r7]	@, cur
 1703 045e FFF7FEFF 		bl	int2uarz	@
 1704 0462 2C20     		movs	r0, #44	@,
 1705 0464 FFF7FEFF 		bl	UaPutC	@
 1706              	@ main.c:504: 				int2uarz (pow  ,4,3); 			UaPutC(',');
 1707 0468 1448     		ldr	r0, .L104+16	@ tmp544,
 1708 046a 0322     		movs	r2, #3	@,
 1709 046c 0421     		movs	r1, #4	@,
 1710 046e B0F90000 		ldrsh	r0, [r0]	@, pow
ARM GAS  /tmp/ccDfNsWv.s 			page 31


 1711 0472 FFF7FEFF 		bl	int2uarz	@
 1712 0476 2C20     		movs	r0, #44	@,
 1713 0478 FFF7FEFF 		bl	UaPutC	@
 1714              	@ main.c:505: 				int2uarz (cap/36 ,6,5);
 1715 047c 2868     		ldr	r0, [r5]	@ cap, cap
 1716 047e 1549     		ldr	r1, .L104+40	@ tmp545,
 1717 0480 0522     		movs	r2, #5	@,
 1718 0482 A1FB0030 		umull	r3, r0, r1, r0	@ tmp520, tmp409, tmp545, cap
 1719 0486 0621     		movs	r1, #6	@,
 1720 0488 C008     		lsrs	r0, r0, #3	@, tmp409,
 1721 048a FFF7FEFF 		bl	int2uarz	@
 1722              	@ main.c:507: 				cnt++;
 1723 048e 9AF80030 		ldrb	r3, [r10]	@ zero_extendqisi2	@ cnt, cnt
 1724 0492 0133     		adds	r3, r3, #1	@ tmp415, cnt,
 1725 0494 8AF80030 		strb	r3, [r10]	@ tmp415, cnt
 1726 0498 59E6     		b	.L77	@
 1727              	.L81:
 1728              	@ main.c:529: 				trg2  = SysTick->VAL;	
 1729 049a A368     		ldr	r3, [r4, #8]	@ _103, MEM[(struct SysTick_Type *)3758153744B].VAL
 1730 049c 1149     		ldr	r1, .L104+56	@ tmp573,
 1731              	@ main.c:530: 				LED ^= 1;	
 1732 049e 124A     		ldr	r2, .L104+60	@ tmp497,
 1733              	@ main.c:529: 				trg2  = SysTick->VAL;	
 1734 04a0 0B60     		str	r3, [r1]	@ _103, trg2
 1735              	@ main.c:530: 				LED ^= 1;	
 1736 04a2 1368     		ldr	r3, [r2]	@ _224, MEM[(volatile long unsigned int *)1109524916B]
 1737 04a4 83F00103 		eor	r3, r3, #1	@ _108, _224,
 1738 04a8 1360     		str	r3, [r2]	@ _108, MEM[(volatile long unsigned int *)1109524916B]
 1739 04aa 02E7     		b	.L92	@
 1740              	.L105:
 1741              		.align	2
 1742              	.L104:
 1743 04ac 00000000 		.word	.LANCHOR3
 1744 04b0 D34D6210 		.word	274877907
 1745 04b4 00000000 		.word	.LANCHOR4
 1746 04b8 006C0040 		.word	1073769472
 1747 04bc 00000000 		.word	.LANCHOR6
 1748 04c0 00000000 		.word	PutChar
 1749 04c4 00000000 		.word	UART1_putc
 1750 04c8 00000000 		.word	.LC23
 1751 04cc 04000000 		.word	.LC24
 1752 04d0 08000000 		.word	.LC25
 1753 04d4 398EE338 		.word	954437177
 1754 04d8 0C000000 		.word	.LC26
 1755 04dc 10000000 		.word	.LC27
 1756 04e0 00000000 		.word	UART2_putc
 1757 04e4 00000000 		.word	trg2
 1758 04e8 B4012242 		.word	1109524916
 1759              		.size	lion_updown, .-lion_updown
 1760              		.section	.text.uht,"ax",%progbits
 1761              		.align	1
 1762              		.p2align 2,,3
 1763              		.global	uht
 1764              		.syntax unified
 1765              		.thumb
 1766              		.thumb_func
 1767              		.fpu softvfp
ARM GAS  /tmp/ccDfNsWv.s 			page 32


 1768              		.type	uht, %function
 1769              	uht:
 1770              		@ args = 0, pretend = 0, frame = 0
 1771              		@ frame_needed = 0, uses_anonymous_args = 0
 1772              		@ link register save eliminated.
 1773              	@ main.c:585: 		GPIOB->CRL = (GPIOB->CRL & 0xffffff0f) | 0x00000060;
 1774 0000 034A     		ldr	r2, .L107	@ tmp113,
 1775 0002 1368     		ldr	r3, [r2]	@ _1, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 1776 0004 23F0F003 		bic	r3, r3, #240	@ tmp114, _1,
 1777 0008 43F06003 		orr	r3, r3, #96	@ _3, tmp114,
 1778 000c 1360     		str	r3, [r2]	@ _3, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 1779              	@ main.c:655: 	} 
 1780 000e 7047     		bx	lr	@
 1781              	.L108:
 1782              		.align	2
 1783              	.L107:
 1784 0010 000C0140 		.word	1073810432
 1785              		.size	uht, .-uht
 1786              		.section	.text.rtc_calibrate,"ax",%progbits
 1787              		.align	1
 1788              		.p2align 2,,3
 1789              		.global	rtc_calibrate
 1790              		.syntax unified
 1791              		.thumb
 1792              		.thumb_func
 1793              		.fpu softvfp
 1794              		.type	rtc_calibrate, %function
 1795              	rtc_calibrate:
 1796              		@ args = 0, pretend = 0, frame = 24
 1797              		@ frame_needed = 0, uses_anonymous_args = 0
 1798 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}	@
 1799 0004 87B0     		sub	sp, sp, #28	@,,
 1800              	@ main.c:661: 		RtcInit();
 1801 0006 FFF7FEFF 		bl	RtcInit	@
 1802              	@ main.c:662: 		i2c1_init();
 1803 000a FFF7FEFF 		bl	i2c1_init	@
 1804              	@ main.c:663: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 1805 000e 3D48     		ldr	r0, .L132	@ tmp140,
 1806              	@ main.c:664: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 1807 0010 3D49     		ldr	r1, .L132+4	@ tmp145,
 1808              	@ main.c:663: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 1809 0012 4368     		ldr	r3, [r0, #4]	@ _2, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 1810              	@ main.c:666: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 1811 0014 3D4A     		ldr	r2, .L132+8	@ tmp148,
 1812              	@ main.c:663: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 1813 0016 23F0F023 		bic	r3, r3, #-268374016	@ tmp141, _2,
 1814 001a 23F47023 		bic	r3, r3, #983040	@ tmp141, tmp141,
 1815 001e 43F01023 		orr	r3, r3, #268439552	@ _4, tmp141,
 1816 0022 43F48033 		orr	r3, r3, #65536	@ _4, _4,
 1817 0026 4360     		str	r3, [r0, #4]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 1818              	@ main.c:664: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 1819 0028 0B68     		ldr	r3, [r1]	@ _5, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 1820              	@ main.c:670: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 1821 002a 3948     		ldr	r0, .L132+12	@ tmp157,
 1822              	@ main.c:664: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 1823 002c 23F47F23 		bic	r3, r3, #1044480	@ tmp146, _5,
 1824 0030 43F48833 		orr	r3, r3, #69632	@ _7, tmp146,
ARM GAS  /tmp/ccDfNsWv.s 			page 33


 1825              	@ main.c:666: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 1826 0034 374F     		ldr	r7, .L132+16	@ tmp149,
 1827              	@ main.c:667: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 1828 0036 384E     		ldr	r6, .L132+20	@ tmp151,
 1829              	@ main.c:668: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 1830 0038 384D     		ldr	r5, .L132+24	@ tmp153,
 1831              	@ main.c:669: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 1832 003a 394C     		ldr	r4, .L132+28	@ tmp155,
 1833              	@ main.c:664: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 1834 003c 0B60     		str	r3, [r1]	@ _7, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 1835              	@ main.c:666: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 1836 003e 5760     		str	r7, [r2, #4]	@ tmp149, oled_hw.sck
 1837              	@ main.c:667: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 1838 0040 1660     		str	r6, [r2]	@ tmp151, oled_hw.mosi
 1839              	@ main.c:668: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 1840 0042 9560     		str	r5, [r2, #8]	@ tmp153, oled_hw.dc
 1841              	@ main.c:669: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 1842 0044 D460     		str	r4, [r2, #12]	@ tmp155, oled_hw.cs
 1843              	@ main.c:670: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 1844 0046 1061     		str	r0, [r2, #16]	@ tmp157, oled_hw.rst
 1845              	@ main.c:673: 		ssd1306_init();
 1846 0048 FFF7FEFF 		bl	ssd1306_init	@
 1847              	@ main.c:690: 		num2uart (tim/TIM_US,7,0);	
 1848 004c 0022     		movs	r2, #0	@,
 1849 004e 0721     		movs	r1, #7	@,
 1850 0050 1046     		mov	r0, r2	@,
 1851 0052 FFF7FEFF 		bl	num2uart	@
 1852              	@ main.c:693: 		num2uart (tim4,8,1);	
 1853 0056 0122     		movs	r2, #1	@,
 1854 0058 0821     		movs	r1, #8	@,
 1855 005a 0298     		ldr	r0, [sp, #8]	@, tim4
 1856 005c FFF7FEFF 		bl	num2uart	@
 1857              	@ main.c:711: 				while(!PB5_i)
 1858 0060 04F5FE44 		add	r4, r4, #32512	@ tmp173, tmp173,
 1859 0064 DFF8C880 		ldr	r8, .L132+44	@ tmp194,
 1860 0068 2E4E     		ldr	r6, .L132+32	@ tmp195,
 1861 006a 2F4F     		ldr	r7, .L132+36	@ tmp197,
 1862              	@ main.c:698: 			if( TIM_MS*500 < (trg0 - SysTick->VAL) ){
 1863 006c 2F4D     		ldr	r5, .L132+40	@ tmp163,
 1864 006e DFF8C490 		ldr	r9, .L132+48	@ tmp165,
 1865              	@ main.c:711: 				while(!PB5_i)
 1866 0072 6834     		adds	r4, r4, #104	@ tmp173, tmp173,
 1867              	.L110:
 1868              	@ main.c:698: 			if( TIM_MS*500 < (trg0 - SysTick->VAL) ){
 1869 0074 D8F80030 		ldr	r3, [r8]	@ trg0.44_10, trg0
 1870 0078 AA68     		ldr	r2, [r5, #8]	@ _11, MEM[(struct SysTick_Type *)3758153744B].VAL
 1871 007a 9B1A     		subs	r3, r3, r2	@ tmp164, trg0.44_10, _11
 1872 007c 4B45     		cmp	r3, r9	@ tmp164, tmp165
 1873 007e F9D9     		bls	.L110	@,
 1874              	@ main.c:699: 				trg0 = SysTick->VAL; 
 1875 0080 D5F808C0 		ldr	ip, [r5, #8]	@ _13, MEM[(struct SysTick_Type *)3758153744B].VAL
 1876              	@ main.c:701: 				i2c1_read( DS3231_ADDR,0,tm,3);
 1877 0084 0323     		movs	r3, #3	@,
 1878 0086 01AA     		add	r2, sp, #4	@ tmp203,,
 1879 0088 0021     		movs	r1, #0	@,
 1880 008a D020     		movs	r0, #208	@,
 1881              	@ main.c:699: 				trg0 = SysTick->VAL; 
ARM GAS  /tmp/ccDfNsWv.s 			page 34


 1882 008c C8F800C0 		str	ip, [r8]	@ _13, trg0
 1883              	@ main.c:701: 				i2c1_read( DS3231_ADDR,0,tm,3);
 1884 0090 FFF7FEFF 		bl	i2c1_read	@
 1885              	@ main.c:706: 				i2c1_read( DS3231_ADDR,0x0e,&ContReg,1);
 1886 0094 0123     		movs	r3, #1	@,
 1887 0096 0DF10302 		add	r2, sp, #3	@ tmp204,,
 1888 009a 0E21     		movs	r1, #14	@,
 1889 009c D020     		movs	r0, #208	@,
 1890 009e FFF7FEFF 		bl	i2c1_read	@
 1891              	.L111:
 1892              	@ main.c:711: 				while(!PB5_i)
 1893 00a2 2368     		ldr	r3, [r4]	@ _15, MEM[(volatile long unsigned int *)1109491988B]
 1894 00a4 2BB9     		cbnz	r3, .L113	@ _15,
 1895              	.L129:
 1896              	@ main.c:712: 				while(PB5_i) 	TIM_start();
 1897 00a6 2368     		ldr	r3, [r4]	@ _14,
 1898 00a8 002B     		cmp	r3, #0	@ _14
 1899 00aa FAD0     		beq	.L111	@
 1900              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 1901 00ac AB68     		ldr	r3, [r5, #8]	@ _46, MEM[(struct SysTick_Type *)3758153744B].VAL
 1902 00ae 3360     		str	r3, [r6]	@ _46, Timt
 1903 00b0 F9E7     		b	.L129	@
 1904              	.L113:
 1905              	@ main.c:713: 				while(!PB5_i)
 1906 00b2 2368     		ldr	r3, [r4]	@ _17, MEM[(volatile long unsigned int *)1109491988B]
 1907 00b4 3BB9     		cbnz	r3, .L116	@ _17,
 1908              	.L131:
 1909              	@ main.c:714: 				while(PB5_i)	TIM_stop(&tim4);
 1910 00b6 2368     		ldr	r3, [r4]	@ _16,
 1911 00b8 002B     		cmp	r3, #0	@ _16
 1912 00ba FAD0     		beq	.L113	@
 1913              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 1914 00bc 3368     		ldr	r3, [r6]	@ Timt.47_47, Timt
 1915 00be AA68     		ldr	r2, [r5, #8]	@ _48, MEM[(struct SysTick_Type *)3758153744B].VAL
 1916 00c0 9B1A     		subs	r3, r3, r2	@ _49, Timt.47_47, _48
 1917 00c2 0293     		str	r3, [sp, #8]	@ _49, MEM[(volatile u32 *)&tim4]
 1918 00c4 F7E7     		b	.L131	@
 1919              	.L116:
 1920              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 1921 00c6 40F25241 		movw	r1, #1106	@ tmp187,
 1922              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 1923 00ca AB68     		ldr	r3, [r5, #8]	@ _54, MEM[(struct SysTick_Type *)3758153744B].VAL
 1924 00cc 3360     		str	r3, [r6]	@ _54, Timt
 1925              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 1926 00ce AB68     		ldr	r3, [r5, #8]	@ _50, MEM[(struct SysTick_Type *)3758153744B].VAL
 1927 00d0 3B60     		str	r3, [r7]	@ _50, delay_us
 1928              	.L118:
 1929              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 1930 00d2 3B68     		ldr	r3, [r7]	@ delay_us.48_51, delay_us
 1931 00d4 AA68     		ldr	r2, [r5, #8]	@ _52, MEM[(struct SysTick_Type *)3758153744B].VAL
 1932 00d6 9B1A     		subs	r3, r3, r2	@ tmp186, delay_us.48_51, _52
 1933 00d8 8B42     		cmp	r3, r1	@ tmp186, tmp187
 1934 00da FAD9     		bls	.L118	@,
 1935              	@ main.c:719: 				int2str(tim4,tbuf,6,0); 
 1936 00dc 03A9     		add	r1, sp, #12	@ tmp205,,
 1937 00de 0023     		movs	r3, #0	@,
 1938 00e0 0622     		movs	r2, #6	@,
ARM GAS  /tmp/ccDfNsWv.s 			page 35


 1939 00e2 0298     		ldr	r0, [sp, #8]	@, tim4
 1940 00e4 FFF7FEFF 		bl	int2str	@
 1941              	@ main.c:720: 				int2str(123,tbuf,6,0); 
 1942 00e8 0023     		movs	r3, #0	@,
 1943 00ea 03A9     		add	r1, sp, #12	@ tmp206,,
 1944 00ec 0622     		movs	r2, #6	@,
 1945 00ee 7B20     		movs	r0, #123	@,
 1946 00f0 FFF7FEFF 		bl	int2str	@
 1947              	@ main.c:722: 				oled_str16(0,0,tbuf);
 1948 00f4 0021     		movs	r1, #0	@,
 1949 00f6 03AA     		add	r2, sp, #12	@ tmp207,,
 1950 00f8 0846     		mov	r0, r1	@,
 1951 00fa FFF7FEFF 		bl	oled_str16	@
 1952              	@ main.c:726: 				oled_refresh_gram();
 1953 00fe FFF7FEFF 		bl	oled_refresh_gram	@
 1954 0102 B7E7     		b	.L110	@
 1955              	.L133:
 1956              		.align	2
 1957              	.L132:
 1958 0104 00080140 		.word	1073809408
 1959 0108 000C0140 		.word	1073810432
 1960 010c 00000000 		.word	oled_hw
 1961 0110 BC012142 		.word	1109459388
 1962 0114 90812142 		.word	1109492112
 1963 0118 8C812142 		.word	1109492108
 1964 011c B0012142 		.word	1109459376
 1965 0120 AC012142 		.word	1109459372
 1966 0124 00000000 		.word	Timt
 1967 0128 00000000 		.word	delay_us
 1968 012c 10E000E0 		.word	-536813552
 1969 0130 00000000 		.word	trg0
 1970 0134 20AA4400 		.word	4500000
 1971              		.size	rtc_calibrate, .-rtc_calibrate
 1972              		.section	.text.testwsk,"ax",%progbits
 1973              		.align	1
 1974              		.p2align 2,,3
 1975              		.global	testwsk
 1976              		.syntax unified
 1977              		.thumb
 1978              		.thumb_func
 1979              		.fpu softvfp
 1980              		.type	testwsk, %function
 1981              	testwsk:
 1982              		@ args = 0, pretend = 0, frame = 0
 1983              		@ frame_needed = 0, uses_anonymous_args = 0
 1984              		@ link register save eliminated.
 1985              	@ main.c:744: 	}
 1986 0000 7047     		bx	lr	@
 1987              		.size	testwsk, .-testwsk
 1988 0002 00BF     		.section	.text.veml6075,"ax",%progbits
 1989              		.align	1
 1990              		.p2align 2,,3
 1991              		.global	veml6075
 1992              		.syntax unified
 1993              		.thumb
 1994              		.thumb_func
 1995              		.fpu softvfp
ARM GAS  /tmp/ccDfNsWv.s 			page 36


 1996              		.type	veml6075, %function
 1997              	veml6075:
 1998              		@ args = 0, pretend = 0, frame = 16
 1999              		@ frame_needed = 0, uses_anonymous_args = 0
 2000              	@ main.c:748: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='l';
 2001 0000 0123     		movs	r3, #1	@ tmp128,
 2002 0002 6C20     		movs	r0, #108	@ tmp131,
 2003 0004 264A     		ldr	r2, .L140	@ tmp126,
 2004              	@ main.c:765: 		LED=1;
 2005 0006 2749     		ldr	r1, .L140+4	@ tmp133,
 2006              	@ main.c:748: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='l';
 2007 0008 1268     		ldr	r2, [r2]	@ p_Fifo1.49_1, p_Fifo1
 2008              	@ main.c:745: void veml6075(void){
 2009 000a 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 2010              	@ main.c:767: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 2011 000e 264C     		ldr	r4, .L140+8	@ tmp135,
 2012              	@ main.c:748: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='l';
 2013 0010 9380     		strh	r3, [r2, #4]	@ movhi	@ tmp128, p_Fifo1.49_1->rct
 2014 0012 5380     		strh	r3, [r2, #2]	@ movhi	@ tmp128, p_Fifo1.49_1->rwi
 2015 0014 9071     		strb	r0, [r2, #6]	@ tmp131, p_Fifo1.49_1->rbuf
 2016              	@ main.c:765: 		LED=1;
 2017 0016 0B60     		str	r3, [r1]	@ tmp128, MEM[(volatile long unsigned int *)1109524916B]
 2018              	@ main.c:767: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 2019 0018 6368     		ldr	r3, [r4, #4]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 2020              	@ main.c:768: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2021 001a 2448     		ldr	r0, .L140+12	@ tmp140,
 2022              	@ main.c:767: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 2023 001c 23F0F023 		bic	r3, r3, #-268374016	@ tmp136, _4,
 2024 0020 23F47023 		bic	r3, r3, #983040	@ tmp136, tmp136,
 2025 0024 43F01023 		orr	r3, r3, #268439552	@ _6, tmp136,
 2026 0028 43F48033 		orr	r3, r3, #65536	@ _6, _6,
 2027 002c 6360     		str	r3, [r4, #4]	@ _6, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 2028              	@ main.c:768: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2029 002e 0268     		ldr	r2, [r0]	@ _7, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2030              	@ main.c:770: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 2031 0030 1F4B     		ldr	r3, .L140+16	@ tmp143,
 2032              	@ main.c:768: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2033 0032 22F47F22 		bic	r2, r2, #1044480	@ tmp141, _7,
 2034 0036 42F48832 		orr	r2, r2, #69632	@ _9, tmp141,
 2035 003a 0260     		str	r2, [r0]	@ _9, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2036              	@ main.c:770: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 2037 003c 1D4E     		ldr	r6, .L140+20	@ tmp144,
 2038              	@ main.c:773: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 2039 003e 1E48     		ldr	r0, .L140+24	@ tmp150,
 2040              	@ main.c:774: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 2041 0040 1E4A     		ldr	r2, .L140+28	@ tmp152,
 2042              	@ main.c:771: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 2043 0042 1F4D     		ldr	r5, .L140+32	@ tmp146,
 2044              	@ main.c:772: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 2045 0044 1F4C     		ldr	r4, .L140+36	@ tmp148,
 2046              	@ main.c:745: void veml6075(void){
 2047 0046 84B0     		sub	sp, sp, #16	@,,
 2048              	@ main.c:770: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 2049 0048 5E60     		str	r6, [r3, #4]	@ tmp144, oled_hw.sck
 2050              	@ main.c:800: 				LED^=1;
 2051 004a 8846     		mov	r8, r1	@ tmp163, tmp133
 2052              	@ main.c:771: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
ARM GAS  /tmp/ccDfNsWv.s 			page 37


 2053 004c 1D60     		str	r5, [r3]	@ tmp146, oled_hw.mosi
 2054              	@ main.c:792: 		oled_refresh_gram();
 2055 004e 0027     		movs	r7, #0	@ ivtmp.406,
 2056              	@ main.c:772: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 2057 0050 9C60     		str	r4, [r3, #8]	@ tmp148, oled_hw.dc
 2058              	@ main.c:773: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 2059 0052 D860     		str	r0, [r3, #12]	@ tmp150, oled_hw.cs
 2060              	@ main.c:774: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 2061 0054 1A61     		str	r2, [r3, #16]	@ tmp152, oled_hw.rst
 2062              	@ main.c:777: 		ssd1306_init();
 2063 0056 FFF7FEFF 		bl	ssd1306_init	@
 2064              	@ main.c:792: 		oled_refresh_gram();
 2065 005a FFF7FEFF 		bl	oled_refresh_gram	@
 2066 005e 1A4D     		ldr	r5, .L140+40	@ tmp166,
 2067              	@ main.c:795: 			if(STCLK_MS*20 < (trg0 - SysTick->VAL)){	
 2068 0060 1A4C     		ldr	r4, .L140+44	@ tmp154,
 2069 0062 1B4E     		ldr	r6, .L140+48	@ tmp156,
 2070              	.L136:
 2071 0064 2B68     		ldr	r3, [r5]	@ trg0.52_10, trg0
 2072 0066 A268     		ldr	r2, [r4, #8]	@ _11, MEM[(struct SysTick_Type *)3758153744B].VAL
 2073 0068 9B1A     		subs	r3, r3, r2	@ tmp155, trg0.52_10, _11
 2074 006a B342     		cmp	r3, r6	@ tmp155, tmp156
 2075 006c FAD9     		bls	.L136	@,
 2076              	@ main.c:796: 				trg0  = SysTick->VAL;	
 2077 006e D4F808C0 		ldr	ip, [r4, #8]	@ _13, MEM[(struct SysTick_Type *)3758153744B].VAL
 2078              	@ main.c:797: 				int2str(cnt++ ,tbuf,5,0);		oled_num24(0,0,tbuf);
 2079 0072 0023     		movs	r3, #0	@,
 2080 0074 0522     		movs	r2, #5	@,
 2081 0076 01A9     		add	r1, sp, #4	@ tmp167,,
 2082 0078 B8B2     		uxth	r0, r7	@, ivtmp.406
 2083              	@ main.c:796: 				trg0  = SysTick->VAL;	
 2084 007a C5F800C0 		str	ip, [r5]	@ _13, trg0
 2085              	@ main.c:797: 				int2str(cnt++ ,tbuf,5,0);		oled_num24(0,0,tbuf);
 2086 007e FFF7FEFF 		bl	int2str	@
 2087 0082 0021     		movs	r1, #0	@,
 2088 0084 01AA     		add	r2, sp, #4	@ tmp168,,
 2089 0086 0846     		mov	r0, r1	@,
 2090 0088 FFF7FEFF 		bl	oled_num24	@
 2091              	@ main.c:798: 				oled_refresh_gram();	
 2092 008c FFF7FEFF 		bl	oled_refresh_gram	@
 2093              	@ main.c:800: 				LED^=1;
 2094 0090 D8F80030 		ldr	r3, [r8]	@ _16, MEM[(volatile long unsigned int *)1109524916B]
 2095 0094 0137     		adds	r7, r7, #1	@ ivtmp.406, ivtmp.406,
 2096 0096 83F00103 		eor	r3, r3, #1	@ _17, _16,
 2097 009a C8F80030 		str	r3, [r8]	@ _17, MEM[(volatile long unsigned int *)1109524916B]
 2098 009e E1E7     		b	.L136	@
 2099              	.L141:
 2100              		.align	2
 2101              	.L140:
 2102 00a0 00000000 		.word	p_Fifo1
 2103 00a4 B4012242 		.word	1109524916
 2104 00a8 00080140 		.word	1073809408
 2105 00ac 000C0140 		.word	1073810432
 2106 00b0 00000000 		.word	oled_hw
 2107 00b4 90812142 		.word	1109492112
 2108 00b8 AC012142 		.word	1109459372
 2109 00bc BC012142 		.word	1109459388
ARM GAS  /tmp/ccDfNsWv.s 			page 38


 2110 00c0 8C812142 		.word	1109492108
 2111 00c4 B0012142 		.word	1109459376
 2112 00c8 00000000 		.word	trg0
 2113 00cc 10E000E0 		.word	-536813552
 2114 00d0 20BF0200 		.word	180000
 2115              		.size	veml6075, .-veml6075
 2116              		.section	.text.softSPI_w,"ax",%progbits
 2117              		.align	1
 2118              		.p2align 2,,3
 2119              		.global	softSPI_w
 2120              		.syntax unified
 2121              		.thumb
 2122              		.thumb_func
 2123              		.fpu softvfp
 2124              		.type	softSPI_w, %function
 2125              	softSPI_w:
 2126              		@ args = 0, pretend = 0, frame = 0
 2127              		@ frame_needed = 0, uses_anonymous_args = 0
 2128 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}	@
 2129              	@ main.c:920: 			if (byte & 0x80)			wMOSI = 1;
 2130 0004 4FF0010E 		mov	lr, #1	@ tmp152,
 2131              	@ main.c:916: uint8_t softSPI_w(uint8_t byte)	{
 2132 0008 0824     		movs	r4, #8	@ ivtmp_5,
 2133              	@ main.c:924: 			wSCK = 1; /* a slave latches input data bit */
 2134 000a F046     		mov	r8, lr	@ MEM[(volatile long unsigned int *)1109459348B], tmp152
 2135              	@ main.c:921: 			else			wMOSI = 0;
 2136 000c 0026     		movs	r6, #0	@ tmp151,
 2137 000e 1549     		ldr	r1, .L156	@ tmp149,
 2138 0010 DFF85CC0 		ldr	ip, .L156+12	@ tmp150,
 2139              	@ main.c:924: 			wSCK = 1; /* a slave latches input data bit */
 2140 0014 144D     		ldr	r5, .L156+4	@ tmp131,
 2141              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 2142 0016 154A     		ldr	r2, .L156+8	@ tmp133,
 2143              	@ main.c:926: 			if (wMISO)			byte |= 0x01;
 2144 0018 DFF85890 		ldr	r9, .L156+16	@ tmp138,
 2145              	.L148:
 2146              	@ main.c:920: 			if (byte & 0x80)			wMOSI = 1;
 2147 001c 0306     		lsls	r3, r0, #24	@, byte,
 2148 001e 4CBF     		ite	mi
 2149 0020 CCF800E0 		strmi	lr, [ip]	@ tmp152, MEM[(volatile long unsigned int *)1109459356B]
 2150              	@ main.c:921: 			else			wMOSI = 0;
 2151 0024 CCF80060 		strpl	r6, [ip]	@ tmp151, MEM[(volatile long unsigned int *)1109459356B]
 2152              	@ main.c:924: 			wSCK = 1; /* a slave latches input data bit */
 2153 0028 C5F80080 		str	r8, [r5]	@ MEM[(volatile long unsigned int *)1109459348B], MEM[(volatile long unsigned int *)1
 2154              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 2155 002c 9368     		ldr	r3, [r2, #8]	@ _18, MEM[(struct SysTick_Type *)3758153744B].VAL
 2156              	@ main.c:923: 			byte <<= 1;
 2157 002e 4000     		lsls	r0, r0, #1	@ tmp130, byte,
 2158 0030 C0B2     		uxtb	r0, r0	@ byte, tmp130
 2159              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 2160 0032 0B60     		str	r3, [r1]	@ _18, delay_us
 2161              	.L145:
 2162              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 2163 0034 0B68     		ldr	r3, [r1]	@ delay_us.48_19, delay_us
 2164 0036 9768     		ldr	r7, [r2, #8]	@ _20, MEM[(struct SysTick_Type *)3758153744B].VAL
 2165 0038 DB1B     		subs	r3, r3, r7	@ tmp137, delay_us.48_19, _20
 2166 003a 592B     		cmp	r3, #89	@ tmp137,
ARM GAS  /tmp/ccDfNsWv.s 			page 39


 2167 003c FAD9     		bls	.L145	@,
 2168              	@ main.c:926: 			if (wMISO)			byte |= 0x01;
 2169 003e D9F80030 		ldr	r3, [r9]	@ _2, MEM[(volatile long unsigned int *)1109459224B]
 2170 0042 0BB1     		cbz	r3, .L146	@ _2,
 2171              	@ main.c:926: 			if (wMISO)			byte |= 0x01;
 2172 0044 40F00100 		orr	r0, r0, #1	@ byte, byte,
 2173              	.L146:
 2174              	@ main.c:928: 			wSCK = 0; /* a slave shifts out next output data bit */
 2175 0048 2E60     		str	r6, [r5]	@ tmp151, MEM[(volatile long unsigned int *)1109459348B]
 2176              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 2177 004a 9368     		ldr	r3, [r2, #8]	@ _22, MEM[(struct SysTick_Type *)3758153744B].VAL
 2178 004c 0B60     		str	r3, [r1]	@ _22, delay_us
 2179              	.L147:
 2180              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 2181 004e 0B68     		ldr	r3, [r1]	@ delay_us.48_23, delay_us
 2182 0050 9768     		ldr	r7, [r2, #8]	@ _24, MEM[(struct SysTick_Type *)3758153744B].VAL
 2183 0052 DB1B     		subs	r3, r3, r7	@ tmp146, delay_us.48_23, _24
 2184 0054 592B     		cmp	r3, #89	@ tmp146,
 2185 0056 FAD9     		bls	.L147	@,
 2186 0058 013C     		subs	r4, r4, #1	@ tmp147, ivtmp_5,
 2187              	@ main.c:918: 		for(counter = 8; counter; counter--)
 2188 005a 14F0FF04 		ands	r4, r4, #255	@ ivtmp_5, tmp147,
 2189 005e DDD1     		bne	.L148	@,
 2190              	@ main.c:932: 	}
 2191 0060 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}	@
 2192              	.L157:
 2193              		.align	2
 2194              	.L156:
 2195 0064 00000000 		.word	delay_us
 2196 0068 94012142 		.word	1109459348
 2197 006c 10E000E0 		.word	-536813552
 2198 0070 9C012142 		.word	1109459356
 2199 0074 18012142 		.word	1109459224
 2200              		.size	softSPI_w, .-softSPI_w
 2201              		.section	.text.softSPI_r,"ax",%progbits
 2202              		.align	1
 2203              		.p2align 2,,3
 2204              		.global	softSPI_r
 2205              		.syntax unified
 2206              		.thumb
 2207              		.thumb_func
 2208              		.fpu softvfp
 2209              		.type	softSPI_r, %function
 2210              	softSPI_r:
 2211              		@ args = 0, pretend = 0, frame = 0
 2212              		@ frame_needed = 0, uses_anonymous_args = 0
 2213              		@ link register save eliminated.
 2214              	@ main.c:939: 			else				wMOSI = 0;
 2215 0000 4FF0000C 		mov	ip, #0	@ tmp132,
 2216              	@ main.c:934: uint8_t softSPI_r(uint8_t byte)	{
 2217 0004 F0B4     		push	{r4, r5, r6, r7}	@
 2218              	@ main.c:934: uint8_t softSPI_r(uint8_t byte)	{
 2219 0006 0823     		movs	r3, #8	@ ivtmp_5,
 2220              	@ main.c:941: 			wSCK = 0; /* a slave shifts out output data bit */
 2221 0008 6746     		mov	r7, ip	@ MEM[(volatile long unsigned int *)1109459348B], tmp132
 2222              	@ main.c:938: 			if (byte & 0x80)			wMOSI = 1;
 2223 000a 0124     		movs	r4, #1	@ tmp133,
ARM GAS  /tmp/ccDfNsWv.s 			page 40


 2224              	@ main.c:939: 			else				wMOSI = 0;
 2225 000c 0A4E     		ldr	r6, .L168	@ tmp131,
 2226              	@ main.c:941: 			wSCK = 0; /* a slave shifts out output data bit */
 2227 000e 0B4A     		ldr	r2, .L168+4	@ tmp122,
 2228              	@ main.c:944: 			if (wMISO)		byte |= 0x01;
 2229 0010 0B4D     		ldr	r5, .L168+8	@ tmp125,
 2230              	.L162:
 2231              	@ main.c:938: 			if (byte & 0x80)			wMOSI = 1;
 2232 0012 0106     		lsls	r1, r0, #24	@, byte,
 2233 0014 4CBF     		ite	mi
 2234 0016 3460     		strmi	r4, [r6]	@ tmp133, MEM[(volatile long unsigned int *)1109459356B]
 2235              	@ main.c:939: 			else				wMOSI = 0;
 2236 0018 C6F800C0 		strpl	ip, [r6]	@ tmp132, MEM[(volatile long unsigned int *)1109459356B]
 2237              	@ main.c:941: 			wSCK = 0; /* a slave shifts out output data bit */
 2238 001c 1760     		str	r7, [r2]	@ MEM[(volatile long unsigned int *)1109459348B], MEM[(volatile long unsigned int *)1
 2239              	@ main.c:944: 			if (wMISO)		byte |= 0x01;
 2240 001e 2968     		ldr	r1, [r5]	@ _2, MEM[(volatile long unsigned int *)1109459224B]
 2241              	@ main.c:942: 			byte <<= 1;
 2242 0020 4000     		lsls	r0, r0, #1	@ tmp124, byte,
 2243 0022 013B     		subs	r3, r3, #1	@ tmp129, ivtmp_5,
 2244 0024 C0B2     		uxtb	r0, r0	@ byte, tmp124
 2245              	@ main.c:944: 			if (wMISO)		byte |= 0x01;
 2246 0026 09B1     		cbz	r1, .L161	@ _2,
 2247              	@ main.c:944: 			if (wMISO)		byte |= 0x01;
 2248 0028 40F00100 		orr	r0, r0, #1	@ byte, byte,
 2249              	.L161:
 2250              	@ main.c:936: 		for(counter = 8; counter; counter--)
 2251 002c 13F0FF03 		ands	r3, r3, #255	@ ivtmp_5, tmp129,
 2252              	@ main.c:945: 			wSCK = 1; /* a slave latches input data bit */
 2253 0030 1460     		str	r4, [r2]	@ tmp133, MEM[(volatile long unsigned int *)1109459348B]
 2254              	@ main.c:936: 		for(counter = 8; counter; counter--)
 2255 0032 EED1     		bne	.L162	@,
 2256              	@ main.c:948: 	}
 2257 0034 F0BC     		pop	{r4, r5, r6, r7}	@
 2258 0036 7047     		bx	lr	@
 2259              	.L169:
 2260              		.align	2
 2261              	.L168:
 2262 0038 9C012142 		.word	1109459356
 2263 003c 94012142 		.word	1109459348
 2264 0040 18012142 		.word	1109459224
 2265              		.size	softSPI_r, .-softSPI_r
 2266              		.section	.text.ili9486,"ax",%progbits
 2267              		.align	1
 2268              		.p2align 2,,3
 2269              		.global	ili9486
 2270              		.syntax unified
 2271              		.thumb
 2272              		.thumb_func
 2273              		.fpu softvfp
 2274              		.type	ili9486, %function
 2275              	ili9486:
 2276              		@ args = 0, pretend = 0, frame = 8
 2277              		@ frame_needed = 0, uses_anonymous_args = 0
 2278              	@ main.c:952: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='c';
 2279 0000 0123     		movs	r3, #1	@ tmp136,
 2280 0002 6320     		movs	r0, #99	@ tmp139,
ARM GAS  /tmp/ccDfNsWv.s 			page 41


 2281              	@ main.c:949: void ili9486(void){
 2282 0004 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 2283              	@ main.c:952: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='c';
 2284 0008 DFF85491 		ldr	r9, .L201+56	@ tmp196,
 2285              	@ main.c:954: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0x34330000;	//   PA7=MOSI, PA6=MISO, PA5=S
 2286 000c 4649     		ldr	r1, .L201	@ tmp141,
 2287              	@ main.c:952: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='c';
 2288 000e D9F80020 		ldr	r2, [r9]	@ pretmp_14, p_Fifo1
 2289              	@ main.c:939: 			else				wMOSI = 0;
 2290 0012 464E     		ldr	r6, .L201+4	@ tmp207,
 2291              	@ main.c:952: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='c';
 2292 0014 9380     		strh	r3, [r2, #4]	@ movhi	@ tmp136, p_Fifo1.63_1->rct
 2293 0016 5380     		strh	r3, [r2, #2]	@ movhi	@ tmp136, p_Fifo1.63_1->rwi
 2294 0018 9071     		strb	r0, [r2, #6]	@ tmp139, p_Fifo1.63_1->rbuf
 2295              	@ main.c:954: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0x34330000;	//   PA7=MOSI, PA6=MISO, PA5=S
 2296 001a 0B68     		ldr	r3, [r1]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 2297              	@ main.c:941: 			wSCK = 0; /* a slave shifts out output data bit */
 2298 001c 444C     		ldr	r4, .L201+8	@ tmp208,
 2299              	@ main.c:954: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0x34330000;	//   PA7=MOSI, PA6=MISO, PA5=S
 2300 001e 9BB2     		uxth	r3, r3	@ tmp142, _4
 2301 0020 43F05053 		orr	r3, r3, #872415232	@ _6, tmp142,
 2302 0024 43F44C13 		orr	r3, r3, #3342336	@ _6, _6,
 2303              	@ main.c:949: void ili9486(void){
 2304 0028 83B0     		sub	sp, sp, #12	@,,
 2305              	@ main.c:954: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0x34330000;	//   PA7=MOSI, PA6=MISO, PA5=S
 2306 002a 0B60     		str	r3, [r1]	@ _6, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 2307              	.L172:
 2308              	@ main.c:958: 			if(p_Fifo1->rct){
 2309 002c 9388     		ldrh	r3, [r2, #4]	@, prephitmp_55->rct
 2310 002e 9BB2     		uxth	r3, r3	@ _8, prephitmp_55->rct
 2311 0030 002B     		cmp	r3, #0	@ _8
 2312 0032 FBD0     		beq	.L172	@
 2313              	@ main.c:959: 				UART_getChar( (char*)&swh);
 2314 0034 0DF10700 		add	r0, sp, #7	@ tmp214,,
 2315 0038 FFF7FEFF 		bl	UART_getChar	@
 2316              	@ main.c:961: 				switch (swh)	{
 2317 003c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2	@ swh, swh
 2318 0040 722B     		cmp	r3, #114	@ swh,
 2319 0042 09D0     		beq	.L174	@,
 2320 0044 772B     		cmp	r3, #119	@ swh,
 2321 0046 42D0     		beq	.L175	@,
 2322 0048 632B     		cmp	r3, #99	@ swh,
 2323 004a 30D0     		beq	.L200	@,
 2324              	@ main.c:987: 					UaPutK("\r");
 2325 004c 3948     		ldr	r0, .L201+12	@,
 2326 004e FFF7FEFF 		bl	UaPutK	@
 2327              	.L181:
 2328 0052 D9F80020 		ldr	r2, [r9]	@ pretmp_14, p_Fifo1
 2329 0056 E9E7     		b	.L172	@
 2330              	.L174:
 2331              	@ main.c:964: 					UaPutK("\r\n reg = 0x");	reg=UART_getHex();
 2332 0058 3748     		ldr	r0, .L201+16	@,
 2333 005a FFF7FEFF 		bl	UaPutK	@
 2334 005e FFF7FEFF 		bl	UART_getHex	@
 2335 0062 C5B2     		uxtb	r5, r0	@ reg,
 2336              	@ main.c:965: 					UaPutK("\r\n dat = 0x");
 2337 0064 3548     		ldr	r0, .L201+20	@,
ARM GAS  /tmp/ccDfNsWv.s 			page 42


 2338 0066 FFF7FEFF 		bl	UaPutK	@
 2339              	@ main.c:966: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 2340 006a 0022     		movs	r2, #0	@ tmp154,
 2341 006c 0823     		movs	r3, #8	@ ivtmp_53,
 2342              	@ main.c:939: 			else				wMOSI = 0;
 2343 006e 9446     		mov	ip, r2	@ tmp198, tmp154
 2344              	@ main.c:941: 			wSCK = 0; /* a slave shifts out output data bit */
 2345 0070 1746     		mov	r7, r2	@ MEM[(volatile long unsigned int *)1109459348B], tmp198
 2346              	@ main.c:938: 			if (byte & 0x80)			wMOSI = 1;
 2347 0072 0121     		movs	r1, #1	@ tmp199,
 2348              	@ main.c:966: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 2349 0074 3248     		ldr	r0, .L201+24	@ tmp215,
 2350              	@ main.c:944: 			if (wMISO)		byte |= 0x01;
 2351 0076 DFF8E0E0 		ldr	lr, .L201+48	@ tmp163,
 2352              	@ main.c:966: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 2353 007a 0260     		str	r2, [r0]	@ tmp154, MEM[(volatile long unsigned int *)1109459344B]
 2354              	.L180:
 2355              	@ main.c:938: 			if (byte & 0x80)			wMOSI = 1;
 2356 007c 2A06     		lsls	r2, r5, #24	@, reg,
 2357 007e 4CBF     		ite	mi
 2358 0080 3160     		strmi	r1, [r6]	@ tmp199, MEM[(volatile long unsigned int *)1109459356B]
 2359              	@ main.c:939: 			else				wMOSI = 0;
 2360 0082 C6F800C0 		strpl	ip, [r6]	@ tmp198, MEM[(volatile long unsigned int *)1109459356B]
 2361              	@ main.c:941: 			wSCK = 0; /* a slave shifts out output data bit */
 2362 0086 2760     		str	r7, [r4]	@ MEM[(volatile long unsigned int *)1109459348B], MEM[(volatile long unsigned int *)1
 2363              	@ main.c:944: 			if (wMISO)		byte |= 0x01;
 2364 0088 DEF80020 		ldr	r2, [lr]	@ _43, MEM[(volatile long unsigned int *)1109459224B]
 2365              	@ main.c:942: 			byte <<= 1;
 2366 008c 6D00     		lsls	r5, r5, #1	@ tmp162, reg,
 2367 008e 013B     		subs	r3, r3, #1	@ tmp167, ivtmp_53,
 2368 0090 EDB2     		uxtb	r5, r5	@ reg, tmp162
 2369              	@ main.c:944: 			if (wMISO)		byte |= 0x01;
 2370 0092 0AB1     		cbz	r2, .L179	@ _43,
 2371 0094 45F00105 		orr	r5, r5, #1	@ reg, reg,
 2372              	.L179:
 2373              	@ main.c:936: 		for(counter = 8; counter; counter--)
 2374 0098 13F0FF03 		ands	r3, r3, #255	@ ivtmp_53, tmp167,
 2375              	@ main.c:945: 			wSCK = 1; /* a slave latches input data bit */
 2376 009c 2160     		str	r1, [r4]	@ tmp199, MEM[(volatile long unsigned int *)1109459348B]
 2377              	@ main.c:936: 		for(counter = 8; counter; counter--)
 2378 009e EDD1     		bne	.L180	@,
 2379              	@ main.c:966: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 2380 00a0 274B     		ldr	r3, .L201+24	@ tmp216,
 2381              	@ main.c:967: 					hex2uart(dat,2);
 2382 00a2 2846     		mov	r0, r5	@, reg
 2383              	@ main.c:966: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 2384 00a4 1960     		str	r1, [r3]	@ tmp199, MEM[(volatile long unsigned int *)1109459344B]
 2385              	@ main.c:967: 					hex2uart(dat,2);
 2386 00a6 0221     		movs	r1, #2	@,
 2387 00a8 FFF7FEFF 		bl	hex2uart	@
 2388              	@ main.c:969: 					break;
 2389 00ac D1E7     		b	.L181	@
 2390              	.L200:
 2391              	@ main.c:980: 					UaPutK("\f");
 2392 00ae 2548     		ldr	r0, .L201+28	@,
 2393 00b0 FFF7FEFF 		bl	UaPutK	@
 2394              	@ main.c:981: 					UaPutK("\n\r\n======= ILI9486 ==================================\r\n");
ARM GAS  /tmp/ccDfNsWv.s 			page 43


 2395 00b4 2448     		ldr	r0, .L201+32	@,
 2396 00b6 FFF7FEFF 		bl	UaPutK	@
 2397              	@ main.c:982: 					UaPutK(" r - Read   c - Clear page  \r\n");
 2398 00ba 2448     		ldr	r0, .L201+36	@,
 2399 00bc FFF7FEFF 		bl	UaPutK	@
 2400              	@ main.c:983: 					UaPutK(" w - Write  l - Loop read   \r\n");
 2401 00c0 2348     		ldr	r0, .L201+40	@,
 2402 00c2 FFF7FEFF 		bl	UaPutK	@
 2403              	@ main.c:984: 					UaPutK("==================================================\r\n > ");
 2404 00c6 2348     		ldr	r0, .L201+44	@,
 2405 00c8 FFF7FEFF 		bl	UaPutK	@
 2406              	@ main.c:985: 					break;
 2407 00cc C1E7     		b	.L181	@
 2408              	.L175:
 2409              	@ main.c:971: 					wCS = 0;
 2410 00ce 0023     		movs	r3, #0	@ tmp171,
 2411              	@ main.c:972: 					for(u08 i=0;i<64;i++){
 2412 00d0 9B46     		mov	fp, r3	@ i, tmp171
 2413              	@ main.c:939: 			else				wMOSI = 0;
 2414 00d2 9A46     		mov	r10, r3	@ tmp202, i
 2415              	@ main.c:941: 			wSCK = 0; /* a slave shifts out output data bit */
 2416 00d4 9846     		mov	r8, r3	@ MEM[(volatile long unsigned int *)1109459348B], i
 2417              	@ main.c:971: 					wCS = 0;
 2418 00d6 1A4A     		ldr	r2, .L201+24	@ tmp217,
 2419              	@ main.c:944: 			if (wMISO)		byte |= 0x01;
 2420 00d8 1F4F     		ldr	r7, .L201+48	@ tmp180,
 2421              	@ main.c:971: 					wCS = 0;
 2422 00da 1360     		str	r3, [r2]	@ tmp171, MEM[(volatile long unsigned int *)1109459344B]
 2423              	.L182:
 2424              	@ main.c:966: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 2425 00dc 5846     		mov	r0, fp	@ byte, i
 2426 00de 0822     		movs	r2, #8	@ ivtmp_7,
 2427              	@ main.c:938: 			if (byte & 0x80)			wMOSI = 1;
 2428 00e0 0125     		movs	r5, #1	@ tmp203,
 2429              	.L186:
 2430 00e2 0306     		lsls	r3, r0, #24	@, byte,
 2431 00e4 4CBF     		ite	mi
 2432 00e6 3560     		strmi	r5, [r6]	@ tmp203, MEM[(volatile long unsigned int *)1109459356B]
 2433              	@ main.c:939: 			else				wMOSI = 0;
 2434 00e8 C6F800A0 		strpl	r10, [r6]	@ tmp202, MEM[(volatile long unsigned int *)1109459356B]
 2435              	@ main.c:941: 			wSCK = 0; /* a slave shifts out output data bit */
 2436 00ec C4F80080 		str	r8, [r4]	@ MEM[(volatile long unsigned int *)1109459348B], MEM[(volatile long unsigned int *)1
 2437              	@ main.c:944: 			if (wMISO)		byte |= 0x01;
 2438 00f0 3968     		ldr	r1, [r7]	@ _51, MEM[(volatile long unsigned int *)1109459224B]
 2439              	@ main.c:942: 			byte <<= 1;
 2440 00f2 4000     		lsls	r0, r0, #1	@ tmp179, byte,
 2441 00f4 013A     		subs	r2, r2, #1	@ tmp184, ivtmp_7,
 2442 00f6 C0B2     		uxtb	r0, r0	@ byte, tmp179
 2443              	@ main.c:944: 			if (wMISO)		byte |= 0x01;
 2444 00f8 09B1     		cbz	r1, .L185	@ _51,
 2445 00fa 40F00100 		orr	r0, r0, #1	@ byte, byte,
 2446              	.L185:
 2447              	@ main.c:936: 		for(counter = 8; counter; counter--)
 2448 00fe 12F0FF02 		ands	r2, r2, #255	@ ivtmp_7, tmp184,
 2449              	@ main.c:945: 			wSCK = 1; /* a slave latches input data bit */
 2450 0102 2560     		str	r5, [r4]	@ tmp203, MEM[(volatile long unsigned int *)1109459348B]
 2451              	@ main.c:936: 		for(counter = 8; counter; counter--)
ARM GAS  /tmp/ccDfNsWv.s 			page 44


 2452 0104 EDD1     		bne	.L186	@,
 2453              	@ main.c:972: 					for(u08 i=0;i<64;i++){
 2454 0106 0BF1010B 		add	fp, fp, #1	@ tmp185, i,
 2455              	@ main.c:973: 						hex2uart(softSPI_r(i),2);
 2456 010a 0221     		movs	r1, #2	@,
 2457              	@ main.c:972: 					for(u08 i=0;i<64;i++){
 2458 010c 5FFA8BFB 		uxtb	fp, fp	@ i, tmp185
 2459              	@ main.c:973: 						hex2uart(softSPI_r(i),2);
 2460 0110 FFF7FEFF 		bl	hex2uart	@
 2461              	@ main.c:972: 					for(u08 i=0;i<64;i++){
 2462 0114 BBF1400F 		cmp	fp, #64	@ i,
 2463 0118 E0D1     		bne	.L182	@,
 2464              	@ main.c:975: 					wCS = 1;
 2465 011a 094B     		ldr	r3, .L201+24	@ tmp218,
 2466              	@ main.c:976: 					UaPutK("\r\n");
 2467 011c 0F48     		ldr	r0, .L201+52	@,
 2468              	@ main.c:975: 					wCS = 1;
 2469 011e 1D60     		str	r5, [r3]	@ tmp203, MEM[(volatile long unsigned int *)1109459344B]
 2470              	@ main.c:976: 					UaPutK("\r\n");
 2471 0120 FFF7FEFF 		bl	UaPutK	@
 2472              	@ main.c:978: 					break;
 2473 0124 95E7     		b	.L181	@
 2474              	.L202:
 2475 0126 00BF     		.align	2
 2476              	.L201:
 2477 0128 00080140 		.word	1073809408
 2478 012c 9C012142 		.word	1109459356
 2479 0130 94012142 		.word	1109459348
 2480 0134 2C000000 		.word	.LC15
 2481 0138 00000000 		.word	.LC28
 2482 013c 0C000000 		.word	.LC29
 2483 0140 90012142 		.word	1109459344
 2484 0144 18000000 		.word	.LC30
 2485 0148 1C000000 		.word	.LC31
 2486 014c 54000000 		.word	.LC32
 2487 0150 74000000 		.word	.LC33
 2488 0154 94000000 		.word	.LC34
 2489 0158 18012142 		.word	1109459224
 2490 015c 40000000 		.word	.LC18
 2491 0160 00000000 		.word	p_Fifo1
 2492              		.size	ili9486, .-ili9486
 2493              		.section	.text.wiznet5500,"ax",%progbits
 2494              		.align	1
 2495              		.p2align 2,,3
 2496              		.global	wiznet5500
 2497              		.syntax unified
 2498              		.thumb
 2499              		.thumb_func
 2500              		.fpu softvfp
 2501              		.type	wiznet5500, %function
 2502              	wiznet5500:
 2503              		@ args = 0, pretend = 0, frame = 8
 2504              		@ frame_needed = 0, uses_anonymous_args = 0
 2505 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 2506 0004 82B0     		sub	sp, sp, #8	@,,
 2507              	@ main.c:999: 	SPI1_init_();
 2508 0006 FFF7FEFF 		bl	SPI1_init_	@
ARM GAS  /tmp/ccDfNsWv.s 			page 45


 2509              	@ main.c:1001: 	GPIOB->CRL = (GPIOB->CRL & 0xffffff0f) | 0x00000010;	
 2510 000a 1A49     		ldr	r1, .L210	@ tmp130,
 2511              	@ main.c:1002: 	GPIOC->CRH = (GPIOC->CRH & 0xf0ffffff) | 0x01000000;	// LED Blue  PC14
 2512 000c 1A4A     		ldr	r2, .L210+4	@ tmp133,
 2513              	@ main.c:1001: 	GPIOB->CRL = (GPIOB->CRL & 0xffffff0f) | 0x00000010;	
 2514 000e 0B68     		ldr	r3, [r1]	@ _2, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2515              	@ main.c:1075: 			if(flag_9);
 2516 0010 1A4F     		ldr	r7, .L210+8	@ tmp137,
 2517              	@ main.c:1001: 	GPIOB->CRL = (GPIOB->CRL & 0xffffff0f) | 0x00000010;	
 2518 0012 23F0F003 		bic	r3, r3, #240	@ tmp131, _2,
 2519 0016 43F01003 		orr	r3, r3, #16	@ _5, tmp131,
 2520 001a 0B60     		str	r3, [r1]	@ _5, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2521              	@ main.c:1002: 	GPIOC->CRH = (GPIOC->CRH & 0xf0ffffff) | 0x01000000;	// LED Blue  PC14
 2522 001c 5368     		ldr	r3, [r2, #4]	@ _7, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 2523              	@ main.c:1075: 			if(flag_9);
 2524 001e 7F01     		lsls	r7, r7, #5	@ tmp138, tmp137,
 2525              	@ main.c:1002: 	GPIOC->CRH = (GPIOC->CRH & 0xf0ffffff) | 0x01000000;	// LED Blue  PC14
 2526 0020 23F07063 		bic	r3, r3, #251658240	@ tmp134, _7,
 2527 0024 43F08073 		orr	r3, r3, #16777216	@ _9, tmp134,
 2528 0028 5360     		str	r3, [r2, #4]	@ _9, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 2529              	@ main.c:1004: 	DHT_Init();
 2530 002a FFF7FEFF 		bl	DHT_Init	@
 2531 002e 144C     		ldr	r4, .L210+12	@ tmp150,
 2532              	@ main.c:1059: 		if(STCLK_MS*1000  < (trg0 - SysTick->VAL)){
 2533 0030 144D     		ldr	r5, .L210+16	@ tmp142,
 2534              	@ main.c:1062: 			if (!(DHT_read( &AMh, &AMt,1,&AM2302_pin)) ){		// AM2302 read T & H
 2535 0032 DFF85C80 		ldr	r8, .L210+28	@ tmp153,
 2536              	@ main.c:1065: 			LED^=1;
 2537 0036 144E     		ldr	r6, .L210+20	@ tmp148,
 2538              	@ main.c:1075: 			if(flag_9);
 2539 0038 2437     		adds	r7, r7, #36	@ _20, tmp138,
 2540              	.L205:
 2541              	@ main.c:1059: 		if(STCLK_MS*1000  < (trg0 - SysTick->VAL)){
 2542 003a 1449     		ldr	r1, .L210+24	@ tmp140,
 2543              	.L204:
 2544 003c 2368     		ldr	r3, [r4]	@ trg0.70_10, trg0
 2545 003e 8A68     		ldr	r2, [r1, #8]	@ _11, MEM[(struct SysTick_Type *)3758153744B].VAL
 2546 0040 9B1A     		subs	r3, r3, r2	@ tmp141, trg0.70_10, _11
 2547 0042 AB42     		cmp	r3, r5	@ tmp141, tmp142
 2548 0044 FAD9     		bls	.L204	@,
 2549              	@ main.c:1060: 			trg0 = SysTick->VAL;
 2550 0046 D1F808C0 		ldr	ip, [r1, #8]	@ _13, MEM[(struct SysTick_Type *)3758153744B].VAL
 2551              	@ main.c:1062: 			if (!(DHT_read( &AMh, &AMt,1,&AM2302_pin)) ){		// AM2302 read T & H
 2552 004a 4346     		mov	r3, r8	@, tmp153
 2553 004c 0122     		movs	r2, #1	@,
 2554 004e 0DF10601 		add	r1, sp, #6	@ tmp154,,
 2555 0052 01A8     		add	r0, sp, #4	@ tmp155,,
 2556              	@ main.c:1060: 			trg0 = SysTick->VAL;
 2557 0054 C4F800C0 		str	ip, [r4]	@ _13, trg0
 2558              	@ main.c:1062: 			if (!(DHT_read( &AMh, &AMt,1,&AM2302_pin)) ){		// AM2302 read T & H
 2559 0058 FFF7FEFF 		bl	DHT_read	@
 2560              	@ main.c:1065: 			LED^=1;
 2561 005c 3368     		ldr	r3, [r6]	@ _14, MEM[(volatile long unsigned int *)1109524916B]
 2562 005e 83F00103 		eor	r3, r3, #1	@ _15, _14,
 2563 0062 3360     		str	r3, [r6]	@ _15, MEM[(volatile long unsigned int *)1109524916B]
 2564              	@ main.c:1075: 			if(flag_9);
 2565 0064 3B68     		ldr	r3, [r7]	@ _21, *_20
ARM GAS  /tmp/ccDfNsWv.s 			page 46


 2566 0066 002B     		cmp	r3, #0	@ _21
 2567 0068 E7D1     		bne	.L205	@
 2568              	@ main.c:1079: 			flag_9 ^=1;
 2569 006a 3B68     		ldr	r3, [r7]	@ _22, *_20
 2570 006c 83F00103 		eor	r3, r3, #1	@ _23, _22,
 2571 0070 3B60     		str	r3, [r7]	@ _23, *_20
 2572 0072 E2E7     		b	.L205	@
 2573              	.L211:
 2574              		.align	2
 2575              	.L210:
 2576 0074 000C0140 		.word	1073810432
 2577 0078 00100140 		.word	1073811456
 2578 007c 00001001 		.word	.LANCHOR8+17825792
 2579 0080 00000000 		.word	trg0
 2580 0084 40548900 		.word	9000000
 2581 0088 B4012242 		.word	1109524916
 2582 008c 10E000E0 		.word	-536813552
 2583 0090 3C012142 		.word	1109459260
 2584              		.size	wiznet5500, .-wiznet5500
 2585              		.section	.text.uv_meter,"ax",%progbits
 2586              		.align	1
 2587              		.p2align 2,,3
 2588              		.global	uv_meter
 2589              		.syntax unified
 2590              		.thumb
 2591              		.thumb_func
 2592              		.fpu softvfp
 2593              		.type	uv_meter, %function
 2594              	uv_meter:
 2595              		@ args = 0, pretend = 0, frame = 264
 2596              		@ frame_needed = 0, uses_anonymous_args = 0
 2597 0000 F0B5     		push	{r4, r5, r6, r7, lr}	@
 2598              	@ main.c:1093: 		PB10_o = 1;
 2599 0002 0124     		movs	r4, #1	@ tmp126,
 2600              	@ main.c:1091: 		GPIOA->CRL = (GPIOA->CRL & 0x000fffff) | 0xaa000000; // ADC12_IN5		
 2601 0004 1C4A     		ldr	r2, .L221	@ tmp121,
 2602              	@ main.c:1093: 		PB10_o = 1;
 2603 0006 1D48     		ldr	r0, .L221+4	@ tmp125,
 2604              	@ main.c:1091: 		GPIOA->CRL = (GPIOA->CRL & 0x000fffff) | 0xaa000000; // ADC12_IN5		
 2605 0008 1368     		ldr	r3, [r2]	@ _2, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 2606              	@ main.c:1094: 		LED = 1;
 2607 000a 1D49     		ldr	r1, .L221+8	@ tmp127,
 2608              	@ main.c:1091: 		GPIOA->CRL = (GPIOA->CRL & 0x000fffff) | 0xaa000000; // ADC12_IN5		
 2609 000c C3F31303 		ubfx	r3, r3, #0, #20	@ tmp122, _2,,
 2610 0010 43F02A43 		orr	r3, r3, #-1442840576	@ _4, tmp122,
 2611 0014 1360     		str	r3, [r2]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 2612              	@ main.c:1086: void uv_meter(void)			{
 2613 0016 C3B0     		sub	sp, sp, #268	@,,
 2614              	@ main.c:1093: 		PB10_o = 1;
 2615 0018 0460     		str	r4, [r0]	@ tmp126, MEM[(volatile long unsigned int *)1109492136B]
 2616              	@ main.c:1094: 		LED = 1;
 2617 001a 0C60     		str	r4, [r1]	@ tmp126, MEM[(volatile long unsigned int *)1109524916B]
 2618              	@ main.c:1095: 		I2C2_init();
 2619 001c FFF7FEFF 		bl	I2C2_init	@
 2620              	@ main.c:1102: 		ADC1->SQR3 = ( 5<<0*5 );		//(channel<<sequence*5) sequence=0..5   
 2621 0020 0527     		movs	r7, #5	@ tmp140,
 2622              	@ main.c:5231: 		RCC_APB2RSTR_ADC1RST_bb = 0;
ARM GAS  /tmp/ccDfNsWv.s 			page 47


 2623 0022 0022     		movs	r2, #0	@ tmp136,
 2624              	@ main.c:1103: 		ADC1->SMPR2 = (4<<5*3 );
 2625 0024 4FF40036 		mov	r6, #131072	@ tmp142,
 2626              	@ main.c:1104: 		ADC1->CR1 = ADC_CR1_SCAN;			// multi channel mode		
 2627 0028 4FF48070 		mov	r0, #256	@ tmp144,
 2628              	@ main.c:5228: 		RCC->APB2ENR   |= RCC_APB2ENR_ADC1EN;	// enable clock for ADC1
 2629 002c 154B     		ldr	r3, .L221+12	@ tmp129,
 2630              	@ main.c:1122: 			b=0;
 2631 002e 1546     		mov	r5, r2	@ tmp153, tmp136
 2632              	@ main.c:5228: 		RCC->APB2ENR   |= RCC_APB2ENR_ADC1EN;	// enable clock for ADC1
 2633 0030 9969     		ldr	r1, [r3, #24]	@ _22, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 2634 0032 41F40071 		orr	r1, r1, #512	@ _23, _22,
 2635 0036 9961     		str	r1, [r3, #24]	@ _23, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 2636              	@ main.c:5229: 		RCC->CFGR 		 |= RCC_CFGR_ADCPRE_DIV4;  // 2/4/6/8 str98
 2637 0038 5968     		ldr	r1, [r3, #4]	@ _24, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 2638 003a 41F48041 		orr	r1, r1, #16384	@ _25, _24,
 2639 003e 5960     		str	r1, [r3, #4]	@ _25, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 2640              	@ main.c:5230: 		RCC_APB2RSTR_ADC1RST_bb = 1;		// Reset ADC1
 2641 0040 1149     		ldr	r1, .L221+16	@ tmp133,
 2642              	@ main.c:1101: 		ADC1->SQR1 = ( 0<<20 	); 		//length and sequence 12..15 conversion 13-16 on channe
 2643 0042 A3F56C43 		sub	r3, r3, #60416	@ tmp137, tmp137,
 2644              	@ main.c:5230: 		RCC_APB2RSTR_ADC1RST_bb = 1;		// Reset ADC1
 2645 0046 0C60     		str	r4, [r1]	@ tmp126, MEM[(volatile long unsigned int *)1111622052B]
 2646              	@ main.c:5231: 		RCC_APB2RSTR_ADC1RST_bb = 0;
 2647 0048 0A60     		str	r2, [r1]	@ tmp136, MEM[(volatile long unsigned int *)1111622052B]
 2648              	@ main.c:1101: 		ADC1->SQR1 = ( 0<<20 	); 		//length and sequence 12..15 conversion 13-16 on channe
 2649 004a DA62     		str	r2, [r3, #44]	@ tmp136, MEM[(struct ADC_TypeDef *)1073816576B].SQR1
 2650              	@ main.c:1102: 		ADC1->SQR3 = ( 5<<0*5 );		//(channel<<sequence*5) sequence=0..5   
 2651 004c 5F63     		str	r7, [r3, #52]	@ tmp140, MEM[(struct ADC_TypeDef *)1073816576B].SQR3
 2652              	@ main.c:1103: 		ADC1->SMPR2 = (4<<5*3 );
 2653 004e 1E61     		str	r6, [r3, #16]	@ tmp142, MEM[(struct ADC_TypeDef *)1073816576B].SMPR2
 2654              	@ main.c:1104: 		ADC1->CR1 = ADC_CR1_SCAN;			// multi channel mode		
 2655 0050 5860     		str	r0, [r3, #4]	@ tmp144, MEM[(struct ADC_TypeDef *)1073816576B].CR1
 2656              	@ main.c:1105: 		ADC1->CR2 |= ADC_CR2_ADON ;		// On ADC
 2657 0052 9A68     		ldr	r2, [r3, #8]	@ _5, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 2658              	@ main.c:1113: 			while(PB0_i==0);
 2659 0054 0D4C     		ldr	r4, .L221+20	@ tmp147,
 2660              	@ main.c:1105: 		ADC1->CR2 |= ADC_CR2_ADON ;		// On ADC
 2661 0056 42F00102 		orr	r2, r2, #1	@ _6, _5,
 2662 005a 9A60     		str	r2, [r3, #8]	@ _6, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 2663              	.L213:
 2664              	@ main.c:1113: 			while(PB0_i==0);
 2665 005c 2368     		ldr	r3, [r4]	@ _7, MEM[(volatile long unsigned int *)1109491968B]
 2666 005e 002B     		cmp	r3, #0	@ _7
 2667 0060 FCD0     		beq	.L213	@
 2668              	@ main.c:1117: 			i2c2_scan(a,&b);
 2669 0062 0DF10701 		add	r1, sp, #7	@ tmp157,,
 2670 0066 02A8     		add	r0, sp, #8	@ tmp158,,
 2671 0068 FFF7FEFF 		bl	i2c2_scan	@
 2672              	.L214:
 2673              	@ main.c:1121: 			while(PB0_i==1);
 2674 006c 2368     		ldr	r3, [r4]	@ _8, MEM[(volatile long unsigned int *)1109491968B]
 2675 006e 012B     		cmp	r3, #1	@ _8,
 2676 0070 FCD0     		beq	.L214	@,
 2677              	@ main.c:1122: 			b=0;
 2678 0072 8DF80750 		strb	r5, [sp, #7]	@ tmp153, b
 2679              	@ main.c:1113: 			while(PB0_i==0);
ARM GAS  /tmp/ccDfNsWv.s 			page 48


 2680 0076 F1E7     		b	.L213	@
 2681              	.L222:
 2682              		.align	2
 2683              	.L221:
 2684 0078 00080140 		.word	1073809408
 2685 007c A8812142 		.word	1109492136
 2686 0080 B4012242 		.word	1109524916
 2687 0084 00100240 		.word	1073876992
 2688 0088 A4014242 		.word	1111622052
 2689 008c 00812142 		.word	1109491968
 2690              		.size	uv_meter, .-uv_meter
 2691              		.section	.text.IRQLoraInit,"ax",%progbits
 2692              		.align	1
 2693              		.p2align 2,,3
 2694              		.global	IRQLoraInit
 2695              		.syntax unified
 2696              		.thumb
 2697              		.thumb_func
 2698              		.fpu softvfp
 2699              		.type	IRQLoraInit, %function
 2700              	IRQLoraInit:
 2701              		@ args = 0, pretend = 0, frame = 0
 2702              		@ frame_needed = 0, uses_anonymous_args = 0
 2703              		@ link register save eliminated.
 2704              	@ main.c:1162: 		AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI0_PB;		// Enable interrupt port PA0
 2705 0000 0123     		movs	r3, #1	@ tmp111,
 2706              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 2707 0002 4020     		movs	r0, #64	@ tmp119,
 2708              	@ main.c:1153: void IRQLoraInit(void)	{
 2709 0004 10B4     		push	{r4}	@
 2710              	@ main.c:1163: 		EXTI->PR   = EXTI_PR_PR0;			// Clear interupt request EXTI0
 2711 0006 054A     		ldr	r2, .L225	@ tmp112,
 2712              	@ main.c:1162: 		AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI0_PB;		// Enable interrupt port PA0
 2713 0008 054C     		ldr	r4, .L225+4	@ tmp110,
 2714              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 2715 000a 0649     		ldr	r1, .L225+8	@ tmp118,
 2716              	@ main.c:1162: 		AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI0_PB;		// Enable interrupt port PA0
 2717 000c A360     		str	r3, [r4, #8]	@ tmp111, MEM[(struct AFIO_TypeDef *)1073807360B].EXTICR
 2718              	@ main.c:1163: 		EXTI->PR   = EXTI_PR_PR0;			// Clear interupt request EXTI0
 2719 000e 5361     		str	r3, [r2, #20]	@ tmp111, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 2720              	@ main.c:1168: 	}
 2721 0010 10BC     		pop	{r4}	@
 2722              	@ main.c:1164: 		EXTI->RTSR 	 = EXTI_RTSR_TR0;
 2723 0012 9360     		str	r3, [r2, #8]	@ tmp111, MEM[(struct EXTI_TypeDef *)1073808384B].RTSR
 2724              	@ main.c:1166: 		EXTI->IMR  =  EXTI_IMR_MR0;		// Interrupt mask register EXTI_IMR
 2725 0014 1360     		str	r3, [r2]	@ tmp111, MEM[(struct EXTI_TypeDef *)1073808384B].IMR
 2726              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 2727 0016 0860     		str	r0, [r1]	@ tmp119, MEM[(struct NVIC_Type *)3758153984B].ISER
 2728              	@ main.c:1168: 	}
 2729 0018 7047     		bx	lr	@
 2730              	.L226:
 2731 001a 00BF     		.align	2
 2732              	.L225:
 2733 001c 00040140 		.word	1073808384
 2734 0020 00000140 		.word	1073807360
 2735 0024 00E100E0 		.word	-536813312
 2736              		.size	IRQLoraInit, .-IRQLoraInit
ARM GAS  /tmp/ccDfNsWv.s 			page 49


 2737              		.section	.text.LoRaRX,"ax",%progbits
 2738              		.align	1
 2739              		.p2align 2,,3
 2740              		.global	LoRaRX
 2741              		.syntax unified
 2742              		.thumb
 2743              		.thumb_func
 2744              		.fpu softvfp
 2745              		.type	LoRaRX, %function
 2746              	LoRaRX:
 2747              		@ args = 0, pretend = 0, frame = 80
 2748              		@ frame_needed = 0, uses_anonymous_args = 0
 2749 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 2750              	@ main.c:1198: 		SX1278_begin(&SX1278_1, SX1278_433MHZ, SX1278_POWER_11DBM, SX1278_LORA_SF_7,SX1278
 2751 0004 0926     		movs	r6, #9	@ tmp180,
 2752 0006 0022     		movs	r2, #0	@,
 2753              	@ main.c:1188: 		GPIOA->CRL = (GPIOA->CRL & 0xfff00000) | 0x00044343;	//   PA2=MOSI, PA1=MISO, PA0=
 2754 0008 4E4C     		ldr	r4, .L237	@ tmp157,
 2755 000a 4F49     		ldr	r1, .L237+4	@ _3,
 2756 000c 2368     		ldr	r3, [r4]	@ _1, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 2757              	@ main.c:1189: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 2758 000e 4F48     		ldr	r0, .L237+8	@ tmp162,
 2759              	@ main.c:1188: 		GPIOA->CRL = (GPIOA->CRL & 0xfff00000) | 0x00044343;	//   PA2=MOSI, PA1=MISO, PA0=
 2760 0010 1B0D     		lsrs	r3, r3, #20	@ tmp158, _1,
 2761 0012 1B05     		lsls	r3, r3, #20	@ tmp158, tmp158,
 2762 0014 1943     		orrs	r1, r1, r3	@, _3, _3, tmp158
 2763 0016 2160     		str	r1, [r4]	@ _3, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 2764              	@ main.c:1189: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 2765 0018 4368     		ldr	r3, [r0, #4]	@ _4, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 2766              	@ main.c:1190: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 2); 
 2767 001a 4D4F     		ldr	r7, .L237+12	@ tmp242,
 2768              	@ main.c:1189: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 2769 001c 23F0FF03 		bic	r3, r3, #255	@ tmp163, _4,
 2770              	@ main.c:1169: void LoRaRX(void)				{
 2771 0020 97B0     		sub	sp, sp, #92	@,,
 2772              	@ main.c:1189: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 2773 0022 43F03303 		orr	r3, r3, #51	@ _6, tmp163,
 2774              	@ main.c:1191: 		SX1278_hw1.miso = (u32 *)m_BITBAND_PERIPH(&GPIOA->IDR, 1); 
 2775 0026 4B4C     		ldr	r4, .L237+16	@ tmp168,
 2776              	@ main.c:1189: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 2777 0028 4360     		str	r3, [r0, #4]	@ _6, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 2778              	@ main.c:1197: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 2779 002a 4B4D     		ldr	r5, .L237+20	@ tmp177,
 2780              	@ main.c:1198: 		SX1278_begin(&SX1278_1, SX1278_433MHZ, SX1278_POWER_11DBM, SX1278_LORA_SF_7,SX1278
 2781 002c 0096     		str	r6, [sp]	@ tmp180,
 2782              	@ main.c:1192: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 0); 
 2783 002e DFF844E1 		ldr	lr, .L237+48	@ tmp170,
 2784              	@ main.c:1193: 		SX1278_hw1.nss  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 8); 
 2785 0032 DFF844C1 		ldr	ip, .L237+52	@ tmp172,
 2786              	@ main.c:1190: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 2); 
 2787 0036 DFF84481 		ldr	r8, .L237+56	@ tmp166,
 2788              	@ main.c:1194: 		SX1278_hw1.rst  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 9); 
 2789 003a 484E     		ldr	r6, .L237+24	@ tmp174,
 2790              	@ main.c:1191: 		SX1278_hw1.miso = (u32 *)m_BITBAND_PERIPH(&GPIOA->IDR, 1); 
 2791 003c 7C60     		str	r4, [r7, #4]	@ tmp168, SX1278_hw1.miso
 2792              	@ main.c:1195: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 1); 
 2793 003e 04F50044 		add	r4, r4, #32768	@ tmp176, tmp176,
ARM GAS  /tmp/ccDfNsWv.s 			page 50


 2794              	@ main.c:1198: 		SX1278_begin(&SX1278_1, SX1278_433MHZ, SX1278_POWER_11DBM, SX1278_LORA_SF_7,SX1278
 2795 0042 1146     		mov	r1, r2	@,
 2796 0044 0123     		movs	r3, #1	@,
 2797              	@ main.c:1194: 		SX1278_hw1.rst  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 9); 
 2798 0046 C7E903C6 		strd	ip, r6, [r7, #12]	@ tmp172, tmp174, tmp242,
 2799              	@ main.c:1198: 		SX1278_begin(&SX1278_1, SX1278_433MHZ, SX1278_POWER_11DBM, SX1278_LORA_SF_7,SX1278
 2800 004a 2846     		mov	r0, r5	@, tmp177
 2801              	@ main.c:1190: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 2); 
 2802 004c C7F80080 		str	r8, [r7]	@ tmp166, SX1278_hw1.mosi
 2803              	@ main.c:1192: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 0); 
 2804 0050 C7F808E0 		str	lr, [r7, #8]	@ tmp170, SX1278_hw1.sck
 2805              	@ main.c:1195: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 1); 
 2806 0054 7C61     		str	r4, [r7, #20]	@ tmp176, SX1278_hw1.dio0
 2807              	@ main.c:1197: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 2808 0056 2F60     		str	r7, [r5]	@ tmp242, SX1278_1.hw
 2809              	@ main.c:1198: 		SX1278_begin(&SX1278_1, SX1278_433MHZ, SX1278_POWER_11DBM, SX1278_LORA_SF_7,SX1278
 2810 0058 FFF7FEFF 		bl	SX1278_begin	@
 2811              	@ main.c:1205: 		ret = SX1278_LoRaEntryRx(&SX1278_1, 7, 2000);
 2812 005c 4FF4FA62 		mov	r2, #2000	@,
 2813 0060 2846     		mov	r0, r5	@, tmp177
 2814 0062 0721     		movs	r1, #7	@,
 2815 0064 FFF7FEFF 		bl	SX1278_LoRaEntryRx	@
 2816              	@ main.c:1229: 		flag_10=0;
 2817 0068 0022     		movs	r2, #0	@ tmp187,
 2818              	@ main.c:1261: 				SX1278_LoRaRx(&SX1278_1);  // Odczyt danych do buforów
 2819 006a A946     		mov	r9, r5	@ tmp245, tmp177
 2820              	@ main.c:1222: 		trg1  = SysTick->VAL;
 2821 006c 3C4B     		ldr	r3, .L237+28	@ tmp182,
 2822              	@ main.c:1229: 		flag_10=0;
 2823 006e 3D4C     		ldr	r4, .L237+32	@ tmp185,
 2824              	@ main.c:1319: 					trg1  = SysTick->VAL;
 2825 0070 9A46     		mov	r10, r3	@ tmp247, tmp182
 2826              	@ main.c:1222: 		trg1  = SysTick->VAL;
 2827 0072 3D4E     		ldr	r6, .L237+36	@ tmp243,
 2828 0074 9B68     		ldr	r3, [r3, #8]	@ _7, MEM[(struct SysTick_Type *)3758153744B].VAL
 2829              	@ main.c:1229: 		flag_10=0;
 2830 0076 6401     		lsls	r4, r4, #5	@ tmp186, tmp185,
 2831              	@ main.c:1318: 					LED = 0;
 2832 0078 DFF804B1 		ldr	fp, .L237+60	@ tmp246,
 2833              	@ main.c:1222: 		trg1  = SysTick->VAL;
 2834 007c 3360     		str	r3, [r6]	@ _7, trg1
 2835 007e 05F10A08 		add	r8, r5, #10	@ tmp244, tmp177,
 2836              	@ main.c:1229: 		flag_10=0;
 2837 0082 A262     		str	r2, [r4, #40]	@ tmp187, *_12
 2838 0084 2834     		adds	r4, r4, #40	@ _12, tmp186,
 2839              	.L228:
 2840              	@ main.c:1253: 			if( (flag_10==0) && *SX1278_hw1.dio0==1 )  {
 2841 0086 2568     		ldr	r5, [r4]	@ _25, *_12
 2842 0088 1DB9     		cbnz	r5, .L229	@ _25,
 2843              	@ main.c:1253: 			if( (flag_10==0) && *SX1278_hw1.dio0==1 )  {
 2844 008a 7B69     		ldr	r3, [r7, #20]	@ _26, SX1278_hw1.dio0
 2845 008c 1B68     		ldr	r3, [r3]	@ _27, *_26
 2846 008e 012B     		cmp	r3, #1	@ _27,
 2847 0090 1DD0     		beq	.L236	@,
 2848              	.L229:
 2849              	@ main.c:1324: 			if(flag_10 && (*SX1278_hw1.dio0)==0 ) { flag_10=0; }
 2850 0092 2368     		ldr	r3, [r4]	@ _49, *_12
ARM GAS  /tmp/ccDfNsWv.s 			page 51


 2851              	@ main.c:1326: 			if((STCLK_MS*300 < (trg1 - SysTick->VAL)) && LED==0){	
 2852 0094 354A     		ldr	r2, .L237+40	@ tmp235,
 2853              	@ main.c:1324: 			if(flag_10 && (*SX1278_hw1.dio0)==0 ) { flag_10=0; }
 2854 0096 1BB1     		cbz	r3, .L230	@ _49,
 2855              	@ main.c:1324: 			if(flag_10 && (*SX1278_hw1.dio0)==0 ) { flag_10=0; }
 2856 0098 7B69     		ldr	r3, [r7, #20]	@ _50, SX1278_hw1.dio0
 2857 009a 1B68     		ldr	r3, [r3]	@ _51, *_50
 2858 009c 03B9     		cbnz	r3, .L230	@ _51,
 2859              	@ main.c:1324: 			if(flag_10 && (*SX1278_hw1.dio0)==0 ) { flag_10=0; }
 2860 009e 2360     		str	r3, [r4]	@ _51, *_12
 2861              	.L230:
 2862              	@ main.c:1326: 			if((STCLK_MS*300 < (trg1 - SysTick->VAL)) && LED==0){	
 2863 00a0 3368     		ldr	r3, [r6]	@ trg1.82_52, trg1
 2864 00a2 DAF80810 		ldr	r1, [r10, #8]	@ _53, MEM[(struct SysTick_Type *)3758153744B].VAL
 2865 00a6 5B1A     		subs	r3, r3, r1	@ tmp234, trg1.82_52, _53
 2866 00a8 9342     		cmp	r3, r2	@ tmp234, tmp235
 2867 00aa ECD9     		bls	.L228	@,
 2868              	@ main.c:1326: 			if((STCLK_MS*300 < (trg1 - SysTick->VAL)) && LED==0){	
 2869 00ac DBF80030 		ldr	r3, [fp]	@ _55, MEM[(volatile long unsigned int *)1109524916B]
 2870 00b0 002B     		cmp	r3, #0	@ _55
 2871 00b2 E8D1     		bne	.L228	@
 2872              	@ main.c:1329: 				LED = 1;
 2873 00b4 0123     		movs	r3, #1	@ tmp240,
 2874              	@ main.c:1327: 					trg1  = SysTick->VAL;
 2875 00b6 DAF80820 		ldr	r2, [r10, #8]	@ _56, MEM[(struct SysTick_Type *)3758153744B].VAL
 2876 00ba 3260     		str	r2, [r6]	@ _56, trg1
 2877              	@ main.c:1329: 				LED = 1;
 2878 00bc CBF80030 		str	r3, [fp]	@ tmp240, MEM[(volatile long unsigned int *)1109524916B]
 2879              	@ main.c:1253: 			if( (flag_10==0) && *SX1278_hw1.dio0==1 )  {
 2880 00c0 2568     		ldr	r5, [r4]	@ _25, *_12
 2881 00c2 002D     		cmp	r5, #0	@ _25
 2882 00c4 E5D1     		bne	.L229	@
 2883 00c6 7B69     		ldr	r3, [r7, #20]	@ _26, SX1278_hw1.dio0
 2884 00c8 1B68     		ldr	r3, [r3]	@ _27, *_26
 2885 00ca 012B     		cmp	r3, #1	@ _27,
 2886 00cc E1D1     		bne	.L229	@,
 2887              	.L236:
 2888              	@ main.c:1261: 				SX1278_LoRaRx(&SX1278_1);  // Odczyt danych do buforów
 2889 00ce 4846     		mov	r0, r9	@, tmp245
 2890 00d0 0593     		str	r3, [sp, #20]	@ _27, %sfp
 2891 00d2 FFF7FEFF 		bl	SX1278_LoRaRx	@
 2892              	@ main.c:1271: 				prssi = SX1278_SPIRead(&SX1278_1, LR_RegPktRssiValue)-164;
 2893 00d6 1A21     		movs	r1, #26	@,
 2894 00d8 4846     		mov	r0, r9	@, tmp245
 2895 00da FFF7FEFF 		bl	SX1278_SPIRead	@
 2896              	@ main.c:1278: 				memcpy(buf_rx, SX1278_1.rxBuffer, 7);
 2897 00de B8F80420 		ldrh	r2, [r8, #4]	@ unaligned	@ tmp198, MEM[(void *)&SX1278_1 + 10B]
 2898 00e2 D8F80000 		ldr	r0, [r8]	@ unaligned	@, MEM[(void *)&SX1278_1 + 10B]
 2899 00e6 ADF81C20 		strh	r2, [sp, #28]	@ unaligned	@ tmp198, MEM[(void *)&buf_rx]
 2900              	@ main.c:1285: 				Cnt= (s16)(buf_rx[4]+(buf_rx[5]<<8));
 2901 00ea 9DF81D10 		ldrb	r1, [sp, #29]	@ zero_extendqisi2	@ buf_rx, buf_rx
 2902 00ee 9DF81C20 		ldrb	r2, [sp, #28]	@ zero_extendqisi2	@ buf_rx, buf_rx
 2903              	@ main.c:1278: 				memcpy(buf_rx, SX1278_1.rxBuffer, 7);
 2904 00f2 98F806C0 		ldrb	ip, [r8, #6]	@ zero_extendqisi2	@ MEM[(void *)&SX1278_1 + 10B], MEM[(void *)&SX1278_1 + 10B]
 2905              	@ main.c:1285: 				Cnt= (s16)(buf_rx[4]+(buf_rx[5]<<8));
 2906 00f6 02EB0122 		add	r2, r2, r1, lsl #8	@ tmp215, buf_rx, buf_rx,
 2907 00fa 92B2     		uxth	r2, r2	@ Cnt, tmp215
ARM GAS  /tmp/ccDfNsWv.s 			page 52


 2908              	@ main.c:1284: 				t2 = (s16)(buf_rx[2]+(buf_rx[3]<<8));
 2909 00fc 0114     		asrs	r1, r0, #16	@ t2,,
 2910              	@ main.c:1278: 				memcpy(buf_rx, SX1278_1.rxBuffer, 7);
 2911 00fe 0690     		str	r0, [sp, #24]	@, MEM[(void *)&buf_rx]
 2912              	@ main.c:1292: 					sint2uart(t1);	//UaPutK("  ");
 2913 0100 00B2     		sxth	r0, r0	@,
 2914              	@ main.c:1278: 				memcpy(buf_rx, SX1278_1.rxBuffer, 7);
 2915 0102 8DF81EC0 		strb	ip, [sp, #30]	@ MEM[(void *)&SX1278_1 + 10B], MEM[(void *)&buf_rx]
 2916              	@ main.c:1285: 				Cnt= (s16)(buf_rx[4]+(buf_rx[5]<<8));
 2917 0106 0392     		str	r2, [sp, #12]	@ Cnt, %sfp
 2918              	@ main.c:1284: 				t2 = (s16)(buf_rx[2]+(buf_rx[3]<<8));
 2919 0108 0491     		str	r1, [sp, #16]	@ t2, %sfp
 2920              	@ main.c:1277: 				buf_rx[7] = 0;
 2921 010a 8DF81F50 		strb	r5, [sp, #31]	@ _25, buf_rx
 2922              	@ main.c:1292: 					sint2uart(t1);	//UaPutK("  ");
 2923 010e FFF7FEFF 		bl	sint2uart	@
 2924              	@ main.c:1293: 					UaPutC(',');					
 2925 0112 2C20     		movs	r0, #44	@,
 2926 0114 FFF7FEFF 		bl	UaPutC	@
 2927              	@ main.c:1294: 					sint2uart(t2);	//UaPutK("  ");
 2928 0118 0499     		ldr	r1, [sp, #16]	@ t2, %sfp
 2929 011a 0846     		mov	r0, r1	@, t2
 2930 011c FFF7FEFF 		bl	sint2uart	@
 2931              	@ main.c:1295: 					UaPutC(',');					
 2932 0120 2C20     		movs	r0, #44	@,
 2933 0122 FFF7FEFF 		bl	UaPutC	@
 2934              	@ main.c:1296: 					sint2uart(Cnt);	//UaPutK("  ");
 2935 0126 039A     		ldr	r2, [sp, #12]	@ Cnt, %sfp
 2936 0128 1046     		mov	r0, r2	@, Cnt
 2937 012a FFF7FEFF 		bl	sint2uart	@
 2938              	@ main.c:1297: 					UaPutS("\n");					
 2939 012e 1048     		ldr	r0, .L237+44	@,
 2940 0130 FFF7FEFF 		bl	UaPutS	@
 2941              	@ main.c:1318: 					LED = 0;
 2942 0134 CBF80050 		str	r5, [fp]	@ _25, MEM[(volatile long unsigned int *)1109524916B]
 2943              	@ main.c:1319: 					trg1  = SysTick->VAL;
 2944 0138 DAF80820 		ldr	r2, [r10, #8]	@ _48, MEM[(struct SysTick_Type *)3758153744B].VAL
 2945              	@ main.c:1321: 				flag_10 = 1;
 2946 013c 059B     		ldr	r3, [sp, #20]	@ _27, %sfp
 2947              	@ main.c:1319: 					trg1  = SysTick->VAL;
 2948 013e 3260     		str	r2, [r6]	@ _48, trg1
 2949              	@ main.c:1321: 				flag_10 = 1;
 2950 0140 2360     		str	r3, [r4]	@ _27, *_12
 2951 0142 A6E7     		b	.L229	@
 2952              	.L238:
 2953              		.align	2
 2954              	.L237:
 2955 0144 00080140 		.word	1073809408
 2956 0148 43430400 		.word	279363
 2957 014c 000C0140 		.word	1073810432
 2958 0150 00000000 		.word	.LANCHOR9
 2959 0154 04012142 		.word	1109459204
 2960 0158 00000000 		.word	.LANCHOR10
 2961 015c A4812142 		.word	1109492132
 2962 0160 10E000E0 		.word	-536813552
 2963 0164 00001001 		.word	.LANCHOR8+17825792
 2964 0168 00000000 		.word	trg1
ARM GAS  /tmp/ccDfNsWv.s 			page 53


 2965 016c E0322900 		.word	2700000
 2966 0170 00000000 		.word	.LC35
 2967 0174 80012142 		.word	1109459328
 2968 0178 A0812142 		.word	1109492128
 2969 017c 88012142 		.word	1109459336
 2970 0180 B4012242 		.word	1109524916
 2971              		.size	LoRaRX, .-LoRaRX
 2972              		.section	.text.LoRaRX1,"ax",%progbits
 2973              		.align	1
 2974              		.p2align 2,,3
 2975              		.global	LoRaRX1
 2976              		.syntax unified
 2977              		.thumb
 2978              		.thumb_func
 2979              		.fpu softvfp
 2980              		.type	LoRaRX1, %function
 2981              	LoRaRX1:
 2982              		@ args = 0, pretend = 0, frame = 24
 2983              		@ frame_needed = 0, uses_anonymous_args = 0
 2984              	@ main.c:1363: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 2985 0000 0022     		movs	r2, #0	@,
 2986              	@ main.c:1334: void LoRaRX1(void)	{
 2987 0002 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 2988              	@ main.c:1344: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 2989 0006 3021     		movs	r1, #48	@ tmp169,
 2990 0008 4FF00109 		mov	r9, #1	@ tmp166,
 2991              	@ main.c:1363: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 2992 000c 4FF0090A 		mov	r10, #9	@ tmp192,
 2993              	@ main.c:1371: 		flag_9=0;
 2994 0010 1746     		mov	r7, r2	@ tmp197,
 2995              	@ main.c:1344: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 2996 0012 DFF89082 		ldr	r8, .L265+108	@ tmp257,
 2997              	@ main.c:1345: 		LED=1;
 2998 0016 884D     		ldr	r5, .L265	@ tmp171,
 2999              	@ main.c:1344: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3000 0018 D8F80030 		ldr	r3, [r8]	@ p_Fifo1.83_1, p_Fifo1
 3001              	@ main.c:1348: 		GPIOB->CRH = (GPIOB->CRH & 0x0000ff00) | 0x43430033;	//   
 3002 001c 8748     		ldr	r0, .L265+4	@ tmp173,
 3003              	@ main.c:1344: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3004 001e A3F80490 		strh	r9, [r3, #4]	@ movhi	@ tmp166, p_Fifo1.83_1->rct
 3005 0022 A3F80290 		strh	r9, [r3, #2]	@ movhi	@ tmp166, p_Fifo1.83_1->rwi
 3006 0026 9971     		strb	r1, [r3, #6]	@ tmp169, p_Fifo1.83_1->rbuf
 3007              	@ main.c:1345: 		LED=1;
 3008 0028 C5F80090 		str	r9, [r5]	@ tmp166, MEM[(volatile long unsigned int *)1109524916B]
 3009              	@ main.c:1348: 		GPIOB->CRH = (GPIOB->CRH & 0x0000ff00) | 0x43430033;	//   
 3010 002c 4168     		ldr	r1, [r0, #4]	@ _6, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 3011 002e 844B     		ldr	r3, .L265+8	@ _9,
 3012              	@ main.c:1349: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 12); 
 3013 0030 844E     		ldr	r6, .L265+12	@ tmp255,
 3014              	@ main.c:1348: 		GPIOB->CRH = (GPIOB->CRH & 0x0000ff00) | 0x43430033;	//   
 3015 0032 01F47F41 		and	r1, r1, #65280	@ tmp174, _6,
 3016              	@ main.c:1349: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 12); 
 3017 0036 DFF870C2 		ldr	ip, .L265+112	@ tmp178,
 3018              	@ main.c:1348: 		GPIOB->CRH = (GPIOB->CRH & 0x0000ff00) | 0x43430033;	//   
 3019 003a 0B43     		orrs	r3, r3, r1	@, _9, _9, tmp174
 3020              	@ main.c:1350: 		SX1278_hw1.miso = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 13); 
 3021 003c DFF86CE2 		ldr	lr, .L265+116	@ tmp180,
ARM GAS  /tmp/ccDfNsWv.s 			page 54


 3022              	@ main.c:1348: 		GPIOB->CRH = (GPIOB->CRH & 0x0000ff00) | 0x43430033;	//   
 3023 0040 4360     		str	r3, [r0, #4]	@ _9, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 3024              	@ main.c:1362: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 3025 0042 814C     		ldr	r4, .L265+16	@ tmp256,
 3026              	@ main.c:1349: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 12); 
 3027 0044 C6F800C0 		str	ip, [r6]	@ tmp178, SX1278_hw1.mosi
 3028              	@ main.c:1351: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 14); 
 3029 0048 0CF1080C 		add	ip, ip, #8	@ tmp182, tmp182,
 3030              	@ main.c:1334: void LoRaRX1(void)	{
 3031 004c 89B0     		sub	sp, sp, #36	@,,
 3032              	@ main.c:1351: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 14); 
 3033 004e C6E901EC 		strd	lr, ip, [r6, #4]	@ tmp180, tmp182, tmp255,
 3034              	@ main.c:1352: 		SX1278_hw1.nss  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 8); 
 3035 0052 0EF16C0E 		add	lr, lr, #108	@ tmp184, tmp184,
 3036              	@ main.c:1353: 		SX1278_hw1.rst  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 9); 
 3037 0056 ACF1140C 		sub	ip, ip, #20	@ tmp186, tmp186,
 3038 005a C6E903EC 		strd	lr, ip, [r6, #12]	@ tmp184, tmp186, tmp255,
 3039              	@ main.c:1363: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3040 005e 4B46     		mov	r3, r9	@, tmp166
 3041              	@ main.c:1354: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 15); 
 3042 0060 ACF1680C 		sub	ip, ip, #104	@ tmp188, tmp188,
 3043              	@ main.c:1363: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3044 0064 1146     		mov	r1, r2	@,
 3045 0066 CDF800A0 		str	r10, [sp]	@ tmp192,
 3046 006a 2046     		mov	r0, r4	@, tmp256
 3047              	@ main.c:1354: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 15); 
 3048 006c C6F814C0 		str	ip, [r6, #20]	@ tmp188, SX1278_hw1.dio0
 3049              	@ main.c:1463: 					LED ^= 1;
 3050 0070 0495     		str	r5, [sp, #16]	@ tmp171, %sfp
 3051              	@ main.c:1362: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 3052 0072 2660     		str	r6, [r4]	@ tmp255, SX1278_1.hw
 3053              	@ main.c:1363: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3054 0074 FFF7FEFF 		bl	SX1278_begin	@
 3055              	@ main.c:1364: 		SX1278_LoRaEntryRx(&SX1278_1, 64, 2000);
 3056 0078 4FF4FA62 		mov	r2, #2000	@,
 3057 007c 4021     		movs	r1, #64	@,
 3058 007e 2046     		mov	r0, r4	@, tmp256
 3059 0080 FFF7FEFF 		bl	SX1278_LoRaEntryRx	@
 3060              	@ main.c:1371: 		flag_9=0;
 3061 0084 714B     		ldr	r3, .L265+20	@ tmp195,
 3062              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 3063 0086 724A     		ldr	r2, .L265+24	@ tmp198,
 3064              	@ main.c:1371: 		flag_9=0;
 3065 0088 5B01     		lsls	r3, r3, #5	@ tmp196, tmp195,
 3066 008a 5F62     		str	r7, [r3, #36]	@ tmp197, *_14
 3067              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 3068 008c 9168     		ldr	r1, [r2, #8]	@ _126, MEM[(struct SysTick_Type *)3758153744B].VAL
 3069 008e 714B     		ldr	r3, .L265+28	@ tmp199,
 3070              	@ main.c:1375: 		UaPutK(" Time=");		uint2uart(tim/TIM_US);			
 3071 0090 7148     		ldr	r0, .L265+32	@,
 3072              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 3073 0092 1960     		str	r1, [r3]	@ _126, Timt
 3074              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 3075 0094 1D68     		ldr	r5, [r3]	@ Timt.47_123, Timt
 3076 0096 9368     		ldr	r3, [r2, #8]	@ _124, MEM[(struct SysTick_Type *)3758153744B].VAL
 3077 0098 ED1A     		subs	r5, r5, r3	@ _125, Timt.47_123, _124
 3078 009a 0795     		str	r5, [sp, #28]	@ _125, MEM[(volatile u32 *)&tim]
ARM GAS  /tmp/ccDfNsWv.s 			page 55


 3079              	@ main.c:1375: 		UaPutK(" Time=");		uint2uart(tim/TIM_US);			
 3080 009c FFF7FEFF 		bl	UaPutK	@
 3081 00a0 6E48     		ldr	r0, .L265+36	@ tmp205,
 3082              	@ main.c:1359: 		sx[3]=SX1278_LORA_BW_500KHZ;
 3083 00a2 CDF80CA0 		str	r10, [sp, #12]	@ tmp192, %sfp
 3084              	@ main.c:1375: 		UaPutK(" Time=");		uint2uart(tim/TIM_US);			
 3085 00a6 A0FB0530 		umull	r3, r0, r0, r5	@ tmp267, tmp204, tmp205, _125
 3086 00aa 20FA09F0 		lsr	r0, r0, r9	@, tmp204,
 3087 00ae FFF7FEFF 		bl	uint2uart	@
 3088              	@ main.c:1360: 		sx[4]=10;
 3089 00b2 0A23     		movs	r3, #10	@ sx$4,
 3090              	@ main.c:1357: 		sx[1]=SX1278_POWER_11DBM;
 3091 00b4 BA46     		mov	r10, r7	@ sx$1, tmp197
 3092 00b6 6A4D     		ldr	r5, .L265+40	@ tmp253,
 3093              	@ main.c:1468: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){	
 3094 00b8 6A4F     		ldr	r7, .L265+44	@ tmp250,
 3095              	@ main.c:1360: 		sx[4]=10;
 3096 00ba 0593     		str	r3, [sp, #20]	@ sx$4, %sfp
 3097              	.L240:
 3098              	@ main.c:1383: 			if(p_Fifo1->rct){
 3099 00bc D8F80030 		ldr	r3, [r8]	@ p_Fifo1.89_16, p_Fifo1
 3100 00c0 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.89_16->rct
 3101 00c2 9BB2     		uxth	r3, r3	@ _17, p_Fifo1.89_16->rct
 3102 00c4 8BB9     		cbnz	r3, .L263	@ _17,
 3103              	.L241:
 3104              	@ main.c:1439: 			if( *SX1278_hw1.dio0 ){
 3105 00c6 7369     		ldr	r3, [r6, #20]	@ _34, SX1278_hw1.dio0
 3106 00c8 1B68     		ldr	r3, [r3]	@ _35, *_34
 3107 00ca 002B     		cmp	r3, #0	@ _35
 3108 00cc 43D1     		bne	.L264	@
 3109              	.L252:
 3110              	@ main.c:1468: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){	
 3111 00ce 604A     		ldr	r2, .L265+24	@ tmp248,
 3112 00d0 2B68     		ldr	r3, [r5]	@ trg0.92_45, trg0
 3113 00d2 9168     		ldr	r1, [r2, #8]	@ _47, MEM[(struct SysTick_Type *)3758153744B].VAL
 3114 00d4 5B1A     		subs	r3, r3, r1	@ tmp249, trg0.92_45, _47
 3115 00d6 BB42     		cmp	r3, r7	@ tmp249, tmp250
 3116 00d8 F0D9     		bls	.L240	@,
 3117              	@ main.c:1469: 				trg0  = SysTick->VAL;	
 3118 00da 9368     		ldr	r3, [r2, #8]	@ _50, MEM[(struct SysTick_Type *)3758153744B].VAL
 3119 00dc 2B60     		str	r3, [r5]	@ _50, trg0
 3120              	@ main.c:1383: 			if(p_Fifo1->rct){
 3121 00de D8F80030 		ldr	r3, [r8]	@ p_Fifo1.89_16, p_Fifo1
 3122 00e2 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.89_16->rct
 3123 00e4 9BB2     		uxth	r3, r3	@ _17, p_Fifo1.89_16->rct
 3124 00e6 002B     		cmp	r3, #0	@ _17
 3125 00e8 EDD0     		beq	.L241	@
 3126              	.L263:
 3127              	@ main.c:1384: 				UART_getChar( (char*)&swh);
 3128 00ea 0DF11B00 		add	r0, sp, #27	@ tmp271,,
 3129 00ee FFF7FEFF 		bl	UART_getChar	@
 3130              	@ main.c:1386: 				switch (swh)	{
 3131 00f2 9DF81B30 		ldrb	r3, [sp, #27]	@ zero_extendqisi2	@ swh, swh
 3132 00f6 623B     		subs	r3, r3, #98	@ tmp211, swh,
 3133 00f8 112B     		cmp	r3, #17	@ tmp211,
 3134 00fa 17D8     		bhi	.L242	@
 3135 00fc DFE803F0 		tbb	[pc, r3]	@ tmp211
ARM GAS  /tmp/ccDfNsWv.s 			page 56


 3136              	.L244:
 3137 0100 53       		.byte	(.L243-.L244)/2
 3138 0101 16       		.byte	(.L242-.L244)/2
 3139 0102 45       		.byte	(.L245-.L244)/2
 3140 0103 16       		.byte	(.L242-.L244)/2
 3141 0104 16       		.byte	(.L242-.L244)/2
 3142 0105 16       		.byte	(.L242-.L244)/2
 3143 0106 16       		.byte	(.L242-.L244)/2
 3144 0107 16       		.byte	(.L242-.L244)/2
 3145 0108 16       		.byte	(.L242-.L244)/2
 3146 0109 16       		.byte	(.L242-.L244)/2
 3147 010a 16       		.byte	(.L242-.L244)/2
 3148 010b 16       		.byte	(.L242-.L244)/2
 3149 010c 16       		.byte	(.L242-.L244)/2
 3150 010d 16       		.byte	(.L242-.L244)/2
 3151 010e 74       		.byte	(.L246-.L244)/2
 3152 010f 61       		.byte	(.L247-.L244)/2
 3153 0110 82       		.byte	(.L248-.L244)/2
 3154 0111 09       		.byte	(.L249-.L244)/2
 3155              		.p2align 1
 3156              	.L249:
 3157              	@ main.c:1410: 					UaPutK("\r\n 0-6("); uint2uart(sx[2]);UaPutK(") SF=");					
 3158 0112 5548     		ldr	r0, .L265+48	@,
 3159 0114 FFF7FEFF 		bl	UaPutK	@
 3160 0118 4846     		mov	r0, r9	@, sx$2
 3161 011a FFF7FEFF 		bl	uint2uart	@
 3162 011e 5348     		ldr	r0, .L265+52	@,
 3163 0120 FFF7FEFF 		bl	UaPutK	@
 3164              	@ main.c:1411: 					sx[2] = UART_getNum();					
 3165 0124 FFF7FEFF 		bl	UART_getNum	@
 3166 0128 5FFA80F9 		uxtb	r9, r0	@ sx$2,
 3167              	.L242:
 3168              	@ main.c:1426: 				SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3169 012c 039B     		ldr	r3, [sp, #12]	@ sx$3, %sfp
 3170 012e 5246     		mov	r2, r10	@, sx$1
 3171 0130 0093     		str	r3, [sp]	@ sx$3,
 3172 0132 0021     		movs	r1, #0	@,
 3173 0134 4B46     		mov	r3, r9	@, sx$2
 3174 0136 2046     		mov	r0, r4	@, tmp260
 3175 0138 FFF7FEFF 		bl	SX1278_begin	@
 3176              	@ main.c:1427: 				SX1278_LoRaEntryRx(&SX1278_1, 64, 2000);
 3177 013c 4FF4FA62 		mov	r2, #2000	@,
 3178 0140 4021     		movs	r1, #64	@,
 3179 0142 2046     		mov	r0, r4	@, tmp260
 3180 0144 FFF7FEFF 		bl	SX1278_LoRaEntryRx	@
 3181              	@ main.c:1429: 				UaPutK("\r\n Menu > ");
 3182 0148 4948     		ldr	r0, .L265+56	@,
 3183 014a FFF7FEFF 		bl	UaPutK	@
 3184              	@ main.c:1439: 			if( *SX1278_hw1.dio0 ){
 3185 014e 7369     		ldr	r3, [r6, #20]	@ _34, SX1278_hw1.dio0
 3186 0150 1B68     		ldr	r3, [r3]	@ _35, *_34
 3187 0152 002B     		cmp	r3, #0	@ _35
 3188 0154 BBD0     		beq	.L252	@
 3189              	.L264:
 3190              	@ main.c:1440: 				 message_length = SX1278_LoRaRxPacket(&SX1278_1);
 3191 0156 2046     		mov	r0, r4	@, tmp260
 3192 0158 FFF7FEFF 		bl	SX1278_LoRaRxPacket	@
ARM GAS  /tmp/ccDfNsWv.s 			page 57


 3193              	@ main.c:1441: 				if(message_length){
 3194 015c 0028     		cmp	r0, #0	@
 3195 015e B6D0     		beq	.L252	@
 3196              	@ main.c:1443: 					SX1278_read(&SX1278_1, (uint8_t *) buf_rx);
 3197 0160 4449     		ldr	r1, .L265+60	@,
 3198 0162 2046     		mov	r0, r4	@, tmp260
 3199 0164 FFF7FEFF 		bl	SX1278_read	@
 3200              	@ main.c:1444: 					UaPutK("\r\n prssi->");	
 3201 0168 4348     		ldr	r0, .L265+64	@,
 3202 016a FFF7FEFF 		bl	UaPutK	@
 3203              	@ main.c:1445: 					prssi = SX1278_SPIRead(&SX1278_1, LR_RegPktRssiValue)-164;
 3204 016e 1A21     		movs	r1, #26	@,
 3205 0170 2046     		mov	r0, r4	@, tmp260
 3206 0172 FFF7FEFF 		bl	SX1278_SPIRead	@
 3207 0176 A438     		subs	r0, r0, #164	@ tmp243,,
 3208              	@ main.c:1446: 					sint2uart(prssi);
 3209 0178 00B2     		sxth	r0, r0	@, tmp243
 3210 017a FFF7FEFF 		bl	sint2uart	@
 3211              	@ main.c:1463: 					LED ^= 1;
 3212 017e 049A     		ldr	r2, [sp, #16]	@ tmp261, %sfp
 3213 0180 1368     		ldr	r3, [r2]	@ _42, MEM[(volatile long unsigned int *)1109524916B]
 3214 0182 83F00103 		eor	r3, r3, #1	@ _44, _42,
 3215 0186 1360     		str	r3, [r2]	@ _44, MEM[(volatile long unsigned int *)1109524916B]
 3216 0188 A1E7     		b	.L252	@
 3217              	.L245:
 3218              	@ main.c:1418: 					UaPutK("\r\n sek("); uint2uart(sx[4]);UaPutK(") Delay=");					
 3219 018a 3C48     		ldr	r0, .L265+68	@,
 3220 018c FFF7FEFF 		bl	UaPutK	@
 3221 0190 0598     		ldr	r0, [sp, #20]	@, %sfp
 3222 0192 FFF7FEFF 		bl	uint2uart	@
 3223 0196 3A48     		ldr	r0, .L265+72	@,
 3224 0198 FFF7FEFF 		bl	UaPutK	@
 3225              	@ main.c:1419: 					sx[4] = UART_getNum();					
 3226 019c FFF7FEFF 		bl	UART_getNum	@
 3227 01a0 C3B2     		uxtb	r3, r0	@ sx$4,
 3228 01a2 0593     		str	r3, [sp, #20]	@ sx$4, %sfp
 3229              	@ main.c:1420: 					break;
 3230 01a4 C2E7     		b	.L242	@
 3231              	.L243:
 3232              	@ main.c:1414: 					UaPutK("\r\n 0-9("); uint2uart(sx[3]);UaPutK(") BW=");					
 3233 01a6 3748     		ldr	r0, .L265+76	@,
 3234 01a8 FFF7FEFF 		bl	UaPutK	@
 3235 01ac 0398     		ldr	r0, [sp, #12]	@, %sfp
 3236 01ae FFF7FEFF 		bl	uint2uart	@
 3237 01b2 3548     		ldr	r0, .L265+80	@,
 3238 01b4 FFF7FEFF 		bl	UaPutK	@
 3239              	@ main.c:1415: 					sx[3] = UART_getNum();					
 3240 01b8 FFF7FEFF 		bl	UART_getNum	@
 3241 01bc C3B2     		uxtb	r3, r0	@ sx$3,
 3242 01be 0393     		str	r3, [sp, #12]	@ sx$3, %sfp
 3243              	@ main.c:1416: 					break;
 3244 01c0 B4E7     		b	.L242	@
 3245              	.L247:
 3246              	@ main.c:1391: 					UaPutK("\r\n");
 3247 01c2 3248     		ldr	r0, .L265+84	@,
 3248 01c4 FFF7FEFF 		bl	UaPutK	@
 3249 01c8 4FF0000B 		mov	fp, #0	@ ivtmp.447,
ARM GAS  /tmp/ccDfNsWv.s 			page 58


 3250              	.L250:
 3251              	@ main.c:1393: 						dat = SX1278_SPIRead(&SX1278_1, n);
 3252 01cc 5FFA8BF1 		uxtb	r1, fp	@, ivtmp.447
 3253 01d0 2046     		mov	r0, r4	@, tmp260
 3254 01d2 FFF7FEFF 		bl	SX1278_SPIRead	@
 3255 01d6 0BF1010B 		add	fp, fp, #1	@ ivtmp.447, ivtmp.447,
 3256              	@ main.c:1394: 						hex2uart(dat,2);
 3257 01da 0221     		movs	r1, #2	@,
 3258 01dc FFF7FEFF 		bl	hex2uart	@
 3259              	@ main.c:1392: 					for (u08 n=0;n<0x14;n++){
 3260 01e0 BBF1140F 		cmp	fp, #20	@ ivtmp.447,
 3261 01e4 F2D1     		bne	.L250	@,
 3262 01e6 A1E7     		b	.L242	@
 3263              	.L246:
 3264              	@ main.c:1406: 					UaPutK("\r\n 0-3("); uint2uart(sx[1]);UaPutK(") POWER=");					
 3265 01e8 2948     		ldr	r0, .L265+88	@,
 3266 01ea FFF7FEFF 		bl	UaPutK	@
 3267 01ee 5046     		mov	r0, r10	@, sx$1
 3268 01f0 FFF7FEFF 		bl	uint2uart	@
 3269 01f4 2748     		ldr	r0, .L265+92	@,
 3270 01f6 FFF7FEFF 		bl	UaPutK	@
 3271              	@ main.c:1407: 					sx[1] = UART_getNum();					
 3272 01fa FFF7FEFF 		bl	UART_getNum	@
 3273 01fe 5FFA80FA 		uxtb	r10, r0	@ sx$1,
 3274              	@ main.c:1408: 					break;
 3275 0202 93E7     		b	.L242	@
 3276              	.L248:
 3277              	@ main.c:1399: 					UaPutK("\r\n Read Reg1=0x");	reg=UART_getHex();
 3278 0204 2448     		ldr	r0, .L265+96	@,
 3279 0206 FFF7FEFF 		bl	UaPutK	@
 3280 020a FFF7FEFF 		bl	UART_getHex	@
 3281 020e 8346     		mov	fp, r0	@ _20,
 3282              	@ main.c:1400: 					UaPutK(" Reg1 0x");						hex2uart(reg,2);
 3283 0210 2248     		ldr	r0, .L265+100	@,
 3284 0212 5FFA8BFB 		uxtb	fp, fp	@ _20, _20
 3285 0216 FFF7FEFF 		bl	UaPutK	@
 3286 021a 5846     		mov	r0, fp	@, _20
 3287 021c 0221     		movs	r1, #2	@,
 3288 021e FFF7FEFF 		bl	hex2uart	@
 3289              	@ main.c:1401: 					UaPutK("= 0x");						
 3290 0222 1F48     		ldr	r0, .L265+104	@,
 3291 0224 FFF7FEFF 		bl	UaPutK	@
 3292              	@ main.c:1402: 					dat = SX1278_SPIRead(&SX1278_1, reg);
 3293 0228 5946     		mov	r1, fp	@, _20
 3294 022a 2046     		mov	r0, r4	@, tmp260
 3295 022c FFF7FEFF 		bl	SX1278_SPIRead	@
 3296              	@ main.c:1403: 					hex2uart(dat,2);
 3297 0230 0221     		movs	r1, #2	@,
 3298 0232 FFF7FEFF 		bl	hex2uart	@
 3299              	@ main.c:1404: 					break;
 3300 0236 79E7     		b	.L242	@
 3301              	.L266:
 3302              		.align	2
 3303              	.L265:
 3304 0238 B4012242 		.word	1109524916
 3305 023c 000C0140 		.word	1073810432
 3306 0240 33004343 		.word	1128464435
ARM GAS  /tmp/ccDfNsWv.s 			page 59


 3307 0244 00000000 		.word	.LANCHOR11
 3308 0248 00000000 		.word	.LANCHOR12
 3309 024c 00001001 		.word	.LANCHOR8+17825792
 3310 0250 10E000E0 		.word	-536813552
 3311 0254 00000000 		.word	Timt
 3312 0258 00000000 		.word	.LC36
 3313 025c 398EE338 		.word	954437177
 3314 0260 00000000 		.word	trg0
 3315 0264 40548900 		.word	9000000
 3316 0268 40000000 		.word	.LC42
 3317 026c 48000000 		.word	.LC43
 3318 0270 74000000 		.word	.LC48
 3319 0274 00000000 		.word	.LANCHOR13
 3320 0278 80000000 		.word	.LC49
 3321 027c 60000000 		.word	.LC46
 3322 0280 68000000 		.word	.LC47
 3323 0284 50000000 		.word	.LC44
 3324 0288 58000000 		.word	.LC45
 3325 028c 40000000 		.word	.LC18
 3326 0290 2C000000 		.word	.LC40
 3327 0294 34000000 		.word	.LC41
 3328 0298 08000000 		.word	.LC37
 3329 029c 18000000 		.word	.LC38
 3330 02a0 24000000 		.word	.LC39
 3331 02a4 00000000 		.word	p_Fifo1
 3332 02a8 B0812142 		.word	1109492144
 3333 02ac 34812142 		.word	1109492020
 3334              		.size	LoRaRX1, .-LoRaRX1
 3335              		.section	.text.LoRaTX,"ax",%progbits
 3336              		.align	1
 3337              		.p2align 2,,3
 3338              		.global	LoRaTX
 3339              		.syntax unified
 3340              		.thumb
 3341              		.thumb_func
 3342              		.fpu softvfp
 3343              		.type	LoRaTX, %function
 3344              	LoRaTX:
 3345              		@ args = 0, pretend = 0, frame = 8
 3346              		@ frame_needed = 0, uses_anonymous_args = 0
 3347 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 3348              	@ main.c:5438: 		TIM3->CR1 = 0;
 3349 0004 0024     		movs	r4, #0	@ tmp160,
 3350              	@ main.c:5439: 		TIM3->PSC = (F_CPU/(1000000)) - 1;
 3351 0006 4FF04708 		mov	r8, #71	@ tmp163,
 3352              	@ main.c:5433: 		RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
 3353 000a 634F     		ldr	r7, .L272	@ tmp156,
 3354              	@ main.c:1477: void LoRaTX(void)		{
 3355 000c 85B0     		sub	sp, sp, #20	@,,
 3356              	@ main.c:1496: 		RtcInit();
 3357 000e FFF7FEFF 		bl	RtcInit	@
 3358              	@ main.c:5433: 		RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
 3359 0012 FA69     		ldr	r2, [r7, #28]	@ _71, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 3360              	@ main.c:5438: 		TIM3->CR1 = 0;
 3361 0014 614B     		ldr	r3, .L272+4	@ tmp158,
 3362              	@ main.c:5433: 		RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
 3363 0016 42F00202 		orr	r2, r2, #2	@ _72, _71,
ARM GAS  /tmp/ccDfNsWv.s 			page 60


 3364 001a FA61     		str	r2, [r7, #28]	@ _72, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 3365              	@ main.c:5440: 		TIM3->ARR = TIM3_ARR - 1;
 3366 001c 4FF6FE7E 		movw	lr, #65534	@ tmp166,
 3367              	@ main.c:5438: 		TIM3->CR1 = 0;
 3368 0020 1C80     		strh	r4, [r3]	@ movhi	@ tmp160, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 3369              	@ main.c:5439: 		TIM3->PSC = (F_CPU/(1000000)) - 1;
 3370 0022 A3F82880 		strh	r8, [r3, #40]	@ movhi	@ tmp163, MEM[(struct TIM_TypeDef *)1073742848B].PSC
 3371              	@ main.c:5442: 		TIM3->DIER = TIM_DIER_UIE;
 3372 0026 4FF00108 		mov	r8, #1	@ movhi	@ tmp269,
 3373              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 3374 002a 4FF0005C 		mov	ip, #536870912	@ tmp181,
 3375              	@ main.c:1498: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3376 002e 3025     		movs	r5, #48	@ tmp187,
 3377              	@ main.c:1517: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3378 0030 0920     		movs	r0, #9	@ tmp212,
 3379              	@ main.c:5440: 		TIM3->ARR = TIM3_ARR - 1;
 3380 0032 A3F82CE0 		strh	lr, [r3, #44]	@ movhi	@ tmp166, MEM[(struct TIM_TypeDef *)1073742848B].ARR
 3381              	@ main.c:5442: 		TIM3->DIER = TIM_DIER_UIE;
 3382 0036 A3F80C80 		strh	r8, [r3, #12]	@ movhi	@ tmp269, MEM[(struct TIM_TypeDef *)1073742848B].DIER
 3383              	@ main.c:5443: 		TIM3->CR1  |= TIM_CR1_DIR;
 3384 003a 1A88     		ldrh	r2, [r3]	@, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 3385              	@ main.c:1498: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3386 003c DFF88CE1 		ldr	lr, .L272+52	@ tmp182,
 3387              	@ main.c:5443: 		TIM3->CR1  |= TIM_CR1_DIR;
 3388 0040 42F01002 		orr	r2, r2, #16	@ _74, MEM[(struct TIM_TypeDef *)1073742848B].CR1,
 3389 0044 1A80     		strh	r2, [r3]	@ movhi	@ _74, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 3390              	@ main.c:5444: 		TIM3->CR1  |= TIM_CR1_CEN;
 3391 0046 1A88     		ldrh	r2, [r3]	@, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 3392              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 3393 0048 5549     		ldr	r1, .L272+8	@ tmp180,
 3394              	@ main.c:5444: 		TIM3->CR1  |= TIM_CR1_CEN;
 3395 004a 42F00102 		orr	r2, r2, #1	@ _76, MEM[(struct TIM_TypeDef *)1073742848B].CR1,
 3396 004e 1A80     		strh	r2, [r3]	@ movhi	@ _76, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 3397              	@ main.c:1498: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3398 0050 DEF80030 		ldr	r3, [lr]	@ p_Fifo1.94_2, p_Fifo1
 3399              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 3400 0054 C1F800C0 		str	ip, [r1]	@ tmp181, MEM[(struct NVIC_Type *)3758153984B].ISER
 3401              	@ main.c:1501: 		GPIOA->CRL = (GPIOA->CRL & 0xfff00000) | 0x00044343;	//   PA2=MOSI, PA1=MISO, PA0=
 3402 0058 A7F58437 		sub	r7, r7, #67584	@ tmp189, tmp189,
 3403              	@ main.c:1498: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3404 005c A3F80480 		strh	r8, [r3, #4]	@ movhi	@ tmp270, p_Fifo1.94_2->rct
 3405 0060 A3F80280 		strh	r8, [r3, #2]	@ movhi	@ tmp271, p_Fifo1.94_2->rwi
 3406 0064 9D71     		strb	r5, [r3, #6]	@ tmp187, p_Fifo1.94_2->rbuf
 3407              	@ main.c:1501: 		GPIOA->CRL = (GPIOA->CRL & 0xfff00000) | 0x00044343;	//   PA2=MOSI, PA1=MISO, PA0=
 3408 0066 3B68     		ldr	r3, [r7]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 3409 0068 4E49     		ldr	r1, .L272+12	@ _6,
 3410 006a 1B0D     		lsrs	r3, r3, #20	@ tmp190, _4,
 3411 006c 1B05     		lsls	r3, r3, #20	@ tmp190, tmp190,
 3412              	@ main.c:1502: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 3413 006e 4E4A     		ldr	r2, .L272+16	@ tmp194,
 3414              	@ main.c:1501: 		GPIOA->CRL = (GPIOA->CRL & 0xfff00000) | 0x00044343;	//   PA2=MOSI, PA1=MISO, PA0=
 3415 0070 1943     		orrs	r1, r1, r3	@, _6, _6, tmp190
 3416 0072 3960     		str	r1, [r7]	@ _6, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 3417              	@ main.c:1502: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 3418 0074 5368     		ldr	r3, [r2, #4]	@ _7, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 3419              	@ main.c:1503: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 2); 
 3420 0076 4D4D     		ldr	r5, .L272+20	@ tmp197,
ARM GAS  /tmp/ccDfNsWv.s 			page 61


 3421 0078 DFF854E1 		ldr	lr, .L272+56	@ tmp198,
 3422              	@ main.c:1504: 		SX1278_hw1.miso = (u32 *)m_BITBAND_PERIPH(&GPIOA->IDR, 1); 
 3423 007c DFF854C1 		ldr	ip, .L272+60	@ tmp200,
 3424              	@ main.c:1502: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 3425 0080 23F0FF03 		bic	r3, r3, #255	@ tmp195, _7,
 3426 0084 43F03303 		orr	r3, r3, #51	@ _9, tmp195,
 3427 0088 5360     		str	r3, [r2, #4]	@ _9, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 3428              	@ main.c:1517: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3429 008a 0090     		str	r0, [sp]	@ tmp212,
 3430              	@ main.c:1503: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 2); 
 3431 008c C5F800E0 		str	lr, [r5]	@ tmp198, SX1278_hw1.mosi
 3432              	@ main.c:1504: 		SX1278_hw1.miso = (u32 *)m_BITBAND_PERIPH(&GPIOA->IDR, 1); 
 3433 0090 C5F804C0 		str	ip, [r5, #4]	@ tmp200, SX1278_hw1.miso
 3434              	@ main.c:1505: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 0); 
 3435 0094 AEF1080E 		sub	lr, lr, #8	@ tmp202, tmp202,
 3436              	@ main.c:1506: 		SX1278_hw1.nss  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 8); 
 3437 0098 0CF5004C 		add	ip, ip, #32768	@ tmp204, tmp204,
 3438              	@ main.c:1505: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 0); 
 3439 009c C5F808E0 		str	lr, [r5, #8]	@ tmp202, SX1278_hw1.sck
 3440              	@ main.c:1516: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 3441 00a0 DFF83481 		ldr	r8, .L272+64	@ tmp209,
 3442              	@ main.c:1506: 		SX1278_hw1.nss  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 8); 
 3443 00a4 0CF19C0C 		add	ip, ip, #156	@ tmp204, tmp204,
 3444              	@ main.c:1507: 		SX1278_hw1.rst  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 9); 
 3445 00a8 0EF5004E 		add	lr, lr, #32768	@ tmp206, tmp206,
 3446              	@ main.c:1506: 		SX1278_hw1.nss  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 8); 
 3447 00ac C5F80CC0 		str	ip, [r5, #12]	@ tmp204, SX1278_hw1.nss
 3448              	@ main.c:1507: 		SX1278_hw1.rst  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 9); 
 3449 00b0 0EF1240E 		add	lr, lr, #36	@ tmp206, tmp206,
 3450              	@ main.c:1508: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 1); 
 3451 00b4 ACF19C0C 		sub	ip, ip, #156	@ tmp208, tmp208,
 3452              	@ main.c:1517: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3453 00b8 2246     		mov	r2, r4	@, tmp160
 3454 00ba 2146     		mov	r1, r4	@, tmp160
 3455 00bc 0123     		movs	r3, #1	@,
 3456 00be 4046     		mov	r0, r8	@, tmp209
 3457              	@ main.c:1516: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 3458 00c0 C8F80050 		str	r5, [r8]	@ tmp197, SX1278_1.hw
 3459              	@ main.c:1508: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 1); 
 3460 00c4 C5E904EC 		strd	lr, ip, [r5, #16]	@ tmp206, tmp208, tmp197,
 3461              	@ main.c:1517: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3462 00c8 FFF7FEFF 		bl	SX1278_begin	@
 3463              	@ main.c:1521: 		GPIOA->CRH = (GPIOA->CRH & 0x0fffffff) | 0x60000000;
 3464 00cc 7B68     		ldr	r3, [r7, #4]	@ _10, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 3465              	@ main.c:1531: 		GPIOA->ODR = 0b0001010000000000;
 3466 00ce 4FF4A051 		mov	r1, #5120	@ tmp228,
 3467              	@ main.c:1521: 		GPIOA->CRH = (GPIOA->CRH & 0x0fffffff) | 0x60000000;
 3468 00d2 23F07043 		bic	r3, r3, #-268435456	@ tmp214, _10,
 3469 00d6 43F0C043 		orr	r3, r3, #1610612736	@ _12, tmp214,
 3470 00da 7B60     		str	r3, [r7, #4]	@ _12, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 3471              	@ main.c:1527: 		LED	   = 1;		
 3472 00dc 0123     		movs	r3, #1	@ tmp272,
 3473              	@ main.c:1526: 		flag_9 = 0;		
 3474 00de 344A     		ldr	r2, .L272+24	@ tmp217,
 3475              	@ main.c:1527: 		LED	   = 1;		
 3476 00e0 3448     		ldr	r0, .L272+28	@ tmp220,
 3477              	@ main.c:1526: 		flag_9 = 0;		
ARM GAS  /tmp/ccDfNsWv.s 			page 62


 3478 00e2 5201     		lsls	r2, r2, #5	@ tmp218, tmp217,
 3479 00e4 5462     		str	r4, [r2, #36]	@ tmp160, *_17
 3480              	@ main.c:1527: 		LED	   = 1;		
 3481 00e6 0360     		str	r3, [r0]	@ tmp272, MEM[(volatile long unsigned int *)1109524916B]
 3482              	@ main.c:1529: 		GPIOA->CRH = (GPIOA->CRH & 0xfff0f0ff)|0x00020200 ; //low power
 3483 00e8 7B68     		ldr	r3, [r7, #4]	@ _18, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 3484 00ea DFF8F090 		ldr	r9, .L272+68	@ tmp263,
 3485 00ee 23F47023 		bic	r3, r3, #983040	@ tmp223, _18,
 3486 00f2 23F47063 		bic	r3, r3, #3840	@ tmp223, tmp223,
 3487 00f6 43F40033 		orr	r3, r3, #131072	@ _20, tmp223,
 3488 00fa 43F40073 		orr	r3, r3, #512	@ _20, _20,
 3489 00fe 7B60     		str	r3, [r7, #4]	@ _20, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 3490              	@ main.c:1531: 		GPIOA->ODR = 0b0001010000000000;
 3491 0100 F960     		str	r1, [r7, #12]	@ tmp228, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
 3492              	@ main.c:1532: 		GPIOA->ODR |= (1<<10)|(1<<12); 
 3493 0102 FB68     		ldr	r3, [r7, #12]	@ _21, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
 3494              	@ main.c:1567: 				LED ^= 1;
 3495 0104 8346     		mov	fp, r0	@ tmp238, tmp220
 3496              	@ main.c:1532: 		GPIOA->ODR |= (1<<10)|(1<<12); 
 3497 0106 0B43     		orrs	r3, r3, r1	@, _22, _21,
 3498 0108 FB60     		str	r3, [r7, #12]	@ _22, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
 3499              	@ main.c:1562: 		flag_9=1;	
 3500 010a 0123     		movs	r3, #1	@ tmp274,
 3501 010c CA46     		mov	r10, r9	@ tmp265, tmp263
 3502              	@ main.c:1526: 		flag_9 = 0;		
 3503 010e 3046     		mov	r0, r6	@ n, n
 3504              	@ main.c:1562: 		flag_9=1;	
 3505 0110 5362     		str	r3, [r2, #36]	@ tmp274, *_17
 3506 0112 294D     		ldr	r5, .L272+32	@ tmp261,
 3507              	@ main.c:1526: 		flag_9 = 0;		
 3508 0114 02F12403 		add	r3, r2, #36	@ _17, tmp218,
 3509              	@ main.c:1565: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 3510 0118 284C     		ldr	r4, .L272+36	@ tmp233,
 3511 011a 294F     		ldr	r7, .L272+40	@ tmp235,
 3512              	@ main.c:1526: 		flag_9 = 0;		
 3513 011c 0393     		str	r3, [sp, #12]	@ _17, %sfp
 3514              	.L268:
 3515              	@ main.c:1565: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 3516 011e 2B68     		ldr	r3, [r5]	@ trg0.99_23, trg0
 3517 0120 A268     		ldr	r2, [r4, #8]	@ _24, MEM[(struct SysTick_Type *)3758153744B].VAL
 3518 0122 9B1A     		subs	r3, r3, r2	@ tmp234, trg0.99_23, _24
 3519 0124 BB42     		cmp	r3, r7	@ tmp234, tmp235
 3520 0126 FAD9     		bls	.L268	@,
 3521              	@ main.c:1569: 				strcpy (buf_tx," ");		
 3522 0128 4FF0200E 		mov	lr, #32	@ tmp242,
 3523              	@ main.c:1566: 				trg0 = SysTick->VAL; 
 3524 012c A368     		ldr	r3, [r4, #8]	@ _26, MEM[(struct SysTick_Type *)3758153744B].VAL
 3525              	@ main.c:1571: 				strcat (buf_tx,unt2str(n++,str_num,5));
 3526 012e 00F1010C 		add	ip, r0, #1	@ tmp243, n,
 3527              	@ main.c:1566: 				trg0 = SysTick->VAL; 
 3528 0132 2B60     		str	r3, [r5]	@ _26, trg0
 3529              	@ main.c:1567: 				LED ^= 1;
 3530 0134 DBF80020 		ldr	r2, [fp]	@ _27, MEM[(volatile long unsigned int *)1109524916B]
 3531              	@ main.c:1571: 				strcat (buf_tx,unt2str(n++,str_num,5));
 3532 0138 1FFA8CF3 		uxth	r3, ip	@ n, tmp243
 3533              	@ main.c:1567: 				LED ^= 1;
 3534 013c 82F00102 		eor	r2, r2, #1	@ _28, _27,
ARM GAS  /tmp/ccDfNsWv.s 			page 63


 3535 0140 CBF80020 		str	r2, [fp]	@ _28, MEM[(volatile long unsigned int *)1109524916B]
 3536              	@ main.c:1571: 				strcat (buf_tx,unt2str(n++,str_num,5));
 3537 0144 1F49     		ldr	r1, .L272+44	@,
 3538 0146 0522     		movs	r2, #5	@,
 3539              	@ main.c:1569: 				strcpy (buf_tx," ");		
 3540 0148 A9F800E0 		strh	lr, [r9]	@ movhi	@ tmp242, MEM[(void *)&buf_tx]
 3541              	@ main.c:1571: 				strcat (buf_tx,unt2str(n++,str_num,5));
 3542 014c 0293     		str	r3, [sp, #8]	@ n, %sfp
 3543 014e FFF7FEFF 		bl	unt2str	@
 3544 0152 0646     		mov	r6, r0	@ _30,
 3545 0154 5046     		mov	r0, r10	@, tmp265
 3546 0156 FFF7FEFF 		bl	strlen	@
 3547 015a 3146     		mov	r1, r6	@, _30
 3548 015c 4844     		add	r0, r0, r9	@, tmp263
 3549 015e FFF7FEFF 		bl	stpcpy	@
 3550              	@ main.c:1572: 				strcat (buf_tx," ");
 3551 0162 194B     		ldr	r3, .L272+48	@ tmp278,
 3552 0164 A0EB0906 		sub	r6, r0, r9	@ _64, tmp249, tmp263
 3553 0168 1A88     		ldrh	r2, [r3]	@ unaligned	@ tmp254, MEM[(void *)" "]
 3554              	@ main.c:1573: 				message_length = strlen(buf_tx); 
 3555 016a 0136     		adds	r6, r6, #1	@ tmp255, _64,
 3556              	@ main.c:1575: 				SX1278_LoRaEntryTx (&SX1278_1, message_length, 2000);
 3557 016c F6B2     		uxtb	r6, r6	@ _32, tmp255
 3558              	@ main.c:1572: 				strcat (buf_tx," ");
 3559 016e 0280     		strh	r2, [r0]	@ unaligned	@ tmp254, MEM[(void *)_65]
 3560              	@ main.c:1575: 				SX1278_LoRaEntryTx (&SX1278_1, message_length, 2000);
 3561 0170 3146     		mov	r1, r6	@, _32
 3562 0172 4FF4FA62 		mov	r2, #2000	@,
 3563 0176 4046     		mov	r0, r8	@, tmp266
 3564 0178 FFF7FEFF 		bl	SX1278_LoRaEntryTx	@
 3565              	@ main.c:1579: 				SX1278_LoRaTxPacketStart(&SX1278_1, (uint8_t *) buf_tx, message_length);  // Sta
 3566 017c 3246     		mov	r2, r6	@, _32
 3567 017e 5146     		mov	r1, r10	@, tmp265
 3568 0180 4046     		mov	r0, r8	@, tmp266
 3569 0182 FFF7FEFF 		bl	SX1278_LoRaTxPacketStart	@
 3570              	@ main.c:1580: 				flag_9=1;	
 3571 0186 0122     		movs	r2, #1	@ tmp259,
 3572 0188 039B     		ldr	r3, [sp, #12]	@ _17, %sfp
 3573              	@ main.c:1581: 				SX1278_sleep(&SX1278_1);
 3574 018a 4046     		mov	r0, r8	@, tmp266
 3575              	@ main.c:1580: 				flag_9=1;	
 3576 018c 1A60     		str	r2, [r3]	@ tmp259, *_17
 3577              	@ main.c:1581: 				SX1278_sleep(&SX1278_1);
 3578 018e FFF7FEFF 		bl	SX1278_sleep	@
 3579              	@ main.c:1571: 				strcat (buf_tx,unt2str(n++,str_num,5));
 3580 0192 029B     		ldr	r3, [sp, #8]	@ n, %sfp
 3581 0194 1846     		mov	r0, r3	@ n, n
 3582 0196 C2E7     		b	.L268	@
 3583              	.L273:
 3584              		.align	2
 3585              	.L272:
 3586 0198 00100240 		.word	1073876992
 3587 019c 00040040 		.word	1073742848
 3588 01a0 00E100E0 		.word	-536813312
 3589 01a4 43430400 		.word	279363
 3590 01a8 000C0140 		.word	1073810432
 3591 01ac 00000000 		.word	.LANCHOR14
ARM GAS  /tmp/ccDfNsWv.s 			page 64


 3592 01b0 00001001 		.word	.LANCHOR8+17825792
 3593 01b4 B4012242 		.word	1109524916
 3594 01b8 00000000 		.word	trg0
 3595 01bc 10E000E0 		.word	-536813552
 3596 01c0 40548900 		.word	9000000
 3597 01c4 00000000 		.word	.LANCHOR17
 3598 01c8 28000000 		.word	.LC14
 3599 01cc 00000000 		.word	p_Fifo1
 3600 01d0 88012142 		.word	1109459336
 3601 01d4 04012142 		.word	1109459204
 3602 01d8 00000000 		.word	.LANCHOR15
 3603 01dc 00000000 		.word	.LANCHOR16
 3604              		.size	LoRaTX, .-LoRaTX
 3605              		.section	.text.col1,"ax",%progbits
 3606              		.align	1
 3607              		.p2align 2,,3
 3608              		.global	col1
 3609              		.syntax unified
 3610              		.thumb
 3611              		.thumb_func
 3612              		.fpu softvfp
 3613              		.type	col1, %function
 3614              	col1:
 3615              		@ args = 0, pretend = 0, frame = 0
 3616              		@ frame_needed = 0, uses_anonymous_args = 0
 3617              		@ link register save eliminated.
 3618              	@ main.c:1699: 			dma_buf[0]=0xe0;	dma_buf[8]  =0xe0;	dma_buf[16]=0xe0;
 3619 0000 4FF0E032 		mov	r2, #-522133280	@ tmp111,
 3620 0004 044B     		ldr	r3, .L275	@ tmp110,
 3621              	@ main.c:1702: 			dma_buf[3]=0xe0;	dma_buf[11] =0xe0;	dma_buf[19]=0xe0;
 3622 0006 0549     		ldr	r1, .L275+4	@ tmp113,
 3623              	@ main.c:1699: 			dma_buf[0]=0xe0;	dma_buf[8]  =0xe0;	dma_buf[16]=0xe0;
 3624 0008 1A60     		str	r2, [r3]	@ tmp111, MEM[(u08[24] *)&dma_buf]
 3625              	@ main.c:1702: 			dma_buf[3]=0xe0;	dma_buf[11] =0xe0;	dma_buf[19]=0xe0;
 3626 000a C3E90222 		strd	r2, r2, [r3, #8]	@ tmp111, tmp111, tmp110,
 3627 000e C3E90422 		strd	r2, r2, [r3, #16]	@ tmp111, tmp111, tmp110,
 3628 0012 5960     		str	r1, [r3, #4]	@ tmp113, MEM[(u08[24] *)&dma_buf + 4B]
 3629              	@ main.c:1707: 		}
 3630 0014 7047     		bx	lr	@
 3631              	.L276:
 3632 0016 00BF     		.align	2
 3633              	.L275:
 3634 0018 00000000 		.word	.LANCHOR18
 3635 001c E0F8F8F8 		.word	-117901088
 3636              		.size	col1, .-col1
 3637              		.section	.text.col2,"ax",%progbits
 3638              		.align	1
 3639              		.p2align 2,,3
 3640              		.global	col2
 3641              		.syntax unified
 3642              		.thumb
 3643              		.thumb_func
 3644              		.fpu softvfp
 3645              		.type	col2, %function
 3646              	col2:
 3647              		@ args = 0, pretend = 0, frame = 0
 3648              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccDfNsWv.s 			page 65


 3649              		@ link register save eliminated.
 3650              	@ main.c:1709: 			dma_buf[0]=0xe0;	dma_buf[8]  =0xe0;	dma_buf[16]=0xe0;
 3651 0000 4FF0E032 		mov	r2, #-522133280	@ tmp111,
 3652 0004 034B     		ldr	r3, .L278	@ tmp110,
 3653              	@ main.c:1712: 			dma_buf[3]=0xe0;	dma_buf[11] =0xe0;	dma_buf[19]=0xe0;
 3654 0006 C3E90022 		strd	r2, r2, [r3]	@ tmp111, tmp111, tmp110
 3655 000a C3E90222 		strd	r2, r2, [r3, #8]	@ tmp111, tmp111, tmp110,
 3656 000e C3E90422 		strd	r2, r2, [r3, #16]	@ tmp111, tmp111, tmp110,
 3657              	@ main.c:1717: 	}	
 3658 0012 7047     		bx	lr	@
 3659              	.L279:
 3660              		.align	2
 3661              	.L278:
 3662 0014 00000000 		.word	.LANCHOR18
 3663              		.size	col2, .-col2
 3664              		.section	.text.col0,"ax",%progbits
 3665              		.align	1
 3666              		.p2align 2,,3
 3667              		.global	col0
 3668              		.syntax unified
 3669              		.thumb
 3670              		.thumb_func
 3671              		.fpu softvfp
 3672              		.type	col0, %function
 3673              	col0:
 3674              		@ args = 0, pretend = 0, frame = 0
 3675              		@ frame_needed = 0, uses_anonymous_args = 0
 3676              		@ link register save eliminated.
 3677              	@ main.c:1719: 			dma_buf[0]=0;	dma_buf[8]  =0x0;	dma_buf[16]=0x0;
 3678 0000 0022     		movs	r2, #0	@ tmp111,
 3679 0002 044B     		ldr	r3, .L281	@ tmp110,
 3680              	@ main.c:1722: 			dma_buf[3]=0;	dma_buf[11] =0x0;	dma_buf[19]=0x0;
 3681 0004 C3E90022 		strd	r2, r2, [r3]	@ tmp111, tmp111, tmp110
 3682 0008 C3E90222 		strd	r2, r2, [r3, #8]	@ tmp111, tmp111, tmp110,
 3683 000c C3E90422 		strd	r2, r2, [r3, #16]	@ tmp111, tmp111, tmp110,
 3684              	@ main.c:1727: 	}
 3685 0010 7047     		bx	lr	@
 3686              	.L282:
 3687 0012 00BF     		.align	2
 3688              	.L281:
 3689 0014 00000000 		.word	.LANCHOR18
 3690              		.size	col0, .-col0
 3691              		.section	.text.ws2812led,"ax",%progbits
 3692              		.align	1
 3693              		.p2align 2,,3
 3694              		.global	ws2812led
 3695              		.syntax unified
 3696              		.thumb
 3697              		.thumb_func
 3698              		.fpu softvfp
 3699              		.type	ws2812led, %function
 3700              	ws2812led:
 3701              		@ args = 0, pretend = 0, frame = 0
 3702              		@ frame_needed = 0, uses_anonymous_args = 0
 3703 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 3704              	@ main.c:1739: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|SPI_CR1_MSTR|SPI_CR1_BR_0|SPI_CR1_BR_1;	// 0x0
 3705 0004 4FF44774 		mov	r4, #796	@ tmp152,
ARM GAS  /tmp/ccDfNsWv.s 			page 66


 3706              	@ main.c:1733: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0xBBB30000;	// PA5~7
 3707 0008 3648     		ldr	r0, .L295	@ tmp143,
 3708              	@ main.c:1737: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 3709 000a 3749     		ldr	r1, .L295+4	@ tmp148,
 3710              	@ main.c:1733: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0xBBB30000;	// PA5~7
 3711 000c 0368     		ldr	r3, [r0]	@ _2, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 3712              	@ main.c:1739: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|SPI_CR1_MSTR|SPI_CR1_BR_0|SPI_CR1_BR_1;	// 0x0
 3713 000e 374A     		ldr	r2, .L295+8	@ tmp150,
 3714              	@ main.c:1733: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0xBBB30000;	// PA5~7
 3715 0010 9BB2     		uxth	r3, r3	@ tmp144, _2
 3716 0012 43F03B43 		orr	r3, r3, #-1157627904	@ _5, tmp144,
 3717 0016 43F43303 		orr	r3, r3, #11730944	@ _5, _5,
 3718 001a 0360     		str	r3, [r0]	@ _5, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 3719              	@ main.c:1752: 		DMA1_Channel3->CCR 	= 0;										//Disable channel
 3720 001c 0020     		movs	r0, #0	@ tmp167,
 3721              	@ main.c:1737: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 3722 001e 8B69     		ldr	r3, [r1, #24]	@ _7, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 3723              	@ main.c:1767: 		DMA1_Channel3->CCR =  CCR_reg;	
 3724 0020 B026     		movs	r6, #176	@ tmp175,
 3725              	@ main.c:1737: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 3726 0022 43F48053 		orr	r3, r3, #4096	@ _8, _7,
 3727 0026 8B61     		str	r3, [r1, #24]	@ _8, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 3728              	@ main.c:1739: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|SPI_CR1_MSTR|SPI_CR1_BR_0|SPI_CR1_BR_1;	// 0x0
 3729 0028 1480     		strh	r4, [r2]	@ movhi	@ tmp152, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 3730              	@ main.c:1740: 		SPI1->CR2 |= SPI_CR2_TXDMAEN;
 3731 002a 9388     		ldrh	r3, [r2, #4]	@, MEM[(struct SPI_TypeDef *)1073819648B].CR2
 3732              	@ main.c:1774: 		u08 fl=0;
 3733 002c 0446     		mov	r4, r0	@ fl, tmp167
 3734              	@ main.c:1740: 		SPI1->CR2 |= SPI_CR2_TXDMAEN;
 3735 002e 43F00203 		orr	r3, r3, #2	@ _10, MEM[(struct SPI_TypeDef *)1073819648B].CR2,
 3736 0032 9380     		strh	r3, [r2, #4]	@ movhi	@ _10, MEM[(struct SPI_TypeDef *)1073819648B].CR2
 3737              	@ main.c:1741: 		SPI1->CR1 |= SPI_CR1_SPE;		
 3738 0034 1388     		ldrh	r3, [r2]	@, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 3739              	@ main.c:1769: 		DMA1->IFCR = DMA_IFCR_CGIF3 | DMA_IFCR_CTCIF3;
 3740 0036 4FF44075 		mov	r5, #768	@ tmp177,
 3741              	@ main.c:1741: 		SPI1->CR1 |= SPI_CR1_SPE;		
 3742 003a 43F04003 		orr	r3, r3, #64	@ _12, MEM[(struct SPI_TypeDef *)1073819648B].CR1,
 3743 003e 1380     		strh	r3, [r2]	@ movhi	@ _12, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 3744              	@ main.c:1749: 		col0();
 3745 0040 FFF7FEFF 		bl	col0	@
 3746              	@ main.c:1756: 		DMA1_Channel3->CNDTR = 24;		//Buffor size :
 3747 0044 4FF0180C 		mov	ip, #24	@ tmp173,
 3748              	@ main.c:1751: 		RCC->AHBENR   			|= RCC_AHBENR_DMA1EN;		// enable clock for DMA1
 3749 0048 4A69     		ldr	r2, [r1, #20]	@ _13, MEM[(struct RCC_TypeDef *)1073876992B].AHBENR
 3750              	@ main.c:1752: 		DMA1_Channel3->CCR 	= 0;										//Disable channel
 3751 004a 294B     		ldr	r3, .L295+12	@ tmp166,
 3752              	@ main.c:1751: 		RCC->AHBENR   			|= RCC_AHBENR_DMA1EN;		// enable clock for DMA1
 3753 004c 42F00102 		orr	r2, r2, #1	@ _14, _13,
 3754 0050 4A61     		str	r2, [r1, #20]	@ _14, MEM[(struct RCC_TypeDef *)1073876992B].AHBENR
 3755              	@ main.c:1753: 		DMA1_Channel3->CMAR = (uint32_t)dma_buf;	 	//Destination address:
 3756 0052 2849     		ldr	r1, .L295+16	@ tmp168,
 3757              	@ main.c:1754: 		DMA1_Channel3->CPAR = (uint32_t)&SPI1->DR;	//Source PERIPHERAL address:
 3758 0054 284A     		ldr	r2, .L295+20	@ tmp171,
 3759              	@ main.c:1752: 		DMA1_Channel3->CCR 	= 0;										//Disable channel
 3760 0056 1860     		str	r0, [r3]	@ tmp167, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CCR
 3761              	@ main.c:1753: 		DMA1_Channel3->CMAR = (uint32_t)dma_buf;	 	//Destination address:
 3762 0058 D960     		str	r1, [r3, #12]	@ tmp168, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CMAR
ARM GAS  /tmp/ccDfNsWv.s 			page 67


 3763              	@ main.c:1754: 		DMA1_Channel3->CPAR = (uint32_t)&SPI1->DR;	//Source PERIPHERAL address:
 3764 005a 9A60     		str	r2, [r3, #8]	@ tmp171, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CPAR
 3765              	@ main.c:1769: 		DMA1->IFCR = DMA_IFCR_CGIF3 | DMA_IFCR_CTCIF3;
 3766 005c 274A     		ldr	r2, .L295+24	@ tmp176,
 3767              	@ main.c:1756: 		DMA1_Channel3->CNDTR = 24;		//Buffor size :
 3768 005e C3F804C0 		str	ip, [r3, #4]	@ tmp173, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CNDTR
 3769              	@ main.c:1767: 		DMA1_Channel3->CCR =  CCR_reg;	
 3770 0062 1E60     		str	r6, [r3]	@ tmp175, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CCR
 3771              	@ main.c:1769: 		DMA1->IFCR = DMA_IFCR_CGIF3 | DMA_IFCR_CTCIF3;
 3772 0064 5560     		str	r5, [r2, #4]	@ tmp177, MEM[(struct DMA_TypeDef *)1073872896B].IFCR
 3773              	@ main.c:1770: 		DMA1_Channel3->CCR |= DMA_CCR1_EN;
 3774 0066 1A68     		ldr	r2, [r3]	@ _16, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CCR
 3775              	@ main.c:1773: 		UaPutK("\r\n DMA start...");
 3776 0068 2548     		ldr	r0, .L295+28	@,
 3777              	@ main.c:1770: 		DMA1_Channel3->CCR |= DMA_CCR1_EN;
 3778 006a 42F00102 		orr	r2, r2, #1	@ _17, _16,
 3779 006e 1A60     		str	r2, [r3]	@ _17, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CCR
 3780              	@ main.c:1773: 		UaPutK("\r\n DMA start...");
 3781 0070 FFF7FEFF 		bl	UaPutK	@
 3782 0074 234F     		ldr	r7, .L295+32	@ tmp206,
 3783 0076 DFF8A080 		ldr	r8, .L295+52	@ tmp208,
 3784 007a 234E     		ldr	r6, .L295+36	@ tmp207,
 3785              	@ main.c:1778: 			if(STCLK_MS*100 < (trg0 - SysTick->VAL)){
 3786 007c 2348     		ldr	r0, .L295+40	@ tmp182,
 3787              	@ main.c:1805: 					LED ^= 1;
 3788 007e 244D     		ldr	r5, .L295+44	@ tmp209,
 3789              	.L290:
 3790              	@ main.c:1778: 			if(STCLK_MS*100 < (trg0 - SysTick->VAL)){
 3791 0080 DFF898C0 		ldr	ip, .L295+56	@ tmp184,
 3792              	@ main.c:1782: 			if(STCLK_MS*200 < (trg1 - SysTick->VAL)){
 3793 0084 2349     		ldr	r1, .L295+48	@ tmp190,
 3794              	.L285:
 3795              	@ main.c:1778: 			if(STCLK_MS*100 < (trg0 - SysTick->VAL)){
 3796 0086 3B68     		ldr	r3, [r7]	@ trg0.108_18, trg0
 3797 0088 8268     		ldr	r2, [r0, #8]	@ _19, MEM[(struct SysTick_Type *)3758153744B].VAL
 3798 008a 9B1A     		subs	r3, r3, r2	@ tmp183, trg0.108_18, _19
 3799 008c 6345     		cmp	r3, ip	@ tmp183, tmp184
 3800              	@ main.c:1779: 				trg0 = SysTick->VAL;
 3801 008e 84BF     		itt	hi
 3802 0090 8368     		ldrhi	r3, [r0, #8]	@ _21, MEM[(struct SysTick_Type *)3758153744B].VAL
 3803 0092 3B60     		strhi	r3, [r7]	@ _21, trg0
 3804              	@ main.c:1782: 			if(STCLK_MS*200 < (trg1 - SysTick->VAL)){
 3805 0094 D8F80030 		ldr	r3, [r8]	@ trg1.109_22, trg1
 3806 0098 8268     		ldr	r2, [r0, #8]	@ _23, MEM[(struct SysTick_Type *)3758153744B].VAL
 3807 009a 9B1A     		subs	r3, r3, r2	@ tmp189, trg1.109_22, _23
 3808 009c 8B42     		cmp	r3, r1	@ tmp189, tmp190
 3809 009e F2D9     		bls	.L285	@,
 3810              	@ main.c:1783: 				trg1 = SysTick->VAL;
 3811 00a0 8368     		ldr	r3, [r0, #8]	@ _25, MEM[(struct SysTick_Type *)3758153744B].VAL
 3812 00a2 C8F80030 		str	r3, [r8]	@ _25, trg1
 3813              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 3814 00a6 8368     		ldr	r3, [r0, #8]	@ _55, MEM[(struct SysTick_Type *)3758153744B].VAL
 3815 00a8 3360     		str	r3, [r6]	@ _55, delay_us
 3816              	.L286:
 3817              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 3818 00aa 3368     		ldr	r3, [r6]	@ delay_us.48_56, delay_us
 3819 00ac 8268     		ldr	r2, [r0, #8]	@ _57, MEM[(struct SysTick_Type *)3758153744B].VAL
ARM GAS  /tmp/ccDfNsWv.s 			page 68


 3820 00ae 9B1A     		subs	r3, r3, r2	@ tmp197, delay_us.48_56, _57
 3821 00b0 B3F5E17F 		cmp	r3, #450	@ tmp197,
 3822 00b4 F9D3     		bcc	.L286	@,
 3823              	@ main.c:1799: 				if(fl){
 3824 00b6 74B1     		cbz	r4, .L287	@ fl,
 3825              	@ main.c:1800: 					col1();
 3826 00b8 FFF7FEFF 		bl	col1	@
 3827              	@ main.c:1801: 					fl=0;
 3828 00bc 0024     		movs	r4, #0	@ fl,
 3829              	.L288:
 3830              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 3831 00be 40F62311 		movw	r1, #2339	@ tmp205,
 3832              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 3833 00c2 8368     		ldr	r3, [r0, #8]	@ _59, MEM[(struct SysTick_Type *)3758153744B].VAL
 3834 00c4 3360     		str	r3, [r6]	@ _59, delay_us
 3835              	.L289:
 3836              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 3837 00c6 3368     		ldr	r3, [r6]	@ delay_us.48_60, delay_us
 3838 00c8 8268     		ldr	r2, [r0, #8]	@ _61, MEM[(struct SysTick_Type *)3758153744B].VAL
 3839 00ca 9B1A     		subs	r3, r3, r2	@ tmp204, delay_us.48_60, _61
 3840 00cc 8B42     		cmp	r3, r1	@ tmp204, tmp205
 3841 00ce FAD9     		bls	.L289	@,
 3842              	@ main.c:1809: 				col0();
 3843 00d0 FFF7FEFF 		bl	col0	@
 3844 00d4 D4E7     		b	.L290	@
 3845              	.L287:
 3846              	@ main.c:1804: 					fl=1;
 3847 00d6 0124     		movs	r4, #1	@ fl,
 3848              	@ main.c:1803: 					col1();
 3849 00d8 FFF7FEFF 		bl	col1	@
 3850              	@ main.c:1805: 					LED ^= 1;
 3851 00dc 2B68     		ldr	r3, [r5]	@ _26, MEM[(volatile long unsigned int *)1109524916B]
 3852 00de 6340     		eors	r3, r3, r4	@, _27, _26,
 3853 00e0 2B60     		str	r3, [r5]	@ _27, MEM[(volatile long unsigned int *)1109524916B]
 3854 00e2 ECE7     		b	.L288	@
 3855              	.L296:
 3856              		.align	2
 3857              	.L295:
 3858 00e4 00080140 		.word	1073809408
 3859 00e8 00100240 		.word	1073876992
 3860 00ec 00300140 		.word	1073819648
 3861 00f0 30000240 		.word	1073872944
 3862 00f4 00000000 		.word	.LANCHOR18
 3863 00f8 0C300140 		.word	1073819660
 3864 00fc 00000240 		.word	1073872896
 3865 0100 00000000 		.word	.LC50
 3866 0104 00000000 		.word	trg0
 3867 0108 00000000 		.word	delay_us
 3868 010c 10E000E0 		.word	-536813552
 3869 0110 B4012242 		.word	1109524916
 3870 0114 40771B00 		.word	1800000
 3871 0118 00000000 		.word	trg1
 3872 011c A0BB0D00 		.word	900000
 3873              		.size	ws2812led, .-ws2812led
 3874              		.section	.text.lexmark_lcd,"ax",%progbits
 3875              		.align	1
 3876              		.p2align 2,,3
ARM GAS  /tmp/ccDfNsWv.s 			page 69


 3877              		.global	lexmark_lcd
 3878              		.syntax unified
 3879              		.thumb
 3880              		.thumb_func
 3881              		.fpu softvfp
 3882              		.type	lexmark_lcd, %function
 3883              	lexmark_lcd:
 3884              		@ Volatile: function does not return.
 3885              		@ args = 0, pretend = 0, frame = 8
 3886              		@ frame_needed = 0, uses_anonymous_args = 0
 3887 0000 00B5     		push	{lr}	@
 3888 0002 83B0     		sub	sp, sp, #12	@,,
 3889              	@ main.c:1890: 		UC1608_Init();
 3890 0004 FFF7FEFF 		bl	UC1608_Init	@
 3891              	@ main.c:1896: 		UC1608_Clr();
 3892 0008 FFF7FEFF 		bl	UC1608_Clr	@
 3893              	@ main.c:1898: 		UC1608_str (0, 0,"Witaj szkolo         ");
 3894 000c 0021     		movs	r1, #0	@,
 3895 000e 174A     		ldr	r2, .L302	@,
 3896 0010 0846     		mov	r0, r1	@,
 3897 0012 FFF7FEFF 		bl	UC1608_str	@
 3898              	@ main.c:1899: 		UC1608_str (1, 0,"Zapraszam do pracy        ");
 3899 0016 164A     		ldr	r2, .L302+4	@,
 3900 0018 0021     		movs	r1, #0	@,
 3901 001a 0120     		movs	r0, #1	@,
 3902 001c FFF7FEFF 		bl	UC1608_str	@
 3903              	@ main.c:1900: 		UC1608_Refresh();
 3904 0020 FFF7FEFF 		bl	UC1608_Refresh	@
 3905              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 3906 0024 134B     		ldr	r3, .L302+8	@ tmp122,
 3907 0026 144A     		ldr	r2, .L302+12	@ tmp137,
 3908              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 3909 0028 1D46     		mov	r5, r3	@ tmp125, tmp122
 3910              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 3911 002a 9B68     		ldr	r3, [r3, #8]	@ _17, MEM[(struct SysTick_Type *)3758153744B].VAL
 3912              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 3913 002c 1349     		ldr	r1, .L302+16	@ tmp127,
 3914              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 3915 002e 1360     		str	r3, [r2]	@ _17, delay_us
 3916              	.L298:
 3917              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 3918 0030 1368     		ldr	r3, [r2]	@ delay_us.116_18, delay_us
 3919 0032 A868     		ldr	r0, [r5, #8]	@ _19, MEM[(struct SysTick_Type *)3758153744B].VAL
 3920 0034 1B1A     		subs	r3, r3, r0	@ tmp126, delay_us.116_18, _19
 3921 0036 8B42     		cmp	r3, r1	@ tmp126, tmp127
 3922 0038 FAD9     		bls	.L298	@,
 3923              	@ main.c:1903: 		UC1608_str (1, 0,"                          ");
 3924 003a 114A     		ldr	r2, .L302+20	@,
 3925 003c 0021     		movs	r1, #0	@,
 3926 003e 0120     		movs	r0, #1	@,
 3927 0040 FFF7FEFF 		bl	UC1608_str	@
 3928              	@ main.c:1904: 		UC1608_Refresh();
 3929 0044 FFF7FEFF 		bl	UC1608_Refresh	@
 3930              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 3931 0048 AA68     		ldr	r2, [r5, #8]	@ _16, MEM[(struct SysTick_Type *)3758153744B].VAL
 3932 004a 0E4B     		ldr	r3, .L302+24	@ tmp130,
 3933              	@ main.c:1909: 		UaPutS(" T[us]="); sint2uart(tim/TIM_US);
ARM GAS  /tmp/ccDfNsWv.s 			page 70


 3934 004c 0E48     		ldr	r0, .L302+28	@,
 3935              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 3936 004e 1A60     		str	r2, [r3]	@ _16, Timt
 3937              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 3938 0050 1C68     		ldr	r4, [r3]	@ Timt.47_13, Timt
 3939 0052 AB68     		ldr	r3, [r5, #8]	@ _14, MEM[(struct SysTick_Type *)3758153744B].VAL
 3940 0054 E41A     		subs	r4, r4, r3	@ _15, Timt.47_13, _14
 3941 0056 0194     		str	r4, [sp, #4]	@ _15, MEM[(volatile u32 *)&tim]
 3942              	@ main.c:1909: 		UaPutS(" T[us]="); sint2uart(tim/TIM_US);
 3943 0058 FFF7FEFF 		bl	UaPutS	@
 3944 005c 0B48     		ldr	r0, .L302+32	@ tmp136,
 3945 005e A0FB0430 		umull	r3, r0, r0, r4	@ tmp138, tmp135, tmp136, _15
 3946 0062 4008     		lsrs	r0, r0, #1	@, tmp135,
 3947 0064 FFF7FEFF 		bl	sint2uart	@
 3948              	.L299:
 3949 0068 FEE7     		b	.L299	@
 3950              	.L303:
 3951 006a 00BF     		.align	2
 3952              	.L302:
 3953 006c 00000000 		.word	.LC51
 3954 0070 18000000 		.word	.LC52
 3955 0074 10E000E0 		.word	-536813552
 3956 0078 00000000 		.word	delay_us
 3957 007c 3F548900 		.word	8999999
 3958 0080 34000000 		.word	.LC53
 3959 0084 00000000 		.word	Timt
 3960 0088 50000000 		.word	.LC54
 3961 008c 398EE338 		.word	954437177
 3962              		.size	lexmark_lcd, .-lexmark_lcd
 3963              		.section	.text.softUTX_init,"ax",%progbits
 3964              		.align	1
 3965              		.p2align 2,,3
 3966              		.global	softUTX_init
 3967              		.syntax unified
 3968              		.thumb
 3969              		.thumb_func
 3970              		.fpu softvfp
 3971              		.type	softUTX_init, %function
 3972              	softUTX_init:
 3973              		@ args = 0, pretend = 0, frame = 0
 3974              		@ frame_needed = 0, uses_anonymous_args = 0
 3975              		@ link register save eliminated.
 3976              	@ main.c:1979: 		GPIOC->CRH = (GPIOC->CRH & 0xf0ffffff) | 0x01000000;  				// PC14 = softUART
 3977 0000 034A     		ldr	r2, .L305	@ tmp113,
 3978 0002 5368     		ldr	r3, [r2, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 3979 0004 23F07063 		bic	r3, r3, #251658240	@ tmp114, _1,
 3980 0008 43F08073 		orr	r3, r3, #16777216	@ _3, tmp114,
 3981 000c 5360     		str	r3, [r2, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 3982              	@ main.c:1980: 	}
 3983 000e 7047     		bx	lr	@
 3984              	.L306:
 3985              		.align	2
 3986              	.L305:
 3987 0010 00100140 		.word	1073811456
 3988              		.size	softUTX_init, .-softUTX_init
 3989              		.section	.text.sofUTX,"ax",%progbits
 3990              		.align	1
ARM GAS  /tmp/ccDfNsWv.s 			page 71


 3991              		.p2align 2,,3
 3992              		.global	sofUTX
 3993              		.syntax unified
 3994              		.thumb
 3995              		.thumb_func
 3996              		.fpu softvfp
 3997              		.type	sofUTX, %function
 3998              	sofUTX:
 3999              		@ args = 0, pretend = 0, frame = 8
 4000              		@ frame_needed = 0, uses_anonymous_args = 0
 4001              		@ link register save eliminated.
 4002              	@ main.c:1984: 		p_SofTX=0;				  //START Bit
 4003 0000 0021     		movs	r1, #0	@ tmp129,
 4004              	@ main.c:1981: void sofUTX(volatile u08 bTX)	{  /// Sotware Transmit USART Frame [8N1] with TIMER P
 4005 0002 F0B4     		push	{r4, r5, r6, r7}	@
 4006              	@ main.c:1984: 		p_SofTX=0;				  //START Bit
 4007 0004 194A     		ldr	r2, .L319	@ tmp128,
 4008              	@ inc/tool/delay.h:99: 		delay_us = SysTick->VAL; 
 4009 0006 1A4B     		ldr	r3, .L319+4	@ tmp130,
 4010              	@ main.c:1981: void sofUTX(volatile u08 bTX)	{  /// Sotware Transmit USART Frame [8N1] with TIMER P
 4011 0008 82B0     		sub	sp, sp, #8	@,,
 4012              	@ main.c:1981: void sofUTX(volatile u08 bTX)	{  /// Sotware Transmit USART Frame [8N1] with TIMER P
 4013 000a 8DF80700 		strb	r0, [sp, #7]	@ bTX, bTX
 4014              	@ main.c:1984: 		p_SofTX=0;				  //START Bit
 4015 000e 1160     		str	r1, [r2]	@ tmp129, MEM[(volatile long unsigned int *)1109524920B]
 4016              	@ inc/tool/delay.h:100: 		while( STCLK_DN*ns > (delay_us - SysTick->VAL) );
 4017 0010 1C46     		mov	r4, r3	@ tmp133, tmp130
 4018              	@ inc/tool/delay.h:99: 		delay_us = SysTick->VAL; 
 4019 0012 1849     		ldr	r1, .L319+8	@ tmp158,
 4020 0014 9B68     		ldr	r3, [r3, #8]	@ _16, MEM[(struct SysTick_Type *)3758153744B].VAL
 4021 0016 0B60     		str	r3, [r1]	@ _16, delay_us
 4022              	.L308:
 4023              	@ inc/tool/delay.h:100: 		while( STCLK_DN*ns > (delay_us - SysTick->VAL) );
 4024 0018 0B68     		ldr	r3, [r1]	@ delay_us.118_17, delay_us
 4025 001a A268     		ldr	r2, [r4, #8]	@ _18, MEM[(struct SysTick_Type *)3758153744B].VAL
 4026 001c 9B1A     		subs	r3, r3, r2	@ tmp134, delay_us.118_17, _18
 4027 001e 112B     		cmp	r3, #17	@ tmp134,
 4028 0020 FAD9     		bls	.L308	@,
 4029              	@ main.c:1982: 		u08  cTX = 1 ;
 4030 0022 0124     		movs	r4, #1	@ cTX,
 4031              	@ inc/tool/delay.h:100: 		while( STCLK_DN*ns > (delay_us - SysTick->VAL) );
 4032 0024 0825     		movs	r5, #8	@ ivtmp_3,
 4033              	@ main.c:1987: 		 if(bTX & cTX)  p_SofTX=1;
 4034 0026 2746     		mov	r7, r4	@ tmp160, cTX
 4035              	@ main.c:1988: 		 else 					p_SofTX=0;
 4036 0028 104E     		ldr	r6, .L319	@ tmp159,
 4037              	@ inc/tool/delay.h:99: 		delay_us = SysTick->VAL; 
 4038 002a 1148     		ldr	r0, .L319+4	@ tmp146,
 4039              	.L312:
 4040              	@ main.c:1987: 		 if(bTX & cTX)  p_SofTX=1;
 4041 002c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2	@ bTX, bTX
 4042 0030 2340     		ands	r3, r3, r4	@ tmp140, bTX, cTX
 4043 0032 14BF     		ite	ne
 4044 0034 3760     		strne	r7, [r6]	@ tmp160, MEM[(volatile long unsigned int *)1109524920B]
 4045              	@ main.c:1988: 		 else 					p_SofTX=0;
 4046 0036 3360     		streq	r3, [r6]	@ tmp140, MEM[(volatile long unsigned int *)1109524920B]
 4047              	@ inc/tool/delay.h:99: 		delay_us = SysTick->VAL; 
ARM GAS  /tmp/ccDfNsWv.s 			page 72


 4048 0038 8368     		ldr	r3, [r0, #8]	@ _20, MEM[(struct SysTick_Type *)3758153744B].VAL
 4049              	@ main.c:1989: 		 cTX <<= 1;
 4050 003a 6400     		lsls	r4, r4, #1	@ tmp145, cTX,
 4051 003c E4B2     		uxtb	r4, r4	@ cTX, tmp145
 4052              	@ inc/tool/delay.h:99: 		delay_us = SysTick->VAL; 
 4053 003e 0B60     		str	r3, [r1]	@ _20, delay_us
 4054              	.L311:
 4055              	@ inc/tool/delay.h:100: 		while( STCLK_DN*ns > (delay_us - SysTick->VAL) );
 4056 0040 0B68     		ldr	r3, [r1]	@ delay_us.118_21, delay_us
 4057 0042 8268     		ldr	r2, [r0, #8]	@ _22, MEM[(struct SysTick_Type *)3758153744B].VAL
 4058 0044 9B1A     		subs	r3, r3, r2	@ tmp150, delay_us.118_21, _22
 4059 0046 112B     		cmp	r3, #17	@ tmp150,
 4060 0048 FAD9     		bls	.L311	@,
 4061              	@ main.c:1986: 		while(cTX != 0){		//Wait to send Data
 4062 004a 013D     		subs	r5, r5, #1	@ ivtmp_3, ivtmp_3,
 4063 004c EED1     		bne	.L312	@,
 4064              	@ main.c:1992: 		p_SofTX=1;				//STOP Bit		
 4065 004e 0122     		movs	r2, #1	@ tmp152,
 4066 0050 064B     		ldr	r3, .L319	@ tmp151,
 4067              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4068 0052 074C     		ldr	r4, .L319+4	@ tmp156,
 4069              	@ main.c:1992: 		p_SofTX=1;				//STOP Bit		
 4070 0054 1A60     		str	r2, [r3]	@ tmp152, MEM[(volatile long unsigned int *)1109524920B]
 4071              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4072 0056 8368     		ldr	r3, [r0, #8]	@ _12, MEM[(struct SysTick_Type *)3758153744B].VAL
 4073 0058 0B60     		str	r3, [r1]	@ _12, delay_us
 4074              	.L313:
 4075              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4076 005a 0B68     		ldr	r3, [r1]	@ delay_us.48_13, delay_us
 4077 005c A268     		ldr	r2, [r4, #8]	@ _14, MEM[(struct SysTick_Type *)3758153744B].VAL
 4078 005e 9B1A     		subs	r3, r3, r2	@ tmp157, delay_us.48_13, _14
 4079 0060 592B     		cmp	r3, #89	@ tmp157,
 4080 0062 FAD9     		bls	.L313	@,
 4081              	@ main.c:1994: 	}
 4082 0064 02B0     		add	sp, sp, #8	@,,
 4083              		@ sp needed	@
 4084 0066 F0BC     		pop	{r4, r5, r6, r7}	@
 4085 0068 7047     		bx	lr	@
 4086              	.L320:
 4087 006a 00BF     		.align	2
 4088              	.L319:
 4089 006c B8012242 		.word	1109524920
 4090 0070 10E000E0 		.word	-536813552
 4091 0074 00000000 		.word	delay_us
 4092              		.size	sofUTX, .-sofUTX
 4093              		.section	.text.ToLED,"ax",%progbits
 4094              		.align	1
 4095              		.p2align 2,,3
 4096              		.global	ToLED
 4097              		.syntax unified
 4098              		.thumb
 4099              		.thumb_func
 4100              		.fpu softvfp
 4101              		.type	ToLED, %function
 4102              	ToLED:
 4103              		@ args = 0, pretend = 0, frame = 0
 4104              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccDfNsWv.s 			page 73


 4105 0000 70B5     		push	{r4, r5, r6, lr}	@
 4106              	@ main.c:1995: void ToLED(u16 B,u16 A,u08 dot)	{
 4107 0002 0546     		mov	r5, r0	@ B, B
 4108 0004 0C46     		mov	r4, r1	@ A, A
 4109 0006 1646     		mov	r6, r2	@ dot, dot
 4110              	@ main.c:1996: 		sofUTX(B&0x00ff);	// segment LO
 4111 0008 C0B2     		uxtb	r0, r0	@, B
 4112 000a FFF7FEFF 		bl	sofUTX	@
 4113              	@ main.c:1997: 		sofUTX(B>>8);			// segment HI
 4114 000e 280A     		lsrs	r0, r5, #8	@, B,
 4115 0010 FFF7FEFF 		bl	sofUTX	@
 4116              	@ main.c:1998: 		sofUTX(A&0x00ff);	// segment LO
 4117 0014 E0B2     		uxtb	r0, r4	@, A
 4118 0016 FFF7FEFF 		bl	sofUTX	@
 4119              	@ main.c:1999: 		sofUTX(A>>8);			// segment HI
 4120 001a 200A     		lsrs	r0, r4, #8	@, A,
 4121 001c FFF7FEFF 		bl	sofUTX	@
 4122              	@ main.c:2000: 		sofUTX(dot);
 4123 0020 3046     		mov	r0, r6	@, dot
 4124              	@ main.c:2001: 	}
 4125 0022 BDE87040 		pop	{r4, r5, r6, lr}	@
 4126              	@ main.c:2000: 		sofUTX(dot);
 4127 0026 FFF7FEBF 		b	sofUTX	@
 4128              		.size	ToLED, .-ToLED
 4129 002a 00BF     		.section	.text.cmd_LCD,"ax",%progbits
 4130              		.align	1
 4131              		.p2align 2,,3
 4132              		.global	cmd_LCD
 4133              		.syntax unified
 4134              		.thumb
 4135              		.thumb_func
 4136              		.fpu softvfp
 4137              		.type	cmd_LCD, %function
 4138              	cmd_LCD:
 4139              		@ args = 0, pretend = 0, frame = 0
 4140              		@ frame_needed = 0, uses_anonymous_args = 0
 4141 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 4142              	@ main.c:2006: 			if (byte & 0x80)	sMOSI = 1;
 4143 0004 4FF0010E 		mov	lr, #1	@ tmp147,
 4144              	@ main.c:2002: void cmd_LCD(uint8_t byte)	{
 4145 0008 0825     		movs	r5, #8	@ ivtmp_2,
 4146              	@ main.c:2009: 			sSCK = 1; /* a slave latches input data bit */
 4147 000a F046     		mov	r8, lr	@ MEM[(volatile long unsigned int *)1109459348B], tmp147
 4148              	@ main.c:2007: 			else							sMOSI = 0;
 4149 000c 0027     		movs	r7, #0	@ tmp146,
 4150 000e 1249     		ldr	r1, .L333	@ tmp144,
 4151 0010 DFF850C0 		ldr	ip, .L333+12	@ tmp145,
 4152              	@ main.c:2009: 			sSCK = 1; /* a slave latches input data bit */
 4153 0014 114E     		ldr	r6, .L333+4	@ tmp129,
 4154              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4155 0016 124A     		ldr	r2, .L333+8	@ tmp131,
 4156              	.L328:
 4157              	@ main.c:2006: 			if (byte & 0x80)	sMOSI = 1;
 4158 0018 0306     		lsls	r3, r0, #24	@, byte,
 4159 001a 4CBF     		ite	mi
 4160 001c CCF800E0 		strmi	lr, [ip]	@ tmp147, MEM[(volatile long unsigned int *)1109459356B]
 4161              	@ main.c:2007: 			else							sMOSI = 0;
ARM GAS  /tmp/ccDfNsWv.s 			page 74


 4162 0020 CCF80070 		strpl	r7, [ip]	@ tmp146, MEM[(volatile long unsigned int *)1109459356B]
 4163              	@ main.c:2009: 			sSCK = 1; /* a slave latches input data bit */
 4164 0024 C6F80080 		str	r8, [r6]	@ MEM[(volatile long unsigned int *)1109459348B], MEM[(volatile long unsigned int *)1
 4165              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4166 0028 9368     		ldr	r3, [r2, #8]	@ _18, MEM[(struct SysTick_Type *)3758153744B].VAL
 4167              	@ main.c:2008: 			byte <<= 1;
 4168 002a 4000     		lsls	r0, r0, #1	@ tmp128, byte,
 4169 002c C0B2     		uxtb	r0, r0	@ byte, tmp128
 4170              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4171 002e 0B60     		str	r3, [r1]	@ _18, delay_us
 4172              	.L326:
 4173              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4174 0030 0B68     		ldr	r3, [r1]	@ delay_us.48_19, delay_us
 4175 0032 9468     		ldr	r4, [r2, #8]	@ _20, MEM[(struct SysTick_Type *)3758153744B].VAL
 4176 0034 1B1B     		subs	r3, r3, r4	@ tmp135, delay_us.48_19, _20
 4177 0036 112B     		cmp	r3, #17	@ tmp135,
 4178 0038 FAD9     		bls	.L326	@,
 4179              	@ main.c:2011: 			sSCK = 0; /* a slave shifts out next output data bit */
 4180 003a 3760     		str	r7, [r6]	@ tmp146, MEM[(volatile long unsigned int *)1109459348B]
 4181              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4182 003c 9368     		ldr	r3, [r2, #8]	@ _14, MEM[(struct SysTick_Type *)3758153744B].VAL
 4183 003e 0B60     		str	r3, [r1]	@ _14, delay_us
 4184              	.L327:
 4185              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4186 0040 0B68     		ldr	r3, [r1]	@ delay_us.48_15, delay_us
 4187 0042 9468     		ldr	r4, [r2, #8]	@ _16, MEM[(struct SysTick_Type *)3758153744B].VAL
 4188 0044 1B1B     		subs	r3, r3, r4	@ tmp142, delay_us.48_15, _16
 4189 0046 112B     		cmp	r3, #17	@ tmp142,
 4190 0048 FAD9     		bls	.L327	@,
 4191 004a 013D     		subs	r5, r5, #1	@ tmp143, ivtmp_2,
 4192              	@ main.c:2004: 		for(counter = 8; counter; counter--)
 4193 004c 15F0FF05 		ands	r5, r5, #255	@ ivtmp_2, tmp143,
 4194 0050 E2D1     		bne	.L328	@,
 4195              	@ main.c:2015: 	}
 4196 0052 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}	@
 4197              	.L334:
 4198 0056 00BF     		.align	2
 4199              	.L333:
 4200 0058 00000000 		.word	delay_us
 4201 005c 94012142 		.word	1109459348
 4202 0060 10E000E0 		.word	-536813552
 4203 0064 9C012142 		.word	1109459356
 4204              		.size	cmd_LCD, .-cmd_LCD
 4205              		.section	.text.CalculateLux,"ax",%progbits
 4206              		.align	1
 4207              		.p2align 2,,3
 4208              		.global	CalculateLux
 4209              		.syntax unified
 4210              		.thumb
 4211              		.thumb_func
 4212              		.fpu softvfp
 4213              		.type	CalculateLux, %function
 4214              	CalculateLux:
 4215              		@ args = 4, pretend = 0, frame = 0
 4216              		@ frame_needed = 0, uses_anonymous_args = 0
 4217              		@ link register save eliminated.
 4218 0000 30B4     		push	{r4, r5}	@
ARM GAS  /tmp/ccDfNsWv.s 			page 75


 4219              	@ main.c:2016: u16  CalculateLux(u16 iGain, u16 tInt, u16 ch0, u16 ch1, int iType)	{
 4220 0002 029D     		ldr	r5, [sp, #8]	@ iType, iType
 4221              	@ main.c:2034:     switch (tInt)
 4222 0004 0029     		cmp	r1, #0	@ tInt
 4223 0006 47D0     		beq	.L337	@
 4224              	@ main.c:2045:        chScale = (1 << CH_SCALE);
 4225 0008 40F6E774 		movw	r4, #4071	@ tmp153,
 4226 000c 0129     		cmp	r1, #1	@ tInt,
 4227 000e 0CBF     		ite	eq
 4228 0010 2146     		moveq	r1, r4	@ chScale, tmp153
 4229 0012 4FF48061 		movne	r1, #1024	@ chScale,
 4230              	.L338:
 4231              	@ main.c:2050:     if (!iGain) chScale = chScale << 4; // scale 1X to 16X
 4232 0016 00B9     		cbnz	r0, .L339	@ iGain,
 4233              	@ main.c:2050:     if (!iGain) chScale = chScale << 4; // scale 1X to 16X
 4234 0018 0901     		lsls	r1, r1, #4	@ chScale, chScale,
 4235              	.L339:
 4236              	@ main.c:2054:     channel1 = (ch1 * chScale) >> CH_SCALE;
 4237 001a 01FB03F3 		mul	r3, r1, r3	@ _4, chScale, ch1
 4238              	@ main.c:2053:     channel0 = (ch0 * chScale) >> CH_SCALE;
 4239 001e 01FB02F1 		mul	r1, r1, r2	@ tmp139, chScale, ch0
 4240              	@ main.c:2060:     if (channel0 != 0) ratio1 = (channel1 << (RATIO_SCALE+1)) / channel0;
 4241 0022 890A     		lsrs	r1, r1, #10	@ channel0, tmp139,
 4242              	@ main.c:2054:     channel1 = (ch1 * chScale) >> CH_SCALE;
 4243 0024 4FEA9320 		lsr	r0, r3, #10	@ channel1, _4,
 4244              	@ main.c:2060:     if (channel0 != 0) ratio1 = (channel1 << (RATIO_SCALE+1)) / channel0;
 4245 0028 18D0     		beq	.L340	@,
 4246              	@ main.c:2060:     if (channel0 != 0) ratio1 = (channel1 << (RATIO_SCALE+1)) / channel0;
 4247 002a 23F47F73 		bic	r3, r3, #1020	@ tmp140, _4,
 4248 002e 23F00303 		bic	r3, r3, #3	@ tmp140, tmp140,
 4249 0032 B3FBF1F3 		udiv	r3, r3, r1	@ ratio1, tmp140, channel0
 4250 0036 0133     		adds	r3, r3, #1	@ tmp144, ratio1,
 4251 0038 5B08     		lsrs	r3, r3, #1	@ prephitmp_18, tmp144,
 4252              	@ main.c:2068:     switch (iType)
 4253 003a ADB3     		cbz	r5, .L342	@ iType,
 4254 003c 012D     		cmp	r5, #1	@ iType,
 4255 003e 15D0     		beq	.L343	@,
 4256              	.L341:
 4257 0040 0022     		movs	r2, #0	@ _164,
 4258 0042 1346     		mov	r3, r2	@ _166, _164
 4259              	.L344:
 4260              	@ main.c:2111:     temp = (u32)((channel0 * b) - (channel1 * m));
 4261 0044 02FB01F1 		mul	r1, r2, r1	@ tmp148, _164, channel0
 4262 0048 03FB1011 		mls	r1, r3, r0, r1	@ temp, _166, channel1, tmp148
 4263 004c 21EAE171 		bic	r1, r1, r1, asr #31	@ temp, temp
 4264 0050 01F50051 		add	r1, r1, #8192	@ tmp150, temp,
 4265 0054 C1F38F30 		ubfx	r0, r1, #14, #16	@ <retval>, tmp150,,
 4266              	.L365:
 4267              	@ main.c:2123: 	}
 4268 0058 30BC     		pop	{r4, r5}	@
 4269 005a 7047     		bx	lr	@
 4270              	.L340:
 4271              	@ main.c:2068:     switch (iType)
 4272 005c FDB1     		cbz	r5, .L361	@ iType,
 4273 005e 012D     		cmp	r5, #1	@ iType,
 4274 0060 EED1     		bne	.L341	@,
 4275              	.L354:
ARM GAS  /tmp/ccDfNsWv.s 			page 76


 4276 0062 40F2AD13 		movw	r3, #429	@ _166,
 4277 0066 4FF40172 		mov	r2, #516	@ _164,
 4278 006a EBE7     		b	.L344	@
 4279              	.L343:
 4280              	@ main.c:2090:             if ((ratio >= 0) && (ratio <= K1C))
 4281 006c 432B     		cmp	r3, #67	@ prephitmp_18,
 4282 006e F8D9     		bls	.L354	@,
 4283              	@ main.c:2092:             else if (ratio <= K2C)
 4284 0070 852B     		cmp	r3, #133	@ prephitmp_18,
 4285 0072 34D9     		bls	.L355	@,
 4286              	@ main.c:2094:             else if (ratio <= K3C)
 4287 0074 C82B     		cmp	r3, #200	@ prephitmp_18,
 4288 0076 37DD     		ble	.L356	@,
 4289              	@ main.c:2096:             else if (ratio <= K4C)
 4290 0078 B3F5857F 		cmp	r3, #266	@ prephitmp_18,
 4291 007c 43DD     		ble	.L357	@,
 4292              	@ main.c:2098:             else if (ratio <= K5C)
 4293 007e B3F5A77F 		cmp	r3, #334	@ prephitmp_18,
 4294 0082 45DB     		blt	.L358	@,
 4295              	@ main.c:2100:             else if (ratio <= K6C)
 4296 0084 B3F5CD7F 		cmp	r3, #410	@ prephitmp_18,
 4297 0088 51DD     		ble	.L359	@,
 4298              	@ main.c:2102:             else if (ratio <= K7C)
 4299 008a 40F29A22 		movw	r2, #666	@ tmp146,
 4300 008e 9342     		cmp	r3, r2	@ prephitmp_18, tmp146
 4301 0090 4BDC     		bgt	.L360	@,
 4302 0092 2B23     		movs	r3, #43	@ _166,
 4303 0094 3722     		movs	r2, #55	@ _164,
 4304 0096 D5E7     		b	.L344	@
 4305              	.L337:
 4306              	@ main.c:2037:        chScale = CHSCALE_TINT0;
 4307 0098 47F21751 		movw	r1, #29975	@ chScale,
 4308 009c BBE7     		b	.L338	@
 4309              	.L361:
 4310              	@ main.c:2068:     switch (iType)
 4311 009e 4FF4DF73 		mov	r3, #446	@ _166,
 4312 00a2 4FF4F972 		mov	r2, #498	@ _164,
 4313 00a6 CDE7     		b	.L344	@
 4314              	.L342:
 4315              	@ main.c:2071:         if ((ratio >= 0) && (ratio <= K1T))
 4316 00a8 402B     		cmp	r3, #64	@ prephitmp_18,
 4317 00aa F8D9     		bls	.L361	@,
 4318              	@ main.c:2073:             else if (ratio <= K2T)
 4319 00ac 802B     		cmp	r3, #128	@ prephitmp_18,
 4320 00ae 11D9     		bls	.L348	@,
 4321              	@ main.c:2075:             else if (ratio <= K3T)
 4322 00b0 C02B     		cmp	r3, #192	@ prephitmp_18,
 4323 00b2 1EDD     		ble	.L349	@,
 4324              	@ main.c:2077:             else if (ratio <= K4T)
 4325 00b4 B3F5807F 		cmp	r3, #256	@ prephitmp_18,
 4326 00b8 20DD     		ble	.L350	@,
 4327              	@ main.c:2079:             else if (ratio <= K5T)
 4328 00ba B3F59C7F 		cmp	r3, #312	@ prephitmp_18,
 4329 00be 2CDD     		ble	.L351	@,
 4330              	@ main.c:2081:             else if (ratio <= K6T)
 4331 00c0 B3F5CD7F 		cmp	r3, #410	@ prephitmp_18,
 4332 00c4 2EDD     		ble	.L352	@,
ARM GAS  /tmp/ccDfNsWv.s 			page 77


 4333              	@ main.c:2083:             else if (ratio <= K7T)
 4334 00c6 40F29A22 		movw	r2, #666	@ tmp145,
 4335 00ca 9342     		cmp	r3, r2	@ prephitmp_18, tmp145
 4336 00cc 2DDC     		bgt	.L360	@,
 4337 00ce 1223     		movs	r3, #18	@ _166,
 4338 00d0 1822     		movs	r2, #24	@ _164,
 4339 00d2 B7E7     		b	.L344	@
 4340              	.L348:
 4341 00d4 40F2D123 		movw	r3, #721	@ _166,
 4342 00d8 4FF40572 		mov	r2, #532	@ _164,
 4343 00dc B2E7     		b	.L344	@
 4344              	.L355:
 4345 00de 40F2C123 		movw	r3, #705	@ _166,
 4346 00e2 4FF40A72 		mov	r2, #552	@ _164,
 4347 00e6 ADE7     		b	.L344	@
 4348              	.L356:
 4349 00e8 40F26333 		movw	r3, #867	@ _166,
 4350 00ec 40F25322 		movw	r2, #595	@ _164,
 4351 00f0 A8E7     		b	.L344	@
 4352              	.L349:
 4353 00f2 40F27B33 		movw	r3, #891	@ _166,
 4354 00f6 40F23F22 		movw	r2, #575	@ _164,
 4355 00fa A3E7     		b	.L344	@
 4356              	.L350:
 4357 00fc 40F2FE33 		movw	r3, #1022	@ _166,
 4358 0100 4FF41C72 		mov	r2, #624	@ _164,
 4359 0104 9EE7     		b	.L344	@
 4360              	.L357:
 4361 0106 40F2DF33 		movw	r3, #991	@ _166,
 4362 010a 40F28222 		movw	r2, #642	@ _164,
 4363 010e 99E7     		b	.L344	@
 4364              	.L358:
 4365 0110 40F2DD13 		movw	r3, #477	@ _166,
 4366 0114 40F27712 		movw	r2, #375	@ _164,
 4367 0118 94E7     		b	.L344	@
 4368              	.L351:
 4369 011a 4FF4FE73 		mov	r3, #508	@ _166,
 4370 011e 40F26F12 		movw	r2, #367	@ _164,
 4371 0122 8FE7     		b	.L344	@
 4372              	.L352:
 4373 0124 FB23     		movs	r3, #251	@ _166,
 4374 0126 D222     		movs	r2, #210	@ _164,
 4375 0128 8CE7     		b	.L344	@
 4376              	.L360:
 4377 012a 0020     		movs	r0, #0	@ <retval>,
 4378              	@ main.c:2122:     return(lux);
 4379 012c 94E7     		b	.L365	@
 4380              	.L359:
 4381 012e 40F22713 		movw	r3, #295	@ _166,
 4382 0132 40F20112 		movw	r2, #257	@ _164,
 4383 0136 85E7     		b	.L344	@
 4384              		.size	CalculateLux, .-CalculateLux
 4385              		.section	.text.TSL2561_i2c,"ax",%progbits
 4386              		.align	1
 4387              		.p2align 2,,3
 4388              		.global	TSL2561_i2c
 4389              		.syntax unified
ARM GAS  /tmp/ccDfNsWv.s 			page 78


 4390              		.thumb
 4391              		.thumb_func
 4392              		.fpu softvfp
 4393              		.type	TSL2561_i2c, %function
 4394              	TSL2561_i2c:
 4395              		@ args = 0, pretend = 0, frame = 8
 4396              		@ frame_needed = 0, uses_anonymous_args = 0
 4397              	@ main.c:2138: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 4398 0000 0122     		movs	r2, #1	@ tmp142,
 4399              	@ main.c:2124: void TSL2561_i2c(void){
 4400 0002 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}	@
 4401              	@ main.c:2158: 		buf[0]=0x80;
 4402 0006 4FF46070 		mov	r0, #896	@ tmp159,
 4403              	@ main.c:2140: 		I2C2_CR1_SWRST_bb = 0;
 4404 000a 0027     		movs	r7, #0	@ tmp146,
 4405              	@ main.c:2141: 		I2C2->TRISE = 37;               		// limit slope
 4406 000c 2526     		movs	r6, #37	@ tmp149,
 4407              	@ main.c:2143: 		I2C2->CCR = (F_CPU/(4*400000));             // setup speed (100kHz)
 4408 000e 2D25     		movs	r5, #45	@ tmp152,
 4409              	@ main.c:2146: 		I2C2->CR2 = I2C_CR2_FREQ_36MHz;     // config I2C2 module
 4410 0010 2424     		movs	r4, #36	@ tmp155,
 4411              	@ main.c:2136: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// ...009900 PB11=SDA (Open-d
 4412 0012 3249     		ldr	r1, .L372	@ tmp138,
 4413              	@ main.c:2124: void TSL2561_i2c(void){
 4414 0014 82B0     		sub	sp, sp, #8	@,,
 4415              	@ main.c:2136: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// ...009900 PB11=SDA (Open-d
 4416 0016 4B68     		ldr	r3, [r1, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 4417              	@ main.c:2158: 		buf[0]=0x80;
 4418 0018 0DF10808 		add	r8, sp, #8	@ tmp195,,
 4419              	@ main.c:2136: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// ...009900 PB11=SDA (Open-d
 4420 001c 23F47F43 		bic	r3, r3, #65280	@ tmp139, _1,
 4421 0020 43F45D43 		orr	r3, r3, #56576	@ _3, tmp139,
 4422 0024 4B60     		str	r3, [r1, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 4423              	@ main.c:2138: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 4424 0026 2E4B     		ldr	r3, .L372+4	@ tmp141,
 4425              	@ main.c:2139: 		I2C2_CR1_SWRST_bb = 1;            	// force software reset of I2C peripheral
 4426 0028 2E49     		ldr	r1, .L372+8	@ tmp143,
 4427              	@ main.c:2138: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 4428 002a 1A60     		str	r2, [r3]	@ tmp142, MEM[(volatile long unsigned int *)1111622616B]
 4429              	@ main.c:2141: 		I2C2->TRISE = 37;               		// limit slope
 4430 002c 2E4B     		ldr	r3, .L372+12	@ tmp147,
 4431              	@ main.c:2139: 		I2C2_CR1_SWRST_bb = 1;            	// force software reset of I2C peripheral
 4432 002e 0A60     		str	r2, [r1]	@ tmp142, MEM[(volatile long unsigned int *)1108017212B]
 4433              	@ main.c:2140: 		I2C2_CR1_SWRST_bb = 0;
 4434 0030 0F60     		str	r7, [r1]	@ tmp146, MEM[(volatile long unsigned int *)1108017212B]
 4435              	@ main.c:2141: 		I2C2->TRISE = 37;               		// limit slope
 4436 0032 1E84     		strh	r6, [r3, #32]	@ movhi	@ tmp149, MEM[(struct I2C_TypeDef *)1073764352B].TRISE
 4437              	@ main.c:2143: 		I2C2->CCR = (F_CPU/(4*400000));             // setup speed (100kHz)
 4438 0034 9D83     		strh	r5, [r3, #28]	@ movhi	@ tmp152, MEM[(struct I2C_TypeDef *)1073764352B].CCR
 4439              	@ main.c:2146: 		I2C2->CR2 = I2C_CR2_FREQ_36MHz;     // config I2C2 module
 4440 0036 9C80     		strh	r4, [r3, #4]	@ movhi	@ tmp155, MEM[(struct I2C_TypeDef *)1073764352B].CR2
 4441              	@ main.c:2147: 		I2C2_CR1_PE_bb = 1;               	// enable peripheral
 4442 0038 41F83C2C 		str	r2, [r1, #-60]	@ tmp142, MEM[(volatile long unsigned int *)1108017152B]
 4443              	@ main.c:2158: 		buf[0]=0x80;
 4444 003c 28F8080D 		strh	r0, [r8, #-8]!	@ movhi	@ tmp159, MEM[(u08[3] *)&buf]
 4445              	@ main.c:2160: 		i2c2_write(TSL2561_ADR,buf,2); // init control Power UP
 4446 0040 4146     		mov	r1, r8	@, tmp195
ARM GAS  /tmp/ccDfNsWv.s 			page 79


 4447 0042 0222     		movs	r2, #2	@,
 4448 0044 7220     		movs	r0, #114	@,
 4449 0046 FFF7FEFF 		bl	i2c2_write	@
 4450              	@ main.c:2161: 		buf[0]=0x81;
 4451 004a 40F28123 		movw	r3, #641	@ tmp162,
 4452              	@ main.c:2163: 		i2c2_write(TSL2561_ADR,buf,2); // init Timing 
 4453 004e 4146     		mov	r1, r8	@, tmp195
 4454 0050 0222     		movs	r2, #2	@,
 4455 0052 7220     		movs	r0, #114	@,
 4456              	@ main.c:2161: 		buf[0]=0x81;
 4457 0054 ADF80030 		strh	r3, [sp]	@ movhi	@ tmp162, MEM[(u08[3] *)&buf]
 4458              	@ main.c:2163: 		i2c2_write(TSL2561_ADR,buf,2); // init Timing 
 4459 0058 FFF7FEFF 		bl	i2c2_write	@
 4460 005c 234D     		ldr	r5, .L372+16	@ tmp196,
 4461 005e 244F     		ldr	r7, .L372+20	@ tmp194,
 4462              	@ main.c:2168: 			if(STCLK_MS*300 < (trg0 - SysTick->VAL)){
 4463 0060 244C     		ldr	r4, .L372+24	@ tmp165,
 4464 0062 254E     		ldr	r6, .L372+28	@ tmp167,
 4465              	.L368:
 4466 0064 2B68     		ldr	r3, [r5]	@ trg0.123_4, trg0
 4467 0066 A268     		ldr	r2, [r4, #8]	@ _5, MEM[(struct SysTick_Type *)3758153744B].VAL
 4468 0068 9B1A     		subs	r3, r3, r2	@ tmp166, trg0.123_4, _5
 4469 006a B342     		cmp	r3, r6	@ tmp166, tmp167
 4470 006c FAD9     		bls	.L368	@,
 4471              	@ main.c:2169: 				trg0 = SysTick->VAL;
 4472 006e D4F808C0 		ldr	ip, [r4, #8]	@ _7, MEM[(struct SysTick_Type *)3758153744B].VAL
 4473              	@ main.c:2175: 				i2c2_read(TSL2561_ADR, DATA0LOW, buf,2 );
 4474 0072 0223     		movs	r3, #2	@,
 4475 0074 4246     		mov	r2, r8	@, tmp195
 4476 0076 8C21     		movs	r1, #140	@,
 4477 0078 7220     		movs	r0, #114	@,
 4478              	@ main.c:2169: 				trg0 = SysTick->VAL;
 4479 007a C5F800C0 		str	ip, [r5]	@ _7, trg0
 4480              	@ main.c:2175: 				i2c2_read(TSL2561_ADR, DATA0LOW, buf,2 );
 4481 007e FFF7FEFF 		bl	i2c2_read	@
 4482              	@ main.c:2176: 				ch0 = (buf[1]<<8)+buf[0];
 4483 0082 9DF80120 		ldrb	r2, [sp, #1]	@ zero_extendqisi2	@ buf, buf
 4484 0086 9DF800A0 		ldrb	r10, [sp]	@ zero_extendqisi2	@ buf, buf
 4485              	@ main.c:2177: 				i2c2_read(TSL2561_ADR, DATA1LOW, buf,2 );
 4486 008a 8E21     		movs	r1, #142	@,
 4487 008c 0223     		movs	r3, #2	@,
 4488              	@ main.c:2176: 				ch0 = (buf[1]<<8)+buf[0];
 4489 008e 0AEB022A 		add	r10, r10, r2, lsl #8	@ tmp177, buf, buf,
 4490              	@ main.c:2177: 				i2c2_read(TSL2561_ADR, DATA1LOW, buf,2 );
 4491 0092 7220     		movs	r0, #114	@,
 4492 0094 4246     		mov	r2, r8	@, tmp195
 4493 0096 FFF7FEFF 		bl	i2c2_read	@
 4494              	@ main.c:2178: 				ch1	= (buf[1]<<8)+buf[0];
 4495 009a 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2	@ buf, buf
 4496 009e 9DF80090 		ldrb	r9, [sp]	@ zero_extendqisi2	@ buf, buf
 4497              	@ main.c:2176: 				ch0 = (buf[1]<<8)+buf[0];
 4498 00a2 1FFA8AFA 		uxth	r10, r10	@ ch0, tmp177
 4499              	@ main.c:2178: 				ch1	= (buf[1]<<8)+buf[0];
 4500 00a6 09EB0329 		add	r9, r9, r3, lsl #8	@ tmp185, buf, buf,
 4501              	@ main.c:2188: 				sint2uart(ch0);
 4502 00aa 5046     		mov	r0, r10	@, ch0
 4503 00ac FFF7FEFF 		bl	sint2uart	@
ARM GAS  /tmp/ccDfNsWv.s 			page 80


 4504              	@ main.c:2178: 				ch1	= (buf[1]<<8)+buf[0];
 4505 00b0 1FFA89F9 		uxth	r9, r9	@ ch1, tmp185
 4506              	@ main.c:2189: 				UaPutK(",");	
 4507 00b4 1148     		ldr	r0, .L372+32	@,
 4508 00b6 FFF7FEFF 		bl	UaPutK	@
 4509              	@ main.c:2190: 				sint2uart(ch1);
 4510 00ba 4846     		mov	r0, r9	@, ch1
 4511 00bc FFF7FEFF 		bl	sint2uart	@
 4512              	@ main.c:2191: 				UaPutK("\r\n");	
 4513 00c0 0F48     		ldr	r0, .L372+36	@,
 4514 00c2 FFF7FEFF 		bl	UaPutK	@
 4515              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 4516 00c6 A368     		ldr	r3, [r4, #8]	@ _52, MEM[(struct SysTick_Type *)3758153744B].VAL
 4517 00c8 3B60     		str	r3, [r7]	@ _52, Timt
 4518              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 4519 00ca 3B68     		ldr	r3, [r7]	@ Timt.47_49, Timt
 4520 00cc A268     		ldr	r2, [r4, #8]	@ _50, MEM[(struct SysTick_Type *)3758153744B].VAL
 4521 00ce 9B1A     		subs	r3, r3, r2	@ _51, Timt.47_49, _50
 4522 00d0 0193     		str	r3, [sp, #4]	@ _51, MEM[(volatile u32 *)&tim]
 4523 00d2 3B68     		ldr	r3, [r7]	@ Timt.47_42, Timt
 4524 00d4 A268     		ldr	r2, [r4, #8]	@ _47, MEM[(struct SysTick_Type *)3758153744B].VAL
 4525 00d6 9B1A     		subs	r3, r3, r2	@ _48, Timt.47_42, _47
 4526 00d8 0193     		str	r3, [sp, #4]	@ _48, MEM[(volatile u32 *)&tim]
 4527 00da C3E7     		b	.L368	@
 4528              	.L373:
 4529              		.align	2
 4530              	.L372:
 4531 00dc 000C0140 		.word	1073810432
 4532 00e0 D8034242 		.word	1111622616
 4533 00e4 3C000B42 		.word	1108017212
 4534 00e8 00580040 		.word	1073764352
 4535 00ec 00000000 		.word	trg0
 4536 00f0 00000000 		.word	Timt
 4537 00f4 10E000E0 		.word	-536813552
 4538 00f8 E0322900 		.word	2700000
 4539 00fc 00000000 		.word	.LC55
 4540 0100 40000000 		.word	.LC18
 4541              		.size	TSL2561_i2c, .-TSL2561_i2c
 4542              		.section	.text.set_mode,"ax",%progbits
 4543              		.align	1
 4544              		.p2align 2,,3
 4545              		.global	set_mode
 4546              		.syntax unified
 4547              		.thumb
 4548              		.thumb_func
 4549              		.fpu softvfp
 4550              		.type	set_mode, %function
 4551              	set_mode:
 4552              		@ args = 0, pretend = 0, frame = 8
 4553              		@ frame_needed = 0, uses_anonymous_args = 0
 4554 0000 30B5     		push	{r4, r5, lr}	@
 4555 0002 83B0     		sub	sp, sp, #12	@,,
 4556              	@ main.c:2224: 		i2c1_read(APDS9960_ADR, APDS9960_ENABLE, buf,1 );
 4557 0004 0123     		movs	r3, #1	@,
 4558              	@ main.c:2221: void set_mode( u08 mode, bool enable )	{
 4559 0006 0446     		mov	r4, r0	@ mode, mode
 4560 0008 0D46     		mov	r5, r1	@ enable, enable
ARM GAS  /tmp/ccDfNsWv.s 			page 81


 4561              	@ main.c:2224: 		i2c1_read(APDS9960_ADR, APDS9960_ENABLE, buf,1 );
 4562 000a 01AA     		add	r2, sp, #4	@ tmp134,,
 4563 000c 8021     		movs	r1, #128	@,
 4564 000e 7220     		movs	r0, #114	@,
 4565 0010 FFF7FEFF 		bl	i2c1_read	@
 4566              	@ main.c:2225: 		uint8_t reg_val = buf[0];
 4567 0014 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2	@ reg_val, buf
 4568              	@ main.c:2227:     if( reg_val == ERROR )
 4569 0018 FF2B     		cmp	r3, #255	@ reg_val,
 4570 001a 0FD0     		beq	.L374	@,
 4571              	@ main.c:2232:     if( mode == ALL )
 4572 001c 062C     		cmp	r4, #6	@ mode,
 4573 001e 0FD9     		bls	.L376	@,
 4574              	@ main.c:2236:       reg_val = 0x7F;
 4575 0020 002D     		cmp	r5, #0	@ enable,
 4576 0022 0CBF     		ite	eq
 4577 0024 0023     		moveq	r3, #0	@ reg_val,
 4578 0026 7F23     		movne	r3, #127	@ reg_val,
 4579              	.L377:
 4580              	@ main.c:2245: 		buf[0]=APDS9960_ENABLE;			buf[1]=reg_val; 			i2c1_write(APDS9960_ADR,buf,2); 
 4581 0028 8024     		movs	r4, #128	@ tmp129,
 4582 002a 01A9     		add	r1, sp, #4	@ tmp135,,
 4583 002c 0222     		movs	r2, #2	@,
 4584 002e 7220     		movs	r0, #114	@,
 4585 0030 8DF80530 		strb	r3, [sp, #5]	@ reg_val, buf
 4586 0034 8DF80440 		strb	r4, [sp, #4]	@ tmp129, buf
 4587 0038 FFF7FEFF 		bl	i2c1_write	@
 4588              	.L374:
 4589              	@ main.c:2246: 	}
 4590 003c 03B0     		add	sp, sp, #12	@,,
 4591              		@ sp needed	@
 4592 003e 30BD     		pop	{r4, r5, pc}	@
 4593              	.L376:
 4594              	@ main.c:2238:       reg_val &= ~( 1 << mode );
 4595 0040 0120     		movs	r0, #1	@ tmp123,
 4596 0042 A040     		lsls	r0, r0, r4	@ tmp122, tmp123, mode
 4597 0044 5BB2     		sxtb	r3, r3	@ reg_val.124_5, reg_val
 4598 0046 40B2     		sxtb	r0, r0	@ _3, tmp122
 4599              	@ main.c:2239:       if( enable )
 4600 0048 15B1     		cbz	r5, .L385	@ enable,
 4601              	@ main.c:2240:       reg_val |= ( 1 << mode );
 4602 004a 1843     		orrs	r0, r0, r3	@, tmp128, _3, reg_val.124_5
 4603 004c C3B2     		uxtb	r3, r0	@ reg_val, tmp128
 4604 004e EBE7     		b	.L377	@
 4605              	.L385:
 4606              	@ main.c:2238:       reg_val &= ~( 1 << mode );
 4607 0050 23EA0003 		bic	r3, r3, r0	@ tmp127, reg_val.124_5, _3
 4608 0054 DBB2     		uxtb	r3, r3	@ reg_val, tmp127
 4609 0056 E7E7     		b	.L377	@
 4610              		.size	set_mode, .-set_mode
 4611              		.section	.text.MAX44009_i2c,"ax",%progbits
 4612              		.align	1
 4613              		.p2align 2,,3
 4614              		.global	MAX44009_i2c
 4615              		.syntax unified
 4616              		.thumb
 4617              		.thumb_func
ARM GAS  /tmp/ccDfNsWv.s 			page 82


 4618              		.fpu softvfp
 4619              		.type	MAX44009_i2c, %function
 4620              	MAX44009_i2c:
 4621              		@ args = 0, pretend = 0, frame = 16
 4622              		@ frame_needed = 0, uses_anonymous_args = 0
 4623 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 4624              	@ main.c:2263: 		I2C2->CR2     = 0;
 4625 0004 0020     		movs	r0, #0	@ tmp203,
 4626              	@ main.c:2264: 		I2C2->CCR     = (F_CPU/(4*400000));             	// setup speed (100kHz)
 4627 0006 2D21     		movs	r1, #45	@ tmp206,
 4628              	@ main.c:2261: 		I2C2->TRISE   = 37;               								// limit slope
 4629 0008 2525     		movs	r5, #37	@ tmp200,
 4630              	@ main.c:2258: 		GPIOB->CRH    = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// PB11=SDA (Open-drain) P
 4631 000a 784F     		ldr	r7, .L393	@ tmp193,
 4632              	@ main.c:2297: 		buf[0]=0x02;
 4633 000c 44F20204 		movw	r4, #16386	@ tmp234,
 4634              	@ main.c:2258: 		GPIOB->CRH    = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// PB11=SDA (Open-drain) P
 4635 0010 7B68     		ldr	r3, [r7, #4]	@ _2, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 4636              	@ main.c:2259: 		RCC->APB1ENR |= RCC_APB1ENR_I2C2EN;
 4637 0012 774A     		ldr	r2, .L393+4	@ tmp196,
 4638              	@ main.c:2258: 		GPIOB->CRH    = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// PB11=SDA (Open-drain) P
 4639 0014 23F47F43 		bic	r3, r3, #65280	@ tmp194, _2,
 4640 0018 43F45D43 		orr	r3, r3, #56576	@ _4, tmp194,
 4641 001c 7B60     		str	r3, [r7, #4]	@ _4, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 4642              	@ main.c:2259: 		RCC->APB1ENR |= RCC_APB1ENR_I2C2EN;
 4643 001e D2F81CC0 		ldr	ip, [r2, #28]	@ _5, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 4644              	@ main.c:2261: 		I2C2->TRISE   = 37;               								// limit slope
 4645 0022 744B     		ldr	r3, .L393+8	@ tmp198,
 4646              	@ main.c:2259: 		RCC->APB1ENR |= RCC_APB1ENR_I2C2EN;
 4647 0024 4CF4800C 		orr	ip, ip, #4194304	@ _6, _5,
 4648 0028 C2F81CC0 		str	ip, [r2, #28]	@ _6, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 4649              	@ main.c:2261: 		I2C2->TRISE   = 37;               								// limit slope
 4650 002c 1D84     		strh	r5, [r3, #32]	@ movhi	@ tmp200, MEM[(struct I2C_TypeDef *)1073764352B].TRISE
 4651              	@ main.c:2263: 		I2C2->CR2     = 0;
 4652 002e 9880     		strh	r0, [r3, #4]	@ movhi	@ tmp203, MEM[(struct I2C_TypeDef *)1073764352B].CR2
 4653              	@ main.c:2264: 		I2C2->CCR     = (F_CPU/(4*400000));             	// setup speed (100kHz)
 4654 0030 9983     		strh	r1, [r3, #28]	@ movhi	@ tmp206, MEM[(struct I2C_TypeDef *)1073764352B].CCR
 4655              	@ main.c:2266: 		I2C2->CR1    |= I2C_CR1_PE;											  // I2C2 Pheripherial enable
 4656 0032 B3F800C0 		ldrh	ip, [r3]	@, MEM[(struct I2C_TypeDef *)1073764352B].CR1
 4657              	@ main.c:2247: void MAX44009_i2c(void){
 4658 0036 87B0     		sub	sp, sp, #28	@,,
 4659              	@ main.c:2266: 		I2C2->CR1    |= I2C_CR1_PE;											  // I2C2 Pheripherial enable
 4660 0038 4CF0010C 		orr	ip, ip, #1	@ _8, MEM[(struct I2C_TypeDef *)1073764352B].CR1,
 4661 003c A3F800C0 		strh	ip, [r3]	@ movhi	@ _8, MEM[(struct I2C_TypeDef *)1073764352B].CR1
 4662              	@ main.c:2268: 		AFIO->MAPR   |= AFIO_MAPR_I2C1_REMAP;		// Remap TIM3 CH2->PB5
 4663 0040 DFF8D8C1 		ldr	ip, .L393+48	@ tmp212,
 4664              	@ main.c:2297: 		buf[0]=0x02;
 4665 0044 06AE     		add	r6, sp, #24	@ tmp332,,
 4666              	@ main.c:2268: 		AFIO->MAPR   |= AFIO_MAPR_I2C1_REMAP;		// Remap TIM3 CH2->PB5
 4667 0046 DCF80430 		ldr	r3, [ip, #4]	@ _9, MEM[(struct AFIO_TypeDef *)1073807360B].MAPR
 4668 004a 43F00203 		orr	r3, r3, #2	@ _10, _9,
 4669 004e CCF80430 		str	r3, [ip, #4]	@ _10, MEM[(struct AFIO_TypeDef *)1073807360B].MAPR
 4670              	@ main.c:2269: 		GPIOB->CRH    = (GPIOB->CRH & 0xffffff00) | 0x000000dd;	// PB9=SDA (Alternate Open
 4671 0052 7B68     		ldr	r3, [r7, #4]	@ _11, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 4672 0054 23F0FF03 		bic	r3, r3, #255	@ tmp215, _11,
 4673 0058 43F0DD03 		orr	r3, r3, #221	@ _13, tmp215,
 4674 005c 7B60     		str	r3, [r7, #4]	@ _13, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
ARM GAS  /tmp/ccDfNsWv.s 			page 83


 4675              	@ main.c:2270: 		RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;
 4676 005e D769     		ldr	r7, [r2, #28]	@ _14, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 4677              	@ main.c:2271: 		I2C1->TRISE   = 37;               		// limit slope
 4678 0060 654B     		ldr	r3, .L393+12	@ tmp219,
 4679              	@ main.c:2270: 		RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;
 4680 0062 47F40017 		orr	r7, r7, #2097152	@ _15, _14,
 4681 0066 D761     		str	r7, [r2, #28]	@ _15, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 4682              	@ main.c:2271: 		I2C1->TRISE   = 37;               		// limit slope
 4683 0068 1D84     		strh	r5, [r3, #32]	@ movhi	@ tmp200, MEM[(struct I2C_TypeDef *)1073763328B].TRISE
 4684              	@ main.c:2272: 		I2C1->CR2     = 0;
 4685 006a 9880     		strh	r0, [r3, #4]	@ movhi	@ tmp203, MEM[(struct I2C_TypeDef *)1073763328B].CR2
 4686              	@ main.c:2273: 		I2C1->CCR     = (F_CPU/(4*400000));   // setup speed (400kHz)
 4687 006c 9983     		strh	r1, [r3, #28]	@ movhi	@ tmp206, MEM[(struct I2C_TypeDef *)1073763328B].CCR
 4688              	@ main.c:2274: 		I2C1->CR1    |= I2C_CR1_PE;						// I2C2 Pheripherial enable
 4689 006e 1988     		ldrh	r1, [r3]	@, MEM[(struct I2C_TypeDef *)1073763328B].CR1
 4690              	@ main.c:2299: 		i2c2_write(MAX44009_ADR,buf,2); // init control Power UP
 4691 0070 0222     		movs	r2, #2	@,
 4692              	@ main.c:2274: 		I2C1->CR1    |= I2C_CR1_PE;						// I2C2 Pheripherial enable
 4693 0072 41F00101 		orr	r1, r1, #1	@ _17, MEM[(struct I2C_TypeDef *)1073763328B].CR1,
 4694 0076 1980     		strh	r1, [r3]	@ movhi	@ _17, MEM[(struct I2C_TypeDef *)1073763328B].CR1
 4695              	@ main.c:2297: 		buf[0]=0x02;
 4696 0078 26F80C4D 		strh	r4, [r6, #-12]!	@ movhi	@ tmp234, MEM[(u08[10] *)&buf]
 4697              	@ main.c:2299: 		i2c2_write(MAX44009_ADR,buf,2); // init control Power UP
 4698 007c 3146     		mov	r1, r6	@, tmp332
 4699 007e 9420     		movs	r0, #148	@,
 4700 0080 FFF7FEFF 		bl	i2c2_write	@
 4701              	@ main.c:2317: 		set_mode( AMBIENT_LIGHT, true );
 4702 0084 0121     		movs	r1, #1	@,
 4703 0086 0846     		mov	r0, r1	@,
 4704 0088 FFF7FEFF 		bl	set_mode	@
 4705              	@ main.c:2320: 		i2c1_read(APDS9960_ADR, APDS9960_ID, buf,1 );
 4706 008c 3246     		mov	r2, r6	@, tmp332
 4707 008e 0123     		movs	r3, #1	@,
 4708 0090 9221     		movs	r1, #146	@,
 4709 0092 7220     		movs	r0, #114	@,
 4710 0094 FFF7FEFF 		bl	i2c1_read	@
 4711              	@ main.c:2321: 		UaPutK("\r\n APDS9960_ID=0x");	
 4712 0098 5848     		ldr	r0, .L393+16	@,
 4713 009a FFF7FEFF 		bl	UaPutK	@
 4714              	@ main.c:2322: 		hex2uart(buf[0],2);
 4715 009e 0221     		movs	r1, #2	@,
 4716 00a0 9DF80C00 		ldrb	r0, [sp, #12]	@ zero_extendqisi2	@, buf
 4717 00a4 FFF7FEFF 		bl	hex2uart	@
 4718              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 4719 00a8 554B     		ldr	r3, .L393+20	@ tmp239,
 4720 00aa 564A     		ldr	r2, .L393+24	@ tmp330,
 4721              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 4722 00ac 1846     		mov	r0, r3	@ tmp242, tmp239
 4723              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 4724 00ae 9B68     		ldr	r3, [r3, #8]	@ _106, MEM[(struct SysTick_Type *)3758153744B].VAL
 4725              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 4726 00b0 5549     		ldr	r1, .L393+28	@ tmp244,
 4727              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 4728 00b2 1360     		str	r3, [r2]	@ _106, delay_us
 4729              	.L387:
 4730              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 4731 00b4 1368     		ldr	r3, [r2]	@ delay_us.116_123, delay_us
ARM GAS  /tmp/ccDfNsWv.s 			page 84


 4732 00b6 8468     		ldr	r4, [r0, #8]	@ _124, MEM[(struct SysTick_Type *)3758153744B].VAL
 4733 00b8 1B1B     		subs	r3, r3, r4	@ tmp243, delay_us.116_123, _124
 4734 00ba 8B42     		cmp	r3, r1	@ tmp243, tmp244
 4735 00bc FAD9     		bls	.L387	@,
 4736 00be 534D     		ldr	r5, .L393+32	@ tmp331,
 4737              	@ main.c:2328: 			if(STCLK_MS*100 < (trg0 - SysTick->VAL)){
 4738 00c0 4F4C     		ldr	r4, .L393+20	@ tmp246,
 4739 00c2 534F     		ldr	r7, .L393+36	@ tmp248,
 4740              	@ main.c:2340: 				lux = ((1<<exponent) * mantissa * 45 ) /1000 ;
 4741 00c4 DFF85881 		ldr	r8, .L393+52	@ tmp270,
 4742              	.L388:
 4743              	@ main.c:2328: 			if(STCLK_MS*100 < (trg0 - SysTick->VAL)){
 4744 00c8 2B68     		ldr	r3, [r5]	@ trg0.126_20, trg0
 4745 00ca A268     		ldr	r2, [r4, #8]	@ _21, MEM[(struct SysTick_Type *)3758153744B].VAL
 4746 00cc 9B1A     		subs	r3, r3, r2	@ tmp247, trg0.126_20, _21
 4747 00ce BB42     		cmp	r3, r7	@ tmp247, tmp248
 4748 00d0 FAD9     		bls	.L388	@,
 4749              	@ main.c:2329: 				trg0 = SysTick->VAL;
 4750 00d2 A368     		ldr	r3, [r4, #8]	@ _23, MEM[(struct SysTick_Type *)3758153744B].VAL
 4751              	@ main.c:2331: 				UaPutK("\r\n");	
 4752 00d4 4F48     		ldr	r0, .L393+40	@,
 4753              	@ main.c:2329: 				trg0 = SysTick->VAL;
 4754 00d6 2B60     		str	r3, [r5]	@ _23, trg0
 4755              	@ main.c:2331: 				UaPutK("\r\n");	
 4756 00d8 FFF7FEFF 		bl	UaPutK	@
 4757              	@ main.c:2335: 				i2c2_read(MAX44009_ADR, 0x03, buf,2 );
 4758 00dc 0321     		movs	r1, #3	@,
 4759 00de 3246     		mov	r2, r6	@, tmp332
 4760 00e0 0223     		movs	r3, #2	@,
 4761 00e2 9420     		movs	r0, #148	@,
 4762 00e4 FFF7FEFF 		bl	i2c2_read	@
 4763              	@ main.c:2337: 				exponent = (buf[0] & 0xF0) >> 4;
 4764 00e8 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2	@ _24, buf
 4765              	@ main.c:2338: 				mantissa = ((buf[0] & 0x0F) << 4) | (buf[1] & 0x0F);
 4766 00ec 9DF80D20 		ldrb	r2, [sp, #13]	@ zero_extendqisi2	@ buf, buf
 4767 00f0 1801     		lsls	r0, r3, #4	@ tmp253, _24,
 4768 00f2 02F00F02 		and	r2, r2, #15	@ tmp258, buf,
 4769 00f6 C0B2     		uxtb	r0, r0	@ tmp254, tmp253
 4770              	@ main.c:2337: 				exponent = (buf[0] & 0xF0) >> 4;
 4771 00f8 1B09     		lsrs	r3, r3, #4	@ exponent, _24,
 4772              	@ main.c:2338: 				mantissa = ((buf[0] & 0x0F) << 4) | (buf[1] & 0x0F);
 4773 00fa 1043     		orrs	r0, r0, r2	@, mantissa, tmp254, tmp258
 4774              	@ main.c:2340: 				lux = ((1<<exponent) * mantissa * 45 ) /1000 ;
 4775 00fc 9840     		lsls	r0, r0, r3	@ tmp262, mantissa, exponent
 4776 00fe 00EB4000 		add	r0, r0, r0, lsl #1	@ tmp265, tmp262, tmp262,
 4777 0102 C0EB0010 		rsb	r0, r0, r0, lsl #4	@ tmp267, tmp265, tmp265,
 4778 0106 A8FB0030 		umull	r3, r0, r8, r0	@ tmp336, tmp269, tmp270, tmp267
 4779              	@ main.c:2343: 				sint2uart(lux);
 4780 010a 8009     		lsrs	r0, r0, #6	@, tmp269,
 4781 010c FFF7FEFF 		bl	sint2uart	@
 4782              	@ main.c:2344: 				UaPutK(",");	
 4783 0110 4148     		ldr	r0, .L393+44	@,
 4784 0112 FFF7FEFF 		bl	UaPutK	@
 4785              	@ main.c:2346: 				i2c2_read(TSL2561_ADR, DATA0LOW, buf,2 );
 4786 0116 3246     		mov	r2, r6	@, tmp332
 4787 0118 0223     		movs	r3, #2	@,
 4788 011a 8C21     		movs	r1, #140	@,
ARM GAS  /tmp/ccDfNsWv.s 			page 85


 4789 011c 7220     		movs	r0, #114	@,
 4790 011e FFF7FEFF 		bl	i2c2_read	@
 4791              	@ main.c:2347: 				ch0 = (buf[1]<<8)+buf[0];
 4792 0122 9DF80D20 		ldrb	r2, [sp, #13]	@ zero_extendqisi2	@ buf, buf
 4793 0126 9DF80C90 		ldrb	r9, [sp, #12]	@ zero_extendqisi2	@ buf, buf
 4794              	@ main.c:2348: 				i2c2_read(TSL2561_ADR, DATA1LOW, buf,2 );
 4795 012a 0223     		movs	r3, #2	@,
 4796              	@ main.c:2347: 				ch0 = (buf[1]<<8)+buf[0];
 4797 012c 09EB0229 		add	r9, r9, r2, lsl #8	@ tmp284, buf, buf,
 4798              	@ main.c:2348: 				i2c2_read(TSL2561_ADR, DATA1LOW, buf,2 );
 4799 0130 8E21     		movs	r1, #142	@,
 4800 0132 3246     		mov	r2, r6	@, tmp332
 4801 0134 7220     		movs	r0, #114	@,
 4802 0136 FFF7FEFF 		bl	i2c2_read	@
 4803              	@ main.c:2351: 				lux=CalculateLux(1,2,ch0,ch1,0);
 4804 013a 0021     		movs	r1, #0	@ tmp294,
 4805              	@ main.c:2349: 				ch1	= (buf[1]<<8)+buf[0];
 4806 013c 9DF80D00 		ldrb	r0, [sp, #13]	@ zero_extendqisi2	@ buf, buf
 4807 0140 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2	@ buf, buf
 4808              	@ main.c:2347: 				ch0 = (buf[1]<<8)+buf[0];
 4809 0144 1FFA89F9 		uxth	r9, r9	@ ch0, tmp284
 4810              	@ main.c:2349: 				ch1	= (buf[1]<<8)+buf[0];
 4811 0148 03EB0023 		add	r3, r3, r0, lsl #8	@ tmp292, buf, buf,
 4812              	@ main.c:2351: 				lux=CalculateLux(1,2,ch0,ch1,0);
 4813 014c 4A46     		mov	r2, r9	@, ch0
 4814 014e 9BB2     		uxth	r3, r3	@, tmp292
 4815 0150 0091     		str	r1, [sp]	@ tmp294,
 4816 0152 0120     		movs	r0, #1	@,
 4817 0154 0221     		movs	r1, #2	@,
 4818 0156 FFF7FEFF 		bl	CalculateLux	@
 4819              	@ main.c:2352: 				sint2uart(lux);
 4820 015a FFF7FEFF 		bl	sint2uart	@
 4821              	@ main.c:2354: 				UaPutC(',');
 4822 015e 2C20     		movs	r0, #44	@,
 4823 0160 FFF7FEFF 		bl	UaPutC	@
 4824              	@ main.c:2357: 				memset ( buf, 1, 10);
 4825 0164 4FF0013C 		mov	ip, #16843009	@ tmp298,
 4826              	@ main.c:2358: 				i2c1_read(APDS9960_ADR, 0x94, buf,8 );
 4827 0168 3246     		mov	r2, r6	@, tmp332
 4828 016a 0823     		movs	r3, #8	@,
 4829 016c 9421     		movs	r1, #148	@,
 4830 016e 7220     		movs	r0, #114	@,
 4831              	@ main.c:2357: 				memset ( buf, 1, 10);
 4832 0170 C6E900CC 		strd	ip, ip, [r6]	@ tmp298, tmp298, tmp332
 4833 0174 A6F808C0 		strh	ip, [r6, #8]	@ movhi	@ tmp298, MEM[(void *)&buf]
 4834              	@ main.c:2358: 				i2c1_read(APDS9960_ADR, 0x94, buf,8 );
 4835 0178 FFF7FEFF 		bl	i2c1_read	@
 4836              	@ main.c:2359: 				aC = (buf[1]<<8)+buf[0];
 4837 017c 9DF80DC0 		ldrb	ip, [sp, #13]	@ zero_extendqisi2	@ buf, buf
 4838 0180 9DF80C00 		ldrb	r0, [sp, #12]	@ zero_extendqisi2	@ buf, buf
 4839              	@ main.c:2360: 				aR = (buf[3]<<8)+buf[2];
 4840 0184 9DF80F10 		ldrb	r1, [sp, #15]	@ zero_extendqisi2	@ buf, buf
 4841 0188 9DF80EB0 		ldrb	fp, [sp, #14]	@ zero_extendqisi2	@ buf, buf
 4842              	@ main.c:2361: 				aG = (buf[5]<<8)+buf[4];
 4843 018c 9DF81120 		ldrb	r2, [sp, #17]	@ zero_extendqisi2	@ buf, buf
 4844              	@ main.c:2362: 				aB = (buf[7]<<8)+buf[6];
 4845 0190 9DF81330 		ldrb	r3, [sp, #19]	@ zero_extendqisi2	@ buf, buf
ARM GAS  /tmp/ccDfNsWv.s 			page 86


 4846              	@ main.c:2359: 				aC = (buf[1]<<8)+buf[0];
 4847 0194 00EB0C20 		add	r0, r0, ip, lsl #8	@ tmp328, buf, buf,
 4848              	@ main.c:2361: 				aG = (buf[5]<<8)+buf[4];
 4849 0198 9DF810A0 		ldrb	r10, [sp, #16]	@ zero_extendqisi2	@ buf, buf
 4850              	@ main.c:2362: 				aB = (buf[7]<<8)+buf[6];
 4851 019c 9DF81290 		ldrb	r9, [sp, #18]	@ zero_extendqisi2	@ buf, buf
 4852              	@ main.c:2360: 				aR = (buf[3]<<8)+buf[2];
 4853 01a0 0BEB012B 		add	fp, fp, r1, lsl #8	@ tmp307, buf, buf,
 4854              	@ main.c:2364: 				sint2uart(aC); UaPutC(','); //hex2uart((buf[1]<<8)+buf[0],4);
 4855 01a4 80B2     		uxth	r0, r0	@, tmp328
 4856              	@ main.c:2361: 				aG = (buf[5]<<8)+buf[4];
 4857 01a6 0AEB022A 		add	r10, r10, r2, lsl #8	@ tmp314, buf, buf,
 4858              	@ main.c:2362: 				aB = (buf[7]<<8)+buf[6];
 4859 01aa 09EB0329 		add	r9, r9, r3, lsl #8	@ tmp321, buf, buf,
 4860              	@ main.c:2360: 				aR = (buf[3]<<8)+buf[2];
 4861 01ae 1FFA8BFB 		uxth	fp, fp	@ aR, tmp307
 4862              	@ main.c:2364: 				sint2uart(aC); UaPutC(','); //hex2uart((buf[1]<<8)+buf[0],4);
 4863 01b2 FFF7FEFF 		bl	sint2uart	@
 4864 01b6 2C20     		movs	r0, #44	@,
 4865 01b8 FFF7FEFF 		bl	UaPutC	@
 4866              	@ main.c:2365: 				sint2uart(aR); UaPutC(','); //hex2uart((buf[3]<<8)+buf[2],4);
 4867 01bc 5846     		mov	r0, fp	@, aR
 4868 01be FFF7FEFF 		bl	sint2uart	@
 4869              	@ main.c:2361: 				aG = (buf[5]<<8)+buf[4];
 4870 01c2 1FFA8AFA 		uxth	r10, r10	@ aG, tmp314
 4871              	@ main.c:2365: 				sint2uart(aR); UaPutC(','); //hex2uart((buf[3]<<8)+buf[2],4);
 4872 01c6 2C20     		movs	r0, #44	@,
 4873 01c8 FFF7FEFF 		bl	UaPutC	@
 4874              	@ main.c:2366: 				sint2uart(aG); UaPutC(','); //hex2uart((buf[5]<<8)+buf[4],4);
 4875 01cc 5046     		mov	r0, r10	@, aG
 4876 01ce FFF7FEFF 		bl	sint2uart	@
 4877              	@ main.c:2362: 				aB = (buf[7]<<8)+buf[6];
 4878 01d2 1FFA89F9 		uxth	r9, r9	@ aB, tmp321
 4879              	@ main.c:2366: 				sint2uart(aG); UaPutC(','); //hex2uart((buf[5]<<8)+buf[4],4);
 4880 01d6 2C20     		movs	r0, #44	@,
 4881 01d8 FFF7FEFF 		bl	UaPutC	@
 4882              	@ main.c:2367: 				sint2uart(aB); UaPutC(',');//hex2uart((buf[7]<<8)+buf[6],4);
 4883 01dc 4846     		mov	r0, r9	@, aB
 4884 01de FFF7FEFF 		bl	sint2uart	@
 4885 01e2 2C20     		movs	r0, #44	@,
 4886 01e4 FFF7FEFF 		bl	UaPutC	@
 4887 01e8 6EE7     		b	.L388	@
 4888              	.L394:
 4889 01ea 00BF     		.align	2
 4890              	.L393:
 4891 01ec 000C0140 		.word	1073810432
 4892 01f0 00100240 		.word	1073876992
 4893 01f4 00580040 		.word	1073764352
 4894 01f8 00540040 		.word	1073763328
 4895 01fc 00000000 		.word	.LC56
 4896 0200 10E000E0 		.word	-536813552
 4897 0204 00000000 		.word	delay_us
 4898 0208 3F771B00 		.word	1799999
 4899 020c 00000000 		.word	trg0
 4900 0210 A0BB0D00 		.word	900000
 4901 0214 40000000 		.word	.LC18
 4902 0218 00000000 		.word	.LC55
ARM GAS  /tmp/ccDfNsWv.s 			page 87


 4903 021c 00000140 		.word	1073807360
 4904 0220 D34D6210 		.word	274877907
 4905              		.size	MAX44009_i2c, .-MAX44009_i2c
 4906              		.section	.text.BMP280_i2c,"ax",%progbits
 4907              		.align	1
 4908              		.p2align 2,,3
 4909              		.global	BMP280_i2c
 4910              		.syntax unified
 4911              		.thumb
 4912              		.thumb_func
 4913              		.fpu softvfp
 4914              		.type	BMP280_i2c, %function
 4915              	BMP280_i2c:
 4916              		@ args = 0, pretend = 0, frame = 80
 4917              		@ frame_needed = 0, uses_anonymous_args = 0
 4918 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 4919              	@ main.c:2395: 		I2C2->CCR = (1<<15) | 25;               			// setup speed (800kHz)
 4920 0004 48F2190C 		movw	ip, #32793	@ tmp322,
 4921              	@ main.c:2392: 		I2C2->TRISE = 37;               		// limit slope
 4922 0008 4FF0250E 		mov	lr, #37	@ tmp319,
 4923              	@ main.c:2389: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 4924 000c 0125     		movs	r5, #1	@ tmp312,
 4925              	@ main.c:2391: 		I2C2_CR1_SWRST_bb = 0;
 4926 000e 4FF00008 		mov	r8, #0	@ tmp316,
 4927              	@ main.c:2396: 		I2C2->CR2 = I2C_CR2_FREQ_36MHz;     // config I2C2 module
 4928 0012 2427     		movs	r7, #36	@ tmp325,
 4929              	@ main.c:2387: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000bf00;	// ...009d00 PB10=SCL(Push-pu
 4930 0014 C74A     		ldr	r2, .L404	@ tmp308,
 4931              	@ main.c:2392: 		I2C2->TRISE = 37;               		// limit slope
 4932 0016 C84C     		ldr	r4, .L404+4	@ tmp317,
 4933              	@ main.c:2387: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000bf00;	// ...009d00 PB10=SCL(Push-pu
 4934 0018 5368     		ldr	r3, [r2, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 4935              	@ main.c:2390: 		I2C2_CR1_SWRST_bb = 1;            	// force software reset of I2C peripheral
 4936 001a C848     		ldr	r0, .L404+8	@ tmp313,
 4937              	@ main.c:2389: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 4938 001c C849     		ldr	r1, .L404+12	@ tmp311,
 4939              	@ main.c:2397: 		I2C2_CR1_PE_bb = 1;               	// enable peripheral
 4940 001e C94E     		ldr	r6, .L404+16	@ tmp326,
 4941              	@ main.c:2387: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000bf00;	// ...009d00 PB10=SCL(Push-pu
 4942 0020 23F47F43 		bic	r3, r3, #65280	@ tmp309, _1,
 4943              	@ main.c:2380: void BMP280_i2c(void){
 4944 0024 95B0     		sub	sp, sp, #84	@,,
 4945              	@ main.c:2387: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000bf00;	// ...009d00 PB10=SCL(Push-pu
 4946 0026 43F43F43 		orr	r3, r3, #48896	@ _3, tmp309,
 4947 002a 5360     		str	r3, [r2, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 4948              	@ main.c:2389: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 4949 002c 0D60     		str	r5, [r1]	@ tmp312, MEM[(volatile long unsigned int *)1111622616B]
 4950              	@ main.c:2399: 		i2c2_read(BMP280_ADR,  0xD0, buf,1 );
 4951 002e 2B46     		mov	r3, r5	@, tmp312
 4952              	@ main.c:2390: 		I2C2_CR1_SWRST_bb = 1;            	// force software reset of I2C peripheral
 4953 0030 0560     		str	r5, [r0]	@ tmp312, MEM[(volatile long unsigned int *)1108017212B]
 4954              	@ main.c:2399: 		i2c2_read(BMP280_ADR,  0xD0, buf,1 );
 4955 0032 0EAA     		add	r2, sp, #56	@ tmp503,,
 4956              	@ main.c:2391: 		I2C2_CR1_SWRST_bb = 0;
 4957 0034 C0F80080 		str	r8, [r0]	@ tmp316, MEM[(volatile long unsigned int *)1108017212B]
 4958              	@ main.c:2399: 		i2c2_read(BMP280_ADR,  0xD0, buf,1 );
 4959 0038 D021     		movs	r1, #208	@,
ARM GAS  /tmp/ccDfNsWv.s 			page 88


 4960              	@ main.c:2392: 		I2C2->TRISE = 37;               		// limit slope
 4961 003a A4F820E0 		strh	lr, [r4, #32]	@ movhi	@ tmp319, MEM[(struct I2C_TypeDef *)1073764352B].TRISE
 4962              	@ main.c:2399: 		i2c2_read(BMP280_ADR,  0xD0, buf,1 );
 4963 003e EC20     		movs	r0, #236	@,
 4964              	@ main.c:2395: 		I2C2->CCR = (1<<15) | 25;               			// setup speed (800kHz)
 4965 0040 A4F81CC0 		strh	ip, [r4, #28]	@ movhi	@ tmp322, MEM[(struct I2C_TypeDef *)1073764352B].CCR
 4966              	@ main.c:2396: 		I2C2->CR2 = I2C_CR2_FREQ_36MHz;     // config I2C2 module
 4967 0044 A780     		strh	r7, [r4, #4]	@ movhi	@ tmp325, MEM[(struct I2C_TypeDef *)1073764352B].CR2
 4968              	@ main.c:2397: 		I2C2_CR1_PE_bb = 1;               	// enable peripheral
 4969 0046 3560     		str	r5, [r6]	@ tmp312, MEM[(volatile long unsigned int *)1108017152B]
 4970              	@ main.c:2399: 		i2c2_read(BMP280_ADR,  0xD0, buf,1 );
 4971 0048 FFF7FEFF 		bl	i2c2_read	@
 4972              	@ main.c:2400: 		UaPutK("\r\n i2c_BMP280 = 0x");	
 4973 004c BE48     		ldr	r0, .L404+20	@,
 4974 004e FFF7FEFF 		bl	UaPutK	@
 4975              	@ main.c:2401: 		hex2uart(buf[0],2);
 4976 0052 0221     		movs	r1, #2	@,
 4977 0054 9DF83800 		ldrb	r0, [sp, #56]	@ zero_extendqisi2	@, buf
 4978 0058 FFF7FEFF 		bl	hex2uart	@
 4979              	@ main.c:2404: 		buf[0]=0xf4;
 4980 005c 4BF2F473 		movw	r3, #47092	@ tmp332,
 4981              	@ main.c:2406: 		i2c2_write(BMP280_ADR,buf,2); // set mode
 4982 0060 0EA9     		add	r1, sp, #56	@ tmp504,,
 4983 0062 0222     		movs	r2, #2	@,
 4984 0064 EC20     		movs	r0, #236	@,
 4985              	@ main.c:2404: 		buf[0]=0xf4;
 4986 0066 ADF83830 		strh	r3, [sp, #56]	@ movhi	@ tmp332, MEM[(u08[24] *)&buf]
 4987              	@ main.c:2406: 		i2c2_write(BMP280_ADR,buf,2); // set mode
 4988 006a FFF7FEFF 		bl	i2c2_write	@
 4989              	@ main.c:2408: 		buf[0]=0xf5;
 4990 006e 41F2F503 		movw	r3, #4341	@ tmp335,
 4991              	@ main.c:2410: 		i2c2_write(BMP280_ADR,buf,2); // set mode
 4992 0072 0EA9     		add	r1, sp, #56	@ tmp505,,
 4993 0074 0222     		movs	r2, #2	@,
 4994 0076 EC20     		movs	r0, #236	@,
 4995              	@ main.c:2408: 		buf[0]=0xf5;
 4996 0078 ADF83830 		strh	r3, [sp, #56]	@ movhi	@ tmp335, MEM[(u08[24] *)&buf]
 4997              	@ main.c:2410: 		i2c2_write(BMP280_ADR,buf,2); // set mode
 4998 007c FFF7FEFF 		bl	i2c2_write	@
 4999              	@ main.c:2412: 		i2c2_read(BMP280_ADR,  0x88, buf,6+16 );
 5000 0080 0EAA     		add	r2, sp, #56	@ tmp506,,
 5001 0082 1623     		movs	r3, #22	@,
 5002 0084 8821     		movs	r1, #136	@,
 5003 0086 EC20     		movs	r0, #236	@,
 5004 0088 FFF7FEFF 		bl	i2c2_read	@
 5005              	@ main.c:2415: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5006 008c 9DF83D20 		ldrb	r2, [sp, #61]	@ zero_extendqisi2	@ buf, buf
 5007              	@ main.c:2418: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5008 0090 9DF84110 		ldrb	r1, [sp, #65]	@ zero_extendqisi2	@ buf, buf
 5009              	@ main.c:2415: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5010 0094 0692     		str	r2, [sp, #24]	@ buf, %sfp
 5011              	@ main.c:2425: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5012 0096 9DF84F20 		ldrb	r2, [sp, #79]	@ zero_extendqisi2	@ buf, buf
 5013              	@ main.c:2415: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5014 009a 9DF83CA0 		ldrb	r10, [sp, #60]	@ zero_extendqisi2	@ buf, buf
 5015              	@ main.c:2425: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5016 009e 0592     		str	r2, [sp, #20]	@ buf, %sfp
ARM GAS  /tmp/ccDfNsWv.s 			page 89


 5017              	@ main.c:2415: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5018 00a0 069A     		ldr	r2, [sp, #24]	@ buf, %sfp
 5019              	@ main.c:2418: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5020 00a2 0091     		str	r1, [sp]	@ buf, %sfp
 5021              	@ main.c:2419: 		dig_P3 = (s16)((buf[11]<<8) | buf[10]);
 5022 00a4 9DF84300 		ldrb	r0, [sp, #67]	@ zero_extendqisi2	@ buf, buf
 5023              	@ main.c:2415: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5024 00a8 4AEA022A 		orr	r10, r10, r2, lsl #8	@ tmp349, buf, buf,
 5025              	@ main.c:2418: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5026 00ac 9DF84090 		ldrb	r9, [sp, #64]	@ zero_extendqisi2	@ buf, buf
 5027 00b0 009A     		ldr	r2, [sp]	@ buf, %sfp
 5028              	@ main.c:2419: 		dig_P3 = (s16)((buf[11]<<8) | buf[10]);
 5029 00b2 0190     		str	r0, [sp, #4]	@ buf, %sfp
 5030              	@ main.c:2421: 		dig_P5 = (s16)((buf[15]<<8) | buf[14]);
 5031 00b4 9DF84760 		ldrb	r6, [sp, #71]	@ zero_extendqisi2	@ buf, buf
 5032              	@ main.c:2418: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5033 00b8 49EA0229 		orr	r9, r9, r2, lsl #8	@ tmp355, buf, buf,
 5034              	@ main.c:2419: 		dig_P3 = (s16)((buf[11]<<8) | buf[10]);
 5035 00bc 9DF84280 		ldrb	r8, [sp, #66]	@ zero_extendqisi2	@ buf, buf
 5036 00c0 019A     		ldr	r2, [sp, #4]	@ buf, %sfp
 5037              	@ main.c:2421: 		dig_P5 = (s16)((buf[15]<<8) | buf[14]);
 5038 00c2 0296     		str	r6, [sp, #8]	@ buf, %sfp
 5039              	@ main.c:2422: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5040 00c4 9DF84970 		ldrb	r7, [sp, #73]	@ zero_extendqisi2	@ buf, buf
 5041              	@ main.c:2423: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5042 00c8 9DF84B10 		ldrb	r1, [sp, #75]	@ zero_extendqisi2	@ buf, buf
 5043              	@ main.c:2414: 		dig_T2 = (s16)((buf[3]<<8) | buf[2]);
 5044 00cc 9DF83B30 		ldrb	r3, [sp, #59]	@ zero_extendqisi2	@ buf, buf
 5045              	@ main.c:2419: 		dig_P3 = (s16)((buf[11]<<8) | buf[10]);
 5046 00d0 48EA0228 		orr	r8, r8, r2, lsl #8	@ tmp361, buf, buf,
 5047              	@ main.c:2414: 		dig_T2 = (s16)((buf[3]<<8) | buf[2]);
 5048 00d4 9DF83AB0 		ldrb	fp, [sp, #58]	@ zero_extendqisi2	@ buf, buf
 5049              	@ main.c:2421: 		dig_P5 = (s16)((buf[15]<<8) | buf[14]);
 5050 00d8 029A     		ldr	r2, [sp, #8]	@ buf, %sfp
 5051 00da 9DF846E0 		ldrb	lr, [sp, #70]	@ zero_extendqisi2	@ buf, buf
 5052              	@ main.c:2422: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5053 00de 0397     		str	r7, [sp, #12]	@ buf, %sfp
 5054              	@ main.c:2424: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5055 00e0 9DF84C60 		ldrb	r6, [sp, #76]	@ zero_extendqisi2	@ buf, buf
 5056              	@ main.c:2423: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5057 00e4 0491     		str	r1, [sp, #16]	@ buf, %sfp
 5058              	@ main.c:2424: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5059 00e6 9DF84D10 		ldrb	r1, [sp, #77]	@ zero_extendqisi2	@ buf, buf
 5060              	@ main.c:2421: 		dig_P5 = (s16)((buf[15]<<8) | buf[14]);
 5061 00ea 4EEA022E 		orr	lr, lr, r2, lsl #8	@ tmp373, buf, buf,
 5062              	@ main.c:2414: 		dig_T2 = (s16)((buf[3]<<8) | buf[2]);
 5063 00ee 4BEA032B 		orr	fp, fp, r3, lsl #8	@ tmp343, buf, buf,
 5064              	@ main.c:2422: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5065 00f2 9DF848C0 		ldrb	ip, [sp, #72]	@ zero_extendqisi2	@ buf, buf
 5066 00f6 039A     		ldr	r2, [sp, #12]	@ buf, %sfp
 5067              	@ main.c:2424: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5068 00f8 46EA0121 		orr	r1, r6, r1, lsl #8	@ tmp391, buf, buf,
 5069              	@ main.c:2414: 		dig_T2 = (s16)((buf[3]<<8) | buf[2]);
 5070 00fc 0FFA8BF6 		sxth	r6, fp	@ dig_T2, tmp343
 5071              	@ main.c:2422: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5072 0100 4CEA022C 		orr	ip, ip, r2, lsl #8	@ tmp379, buf, buf,
 5073              	@ main.c:2420: 		dig_P4 = (s16)((buf[13]<<8) | buf[12]);
ARM GAS  /tmp/ccDfNsWv.s 			page 90


 5074 0104 9DF84500 		ldrb	r0, [sp, #69]	@ zero_extendqisi2	@ buf, buf
 5075 0108 9DF84440 		ldrb	r4, [sp, #68]	@ zero_extendqisi2	@ buf, buf
 5076              	@ main.c:2423: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5077 010c 9DF84A70 		ldrb	r7, [sp, #74]	@ zero_extendqisi2	@ buf, buf
 5078              	@ main.c:2425: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5079 0110 9DF84E30 		ldrb	r3, [sp, #78]	@ zero_extendqisi2	@ buf, buf
 5080              	@ main.c:2423: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5081 0114 049A     		ldr	r2, [sp, #16]	@ buf, %sfp
 5082              	@ main.c:2414: 		dig_T2 = (s16)((buf[3]<<8) | buf[2]);
 5083 0116 0296     		str	r6, [sp, #8]	@ dig_T2, %sfp
 5084              	@ main.c:2415: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5085 0118 0FFA8AF6 		sxth	r6, r10	@ dig_T3, tmp349
 5086 011c 0396     		str	r6, [sp, #12]	@ dig_T3, %sfp
 5087              	@ main.c:2418: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5088 011e 0FFA89F6 		sxth	r6, r9	@ dig_P2, tmp355
 5089              	@ main.c:2423: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5090 0122 47EA0227 		orr	r7, r7, r2, lsl #8	@ tmp385, buf, buf,
 5091              	@ main.c:2425: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5092 0126 059A     		ldr	r2, [sp, #20]	@ buf, %sfp
 5093              	@ main.c:2418: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5094 0128 0596     		str	r6, [sp, #20]	@ dig_P2, %sfp
 5095              	@ main.c:2419: 		dig_P3 = (s16)((buf[11]<<8) | buf[10]);
 5096 012a 0FFA88F6 		sxth	r6, r8	@ dig_P3, tmp361
 5097 012e 0696     		str	r6, [sp, #24]	@ dig_P3, %sfp
 5098              	@ main.c:2421: 		dig_P5 = (s16)((buf[15]<<8) | buf[14]);
 5099 0130 0FFA8EF6 		sxth	r6, lr	@ dig_P5, tmp373
 5100 0134 0796     		str	r6, [sp, #28]	@ dig_P5, %sfp
 5101              	@ main.c:2422: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5102 0136 0FFA8CF6 		sxth	r6, ip	@ dig_P6, tmp379
 5103              	@ main.c:2424: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5104 013a 0091     		str	r1, [sp]	@ tmp391, %sfp
 5105              	@ main.c:2422: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5106 013c 0896     		str	r6, [sp, #32]	@ dig_P6, %sfp
 5107              	@ main.c:2423: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5108 013e 3EB2     		sxth	r6, r7	@ dig_P7, tmp385
 5109              	@ main.c:2425: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5110 0140 43EA0223 		orr	r3, r3, r2, lsl #8	@ tmp397, buf, buf,
 5111              	@ main.c:2423: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5112 0144 0996     		str	r6, [sp, #36]	@ dig_P7, %sfp
 5113              	@ main.c:2424: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5114 0146 BDF90060 		ldrsh	r6, [sp]	@ dig_P8, %sfp
 5115              	@ main.c:2425: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5116 014a 0193     		str	r3, [sp, #4]	@ tmp397, %sfp
 5117              	@ main.c:2424: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5118 014c 0A96     		str	r6, [sp, #40]	@ dig_P8, %sfp
 5119              	@ main.c:2425: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5120 014e BDF90460 		ldrsh	r6, [sp, #4]	@ dig_P9, %sfp
 5121              	@ main.c:2427: 		i2c2_read(BMP280_ADR,  0xf4, buf,1 ); hex2uart(buf[0],2);
 5122 0152 2B46     		mov	r3, r5	@, tmp312
 5123              	@ main.c:2425: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5124 0154 0B96     		str	r6, [sp, #44]	@ dig_P9, %sfp
 5125              	@ main.c:2417: 		dig_P1 = (u16)(((u16)(buf[7]<<8)) | buf[6]);
 5126 0156 BDF83E60 		ldrh	r6, [sp, #62]	@ dig_P1, MEM[(u08[24] *)&buf + 6B]
 5127              	@ main.c:2427: 		i2c2_read(BMP280_ADR,  0xf4, buf,1 ); hex2uart(buf[0],2);
 5128 015a 0EAA     		add	r2, sp, #56	@ tmp533,,
 5129              	@ main.c:2420: 		dig_P4 = (s16)((buf[13]<<8) | buf[12]);
 5130 015c 44EA0024 		orr	r4, r4, r0, lsl #8	@ tmp367, buf, buf,
ARM GAS  /tmp/ccDfNsWv.s 			page 91


 5131              	@ main.c:2427: 		i2c2_read(BMP280_ADR,  0xf4, buf,1 ); hex2uart(buf[0],2);
 5132 0160 F421     		movs	r1, #244	@,
 5133 0162 EC20     		movs	r0, #236	@,
 5134              	@ main.c:2413: 		dig_T1 = (u16)(((u16)(buf[1]<<8)) | buf[0]);
 5135 0164 BDF838A0 		ldrh	r10, [sp, #56]	@ dig_T1, MEM[(u08[24] *)&buf]
 5136              	@ main.c:2417: 		dig_P1 = (u16)(((u16)(buf[7]<<8)) | buf[6]);
 5137 0168 0496     		str	r6, [sp, #16]	@ dig_P1, %sfp
 5138              	@ main.c:2427: 		i2c2_read(BMP280_ADR,  0xf4, buf,1 ); hex2uart(buf[0],2);
 5139 016a FFF7FEFF 		bl	i2c2_read	@
 5140 016e 0221     		movs	r1, #2	@,
 5141 0170 9DF83800 		ldrb	r0, [sp, #56]	@ zero_extendqisi2	@, buf
 5142 0174 FFF7FEFF 		bl	hex2uart	@
 5143              	@ main.c:2428: 		i2c2_read(BMP280_ADR,  0xf5, buf,1 ); hex2uart(buf[0],2);
 5144 0178 2B46     		mov	r3, r5	@, tmp312
 5145 017a 0EAA     		add	r2, sp, #56	@ tmp554,,
 5146 017c F521     		movs	r1, #245	@,
 5147 017e EC20     		movs	r0, #236	@,
 5148 0180 FFF7FEFF 		bl	i2c2_read	@
 5149              	@ main.c:2420: 		dig_P4 = (s16)((buf[13]<<8) | buf[12]);
 5150 0184 24B2     		sxth	r4, r4	@ dig_P4, tmp367
 5151              	@ main.c:2428: 		i2c2_read(BMP280_ADR,  0xf5, buf,1 ); hex2uart(buf[0],2);
 5152 0186 0221     		movs	r1, #2	@,
 5153 0188 9DF83800 		ldrb	r0, [sp, #56]	@ zero_extendqisi2	@, buf
 5154 018c FFF7FEFF 		bl	hex2uart	@
 5155              	@ main.c:2480: 				var2 = (var2>>2)+(((s32)dig_P4)<<16); 
 5156 0190 2304     		lsls	r3, r4, #16	@ _139, dig_P4,
 5157 0192 0193     		str	r3, [sp, #4]	@ _139, %sfp
 5158 0194 DFF8DC81 		ldr	r8, .L404+64	@ tmp494,
 5159              	@ main.c:2454: 				var1 = ((((adc_T>>3)  - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5160 0198 0AFA05F3 		lsl	r3, r10, r5	@ _99, dig_T1,
 5161 019c 6B4F     		ldr	r7, .L404+24	@ tmp496,
 5162              	@ main.c:2439: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL)){
 5163 019e DFF8D891 		ldr	r9, .L404+68	@ tmp405,
 5164              	@ main.c:2506: 			if( STCLK_MS*1000 < (trg1 - SysTick->VAL)){
 5165 01a2 DFF8D8B1 		ldr	fp, .L404+72	@ tmp498,
 5166              	@ main.c:2439: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL)){
 5167 01a6 6A4E     		ldr	r6, .L404+28	@ tmp403,
 5168              	@ main.c:2454: 				var1 = ((((adc_T>>3)  - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5169 01a8 0093     		str	r3, [sp]	@ _99, %sfp
 5170              	.L400:
 5171              	@ main.c:2439: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL)){
 5172 01aa D8F80030 		ldr	r3, [r8]	@ trg0.129_80, trg0
 5173 01ae B268     		ldr	r2, [r6, #8]	@ _81, MEM[(struct SysTick_Type *)3758153744B].VAL
 5174 01b0 9B1A     		subs	r3, r3, r2	@ tmp404, trg0.129_80, _81
 5175 01b2 4B45     		cmp	r3, r9	@ tmp404, tmp405
 5176 01b4 40F2B080 		bls	.L396	@,
 5177              	@ main.c:2440: 				trg0 = SysTick->VAL;
 5178 01b8 B368     		ldr	r3, [r6, #8]	@ _83, MEM[(struct SysTick_Type *)3758153744B].VAL
 5179              	@ main.c:2442: 				UaPutK("\r\n BMP280 ");	
 5180 01ba 6648     		ldr	r0, .L404+32	@,
 5181              	@ main.c:2440: 				trg0 = SysTick->VAL;
 5182 01bc C8F80030 		str	r3, [r8]	@ _83, trg0
 5183              	@ main.c:2442: 				UaPutK("\r\n BMP280 ");	
 5184 01c0 FFF7FEFF 		bl	UaPutK	@
 5185              	@ main.c:2449: 				i2c2_read(BMP280_ADR,  0xFA, buf,3 );
 5186 01c4 0323     		movs	r3, #3	@,
 5187 01c6 0EAA     		add	r2, sp, #56	@ tmp558,,
ARM GAS  /tmp/ccDfNsWv.s 			page 92


 5188 01c8 FA21     		movs	r1, #250	@,
 5189 01ca EC20     		movs	r0, #236	@,
 5190 01cc FFF7FEFF 		bl	i2c2_read	@
 5191              	@ main.c:2453: 				adc_T = ( (u32)((u16)((buf[0]) << 8) | buf[1] ) << 4) | ( (buf[2]) >> 4);
 5192 01d0 BDF83830 		ldrh	r3, [sp, #56]	@, MEM[(u08[24] *)&buf]
 5193 01d4 9DF83A20 		ldrb	r2, [sp, #58]	@ zero_extendqisi2	@ buf, buf
 5194 01d8 5BBA     		rev16	r3, r3	@ tmp412, MEM[(u08[24] *)&buf]
 5195 01da 9BB2     		uxth	r3, r3	@ tmp414, tmp412
 5196 01dc 1209     		lsrs	r2, r2, #4	@ tmp418, buf,
 5197 01de 42EA0312 		orr	r2, r2, r3, lsl #4	@ adc_T, tmp418, tmp414,
 5198              	@ main.c:2455:         var2 = (((((adc_T>>4) - ((s32)dig_T1)) * ((adc_T>>4) - ((s32)dig_T1))) >> 12
 5199 01e2 CAEB1213 		rsb	r3, r10, r2, lsr #4	@ _105, dig_T1, adc_T,
 5200 01e6 03FB03F3 		mul	r3, r3, r3	@ tmp424, _105, _105
 5201              	@ main.c:2456: 				* ((s32)dig_T3))>>14;
 5202 01ea 0398     		ldr	r0, [sp, #12]	@ dig_T3, %sfp
 5203              	@ main.c:2455:         var2 = (((((adc_T>>4) - ((s32)dig_T1)) * ((adc_T>>4) - ((s32)dig_T1))) >> 12
 5204 01ec 1B0B     		lsrs	r3, r3, #12	@ tmp425, tmp424,
 5205              	@ main.c:2456: 				* ((s32)dig_T3))>>14;
 5206 01ee 00FB03F3 		mul	r3, r0, r3	@ tmp426, dig_T3, tmp425
 5207              	@ main.c:2454: 				var1 = ((((adc_T>>3)  - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5208 01f2 0098     		ldr	r0, [sp]	@ _99, %sfp
 5209              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5210 01f4 B168     		ldr	r1, [r6, #8]	@ _259, MEM[(struct SysTick_Type *)3758153744B].VAL
 5211              	@ main.c:2454: 				var1 = ((((adc_T>>3)  - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5212 01f6 C0EBD202 		rsb	r2, r0, r2, lsr #3	@ tmp421, _99, adc_T,
 5213 01fa 0298     		ldr	r0, [sp, #8]	@ dig_T2, %sfp
 5214              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5215 01fc 3960     		str	r1, [r7]	@ _259, Timt
 5216              	@ main.c:2454: 				var1 = ((((adc_T>>3)  - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5217 01fe 00FB02F2 		mul	r2, r0, r2	@ tmp422, dig_T2, tmp421
 5218              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5219 0202 3D68     		ldr	r5, [r7]	@ Timt.47_256, Timt
 5220 0204 B168     		ldr	r1, [r6, #8]	@ _257, MEM[(struct SysTick_Type *)3758153744B].VAL
 5221              	@ main.c:2455:         var2 = (((((adc_T>>4) - ((s32)dig_T1)) * ((adc_T>>4) - ((s32)dig_T1))) >> 12
 5222 0206 9B0B     		lsrs	r3, r3, #14	@ var2, tmp426,
 5223              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5224 0208 6D1A     		subs	r5, r5, r1	@ _258, Timt.47_256, _257
 5225              	@ main.c:2465: 				UaPutS("tt="); sint2uart(tim);
 5226 020a 5348     		ldr	r0, .L404+36	@,
 5227              	@ main.c:2458:         t_fine = var1 + var2;
 5228 020c 03EBD224 		add	r4, r3, r2, lsr #11	@ t_fine, var2, tmp422,
 5229              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5230 0210 0D95     		str	r5, [sp, #52]	@ _258, MEM[(volatile u32 *)&tim]
 5231              	@ main.c:2465: 				UaPutS("tt="); sint2uart(tim);
 5232 0212 FFF7FEFF 		bl	UaPutS	@
 5233 0216 2846     		mov	r0, r5	@, _258
 5234 0218 FFF7FEFF 		bl	sint2uart	@
 5235              	@ main.c:2468: 				UaPutK(" T=");	
 5236 021c 4F48     		ldr	r0, .L404+40	@,
 5237 021e FFF7FEFF 		bl	UaPutK	@
 5238              	@ main.c:2461: 				T     = (t_fine * 50 + 1280) >> 8; // resolution 0.001 C
 5239 0222 3220     		movs	r0, #50	@ tmp433,
 5240 0224 00FB04F0 		mul	r0, r0, r4	@ tmp432, tmp433, t_fine
 5241 0228 00F5A060 		add	r0, r0, #1280	@ tmp434, tmp432,
 5242              	@ main.c:2469: 				num2uart(T,5,3);
 5243 022c 000A     		lsrs	r0, r0, #8	@, tmp434,
 5244 022e 0322     		movs	r2, #3	@,
ARM GAS  /tmp/ccDfNsWv.s 			page 93


 5245 0230 0521     		movs	r1, #5	@,
 5246 0232 FFF7FEFF 		bl	num2uart	@
 5247              	@ main.c:2473: 				i2c2_read(BMP280_ADR,  0xF7, buf,3 );				
 5248 0236 0323     		movs	r3, #3	@,
 5249 0238 0EAA     		add	r2, sp, #56	@ tmp563,,
 5250 023a F721     		movs	r1, #247	@,
 5251 023c EC20     		movs	r0, #236	@,
 5252 023e FFF7FEFF 		bl	i2c2_read	@
 5253              	@ main.c:2477: 				var1 = (((s32)t_fine)>>1) - 64000UL; 
 5254 0242 6210     		asrs	r2, r4, #1	@ tmp446, t_fine,
 5255 0244 A2F57A42 		sub	r2, r2, #64000	@ var1, tmp446,
 5256              	@ main.c:2478: 				var2 = (((var1>>2) * (var1>>2)) >> 11 ) * ((s32)dig_P6); 
 5257 0248 9308     		lsrs	r3, r2, #2	@ _129, var1,
 5258 024a 03FB03F3 		mul	r3, r3, r3	@ _130, _129, _129
 5259              	@ main.c:2481: 				var1 = (((dig_P3 * (((var1>>2) * (var1>>2)) >> 13 )) >> 3) + ((((s32)dig_P2) * v
 5260 024e 0599     		ldr	r1, [sp, #20]	@ dig_P2, %sfp
 5261 0250 069C     		ldr	r4, [sp, #24]	@ dig_P3, %sfp
 5262 0252 01FB02F0 		mul	r0, r1, r2	@ tmp454, dig_P2, var1
 5263 0256 590B     		lsrs	r1, r3, #13	@ tmp451, _130,
 5264 0258 04FB01F1 		mul	r1, r4, r1	@ tmp452, dig_P3, tmp451
 5265              	@ main.c:2479: 				var2 = var2 + ((var1*((s32)dig_P5))<<1); 
 5266 025c 079C     		ldr	r4, [sp, #28]	@ dig_P5, %sfp
 5267              	@ main.c:2481: 				var1 = (((dig_P3 * (((var1>>2) * (var1>>2)) >> 13 )) >> 3) + ((((s32)dig_P2) * v
 5268 025e 4008     		lsrs	r0, r0, #1	@ tmp455, tmp454,
 5269              	@ main.c:2479: 				var2 = var2 + ((var1*((s32)dig_P5))<<1); 
 5270 0260 04FB02F2 		mul	r2, r4, r2	@ tmp448, dig_P5, var1
 5271              	@ main.c:2481: 				var1 = (((dig_P3 * (((var1>>2) * (var1>>2)) >> 13 )) >> 3) + ((((s32)dig_P2) * v
 5272 0264 00EBD100 		add	r0, r0, r1, lsr #3	@ _147, tmp455, tmp452,
 5273 0268 800C     		lsrs	r0, r0, #18	@ var1, _147,
 5274              	@ main.c:2482: 				var1 =((((32768+var1))*((s32)dig_P1))>>15); 
 5275 026a 0499     		ldr	r1, [sp, #16]	@ dig_P1, %sfp
 5276 026c 00F50040 		add	r0, r0, #32768	@ tmp457, var1,
 5277 0270 01FB00F0 		mul	r0, r1, r0	@ _150, dig_P1, tmp457
 5278              	@ main.c:2479: 				var2 = var2 + ((var1*((s32)dig_P5))<<1); 
 5279 0274 0899     		ldr	r1, [sp, #32]	@ dig_P6, %sfp
 5280 0276 5200     		lsls	r2, r2, #1	@ tmp449, tmp448,
 5281              	@ main.c:2478: 				var2 = (((var1>>2) * (var1>>2)) >> 11 ) * ((s32)dig_P6); 
 5282 0278 DB0A     		lsrs	r3, r3, #11	@ tmp447, _130,
 5283              	@ main.c:2479: 				var2 = var2 + ((var1*((s32)dig_P5))<<1); 
 5284 027a 01FB0323 		mla	r3, r1, r3, r2	@ var2, dig_P6, tmp447, tmp449
 5285              	@ main.c:2474: 				adc_P   = ((u32)((u16)(buf[0] << 8) | buf[1])<<4) | (buf[2]>>4);
 5286 027e BDF83810 		ldrh	r1, [sp, #56]	@, MEM[(u08[24] *)&buf]
 5287 0282 9DF83A20 		ldrb	r2, [sp, #58]	@ zero_extendqisi2	@ buf, buf
 5288 0286 49BA     		rev16	r1, r1	@ tmp437, MEM[(u08[24] *)&buf]
 5289 0288 89B2     		uxth	r1, r1	@ tmp439, tmp437
 5290              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5291 028a B468     		ldr	r4, [r6, #8]	@ _255, MEM[(struct SysTick_Type *)3758153744B].VAL
 5292              	@ main.c:2474: 				adc_P   = ((u32)((u16)(buf[0] << 8) | buf[1])<<4) | (buf[2]>>4);
 5293 028c 1209     		lsrs	r2, r2, #4	@ tmp443, buf,
 5294              	@ main.c:2480: 				var2 = (var2>>2)+(((s32)dig_P4)<<16); 
 5295 028e 019D     		ldr	r5, [sp, #4]	@ _139, %sfp
 5296              	@ main.c:2474: 				adc_P   = ((u32)((u16)(buf[0] << 8) | buf[1])<<4) | (buf[2]>>4);
 5297 0290 42EA0112 		orr	r2, r2, r1, lsl #4	@ adc_P, tmp443, tmp439,
 5298              	@ main.c:2483: 				if (var1 == 0) 
 5299 0294 C10B     		lsrs	r1, r0, #15	@ var1, _150,
 5300              	@ main.c:2480: 				var2 = (var2>>2)+(((s32)dig_P4)<<16); 
 5301 0296 05EB9303 		add	r3, r5, r3, lsr #2	@ var2, _139, var2,
ARM GAS  /tmp/ccDfNsWv.s 			page 94


 5302              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5303 029a 3C60     		str	r4, [r7]	@ _255, Timt
 5304              	@ main.c:2483: 				if (var1 == 0) 
 5305 029c 46D0     		beq	.L395	@,
 5306              	@ main.c:2488: 					p = (((u32)(((s32)1048576)-adc_P)-(var2>>12)))*3125; 
 5307 029e 3048     		ldr	r0, .L404+44	@ tmp461,
 5308 02a0 02EB1333 		add	r3, r2, r3, lsr #12	@ tmp459, adc_P, var2,
 5309 02a4 00FB03F0 		mul	r0, r0, r3	@ tmp460, tmp461, tmp459
 5310 02a8 00F14340 		add	r0, r0, #-1023410176	@ p, tmp460,
 5311 02ac 00F5A000 		add	r0, r0, #5242880	@ p, p,
 5312              	@ main.c:2489: 					if (p < 0x80000000) { p = (p << 1) / ((u32)var1); 	}  
 5313 02b0 0028     		cmp	r0, #0	@ p,
 5314              	@ main.c:2490: 					else  							{ p = (p 			 /  (u32)var1)*2; } 
 5315 02b2 B3BF     		iteet	lt
 5316 02b4 B0FBF1F0 		udivlt	r0, r0, r1	@ _157, p, var1
 5317              	@ main.c:2489: 					if (p < 0x80000000) { p = (p << 1) / ((u32)var1); 	}  
 5318 02b8 4000     		lslge	r0, r0, #1	@ _156, p,
 5319 02ba B0FBF1F0 		udivge	r0, r0, r1	@ p, _156, var1
 5320              	@ main.c:2490: 					else  							{ p = (p 			 /  (u32)var1)*2; } 
 5321 02be 4000     		lsllt	r0, r0, #1	@ p, _157,
 5322              	@ main.c:2491: 					var1 = (((s32)dig_P9) * ((s32)(((p>>3) * (p>>3))>>13)))>>12; 
 5323 02c0 C308     		lsrs	r3, r0, #3	@ _159, p,
 5324 02c2 03FB03F3 		mul	r3, r3, r3	@ tmp463, _159, _159
 5325              	@ main.c:2492: 					var2 = (((s32)(p>>2)) * ((s32)dig_P8))>>13; 
 5326 02c6 0A99     		ldr	r1, [sp, #40]	@ dig_P8, %sfp
 5327 02c8 8208     		lsrs	r2, r0, #2	@ tmp467, p,
 5328 02ca 01FB02F2 		mul	r2, r1, r2	@ tmp468, dig_P8, tmp467
 5329              	@ main.c:2491: 					var1 = (((s32)dig_P9) * ((s32)(((p>>3) * (p>>3))>>13)))>>12; 
 5330 02ce 0B99     		ldr	r1, [sp, #44]	@ dig_P9, %sfp
 5331 02d0 5B0B     		lsrs	r3, r3, #13	@ tmp464, tmp463,
 5332 02d2 01FB03F3 		mul	r3, r1, r3	@ tmp465, dig_P9, tmp464
 5333              	@ main.c:2493: 					p = (u32)((s32)p + ((var1 + var2 + dig_P7) >> 4)); 
 5334 02d6 0999     		ldr	r1, [sp, #36]	@ dig_P7, %sfp
 5335 02d8 01EB6232 		add	r2, r1, r2, asr #13	@ tmp470, dig_P7, tmp468,
 5336 02dc 02EB2333 		add	r3, r2, r3, asr #12	@ tmp471, tmp470, tmp465,
 5337 02e0 00EB1310 		add	r0, r0, r3, lsr #4	@ p, p, tmp471,
 5338              	@ main.c:2494: 					p = (p*5)/8;
 5339 02e4 00EB8000 		add	r0, r0, r0, lsl #2	@ tmp475, p, p,
 5340 02e8 C008     		lsrs	r0, r0, #3	@ p, tmp475,
 5341              	@ main.c:2495: 					p = (p*5)/8;
 5342 02ea 00EB8004 		add	r4, r0, r0, lsl #2	@ tmp479, p, p,
 5343              	@ main.c:2496: 					UaPutK(" p= ");	
 5344 02ee 1D48     		ldr	r0, .L404+48	@,
 5345 02f0 FFF7FEFF 		bl	UaPutK	@
 5346              	@ main.c:2497: 					num2uart(p,9,3);
 5347 02f4 E008     		lsrs	r0, r4, #3	@, tmp479,
 5348 02f6 0322     		movs	r2, #3	@,
 5349 02f8 0921     		movs	r1, #9	@,
 5350 02fa FFF7FEFF 		bl	num2uart	@
 5351              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5352 02fe 3C68     		ldr	r4, [r7]	@ Timt.47_260, Timt
 5353 0300 B368     		ldr	r3, [r6, #8]	@ _261, MEM[(struct SysTick_Type *)3758153744B].VAL
 5354              	@ main.c:2501: 				UaPutS(" tp="); sint2uart(tim/TIM_US);
 5355 0302 1948     		ldr	r0, .L404+52	@,
 5356              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5357 0304 E41A     		subs	r4, r4, r3	@ _262, Timt.47_260, _261
 5358 0306 0D94     		str	r4, [sp, #52]	@ _262, MEM[(volatile u32 *)&tim]
ARM GAS  /tmp/ccDfNsWv.s 			page 95


 5359              	@ main.c:2501: 				UaPutS(" tp="); sint2uart(tim/TIM_US);
 5360 0308 FFF7FEFF 		bl	UaPutS	@
 5361 030c 174B     		ldr	r3, .L404+56	@ tmp577,
 5362 030e A3FB0430 		umull	r3, r0, r3, r4	@ tmp502, tmp486, tmp577, _262
 5363 0312 4008     		lsrs	r0, r0, #1	@, tmp486,
 5364 0314 FFF7FEFF 		bl	sint2uart	@
 5365              	.L396:
 5366              	@ main.c:2506: 			if( STCLK_MS*1000 < (trg1 - SysTick->VAL)){
 5367 0318 154A     		ldr	r2, .L404+60	@ tmp488,
 5368 031a 1368     		ldr	r3, [r2]	@ trg1.135_178, trg1
 5369 031c B168     		ldr	r1, [r6, #8]	@ _179, MEM[(struct SysTick_Type *)3758153744B].VAL
 5370 031e 5B1A     		subs	r3, r3, r1	@ tmp490, trg1.135_178, _179
 5371 0320 5B45     		cmp	r3, fp	@ tmp490, tmp498
 5372 0322 7FF642AF 		bls	.L400	@,
 5373              	@ main.c:2507: 				trg1 = SysTick->VAL;
 5374 0326 B368     		ldr	r3, [r6, #8]	@ _181, MEM[(struct SysTick_Type *)3758153744B].VAL
 5375 0328 1360     		str	r3, [r2]	@ _181, trg1
 5376 032a 3EE7     		b	.L400	@
 5377              	.L395:
 5378              	@ main.c:2511: 	}
 5379 032c 15B0     		add	sp, sp, #84	@,,
 5380              		@ sp needed	@
 5381 032e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 5382              	.L405:
 5383 0332 00BF     		.align	2
 5384              	.L404:
 5385 0334 000C0140 		.word	1073810432
 5386 0338 00580040 		.word	1073764352
 5387 033c 3C000B42 		.word	1108017212
 5388 0340 D8034242 		.word	1111622616
 5389 0344 00000B42 		.word	1108017152
 5390 0348 00000000 		.word	.LC57
 5391 034c 00000000 		.word	Timt
 5392 0350 10E000E0 		.word	-536813552
 5393 0354 14000000 		.word	.LC58
 5394 0358 20000000 		.word	.LC59
 5395 035c 24000000 		.word	.LC60
 5396 0360 CBF3FFFF 		.word	-3125
 5397 0364 28000000 		.word	.LC61
 5398 0368 30000000 		.word	.LC62
 5399 036c 398EE338 		.word	954437177
 5400 0370 00000000 		.word	trg1
 5401 0374 00000000 		.word	trg0
 5402 0378 20AA4400 		.word	4500000
 5403 037c 40548900 		.word	9000000
 5404              		.size	BMP280_i2c, .-BMP280_i2c
 5405              		.section	.text.BMP280_spi,"ax",%progbits
 5406              		.align	1
 5407              		.p2align 2,,3
 5408              		.global	BMP280_spi
 5409              		.syntax unified
 5410              		.thumb
 5411              		.thumb_func
 5412              		.fpu softvfp
 5413              		.type	BMP280_spi, %function
 5414              	BMP280_spi:
 5415              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccDfNsWv.s 			page 96


 5416              		@ frame_needed = 0, uses_anonymous_args = 0
 5417 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 5418              	@ main.c:2525: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|7<<3|SPI_CR1_MSTR|SPI_CR1_CPOL|SPI_CR1_CPHA;		
 5419 0004 40F23F36 		movw	r6, #831	@ tmp198,
 5420              	@ main.c:2541: 		RX1276_CS1 = 0;
 5421 0008 0025     		movs	r5, #0	@ tmp211,
 5422              	@ main.c:2521: 		GPIOA->CRL = (GPIOA->CRL&0x0000ffff)|0xB4B30000;	// PA4~7
 5423 000a 6C48     		ldr	r0, .L413	@ tmp189,
 5424              	@ main.c:2522: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 5425 000c 6C49     		ldr	r1, .L413+4	@ tmp194,
 5426              	@ main.c:2521: 		GPIOA->CRL = (GPIOA->CRL&0x0000ffff)|0xB4B30000;	// PA4~7
 5427 000e 0368     		ldr	r3, [r0]	@ _1, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 5428              	@ main.c:2525: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|7<<3|SPI_CR1_MSTR|SPI_CR1_CPOL|SPI_CR1_CPHA;		
 5429 0010 6C4A     		ldr	r2, .L413+8	@ tmp196,
 5430              	@ main.c:2521: 		GPIOA->CRL = (GPIOA->CRL&0x0000ffff)|0xB4B30000;	// PA4~7
 5431 0012 9BB2     		uxth	r3, r3	@ tmp190, _1
 5432 0014 43F03443 		orr	r3, r3, #-1275068416	@ _4, tmp190,
 5433 0018 43F43303 		orr	r3, r3, #11730944	@ _4, _4,
 5434 001c 0360     		str	r3, [r0]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 5435              	@ main.c:2522: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 5436 001e 8B69     		ldr	r3, [r1, #24]	@ _6, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 5437              	@ main.c:2531: 		trg0 = SysTick->VAL;		trg1 = SysTick->VAL;		trg2 = SysTick->VAL;
 5438 0020 694C     		ldr	r4, .L413+12	@ tmp204,
 5439              	@ main.c:2522: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 5440 0022 43F48053 		orr	r3, r3, #4096	@ _8, _6,
 5441 0026 8B61     		str	r3, [r1, #24]	@ _8, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 5442              	@ main.c:2525: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|7<<3|SPI_CR1_MSTR|SPI_CR1_CPOL|SPI_CR1_CPHA;		
 5443 0028 1680     		strh	r6, [r2]	@ movhi	@ tmp198, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 5444              	@ main.c:2529: 		SPI1->CR1 |= SPI_CR1_SPE;		
 5445 002a 1388     		ldrh	r3, [r2]	@, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 5446              	@ main.c:2531: 		trg0 = SysTick->VAL;		trg1 = SysTick->VAL;		trg2 = SysTick->VAL;
 5447 002c 6749     		ldr	r1, .L413+16	@ tmp205,
 5448              	@ main.c:2529: 		SPI1->CR1 |= SPI_CR1_SPE;		
 5449 002e 43F04003 		orr	r3, r3, #64	@ _11, MEM[(struct SPI_TypeDef *)1073819648B].CR1,
 5450 0032 1380     		strh	r3, [r2]	@ movhi	@ _11, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 5451              	@ main.c:2531: 		trg0 = SysTick->VAL;		trg1 = SysTick->VAL;		trg2 = SysTick->VAL;
 5452 0034 A268     		ldr	r2, [r4, #8]	@ _12, MEM[(struct SysTick_Type *)3758153744B].VAL
 5453 0036 664B     		ldr	r3, .L413+20	@ tmp207,
 5454 0038 0A60     		str	r2, [r1]	@ _12, trg0
 5455 003a A268     		ldr	r2, [r4, #8]	@ _13, MEM[(struct SysTick_Type *)3758153744B].VAL
 5456 003c DFF8B091 		ldr	r9, .L413+52	@ tmp285,
 5457 0040 1A60     		str	r2, [r3]	@ _13, trg1
 5458 0042 A268     		ldr	r2, [r4, #8]	@ _14, MEM[(struct SysTick_Type *)3758153744B].VAL
 5459              	@ main.c:2541: 		RX1276_CS1 = 0;
 5460 0044 634B     		ldr	r3, .L413+24	@ tmp210,
 5461              	@ main.c:2531: 		trg0 = SysTick->VAL;		trg1 = SysTick->VAL;		trg2 = SysTick->VAL;
 5462 0046 C9F80020 		str	r2, [r9]	@ _14, trg2
 5463              	@ main.c:2541: 		RX1276_CS1 = 0;
 5464 004a 1D60     		str	r5, [r3]	@ tmp211, MEM[(volatile long unsigned int *)1109459344B]
 5465              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 5466 004c 2546     		mov	r5, r4	@ tmp215, tmp204
 5467              	@ main.c:2512: void BMP280_spi(void){
 5468 004e 85B0     		sub	sp, sp, #20	@,,
 5469              	@ main.c:2543: 		spi1_rw(0xE0 & 0x7f);   // reset write
 5470 0050 6020     		movs	r0, #96	@,
 5471 0052 FFF7FEFF 		bl	spi1_rw	@
 5472              	@ main.c:2544: 		spi1_rw(0xB6); 			    // reset value
ARM GAS  /tmp/ccDfNsWv.s 			page 97


 5473 0056 B620     		movs	r0, #182	@,
 5474 0058 FFF7FEFF 		bl	spi1_rw	@
 5475              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 5476 005c A368     		ldr	r3, [r4, #8]	@ _123, MEM[(struct SysTick_Type *)3758153744B].VAL
 5477 005e 5E49     		ldr	r1, .L413+28	@ tmp286,
 5478              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 5479 0060 5E48     		ldr	r0, .L413+32	@ tmp217,
 5480              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 5481 0062 0B60     		str	r3, [r1]	@ _123, delay_us
 5482              	.L407:
 5483              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 5484 0064 0B68     		ldr	r3, [r1]	@ delay_us.116_124, delay_us
 5485 0066 AA68     		ldr	r2, [r5, #8]	@ _125, MEM[(struct SysTick_Type *)3758153744B].VAL
 5486 0068 9B1A     		subs	r3, r3, r2	@ tmp216, delay_us.116_124, _125
 5487 006a 8342     		cmp	r3, r0	@ tmp216, tmp217
 5488 006c FAD9     		bls	.L407	@,
 5489              	@ main.c:2548: 		spi1_rw(0xf4 & 0x7f); 	// Select Control register 
 5490 006e 7420     		movs	r0, #116	@,
 5491 0070 FFF7FEFF 		bl	spi1_rw	@
 5492              	@ main.c:2549: 		spi1_rw(0x27); 					// Write  Control register 
 5493 0074 2720     		movs	r0, #39	@,
 5494 0076 FFF7FEFF 		bl	spi1_rw	@
 5495              	@ main.c:2553: 		RX1276_CS1 = 1;
 5496 007a 564A     		ldr	r2, .L413+24	@ tmp218,
 5497 007c 0121     		movs	r1, #1	@ tmp219,
 5498              	@ main.c:2563: 				RX1276_CS1 = 0;
 5499 007e 9346     		mov	fp, r2	@ tmp226, tmp218
 5500              	@ main.c:2559: 			if( STCLK_MS*2000 < (trg2 - SysTick->VAL)){
 5501 0080 DFF844A1 		ldr	r10, .L413+12	@ tmp221,
 5502 0084 564B     		ldr	r3, .L413+36	@ tmp223,
 5503              	@ main.c:2553: 		RX1276_CS1 = 1;
 5504 0086 1160     		str	r1, [r2]	@ tmp219, MEM[(volatile long unsigned int *)1109459344B]
 5505              	.L408:
 5506              	@ main.c:2559: 			if( STCLK_MS*2000 < (trg2 - SysTick->VAL)){
 5507 0088 D9F80020 		ldr	r2, [r9]	@ trg2.136_15, trg2
 5508 008c DAF80810 		ldr	r1, [r10, #8]	@ _16, MEM[(struct SysTick_Type *)3758153744B].VAL
 5509 0090 521A     		subs	r2, r2, r1	@ tmp222, trg2.136_15, _16
 5510 0092 9A42     		cmp	r2, r3	@ tmp222, tmp223
 5511 0094 F8D9     		bls	.L408	@,
 5512              	@ main.c:2563: 				RX1276_CS1 = 0;
 5513 0096 0022     		movs	r2, #0	@ tmp227,
 5514              	@ main.c:2560: 				trg2 = SysTick->VAL;
 5515 0098 DAF80810 		ldr	r1, [r10, #8]	@ _18, MEM[(struct SysTick_Type *)3758153744B].VAL
 5516 009c 0393     		str	r3, [sp, #12]	@ tmp223, %sfp
 5517 009e C9F80010 		str	r1, [r9]	@ _18, trg2
 5518              	@ main.c:2565: 				spi1_rw(0xF4 & 0x7f); 	// Select Control register 
 5519 00a2 7420     		movs	r0, #116	@,
 5520              	@ main.c:2563: 				RX1276_CS1 = 0;
 5521 00a4 CBF80020 		str	r2, [fp]	@ tmp227, MEM[(volatile long unsigned int *)1109459344B]
 5522              	@ main.c:2565: 				spi1_rw(0xF4 & 0x7f); 	// Select Control register 
 5523 00a8 FFF7FEFF 		bl	spi1_rw	@
 5524              	@ main.c:2566: 				spi1_rw(0x27); 					// Write  Control register 
 5525 00ac 2720     		movs	r0, #39	@,
 5526 00ae FFF7FEFF 		bl	spi1_rw	@
 5527              	@ main.c:2568: 				spi1_rw(0xF4);
 5528 00b2 F420     		movs	r0, #244	@,
 5529 00b4 FFF7FEFF 		bl	spi1_rw	@
ARM GAS  /tmp/ccDfNsWv.s 			page 98


 5530              	@ main.c:2569: 				ctrl_meas = spi1_rw(0xff);
 5531 00b8 FF20     		movs	r0, #255	@,
 5532 00ba FFF7FEFF 		bl	spi1_rw	@
 5533 00be 0190     		str	r0, [sp, #4]	@, %sfp
 5534              	@ main.c:2571: 				spi1_rw(0x88);
 5535 00c0 8820     		movs	r0, #136	@,
 5536 00c2 FFF7FEFF 		bl	spi1_rw	@
 5537              	@ main.c:2572: 				v0 = spi1_rw(0xff);
 5538 00c6 FF20     		movs	r0, #255	@,
 5539 00c8 FFF7FEFF 		bl	spi1_rw	@
 5540 00cc 0546     		mov	r5, r0	@ tmp229,
 5541              	@ main.c:2573: 				v1 = spi1_rw(0xff);
 5542 00ce FF20     		movs	r0, #255	@,
 5543 00d0 FFF7FEFF 		bl	spi1_rw	@
 5544              	@ main.c:2574: 				dig_T1 = (u16)(((u16)(v1<<8)) | v0);
 5545 00d4 EDB2     		uxtb	r5, r5	@ _20, tmp229
 5546 00d6 45EA0025 		orr	r5, r5, r0, lsl #8	@ tmp235, _20,,
 5547              	@ main.c:2576: 				spi1_rw(0x8A);
 5548 00da 8A20     		movs	r0, #138	@,
 5549 00dc FFF7FEFF 		bl	spi1_rw	@
 5550              	@ main.c:2577: 				v0 = spi1_rw(0xff);
 5551 00e0 FF20     		movs	r0, #255	@,
 5552 00e2 FFF7FEFF 		bl	spi1_rw	@
 5553 00e6 0646     		mov	r6, r0	@ tmp236,
 5554              	@ main.c:2578: 				v1 = spi1_rw(0xff);
 5555 00e8 FF20     		movs	r0, #255	@,
 5556 00ea FFF7FEFF 		bl	spi1_rw	@
 5557              	@ main.c:2579: 				dig_T2 = (s16)((v1<<8) | v0);
 5558 00ee F6B2     		uxtb	r6, r6	@ _24, tmp236
 5559 00f0 C0B2     		uxtb	r0, r0	@ _25,
 5560 00f2 46EA0026 		orr	r6, r6, r0, lsl #8	@ tmp243, _24, _25,
 5561              	@ main.c:2581: 				spi1_rw(0x8C);
 5562 00f6 8C20     		movs	r0, #140	@,
 5563 00f8 FFF7FEFF 		bl	spi1_rw	@
 5564              	@ main.c:2582: 				v0 = spi1_rw(0xff);
 5565 00fc FF20     		movs	r0, #255	@,
 5566 00fe FFF7FEFF 		bl	spi1_rw	@
 5567 0102 0446     		mov	r4, r0	@ tmp244,
 5568              	@ main.c:2583: 				v1 = spi1_rw(0xff);
 5569 0104 FF20     		movs	r0, #255	@,
 5570 0106 FFF7FEFF 		bl	spi1_rw	@
 5571              	@ main.c:2584: 				dig_T3 = (s16)((v1<<8) | v0);
 5572 010a E4B2     		uxtb	r4, r4	@ _30, tmp244
 5573 010c C0B2     		uxtb	r0, r0	@ _31,
 5574 010e 44EA0024 		orr	r4, r4, r0, lsl #8	@ tmp251, _30, _31,
 5575              	@ main.c:2586: 				spi1_rw(0xFA);
 5576 0112 FA20     		movs	r0, #250	@,
 5577 0114 FFF7FEFF 		bl	spi1_rw	@
 5578              	@ main.c:2587: 				value[0] = spi1_rw(0xff);
 5579 0118 FF20     		movs	r0, #255	@,
 5580 011a FFF7FEFF 		bl	spi1_rw	@
 5581 011e 0746     		mov	r7, r0	@ tmp252,
 5582              	@ main.c:2588: 				value[1] = spi1_rw(0xff);
 5583 0120 FF20     		movs	r0, #255	@,
 5584 0122 FFF7FEFF 		bl	spi1_rw	@
 5585 0126 0290     		str	r0, [sp, #8]	@ tmp253, %sfp
 5586              	@ main.c:2589: 				value[2] = spi1_rw(0xff);
ARM GAS  /tmp/ccDfNsWv.s 			page 99


 5587 0128 FF20     		movs	r0, #255	@,
 5588 012a FFF7FEFF 		bl	spi1_rw	@
 5589              	@ main.c:2595: 				RX1276_CS1 = 1;
 5590 012e 0121     		movs	r1, #1	@ tmp256,
 5591              	@ main.c:2589: 				value[2] = spi1_rw(0xff);
 5592 0130 8046     		mov	r8, r0	@ tmp254,
 5593              	@ main.c:2595: 				RX1276_CS1 = 1;
 5594 0132 CBF80010 		str	r1, [fp]	@ tmp256, MEM[(volatile long unsigned int *)1109459344B]
 5595              	@ main.c:2597: 				UaPutK("\r\n BMP280T1 = 0x");	
 5596 0136 2B48     		ldr	r0, .L413+40	@,
 5597 0138 FFF7FEFF 		bl	UaPutK	@
 5598              	@ main.c:2574: 				dig_T1 = (u16)(((u16)(v1<<8)) | v0);
 5599 013c ADB2     		uxth	r5, r5	@ dig_T1, tmp235
 5600              	@ main.c:2598: 				hex2uart(ctrl_meas,2);
 5601 013e 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2	@, %sfp
 5602 0142 0221     		movs	r1, #2	@,
 5603 0144 FFF7FEFF 		bl	hex2uart	@
 5604              	@ main.c:2579: 				dig_T2 = (s16)((v1<<8) | v0);
 5605 0148 36B2     		sxth	r6, r6	@ dig_T2, tmp243
 5606              	@ main.c:2600: 				hex2uart(dig_T1,4);
 5607 014a 2846     		mov	r0, r5	@, dig_T1
 5608 014c 0421     		movs	r1, #4	@,
 5609 014e FFF7FEFF 		bl	hex2uart	@
 5610              	@ main.c:2584: 				dig_T3 = (s16)((v1<<8) | v0);
 5611 0152 24B2     		sxth	r4, r4	@ dig_T3, tmp251
 5612              	@ main.c:2601: 				hex2uart(dig_T2,4);
 5613 0154 3046     		mov	r0, r6	@, dig_T2
 5614 0156 0421     		movs	r1, #4	@,
 5615 0158 FFF7FEFF 		bl	hex2uart	@
 5616              	@ main.c:2602: 				hex2uart(dig_T3,4);
 5617 015c 0421     		movs	r1, #4	@,
 5618 015e 2046     		mov	r0, r4	@, dig_T3
 5619 0160 FFF7FEFF 		bl	hex2uart	@
 5620              	@ main.c:2609: 				adc = ( (u32)((u16)((value[0]) << 8) | value[1] ) << 4) | ( (value[2]) >> 4);
 5621 0164 029A     		ldr	r2, [sp, #8]	@ tmp253, %sfp
 5622 0166 3F02     		lsls	r7, r7, #8	@ tmp259, tmp252,
 5623 0168 BFB2     		uxth	r7, r7	@ tmp260, tmp259
 5624 016a D2B2     		uxtb	r2, r2	@ _37, tmp253
 5625 016c 3A43     		orrs	r2, r2, r7	@, tmp262, _37, tmp260
 5626 016e C8F30317 		ubfx	r7, r8, #4, #4	@ tmp266, tmp254,,
 5627 0172 47EA0217 		orr	r7, r7, r2, lsl #4	@ adc, tmp266, tmp262,
 5628              	@ main.c:2620: 				UaPutK(" T=");	
 5629 0176 1C48     		ldr	r0, .L413+44	@,
 5630 0178 FFF7FEFF 		bl	UaPutK	@
 5631              	@ main.c:2621: 				sint2uart(adc);
 5632 017c 3846     		mov	r0, r7	@, adc
 5633 017e FFF7FEFF 		bl	sint2uart	@
 5634              	@ main.c:2613:         var2 = (((((adc>>4) - ((s32)dig_T1)) * ((adc>>4) - ((s32)dig_T1))) >> 12)
 5635 0182 C5EB1718 		rsb	r8, r5, r7, lsr #4	@ _61, dig_T1, adc,
 5636              	@ main.c:2622: 				UaPutK(" ");	
 5637 0186 1948     		ldr	r0, .L413+48	@,
 5638 0188 FFF7FEFF 		bl	UaPutK	@
 5639              	@ main.c:2613:         var2 = (((((adc>>4) - ((s32)dig_T1)) * ((adc>>4) - ((s32)dig_T1))) >> 12)
 5640 018c 08FB08F0 		mul	r0, r8, r8	@ tmp275, _61, _61
 5641              	@ main.c:2612: 				var1 = ((((adc>>3) - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5642 0190 6D00     		lsls	r5, r5, #1	@ tmp271, dig_T1,
 5643              	@ main.c:2613:         var2 = (((((adc>>4) - ((s32)dig_T1)) * ((adc>>4) - ((s32)dig_T1))) >> 12)
ARM GAS  /tmp/ccDfNsWv.s 			page 100


 5644 0192 000B     		lsrs	r0, r0, #12	@ tmp276, tmp275,
 5645              	@ main.c:2612: 				var1 = ((((adc>>3) - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5646 0194 C5EBD705 		rsb	r5, r5, r7, lsr #3	@ tmp272, tmp271, adc,
 5647              	@ main.c:2614: 				* ((s32)dig_T3))>>14;
 5648 0198 04FB00F0 		mul	r0, r4, r0	@ tmp277, dig_T3, tmp276
 5649              	@ main.c:2612: 				var1 = ((((adc>>3) - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5650 019c 06FB05F5 		mul	r5, r6, r5	@ tmp273, dig_T2, tmp272
 5651              	@ main.c:2613:         var2 = (((((adc>>4) - ((s32)dig_T1)) * ((adc>>4) - ((s32)dig_T1))) >> 12)
 5652 01a0 800B     		lsrs	r0, r0, #14	@ var2, tmp277,
 5653              	@ main.c:2617:         tFine = var1 + var2;
 5654 01a2 00EBD520 		add	r0, r0, r5, lsr #11	@ tFine, var2, tmp273,
 5655              	@ main.c:2618: 				T     = (tFine * 5 + 128) >> 8;
 5656 01a6 00EB8000 		add	r0, r0, r0, lsl #2	@ tmp282, tFine, tFine,
 5657 01aa 8030     		adds	r0, r0, #128	@ tmp283, tmp282,
 5658              	@ main.c:2623: 				num2uart(T,5,3);
 5659 01ac 000A     		lsrs	r0, r0, #8	@, tmp283,
 5660 01ae 0322     		movs	r2, #3	@,
 5661 01b0 0521     		movs	r1, #5	@,
 5662 01b2 FFF7FEFF 		bl	num2uart	@
 5663 01b6 039B     		ldr	r3, [sp, #12]	@ tmp223, %sfp
 5664 01b8 66E7     		b	.L408	@
 5665              	.L414:
 5666 01ba 00BF     		.align	2
 5667              	.L413:
 5668 01bc 00080140 		.word	1073809408
 5669 01c0 00100240 		.word	1073876992
 5670 01c4 00300140 		.word	1073819648
 5671 01c8 10E000E0 		.word	-536813552
 5672 01cc 00000000 		.word	trg0
 5673 01d0 00000000 		.word	trg1
 5674 01d4 90012142 		.word	1109459344
 5675 01d8 00000000 		.word	delay_us
 5676 01dc 8F5F0100 		.word	89999
 5677 01e0 80A81201 		.word	18000000
 5678 01e4 00000000 		.word	.LC63
 5679 01e8 24000000 		.word	.LC60
 5680 01ec 28000000 		.word	.LC14
 5681 01f0 00000000 		.word	trg2
 5682              		.size	BMP280_spi, .-BMP280_spi
 5683              		.section	.text.fun_tool,"ax",%progbits
 5684              		.align	1
 5685              		.p2align 2,,3
 5686              		.global	fun_tool
 5687              		.syntax unified
 5688              		.thumb
 5689              		.thumb_func
 5690              		.fpu softvfp
 5691              		.type	fun_tool, %function
 5692              	fun_tool:
 5693              		@ args = 0, pretend = 0, frame = 528
 5694              		@ frame_needed = 0, uses_anonymous_args = 0
 5695 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 5696              	@ main.c:2640: 	switch(znak){
 5697 0004 6338     		subs	r0, r0, #99	@ tmp279, znak,
 5698              	@ main.c:2631: void fun_tool(u08 znak,T_SD1 * sda){
 5699 0006 ADF5057D 		sub	sp, sp, #532	@,,
 5700              	@ main.c:2640: 	switch(znak){
ARM GAS  /tmp/ccDfNsWv.s 			page 101


 5701 000a 1428     		cmp	r0, #20	@ tmp279,
 5702 000c 00F28880 		bhi	.L416	@
 5703 0010 DFE810F0 		tbh	[pc, r0, lsl #1]	@ tmp279
 5704              	.L418:
 5705 0014 B200     		.2byte	(.L417-.L418)/2
 5706 0016 8600     		.2byte	(.L416-.L418)/2
 5707 0018 8600     		.2byte	(.L416-.L418)/2
 5708 001a 8600     		.2byte	(.L416-.L418)/2
 5709 001c 8600     		.2byte	(.L416-.L418)/2
 5710 001e 8600     		.2byte	(.L416-.L418)/2
 5711 0020 8600     		.2byte	(.L416-.L418)/2
 5712 0022 8600     		.2byte	(.L416-.L418)/2
 5713 0024 8600     		.2byte	(.L416-.L418)/2
 5714 0026 8600     		.2byte	(.L416-.L418)/2
 5715 0028 BF00     		.2byte	(.L419-.L418)/2
 5716 002a 8600     		.2byte	(.L416-.L418)/2
 5717 002c 1500     		.2byte	(.L420-.L418)/2
 5718 002e 8600     		.2byte	(.L416-.L418)/2
 5719 0030 8600     		.2byte	(.L416-.L418)/2
 5720 0032 FF00     		.2byte	(.L421-.L418)/2
 5721 0034 8600     		.2byte	(.L416-.L418)/2
 5722 0036 8600     		.2byte	(.L416-.L418)/2
 5723 0038 5401     		.2byte	(.L422-.L418)/2
 5724 003a 8600     		.2byte	(.L416-.L418)/2
 5725 003c 8D00     		.2byte	(.L423-.L418)/2
 5726              		.p2align 1
 5727              	.L420:
 5728              	@ main.c:2752: 		UaPutK("Read sector");
 5729 003e B648     		ldr	r0, .L455	@,
 5730 0040 FFF7FEFF 		bl	UaPutK	@
 5731              	@ main.c:2753: 		UaPutK("\r\n sectorNumber = ");
 5732 0044 B548     		ldr	r0, .L455+4	@,
 5733 0046 FFF7FEFF 		bl	UaPutK	@
 5734              	@ main.c:2756: 		strBlock=UART_getNum();
 5735 004a FFF7FEFF 		bl	UART_getNum	@
 5736              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5737 004e B44C     		ldr	r4, .L455+8	@ tmp341,
 5738 0050 B44D     		ldr	r5, .L455+12	@ tmp342,
 5739 0052 A368     		ldr	r3, [r4, #8]	@ _169, MEM[(struct SysTick_Type *)3758153744B].VAL
 5740              	@ main.c:2759: 		sd_status=mci_read_sect (strBlock,buffer,1);
 5741 0054 0122     		movs	r2, #1	@,
 5742 0056 04A9     		add	r1, sp, #16	@ tmp393,,
 5743              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5744 0058 2B60     		str	r3, [r5]	@ _169, Timt
 5745              	@ main.c:2756: 		strBlock=UART_getNum();
 5746 005a 0746     		mov	r7, r0	@ strBlock,
 5747              	@ main.c:2759: 		sd_status=mci_read_sect (strBlock,buffer,1);
 5748 005c FFF7FEFF 		bl	mmc_read_sect	@
 5749              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5750 0060 2A68     		ldr	r2, [r5]	@ Timt.47_166, Timt
 5751 0062 A368     		ldr	r3, [r4, #8]	@ _167, MEM[(struct SysTick_Type *)3758153744B].VAL
 5752 0064 D31A     		subs	r3, r2, r3	@ _168, Timt.47_166, _167
 5753 0066 0193     		str	r3, [sp, #4]	@ _168, %sfp
 5754 0068 0393     		str	r3, [sp, #12]	@ _168, MEM[(volatile u32 *)&tim]
 5755              	@ main.c:2762: 		if(sd_status){
 5756 006a 0028     		cmp	r0, #0	@
 5757 006c 00F04F81 		beq	.L434	@
ARM GAS  /tmp/ccDfNsWv.s 			page 102


 5758              	@ main.c:2763: 			UaPutS("\r\n ");
 5759 0070 AD48     		ldr	r0, .L455+16	@,
 5760 0072 FFF7FEFF 		bl	UaPutS	@
 5761              	@ main.c:2765: 			hex2uart(strBlock, 8);
 5762 0076 0821     		movs	r1, #8	@,
 5763 0078 3846     		mov	r0, r7	@, strBlock
 5764 007a FFF7FEFF 		bl	hex2uart	@
 5765 007e 0024     		movs	r4, #0	@ ivtmp.528,
 5766              	.L435:
 5767              	@ main.c:2767: 				hex2uart(k, 2);
 5768 0080 2046     		mov	r0, r4	@, ivtmp.528
 5769 0082 0221     		movs	r1, #2	@,
 5770 0084 0134     		adds	r4, r4, #1	@ ivtmp.528, ivtmp.528,
 5771 0086 FFF7FEFF 		bl	hex2uart	@
 5772              	@ main.c:2766: 			for(u08 k=0;k<16;k++){
 5773 008a 102C     		cmp	r4, #16	@ ivtmp.528,
 5774 008c F8D1     		bne	.L435	@,
 5775              	@ main.c:2770: 			UaPutS("\r\n\n ");
 5776 008e A748     		ldr	r0, .L455+20	@,
 5777 0090 FFF7FEFF 		bl	UaPutS	@
 5778              	@ main.c:2772: 				hex2uart(strBlock*512 + i, 8);
 5779 0094 04AE     		add	r6, sp, #16	@ tmp396,,
 5780              	@ main.c:2776: 				UaPutS("  ");
 5781 0096 DFF8DC92 		ldr	r9, .L455+92	@ tmp378,
 5782              	@ main.c:2781: 				UaPutS("\r\n ");
 5783 009a DFF88C82 		ldr	r8, .L455+16	@ tmp379,
 5784 009e 0DF5047A 		add	r10, sp, #528	@ _54,,
 5785 00a2 C6EB4727 		rsb	r7, r6, r7, lsl #9	@ tmp371, tmp397, strBlock,
 5786 00a6 08AD     		add	r5, sp, #32	@ ivtmp.526,,
 5787              	.L440:
 5788              	@ main.c:2772: 				hex2uart(strBlock*512 + i, 8);
 5789 00a8 0821     		movs	r1, #8	@,
 5790 00aa B819     		adds	r0, r7, r6	@, tmp371, ivtmp.527
 5791 00ac FFF7FEFF 		bl	hex2uart	@
 5792 00b0 3446     		mov	r4, r6	@ ivtmp.518, ivtmp.527
 5793              	.L436:
 5794              	@ main.c:2774: 					hex2uart(buffer[k+i], 2);
 5795 00b2 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2	@, MEM[base: _181, offset: 0B]
 5796 00b6 0221     		movs	r1, #2	@,
 5797 00b8 FFF7FEFF 		bl	hex2uart	@
 5798              	@ main.c:2773: 				for(u08 k=0;k<16;k++){
 5799 00bc A542     		cmp	r5, r4	@ ivtmp.526, ivtmp.518
 5800 00be F8D1     		bne	.L436	@,
 5801              	@ main.c:2776: 				UaPutS("  ");
 5802 00c0 4846     		mov	r0, r9	@, tmp378
 5803 00c2 FFF7FEFF 		bl	UaPutS	@
 5804 00c6 B346     		mov	fp, r6	@ ivtmp.509, ivtmp.527
 5805              	.L439:
 5806              	@ main.c:2778: 					if ( buffer[k+i]<0x20 || buffer[k+i]>127 ) UaPutC('.');
 5807 00c8 1BF8010B 		ldrb	r0, [fp], #1	@ zero_extendqisi2	@ _39, MEM[base: _195, offset: 0B]
 5808 00cc A0F12002 		sub	r2, r0, #32	@ tmp355, _39,
 5809 00d0 5F2A     		cmp	r2, #95	@ tmp355,
 5810 00d2 88BF     		it	hi
 5811 00d4 2E20     		movhi	r0, #46	@,
 5812              	@ main.c:2779: 					else UaPutC(buffer[k+i]);
 5813 00d6 FFF7FEFF 		bl	UaPutC	@
 5814              	@ main.c:2777: 				for(u08 k=0;k<16;k++){
ARM GAS  /tmp/ccDfNsWv.s 			page 103


 5815 00da 5C45     		cmp	r4, fp	@ ivtmp.518, ivtmp.509
 5816 00dc F4D1     		bne	.L439	@,
 5817 00de 1036     		adds	r6, r6, #16	@ ivtmp.527, ivtmp.527,
 5818              	@ main.c:2781: 				UaPutS("\r\n ");
 5819 00e0 4046     		mov	r0, r8	@, tmp379
 5820 00e2 FFF7FEFF 		bl	UaPutS	@
 5821              	@ main.c:2771: 			for(u32 i=0;i<512;i+=16){
 5822 00e6 B245     		cmp	r10, r6	@ _54, ivtmp.527
 5823 00e8 05F11005 		add	r5, r5, #16	@ ivtmp.526, ivtmp.526,
 5824 00ec DCD1     		bne	.L440	@,
 5825              	@ main.c:2783: 			UaPutK(" t_rsdio = ");	uint2uart(tim/TIM_US);
 5826 00ee 9048     		ldr	r0, .L455+24	@,
 5827 00f0 FFF7FEFF 		bl	UaPutK	@
 5828 00f4 019B     		ldr	r3, [sp, #4]	@ _168, %sfp
 5829 00f6 8F48     		ldr	r0, .L455+28	@ tmp360,
 5830 00f8 A0FB0330 		umull	r3, r0, r0, r3	@ tmp390, tmp359, tmp360, _168
 5831 00fc 4008     		lsrs	r0, r0, #1	@, tmp359,
 5832 00fe FFF7FEFF 		bl	uint2uart	@
 5833              	@ main.c:2785: 			crc16_spi2( (u16*) buffer,256, &crc16 );
 5834 0102 4FF48071 		mov	r1, #256	@,
 5835 0106 04A8     		add	r0, sp, #16	@ tmp400,,
 5836 0108 0DF10A02 		add	r2, sp, #10	@ tmp401,,
 5837              	.L453:
 5838 010c FFF7FEFF 		bl	crc16_spi2	@
 5839              	@ main.c:2787: 			UaPutK(" crc = ");	hex2uart(crc16,4);
 5840 0110 8948     		ldr	r0, .L455+32	@,
 5841 0112 FFF7FEFF 		bl	UaPutK	@
 5842 0116 BDF80A00 		ldrh	r0, [sp, #10]	@, crc16
 5843 011a 0421     		movs	r1, #4	@,
 5844 011c FFF7FEFF 		bl	hex2uart	@
 5845              	.L416:
 5846              	@ main.c:2796: 	UaPutS("\r\n ");
 5847 0120 8148     		ldr	r0, .L455+16	@,
 5848 0122 FFF7FEFF 		bl	UaPutS	@
 5849              	@ main.c:2797: }
 5850 0126 0DF5057D 		add	sp, sp, #532	@,,
 5851              		@ sp needed	@
 5852 012a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 5853              	.L423:
 5854              	@ main.c:2691: 		UaPutK("\r\n Flash memory Page = ");
 5855 012e 8348     		ldr	r0, .L455+36	@,
 5856 0130 FFF7FEFF 		bl	UaPutK	@
 5857              	@ main.c:2692: 		strBlock = UART_getNum();
 5858 0134 FFF7FEFF 		bl	UART_getNum	@
 5859              	@ main.c:2693: 		strBlock = strBlock > 254 ? 254 : strBlock;
 5860 0138 FE28     		cmp	r0, #254	@,
 5861 013a 28BF     		it	cs
 5862 013c FE20     		movcs	r0, #254	@ strBlock,
 5863              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5864 013e 784D     		ldr	r5, .L455+8	@ tmp297,
 5865 0140 784C     		ldr	r4, .L455+12	@ tmp298,
 5866 0142 AB68     		ldr	r3, [r5, #8]	@ _161, MEM[(struct SysTick_Type *)3758153744B].VAL
 5867              	@ main.c:2694: 		strBlock = (u32)(0x800*strBlock + 0x08000000);
 5868 0144 00F58030 		add	r0, r0, #65536	@ _17, strBlock,
 5869              	@ main.c:2697: 		EraseFlashPage(strBlock);
 5870 0148 C002     		lsls	r0, r0, #11	@, _17,
 5871              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
ARM GAS  /tmp/ccDfNsWv.s 			page 104


 5872 014a 2360     		str	r3, [r4]	@ _161, Timt
 5873              	@ main.c:2697: 		EraseFlashPage(strBlock);
 5874 014c FFF7FEFF 		bl	EraseFlashPage	@
 5875              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5876 0150 2468     		ldr	r4, [r4]	@ Timt.47_158, Timt
 5877 0152 AB68     		ldr	r3, [r5, #8]	@ _159, MEM[(struct SysTick_Type *)3758153744B].VAL
 5878              	@ main.c:2699: 		UaPutS("\r\n Kasowanie pamieci FLASH = "); sint2uart(tim/TIM_US);
 5879 0154 7A48     		ldr	r0, .L455+40	@,
 5880              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5881 0156 E41A     		subs	r4, r4, r3	@ _160, Timt.47_158, _159
 5882 0158 0394     		str	r4, [sp, #12]	@ _160, MEM[(volatile u32 *)&tim]
 5883              	@ main.c:2699: 		UaPutS("\r\n Kasowanie pamieci FLASH = "); sint2uart(tim/TIM_US);
 5884 015a FFF7FEFF 		bl	UaPutS	@
 5885 015e 7548     		ldr	r0, .L455+28	@ tmp307,
 5886 0160 A0FB0430 		umull	r3, r0, r0, r4	@ tmp388, tmp306, tmp307, _160
 5887 0164 4008     		lsrs	r0, r0, #1	@, tmp306,
 5888 0166 FFF7FEFF 		bl	sint2uart	@
 5889              	@ main.c:2796: 	UaPutS("\r\n ");
 5890 016a 6F48     		ldr	r0, .L455+16	@,
 5891 016c FFF7FEFF 		bl	UaPutS	@
 5892              	@ main.c:2797: }
 5893 0170 0DF5057D 		add	sp, sp, #532	@,,
 5894              		@ sp needed	@
 5895 0174 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 5896              	.L417:
 5897              	@ main.c:2746: 		TFT_Clear(BLACK);
 5898 0178 0020     		movs	r0, #0	@,
 5899 017a FFF7FEFF 		bl	TFT_Clear	@
 5900              	@ main.c:2748: 		UaPutS("\r\n Clear !");
 5901 017e 7148     		ldr	r0, .L455+44	@,
 5902 0180 FFF7FEFF 		bl	UaPutS	@
 5903              	@ main.c:2796: 	UaPutS("\r\n ");
 5904 0184 6848     		ldr	r0, .L455+16	@,
 5905 0186 FFF7FEFF 		bl	UaPutS	@
 5906              	@ main.c:2797: }
 5907 018a 0DF5057D 		add	sp, sp, #532	@,,
 5908              		@ sp needed	@
 5909 018e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 5910              	.L419:
 5911              	@ main.c:2732: 		UaPutS("\r\n Read Start !");
 5912 0192 6D48     		ldr	r0, .L455+48	@,
 5913 0194 FFF7FEFF 		bl	UaPutS	@
 5914 0198 0025     		movs	r5, #0	@ ivtmp.499,
 5915 019a DFF88891 		ldr	r9, .L455+12	@ tmp370,
 5916              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5917 019e 604E     		ldr	r6, .L455+8	@ tmp325,
 5918              	@ main.c:2737: 			tim = tim/TIM_US;
 5919 01a0 644F     		ldr	r7, .L455+28	@ tmp332,
 5920              	@ main.c:2740: 			if(tim>1000 || tim<700){ UaPutK("\r\n"); int2uart(n,7,0); int2uart(tim,6,3); }
 5921 01a2 DFF8D481 		ldr	r8, .L455+96	@ tmp374,
 5922 01a6 05E0     		b	.L441	@
 5923              	.L430:
 5924 01a8 BAF5967F 		cmp	r10, #300	@ _56,
 5925 01ac 18D8     		bhi	.L433	@,
 5926              	@ main.c:2733: 		for(u32 n=0;n<125;n++){
 5927 01ae 7C2D     		cmp	r5, #124	@ ivtmp.499,
 5928 01b0 25D0     		beq	.L454	@,
ARM GAS  /tmp/ccDfNsWv.s 			page 105


 5929              	.L431:
 5930 01b2 0135     		adds	r5, r5, #1	@ ivtmp.499, ivtmp.499,
 5931              	.L441:
 5932              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5933 01b4 B368     		ldr	r3, [r6, #8]	@ _165, MEM[(struct SysTick_Type *)3758153744B].VAL
 5934 01b6 C9F80030 		str	r3, [r9]	@ _165, Timt
 5935              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5936 01ba D9F80030 		ldr	r3, [r9]	@ Timt.47_162, Timt
 5937 01be B268     		ldr	r2, [r6, #8]	@ _163, MEM[(struct SysTick_Type *)3758153744B].VAL
 5938 01c0 9B1A     		subs	r3, r3, r2	@ _164, Timt.47_162, _163
 5939              	@ main.c:2737: 			tim = tim/TIM_US;
 5940 01c2 A7FB0324 		umull	r2, r4, r7, r3	@ tmp389, tmp331, tmp332, _164
 5941 01c6 6408     		lsrs	r4, r4, #1	@ _24, tmp331,
 5942              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5943 01c8 0393     		str	r3, [sp, #12]	@ _164, MEM[(volatile u32 *)&tim]
 5944 01ca A4F52F7A 		sub	r10, r4, #700	@ _56, _24,
 5945              	@ main.c:2737: 			tim = tim/TIM_US;
 5946 01ce 0394     		str	r4, [sp, #12]	@ _24, tim
 5947              	@ main.c:2739: 			if(n%1000==0) UaPutK(".");
 5948 01d0 002D     		cmp	r5, #0	@ ivtmp.499
 5949 01d2 E9D1     		bne	.L430	@
 5950              	@ main.c:2739: 			if(n%1000==0) UaPutK(".");
 5951 01d4 5D48     		ldr	r0, .L455+52	@,
 5952 01d6 FFF7FEFF 		bl	UaPutK	@
 5953              	@ main.c:2740: 			if(tim>1000 || tim<700){ UaPutK("\r\n"); int2uart(n,7,0); int2uart(tim,6,3); }
 5954 01da BAF5967F 		cmp	r10, #300	@ _56,
 5955 01de E8D9     		bls	.L431	@,
 5956              	.L433:
 5957              	@ main.c:2740: 			if(tim>1000 || tim<700){ UaPutK("\r\n"); int2uart(n,7,0); int2uart(tim,6,3); }
 5958 01e0 4046     		mov	r0, r8	@, tmp374
 5959 01e2 FFF7FEFF 		bl	UaPutK	@
 5960 01e6 0022     		movs	r2, #0	@,
 5961 01e8 0721     		movs	r1, #7	@,
 5962 01ea 2846     		mov	r0, r5	@, ivtmp.499
 5963 01ec FFF7FEFF 		bl	int2uart	@
 5964 01f0 2046     		mov	r0, r4	@, _24
 5965 01f2 0322     		movs	r2, #3	@,
 5966 01f4 0621     		movs	r1, #6	@,
 5967 01f6 FFF7FEFF 		bl	int2uart	@
 5968              	@ main.c:2733: 		for(u32 n=0;n<125;n++){
 5969 01fa 7C2D     		cmp	r5, #124	@ ivtmp.499,
 5970 01fc D9D1     		bne	.L431	@,
 5971              	.L454:
 5972              	@ main.c:2742: 		UaPutS("\r\n Read Done !");
 5973 01fe 5448     		ldr	r0, .L455+56	@,
 5974 0200 FFF7FEFF 		bl	UaPutS	@
 5975              	@ main.c:2796: 	UaPutS("\r\n ");
 5976 0204 4848     		ldr	r0, .L455+16	@,
 5977 0206 FFF7FEFF 		bl	UaPutS	@
 5978              	@ main.c:2797: }
 5979 020a 0DF5057D 		add	sp, sp, #532	@,,
 5980              		@ sp needed	@
 5981 020e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 5982              	.L421:
 5983              	@ main.c:2643: 		UaPutK("\r\n FLASH memory Read = ");
 5984 0212 5048     		ldr	r0, .L455+60	@,
 5985 0214 FFF7FEFF 		bl	UaPutK	@
ARM GAS  /tmp/ccDfNsWv.s 			page 106


 5986              	@ main.c:2644: 		UaPutK("\r\n FLASH memory Read = ");
 5987 0218 4E48     		ldr	r0, .L455+60	@,
 5988 021a FFF7FEFF 		bl	UaPutK	@
 5989              	@ main.c:2646: 		strBlock = UART_getNum();
 5990 021e FFF7FEFF 		bl	UART_getNum	@
 5991              	@ main.c:2649: 		strBlock = strBlock > 254 ? 254 : strBlock;
 5992 0222 FE28     		cmp	r0, #254	@ tmp391,
 5993 0224 28BF     		it	cs
 5994 0226 FE20     		movcs	r0, #254	@ tmp391,
 5995 0228 0446     		mov	r4, r0	@ strBlock, tmp391
 5996              	@ main.c:2650: 		UaPutK("\r\n Flash memory Page ="); sint2uart(strBlock);
 5997 022a 4B48     		ldr	r0, .L455+64	@,
 5998 022c FFF7FEFF 		bl	UaPutK	@
 5999 0230 2046     		mov	r0, r4	@, strBlock
 6000              	@ main.c:2651: 		strBlock = 0x800*strBlock + 0x08000000;
 6001 0232 04F58034 		add	r4, r4, #65536	@ _2, strBlock,
 6002              	@ main.c:2650: 		UaPutK("\r\n Flash memory Page ="); sint2uart(strBlock);
 6003 0236 FFF7FEFF 		bl	sint2uart	@
 6004              	@ main.c:2651: 		strBlock = 0x800*strBlock + 0x08000000;
 6005 023a E402     		lsls	r4, r4, #11	@ ivtmp.554, _2,
 6006              	@ main.c:2659: 			UaPutS("\r\n ");
 6007 023c 3A48     		ldr	r0, .L455+16	@,
 6008 023e FFF7FEFF 		bl	UaPutS	@
 6009              	@ main.c:2661: 			hex2uart(strBlock, 8);
 6010 0242 2046     		mov	r0, r4	@, ivtmp.554
 6011 0244 0821     		movs	r1, #8	@,
 6012 0246 FFF7FEFF 		bl	hex2uart	@
 6013              	@ main.c:2656: 		p_buf = (u08 *) strBlock;
 6014 024a A346     		mov	fp, r4	@ p_buf, ivtmp.554
 6015              	@ main.c:2661: 			hex2uart(strBlock, 8);
 6016 024c 0025     		movs	r5, #0	@ ivtmp.556,
 6017              	.L424:
 6018              	@ main.c:2663: 				hex2uart(k, 2);
 6019 024e 2846     		mov	r0, r5	@, ivtmp.556
 6020 0250 0221     		movs	r1, #2	@,
 6021 0252 0135     		adds	r5, r5, #1	@ ivtmp.556, ivtmp.556,
 6022 0254 FFF7FEFF 		bl	hex2uart	@
 6023              	@ main.c:2662: 			for(u08 k=0;k<16;k++){
 6024 0258 102D     		cmp	r5, #16	@ ivtmp.556,
 6025 025a F8D1     		bne	.L424	@,
 6026              	@ main.c:2666: 			UaPutS("\r\n\n ");
 6027 025c 3348     		ldr	r0, .L455+20	@,
 6028 025e 04F12007 		add	r7, r4, #32	@ ivtmp.554, ivtmp.554,
 6029 0262 FFF7FEFF 		bl	UaPutS	@
 6030 0266 3E46     		mov	r6, r7	@ ivtmp.555, ivtmp.554
 6031              	@ main.c:2673: 				UaPutS("  ");
 6032 0268 DFF808A1 		ldr	r10, .L455+92	@ tmp384,
 6033              	@ main.c:2678: 				UaPutS("\r\n ");
 6034 026c DFF8B890 		ldr	r9, .L455+16	@ tmp385,
 6035 0270 04F50068 		add	r8, r4, #2048	@ _241, ivtmp.554,
 6036              	.L429:
 6037              	@ main.c:2669: 				hex2uart(strBlock + i, 8);	// memory
 6038 0274 0821     		movs	r1, #8	@,
 6039 0276 2046     		mov	r0, r4	@, ivtmp.554
 6040 0278 FFF7FEFF 		bl	hex2uart	@
 6041 027c 2546     		mov	r5, r4	@ ivtmp.547, ivtmp.554
 6042              	.L425:
ARM GAS  /tmp/ccDfNsWv.s 			page 107


 6043              	@ main.c:2671: 					hex2uart(p_buf[k+i], 2);
 6044 027e 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2	@, *_7
 6045 0282 0221     		movs	r1, #2	@,
 6046 0284 FFF7FEFF 		bl	hex2uart	@
 6047              	@ main.c:2670: 				for(u08 k=0;k<32;k++){
 6048 0288 B542     		cmp	r5, r6	@ ivtmp.547, ivtmp.555
 6049 028a F8D1     		bne	.L425	@,
 6050              	@ main.c:2673: 				UaPutS("  ");
 6051 028c 5046     		mov	r0, r10	@, tmp384
 6052 028e FFF7FEFF 		bl	UaPutS	@
 6053              	.L428:
 6054              	@ main.c:2675: 					if ( p_buf[k+i]<0x20 || p_buf[k+i]>127 ) UaPutC('.');
 6055 0292 2078     		ldrb	r0, [r4]	@ zero_extendqisi2	@ _13, *_12
 6056 0294 0134     		adds	r4, r4, #1	@ ivtmp.540, ivtmp.540,
 6057 0296 A0F12003 		sub	r3, r0, #32	@ tmp288, _13,
 6058 029a 5F2B     		cmp	r3, #95	@ tmp288,
 6059 029c 88BF     		it	hi
 6060 029e 2E20     		movhi	r0, #46	@,
 6061              	@ main.c:2676: 					else UaPutC(p_buf[k+i]);
 6062 02a0 FFF7FEFF 		bl	UaPutC	@
 6063              	@ main.c:2674: 				for(u08 k=0;k<32;k++){
 6064 02a4 AC42     		cmp	r4, r5	@ ivtmp.540, ivtmp.547
 6065 02a6 F4D1     		bne	.L428	@,
 6066              	@ main.c:2678: 				UaPutS("\r\n ");
 6067 02a8 4846     		mov	r0, r9	@, tmp385
 6068 02aa FFF7FEFF 		bl	UaPutS	@
 6069              	@ main.c:2667: 			for(u32 i=0;i<2048;i+=32){
 6070 02ae 4745     		cmp	r7, r8	@ ivtmp.554, _241
 6071 02b0 06F12006 		add	r6, r6, #32	@ ivtmp.555, ivtmp.555,
 6072 02b4 3C46     		mov	r4, r7	@ ivtmp.554, ivtmp.554
 6073 02b6 24D0     		beq	.L450	@,
 6074 02b8 2037     		adds	r7, r7, #32	@ ivtmp.554, ivtmp.554,
 6075 02ba DBE7     		b	.L429	@
 6076              	.L422:
 6077              	@ main.c:2710: 		UaPutK("\r\n Godzina = ");
 6078 02bc 2748     		ldr	r0, .L455+68	@,
 6079 02be FFF7FEFF 		bl	UaPutK	@
 6080              	@ main.c:2711: 		datetime.hor = UART_getNum();
 6081 02c2 FFF7FEFF 		bl	UART_getNum	@
 6082 02c6 264C     		ldr	r4, .L455+72	@ tmp309,
 6083 02c8 A070     		strb	r0, [r4, #2]	@, datetime.hor
 6084              	@ main.c:2712: 		UaPutK("\r\n Minut   = ");
 6085 02ca 2648     		ldr	r0, .L455+76	@,
 6086 02cc FFF7FEFF 		bl	UaPutK	@
 6087              	@ main.c:2713: 		datetime.min = UART_getNum();
 6088 02d0 FFF7FEFF 		bl	UART_getNum	@
 6089 02d4 6070     		strb	r0, [r4, #1]	@, datetime.min
 6090              	@ main.c:2714: 		UaPutK("\r\n Sekunda = ");
 6091 02d6 2448     		ldr	r0, .L455+80	@,
 6092 02d8 FFF7FEFF 		bl	UaPutK	@
 6093              	@ main.c:2715: 		datetime.sec = UART_getNum();
 6094 02dc FFF7FEFF 		bl	UART_getNum	@
 6095              	@ main.c:2719: 		datetime.mdy=18;		// 1..31	dzien miesiaca
 6096 02e0 0B23     		movs	r3, #11	@ tmp321,
 6097              	@ main.c:2717: 		datetime.yer=2016;	// 1970..2106
 6098 02e2 4FF4FC61 		mov	r1, #2016	@ tmp317,
 6099              	@ main.c:2722: 		datetime.sec=30;		// 0..59	sekunda
ARM GAS  /tmp/ccDfNsWv.s 			page 108


 6100 02e6 214A     		ldr	r2, .L455+84	@ tmp319,
 6101              	@ main.c:2723: 		rtc_SetTime(&datetime );
 6102 02e8 2046     		mov	r0, r4	@, tmp309
 6103              	@ main.c:2722: 		datetime.sec=30;		// 0..59	sekunda
 6104 02ea 2260     		str	r2, [r4]	@ tmp319, MEM[(unsigned char *)&datetime]
 6105              	@ main.c:2719: 		datetime.mdy=18;		// 1..31	dzien miesiaca
 6106 02ec 2371     		strb	r3, [r4, #4]	@ tmp321, MEM[(unsigned char *)&datetime + 4B]
 6107              	@ main.c:2717: 		datetime.yer=2016;	// 1970..2106
 6108 02ee E180     		strh	r1, [r4, #6]	@ movhi	@ tmp317, datetime.yer
 6109              	@ main.c:2723: 		rtc_SetTime(&datetime );
 6110 02f0 FFF7FEFF 		bl	rtc_SetTime	@
 6111              	@ main.c:2796: 	UaPutS("\r\n ");
 6112 02f4 0C48     		ldr	r0, .L455+16	@,
 6113 02f6 FFF7FEFF 		bl	UaPutS	@
 6114              	@ main.c:2797: }
 6115 02fa 0DF5057D 		add	sp, sp, #532	@,,
 6116              		@ sp needed	@
 6117 02fe BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 6118              	.L450:
 6119              	@ main.c:2683: 			crc16_spi2((u16*)p_buf,2048, &crc16 );
 6120 0302 5846     		mov	r0, fp	@, p_buf
 6121 0304 0DF10A02 		add	r2, sp, #10	@ tmp392,,
 6122 0308 4FF40061 		mov	r1, #2048	@,
 6123 030c FEE6     		b	.L453	@
 6124              	.L434:
 6125              	@ main.c:2790: 		} else UaPutK("\r\n Read Error !!!");
 6126 030e 1848     		ldr	r0, .L455+88	@,
 6127 0310 FFF7FEFF 		bl	UaPutK	@
 6128 0314 04E7     		b	.L416	@
 6129              	.L456:
 6130 0316 00BF     		.align	2
 6131              	.L455:
 6132 0318 E0000000 		.word	.LC79
 6133 031c EC000000 		.word	.LC80
 6134 0320 10E000E0 		.word	-536813552
 6135 0324 00000000 		.word	Timt
 6136 0328 30000000 		.word	.LC66
 6137 032c 34000000 		.word	.LC67
 6138 0330 00010000 		.word	.LC81
 6139 0334 398EE338 		.word	954437177
 6140 0338 40000000 		.word	.LC69
 6141 033c 48000000 		.word	.LC70
 6142 0340 60000000 		.word	.LC71
 6143 0344 D4000000 		.word	.LC78
 6144 0348 B0000000 		.word	.LC75
 6145 034c C0000000 		.word	.LC76
 6146 0350 C4000000 		.word	.LC77
 6147 0354 00000000 		.word	.LC64
 6148 0358 18000000 		.word	.LC65
 6149 035c 80000000 		.word	.LC72
 6150 0360 00000000 		.word	.LANCHOR19
 6151 0364 90000000 		.word	.LC73
 6152 0368 A0000000 		.word	.LC74
 6153 036c 1E320A12 		.word	302658078
 6154 0370 0C010000 		.word	.LC82
 6155 0374 3C000000 		.word	.LC68
 6156 0378 40000000 		.word	.LC18
ARM GAS  /tmp/ccDfNsWv.s 			page 109


 6157              		.size	fun_tool, .-fun_tool
 6158              		.section	.text.qtouch_mesaure,"ax",%progbits
 6159              		.align	1
 6160              		.p2align 2,,3
 6161              		.global	qtouch_mesaure
 6162              		.syntax unified
 6163              		.thumb
 6164              		.thumb_func
 6165              		.fpu softvfp
 6166              		.type	qtouch_mesaure, %function
 6167              	qtouch_mesaure:
 6168              		@ args = 0, pretend = 0, frame = 0
 6169              		@ frame_needed = 0, uses_anonymous_args = 0
 6170              		@ link register save eliminated.
 6171              	@ main.c:3141: 		PE2_o = 0;
 6172 0000 0021     		movs	r1, #0	@ tmp118,
 6173 0002 0E4B     		ldr	r3, .L466	@ tmp117,
 6174              	@ main.c:3142: 		while(PE4_i == 1);
 6175 0004 0E4A     		ldr	r2, .L466+4	@ tmp119,
 6176              	@ main.c:3141: 		PE2_o = 0;
 6177 0006 1960     		str	r1, [r3]	@ tmp118, MEM[(volatile long unsigned int *)1109590408B]
 6178              	.L458:
 6179              	@ main.c:3142: 		while(PE4_i == 1);
 6180 0008 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109590288B]
 6181 000a 012B     		cmp	r3, #1	@ _1,
 6182 000c FCD0     		beq	.L458	@,
 6183              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 6184 000e 0D4B     		ldr	r3, .L466+8	@ tmp120,
 6185 0010 0D49     		ldr	r1, .L466+12	@ tmp131,
 6186              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 6187 0012 1846     		mov	r0, r3	@ tmp123, tmp120
 6188              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 6189 0014 9B68     		ldr	r3, [r3, #8]	@ _10, MEM[(struct SysTick_Type *)3758153744B].VAL
 6190 0016 0B60     		str	r3, [r1]	@ _10, delay_us
 6191              	.L459:
 6192              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 6193 0018 0B68     		ldr	r3, [r1]	@ delay_us.48_11, delay_us
 6194 001a 8268     		ldr	r2, [r0, #8]	@ _12, MEM[(struct SysTick_Type *)3758153744B].VAL
 6195 001c 9B1A     		subs	r3, r3, r2	@ tmp124, delay_us.48_11, _12
 6196 001e 112B     		cmp	r3, #17	@ tmp124,
 6197 0020 FAD9     		bls	.L459	@,
 6198              	@ main.c:3144: 		PE2_o = 1;
 6199 0022 0121     		movs	r1, #1	@ tmp126,
 6200              	@ main.c:3140: 		u32 i=0;
 6201 0024 0020     		movs	r0, #0	@ <retval>,
 6202              	@ main.c:3144: 		PE2_o = 1;
 6203 0026 054B     		ldr	r3, .L466	@ tmp125,
 6204              	@ main.c:3145: 		do{i++;} while (PE4_i == 0);
 6205 0028 054A     		ldr	r2, .L466+4	@ tmp127,
 6206              	@ main.c:3144: 		PE2_o = 1;
 6207 002a 1960     		str	r1, [r3]	@ tmp126, MEM[(volatile long unsigned int *)1109590408B]
 6208              	.L460:
 6209              	@ main.c:3145: 		do{i++;} while (PE4_i == 0);
 6210 002c 1368     		ldr	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109590288B]
 6211 002e 0130     		adds	r0, r0, #1	@ <retval>, <retval>,
 6212 0030 002B     		cmp	r3, #0	@ _2
 6213 0032 FBD0     		beq	.L460	@
ARM GAS  /tmp/ccDfNsWv.s 			page 110


 6214              	@ main.c:3146: 		PE2_o = 0;
 6215 0034 0022     		movs	r2, #0	@ tmp129,
 6216 0036 014B     		ldr	r3, .L466	@ tmp128,
 6217 0038 1A60     		str	r2, [r3]	@ tmp129, MEM[(volatile long unsigned int *)1109590408B]
 6218              	@ main.c:3148: 	}
 6219 003a 7047     		bx	lr	@
 6220              	.L467:
 6221              		.align	2
 6222              	.L466:
 6223 003c 88012342 		.word	1109590408
 6224 0040 10012342 		.word	1109590288
 6225 0044 10E000E0 		.word	-536813552
 6226 0048 00000000 		.word	delay_us
 6227              		.size	qtouch_mesaure, .-qtouch_mesaure
 6228              		.section	.text.qtouch,"ax",%progbits
 6229              		.align	1
 6230              		.p2align 2,,3
 6231              		.global	qtouch
 6232              		.syntax unified
 6233              		.thumb
 6234              		.thumb_func
 6235              		.fpu softvfp
 6236              		.type	qtouch, %function
 6237              	qtouch:
 6238              		@ args = 0, pretend = 0, frame = 0
 6239              		@ frame_needed = 0, uses_anonymous_args = 0
 6240              	@ main.c:3151: 		GPIOE->CRL = (GPIOE->CRL & 0xfff0f0ff) | 0x00040300;	
 6241 0000 114A     		ldr	r2, .L473	@ tmp119,
 6242              	@ main.c:3149: void qtouch(void)					{
 6243 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 6244              	@ main.c:3151: 		GPIOE->CRL = (GPIOE->CRL & 0xfff0f0ff) | 0x00040300;	
 6245 0006 1368     		ldr	r3, [r2]	@ _1, MEM[(struct GPIO_TypeDef *)1073813504B].CRL
 6246 0008 104D     		ldr	r5, .L473+4	@ tmp131,
 6247 000a 23F47023 		bic	r3, r3, #983040	@ tmp120, _1,
 6248 000e 23F47063 		bic	r3, r3, #3840	@ tmp120, tmp120,
 6249 0012 43F48023 		orr	r3, r3, #262144	@ _3, tmp120,
 6250 0016 43F44073 		orr	r3, r3, #768	@ _3, _3,
 6251              	@ main.c:3153: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL) ){
 6252 001a 0D4C     		ldr	r4, .L473+8	@ tmp125,
 6253 001c 0D4E     		ldr	r6, .L473+12	@ tmp127,
 6254              	@ main.c:3156: 				UaPutS("\r\n QT =");		sint2uart(qt);
 6255 001e DFF83880 		ldr	r8, .L473+16	@ tmp132,
 6256              	@ main.c:3151: 		GPIOE->CRL = (GPIOE->CRL & 0xfff0f0ff) | 0x00040300;	
 6257 0022 1360     		str	r3, [r2]	@ _3, MEM[(struct GPIO_TypeDef *)1073813504B].CRL
 6258              	.L469:
 6259              	@ main.c:3153: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL) ){
 6260 0024 2B68     		ldr	r3, [r5]	@ trg0.172_4, trg0
 6261 0026 A268     		ldr	r2, [r4, #8]	@ _5, MEM[(struct SysTick_Type *)3758153744B].VAL
 6262 0028 9B1A     		subs	r3, r3, r2	@ tmp126, trg0.172_4, _5
 6263 002a B342     		cmp	r3, r6	@ tmp126, tmp127
 6264 002c FAD9     		bls	.L469	@,
 6265              	@ main.c:3154: 				trg0 = SysTick->VAL;
 6266 002e A368     		ldr	r3, [r4, #8]	@ _7, MEM[(struct SysTick_Type *)3758153744B].VAL
 6267 0030 2B60     		str	r3, [r5]	@ _7, trg0
 6268              	@ main.c:3155: 				qt = qtouch_mesaure();
 6269 0032 FFF7FEFF 		bl	qtouch_mesaure	@
 6270 0036 0746     		mov	r7, r0	@ qt,
ARM GAS  /tmp/ccDfNsWv.s 			page 111


 6271              	@ main.c:3156: 				UaPutS("\r\n QT =");		sint2uart(qt);
 6272 0038 4046     		mov	r0, r8	@, tmp132
 6273 003a FFF7FEFF 		bl	UaPutS	@
 6274 003e 3846     		mov	r0, r7	@, qt
 6275 0040 FFF7FEFF 		bl	sint2uart	@
 6276 0044 EEE7     		b	.L469	@
 6277              	.L474:
 6278 0046 00BF     		.align	2
 6279              	.L473:
 6280 0048 00180140 		.word	1073813504
 6281 004c 00000000 		.word	trg0
 6282 0050 10E000E0 		.word	-536813552
 6283 0054 20AA4400 		.word	4500000
 6284 0058 00000000 		.word	.LC83
 6285              		.size	qtouch, .-qtouch
 6286              		.section	.text.DHT_Tool,"ax",%progbits
 6287              		.align	1
 6288              		.p2align 2,,3
 6289              		.global	DHT_Tool
 6290              		.syntax unified
 6291              		.thumb
 6292              		.thumb_func
 6293              		.fpu softvfp
 6294              		.type	DHT_Tool, %function
 6295              	DHT_Tool:
 6296              		@ args = 0, pretend = 0, frame = 0
 6297              		@ frame_needed = 0, uses_anonymous_args = 0
 6298              		@ link register save eliminated.
 6299              	@ main.c:3350: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6300 0000 0A49     		ldr	r1, .L476	@ tmp116,
 6301              	@ main.c:3351: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 6302 0002 0B4A     		ldr	r2, .L476+4	@ tmp121,
 6303              	@ main.c:3350: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6304 0004 4B68     		ldr	r3, [r1, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 6305              	@ main.c:3354: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 6306 0006 0B48     		ldr	r0, .L476+8	@ tmp124,
 6307              	@ main.c:3350: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6308 0008 23F0F023 		bic	r3, r3, #-268374016	@ tmp117, _1,
 6309 000c 23F47023 		bic	r3, r3, #983040	@ tmp117, tmp117,
 6310 0010 43F01023 		orr	r3, r3, #268439552	@ _3, tmp117,
 6311 0014 43F48033 		orr	r3, r3, #65536	@ _3, _3,
 6312 0018 4B60     		str	r3, [r1, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 6313              	@ main.c:3351: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 6314 001a 1368     		ldr	r3, [r2]	@ _4, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 6315              	@ main.c:3354: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 6316 001c 0649     		ldr	r1, .L476+12	@ tmp125,
 6317              	@ main.c:3351: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 6318 001e 23F47F23 		bic	r3, r3, #1044480	@ tmp122, _4,
 6319 0022 43F48833 		orr	r3, r3, #69632	@ _6, tmp122,
 6320 0026 1360     		str	r3, [r2]	@ _6, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 6321              	@ main.c:3354: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 6322 0028 0160     		str	r1, [r0]	@ tmp125, oled_hw.mosi
 6323              	@ main.c:3356: }
 6324 002a 7047     		bx	lr	@
 6325              	.L477:
 6326              		.align	2
 6327              	.L476:
ARM GAS  /tmp/ccDfNsWv.s 			page 112


 6328 002c 00080140 		.word	1073809408
 6329 0030 000C0140 		.word	1073810432
 6330 0034 00000000 		.word	oled_hw
 6331 0038 8C812142 		.word	1109492108
 6332              		.size	DHT_Tool, .-DHT_Tool
 6333              		.section	.text.SPI_Tool_Menu,"ax",%progbits
 6334              		.align	1
 6335              		.p2align 2,,3
 6336              		.global	SPI_Tool_Menu
 6337              		.syntax unified
 6338              		.thumb
 6339              		.thumb_func
 6340              		.fpu softvfp
 6341              		.type	SPI_Tool_Menu, %function
 6342              	SPI_Tool_Menu:
 6343              		@ args = 0, pretend = 0, frame = 0
 6344              		@ frame_needed = 0, uses_anonymous_args = 0
 6345 0000 08B5     		push	{r3, lr}	@
 6346              	@ main.c:3358: 	UaPutK("\n\r\n======= STM32F1 SPI TOOL =========================\r\n");
 6347 0002 0848     		ldr	r0, .L480	@,
 6348 0004 FFF7FEFF 		bl	UaPutK	@
 6349              	@ main.c:3359: 	UaPutK(" i - Init      r - Read  sector  e -                \r\n");
 6350 0008 0748     		ldr	r0, .L480+4	@,
 6351 000a FFF7FEFF 		bl	UaPutK	@
 6352              	@ main.c:3360: 	UaPutK(" d - Delete    f - Write sector  s -                \r\n");
 6353 000e 0748     		ldr	r0, .L480+8	@,
 6354 0010 FFF7FEFF 		bl	UaPutK	@
 6355              	@ main.c:3361: 	UaPutK(" m - Modf      c - Copy  sector  n -               \r\n");
 6356 0014 0648     		ldr	r0, .L480+12	@,
 6357 0016 FFF7FEFF 		bl	UaPutK	@
 6358              	@ main.c:3363: }
 6359 001a BDE80840 		pop	{r3, lr}	@
 6360              	@ main.c:3362: 	UaPutK("==================================================\r\n > ");
 6361 001e 0548     		ldr	r0, .L480+16	@,
 6362 0020 FFF7FEBF 		b	UaPutK	@
 6363              	.L481:
 6364              		.align	2
 6365              	.L480:
 6366 0024 00000000 		.word	.LC84
 6367 0028 38000000 		.word	.LC85
 6368 002c 70000000 		.word	.LC86
 6369 0030 A8000000 		.word	.LC87
 6370 0034 94000000 		.word	.LC34
 6371              		.size	SPI_Tool_Menu, .-SPI_Tool_Menu
 6372              		.section	.text.SPI_Tool,"ax",%progbits
 6373              		.align	1
 6374              		.p2align 2,,3
 6375              		.global	SPI_Tool
 6376              		.syntax unified
 6377              		.thumb
 6378              		.thumb_func
 6379              		.fpu softvfp
 6380              		.type	SPI_Tool, %function
 6381              	SPI_Tool:
 6382              		@ args = 0, pretend = 0, frame = 16
 6383              		@ frame_needed = 0, uses_anonymous_args = 0
 6384              	@ main.c:3371: 	LED=1;
ARM GAS  /tmp/ccDfNsWv.s 			page 113


 6385 0000 0122     		movs	r2, #1	@ tmp125,
 6386 0002 444B     		ldr	r3, .L495	@ tmp124,
 6387              	@ main.c:3373: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6388 0004 4449     		ldr	r1, .L495+4	@ tmp126,
 6389              	@ main.c:3364: void SPI_Tool(void)				{
 6390 0006 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 6391              	@ main.c:3371: 	LED=1;
 6392 000a 1A60     		str	r2, [r3]	@ tmp125, MEM[(volatile long unsigned int *)1109524916B]
 6393              	@ main.c:3373: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6394 000c 4B68     		ldr	r3, [r1, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 6395              	@ main.c:3374: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 6396 000e 434A     		ldr	r2, .L495+8	@ tmp131,
 6397              	@ main.c:3373: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6398 0010 23F0F023 		bic	r3, r3, #-268374016	@ tmp127, _1,
 6399 0014 23F47023 		bic	r3, r3, #983040	@ tmp127, tmp127,
 6400 0018 43F01023 		orr	r3, r3, #268439552	@ _3, tmp127,
 6401 001c 43F48033 		orr	r3, r3, #65536	@ _3, _3,
 6402 0020 4B60     		str	r3, [r1, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 6403              	@ main.c:3374: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 6404 0022 1368     		ldr	r3, [r2]	@ _4, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 6405              	@ main.c:3376: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 6406 0024 3E48     		ldr	r0, .L495+12	@ tmp134,
 6407              	@ main.c:3374: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 6408 0026 23F47F23 		bic	r3, r3, #1044480	@ tmp132, _4,
 6409 002a 43F48833 		orr	r3, r3, #69632	@ _6, tmp132,
 6410 002e 1360     		str	r3, [r2]	@ _6, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 6411              	@ main.c:3376: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 6412 0030 3C4E     		ldr	r6, .L495+16	@ tmp135,
 6413              	@ main.c:3377: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 6414 0032 3D49     		ldr	r1, .L495+20	@ tmp137,
 6415              	@ main.c:3378: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 6416 0034 3D4D     		ldr	r5, .L495+24	@ tmp139,
 6417              	@ main.c:3379: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 6418 0036 3E4A     		ldr	r2, .L495+28	@ tmp141,
 6419              	@ main.c:3380: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 6420 0038 3E4C     		ldr	r4, .L495+32	@ tmp143,
 6421              	@ main.c:3364: void SPI_Tool(void)				{
 6422 003a 84B0     		sub	sp, sp, #16	@,,
 6423              	@ main.c:3376: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 6424 003c 4660     		str	r6, [r0, #4]	@ tmp135, oled_hw.sck
 6425              	@ main.c:3384: 	int2str(12345678 ,tbuf,8,0);		
 6426 003e 0023     		movs	r3, #0	@,
 6427              	@ main.c:3377: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 6428 0040 0160     		str	r1, [r0]	@ tmp137, oled_hw.mosi
 6429              	@ main.c:3378: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 6430 0042 8560     		str	r5, [r0, #8]	@ tmp139, oled_hw.dc
 6431              	@ main.c:3384: 	int2str(12345678 ,tbuf,8,0);		
 6432 0044 01A9     		add	r1, sp, #4	@ tmp175,,
 6433              	@ main.c:3379: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 6434 0046 C260     		str	r2, [r0, #12]	@ tmp141, oled_hw.cs
 6435              	@ main.c:3380: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 6436 0048 0461     		str	r4, [r0, #16]	@ tmp143, oled_hw.rst
 6437              	@ main.c:3384: 	int2str(12345678 ,tbuf,8,0);		
 6438 004a 0822     		movs	r2, #8	@,
 6439 004c 3A48     		ldr	r0, .L495+36	@,
 6440 004e FFF7FEFF 		bl	int2str	@
 6441              	@ main.c:3385: 	oled_num24(0, 4,tbuf);
ARM GAS  /tmp/ccDfNsWv.s 			page 114


 6442 0052 01AA     		add	r2, sp, #4	@ tmp176,,
 6443 0054 0421     		movs	r1, #4	@,
 6444 0056 0020     		movs	r0, #0	@,
 6445 0058 FFF7FEFF 		bl	oled_num24	@
 6446              	@ main.c:3386: 	oled_num24(0, 0,tbuf);
 6447 005c 0021     		movs	r1, #0	@,
 6448 005e 01AA     		add	r2, sp, #4	@ tmp177,,
 6449 0060 0846     		mov	r0, r1	@,
 6450 0062 FFF7FEFF 		bl	oled_num24	@
 6451              	@ main.c:3387: 	oled_refresh_gram();	
 6452 0066 FFF7FEFF 		bl	oled_refresh_gram	@
 6453              	@ main.c:3390: 	SPI2_init();
 6454 006a FFF7FEFF 		bl	SPI2_init	@
 6455 006e 334D     		ldr	r5, .L495+40	@ tmp171,
 6456              	@ main.c:3403: 		UaPutK("\r\n ");
 6457 0070 334C     		ldr	r4, .L495+44	@ tmp172,
 6458              	@ main.c:3409: 			UaPutK("\r\nInit spi    = "); uint2uart(1);
 6459 0072 344F     		ldr	r7, .L495+48	@ tmp173,
 6460              	@ main.c:3414: 			SPI2_CS = 0; 
 6461 0074 2036     		adds	r6, r6, #32	@ tmp174, tmp174,
 6462              	.L483:
 6463              	@ main.c:3397: 		SPI_Tool_Menu();
 6464 0076 FFF7FEFF 		bl	SPI_Tool_Menu	@
 6465              	@ main.c:3398: 		while(!p_Fifo1->rct);
 6466 007a 2A68     		ldr	r2, [r5]	@ p_Fifo1.174_7, p_Fifo1
 6467              	.L484:
 6468              	@ main.c:3398: 		while(!p_Fifo1->rct);
 6469 007c 9388     		ldrh	r3, [r2, #4]	@, p_Fifo1.174_7->rct
 6470 007e 9BB2     		uxth	r3, r3	@ _8, p_Fifo1.174_7->rct
 6471 0080 002B     		cmp	r3, #0	@ _8
 6472 0082 FBD0     		beq	.L484	@
 6473              	@ main.c:3401: 		UART_getChar((char*)&switcH);
 6474 0084 0DF10300 		add	r0, sp, #3	@ tmp178,,
 6475 0088 FFF7FEFF 		bl	UART_getChar	@
 6476              	@ main.c:3403: 		UaPutK("\r\n ");
 6477 008c 2046     		mov	r0, r4	@, tmp172
 6478 008e FFF7FEFF 		bl	UaPutK	@
 6479              	@ main.c:3404: 		switch (switcH)	{
 6480 0092 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2	@ switcH, switcH
 6481 0096 692B     		cmp	r3, #105	@ switcH,
 6482 0098 07D0     		beq	.L486	@,
 6483 009a 722B     		cmp	r3, #114	@ switcH,
 6484 009c 21D0     		beq	.L487	@,
 6485 009e 632B     		cmp	r3, #99	@ switcH,
 6486 00a0 0CD0     		beq	.L494	@,
 6487              	@ main.c:3432: 			UaPutK("Nieznana Komenda");
 6488 00a2 2948     		ldr	r0, .L495+52	@,
 6489 00a4 FFF7FEFF 		bl	UaPutK	@
 6490              	@ main.c:3433: 			break;
 6491 00a8 E5E7     		b	.L483	@
 6492              	.L486:
 6493              	@ main.c:3408: 			SPI2_init();
 6494 00aa FFF7FEFF 		bl	SPI2_init	@
 6495              	@ main.c:3409: 			UaPutK("\r\nInit spi    = "); uint2uart(1);
 6496 00ae 3846     		mov	r0, r7	@, tmp173
 6497 00b0 FFF7FEFF 		bl	UaPutK	@
 6498 00b4 0120     		movs	r0, #1	@,
ARM GAS  /tmp/ccDfNsWv.s 			page 115


 6499 00b6 FFF7FEFF 		bl	uint2uart	@
 6500              	@ main.c:3411: 			break;
 6501 00ba DCE7     		b	.L483	@
 6502              	.L494:
 6503              	@ main.c:3423: 			UaPutK("Copy memory");
 6504 00bc 2348     		ldr	r0, .L495+56	@,
 6505 00be FFF7FEFF 		bl	UaPutK	@
 6506              	@ main.c:3424: 			UaPutK("\r\n Src Mem adr = 0x");	reg=UART_getHex();
 6507 00c2 2348     		ldr	r0, .L495+60	@,
 6508 00c4 FFF7FEFF 		bl	UaPutK	@
 6509 00c8 FFF7FEFF 		bl	UART_getHex	@
 6510              	@ main.c:3425: 			UaPutK("\r\n How many byte = ");	reg=UART_getNum();
 6511 00cc 2148     		ldr	r0, .L495+64	@,
 6512 00ce FFF7FEFF 		bl	UaPutK	@
 6513 00d2 FFF7FEFF 		bl	UART_getNum	@
 6514              	@ main.c:3426: 			UaPutK("\r\n Dst mem adr = 0x");	reg=UART_getHex();
 6515 00d6 2048     		ldr	r0, .L495+68	@,
 6516 00d8 FFF7FEFF 		bl	UaPutK	@
 6517 00dc FFF7FEFF 		bl	UART_getHex	@
 6518              	@ main.c:3429: 			break;
 6519 00e0 C9E7     		b	.L483	@
 6520              	.L487:
 6521              	@ main.c:3414: 			SPI2_CS = 0; 
 6522 00e2 4FF00008 		mov	r8, #0	@ tmp156,
 6523              	@ main.c:3415: 			UaPutK("\r\n Reg = ");	reg=UART_getNum();
 6524 00e6 1D48     		ldr	r0, .L495+72	@,
 6525              	@ main.c:3414: 			SPI2_CS = 0; 
 6526 00e8 C6F80080 		str	r8, [r6]	@ tmp156, MEM[(volatile long unsigned int *)1109492144B]
 6527              	@ main.c:3415: 			UaPutK("\r\n Reg = ");	reg=UART_getNum();
 6528 00ec FFF7FEFF 		bl	UaPutK	@
 6529 00f0 FFF7FEFF 		bl	UART_getNum	@
 6530              	@ main.c:3416: 			spi2_rw(reg);						// Read status register
 6531 00f4 C0B2     		uxtb	r0, r0	@,
 6532 00f6 FFF7FEFF 		bl	spi2_rw	@
 6533              	@ main.c:3417: 			UaPutK("\r\n Reg = ");	hex2uart(spi2_rw(0x00),2);
 6534 00fa 1848     		ldr	r0, .L495+72	@,
 6535 00fc FFF7FEFF 		bl	UaPutK	@
 6536 0100 4046     		mov	r0, r8	@, tmp156
 6537 0102 FFF7FEFF 		bl	spi2_rw	@
 6538 0106 0221     		movs	r1, #2	@,
 6539 0108 FFF7FEFF 		bl	hex2uart	@
 6540              	@ main.c:3418: 			SPI2_CS = 1;			
 6541 010c 0123     		movs	r3, #1	@ tmp164,
 6542 010e 3360     		str	r3, [r6]	@ tmp164, MEM[(volatile long unsigned int *)1109492144B]
 6543              	@ main.c:3420: 			break;
 6544 0110 B1E7     		b	.L483	@
 6545              	.L496:
 6546 0112 00BF     		.align	2
 6547              	.L495:
 6548 0114 B4012242 		.word	1109524916
 6549 0118 00080140 		.word	1073809408
 6550 011c 000C0140 		.word	1073810432
 6551 0120 00000000 		.word	oled_hw
 6552 0124 90812142 		.word	1109492112
 6553 0128 8C812142 		.word	1109492108
 6554 012c B0012142 		.word	1109459376
 6555 0130 AC012142 		.word	1109459372
ARM GAS  /tmp/ccDfNsWv.s 			page 116


 6556 0134 BC012142 		.word	1109459388
 6557 0138 4E61BC00 		.word	12345678
 6558 013c 00000000 		.word	p_Fifo1
 6559 0140 30000000 		.word	.LC66
 6560 0144 00000000 		.word	.LC88
 6561 0148 68000000 		.word	.LC94
 6562 014c 20000000 		.word	.LC90
 6563 0150 2C000000 		.word	.LC91
 6564 0154 40000000 		.word	.LC92
 6565 0158 54000000 		.word	.LC93
 6566 015c 14000000 		.word	.LC89
 6567              		.size	SPI_Tool, .-SPI_Tool
 6568              		.section	.text.Menu1,"ax",%progbits
 6569              		.align	1
 6570              		.p2align 2,,3
 6571              		.global	Menu1
 6572              		.syntax unified
 6573              		.thumb
 6574              		.thumb_func
 6575              		.fpu softvfp
 6576              		.type	Menu1, %function
 6577              	Menu1:
 6578              		@ args = 0, pretend = 0, frame = 0
 6579              		@ frame_needed = 0, uses_anonymous_args = 0
 6580 0000 08B5     		push	{r3, lr}	@
 6581              	@ main.c:3883: 	UaPutK("\n\r\n======= STM32F4 SD/MMC Card ======================\r\n");
 6582 0002 0848     		ldr	r0, .L499	@,
 6583 0004 FFF7FEFF 		bl	UaPutK	@
 6584              	@ main.c:3884: 	UaPutK(" i - Init      r - Read  sector  e - Erase sector   \r\n");
 6585 0008 0748     		ldr	r0, .L499+4	@,
 6586 000a FFF7FEFF 		bl	UaPutK	@
 6587              	@ main.c:3885: 	UaPutK(" d - Delete    f - Write sector  s - Statistic Card \r\n");
 6588 000e 0748     		ldr	r0, .L499+8	@,
 6589 0010 FFF7FEFF 		bl	UaPutK	@
 6590              	@ main.c:3886: 	UaPutK(" m - Modf mem  c - Copy  sector  n - Next Cluster  \r\n");
 6591 0014 0648     		ldr	r0, .L499+12	@,
 6592 0016 FFF7FEFF 		bl	UaPutK	@
 6593              	@ main.c:3888: }
 6594 001a BDE80840 		pop	{r3, lr}	@
 6595              	@ main.c:3887: 	UaPutK("==================================================\r\n > ");
 6596 001e 0548     		ldr	r0, .L499+16	@,
 6597 0020 FFF7FEBF 		b	UaPutK	@
 6598              	.L500:
 6599              		.align	2
 6600              	.L499:
 6601 0024 00000000 		.word	.LC95
 6602 0028 38000000 		.word	.LC96
 6603 002c 70000000 		.word	.LC97
 6604 0030 A8000000 		.word	.LC98
 6605 0034 94000000 		.word	.LC34
 6606              		.size	Menu1, .-Menu1
 6607              		.section	.text.MemCard_Menu,"ax",%progbits
 6608              		.align	1
 6609              		.p2align 2,,3
 6610              		.global	MemCard_Menu
 6611              		.syntax unified
 6612              		.thumb
ARM GAS  /tmp/ccDfNsWv.s 			page 117


 6613              		.thumb_func
 6614              		.fpu softvfp
 6615              		.type	MemCard_Menu, %function
 6616              	MemCard_Menu:
 6617              		@ args = 0, pretend = 0, frame = 40
 6618              		@ frame_needed = 0, uses_anonymous_args = 0
 6619              	@ main.c:3893: 	u16 crc=1,x=0,y1=0,y2=0;
 6620 0000 0123     		movs	r3, #1	@ tmp371,
 6621              	@ main.c:3889: void MemCard_Menu(void)		{
 6622 0002 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 6623 0006 8DB0     		sub	sp, sp, #52	@,,
 6624              	@ main.c:3893: 	u16 crc=1,x=0,y1=0,y2=0;
 6625 0008 ADF81E30 		strh	r3, [sp, #30]	@ movhi	@ tmp371, crc
 6626              	@ main.c:3895: 	TFT_Init();
 6627 000c FFF7FEFF 		bl	TFT_Init	@
 6628              	@ main.c:3896: 	TFT_Clear(BLACK);
 6629 0010 0020     		movs	r0, #0	@,
 6630 0012 FFF7FEFF 		bl	TFT_Clear	@
 6631              	@ main.c:3905: 	crc16_spi2_init();
 6632 0016 FFF7FEFF 		bl	crc16_spi2_init	@
 6633              	@ main.c:3907: 	if(dinit){
 6634 001a A94B     		ldr	r3, .L615	@ tmp701,
 6635 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2	@ dinit, dinit
 6636 001e 002B     		cmp	r3, #0	@ dinit
 6637 0020 00F01084 		beq	.L502	@
 6638              	@ main.c:3908: 		UaPutK("\r\nSD Card Init = "); sint2uart(CardType);
 6639 0024 A74B     		ldr	r3, .L615+4	@ tmp613,
 6640 0026 A848     		ldr	r0, .L615+8	@,
 6641 0028 1C46     		mov	r4, r3	@ tmp613, tmp613
 6642 002a 0393     		str	r3, [sp, #12]	@ tmp613, %sfp
 6643 002c FFF7FEFF 		bl	UaPutK	@
 6644 0030 2078     		ldrb	r0, [r4]	@ zero_extendqisi2	@, CardType
 6645 0032 FFF7FEFF 		bl	sint2uart	@
 6646              	.L503:
 6647              	@ main.c:3893: 	u16 crc=1,x=0,y1=0,y2=0;
 6648 0036 0023     		movs	r3, #0	@ y1,
 6649 0038 6FF4FF70 		mvn	r0, #510	@,
 6650              	@ main.c:3911: 	p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='i';
 6651 003c 0122     		movs	r2, #1	@ tmp380,
 6652 003e 6921     		movs	r1, #105	@ tmp383,
 6653              	@ main.c:3893: 	u16 crc=1,x=0,y1=0,y2=0;
 6654 0040 0493     		str	r3, [sp, #16]	@ y1, %sfp
 6655              	@ main.c:3911: 	p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='i';
 6656 0042 A24B     		ldr	r3, .L615+12	@ tmp708,
 6657 0044 DFF8D492 		ldr	r9, .L615+92	@ _443,
 6658 0048 1B68     		ldr	r3, [r3]	@ p_Fifo1.178_4, p_Fifo1
 6659 004a 4844     		add	r0, r9, r0	@ ivtmp.627, _443,
 6660 004c 9A80     		strh	r2, [r3, #4]	@ movhi	@ tmp380, p_Fifo1.178_4->rct
 6661 004e 0590     		str	r0, [sp, #20]	@ ivtmp.627, %sfp
 6662 0050 5A80     		strh	r2, [r3, #2]	@ movhi	@ tmp380, p_Fifo1.178_4->rwi
 6663 0052 9971     		strb	r1, [r3, #6]	@ tmp383, p_Fifo1.178_4->rbuf
 6664              	.L504:
 6665              	@ main.c:3914: 		Menu1();
 6666 0054 FFF7FEFF 		bl	Menu1	@
 6667              	@ main.c:3915: 		while(!p_Fifo1->rct);
 6668 0058 9C4B     		ldr	r3, .L615+12	@ tmp711,
 6669 005a 1A68     		ldr	r2, [r3]	@ p_Fifo1.181_7, p_Fifo1
ARM GAS  /tmp/ccDfNsWv.s 			page 118


 6670              	.L505:
 6671              	@ main.c:3915: 		while(!p_Fifo1->rct);
 6672 005c 9388     		ldrh	r3, [r2, #4]	@, p_Fifo1.181_7->rct
 6673 005e 9BB2     		uxth	r3, r3	@ _8, p_Fifo1.181_7->rct
 6674 0060 002B     		cmp	r3, #0	@ _8
 6675 0062 FBD0     		beq	.L505	@
 6676              	@ main.c:3918: 		UART_getChar((char*)&switcH);
 6677 0064 0DF11D00 		add	r0, sp, #29	@ tmp712,,
 6678 0068 FFF7FEFF 		bl	UART_getChar	@
 6679              	@ main.c:3920: 		UaPutK("\r\n ");
 6680 006c 9848     		ldr	r0, .L615+16	@,
 6681 006e FFF7FEFF 		bl	UaPutK	@
 6682              	@ main.c:3921: 		switch (switcH)	{
 6683 0072 9DF81D30 		ldrb	r3, [sp, #29]	@ zero_extendqisi2	@ switcH, switcH
 6684 0076 523B     		subs	r3, r3, #82	@ tmp391, switcH,
 6685 0078 262B     		cmp	r3, #38	@ tmp391,
 6686 007a 00F27B82 		bhi	.L506	@
 6687 007e DFE813F0 		tbh	[pc, r3, lsl #1]	@ tmp391
 6688              	.L508:
 6689 0082 4202     		.2byte	(.L507-.L508)/2
 6690 0084 7902     		.2byte	(.L506-.L508)/2
 6691 0086 7902     		.2byte	(.L506-.L508)/2
 6692 0088 7902     		.2byte	(.L506-.L508)/2
 6693 008a 7902     		.2byte	(.L506-.L508)/2
 6694 008c 7902     		.2byte	(.L506-.L508)/2
 6695 008e 7902     		.2byte	(.L506-.L508)/2
 6696 0090 7902     		.2byte	(.L506-.L508)/2
 6697 0092 7902     		.2byte	(.L506-.L508)/2
 6698 0094 7902     		.2byte	(.L506-.L508)/2
 6699 0096 7902     		.2byte	(.L506-.L508)/2
 6700 0098 7902     		.2byte	(.L506-.L508)/2
 6701 009a 7902     		.2byte	(.L506-.L508)/2
 6702 009c 7902     		.2byte	(.L506-.L508)/2
 6703 009e 7902     		.2byte	(.L506-.L508)/2
 6704 00a0 7902     		.2byte	(.L506-.L508)/2
 6705 00a2 7902     		.2byte	(.L506-.L508)/2
 6706 00a4 CB01     		.2byte	(.L509-.L508)/2
 6707 00a6 7902     		.2byte	(.L506-.L508)/2
 6708 00a8 7902     		.2byte	(.L506-.L508)/2
 6709 00aa 7901     		.2byte	(.L510-.L508)/2
 6710 00ac 7902     		.2byte	(.L506-.L508)/2
 6711 00ae 7902     		.2byte	(.L506-.L508)/2
 6712 00b0 5101     		.2byte	(.L511-.L508)/2
 6713 00b2 7902     		.2byte	(.L506-.L508)/2
 6714 00b4 7902     		.2byte	(.L506-.L508)/2
 6715 00b6 7902     		.2byte	(.L506-.L508)/2
 6716 00b8 4B02     		.2byte	(.L512-.L508)/2
 6717 00ba 7902     		.2byte	(.L506-.L508)/2
 6718 00bc 7902     		.2byte	(.L506-.L508)/2
 6719 00be 7902     		.2byte	(.L506-.L508)/2
 6720 00c0 D800     		.2byte	(.L513-.L508)/2
 6721 00c2 7000     		.2byte	(.L514-.L508)/2
 6722 00c4 6400     		.2byte	(.L515-.L508)/2
 6723 00c6 9100     		.2byte	(.L516-.L508)/2
 6724 00c8 2B00     		.2byte	(.L517-.L508)/2
 6725 00ca 7902     		.2byte	(.L506-.L508)/2
 6726 00cc 7902     		.2byte	(.L506-.L508)/2
ARM GAS  /tmp/ccDfNsWv.s 			page 119


 6727 00ce 2700     		.2byte	(.L518-.L508)/2
 6728              		.p2align 1
 6729              	.L518:
 6730              	@ main.c:4232: 			UaPutK("Testing ...");
 6731 00d0 8048     		ldr	r0, .L615+20	@,
 6732 00d2 FFF7FEFF 		bl	UaPutK	@
 6733              	@ main.c:4234: 			break;
 6734 00d6 BDE7     		b	.L504	@
 6735              	.L517:
 6736              	@ main.c:4130: 			UaPutK("View last sector");
 6737 00d8 7F48     		ldr	r0, .L615+24	@,
 6738 00da FFF7FEFF 		bl	UaPutK	@
 6739              	@ main.c:4131: 			UaPutK("\r\n First Sector = 0x");
 6740 00de 7F48     		ldr	r0, .L615+28	@,
 6741 00e0 FFF7FEFF 		bl	UaPutK	@
 6742              	@ main.c:4132: 			strBlock=UART_getHex();
 6743 00e4 FFF7FEFF 		bl	UART_getHex	@
 6744 00e8 0546     		mov	r5, r0	@ strBlock,
 6745              	@ main.c:4133: 			UaPutK("\r\n Searching ");
 6746 00ea 7D48     		ldr	r0, .L615+32	@,
 6747 00ec FFF7FEFF 		bl	UaPutK	@
 6748              	@ main.c:4142: 				if( mci_read_sect (strBlock++,buffer,1) ) {
 6749 00f0 7C4E     		ldr	r6, .L615+36	@ tmp637,
 6750 00f2 05E0     		b	.L547	@
 6751              	.L546:
 6752              	@ main.c:4152: 			while(crc != 0x822d );
 6753 00f4 48F22D23 		movw	r3, #33325	@ tmp561,
 6754 00f8 BDF81E20 		ldrh	r2, [sp, #30]	@ crc, crc
 6755 00fc 9A42     		cmp	r2, r3	@ crc, tmp561
 6756 00fe 16D0     		beq	.L545	@,
 6757              	.L547:
 6758              	@ main.c:4142: 				if( mci_read_sect (strBlock++,buffer,1) ) {
 6759 0100 0122     		movs	r2, #1	@,
 6760 0102 3146     		mov	r1, r6	@, tmp637
 6761 0104 2846     		mov	r0, r5	@, strBlock
 6762 0106 AC18     		adds	r4, r5, r2	@ strBlock, strBlock,
 6763 0108 FFF7FEFF 		bl	mmc_read_sect	@
 6764              	@ main.c:4149: 					if(!(strBlock%1024)) UaPutC('.');
 6765 010c C4F30903 		ubfx	r3, r4, #0, #10	@ tmp558, strBlock,,
 6766              	@ main.c:4142: 				if( mci_read_sect (strBlock++,buffer,1) ) {
 6767 0110 0028     		cmp	r0, #0	@
 6768 0112 40F06182 		bne	.L608	@
 6769 0116 2546     		mov	r5, r4	@ strBlock, strBlock
 6770              	@ main.c:4149: 					if(!(strBlock%1024)) UaPutC('.');
 6771 0118 002B     		cmp	r3, #0	@ tmp558
 6772 011a EBD1     		bne	.L546	@
 6773              	@ main.c:4149: 					if(!(strBlock%1024)) UaPutC('.');
 6774 011c 2E20     		movs	r0, #46	@,
 6775 011e FFF7FEFF 		bl	UaPutC	@
 6776              	@ main.c:4152: 			while(crc != 0x822d );
 6777 0122 48F22D23 		movw	r3, #33325	@ tmp561,
 6778 0126 BDF81E20 		ldrh	r2, [sp, #30]	@ crc, crc
 6779 012a 9A42     		cmp	r2, r3	@ crc, tmp561
 6780 012c E8D1     		bne	.L547	@,
 6781              	.L545:
 6782              	@ main.c:4182: 			UaPutK("\r\n Find Sector = 0x");	hex2uart(strBlock, 8);
 6783 012e 6E48     		ldr	r0, .L615+40	@,
ARM GAS  /tmp/ccDfNsWv.s 			page 120


 6784 0130 FFF7FEFF 		bl	UaPutK	@
 6785 0134 2046     		mov	r0, r4	@, strBlock
 6786 0136 0821     		movs	r1, #8	@,
 6787 0138 FFF7FEFF 		bl	hex2uart	@
 6788              	@ main.c:4183: 			UaPutK("\r\n     lenBlock= ");		sint2uart(lenBlock);
 6789 013c 6B48     		ldr	r0, .L615+44	@,
 6790 013e FFF7FEFF 		bl	UaPutK	@
 6791 0142 0120     		movs	r0, #1	@,
 6792 0144 FFF7FEFF 		bl	sint2uart	@
 6793              	@ main.c:4184: 			break;
 6794 0148 84E7     		b	.L504	@
 6795              	.L515:
 6796              	@ main.c:3943: 			UaPutK("Statistic Card  ");
 6797 014a 6948     		ldr	r0, .L615+48	@,
 6798 014c FFF7FEFF 		bl	UaPutK	@
 6799              	@ main.c:3944: 			if(dinit){
 6800 0150 5B4B     		ldr	r3, .L615	@ tmp715,
 6801 0152 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2	@ dinit, dinit
 6802 0154 002B     		cmp	r3, #0	@ dinit
 6803 0156 40F0EC80 		bne	.L607	@
 6804              	@ main.c:3955: 			}else UaPutK("\r\nSD Card Not Init");
 6805 015a 6648     		ldr	r0, .L615+52	@,
 6806 015c FFF7FEFF 		bl	UaPutK	@
 6807 0160 78E7     		b	.L504	@
 6808              	.L514:
 6809              	@ main.c:4042: 			UaPutK("Read sector");
 6810 0162 6548     		ldr	r0, .L615+56	@,
 6811 0164 FFF7FEFF 		bl	UaPutK	@
 6812              	@ main.c:4043: 			UaPutK("\r\n sectorNumber = 0x");
 6813 0168 6448     		ldr	r0, .L615+60	@,
 6814 016a FFF7FEFF 		bl	UaPutK	@
 6815              	@ main.c:4045: 			strBlock=UART_getHex();
 6816 016e FFF7FEFF 		bl	UART_getHex	@
 6817              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6818 0172 634C     		ldr	r4, .L615+64	@ tmp475,
 6819 0174 634D     		ldr	r5, .L615+68	@ tmp727,
 6820 0176 A368     		ldr	r3, [r4, #8]	@ _373, MEM[(struct SysTick_Type *)3758153744B].VAL
 6821              	@ main.c:4048: 			d=mci_read_sect (strBlock,buffer,1);
 6822 0178 0122     		movs	r2, #1	@,
 6823 017a 5A49     		ldr	r1, .L615+36	@,
 6824              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6825 017c 2B60     		str	r3, [r5]	@ _373, Timt
 6826              	@ main.c:4045: 			strBlock=UART_getHex();
 6827 017e 0746     		mov	r7, r0	@ strBlock,
 6828              	@ main.c:4048: 			d=mci_read_sect (strBlock,buffer,1);
 6829 0180 FFF7FEFF 		bl	mmc_read_sect	@
 6830              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 6831 0184 2A68     		ldr	r2, [r5]	@ Timt.47_370, Timt
 6832 0186 A368     		ldr	r3, [r4, #8]	@ _371, MEM[(struct SysTick_Type *)3758153744B].VAL
 6833              	@ main.c:4050: 			if(d){
 6834 0188 0446     		mov	r4, r0	@ tmp478,
 6835              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 6836 018a D31A     		subs	r3, r2, r3	@ _372, Timt.47_370, _371
 6837 018c 0293     		str	r3, [sp, #8]	@ _372, %sfp
 6838 018e 0893     		str	r3, [sp, #32]	@ _372, MEM[(volatile u32 *)&tim]
 6839              	@ main.c:4050: 			if(d){
 6840 0190 0028     		cmp	r0, #0	@ tmp478
ARM GAS  /tmp/ccDfNsWv.s 			page 121


 6841 0192 40F07382 		bne	.L609	@
 6842              	@ main.c:4077: 				UaPutK("\r\n Read Error = ");
 6843 0196 5C48     		ldr	r0, .L615+72	@,
 6844 0198 FFF7FEFF 		bl	UaPutK	@
 6845              	@ main.c:4078: 				uint2uart(d);
 6846 019c 2046     		mov	r0, r4	@, tmp478
 6847 019e FFF7FEFF 		bl	uint2uart	@
 6848 01a2 57E7     		b	.L504	@
 6849              	.L516:
 6850              	@ main.c:4187: 			UaPutK("Read sector");
 6851 01a4 5448     		ldr	r0, .L615+56	@,
 6852 01a6 FFF7FEFF 		bl	UaPutK	@
 6853              	@ main.c:4188: 			UaPutK("\r\n sectorNumber = 0x");
 6854 01aa 5448     		ldr	r0, .L615+60	@,
 6855 01ac FFF7FEFF 		bl	UaPutK	@
 6856              	@ main.c:4190: 			strBlock=UART_getHex();
 6857 01b0 FFF7FEFF 		bl	UART_getHex	@
 6858 01b4 0446     		mov	r4, r0	@ strBlock,
 6859              	@ main.c:4191: 			UaPutK("\r\n sectorNumber = 0x");		hex2uart(strBlock, 8);
 6860 01b6 5148     		ldr	r0, .L615+60	@,
 6861 01b8 FFF7FEFF 		bl	UaPutK	@
 6862 01bc 2046     		mov	r0, r4	@, strBlock
 6863 01be 0821     		movs	r1, #8	@,
 6864 01c0 FFF7FEFF 		bl	hex2uart	@
 6865              	@ main.c:4192: 			while(strBlock <  31116288 ){
 6866 01c4 514B     		ldr	r3, .L615+76	@ tmp748,
 6867 01c6 9C42     		cmp	r4, r3	@ strBlock, tmp748
 6868 01c8 26D8     		bhi	.L549	@,
 6869              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6870 01ca 4D4E     		ldr	r6, .L615+64	@ tmp570,
 6871              	@ main.c:4195: 				if( mci_read_sect (strBlock,buffer,1*16)) {
 6872 01cc 454D     		ldr	r5, .L615+36	@ tmp634,
 6873              	.L548:
 6874              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6875 01ce B368     		ldr	r3, [r6, #8]	@ _382, MEM[(struct SysTick_Type *)3758153744B].VAL
 6876 01d0 4C4F     		ldr	r7, .L615+68	@ tmp749,
 6877              	@ main.c:4195: 				if( mci_read_sect (strBlock,buffer,1*16)) {
 6878 01d2 1022     		movs	r2, #16	@,
 6879 01d4 2946     		mov	r1, r5	@, tmp634
 6880 01d6 2046     		mov	r0, r4	@, strBlock
 6881              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6882 01d8 3B60     		str	r3, [r7]	@ _382, Timt
 6883              	@ main.c:4195: 				if( mci_read_sect (strBlock,buffer,1*16)) {
 6884 01da FFF7FEFF 		bl	mmc_read_sect	@
 6885 01de 0028     		cmp	r0, #0	@
 6886 01e0 00F0CC81 		beq	.L550	@
 6887              	@ main.c:4196: 					crc16_spi2((u16*)buffer,256*16, &crc );
 6888 01e4 0DF11E02 		add	r2, sp, #30	@ tmp750,,
 6889 01e8 4FF48051 		mov	r1, #4096	@,
 6890 01ec 2846     		mov	r0, r5	@, tmp634
 6891 01ee FFF7FEFF 		bl	crc16_spi2	@
 6892              	@ main.c:4197: 					if( crc ) {
 6893 01f2 BDF81E30 		ldrh	r3, [sp, #30]	@ crc, crc
 6894 01f6 002B     		cmp	r3, #0	@ crc
 6895 01f8 40F0E181 		bne	.L610	@
 6896              	.L551:
 6897              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
ARM GAS  /tmp/ccDfNsWv.s 			page 122


 6898 01fc 414B     		ldr	r3, .L615+68	@ tmp751,
 6899              	@ main.c:4203: 				if(p_Fifo1->rct) break;
 6900 01fe 334A     		ldr	r2, .L615+12	@ tmp752,
 6901              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 6902 0200 1B68     		ldr	r3, [r3]	@ Timt.47_383, Timt
 6903 0202 B168     		ldr	r1, [r6, #8]	@ _384, MEM[(struct SysTick_Type *)3758153744B].VAL
 6904              	@ main.c:4203: 				if(p_Fifo1->rct) break;
 6905 0204 1268     		ldr	r2, [r2]	@ p_Fifo1.207_87, p_Fifo1
 6906              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 6907 0206 5B1A     		subs	r3, r3, r1	@ _385, Timt.47_383, _384
 6908 0208 0893     		str	r3, [sp, #32]	@ _385, MEM[(volatile u32 *)&tim]
 6909              	@ main.c:4203: 				if(p_Fifo1->rct) break;
 6910 020a 9388     		ldrh	r3, [r2, #4]	@, p_Fifo1.207_87->rct
 6911              	@ main.c:4200: 					strBlock+=1*16;
 6912 020c 1034     		adds	r4, r4, #16	@ strBlock, strBlock,
 6913              	@ main.c:4203: 				if(p_Fifo1->rct) break;
 6914 020e 9BB2     		uxth	r3, r3	@ _88, p_Fifo1.207_87->rct
 6915 0210 13B9     		cbnz	r3, .L549	@ _88,
 6916              	@ main.c:4192: 			while(strBlock <  31116288 ){
 6917 0212 3E4B     		ldr	r3, .L615+76	@ tmp754,
 6918 0214 9C42     		cmp	r4, r3	@ strBlock, tmp754
 6919 0216 DAD9     		bls	.L548	@,
 6920              	.L549:
 6921              	@ main.c:4206: 			UaPutK("\r\n Block = ");	hex2uart(strBlock,8); hex2uart(crc,4);
 6922 0218 3D48     		ldr	r0, .L615+80	@,
 6923 021a FFF7FEFF 		bl	UaPutK	@
 6924 021e 2046     		mov	r0, r4	@, strBlock
 6925 0220 0821     		movs	r1, #8	@,
 6926 0222 FFF7FEFF 		bl	hex2uart	@
 6927 0226 0421     		movs	r1, #4	@,
 6928 0228 BDF81E00 		ldrh	r0, [sp, #30]	@, crc
 6929 022c FFF7FEFF 		bl	hex2uart	@
 6930              	@ main.c:4207: 			break;
 6931 0230 10E7     		b	.L504	@
 6932              	.L513:
 6933              	@ main.c:4213: 				UaPutK("\r\n SD_Status \r\n ");
 6934 0232 3848     		ldr	r0, .L615+84	@,
 6935 0234 FFF7FEFF 		bl	UaPutK	@
 6936              	@ main.c:4214: 				hex2uart(0,4);
 6937 0238 0421     		movs	r1, #4	@,
 6938 023a 0020     		movs	r0, #0	@,
 6939 023c FFF7FEFF 		bl	hex2uart	@
 6940 0240 0024     		movs	r4, #0	@ ivtmp.628,
 6941              	.L555:
 6942              	@ main.c:4215: 				for(u08 k=0;k<8;k++){ hex2uart(k, 2);	}
 6943 0242 2046     		mov	r0, r4	@, ivtmp.628
 6944 0244 0221     		movs	r1, #2	@,
 6945 0246 0134     		adds	r4, r4, #1	@ ivtmp.628, ivtmp.628,
 6946 0248 FFF7FEFF 		bl	hex2uart	@
 6947 024c 082C     		cmp	r4, #8	@ ivtmp.628,
 6948 024e F8D1     		bne	.L555	@,
 6949              	@ main.c:4216: 				UaPutK("\r\n\n ");
 6950 0250 3148     		ldr	r0, .L615+88	@,
 6951 0252 FFF7FEFF 		bl	UaPutK	@
 6952 0256 4FF00008 		mov	r8, #0	@ ivtmp.625,
 6953 025a 224F     		ldr	r7, .L615+36	@ ivtmp.627,
 6954              	@ main.c:4222: 					UaPutS("  ");
ARM GAS  /tmp/ccDfNsWv.s 			page 123


 6955 025c DFF8C0B0 		ldr	fp, .L615+96	@ tmp625,
 6956              	@ main.c:4227: 					UaPutS("\r\n ");
 6957 0260 DFF86CA0 		ldr	r10, .L615+16	@ tmp626,
 6958 0264 07F10806 		add	r6, r7, #8	@ ivtmp.626, ivtmp.627,
 6959              	.L560:
 6960              	@ main.c:4218: 					unt2uart(i*8,4);	UaPutC(' ');
 6961 0268 0421     		movs	r1, #4	@,
 6962 026a 4046     		mov	r0, r8	@, ivtmp.625
 6963 026c FFF7FEFF 		bl	unt2uart	@
 6964 0270 2020     		movs	r0, #32	@,
 6965 0272 FFF7FEFF 		bl	UaPutC	@
 6966 0276 3C46     		mov	r4, r7	@ ivtmp.618, ivtmp.627
 6967              	.L556:
 6968              	@ main.c:4220: 						hex2uart(buffer[k+i], 2);
 6969 0278 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2	@, MEM[base: _425, offset: 0B]
 6970 027c 0221     		movs	r1, #2	@,
 6971 027e FFF7FEFF 		bl	hex2uart	@
 6972              	@ main.c:4219: 					for(u08 k=0;k<8;k++){
 6973 0282 A642     		cmp	r6, r4	@ ivtmp.626, ivtmp.618
 6974 0284 F8D1     		bne	.L556	@,
 6975              	@ main.c:4222: 					UaPutS("  ");
 6976 0286 5846     		mov	r0, fp	@, tmp625
 6977 0288 FFF7FEFF 		bl	UaPutS	@
 6978 028c 3D46     		mov	r5, r7	@ ivtmp.609, ivtmp.627
 6979              	.L559:
 6980              	@ main.c:4224: 						if ( buffer[k+i]<0x20 || buffer[k+i]>127 ) UaPutC('.');
 6981 028e 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2	@ _99, MEM[base: _423, offset: 0B]
 6982 0292 A0F12003 		sub	r3, r0, #32	@ tmp595, _99,
 6983 0296 5F2B     		cmp	r3, #95	@ tmp595,
 6984 0298 88BF     		it	hi
 6985 029a 2E20     		movhi	r0, #46	@,
 6986              	@ main.c:4225: 						else UaPutC(buffer[k+i]);
 6987 029c FFF7FEFF 		bl	UaPutC	@
 6988              	@ main.c:4223: 					for(u08 k=0;k<8;k++){
 6989 02a0 A542     		cmp	r5, r4	@ ivtmp.609, ivtmp.618
 6990 02a2 F4D1     		bne	.L559	@,
 6991 02a4 08F14008 		add	r8, r8, #64	@ ivtmp.625, ivtmp.625,
 6992              	@ main.c:4227: 					UaPutS("\r\n ");
 6993 02a8 5046     		mov	r0, r10	@, tmp626
 6994 02aa FFF7FEFF 		bl	UaPutS	@
 6995              	@ main.c:4217: 				for(u32 i=0;i<64;i+=8){
 6996 02ae B8F5007F 		cmp	r8, #512	@ ivtmp.625,
 6997 02b2 06F10806 		add	r6, r6, #8	@ ivtmp.626, ivtmp.626,
 6998 02b6 07F10807 		add	r7, r7, #8	@ ivtmp.627, ivtmp.627,
 6999 02ba D5D1     		bne	.L560	@,
 7000 02bc CAE6     		b	.L504	@
 7001              	.L616:
 7002 02be 00BF     		.align	2
 7003              	.L615:
 7004 02c0 00000000 		.word	.LANCHOR20
 7005 02c4 00000000 		.word	CardType
 7006 02c8 00000000 		.word	.LC99
 7007 02cc 00000000 		.word	p_Fifo1
 7008 02d0 30000000 		.word	.LC66
 7009 02d4 14030000 		.word	.LC143
 7010 02d8 68020000 		.word	.LC134
 7011 02dc 7C020000 		.word	.LC135
ARM GAS  /tmp/ccDfNsWv.s 			page 124


 7012 02e0 94020000 		.word	.LC136
 7013 02e4 00000000 		.word	buffer.8851
 7014 02e8 BC020000 		.word	.LC138
 7015 02ec D0020000 		.word	.LC139
 7016 02f0 8C000000 		.word	.LC105
 7017 02f4 A0000000 		.word	.LC106
 7018 02f8 E0000000 		.word	.LC79
 7019 02fc DC010000 		.word	.LC125
 7020 0300 10E000E0 		.word	-536813552
 7021 0304 00000000 		.word	Timt
 7022 0308 00020000 		.word	.LC127
 7023 030c FFCBDA01 		.word	31116287
 7024 0310 E4020000 		.word	.LC140
 7025 0314 00030000 		.word	.LC142
 7026 0318 34000000 		.word	.LC67
 7027 031c FF010000 		.word	buffer.8851+511
 7028 0320 3C000000 		.word	.LC68
 7029              	.L511:
 7030              	@ main.c:3925: 			dinit=mci_init();
 7031 0324 FFF7FEFF 		bl	mmc_init	@
 7032 0328 AF4B     		ldr	r3, .L617	@ tmp713,
 7033 032a 1870     		strb	r0, [r3]	@ tmp392, dinit
 7034              	@ main.c:3926: 			if(dinit){
 7035 032c 0028     		cmp	r0, #0	@ tmp392
 7036 032e 00F0EF80 		beq	.L537	@
 7037              	.L607:
 7038              	@ main.c:3949: 				if(	mci_read_config (&mmcfg)){
 7039 0332 09A8     		add	r0, sp, #36	@ tmp716,,
 7040 0334 FFF7FEFF 		bl	mmc_read_config	@
 7041 0338 0028     		cmp	r0, #0	@
 7042 033a 3FF48BAE 		beq	.L504	@
 7043              	@ main.c:3950: 					UaPutK("\r\nSD Card ser_num    = "); uint2uart(mmcfg.sernum);
 7044 033e AB48     		ldr	r0, .L617+4	@,
 7045 0340 FFF7FEFF 		bl	UaPutK	@
 7046 0344 0998     		ldr	r0, [sp, #36]	@, mmcfg.sernum
 7047 0346 FFF7FEFF 		bl	uint2uart	@
 7048              	@ main.c:3951: 					UaPutK("\r\nSD Card block_num  = "); uint2uart(mmcfg.blocknr);
 7049 034a A948     		ldr	r0, .L617+8	@,
 7050 034c FFF7FEFF 		bl	UaPutK	@
 7051 0350 0A98     		ldr	r0, [sp, #40]	@, mmcfg.blocknr
 7052 0352 FFF7FEFF 		bl	uint2uart	@
 7053              	@ main.c:3952: 					UaPutK("\r\nSD Card read_blen  = "); uint2uart(mmcfg.read_blen);
 7054 0356 A748     		ldr	r0, .L617+12	@,
 7055 0358 FFF7FEFF 		bl	UaPutK	@
 7056 035c BDF82C00 		ldrh	r0, [sp, #44]	@, mmcfg.read_blen
 7057 0360 FFF7FEFF 		bl	uint2uart	@
 7058              	@ main.c:3953: 					UaPutK("\r\nSD Card write_blen = "); uint2uart(mmcfg.write_blen);
 7059 0364 A448     		ldr	r0, .L617+16	@,
 7060 0366 FFF7FEFF 		bl	UaPutK	@
 7061 036a BDF82E00 		ldrh	r0, [sp, #46]	@, mmcfg.write_blen
 7062 036e FFF7FEFF 		bl	uint2uart	@
 7063 0372 6FE6     		b	.L504	@
 7064              	.L510:
 7065              	@ main.c:3959: 			UaPutK("Fill sector");
 7066 0374 A148     		ldr	r0, .L617+20	@,
 7067 0376 FFF7FEFF 		bl	UaPutK	@
 7068              	@ main.c:3960: 			UaPutK("\r\n Start Block  = 0x");		strBlock=UART_getHex();
ARM GAS  /tmp/ccDfNsWv.s 			page 125


 7069 037a A148     		ldr	r0, .L617+24	@,
 7070 037c FFF7FEFF 		bl	UaPutK	@
 7071 0380 FFF7FEFF 		bl	UART_getHex	@
 7072 0384 0446     		mov	r4, r0	@ strBlock,
 7073              	@ main.c:3962: 			UaPutK("\r\n End   Blocks = 0x");		dstBlock=UART_getHex();
 7074 0386 9F48     		ldr	r0, .L617+28	@,
 7075 0388 FFF7FEFF 		bl	UaPutK	@
 7076 038c FFF7FEFF 		bl	UART_getHex	@
 7077              	@ main.c:3963: 			dstBlock = dstBlock > strBlock ? dstBlock - strBlock + 1 : 1;
 7078 0390 8442     		cmp	r4, r0	@ strBlock, dstBlock
 7079 0392 80F02581 		bcs	.L561	@,
 7080              	@ main.c:3963: 			dstBlock = dstBlock > strBlock ? dstBlock - strBlock + 1 : 1;
 7081 0396 0130     		adds	r0, r0, #1	@ tmp423, dstBlock,
 7082 0398 051B     		subs	r5, r0, r4	@ iftmp.185_131, tmp423, strBlock
 7083 039a 05F1FF3B 		add	fp, r5, #-1	@ prephitmp_139, iftmp.185_131,
 7084              	.L522:
 7085              	@ main.c:3965: 			UaPutK("\r\n Num Blocks   = ");				uint2uart(dstBlock);
 7086 039e 9A48     		ldr	r0, .L617+32	@,
 7087 03a0 FFF7FEFF 		bl	UaPutK	@
 7088 03a4 2846     		mov	r0, r5	@, iftmp.185_131
 7089 03a6 FFF7FEFF 		bl	uint2uart	@
 7090              	@ main.c:3966: 			UaPutK("\r\n Data to fill = 0x");
 7091 03aa 9848     		ldr	r0, .L617+36	@,
 7092 03ac FFF7FEFF 		bl	UaPutK	@
 7093              	@ main.c:3967: 			znak=UART_getHex();
 7094 03b0 FFF7FEFF 		bl	UART_getHex	@
 7095 03b4 964B     		ldr	r3, .L617+40	@ ivtmp.599,
 7096 03b6 C0B2     		uxtb	r0, r0	@ znak,
 7097              	.L523:
 7098              	@ main.c:3969: 				buffer[i] = znak;
 7099 03b8 03F8010F 		strb	r0, [r3, #1]!	@ znak, MEM[base: _101, offset: 0B]
 7100              	@ main.c:3968: 			for(u32 i=0;i<512;i++){
 7101 03bc 4B45     		cmp	r3, r9	@ ivtmp.599, _443
 7102 03be FBD1     		bne	.L523	@,
 7103              	@ main.c:3971: 			while(dstBlock--){
 7104 03c0 002D     		cmp	r5, #0	@ iftmp.185_131
 7105 03c2 3FF447AE 		beq	.L504	@
 7106 03c6 651C     		adds	r5, r4, #1	@ strBlock, strBlock,
 7107              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7108 03c8 924F     		ldr	r7, .L617+44	@ tmp429,
 7109              	@ main.c:3974: 				d = mci_write_sect(strBlock, buffer, 1);
 7110 03ca DFF88482 		ldr	r8, .L617+104	@ tmp620,
 7111              	@ main.c:3982: 						UaPutS("\r\n Fill OK ");
 7112 03ce DFF8A8A2 		ldr	r10, .L617+144	@ tmp621,
 7113 03d2 AB44     		add	fp, fp, r5	@ _134, strBlock
 7114 03d4 07E0     		b	.L526	@
 7115              	.L524:
 7116              	@ main.c:3980: 					if(!(strBlock%1024)){
 7117 03d6 002A     		cmp	r2, #0	@ tmp434
 7118 03d8 00F0DB80 		beq	.L611	@
 7119              	.L525:
 7120              	@ main.c:3971: 			while(dstBlock--){
 7121 03dc AB45     		cmp	fp, r5	@ _134, strBlock
 7122              	@ main.c:3988: 				strBlock++;
 7123 03de 2C46     		mov	r4, r5	@ strBlock, strBlock
 7124              	@ main.c:3971: 			while(dstBlock--){
 7125 03e0 3FF438AE 		beq	.L504	@,
ARM GAS  /tmp/ccDfNsWv.s 			page 126


 7126 03e4 0135     		adds	r5, r5, #1	@ strBlock, strBlock,
 7127              	.L526:
 7128              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7129 03e6 BB68     		ldr	r3, [r7, #8]	@ _366, MEM[(struct SysTick_Type *)3758153744B].VAL
 7130 03e8 8B4E     		ldr	r6, .L617+48	@ tmp717,
 7131              	@ main.c:3974: 				d = mci_write_sect(strBlock, buffer, 1);
 7132 03ea 0122     		movs	r2, #1	@,
 7133 03ec 4146     		mov	r1, r8	@, tmp620
 7134 03ee 2046     		mov	r0, r4	@, strBlock
 7135              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7136 03f0 3360     		str	r3, [r6]	@ _366, Timt
 7137              	@ main.c:3974: 				d = mci_write_sect(strBlock, buffer, 1);
 7138 03f2 FFF7FEFF 		bl	mmc_write_sect	@
 7139              	@ main.c:3980: 					if(!(strBlock%1024)){
 7140 03f6 C4F30902 		ubfx	r2, r4, #0, #10	@ tmp434, strBlock,,
 7141              	@ main.c:3975: 				if(d==0) {
 7142 03fa 0646     		mov	r6, r0	@ tmp432,
 7143 03fc 0028     		cmp	r0, #0	@ tmp432
 7144 03fe EAD1     		bne	.L524	@
 7145              	@ main.c:3976: 					UaPutS("\r\n Fill error = 0x");
 7146 0400 8648     		ldr	r0, .L617+52	@,
 7147 0402 FFF7FEFF 		bl	UaPutS	@
 7148              	@ main.c:3977: 					hex2uart(strBlock,8); hex2uart(d,2);
 7149 0406 2046     		mov	r0, r4	@, strBlock
 7150 0408 0821     		movs	r1, #8	@,
 7151 040a FFF7FEFF 		bl	hex2uart	@
 7152 040e 3046     		mov	r0, r6	@, tmp432
 7153 0410 0221     		movs	r1, #2	@,
 7154 0412 FFF7FEFF 		bl	hex2uart	@
 7155 0416 E1E7     		b	.L525	@
 7156              	.L509:
 7157              	@ main.c:4011: 			UaPutK("Copy memory");
 7158 0418 8148     		ldr	r0, .L617+56	@,
 7159 041a FFF7FEFF 		bl	UaPutK	@
 7160              	@ main.c:4012: 			UaPutK("\r\n Src Mem adr = 0x");	strBlock=UART_getHex();
 7161 041e 8148     		ldr	r0, .L617+60	@,
 7162 0420 FFF7FEFF 		bl	UaPutK	@
 7163 0424 FFF7FEFF 		bl	UART_getHex	@
 7164 0428 0446     		mov	r4, r0	@ strBlock,
 7165              	@ main.c:4013: 			UaPutK("\r\n How many byte = ");	lenBlock=UART_getNum();
 7166 042a 7F48     		ldr	r0, .L617+64	@,
 7167 042c FFF7FEFF 		bl	UaPutK	@
 7168 0430 FFF7FEFF 		bl	UART_getNum	@
 7169 0434 8246     		mov	r10, r0	@ _38,
 7170              	@ main.c:4014: 			UaPutK("\r\n Dst mem adr = 0x");	dstBlock=UART_getHex();
 7171 0436 7D48     		ldr	r0, .L617+68	@,
 7172 0438 FFF7FEFF 		bl	UaPutK	@
 7173 043c FFF7FEFF 		bl	UART_getHex	@
 7174              	@ main.c:4017: 			for(u32 bl=(dstBlock/512);bl <= ((dstBlock+lenBlock-1)/512); bl++){
 7175 0440 8244     		add	r10, r10, r0	@ _130, dstBlock
 7176 0442 0AF1FF37 		add	r7, r10, #-1	@ tmp460, _130,
 7177 0446 7F0A     		lsrs	r7, r7, #9	@ _129, tmp460,
 7178 0448 4FEA502B 		lsr	fp, r0, #9	@ bl, dstBlock,
 7179 044c 5F45     		cmp	r7, fp	@ _129, bl
 7180              	@ main.c:4016: 			u32 dbl = dstBlock%512, sBlk=strBlock/512, sMem=strBlock%512;
 7181 044e 4FEA5426 		lsr	r6, r4, #9	@ sBlk, strBlock,
 7182 0452 C0F30805 		ubfx	r5, r0, #0, #9	@ dbl, dstBlock,,
ARM GAS  /tmp/ccDfNsWv.s 			page 127


 7183 0456 C4F30804 		ubfx	r4, r4, #0, #9	@ sMem, strBlock,,
 7184              	@ main.c:4017: 			for(u32 bl=(dstBlock/512);bl <= ((dstBlock+lenBlock-1)/512); bl++){
 7185 045a FFF4FBAD 		bcc	.L504	@,
 7186              	@ main.c:4027: 					if (bl == ((dstBlock+lenBlock)/512))	hex2uart((dstBlock+lenBlock)%512, 3);		//L
 7187 045e 4FEA5A23 		lsr	r3, r10, #9	@ _43, _130,
 7188 0462 0293     		str	r3, [sp, #8]	@ _43, %sfp
 7189 0464 5346     		mov	r3, r10	@ _130, _130
 7190              	@ main.c:4018: 				if (mci_read_sect(bl,buffer,1)){
 7191 0466 DFF8E881 		ldr	r8, .L617+104	@ tmp617,
 7192              	@ main.c:4027: 					if (bl == ((dstBlock+lenBlock)/512))	hex2uart((dstBlock+lenBlock)%512, 3);		//L
 7193 046a DA46     		mov	r10, fp	@ bl, bl
 7194 046c 9B46     		mov	fp, r3	@ _130, _130
 7195 046e 04E0     		b	.L529	@
 7196              	.L527:
 7197              	@ main.c:4017: 			for(u32 bl=(dstBlock/512);bl <= ((dstBlock+lenBlock-1)/512); bl++){
 7198 0470 0AF1010A 		add	r10, r10, #1	@ bl, bl,
 7199 0474 5745     		cmp	r7, r10	@ _129, bl
 7200 0476 FFF4EDAD 		bcc	.L504	@,
 7201              	.L529:
 7202              	@ main.c:4018: 				if (mci_read_sect(bl,buffer,1)){
 7203 047a 0122     		movs	r2, #1	@,
 7204 047c 4146     		mov	r1, r8	@, tmp617
 7205 047e 5046     		mov	r0, r10	@, bl
 7206 0480 FFF7FEFF 		bl	mmc_read_sect	@
 7207 0484 0028     		cmp	r0, #0	@
 7208 0486 F3D0     		beq	.L527	@
 7209              	@ main.c:4019: 					UaPutK("\r\n ReadB 0x");							hex2uart(sBlk++,3);
 7210 0488 6948     		ldr	r0, .L617+72	@,
 7211 048a FFF7FEFF 		bl	UaPutK	@
 7212 048e 0321     		movs	r1, #3	@,
 7213 0490 3046     		mov	r0, r6	@, sBlk
 7214 0492 FFF7FEFF 		bl	hex2uart	@
 7215 0496 0136     		adds	r6, r6, #1	@ sBlk, sBlk,
 7216              	@ main.c:4020: 					UaPutC(',');													hex2uart(sBlk, 	3);
 7217 0498 2C20     		movs	r0, #44	@,
 7218 049a FFF7FEFF 		bl	UaPutC	@
 7219 049e 0321     		movs	r1, #3	@,
 7220 04a0 3046     		mov	r0, r6	@, sBlk
 7221 04a2 FFF7FEFF 		bl	hex2uart	@
 7222              	@ main.c:4021: 					UaPutK("  From 0x");							    hex2uart(sMem, 	3);
 7223 04a6 6348     		ldr	r0, .L617+76	@,
 7224 04a8 FFF7FEFF 		bl	UaPutK	@
 7225 04ac 0321     		movs	r1, #3	@,
 7226 04ae 2046     		mov	r0, r4	@, sMem
 7227 04b0 FFF7FEFF 		bl	hex2uart	@
 7228 04b4 04F50074 		add	r4, r4, #512	@ _445, sMem,
 7229              	@ main.c:4023: 					UaPutK("->0x");											  hex2uart(sMem + (0x200-dbl), 3);
 7230 04b8 5F48     		ldr	r0, .L617+80	@,
 7231 04ba FFF7FEFF 		bl	UaPutK	@
 7232              	@ main.c:4022: 					sMem = sMem + (0x200-dbl);
 7233 04be 641B     		subs	r4, r4, r5	@ sMem, _445, dbl
 7234              	@ main.c:4023: 					UaPutK("->0x");											  hex2uart(sMem + (0x200-dbl), 3);
 7235 04c0 C5F50070 		rsb	r0, r5, #512	@ tmp466, dbl,
 7236 04c4 0321     		movs	r1, #3	@,
 7237 04c6 2044     		add	r0, r0, r4	@, sMem
 7238 04c8 FFF7FEFF 		bl	hex2uart	@
 7239              	@ main.c:4024: 					UaPutK("  WriteB 0x");								hex2uart(bl, 		3);
ARM GAS  /tmp/ccDfNsWv.s 			page 128


 7240 04cc 5B48     		ldr	r0, .L617+84	@,
 7241 04ce FFF7FEFF 		bl	UaPutK	@
 7242 04d2 0321     		movs	r1, #3	@,
 7243 04d4 5046     		mov	r0, r10	@, bl
 7244 04d6 FFF7FEFF 		bl	hex2uart	@
 7245              	@ main.c:4025: 					UaPutK("  0x");					  						hex2uart(dbl, 	3);
 7246 04da 5948     		ldr	r0, .L617+88	@,
 7247 04dc FFF7FEFF 		bl	UaPutK	@
 7248 04e0 2846     		mov	r0, r5	@, dbl
 7249 04e2 0321     		movs	r1, #3	@,
 7250 04e4 FFF7FEFF 		bl	hex2uart	@
 7251              	@ main.c:4026: 					UaPutK("->0x");
 7252 04e8 5348     		ldr	r0, .L617+80	@,
 7253 04ea FFF7FEFF 		bl	UaPutK	@
 7254              	@ main.c:4027: 					if (bl == ((dstBlock+lenBlock)/512))	hex2uart((dstBlock+lenBlock)%512, 3);		//L
 7255 04ee 029B     		ldr	r3, [sp, #8]	@ _43, %sfp
 7256 04f0 0321     		movs	r1, #3	@,
 7257 04f2 5345     		cmp	r3, r10	@ _43, bl
 7258 04f4 0CBF     		ite	eq
 7259 04f6 CBF30800 		ubfxeq	r0, fp, #0, #9	@, _130,,
 7260              	@ main.c:4028: 					else																	hex2uart(0x200, 3);
 7261 04fa 4FF40070 		movne	r0, #512	@,
 7262 04fe FFF7FEFF 		bl	hex2uart	@
 7263              	@ main.c:4029: 					dbl = 0;
 7264 0502 0025     		movs	r5, #0	@ dbl,
 7265 0504 B4E7     		b	.L527	@
 7266              	.L507:
 7267              	@ main.c:4083: 			if(CardType){
 7268 0506 039B     		ldr	r3, [sp, #12]	@ tmp613, %sfp
 7269 0508 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2	@ CardType, CardType
 7270 050a 002B     		cmp	r3, #0	@ CardType
 7271 050c 40F02081 		bne	.L612	@
 7272              	.L537:
 7273              	@ main.c:4126: 			} else UaPutK("\r\nSD Card Init ERROR ");
 7274 0510 4C48     		ldr	r0, .L617+92	@,
 7275 0512 FFF7FEFF 		bl	UaPutK	@
 7276 0516 9DE5     		b	.L504	@
 7277              	.L512:
 7278              	@ main.c:3994: 			UaPutS("Modify memory");
 7279 0518 4B48     		ldr	r0, .L617+96	@,
 7280 051a FFF7FEFF 		bl	UaPutS	@
 7281              	@ main.c:3995: 			UaPutS("\r\n Memory Addr = 0x");
 7282 051e 4B48     		ldr	r0, .L617+100	@,
 7283 0520 FFF7FEFF 		bl	UaPutS	@
 7284              	@ main.c:3997: 			strBlock=UART_getHex();
 7285 0524 FFF7FEFF 		bl	UART_getHex	@
 7286              	@ main.c:3999: 			if (mci_read_sect	(strBlock/512, buffer, 1)){
 7287 0528 450A     		lsrs	r5, r0, #9	@ _31, strBlock,
 7288              	@ main.c:3997: 			strBlock=UART_getHex();
 7289 052a 0446     		mov	r4, r0	@ strBlock,
 7290              	@ main.c:3999: 			if (mci_read_sect	(strBlock/512, buffer, 1)){
 7291 052c 0122     		movs	r2, #1	@,
 7292 052e 2846     		mov	r0, r5	@, _31
 7293 0530 4749     		ldr	r1, .L617+104	@,
 7294 0532 FFF7FEFF 		bl	mmc_read_sect	@
 7295 0536 0028     		cmp	r0, #0	@
 7296 0538 3FF48CAD 		beq	.L504	@
ARM GAS  /tmp/ccDfNsWv.s 			page 129


 7297              	@ main.c:4000: 				UaPutS("\r\n Memory Data = 0x");
 7298 053c 4548     		ldr	r0, .L617+108	@,
 7299 053e FFF7FEFF 		bl	UaPutS	@
 7300              	@ main.c:4001: 				hex2uart(buffer[strBlock%512], 2);
 7301 0542 059E     		ldr	r6, [sp, #20]	@ ivtmp.627, %sfp
 7302 0544 C4F30804 		ubfx	r4, r4, #0, #9	@ _33, strBlock,,
 7303 0548 0221     		movs	r1, #2	@,
 7304 054a 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2	@, buffer
 7305 054c FFF7FEFF 		bl	hex2uart	@
 7306              	@ main.c:4002: 				UaPutS("\r\n New Data    = 0x");
 7307 0550 4148     		ldr	r0, .L617+112	@,
 7308 0552 FFF7FEFF 		bl	UaPutS	@
 7309              	@ main.c:4003: 				StrBlock=UART_getHex();
 7310 0556 FFF7FEFF 		bl	UART_getHex	@
 7311              	@ main.c:4006: 				if (mci_write_sect		(strBlock/512, buffer,1))  UaPutS("\r\n Modify OK");
 7312 055a 0122     		movs	r2, #1	@,
 7313              	@ main.c:4004: 				buffer[strBlock%512] = StrBlock;
 7314 055c 3055     		strb	r0, [r6, r4]	@, buffer
 7315              	@ main.c:4006: 				if (mci_write_sect		(strBlock/512, buffer,1))  UaPutS("\r\n Modify OK");
 7316 055e 3C49     		ldr	r1, .L617+104	@,
 7317 0560 2846     		mov	r0, r5	@, _31
 7318 0562 FFF7FEFF 		bl	mmc_write_sect	@
 7319 0566 0028     		cmp	r0, #0	@
 7320 0568 3FF474AD 		beq	.L504	@
 7321              	@ main.c:4006: 				if (mci_write_sect		(strBlock/512, buffer,1))  UaPutS("\r\n Modify OK");
 7322 056c 3B48     		ldr	r0, .L617+116	@,
 7323 056e FFF7FEFF 		bl	UaPutS	@
 7324 0572 6FE5     		b	.L504	@
 7325              	.L506:
 7326              	@ main.c:4237: 			UaPutK("Unkr_dma_buf Command !");
 7327 0574 3A48     		ldr	r0, .L617+120	@,
 7328 0576 FFF7FEFF 		bl	UaPutK	@
 7329              	@ main.c:4238: 			break;
 7330 057a 6BE5     		b	.L504	@
 7331              	.L550:
 7332              	@ main.c:4202: 				} else UaPutK("\r\n Read Error ");
 7333 057c 3948     		ldr	r0, .L617+124	@,
 7334 057e FFF7FEFF 		bl	UaPutK	@
 7335              	@ main.c:4203: 				if(p_Fifo1->rct) break;
 7336 0582 394B     		ldr	r3, .L617+128	@ tmp753,
 7337 0584 1B68     		ldr	r3, [r3]	@ p_Fifo1.207_492, p_Fifo1
 7338 0586 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.207_492->rct
 7339 0588 9BB2     		uxth	r3, r3	@ _493, p_Fifo1.207_492->rct
 7340 058a 002B     		cmp	r3, #0	@ _493
 7341 058c 3FF41FAE 		beq	.L548	@
 7342 0590 42E6     		b	.L549	@
 7343              	.L611:
 7344              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7345 0592 214B     		ldr	r3, .L617+48	@ tmp718,
 7346              	@ main.c:3982: 						UaPutS("\r\n Fill OK ");
 7347 0594 5046     		mov	r0, r10	@, tmp621
 7348              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7349 0596 1E68     		ldr	r6, [r3]	@ Timt.47_367, Timt
 7350 0598 BB68     		ldr	r3, [r7, #8]	@ _368, MEM[(struct SysTick_Type *)3758153744B].VAL
 7351 059a 0292     		str	r2, [sp, #8]	@ tmp434, %sfp
 7352 059c F61A     		subs	r6, r6, r3	@ _369, Timt.47_367, _368
 7353 059e 0896     		str	r6, [sp, #32]	@ _369, MEM[(volatile u32 *)&tim]
ARM GAS  /tmp/ccDfNsWv.s 			page 130


 7354              	@ main.c:3982: 						UaPutS("\r\n Fill OK ");
 7355 05a0 FFF7FEFF 		bl	UaPutS	@
 7356              	@ main.c:3983: 						hex2uart(strBlock,  8);
 7357 05a4 2046     		mov	r0, r4	@, strBlock
 7358 05a6 0821     		movs	r1, #8	@,
 7359 05a8 FFF7FEFF 		bl	hex2uart	@
 7360              	@ main.c:3984: 						UaPutS(" Time[us] = " );
 7361 05ac 2F48     		ldr	r0, .L617+132	@,
 7362 05ae FFF7FEFF 		bl	UaPutS	@
 7363              	@ main.c:3985: 						num2uart(tim, 8,0);
 7364 05b2 029A     		ldr	r2, [sp, #8]	@ tmp434, %sfp
 7365 05b4 3046     		mov	r0, r6	@, _369
 7366 05b6 0821     		movs	r1, #8	@,
 7367 05b8 FFF7FEFF 		bl	num2uart	@
 7368 05bc 0EE7     		b	.L525	@
 7369              	.L610:
 7370              	@ main.c:4198: 						UaPutK("\r\n Block = ");	hex2uart(strBlock,8); hex2uart(crc,4);
 7371 05be 2C48     		ldr	r0, .L617+136	@,
 7372 05c0 FFF7FEFF 		bl	UaPutK	@
 7373 05c4 2046     		mov	r0, r4	@, strBlock
 7374 05c6 0821     		movs	r1, #8	@,
 7375 05c8 FFF7FEFF 		bl	hex2uart	@
 7376 05cc 0421     		movs	r1, #4	@,
 7377 05ce BDF81E00 		ldrh	r0, [sp, #30]	@, crc
 7378 05d2 FFF7FEFF 		bl	hex2uart	@
 7379 05d6 11E6     		b	.L551	@
 7380              	.L608:
 7381              	@ main.c:4143: 					UaPutK("\r\n Exit Read Error !!!");
 7382 05d8 2648     		ldr	r0, .L617+140	@,
 7383 05da FFF7FEFF 		bl	UaPutK	@
 7384              	@ main.c:4144: 					break;
 7385 05de A6E5     		b	.L545	@
 7386              	.L561:
 7387 05e0 4FF0000B 		mov	fp, #0	@ prephitmp_139,
 7388              	@ main.c:3963: 			dstBlock = dstBlock > strBlock ? dstBlock - strBlock + 1 : 1;
 7389 05e4 0125     		movs	r5, #1	@ iftmp.185_131,
 7390 05e6 DAE6     		b	.L522	@
 7391              	.L618:
 7392              		.align	2
 7393              	.L617:
 7394 05e8 00000000 		.word	.LANCHOR20
 7395 05ec 2C000000 		.word	.LC101
 7396 05f0 44000000 		.word	.LC102
 7397 05f4 5C000000 		.word	.LC103
 7398 05f8 74000000 		.word	.LC104
 7399 05fc B4000000 		.word	.LC107
 7400 0600 C0000000 		.word	.LC108
 7401 0604 D8000000 		.word	.LC109
 7402 0608 F0000000 		.word	.LC110
 7403 060c 04010000 		.word	.LC111
 7404 0610 FFFFFFFF 		.word	buffer.8851-1
 7405 0614 10E000E0 		.word	-536813552
 7406 0618 00000000 		.word	Timt
 7407 061c 1C010000 		.word	.LC112
 7408 0620 20000000 		.word	.LC90
 7409 0624 2C000000 		.word	.LC91
 7410 0628 40000000 		.word	.LC92
ARM GAS  /tmp/ccDfNsWv.s 			page 131


 7411 062c 54000000 		.word	.LC93
 7412 0630 A8010000 		.word	.LC120
 7413 0634 B4010000 		.word	.LC121
 7414 0638 C0010000 		.word	.LC122
 7415 063c C8010000 		.word	.LC123
 7416 0640 D4010000 		.word	.LC124
 7417 0644 14000000 		.word	.LC100
 7418 0648 4C010000 		.word	.LC115
 7419 064c 5C010000 		.word	.LC116
 7420 0650 00000000 		.word	buffer.8851
 7421 0654 70010000 		.word	.LC117
 7422 0658 84010000 		.word	.LC118
 7423 065c 98010000 		.word	.LC119
 7424 0660 20030000 		.word	.LC144
 7425 0664 F0020000 		.word	.LC141
 7426 0668 00000000 		.word	p_Fifo1
 7427 066c 3C010000 		.word	.LC114
 7428 0670 E4020000 		.word	.LC140
 7429 0674 A4020000 		.word	.LC137
 7430 0678 30010000 		.word	.LC113
 7431              	.L609:
 7432              	@ main.c:4051: 				UaPutS("\r\n ");
 7433 067c 7548     		ldr	r0, .L619	@,
 7434 067e FFF7FEFF 		bl	UaPutS	@
 7435              	@ main.c:4052: 				hex2uart(strBlock, 8);
 7436 0682 0821     		movs	r1, #8	@,
 7437 0684 3846     		mov	r0, r7	@, strBlock
 7438 0686 FFF7FEFF 		bl	hex2uart	@
 7439 068a 0024     		movs	r4, #0	@ ivtmp.661,
 7440              	.L531:
 7441              	@ main.c:4054: 					hex2uart(k, 2);
 7442 068c 2046     		mov	r0, r4	@, ivtmp.661
 7443 068e 0221     		movs	r1, #2	@,
 7444 0690 0134     		adds	r4, r4, #1	@ ivtmp.661, ivtmp.661,
 7445 0692 FFF7FEFF 		bl	hex2uart	@
 7446              	@ main.c:4053: 				for(u08 k=0;k<16;k++){
 7447 0696 102C     		cmp	r4, #16	@ ivtmp.661,
 7448 0698 F8D1     		bne	.L531	@,
 7449 069a 6F4D     		ldr	r5, .L619+4	@ _474,
 7450              	@ main.c:4056: 				UaPutS("\r\n\n ");
 7451 069c 6F48     		ldr	r0, .L619+8	@,
 7452              	@ main.c:4062: 					UaPutS("  ");
 7453 069e DFF80CA2 		ldr	r10, .L619+88	@ tmp631,
 7454              	@ main.c:4067: 					UaPutS("\r\n ");
 7455 06a2 DFF8B081 		ldr	r8, .L619	@ tmp632,
 7456              	@ main.c:4056: 				UaPutS("\r\n\n ");
 7457 06a6 FFF7FEFF 		bl	UaPutS	@
 7458              	@ main.c:4058: 					hex2uart(strBlock*512 + i, 8);
 7459 06aa 2E46     		mov	r6, r5	@ ivtmp.660, ivtmp.627
 7460 06ac 0595     		str	r5, [sp, #20]	@ ivtmp.627, %sfp
 7461 06ae C5EB4727 		rsb	r7, r5, r7, lsl #9	@ tmp602, ivtmp.627, strBlock,
 7462 06b2 1035     		adds	r5, r5, #16	@ ivtmp.659, _474,
 7463              	.L536:
 7464 06b4 0821     		movs	r1, #8	@,
 7465 06b6 B819     		adds	r0, r7, r6	@, tmp602, ivtmp.660
 7466 06b8 FFF7FEFF 		bl	hex2uart	@
 7467 06bc 3446     		mov	r4, r6	@ ivtmp.651, ivtmp.660
ARM GAS  /tmp/ccDfNsWv.s 			page 132


 7468              	.L532:
 7469              	@ main.c:4060: 						hex2uart(buffer[k+i], 2);
 7470 06be 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2	@, MEM[base: _428, offset: 0B]
 7471 06c2 0221     		movs	r1, #2	@,
 7472 06c4 FFF7FEFF 		bl	hex2uart	@
 7473              	@ main.c:4059: 					for(u08 k=0;k<16;k++){
 7474 06c8 AC42     		cmp	r4, r5	@ ivtmp.651, ivtmp.659
 7475 06ca F8D1     		bne	.L532	@,
 7476              	@ main.c:4062: 					UaPutS("  ");
 7477 06cc 5046     		mov	r0, r10	@, tmp631
 7478 06ce FFF7FEFF 		bl	UaPutS	@
 7479 06d2 B346     		mov	fp, r6	@ ivtmp.642, ivtmp.660
 7480              	.L535:
 7481              	@ main.c:4064: 						if ( buffer[k+i]<0x20 || buffer[k+i]>126 ) UaPutC('.');
 7482 06d4 1BF8010B 		ldrb	r0, [fp], #1	@ zero_extendqisi2	@ _58, MEM[base: _413, offset: 0B]
 7483 06d8 A0F12003 		sub	r3, r0, #32	@ tmp487, _58,
 7484 06dc 5E2B     		cmp	r3, #94	@ tmp487,
 7485 06de 88BF     		it	hi
 7486 06e0 2E20     		movhi	r0, #46	@,
 7487              	@ main.c:4065: 						else UaPutC(buffer[k+i]);
 7488 06e2 FFF7FEFF 		bl	UaPutC	@
 7489              	@ main.c:4063: 					for(u08 k=0;k<16;k++){
 7490 06e6 A345     		cmp	fp, r4	@ ivtmp.642, ivtmp.651
 7491 06e8 F4D1     		bne	.L535	@,
 7492              	@ main.c:4067: 					UaPutS("\r\n ");
 7493 06ea 4046     		mov	r0, r8	@, tmp632
 7494 06ec FFF7FEFF 		bl	UaPutS	@
 7495              	@ main.c:4057: 				for(u32 i=0;i<512;i+=16){
 7496 06f0 5B4B     		ldr	r3, .L619+12	@ tmp733,
 7497 06f2 1036     		adds	r6, r6, #16	@ ivtmp.660, ivtmp.660,
 7498 06f4 9E42     		cmp	r6, r3	@ ivtmp.660, tmp733
 7499 06f6 05F11005 		add	r5, r5, #16	@ ivtmp.659, ivtmp.659,
 7500 06fa DBD1     		bne	.L536	@,
 7501              	@ main.c:4069: 				UaPutK(" t_rsdio = ");	uint2uart(tim/TIM_US);
 7502 06fc 5948     		ldr	r0, .L619+16	@,
 7503 06fe FFF7FEFF 		bl	UaPutK	@
 7504 0702 594E     		ldr	r6, .L619+20	@ tmp735,
 7505 0704 029B     		ldr	r3, [sp, #8]	@ _372, %sfp
 7506              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7507 0706 594D     		ldr	r5, .L619+24	@ tmp493,
 7508              	@ main.c:4069: 				UaPutK(" t_rsdio = ");	uint2uart(tim/TIM_US);
 7509 0708 A6FB0330 		umull	r3, r0, r6, r3	@ tmp697, tmp491, tmp735, _372
 7510 070c 4008     		lsrs	r0, r0, #1	@, tmp491,
 7511 070e FFF7FEFF 		bl	uint2uart	@
 7512              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7513 0712 574C     		ldr	r4, .L619+28	@ tmp738,
 7514 0714 AB68     		ldr	r3, [r5, #8]	@ _377, MEM[(struct SysTick_Type *)3758153744B].VAL
 7515              	@ main.c:4071: 				crc16_spi2( (u16*) buffer,256, &crc );
 7516 0716 0DF11E02 		add	r2, sp, #30	@ tmp737,,
 7517 071a 4FF48071 		mov	r1, #256	@,
 7518 071e 4E48     		ldr	r0, .L619+4	@,
 7519              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7520 0720 2360     		str	r3, [r4]	@ _377, Timt
 7521              	@ main.c:4071: 				crc16_spi2( (u16*) buffer,256, &crc );
 7522 0722 FFF7FEFF 		bl	crc16_spi2	@
 7523              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7524 0726 2468     		ldr	r4, [r4]	@ Timt.47_374, Timt
ARM GAS  /tmp/ccDfNsWv.s 			page 133


 7525 0728 AB68     		ldr	r3, [r5, #8]	@ _375, MEM[(struct SysTick_Type *)3758153744B].VAL
 7526              	@ main.c:4074: 				UaPutK(" crc = ");	hex2uart(crc,4);
 7527 072a 5248     		ldr	r0, .L619+32	@,
 7528              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7529 072c E41A     		subs	r4, r4, r3	@ _376, Timt.47_374, _375
 7530 072e 0894     		str	r4, [sp, #32]	@ _376, MEM[(volatile u32 *)&tim]
 7531              	@ main.c:4074: 				UaPutK(" crc = ");	hex2uart(crc,4);
 7532 0730 FFF7FEFF 		bl	UaPutK	@
 7533 0734 0421     		movs	r1, #4	@,
 7534 0736 BDF81E00 		ldrh	r0, [sp, #30]	@, crc
 7535 073a FFF7FEFF 		bl	hex2uart	@
 7536              	@ main.c:4075: 				UaPutK(" t_crc = ");	uint2uart(tim/TIM_US);
 7537 073e 4E48     		ldr	r0, .L619+36	@,
 7538 0740 FFF7FEFF 		bl	UaPutK	@
 7539 0744 A6FB0430 		umull	r3, r0, r6, r4	@ tmp698, tmp503, tmp740, _376
 7540 0748 4008     		lsrs	r0, r0, #1	@, tmp503,
 7541 074a FFF7FEFF 		bl	uint2uart	@
 7542 074e 81E4     		b	.L504	@
 7543              	.L612:
 7544              	@ main.c:4091: 				x=0;
 7545 0750 0024     		movs	r4, #0	@ x,
 7546              	@ main.c:4084: 				UaPutK("Read multi sector");
 7547 0752 4A48     		ldr	r0, .L619+40	@,
 7548 0754 FFF7FEFF 		bl	UaPutK	@
 7549              	@ main.c:4090: 				UaPutK("\r\n Num Sectors  = ");			uint2uart(dstBlock);
 7550 0758 4948     		ldr	r0, .L619+44	@,
 7551 075a FFF7FEFF 		bl	UaPutK	@
 7552 075e 4948     		ldr	r0, .L619+48	@,
 7553 0760 FFF7FEFF 		bl	uint2uart	@
 7554              	@ main.c:4092: 				TFT_Clear(BLACK);
 7555 0764 2046     		mov	r0, r4	@, x
 7556 0766 FFF7FEFF 		bl	TFT_Clear	@
 7557              	@ main.c:4087: 				strBlock = 0;
 7558 076a 2646     		mov	r6, r4	@ strBlock, x
 7559              	@ main.c:4095: 					d = mci_read_sect (strBlock,buffer,1);
 7560 076c 3A4F     		ldr	r7, .L619+4	@ tmp614,
 7561 076e DDF81080 		ldr	r8, [sp, #16]	@ y1, %sfp
 7562 0772 1BE0     		b	.L543	@
 7563              	.L614:
 7564              	@ main.c:4114: 								TFT_dy( x, y1, y2, YELLOW, 0);
 7565 0774 0020     		movs	r0, #0	@ tmp529,
 7566 0776 4FF6E073 		movw	r3, #65504	@,
 7567 077a 0090     		str	r0, [sp]	@ tmp529,
 7568 077c 2046     		mov	r0, r4	@, x
 7569 077e FFF7FEFF 		bl	TFT_dy	@
 7570              	.L542:
 7571              	@ main.c:4120: 							x = (x+1)%(wXmax-wXmin);
 7572 0782 414B     		ldr	r3, .L619+52	@ tmp746,
 7573 0784 0134     		adds	r4, r4, #1	@ tmp530, x,
 7574 0786 A3FB0423 		umull	r2, r3, r3, r4	@ tmp700, tmp531, tmp746, tmp530
 7575 078a 5B09     		lsrs	r3, r3, #5	@ _76, tmp531,
 7576 078c 03EBC302 		add	r2, r3, r3, lsl #3	@ tmp535, _76, _76,
 7577 0790 C3EB4213 		rsb	r3, r3, r2, lsl #5	@ tmp537, _76, tmp535,
 7578 0794 E31A     		subs	r3, r4, r3	@ _76, tmp530, tmp537
 7579 0796 9CB2     		uxth	r4, r3	@ x, _76
 7580              	.L539:
 7581              	@ main.c:4124: 					if(p_Fifo1->rct) break;
ARM GAS  /tmp/ccDfNsWv.s 			page 134


 7582 0798 3C4B     		ldr	r3, .L619+56	@ tmp747,
 7583              	@ main.c:4093: 				while(dstBlock--){
 7584 079a 3A4A     		ldr	r2, .L619+48	@ tmp550,
 7585              	@ main.c:4124: 					if(p_Fifo1->rct) break;
 7586 079c 1B68     		ldr	r3, [r3]	@ p_Fifo1.201_77, p_Fifo1
 7587              	@ main.c:4123: 					strBlock++;
 7588 079e 0136     		adds	r6, r6, #1	@ strBlock, strBlock,
 7589              	@ main.c:4124: 					if(p_Fifo1->rct) break;
 7590 07a0 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.201_77->rct
 7591 07a2 9BB2     		uxth	r3, r3	@ _78, p_Fifo1.201_77->rct
 7592 07a4 002B     		cmp	r3, #0	@ _78
 7593 07a6 3BD1     		bne	.L603	@
 7594              	@ main.c:4093: 				while(dstBlock--){
 7595 07a8 9642     		cmp	r6, r2	@ strBlock, tmp550
 7596 07aa 39D0     		beq	.L603	@,
 7597              	.L543:
 7598              	@ main.c:4095: 					d = mci_read_sect (strBlock,buffer,1);
 7599 07ac 0122     		movs	r2, #1	@,
 7600 07ae 3946     		mov	r1, r7	@, tmp614
 7601 07b0 3046     		mov	r0, r6	@, strBlock
 7602 07b2 FFF7FEFF 		bl	mmc_read_sect	@
 7603              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7604 07b6 2D4A     		ldr	r2, .L619+24	@ tmp516,
 7605              	@ main.c:4104: 							if(!(strBlock%4096)){
 7606 07b8 C6F30B03 		ubfx	r3, r6, #0, #12	@ tmp517, strBlock,,
 7607              	@ main.c:4096: 					if(!d) {
 7608 07bc 0028     		cmp	r0, #0	@ tmp512
 7609 07be 32D0     		beq	.L613	@
 7610              	@ main.c:4102: 						if(!(strBlock%256)){
 7611 07c0 16F0FF0F 		tst	r6, #255	@ strBlock
 7612 07c4 E8D1     		bne	.L539	@,
 7613              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7614 07c6 2A49     		ldr	r1, .L619+28	@ tmp743,
 7615 07c8 0D68     		ldr	r5, [r1]	@ Timt.47_378, Timt
 7616 07ca 9268     		ldr	r2, [r2, #8]	@ _379, MEM[(struct SysTick_Type *)3758153744B].VAL
 7617 07cc AD1A     		subs	r5, r5, r2	@ _380, Timt.47_378, _379
 7618 07ce 0895     		str	r5, [sp, #32]	@ _380, MEM[(volatile u32 *)&tim]
 7619              	@ main.c:4104: 							if(!(strBlock%4096)){
 7620 07d0 93B9     		cbnz	r3, .L540	@ tmp517,
 7621              	@ main.c:4105: 								UaPutS("\r\n Read OK ");
 7622 07d2 2F48     		ldr	r0, .L619+60	@,
 7623 07d4 FFF7FEFF 		bl	UaPutS	@
 7624              	@ main.c:4106: 								hex2uart(strBlock,  8);
 7625 07d8 0821     		movs	r1, #8	@,
 7626 07da 3046     		mov	r0, r6	@, strBlock
 7627 07dc FFF7FEFF 		bl	hex2uart	@
 7628              	@ main.c:4107: 								UaPutS(" y2 = " );
 7629 07e0 2C48     		ldr	r0, .L619+64	@,
 7630 07e2 FFF7FEFF 		bl	UaPutS	@
 7631              	@ main.c:4108: 								uint2uart(y1); UaPutS("\t" ); uint2uart(y2);
 7632 07e6 4046     		mov	r0, r8	@, y1
 7633 07e8 FFF7FEFF 		bl	uint2uart	@
 7634 07ec 2A48     		ldr	r0, .L619+68	@,
 7635 07ee FFF7FEFF 		bl	UaPutS	@
 7636 07f2 4046     		mov	r0, r8	@, y1
 7637 07f4 FFF7FEFF 		bl	uint2uart	@
 7638              	.L540:
ARM GAS  /tmp/ccDfNsWv.s 			page 135


 7639              	@ main.c:4112: 							y2 = tim/(3*TIM_MS);
 7640 07f8 284A     		ldr	r2, .L619+72	@ tmp744,
 7641 07fa EB08     		lsrs	r3, r5, #3	@ tmp524, _380,
 7642 07fc A2FB0323 		umull	r2, r3, r2, r3	@ tmp699, tmp525, tmp744, tmp524
 7643              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7644 0800 1A4A     		ldr	r2, .L619+24	@ tmp522,
 7645              	@ main.c:4112: 							y2 = tim/(3*TIM_MS);
 7646 0802 5B0A     		lsrs	r3, r3, #9	@ _71, tmp525,
 7647              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7648 0804 9068     		ldr	r0, [r2, #8]	@ _381, MEM[(struct SysTick_Type *)3758153744B].VAL
 7649              	@ main.c:4114: 								TFT_dy( x, y1, y2, YELLOW, 0);
 7650 0806 5FFA88F1 		uxtb	r1, r8	@, y1
 7651 080a DAB2     		uxtb	r2, r3	@, _71
 7652              	@ main.c:4112: 							y2 = tim/(3*TIM_MS);
 7653 080c 1FFA83F8 		uxth	r8, r3	@ y2, _71
 7654              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7655 0810 174B     		ldr	r3, .L619+28	@ tmp745,
 7656 0812 1860     		str	r0, [r3]	@ _381, Timt
 7657              	@ main.c:4113: 							if(x){
 7658 0814 002C     		cmp	r4, #0	@ x
 7659 0816 ADD1     		bne	.L614	@
 7660              	@ main.c:4117: 								TFT_Clear(BLACK);
 7661 0818 2046     		mov	r0, r4	@, x
 7662 081a FFF7FEFF 		bl	TFT_Clear	@
 7663 081e B0E7     		b	.L542	@
 7664              	.L603:
 7665 0820 CDF81080 		str	r8, [sp, #16]	@ y1, %sfp
 7666 0824 16E4     		b	.L504	@
 7667              	.L613:
 7668 0826 0546     		mov	r5, r0	@ tmp512, tmp512
 7669              	@ main.c:4097: 						UaPutS("\r\n Read error = 0x");
 7670 0828 1D48     		ldr	r0, .L619+76	@,
 7671 082a CDF81080 		str	r8, [sp, #16]	@ y1, %sfp
 7672 082e FFF7FEFF 		bl	UaPutS	@
 7673              	@ main.c:4098: 						hex2uart(strBlock,8); hex2uart(d,2);
 7674 0832 3046     		mov	r0, r6	@, strBlock
 7675 0834 0821     		movs	r1, #8	@,
 7676 0836 FFF7FEFF 		bl	hex2uart	@
 7677 083a 2846     		mov	r0, r5	@, tmp512
 7678 083c 0221     		movs	r1, #2	@,
 7679 083e FFF7FEFF 		bl	hex2uart	@
 7680              	@ main.c:4099: 						break;
 7681 0842 07E4     		b	.L504	@
 7682              	.L502:
 7683              	@ main.c:3909: 	} else UaPutK("\r\nSD Card Init ERROR ");
 7684 0844 1748     		ldr	r0, .L619+80	@,
 7685 0846 FFF7FEFF 		bl	UaPutK	@
 7686 084a 174B     		ldr	r3, .L619+84	@ tmp613,
 7687 084c 0393     		str	r3, [sp, #12]	@ tmp613, %sfp
 7688 084e FFF7F2BB 		b	.L503	@
 7689              	.L620:
 7690 0852 00BF     		.align	2
 7691              	.L619:
 7692 0854 30000000 		.word	.LC66
 7693 0858 00000000 		.word	buffer.8851
 7694 085c 34000000 		.word	.LC67
 7695 0860 00020000 		.word	buffer.8851+512
ARM GAS  /tmp/ccDfNsWv.s 			page 136


 7696 0864 00010000 		.word	.LC81
 7697 0868 398EE338 		.word	954437177
 7698 086c 10E000E0 		.word	-536813552
 7699 0870 00000000 		.word	Timt
 7700 0874 40000000 		.word	.LC69
 7701 0878 F4010000 		.word	.LC126
 7702 087c 14020000 		.word	.LC128
 7703 0880 28020000 		.word	.LC129
 7704 0884 41420F00 		.word	1000001
 7705 0888 5B268B1C 		.word	478881371
 7706 088c 00000000 		.word	p_Fifo1
 7707 0890 50020000 		.word	.LC131
 7708 0894 5C020000 		.word	.LC132
 7709 0898 64020000 		.word	.LC133
 7710 089c CF0DD626 		.word	651562447
 7711 08a0 3C020000 		.word	.LC130
 7712 08a4 14000000 		.word	.LC100
 7713 08a8 00000000 		.word	CardType
 7714 08ac 3C000000 		.word	.LC68
 7715              		.size	MemCard_Menu, .-MemCard_Menu
 7716              		.section	.text.CopyClock,"ax",%progbits
 7717              		.align	1
 7718              		.p2align 2,,3
 7719              		.global	CopyClock
 7720              		.syntax unified
 7721              		.thumb
 7722              		.thumb_func
 7723              		.fpu softvfp
 7724              		.type	CopyClock, %function
 7725              	CopyClock:
 7726              		@ args = 0, pretend = 0, frame = 8
 7727              		@ frame_needed = 0, uses_anonymous_args = 0
 7728 0000 30B5     		push	{r4, r5, lr}	@
 7729 0002 0D46     		mov	r5, r1	@ lrtc, lrtc
 7730 0004 83B0     		sub	sp, sp, #12	@,,
 7731              	@ main.c:4978: void CopyClock(char *dczas, T_RTC *lrtc)	{
 7732 0006 0446     		mov	r4, r0	@ dczas, dczas
 7733              	@ main.c:4984: 		dczas += 0;	memcpy(dczas,unt2str(lrtc->yer,tbuf,4) ,4);
 7734 0008 6946     		mov	r1, sp	@,
 7735 000a E888     		ldrh	r0, [r5, #6]	@, lrtc_21(D)->yer
 7736 000c 0422     		movs	r2, #4	@,
 7737 000e FFF7FEFF 		bl	unt2str	@
 7738 0012 0368     		ldr	r3, [r0]	@ unaligned	@ tmp138, MEM[(char * {ref-all})_3]
 7739              	@ main.c:4985: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 7740 0014 6946     		mov	r1, sp	@,
 7741              	@ main.c:4984: 		dczas += 0;	memcpy(dczas,unt2str(lrtc->yer,tbuf,4) ,4);
 7742 0016 2360     		str	r3, [r4]	@ unaligned	@ tmp138, MEM[(char * {ref-all})dczas_19(D)]
 7743              	@ main.c:4985: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 7744 0018 2879     		ldrb	r0, [r5, #4]	@ zero_extendqisi2	@, lrtc_21(D)->mon
 7745 001a 0222     		movs	r2, #2	@,
 7746 001c FFF7FEFF 		bl	unt2str	@
 7747 0020 0388     		ldrh	r3, [r0]	@ unaligned	@ _26, MEM[(char * {ref-all})_6]
 7748              	@ main.c:4986: 		dczas += 3; memcpy(dczas,unt2str(lrtc->mdy,tbuf,2) ,2);
 7749 0022 6946     		mov	r1, sp	@,
 7750              	@ main.c:4985: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 7751 0024 A4F80530 		strh	r3, [r4, #5]	@ unaligned	@ _26, MEM[(char * {ref-all})dczas_19(D) + 5B]
 7752              	@ main.c:4986: 		dczas += 3; memcpy(dczas,unt2str(lrtc->mdy,tbuf,2) ,2);
ARM GAS  /tmp/ccDfNsWv.s 			page 137


 7753 0028 E878     		ldrb	r0, [r5, #3]	@ zero_extendqisi2	@, lrtc_21(D)->mdy
 7754 002a 0222     		movs	r2, #2	@,
 7755 002c FFF7FEFF 		bl	unt2str	@
 7756 0030 0388     		ldrh	r3, [r0]	@ unaligned	@ _29, MEM[(char * {ref-all})_9]
 7757              	@ main.c:4987: 		dczas += 3; memcpy(dczas,unt2str(lrtc->hor,tbuf,2) ,2);
 7758 0032 6946     		mov	r1, sp	@,
 7759              	@ main.c:4986: 		dczas += 3; memcpy(dczas,unt2str(lrtc->mdy,tbuf,2) ,2);
 7760 0034 2381     		strh	r3, [r4, #8]	@ unaligned	@ _29, MEM[(char * {ref-all})dczas_19(D) + 8B]
 7761              	@ main.c:4987: 		dczas += 3; memcpy(dczas,unt2str(lrtc->hor,tbuf,2) ,2);
 7762 0036 A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2	@, lrtc_21(D)->hor
 7763 0038 0222     		movs	r2, #2	@,
 7764 003a FFF7FEFF 		bl	unt2str	@
 7765 003e 0388     		ldrh	r3, [r0]	@ unaligned	@ _32, MEM[(char * {ref-all})_12]
 7766              	@ main.c:4988: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 7767 0040 6946     		mov	r1, sp	@,
 7768              	@ main.c:4987: 		dczas += 3; memcpy(dczas,unt2str(lrtc->hor,tbuf,2) ,2);
 7769 0042 A4F80B30 		strh	r3, [r4, #11]	@ unaligned	@ _32, MEM[(char * {ref-all})dczas_19(D) + 11B]
 7770              	@ main.c:4988: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 7771 0046 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2	@, lrtc_21(D)->min
 7772 0048 0222     		movs	r2, #2	@,
 7773 004a FFF7FEFF 		bl	unt2str	@
 7774 004e 0388     		ldrh	r3, [r0]	@ unaligned	@ _35, MEM[(char * {ref-all})_15]
 7775              	@ main.c:4989: 		dczas += 3; memcpy(dczas,unt2str(lrtc->sec,tbuf,2) ,2);
 7776 0050 6946     		mov	r1, sp	@,
 7777              	@ main.c:4988: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 7778 0052 E381     		strh	r3, [r4, #14]	@ unaligned	@ _35, MEM[(char * {ref-all})dczas_19(D) + 14B]
 7779              	@ main.c:4989: 		dczas += 3; memcpy(dczas,unt2str(lrtc->sec,tbuf,2) ,2);
 7780 0054 2878     		ldrb	r0, [r5]	@ zero_extendqisi2	@, lrtc_21(D)->sec
 7781 0056 0222     		movs	r2, #2	@,
 7782 0058 FFF7FEFF 		bl	unt2str	@
 7783 005c 0388     		ldrh	r3, [r0]	@ unaligned	@ _38, MEM[(char * {ref-all})_18]
 7784 005e A4F81130 		strh	r3, [r4, #17]	@ unaligned	@ _38, MEM[(char * {ref-all})dczas_19(D) + 17B]
 7785              	@ main.c:4991: 	}
 7786 0062 03B0     		add	sp, sp, #12	@,,
 7787              		@ sp needed	@
 7788 0064 30BD     		pop	{r4, r5, pc}	@
 7789              		.size	CopyClock, .-CopyClock
 7790 0066 00BF     		.section	.text.Intro2,"ax",%progbits
 7791              		.align	1
 7792              		.p2align 2,,3
 7793              		.global	Intro2
 7794              		.syntax unified
 7795              		.thumb
 7796              		.thumb_func
 7797              		.fpu softvfp
 7798              		.type	Intro2, %function
 7799              	Intro2:
 7800              		@ args = 0, pretend = 0, frame = 32
 7801              		@ frame_needed = 0, uses_anonymous_args = 0
 7802 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 7803              	@ main.c:2853: 		uint32_t tim=0;
 7804 0004 0025     		movs	r5, #0	@ tmp236,
 7805              	@ main.c:5170: 		DMA1_Channel1->CCR =  DMA_CCR1_PL_0 | DMA_CCR1_MSIZE_0 | DMA_CCR1_PSIZE_0 | DMA_CC
 7806 0006 41F2A256 		movw	r6, #5538	@ tmp246,
 7807              	@ main.c:2845: void Intro2(void){	
 7808 000a 8BB0     		sub	sp, sp, #44	@,,
 7809              	@ main.c:2848: 		UaPutS("\r\n Start programu... \r\n"); 
ARM GAS  /tmp/ccDfNsWv.s 			page 138


 7810 000c B448     		ldr	r0, .L680	@,
 7811 000e FFF7FEFF 		bl	UaPutS	@
 7812              	@ main.c:2875: 		UaPutS("\r\n Debug0..."); 
 7813 0012 B448     		ldr	r0, .L680+4	@,
 7814              	@ main.c:2853: 		uint32_t tim=0;
 7815 0014 0995     		str	r5, [sp, #36]	@ tmp236, tim
 7816              	@ main.c:2875: 		UaPutS("\r\n Debug0..."); 
 7817 0016 FFF7FEFF 		bl	UaPutS	@
 7818              	@ main.c:2876: 		RtcInit();
 7819 001a FFF7FEFF 		bl	RtcInit	@
 7820              	@ main.c:2877: 		rtc_GetTime(1,&Rtc);
 7821 001e B249     		ldr	r1, .L680+8	@,
 7822 0020 0120     		movs	r0, #1	@,
 7823 0022 FFF7FEFF 		bl	rtc_GetTime	@
 7824              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 7825 0026 B148     		ldr	r0, .L680+12	@ tmp249,
 7826              	@ main.c:5165: 		RCC->AHBENR   |= RCC_AHBENR_DMA1EN;					// enable clock for DMA1
 7827 0028 B149     		ldr	r1, .L680+16	@ tmp239,
 7828              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 7829 002a 0446     		mov	r4, r0	@ tmp252, tmp249
 7830              	@ main.c:5165: 		RCC->AHBENR   |= RCC_AHBENR_DMA1EN;					// enable clock for DMA1
 7831 002c 4A69     		ldr	r2, [r1, #20]	@ _190, MEM[(struct RCC_TypeDef *)1073876992B].AHBENR
 7832              	@ main.c:5166: 		DMA1_Channel1->CCR  = 0;										// Disable channel
 7833 002e B14B     		ldr	r3, .L680+20	@ tmp241,
 7834              	@ main.c:5165: 		RCC->AHBENR   |= RCC_AHBENR_DMA1EN;					// enable clock for DMA1
 7835 0030 42F00102 		orr	r2, r2, #1	@ _191, _190,
 7836 0034 4A61     		str	r2, [r1, #20]	@ _191, MEM[(struct RCC_TypeDef *)1073876992B].AHBENR
 7837              	@ main.c:5168: 		DMA1_Channel1->CPAR = (uint32_t)&ADC1->DR;	// Source address:
 7838 0036 A1F56B41 		sub	r1, r1, #60160	@ tmp244, tmp244,
 7839 003a B439     		subs	r1, r1, #180	@ tmp244, tmp244,
 7840              	@ main.c:5183: 		GPIOB->CRH   |= 0x00000090;	// PB9 out
 7841 003c AE4A     		ldr	r2, .L680+24	@ tmp247,
 7842              	@ main.c:5166: 		DMA1_Channel1->CCR  = 0;										// Disable channel
 7843 003e 1D60     		str	r5, [r3]	@ tmp236, MEM[(struct DMA_Channel_TypeDef *)1073872904B].CCR
 7844              	@ main.c:5168: 		DMA1_Channel1->CPAR = (uint32_t)&ADC1->DR;	// Source address:
 7845 0040 9960     		str	r1, [r3, #8]	@ tmp244, MEM[(struct DMA_Channel_TypeDef *)1073872904B].CPAR
 7846              	@ main.c:5170: 		DMA1_Channel1->CCR =  DMA_CCR1_PL_0 | DMA_CCR1_MSIZE_0 | DMA_CCR1_PSIZE_0 | DMA_CC
 7847 0042 1E60     		str	r6, [r3]	@ tmp246, MEM[(struct DMA_Channel_TypeDef *)1073872904B].CCR
 7848              	@ main.c:5183: 		GPIOB->CRH   |= 0x00000090;	// PB9 out
 7849 0044 5368     		ldr	r3, [r2, #4]	@ _192, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 7850              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 7851 0046 AD49     		ldr	r1, .L680+28	@ tmp496,
 7852              	@ main.c:5183: 		GPIOB->CRH   |= 0x00000090;	// PB9 out
 7853 0048 43F09003 		orr	r3, r3, #144	@ _193, _192,
 7854 004c 5360     		str	r3, [r2, #4]	@ _193, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 7855              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 7856 004e 8368     		ldr	r3, [r0, #8]	@ _194, MEM[(struct SysTick_Type *)3758153744B].VAL
 7857 0050 0B60     		str	r3, [r1]	@ _194, delay_us
 7858              	.L624:
 7859              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 7860 0052 0B68     		ldr	r3, [r1]	@ delay_us.48_195, delay_us
 7861 0054 A268     		ldr	r2, [r4, #8]	@ _196, MEM[(struct SysTick_Type *)3758153744B].VAL
 7862 0056 9B1A     		subs	r3, r3, r2	@ tmp253, delay_us.48_195, _196
 7863 0058 592B     		cmp	r3, #89	@ tmp253,
 7864 005a FAD9     		bls	.L624	@,
 7865              	@ main.c:5190: 		TIM4->CCMR2 = TIM_CCMR2_OC4M_2 | TIM_CCMR2_OC4M_1;
 7866 005c 4FF4C045 		mov	r5, #24576	@ tmp270,
ARM GAS  /tmp/ccDfNsWv.s 			page 139


 7867              	@ main.c:5191: 		TIM4->CCER  = TIM_CCER_CC4E;
 7868 0060 4FF48050 		mov	r0, #4096	@ tmp273,
 7869              	@ main.c:5186: 		TIM4->PSC   = 100-1;
 7870 0064 4FF0630E 		mov	lr, #99	@ tmp258,
 7871              	@ main.c:5187:     TIM4->ARR   = 120-1;
 7872 0068 4FF0770C 		mov	ip, #119	@ tmp261,
 7873              	@ main.c:5188:     TIM4->CCR4  = 10;		//width pulse on PB9 out channel
 7874 006c 0A27     		movs	r7, #10	@ tmp264,
 7875              	@ main.c:5189: 		TIM4->CCMR1 = 0;
 7876 006e 0026     		movs	r6, #0	@ tmp267,
 7877              	@ main.c:5185: 		RCC->APB1ENR |= RCC_APB1ENR_TIM4EN;
 7878 0070 9F4B     		ldr	r3, .L680+16	@ tmp254,
 7879 0072 DA69     		ldr	r2, [r3, #28]	@ _198, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 7880 0074 42F00402 		orr	r2, r2, #4	@ _199, _198,
 7881 0078 DA61     		str	r2, [r3, #28]	@ _199, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 7882              	@ main.c:5186: 		TIM4->PSC   = 100-1;
 7883 007a A14A     		ldr	r2, .L680+32	@ tmp256,
 7884 007c A2F828E0 		strh	lr, [r2, #40]	@ movhi	@ tmp258, MEM[(struct TIM_TypeDef *)1073743872B].PSC
 7885              	@ main.c:5187:     TIM4->ARR   = 120-1;
 7886 0080 A2F82CC0 		strh	ip, [r2, #44]	@ movhi	@ tmp261, MEM[(struct TIM_TypeDef *)1073743872B].ARR
 7887              	@ main.c:5188:     TIM4->CCR4  = 10;		//width pulse on PB9 out channel
 7888 0084 A2F84070 		strh	r7, [r2, #64]	@ movhi	@ tmp264, MEM[(struct TIM_TypeDef *)1073743872B].CCR4
 7889              	@ main.c:5189: 		TIM4->CCMR1 = 0;
 7890 0088 1683     		strh	r6, [r2, #24]	@ movhi	@ tmp267, MEM[(struct TIM_TypeDef *)1073743872B].CCMR1
 7891              	@ main.c:5190: 		TIM4->CCMR2 = TIM_CCMR2_OC4M_2 | TIM_CCMR2_OC4M_1;
 7892 008a 9583     		strh	r5, [r2, #28]	@ movhi	@ tmp270, MEM[(struct TIM_TypeDef *)1073743872B].CCMR2
 7893              	@ main.c:5191: 		TIM4->CCER  = TIM_CCER_CC4E;
 7894 008c 1084     		strh	r0, [r2, #32]	@ movhi	@ tmp273, MEM[(struct TIM_TypeDef *)1073743872B].CCER
 7895              	@ main.c:5195: 		RCC->APB2ENR  |= RCC_APB2ENR_ADC1EN;			// enable clock for ADC1
 7896 008e 9A69     		ldr	r2, [r3, #24]	@ _200, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 7897              	@ main.c:5197: 		GPIOA->CRL = (GPIOA->CRL & 0xffff0000);
 7898 0090 05F18045 		add	r5, r5, #1073741824	@ tmp278, tmp278,
 7899              	@ main.c:5195: 		RCC->APB2ENR  |= RCC_APB2ENR_ADC1EN;			// enable clock for ADC1
 7900 0094 42F40072 		orr	r2, r2, #512	@ _201, _200,
 7901 0098 9A61     		str	r2, [r3, #24]	@ _201, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 7902              	@ main.c:5196: 		RCC->CFGR 		|= RCC_CFGR_ADCPRE_DIV4;  	// 2/4/6/8 str98
 7903 009a 5868     		ldr	r0, [r3, #4]	@ _202, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 7904              	@ main.c:5197: 		GPIOA->CRL = (GPIOA->CRL & 0xffff0000);
 7905 009c 05F52845 		add	r5, r5, #43008	@ tmp278, tmp278,
 7906              	@ main.c:5196: 		RCC->CFGR 		|= RCC_CFGR_ADCPRE_DIV4;  	// 2/4/6/8 str98
 7907 00a0 40F48040 		orr	r0, r0, #16384	@ _203, _202,
 7908 00a4 5860     		str	r0, [r3, #4]	@ _203, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 7909              	@ main.c:5197: 		GPIOA->CRL = (GPIOA->CRL & 0xffff0000);
 7910 00a6 2B68     		ldr	r3, [r5]	@ _204, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 7911              	@ main.c:5200: 		ADC1->CR1 |= ADC_CR1_SCAN;	// multi channel mode
 7912 00a8 964A     		ldr	r2, .L680+36	@ tmp281,
 7913              	@ main.c:5197: 		GPIOA->CRL = (GPIOA->CRL & 0xffff0000);
 7914 00aa 1B0C     		lsrs	r3, r3, #16	@ _205, _204,
 7915 00ac 1B04     		lsls	r3, r3, #16	@ _205, _205,
 7916 00ae 2B60     		str	r3, [r5]	@ _205, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 7917              	@ main.c:5200: 		ADC1->CR1 |= ADC_CR1_SCAN;	// multi channel mode
 7918 00b0 5368     		ldr	r3, [r2, #4]	@ _206, MEM[(struct ADC_TypeDef *)1073816576B].CR1
 7919              	@ main.c:5201: 		ADC1->CR2 =  ADC_CR2_DMA | ADC_CR2_ADON | ADC_CR2_EXTTRIG | ADC_CR2_EXTSEL_2 | ADC
 7920 00b2 9548     		ldr	r0, .L680+40	@ tmp284,
 7921              	@ main.c:5200: 		ADC1->CR1 |= ADC_CR1_SCAN;	// multi channel mode
 7922 00b4 43F48073 		orr	r3, r3, #256	@ _207, _206,
 7923 00b8 5360     		str	r3, [r2, #4]	@ _207, MEM[(struct ADC_TypeDef *)1073816576B].CR1
ARM GAS  /tmp/ccDfNsWv.s 			page 140


 7924              	@ main.c:5201: 		ADC1->CR2 =  ADC_CR2_DMA | ADC_CR2_ADON | ADC_CR2_EXTTRIG | ADC_CR2_EXTSEL_2 | ADC
 7925 00ba 9060     		str	r0, [r2, #8]	@ tmp284, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 7926              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 7927 00bc A368     		ldr	r3, [r4, #8]	@ _208, MEM[(struct SysTick_Type *)3758153744B].VAL
 7928              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 7929 00be 8B4D     		ldr	r5, .L680+12	@ tmp288,
 7930              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 7931 00c0 0B60     		str	r3, [r1]	@ _208, delay_us
 7932              	.L625:
 7933              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 7934 00c2 0B68     		ldr	r3, [r1]	@ delay_us.48_209, delay_us
 7935 00c4 AA68     		ldr	r2, [r5, #8]	@ _210, MEM[(struct SysTick_Type *)3758153744B].VAL
 7936 00c6 9B1A     		subs	r3, r3, r2	@ tmp289, delay_us.48_209, _210
 7937 00c8 082B     		cmp	r3, #8	@ tmp289,
 7938 00ca FAD9     		bls	.L625	@,
 7939              	@ main.c:5211: 		ADC1->SMPR2 = 7<<0*3 | 7<<1*3 ;
 7940 00cc 3F21     		movs	r1, #63	@ tmp295,
 7941              	@ main.c:5206: 		ADC1->SQR1  = 0<<20;
 7942 00ce 0024     		movs	r4, #0	@ tmp291,
 7943              	@ main.c:5209: 		ADC1->SQR3  = 0<<1*5 | 1<<0*5 ;
 7944 00d0 0120     		movs	r0, #1	@ tmp293,
 7945              	@ main.c:5206: 		ADC1->SQR1  = 0<<20;
 7946 00d2 8C4B     		ldr	r3, .L680+36	@ tmp290,
 7947              	@ main.c:5214: 		while(ADC1->CR2 & ADC_CR2_RSTCAL);		// wait for reset
 7948 00d4 1A46     		mov	r2, r3	@ tmp298, tmp290
 7949              	@ main.c:5206: 		ADC1->SQR1  = 0<<20;
 7950 00d6 DC62     		str	r4, [r3, #44]	@ tmp291, MEM[(struct ADC_TypeDef *)1073816576B].SQR1
 7951              	@ main.c:5209: 		ADC1->SQR3  = 0<<1*5 | 1<<0*5 ;
 7952 00d8 5863     		str	r0, [r3, #52]	@ tmp293, MEM[(struct ADC_TypeDef *)1073816576B].SQR3
 7953              	@ main.c:5211: 		ADC1->SMPR2 = 7<<0*3 | 7<<1*3 ;
 7954 00da 1961     		str	r1, [r3, #16]	@ tmp295, MEM[(struct ADC_TypeDef *)1073816576B].SMPR2
 7955              	@ main.c:5213: 		ADC1->CR2 |= ADC_CR2_RSTCAL;					// reset calibration
 7956 00dc 9968     		ldr	r1, [r3, #8]	@ _212, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 7957 00de 41F00801 		orr	r1, r1, #8	@ _213, _212,
 7958 00e2 9960     		str	r1, [r3, #8]	@ _213, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 7959              	.L626:
 7960              	@ main.c:5214: 		while(ADC1->CR2 & ADC_CR2_RSTCAL);		// wait for reset
 7961 00e4 9368     		ldr	r3, [r2, #8]	@ _214, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 7962 00e6 1807     		lsls	r0, r3, #28	@, _214,
 7963 00e8 FCD4     		bmi	.L626	@,
 7964              	@ main.c:5215: 		ADC1->CR2 |= ADC_CR2_CAL;							// start calibration
 7965 00ea 9168     		ldr	r1, [r2, #8]	@ _216, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 7966              	@ main.c:5216: 		while(ADC1->CR2 & ADC_CR2_CAL);				// wait till calibration is done
 7967 00ec 854B     		ldr	r3, .L680+36	@ tmp302,
 7968              	@ main.c:5215: 		ADC1->CR2 |= ADC_CR2_CAL;							// start calibration
 7969 00ee 41F00401 		orr	r1, r1, #4	@ _217, _216,
 7970 00f2 9160     		str	r1, [r2, #8]	@ _217, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 7971              	.L627:
 7972              	@ main.c:5216: 		while(ADC1->CR2 & ADC_CR2_CAL);				// wait till calibration is done
 7973 00f4 9A68     		ldr	r2, [r3, #8]	@ _218, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 7974 00f6 5107     		lsls	r1, r2, #29	@, _218,
 7975 00f8 FCD4     		bmi	.L627	@,
 7976              	@ main.c:5217: 		ADC1->CR2 |= ADC_CR2_ADON;						// start conversion
 7977 00fa 9A68     		ldr	r2, [r3, #8]	@ _220, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 7978              	@ main.c:5218: 		while( !( ADC1->SR & ADC_SR_STRT ));
 7979 00fc 8149     		ldr	r1, .L680+36	@ tmp306,
 7980              	@ main.c:5217: 		ADC1->CR2 |= ADC_CR2_ADON;						// start conversion
ARM GAS  /tmp/ccDfNsWv.s 			page 141


 7981 00fe 42F00102 		orr	r2, r2, #1	@ _221, _220,
 7982 0102 9A60     		str	r2, [r3, #8]	@ _221, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 7983              	.L628:
 7984              	@ main.c:5218: 		while( !( ADC1->SR & ADC_SR_STRT ));
 7985 0104 0B68     		ldr	r3, [r1]	@ _222, MEM[(struct ADC_TypeDef *)1073816576B].SR
 7986 0106 DA06     		lsls	r2, r3, #27	@, _222,
 7987 0108 FCD5     		bpl	.L628	@,
 7988              	@ main.c:5221: 		TIM3->CR1 = TIM_CR1_CEN;
 7989 010a 0122     		movs	r2, #1	@ tmp310,
 7990 010c 7F4B     		ldr	r3, .L680+44	@ tmp308,
 7991              	@ main.c:5222: 		while( ! (ADC1->SR & ADC_SR_EOC) );
 7992 010e 7D49     		ldr	r1, .L680+36	@ tmp311,
 7993              	@ main.c:5221: 		TIM3->CR1 = TIM_CR1_CEN;
 7994 0110 1A80     		strh	r2, [r3]	@ movhi	@ tmp310, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 7995              	.L629:
 7996              	@ main.c:5222: 		while( ! (ADC1->SR & ADC_SR_EOC) );
 7997 0112 0B68     		ldr	r3, [r1]	@ _224, MEM[(struct ADC_TypeDef *)1073816576B].SR
 7998 0114 9B07     		lsls	r3, r3, #30	@, _224,
 7999 0116 FCD5     		bpl	.L629	@,
 8000              	@ main.c:2880: 		f7_dma1 = 0;
 8001 0118 0026     		movs	r6, #0	@ tmp315,
 8002              	@ main.c:2901: 		TFT_Fill(wXmin-1,wYmin-1,wXmax+1,wYmin-1,DGRAY);	// pozioma dolna
 8003 011a 47F6EF35 		movw	r5, #31727	@ tmp316,
 8004              	@ main.c:2880: 		f7_dma1 = 0;
 8005 011e 7C4C     		ldr	r4, .L680+48	@ tmp314,
 8006              	@ main.c:2901: 		TFT_Fill(wXmin-1,wYmin-1,wXmax+1,wYmin-1,DGRAY);	// pozioma dolna
 8007 0120 3346     		mov	r3, r6	@, tmp315
 8008              	@ main.c:2880: 		f7_dma1 = 0;
 8009 0122 6401     		lsls	r4, r4, #5	@ _3, tmp314,
 8010 0124 E661     		str	r6, [r4, #28]	@ tmp315, *_5
 8011              	@ main.c:2901: 		TFT_Fill(wXmin-1,wYmin-1,wXmax+1,wYmin-1,DGRAY);	// pozioma dolna
 8012 0126 3146     		mov	r1, r6	@, tmp315
 8013 0128 0095     		str	r5, [sp]	@ tmp316,
 8014 012a 40F23F12 		movw	r2, #319	@,
 8015 012e 1E20     		movs	r0, #30	@,
 8016 0130 FFF7FEFF 		bl	TFT_Fill	@
 8017              	@ main.c:2902: 		TFT_Fill(wXmin-1,wYmax+1,wXmax+1,wYmax+1,DGRAY);	// pozioma górna
 8018 0134 E423     		movs	r3, #228	@,
 8019 0136 0095     		str	r5, [sp]	@ tmp316,
 8020 0138 1946     		mov	r1, r3	@,
 8021 013a 40F23F12 		movw	r2, #319	@,
 8022 013e 1E20     		movs	r0, #30	@,
 8023 0140 FFF7FEFF 		bl	TFT_Fill	@
 8024              	@ main.c:2903: 		TFT_Fill(wXmin-1,wYmin-1,wXmin-1,wYmax+1,DGRAY);	// pionowa lewa
 8025 0144 1E22     		movs	r2, #30	@,
 8026 0146 3146     		mov	r1, r6	@, tmp315
 8027 0148 1046     		mov	r0, r2	@,
 8028 014a 0095     		str	r5, [sp]	@ tmp316,
 8029 014c E423     		movs	r3, #228	@,
 8030 014e FFF7FEFF 		bl	TFT_Fill	@
 8031              	@ main.c:2904: 		TFT_Fill(wXmax+1,wYmin-1,wXmax+1,wYmax+1,DGRAY);	// pionowa prawa
 8032 0152 40F23F12 		movw	r2, #319	@,
 8033 0156 3146     		mov	r1, r6	@, tmp315
 8034 0158 1046     		mov	r0, r2	@,
 8035 015a 0095     		str	r5, [sp]	@ tmp316,
 8036 015c E423     		movs	r3, #228	@,
 8037 015e FFF7FEFF 		bl	TFT_Fill	@
ARM GAS  /tmp/ccDfNsWv.s 			page 142


 8038              	@ main.c:2908: 			yb[f] =wYmin;	
 8039 0162 0123     		movs	r3, #1	@ tmp321,
 8040 0164 DFF8DCA1 		ldr	r10, .L680+100	@ tmp498,
 8041              	@ main.c:2909: 			yn[f] =wYmin;
 8042 0168 6A4D     		ldr	r5, .L680+52	@ tmp499,
 8043              	@ main.c:2925: 		UaPutS("\r\n wXlen ");	sint2uart(wXlen); 
 8044 016a 6B48     		ldr	r0, .L680+56	@,
 8045              	@ main.c:2908: 			yb[f] =wYmin;	
 8046 016c 8AF80030 		strb	r3, [r10]	@ tmp321, yb
 8047              	@ main.c:2909: 			yn[f] =wYmin;
 8048 0170 2B70     		strb	r3, [r5]	@ tmp321, yn
 8049              	@ main.c:2925: 		UaPutS("\r\n wXlen ");	sint2uart(wXlen); 
 8050 0172 FFF7FEFF 		bl	UaPutS	@
 8051 0176 4FF49070 		mov	r0, #288	@,
 8052 017a FFF7FEFF 		bl	sint2uart	@
 8053              	@ main.c:2928: 		DMA1_Channel1->CNDTR = wXlen*nMES;					//Buffor size 
 8054 017e 4FF49070 		mov	r0, #288	@ tmp330,
 8055              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 8056 0182 4FF4006C 		mov	ip, #2048	@ tmp332,
 8057              	@ main.c:2951: 			dma_buf[i]=0x10;
 8058 0186 1027     		movs	r7, #16	@ tmp345,
 8059              	@ main.c:2927: 		DMA1_Channel1->CMAR = (uint32_t)dma_buf;	 	//Destination address:
 8060 0188 5A4A     		ldr	r2, .L680+20	@ tmp328,
 8061              	@ main.c:2936: 		TIM4->ARR   = BKP->DR42; //1200-1
 8062 018a 3346     		mov	r3, r6	@ ivtmp.683, tmp315
 8063              	@ main.c:2927: 		DMA1_Channel1->CMAR = (uint32_t)dma_buf;	 	//Destination address:
 8064 018c 634E     		ldr	r6, .L680+60	@ tmp500,
 8065              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 8066 018e 6449     		ldr	r1, .L680+64	@ tmp331,
 8067              	@ main.c:2927: 		DMA1_Channel1->CMAR = (uint32_t)dma_buf;	 	//Destination address:
 8068 0190 D660     		str	r6, [r2, #12]	@ tmp500, MEM[(struct DMA_Channel_TypeDef *)1073872904B].CMAR
 8069              	@ main.c:2928: 		DMA1_Channel1->CNDTR = wXlen*nMES;					//Buffor size 
 8070 0192 5060     		str	r0, [r2, #4]	@ tmp330, MEM[(struct DMA_Channel_TypeDef *)1073872904B].CNDTR
 8071              	@ main.c:2935: 		TIM4->PSC   = BKP->DR41; //1000-1
 8072 0194 6348     		ldr	r0, .L680+68	@ tmp333,
 8073              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 8074 0196 C1F800C0 		str	ip, [r1]	@ tmp332, MEM[(struct NVIC_Type *)3758153984B].ISER
 8075              	@ main.c:2935: 		TIM4->PSC   = BKP->DR41; //1000-1
 8076 019a B0F8B820 		ldrh	r2, [r0, #184]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8077 019e 5849     		ldr	r1, .L680+32	@ tmp336,
 8078 01a0 92B2     		uxth	r2, r2	@ _9, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8079 01a2 0A85     		strh	r2, [r1, #40]	@ movhi	@ _9, MEM[(struct TIM_TypeDef *)1073743872B].PSC
 8080              	@ main.c:2936: 		TIM4->ARR   = BKP->DR42; //1200-1
 8081 01a4 B0F8BC20 		ldrh	r2, [r0, #188]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR42
 8082 01a8 92B2     		uxth	r2, r2	@ _10, MEM[(struct BKP_TypeDef *)1073769472B].DR42
 8083 01aa 8A85     		strh	r2, [r1, #44]	@ movhi	@ _10, MEM[(struct TIM_TypeDef *)1073743872B].ARR
 8084              	.L630:
 8085              	@ main.c:2951: 			dma_buf[i]=0x10;
 8086 01ac 26F81370 		strh	r7, [r6, r3, lsl #1]	@ movhi	@ tmp345, dma_buf
 8087 01b0 0133     		adds	r3, r3, #1	@ ivtmp.683, ivtmp.683,
 8088              	@ main.c:2948: 		for(u16 i=0;i<wXlen;i++){
 8089 01b2 B3F5907F 		cmp	r3, #288	@ ivtmp.683,
 8090 01b6 F9D1     		bne	.L630	@,
 8091              	@ main.c:2855: 		u16 x,c_dma1,r_dma_buf,idx,c_num,n1=10,cnt_dma=0;
 8092 01b8 4FF00008 		mov	r8, #0	@ cnt_dma,
 8093 01bc 04F10C03 		add	r3, r4, #12	@ _82, _3,
 8094 01c0 0593     		str	r3, [sp, #20]	@ _82, %sfp
ARM GAS  /tmp/ccDfNsWv.s 			page 143


 8095              	.L631:
 8096              	@ main.c:2956: 			if( STCLK_MS*BKP->DR41 < (trg0 - SysTick->VAL) ){
 8097 01c2 42F22830 		movw	r0, #9000	@ tmp367,
 8098 01c6 584F     		ldr	r7, .L680+72	@ tmp523,
 8099 01c8 08F10102 		add	r2, r8, #1	@ tmp351, cnt_dma,
 8100 01cc A7FB0213 		umull	r1, r3, r7, r2	@ tmp518, tmp352, tmp523, tmp351
 8101 01d0 5449     		ldr	r1, .L680+68	@ tmp524,
 8102 01d2 464C     		ldr	r4, .L680+12	@ tmp526,
 8103 01d4 B1F8B810 		ldrh	r1, [r1, #184]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8104 01d8 9B09     		lsrs	r3, r3, #6	@ _95, tmp352,
 8105 01da 00FB01F0 		mul	r0, r0, r1	@ tmp366, tmp367, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8106 01de 5349     		ldr	r1, .L680+76	@ tmp525,
 8107 01e0 03EBC303 		add	r3, r3, r3, lsl #3	@ tmp356, _95, _95,
 8108 01e4 0968     		ldr	r1, [r1]	@ trg0.158_16, trg0
 8109 01e6 A468     		ldr	r4, [r4, #8]	@ _17, MEM[(struct SysTick_Type *)3758153744B].VAL
 8110 01e8 A2EB4313 		sub	r3, r2, r3, lsl #5	@ _95, tmp351, tmp356,
 8111 01ec 091B     		subs	r1, r1, r4	@ tmp368, trg0.158_16, _17
 8112 01ee 8842     		cmp	r0, r1	@ tmp366, tmp368
 8113 01f0 1FFA83F9 		uxth	r9, r3	@ _152, _95
 8114 01f4 4246     		mov	r2, r8	@ _91, cnt_dma
 8115 01f6 13D2     		bcs	.L632	@,
 8116              	@ main.c:2959: 				dma_buf[cnt_dma]=0x1;
 8117 01f8 0120     		movs	r0, #1	@ tmp373,
 8118 01fa 1A18     		adds	r2, r3, r0	@ tmp374, _95,
 8119 01fc A7FB0271 		umull	r7, r1, r7, r2	@ tmp519, tmp375, tmp527, tmp374
 8120 0200 8909     		lsrs	r1, r1, #6	@ _49, tmp375,
 8121 0202 01EBC101 		add	r1, r1, r1, lsl #3	@ tmp379, _49, _49,
 8122 0206 A2EB4111 		sub	r1, r2, r1, lsl #5	@ _49, tmp374, tmp379,
 8123              	@ main.c:2957: 				trg0 = SysTick->VAL;
 8124 020a 384A     		ldr	r2, .L680+12	@ tmp528,
 8125 020c 474C     		ldr	r4, .L680+76	@ tmp529,
 8126 020e 9268     		ldr	r2, [r2, #8]	@ _19, MEM[(struct SysTick_Type *)3758153744B].VAL
 8127              	@ main.c:2958: 				cnt_dma=(cnt_dma+1)%wXlen;
 8128 0210 C846     		mov	r8, r9	@ cnt_dma, _152
 8129              	@ main.c:2957: 				trg0 = SysTick->VAL;
 8130 0212 2260     		str	r2, [r4]	@ _19, trg0
 8131              	@ main.c:2959: 				dma_buf[cnt_dma]=0x1;
 8132 0214 26F81300 		strh	r0, [r6, r3, lsl #1]	@ movhi	@ tmp373, dma_buf
 8133 0218 1A46     		mov	r2, r3	@ _91, _95
 8134 021a 0B46     		mov	r3, r1	@ _95, _49
 8135 021c 1FFA81F9 		uxth	r9, r1	@ _152, _95
 8136              	.L632:
 8137              	@ main.c:2964: 			if (c_dma1 != wXlen-cnt_dma){
 8138 0220 0499     		ldr	r1, [sp, #16]	@ c_dma1, %sfp
 8139 0222 C2F59072 		rsb	r2, r2, #288	@ tmp389, _91,
 8140 0226 9142     		cmp	r1, r2	@ c_dma1, tmp389
 8141 0228 24D1     		bne	.L673	@,
 8142              	.L633:
 8143              	@ main.c:3071: 			if( STCLK_MS*500 < (trg1 - SysTick->VAL) ){
 8144 022a 414B     		ldr	r3, .L680+80	@ tmp543,
 8145 022c 2F4A     		ldr	r2, .L680+12	@ tmp544,
 8146 022e 1B68     		ldr	r3, [r3]	@ trg1.165_60, trg1
 8147 0230 9268     		ldr	r2, [r2, #8]	@ _61, MEM[(struct SysTick_Type *)3758153744B].VAL
 8148 0232 9B1A     		subs	r3, r3, r2	@ tmp438, trg1.165_60, _61
 8149 0234 3F4A     		ldr	r2, .L680+84	@ tmp545,
 8150 0236 9342     		cmp	r3, r2	@ tmp438, tmp545
 8151 0238 00F2E680 		bhi	.L674	@,
ARM GAS  /tmp/ccDfNsWv.s 			page 144


 8152              	.L643:
 8153              	@ main.c:3089: 			if(p_Fifo1->rct){	// Wywolanie interfejsu szeregowego gdy odebrano znak
 8154 023c 3E4B     		ldr	r3, .L680+88	@ tmp553,
 8155 023e 1B68     		ldr	r3, [r3]	@ p_Fifo1.167_72, p_Fifo1
 8156 0240 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.167_72->rct
 8157 0242 9BB2     		uxth	r3, r3	@ _73, p_Fifo1.167_72->rct
 8158 0244 002B     		cmp	r3, #0	@ _73
 8159 0246 40F0C780 		bne	.L675	@
 8160              	.L645:
 8161              	@ main.c:3126: 			if(f3_rtc_1sec){	// Aktualizacja zegara
 8162 024a 059A     		ldr	r2, [sp, #20]	@ _82, %sfp
 8163 024c 1368     		ldr	r3, [r2]	@ _83, *_82
 8164 024e 002B     		cmp	r3, #0	@ _83
 8165 0250 B7D0     		beq	.L631	@
 8166              	@ main.c:3127: 				f3_rtc_1sec = 0;
 8167 0252 0020     		movs	r0, #0	@ tmp478,
 8168              	@ main.c:3129: 				rtc_GetTime(0, &Rtc);
 8169 0254 2449     		ldr	r1, .L680+8	@,
 8170              	@ main.c:3127: 				f3_rtc_1sec = 0;
 8171 0256 1060     		str	r0, [r2]	@ tmp478, *_82
 8172              	@ main.c:3129: 				rtc_GetTime(0, &Rtc);
 8173 0258 FFF7FEFF 		bl	rtc_GetTime	@
 8174              	@ main.c:3130: 				CopyClock(tbuf,&Rtc); TFT_txt(tbuf,180, 229,YELLOW);
 8175 025c 2249     		ldr	r1, .L680+8	@,
 8176 025e 3748     		ldr	r0, .L680+92	@,
 8177 0260 FFF7FEFF 		bl	CopyClock	@
 8178 0264 4FF6E073 		movw	r3, #65504	@,
 8179 0268 E522     		movs	r2, #229	@,
 8180 026a B421     		movs	r1, #180	@,
 8181 026c 3348     		ldr	r0, .L680+92	@,
 8182 026e FFF7FEFF 		bl	TFT_txt	@
 8183 0272 A6E7     		b	.L631	@
 8184              	.L673:
 8185              	@ main.c:2969: 				dma_buf[cnt_dma]=0x1;
 8186 0274 4FF0010B 		mov	fp, #1	@ tmp393,
 8187              	@ main.c:3001: 				TFT_Fill(wXmin+(wXmax-wXmin)/2,wYmin-1,wXmin+(wXmax-wXmin)/2,wYmax+1,DGRAY);	// 
 8188 0278 AE22     		movs	r2, #174	@,
 8189 027a 47F6EF37 		movw	r7, #31727	@ tmp398,
 8190              	@ main.c:2969: 				dma_buf[cnt_dma]=0x1;
 8191 027e 26F813B0 		strh	fp, [r6, r3, lsl #1]	@ movhi	@ tmp393, dma_buf
 8192              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 8193 0282 1A48     		ldr	r0, .L680+12	@ tmp533,
 8194 0284 2E4B     		ldr	r3, .L680+96	@ tmp532,
 8195              	@ main.c:2966: 				c_dma1 = wXlen-cnt_dma;
 8196 0286 C8F59078 		rsb	r8, r8, #288	@ tmp390, cnt_dma,
 8197              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 8198 028a 1B68     		ldr	r3, [r3]	@ Timt.47_184, Timt
 8199 028c 8168     		ldr	r1, [r0, #8]	@ _185, MEM[(struct SysTick_Type *)3758153744B].VAL
 8200              	@ main.c:2966: 				c_dma1 = wXlen-cnt_dma;
 8201 028e 1FFA88F4 		uxth	r4, r8	@ c_dma1, tmp390
 8202              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 8203 0292 5B1A     		subs	r3, r3, r1	@ _186, Timt.47_184, _185
 8204 0294 0993     		str	r3, [sp, #36]	@ _186, MEM[(volatile u32 *)&tim]
 8205              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 8206 0296 D0F808C0 		ldr	ip, [r0, #8]	@ _183, MEM[(struct SysTick_Type *)3758153744B].VAL
 8207              	@ main.c:2966: 				c_dma1 = wXlen-cnt_dma;
 8208 029a 0494     		str	r4, [sp, #16]	@ c_dma1, %sfp
ARM GAS  /tmp/ccDfNsWv.s 			page 145


 8209              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 8210 029c 284C     		ldr	r4, .L680+96	@ tmp537,
 8211              	@ main.c:3001: 				TFT_Fill(wXmin+(wXmax-wXmin)/2,wYmin-1,wXmin+(wXmax-wXmin)/2,wYmax+1,DGRAY);	// 
 8212 029e 1046     		mov	r0, r2	@,
 8213 02a0 0097     		str	r7, [sp]	@ tmp398,
 8214 02a2 E423     		movs	r3, #228	@,
 8215              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 8216 02a4 C4F800C0 		str	ip, [r4]	@ _183, Timt
 8217              	@ main.c:3001: 				TFT_Fill(wXmin+(wXmax-wXmin)/2,wYmin-1,wXmin+(wXmax-wXmin)/2,wYmax+1,DGRAY);	// 
 8218 02a8 0021     		movs	r1, #0	@,
 8219 02aa FFF7FEFF 		bl	TFT_Fill	@
 8220              	@ main.c:3002: 				TFT_Fill(wXmin-1,(wYmax-wYmin)/2,wXmax+1,(wYmax-wYmin)/2,DGRAY);						// pozioma
 8221 02ae 7123     		movs	r3, #113	@,
 8222 02b0 40F23F12 		movw	r2, #319	@,
 8223 02b4 1946     		mov	r1, r3	@,
 8224 02b6 1E20     		movs	r0, #30	@,
 8225 02b8 0097     		str	r7, [sp]	@ tmp398,
 8226 02ba FFF7FEFF 		bl	TFT_Fill	@
 8227              	@ main.c:3004: 				TFT_SetWindow(wXmin,wYmin,wXmax,wYmax);
 8228 02be 5946     		mov	r1, fp	@, tmp393
 8229 02c0 E323     		movs	r3, #227	@,
 8230 02c2 4FF49F72 		mov	r2, #318	@,
 8231 02c6 1F20     		movs	r0, #31	@,
 8232 02c8 FFF7FEFF 		bl	TFT_SetWindow	@
 8233 02cc 09F1FF33 		add	r3, r9, #-1	@ tmp504, _152,
 8234 02d0 0024     		movs	r4, #0	@ ivtmp.676,
 8235 02d2 2978     		ldrb	r1, [r5]	@ zero_extendqisi2	@ pretmp_47, yn
 8236 02d4 09F21F1B 		addw	fp, r9, #287	@ tmp503, _152,
 8237 02d8 0393     		str	r3, [sp, #12]	@ tmp504, %sfp
 8238              	@ main.c:3058: 						else {	yn[i]=wYmax-wYmin;		}
 8239 02da 4FF0E208 		mov	r8, #226	@ tmp505,
 8240 02de 46E0     		b	.L634	@
 8241              	.L681:
 8242              		.align	2
 8243              	.L680:
 8244 02e0 00000000 		.word	.LC145
 8245 02e4 18000000 		.word	.LC146
 8246 02e8 00000000 		.word	Rtc
 8247 02ec 10E000E0 		.word	-536813552
 8248 02f0 00100240 		.word	1073876992
 8249 02f4 08000240 		.word	1073872904
 8250 02f8 000C0140 		.word	1073810432
 8251 02fc 00000000 		.word	delay_us
 8252 0300 00080040 		.word	1073743872
 8253 0304 00240140 		.word	1073816576
 8254 0308 01011A00 		.word	1704193
 8255 030c 00040040 		.word	1073742848
 8256 0310 00001001 		.word	.LANCHOR8+17825792
 8257 0314 00000000 		.word	.LANCHOR22
 8258 0318 28000000 		.word	.LC147
 8259 031c 00000000 		.word	.LANCHOR23
 8260 0320 00E100E0 		.word	-536813312
 8261 0324 006C0040 		.word	1073769472
 8262 0328 398EE338 		.word	954437177
 8263 032c 00000000 		.word	trg0
 8264 0330 00000000 		.word	trg1
 8265 0334 20AA4400 		.word	4500000
ARM GAS  /tmp/ccDfNsWv.s 			page 146


 8266 0338 00000000 		.word	p_Fifo1
 8267 033c 00000000 		.word	.LANCHOR25
 8268 0340 00000000 		.word	Timt
 8269 0344 00000000 		.word	.LANCHOR21
 8270              	.L651:
 8271              	@ main.c:3057: 						yn[i]=wYmin + (r_dma_buf);	}
 8272 0348 0133     		adds	r3, r3, #1	@ tmp423, _43,
 8273              	@ main.c:3062: 					if(x==wXlen-2){
 8274 034a B4F58F7F 		cmp	r4, #286	@ ivtmp.676,
 8275              	@ main.c:3057: 						yn[i]=wYmin + (r_dma_buf);	}
 8276 034e 2B70     		strb	r3, [r5]	@ tmp423, yn
 8277              	@ main.c:3062: 					if(x==wXlen-2){
 8278 0350 20D0     		beq	.L676	@,
 8279              	.L640:
 8280              	@ main.c:3006: 				for(x=0;x<wXlen;x++){
 8281 0352 40F21F13 		movw	r3, #287	@ tmp435,
 8282 0356 9C42     		cmp	r4, r3	@ ivtmp.676, tmp435
 8283 0358 3CD0     		beq	.L677	@,
 8284              	@ main.c:3028: 					if( x>0 && x< wXlen-0 ){
 8285 035a B4F58F7F 		cmp	r4, #286	@ ivtmp.676,
 8286 035e 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2	@ prephitmp_27, yn
 8287 0360 1DD9     		bls	.L641	@,
 8288 0362 671C     		adds	r7, r4, #1	@ tmp406, ivtmp.676,
 8289 0364 BFB2     		uxth	r7, r7	@ ivtmp.676, tmp406
 8290              	@ main.c:3037: 					if(x>1){
 8291 0366 012F     		cmp	r7, #1	@ ivtmp.676,
 8292 0368 25D1     		bne	.L678	@,
 8293              	.L636:
 8294              	@ main.c:2959: 				dma_buf[cnt_dma]=0x1;
 8295 036a 3C46     		mov	r4, r7	@ ivtmp.676, ivtmp.676
 8296 036c 1146     		mov	r1, r2	@ pretmp_47, prephitmp_27
 8297              	.L634:
 8298              	@ main.c:3048: 					if(x<cnt_dma)	idx=(0    +cnt_dma-x-1)*nMES; 
 8299 036e A145     		cmp	r9, r4	@ _152, ivtmp.676
 8300 0370 8ABF     		itet	hi
 8301 0372 039B     		ldrhi	r3, [sp, #12]	@ tmp504, %sfp
 8302 0374 ABEB0402 		subls	r2, fp, r4	@ tmp420, tmp503, ivtmp.676
 8303 0378 1A1B     		subhi	r2, r3, r4	@ tmp417, tmp504, ivtmp.676
 8304 037a 92B2     		uxth	r2, r2	@ idx, tmp420
 8305              	@ main.c:3053: 						r_dma_buf =(dma_buf[i+idx]-rz[i])*mn[i]/dl[i]; 
 8306 037c 36F81230 		ldrh	r3, [r6, r2, lsl #1]	@, dma_buf
 8307              	@ main.c:3054: 						yb[i]=yn[i];
 8308 0380 8AF80010 		strb	r1, [r10]	@ pretmp_47, yb
 8309              	@ main.c:3053: 						r_dma_buf =(dma_buf[i+idx]-rz[i])*mn[i]/dl[i]; 
 8310 0384 9BB2     		uxth	r3, r3	@ _43, tmp486
 8311              	@ main.c:3056: 						if(r_dma_buf < (wYmax-wYmin) ){
 8312 0386 E12B     		cmp	r3, #225	@ _43,
 8313 0388 DED9     		bls	.L651	@,
 8314              	@ main.c:3062: 					if(x==wXlen-2){
 8315 038a B4F58F7F 		cmp	r4, #286	@ ivtmp.676,
 8316              	@ main.c:3058: 						else {	yn[i]=wYmax-wYmin;		}
 8317 038e 85F80080 		strb	r8, [r5]	@ tmp505, yn
 8318              	@ main.c:3062: 					if(x==wXlen-2){
 8319 0392 DED1     		bne	.L640	@,
 8320              	.L676:
 8321              	@ main.c:3064: 							val[i]=dma_buf[i+idx];
 8322 0394 36F81230 		ldrh	r3, [r6, r2, lsl #1]	@, dma_buf
ARM GAS  /tmp/ccDfNsWv.s 			page 147


 8323 0398 3D48     		ldr	r0, .L682	@ tmp542,
 8324 039a 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2	@ prephitmp_27, yn
 8325 039c 0380     		strh	r3, [r0]	@ movhi	@ tmp431, val
 8326              	.L641:
 8327              	@ main.c:3031: 							TFT_dy(wXmin+x-1, yb[i], yn[i],BLACK,WID);
 8328 039e 0023     		movs	r3, #0	@ tmp404,
 8329 03a0 04F11F00 		add	r0, r4, #31	@ tmp402, ivtmp.676,
 8330 03a4 671C     		adds	r7, r4, #1	@ tmp406, ivtmp.676,
 8331 03a6 0093     		str	r3, [sp]	@ tmp404,
 8332 03a8 80B2     		uxth	r0, r0	@, tmp402
 8333 03aa BFB2     		uxth	r7, r7	@ ivtmp.676, tmp406
 8334 03ac FFF7FEFF 		bl	TFT_dy	@
 8335              	@ main.c:3037: 					if(x>1){
 8336 03b0 012F     		cmp	r7, #1	@ ivtmp.676,
 8337 03b2 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2	@ prephitmp_27, yn
 8338 03b4 D9D0     		beq	.L636	@,
 8339              	.L678:
 8340              	@ main.c:3039: 							TFT_dy(wXmin+x-2, yb[i], yn[i],ColCon[6+i],WID);
 8341 03b6 4FF0000C 		mov	ip, #0	@ tmp413,
 8342 03ba 364B     		ldr	r3, .L682+4	@ tmp540,
 8343 03bc 04F11E00 		add	r0, r4, #30	@ tmp411, ivtmp.676,
 8344 03c0 9B89     		ldrh	r3, [r3, #12]	@ ColCon, ColCon
 8345 03c2 9AF80010 		ldrb	r1, [r10]	@ zero_extendqisi2	@ yb, yb
 8346 03c6 80B2     		uxth	r0, r0	@, tmp411
 8347 03c8 CDF800C0 		str	ip, [sp]	@ tmp413,
 8348 03cc FFF7FEFF 		bl	TFT_dy	@
 8349 03d0 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2	@ prephitmp_27, yn
 8350 03d2 CAE7     		b	.L636	@
 8351              	.L677:
 8352 03d4 C846     		mov	r8, r9	@ cnt_dma, _152
 8353 03d6 28E7     		b	.L633	@
 8354              	.L675:
 8355              	@ main.c:3090: 				UART_getChar(&chr);
 8356 03d8 0DF11F00 		add	r0, sp, #31	@ tmp554,,
 8357 03dc FFF7FEFF 		bl	UART_getChar	@
 8358              	@ main.c:3091: 				if(chr=='q'){
 8359 03e0 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2	@ chr.168_74, chr
 8360 03e4 712B     		cmp	r3, #113	@ chr.168_74,
 8361 03e6 31D0     		beq	.L679	@,
 8362              	@ main.c:3105: 				if(chr=='b'){	
 8363 03e8 622B     		cmp	r3, #98	@ chr.168_74,
 8364 03ea 7FF42EAF 		bne	.L645	@,
 8365              	.L648:
 8366              	@ main.c:3107: 					TFT_Clear(BLACK);
 8367 03ee 0020     		movs	r0, #0	@,
 8368 03f0 FFF7FEFF 		bl	TFT_Clear	@
 8369              	@ main.c:3108: 					TFT_Fill(wXmin-1,wYmin-1,wXmin-1,wYmax+1,DGRAY);	// pionowa lewa
 8370 03f4 47F6EF33 		movw	r3, #31727	@ tmp477,
 8371 03f8 1E22     		movs	r2, #30	@,
 8372 03fa 0093     		str	r3, [sp]	@ tmp477,
 8373 03fc 1046     		mov	r0, r2	@,
 8374 03fe E423     		movs	r3, #228	@,
 8375 0400 0021     		movs	r1, #0	@,
 8376 0402 FFF7FEFF 		bl	TFT_Fill	@
 8377 0406 20E7     		b	.L645	@
 8378              	.L674:
 8379              	@ main.c:3072: 				trg1 = SysTick->VAL;
ARM GAS  /tmp/ccDfNsWv.s 			page 148


 8380 0408 234B     		ldr	r3, .L682+8	@ tmp546,
 8381              	@ main.c:3082: 				TFT_txt(int2str(val[0],str,4,0),30,229-12*0,WHITE);
 8382 040a 2148     		ldr	r0, .L682	@ tmp548,
 8383              	@ main.c:3072: 				trg1 = SysTick->VAL;
 8384 040c 9C68     		ldr	r4, [r3, #8]	@ _63, MEM[(struct SysTick_Type *)3758153744B].VAL
 8385 040e 234F     		ldr	r7, .L682+12	@ tmp549,
 8386              	@ main.c:3082: 				TFT_txt(int2str(val[0],str,4,0),30,229-12*0,WHITE);
 8387 0410 08A9     		add	r1, sp, #32	@ tmp547,,
 8388 0412 0023     		movs	r3, #0	@,
 8389 0414 0422     		movs	r2, #4	@,
 8390 0416 0088     		ldrh	r0, [r0]	@, val
 8391              	@ main.c:3072: 				trg1 = SysTick->VAL;
 8392 0418 3C60     		str	r4, [r7]	@ _63, trg1
 8393              	@ main.c:3082: 				TFT_txt(int2str(val[0],str,4,0),30,229-12*0,WHITE);
 8394 041a FFF7FEFF 		bl	int2str	@
 8395 041e 4FF6FF73 		movw	r3, #65535	@,
 8396 0422 E522     		movs	r2, #229	@,
 8397 0424 1E21     		movs	r1, #30	@,
 8398 0426 FFF7FEFF 		bl	TFT_txt	@
 8399              	@ main.c:3084: 				TFT_txt(int2str(tim/TIM_MS,str,5,0),110,229-12*0,ColCon[6]);
 8400 042a 099A     		ldr	r2, [sp, #36]	@ tim, tim
 8401 042c 1C49     		ldr	r1, .L682+16	@ tmp550,
 8402 042e 0023     		movs	r3, #0	@,
 8403 0430 A1FB0220 		umull	r2, r0, r1, r2	@ tmp520, tmp448, tmp550, tim
 8404 0434 08A9     		add	r1, sp, #32	@ tmp551,,
 8405 0436 0522     		movs	r2, #5	@,
 8406 0438 400B     		lsrs	r0, r0, #13	@, tmp448,
 8407 043a FFF7FEFF 		bl	int2str	@
 8408 043e 154B     		ldr	r3, .L682+4	@ tmp552,
 8409 0440 E522     		movs	r2, #229	@,
 8410 0442 9B89     		ldrh	r3, [r3, #12]	@, ColCon
 8411 0444 6E21     		movs	r1, #110	@,
 8412 0446 FFF7FEFF 		bl	TFT_txt	@
 8413 044a F7E6     		b	.L643	@
 8414              	.L679:
 8415              	@ main.c:3092: 					UaPutS("\r\n TIM4->PSC/ARR="); 	sint2uart(TIM4->PSC);	UaPutC('/'); c_num=UART_g
 8416 044c 154C     		ldr	r4, .L682+20	@ tmp457,
 8417 044e 1648     		ldr	r0, .L682+24	@,
 8418 0450 FFF7FEFF 		bl	UaPutS	@
 8419 0454 208D     		ldrh	r0, [r4, #40]	@, MEM[(struct TIM_TypeDef *)1073743872B].PSC
 8420 0456 FFF7FEFF 		bl	sint2uart	@
 8421 045a 2F20     		movs	r0, #47	@,
 8422 045c FFF7FEFF 		bl	UaPutC	@
 8423 0460 FFF7FEFF 		bl	UART_getNum	@
 8424 0464 80B2     		uxth	r0, r0	@ c_num,
 8425              	@ main.c:3093: 					if(c_num){ 
 8426 0466 60B1     		cbz	r0, .L647	@ c_num,
 8427              	@ main.c:3094: 						BKP->DR41=c_num; TIM4->PSC=BKP->DR41;
 8428 0468 104A     		ldr	r2, .L682+28	@ tmp555,
 8429 046a A2F8B800 		strh	r0, [r2, #184]	@ movhi	@ c_num, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8430 046e B2F8B830 		ldrh	r3, [r2, #184]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8431 0472 9BB2     		uxth	r3, r3	@ _78, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8432 0474 2385     		strh	r3, [r4, #40]	@ movhi	@ _78, MEM[(struct TIM_TypeDef *)1073743872B].PSC
 8433              	@ main.c:3095: 						BKP->DR42=c_num; TIM4->ARR=BKP->DR42;
 8434 0476 A2F8BC00 		strh	r0, [r2, #188]	@ movhi	@ c_num, MEM[(struct BKP_TypeDef *)1073769472B].DR42
 8435 047a B2F8BC30 		ldrh	r3, [r2, #188]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR42
 8436 047e 9BB2     		uxth	r3, r3	@ _79, MEM[(struct BKP_TypeDef *)1073769472B].DR42
ARM GAS  /tmp/ccDfNsWv.s 			page 149


 8437 0480 A385     		strh	r3, [r4, #44]	@ movhi	@ _79, MEM[(struct TIM_TypeDef *)1073743872B].ARR
 8438              	.L647:
 8439              	@ main.c:3101: 					UaPutS("\r\n");
 8440 0482 0B48     		ldr	r0, .L682+32	@,
 8441 0484 FFF7FEFF 		bl	UaPutS	@
 8442              	@ main.c:3102: 					chr='b';
 8443 0488 6223     		movs	r3, #98	@ tmp475,
 8444 048a 8DF81F30 		strb	r3, [sp, #31]	@ tmp475, chr
 8445 048e AEE7     		b	.L648	@
 8446              	.L683:
 8447              		.align	2
 8448              	.L682:
 8449 0490 00000000 		.word	.LANCHOR24
 8450 0494 00000000 		.word	ColCon
 8451 0498 10E000E0 		.word	-536813552
 8452 049c 00000000 		.word	trg1
 8453 04a0 D55204E9 		.word	-385592619
 8454 04a4 00080040 		.word	1073743872
 8455 04a8 34000000 		.word	.LC148
 8456 04ac 006C0040 		.word	1073769472
 8457 04b0 40000000 		.word	.LC18
 8458              		.size	Intro2, .-Intro2
 8459              		.section	.text.CopyTime,"ax",%progbits
 8460              		.align	1
 8461              		.p2align 2,,3
 8462              		.global	CopyTime
 8463              		.syntax unified
 8464              		.thumb
 8465              		.thumb_func
 8466              		.fpu softvfp
 8467              		.type	CopyTime, %function
 8468              	CopyTime:
 8469              		@ args = 0, pretend = 0, frame = 8
 8470              		@ frame_needed = 0, uses_anonymous_args = 0
 8471 0000 30B5     		push	{r4, r5, lr}	@
 8472 0002 0D46     		mov	r5, r1	@ lrtc, lrtc
 8473 0004 83B0     		sub	sp, sp, #12	@,,
 8474              	@ main.c:4992: void CopyTime(char *dczas,  T_RTC *lrtc)	{
 8475 0006 0446     		mov	r4, r0	@ dczas, dczas
 8476              	@ main.c:4997: 		dczas += 0; memcpy(dczas,unt2str(lrtc->hor,tbuf,2) ,2);
 8477 0008 01A9     		add	r1, sp, #4	@ tmp139,,
 8478 000a A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2	@, lrtc_12(D)->hor
 8479 000c 0222     		movs	r2, #2	@,
 8480 000e FFF7FEFF 		bl	unt2str	@
 8481 0012 0388     		ldrh	r3, [r0]	@ unaligned	@ _14, MEM[(char * {ref-all})_3]
 8482              	@ main.c:4998: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 8483 0014 01A9     		add	r1, sp, #4	@ tmp140,,
 8484              	@ main.c:4997: 		dczas += 0; memcpy(dczas,unt2str(lrtc->hor,tbuf,2) ,2);
 8485 0016 2380     		strh	r3, [r4]	@ unaligned	@ _14, MEM[(char * {ref-all})dczas_10(D)]
 8486              	@ main.c:4998: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 8487 0018 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2	@, lrtc_12(D)->min
 8488 001a 0222     		movs	r2, #2	@,
 8489 001c FFF7FEFF 		bl	unt2str	@
 8490 0020 0388     		ldrh	r3, [r0]	@ unaligned	@ _17, MEM[(char * {ref-all})_6]
 8491              	@ main.c:4999: 		dczas += 3; memcpy(dczas,unt2str(lrtc->sec,tbuf,2) ,2);
 8492 0022 01A9     		add	r1, sp, #4	@ tmp141,,
 8493              	@ main.c:4998: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
ARM GAS  /tmp/ccDfNsWv.s 			page 150


 8494 0024 A4F80330 		strh	r3, [r4, #3]	@ unaligned	@ _17, MEM[(char * {ref-all})dczas_10(D) + 3B]
 8495              	@ main.c:4999: 		dczas += 3; memcpy(dczas,unt2str(lrtc->sec,tbuf,2) ,2);
 8496 0028 2878     		ldrb	r0, [r5]	@ zero_extendqisi2	@, lrtc_12(D)->sec
 8497 002a 0222     		movs	r2, #2	@,
 8498 002c FFF7FEFF 		bl	unt2str	@
 8499 0030 0388     		ldrh	r3, [r0]	@ unaligned	@ _20, MEM[(char * {ref-all})_9]
 8500 0032 E380     		strh	r3, [r4, #6]	@ unaligned	@ _20, MEM[(char * {ref-all})dczas_10(D) + 6B]
 8501              	@ main.c:5000: 	}
 8502 0034 03B0     		add	sp, sp, #12	@,,
 8503              		@ sp needed	@
 8504 0036 30BD     		pop	{r4, r5, pc}	@
 8505              		.size	CopyTime, .-CopyTime
 8506              		.section	.text.CopyDate,"ax",%progbits
 8507              		.align	1
 8508              		.p2align 2,,3
 8509              		.global	CopyDate
 8510              		.syntax unified
 8511              		.thumb
 8512              		.thumb_func
 8513              		.fpu softvfp
 8514              		.type	CopyDate, %function
 8515              	CopyDate:
 8516              		@ args = 0, pretend = 0, frame = 8
 8517              		@ frame_needed = 0, uses_anonymous_args = 0
 8518 0000 30B5     		push	{r4, r5, lr}	@
 8519 0002 0D46     		mov	r5, r1	@ lrtc, lrtc
 8520 0004 83B0     		sub	sp, sp, #12	@,,
 8521              	@ main.c:5001: void CopyDate(char *dczas,  T_RTC *lrtc)	{
 8522 0006 0446     		mov	r4, r0	@ dczas, dczas
 8523              	@ main.c:5004: 		dczas += 0;	memcpy(dczas,unt2str(lrtc->yer,tbuf,4) ,4);
 8524 0008 6946     		mov	r1, sp	@,
 8525 000a E888     		ldrh	r0, [r5, #6]	@, lrtc_12(D)->yer
 8526 000c 0422     		movs	r2, #4	@,
 8527 000e FFF7FEFF 		bl	unt2str	@
 8528 0012 0368     		ldr	r3, [r0]	@ unaligned	@ tmp126, MEM[(char * {ref-all})_3]
 8529              	@ main.c:5005: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 8530 0014 6946     		mov	r1, sp	@,
 8531              	@ main.c:5004: 		dczas += 0;	memcpy(dczas,unt2str(lrtc->yer,tbuf,4) ,4);
 8532 0016 2360     		str	r3, [r4]	@ unaligned	@ tmp126, MEM[(char * {ref-all})dczas_10(D)]
 8533              	@ main.c:5005: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 8534 0018 2879     		ldrb	r0, [r5, #4]	@ zero_extendqisi2	@, lrtc_12(D)->mon
 8535 001a 0222     		movs	r2, #2	@,
 8536 001c FFF7FEFF 		bl	unt2str	@
 8537 0020 0388     		ldrh	r3, [r0]	@ unaligned	@ _17, MEM[(char * {ref-all})_6]
 8538              	@ main.c:5006: 		dczas += 3; memcpy(dczas,unt2str(lrtc->mdy,tbuf,2) ,2);
 8539 0022 6946     		mov	r1, sp	@,
 8540              	@ main.c:5005: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 8541 0024 A4F80530 		strh	r3, [r4, #5]	@ unaligned	@ _17, MEM[(char * {ref-all})dczas_10(D) + 5B]
 8542              	@ main.c:5006: 		dczas += 3; memcpy(dczas,unt2str(lrtc->mdy,tbuf,2) ,2);
 8543 0028 E878     		ldrb	r0, [r5, #3]	@ zero_extendqisi2	@, lrtc_12(D)->mdy
 8544 002a 0222     		movs	r2, #2	@,
 8545 002c FFF7FEFF 		bl	unt2str	@
 8546 0030 0388     		ldrh	r3, [r0]	@ unaligned	@ _20, MEM[(char * {ref-all})_9]
 8547 0032 2381     		strh	r3, [r4, #8]	@ unaligned	@ _20, MEM[(char * {ref-all})dczas_10(D) + 8B]
 8548              	@ main.c:5007: 	}
 8549 0034 03B0     		add	sp, sp, #12	@,,
 8550              		@ sp needed	@
ARM GAS  /tmp/ccDfNsWv.s 			page 151


 8551 0036 30BD     		pop	{r4, r5, pc}	@
 8552              		.size	CopyDate, .-CopyDate
 8553              		.section	.text.Zegarek,"ax",%progbits
 8554              		.align	1
 8555              		.p2align 2,,3
 8556              		.global	Zegarek
 8557              		.syntax unified
 8558              		.thumb
 8559              		.thumb_func
 8560              		.fpu softvfp
 8561              		.type	Zegarek, %function
 8562              	Zegarek:
 8563              		@ args = 0, pretend = 0, frame = 24
 8564              		@ frame_needed = 0, uses_anonymous_args = 0
 8565 0000 F0B5     		push	{r4, r5, r6, r7, lr}	@
 8566 0002 87B0     		sub	sp, sp, #28	@,,
 8567              	@ main.c:889: 		char tbuf[9] ={"00-00-00"};
 8568 0004 6C46     		mov	r4, sp	@ tmp115,
 8569 0006 134A     		ldr	r2, .L693	@ tmp114,
 8570              	@ main.c:890: 		char dbuf[11]={"0000-00-00"}; // data
 8571 0008 03AB     		add	r3, sp, #12	@ tmp137,,
 8572              	@ main.c:889: 		char tbuf[9] ={"00-00-00"};
 8573 000a 07CA     		ldm	r2, {r0, r1, r2}	@ tmp114,,,
 8574 000c 03C4     		stmia	r4!, {r0, r1}	@ tmp115,,
 8575              	@ main.c:890: 		char dbuf[11]={"0000-00-00"}; // data
 8576 000e 1249     		ldr	r1, .L693+4	@ tmp117,
 8577              	@ main.c:889: 		char tbuf[9] ={"00-00-00"};
 8578 0010 2270     		strb	r2, [r4]	@, tbuf
 8579              	@ main.c:890: 		char dbuf[11]={"0000-00-00"}; // data
 8580 0012 07C9     		ldm	r1, {r0, r1, r2}	@ tmp117,,,
 8581 0014 03C3     		stmia	r3!, {r0, r1}	@ tmp118,,
 8582 0016 110C     		lsrs	r1, r2, #16	@ tmp120,,
 8583 0018 23F8022B 		strh	r2, [r3], #2	@ movhi	@, dbuf
 8584 001c 1970     		strb	r1, [r3]	@ tmp120, dbuf
 8585              	@ main.c:892: 		RtcInit();
 8586 001e FFF7FEFF 		bl	RtcInit	@
 8587 0022 0E4D     		ldr	r5, .L693+8	@ tmp133,
 8588              	@ main.c:900: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 8589 0024 0E4C     		ldr	r4, .L693+12	@ tmp123,
 8590 0026 0F4E     		ldr	r6, .L693+16	@ tmp125,
 8591              	@ main.c:902: 				rtc_GetTime(1,&Rtc);
 8592 0028 0F4F     		ldr	r7, .L693+20	@ tmp136,
 8593              	.L689:
 8594              	@ main.c:900: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 8595 002a 2B68     		ldr	r3, [r5]	@ trg0.58_1, trg0
 8596 002c A268     		ldr	r2, [r4, #8]	@ _2, MEM[(struct SysTick_Type *)3758153744B].VAL
 8597 002e 9B1A     		subs	r3, r3, r2	@ tmp124, trg0.58_1, _2
 8598 0030 B342     		cmp	r3, r6	@ tmp124, tmp125
 8599 0032 FAD9     		bls	.L689	@,
 8600              	@ main.c:901: 				trg0  = SysTick->VAL;
 8601 0034 A368     		ldr	r3, [r4, #8]	@ _4, MEM[(struct SysTick_Type *)3758153744B].VAL
 8602              	@ main.c:902: 				rtc_GetTime(1,&Rtc);
 8603 0036 3946     		mov	r1, r7	@, tmp136
 8604 0038 0120     		movs	r0, #1	@,
 8605              	@ main.c:901: 				trg0  = SysTick->VAL;
 8606 003a 2B60     		str	r3, [r5]	@ _4, trg0
 8607              	@ main.c:902: 				rtc_GetTime(1,&Rtc);
ARM GAS  /tmp/ccDfNsWv.s 			page 152


 8608 003c FFF7FEFF 		bl	rtc_GetTime	@
 8609              	@ main.c:903: 				CopyTime(tbuf,&Rtc);
 8610 0040 3946     		mov	r1, r7	@, tmp136
 8611 0042 6846     		mov	r0, sp	@,
 8612 0044 FFF7FEFF 		bl	CopyTime	@
 8613              	@ main.c:904: 				CopyDate(dbuf,&Rtc);
 8614 0048 3946     		mov	r1, r7	@, tmp136
 8615 004a 03A8     		add	r0, sp, #12	@ tmp138,,
 8616 004c FFF7FEFF 		bl	CopyDate	@
 8617 0050 EBE7     		b	.L689	@
 8618              	.L694:
 8619 0052 00BF     		.align	2
 8620              	.L693:
 8621 0054 00000000 		.word	.LC149
 8622 0058 0C000000 		.word	.LC150
 8623 005c 00000000 		.word	trg0
 8624 0060 10E000E0 		.word	-536813552
 8625 0064 40548900 		.word	9000000
 8626 0068 00000000 		.word	Rtc
 8627              		.size	Zegarek, .-Zegarek
 8628              		.section	.text.SysTick_Handler,"ax",%progbits
 8629              		.align	1
 8630              		.p2align 2,,3
 8631              		.global	SysTick_Handler
 8632              		.syntax unified
 8633              		.thumb
 8634              		.thumb_func
 8635              		.fpu softvfp
 8636              		.type	SysTick_Handler, %function
 8637              	SysTick_Handler:
 8638              		@ args = 0, pretend = 0, frame = 0
 8639              		@ frame_needed = 0, uses_anonymous_args = 0
 8640              		@ link register save eliminated.
 8641              	@ main.c:5049: 		N = Timt + STCLK_LD; Timt = N;
 8642 0000 1448     		ldr	r0, .L696	@ tmp130,
 8643 0002 154B     		ldr	r3, .L696+4	@ tmp131,
 8644 0004 0268     		ldr	r2, [r0]	@ Timt.212_1, Timt
 8645              	@ main.c:5051: 		n = delay_us + STCLK_LD; delay_us = n;
 8646 0006 1549     		ldr	r1, .L696+8	@ tmp133,
 8647              	@ main.c:5049: 		N = Timt + STCLK_LD; Timt = N;
 8648 0008 1A44     		add	r2, r2, r3	@ N, tmp131
 8649 000a 0260     		str	r2, [r0]	@ N, Timt
 8650              	@ main.c:5051: 		n = delay_us + STCLK_LD; delay_us = n;
 8651 000c 0A68     		ldr	r2, [r1]	@ delay_us.213_2, delay_us
 8652              	@ main.c:5055: 		n = (Tim0 + STCLK_LD); Tim0 = n;
 8653 000e 1448     		ldr	r0, .L696+12	@ tmp136,
 8654              	@ main.c:5051: 		n = delay_us + STCLK_LD; delay_us = n;
 8655 0010 1A44     		add	r2, r2, r3	@ _3, tmp131
 8656 0012 0A60     		str	r2, [r1]	@ _3, delay_us
 8657              	@ main.c:5055: 		n = (Tim0 + STCLK_LD); Tim0 = n;
 8658 0014 0268     		ldr	r2, [r0]	@ Tim0.215_4, Tim0
 8659              	@ main.c:5056: 		n = (Tim1 + STCLK_LD); Tim1 = n;
 8660 0016 1349     		ldr	r1, .L696+16	@ tmp139,
 8661              	@ main.c:5055: 		n = (Tim0 + STCLK_LD); Tim0 = n;
 8662 0018 1A44     		add	r2, r2, r3	@ _5, tmp131
 8663 001a 0260     		str	r2, [r0]	@ _5, Tim0
 8664              	@ main.c:5056: 		n = (Tim1 + STCLK_LD); Tim1 = n;
ARM GAS  /tmp/ccDfNsWv.s 			page 153


 8665 001c 0A68     		ldr	r2, [r1]	@ Tim1.217_6, Tim1
 8666              	@ main.c:5058: 		n = (trg0 + STCLK_LD); trg0 = n;
 8667 001e 1248     		ldr	r0, .L696+20	@ tmp142,
 8668              	@ main.c:5056: 		n = (Tim1 + STCLK_LD); Tim1 = n;
 8669 0020 1A44     		add	r2, r2, r3	@ _7, tmp131
 8670 0022 0A60     		str	r2, [r1]	@ _7, Tim1
 8671              	@ main.c:5058: 		n = (trg0 + STCLK_LD); trg0 = n;
 8672 0024 0268     		ldr	r2, [r0]	@ trg0.219_8, trg0
 8673              	@ main.c:5059: 		n = (trg1 + STCLK_LD); trg1 = n;
 8674 0026 1149     		ldr	r1, .L696+24	@ tmp145,
 8675              	@ main.c:5058: 		n = (trg0 + STCLK_LD); trg0 = n;
 8676 0028 1A44     		add	r2, r2, r3	@ _9, tmp131
 8677 002a 0260     		str	r2, [r0]	@ _9, trg0
 8678              	@ main.c:5059: 		n = (trg1 + STCLK_LD); trg1 = n;
 8679 002c 0A68     		ldr	r2, [r1]	@ trg1.221_10, trg1
 8680              	@ main.c:5060: 		n = (trg2 + STCLK_LD); trg2 = n;
 8681 002e 1048     		ldr	r0, .L696+28	@ tmp148,
 8682              	@ main.c:5059: 		n = (trg1 + STCLK_LD); trg1 = n;
 8683 0030 1A44     		add	r2, r2, r3	@ _11, tmp131
 8684 0032 0A60     		str	r2, [r1]	@ _11, trg1
 8685              	@ main.c:5060: 		n = (trg2 + STCLK_LD); trg2 = n;
 8686 0034 0268     		ldr	r2, [r0]	@ trg2.223_12, trg2
 8687              	@ main.c:5061: 		n = (trg3 + STCLK_LD); trg3 = n;
 8688 0036 0F49     		ldr	r1, .L696+32	@ tmp151,
 8689              	@ main.c:5060: 		n = (trg2 + STCLK_LD); trg2 = n;
 8690 0038 1A44     		add	r2, r2, r3	@ _13, tmp131
 8691 003a 0260     		str	r2, [r0]	@ _13, trg2
 8692              	@ main.c:5061: 		n = (trg3 + STCLK_LD); trg3 = n;
 8693 003c 0A68     		ldr	r2, [r1]	@ trg3.225_14, trg3
 8694              	@ main.c:5062: 		n = (trg4 + STCLK_LD); trg4 = n;
 8695 003e 0E48     		ldr	r0, .L696+36	@ tmp154,
 8696              	@ main.c:5061: 		n = (trg3 + STCLK_LD); trg3 = n;
 8697 0040 1A44     		add	r2, r2, r3	@ _15, tmp131
 8698 0042 0A60     		str	r2, [r1]	@ _15, trg3
 8699              	@ main.c:5062: 		n = (trg4 + STCLK_LD); trg4 = n;
 8700 0044 0268     		ldr	r2, [r0]	@ trg4.227_16, trg4
 8701              	@ main.c:5063: 		n = (trg5 + STCLK_LD); trg5 = n;
 8702 0046 0D49     		ldr	r1, .L696+40	@ tmp157,
 8703              	@ main.c:5062: 		n = (trg4 + STCLK_LD); trg4 = n;
 8704 0048 1A44     		add	r2, r2, r3	@ _17, tmp131
 8705 004a 0260     		str	r2, [r0]	@ _17, trg4
 8706              	@ main.c:5063: 		n = (trg5 + STCLK_LD); trg5 = n;
 8707 004c 0A68     		ldr	r2, [r1]	@ trg5.229_18, trg5
 8708 004e 1344     		add	r3, r3, r2	@ _19, trg5.229_18
 8709 0050 0B60     		str	r3, [r1]	@ _19, trg5
 8710              	@ main.c:5066: 	}
 8711 0052 7047     		bx	lr	@
 8712              	.L697:
 8713              		.align	2
 8714              	.L696:
 8715 0054 00000000 		.word	Timt
 8716 0058 40548900 		.word	9000000
 8717 005c 00000000 		.word	delay_us
 8718 0060 00000000 		.word	Tim0
 8719 0064 00000000 		.word	Tim1
 8720 0068 00000000 		.word	trg0
 8721 006c 00000000 		.word	trg1
ARM GAS  /tmp/ccDfNsWv.s 			page 154


 8722 0070 00000000 		.word	trg2
 8723 0074 00000000 		.word	trg3
 8724 0078 00000000 		.word	trg4
 8725 007c 00000000 		.word	trg5
 8726              		.size	SysTick_Handler, .-SysTick_Handler
 8727              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 8728              		.align	1
 8729              		.p2align 2,,3
 8730              		.global	TIM2_IRQHandler
 8731              		.syntax unified
 8732              		.thumb
 8733              		.thumb_func
 8734              		.fpu softvfp
 8735              		.type	TIM2_IRQHandler, %function
 8736              	TIM2_IRQHandler:
 8737              		@ Stack Align: May be called with mis-aligned SP.
 8738              		@ args = 0, pretend = 0, frame = 0
 8739              		@ frame_needed = 0, uses_anonymous_args = 0
 8740              		@ link register save eliminated.
 8741 0000 6846     		mov	r0, sp	@,
 8742 0002 20F00701 		bic	r1, r0, #7	@,,
 8743 0006 8D46     		mov	sp, r1	@,
 8744              	@ main.c:5068: 		bTIM2_SR_UIF = 0;
 8745 0008 0023     		movs	r3, #0	@ tmp111,
 8746              	@ main.c:5069: 		TIM2->SR = 0;
 8747 000a 4FF08042 		mov	r2, #1073741824	@ tmp112,
 8748              	@ main.c:5067: __attribute__((interrupt)) void TIM2_IRQHandler(void)				{
 8749 000e 01B4     		push	{r0}	@
 8750              	@ main.c:5068: 		bTIM2_SR_UIF = 0;
 8751 0010 0249     		ldr	r1, .L699	@ tmp110,
 8752              	@ main.c:5071: 	}
 8753 0012 01BC     		pop	{r0}	@
 8754              	@ main.c:5068: 		bTIM2_SR_UIF = 0;
 8755 0014 0B60     		str	r3, [r1]	@ tmp111, MEM[(volatile long unsigned int *)1107296768B]
 8756              	@ main.c:5071: 	}
 8757 0016 8546     		mov	sp, r0	@,
 8758              	@ main.c:5069: 		TIM2->SR = 0;
 8759 0018 1382     		strh	r3, [r2, #16]	@ movhi	@ tmp111, MEM[(struct TIM_TypeDef *)1073741824B].SR
 8760              	@ main.c:5071: 	}
 8761 001a 7047     		bx	lr	@
 8762              	.L700:
 8763              		.align	2
 8764              	.L699:
 8765 001c 00020042 		.word	1107296768
 8766              		.size	TIM2_IRQHandler, .-TIM2_IRQHandler
 8767              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 8768              		.align	1
 8769              		.p2align 2,,3
 8770              		.global	TIM3_IRQHandler
 8771              		.syntax unified
 8772              		.thumb
 8773              		.thumb_func
 8774              		.fpu softvfp
 8775              		.type	TIM3_IRQHandler, %function
 8776              	TIM3_IRQHandler:
 8777              		@ Stack Align: May be called with mis-aligned SP.
 8778              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccDfNsWv.s 			page 155


 8779              		@ frame_needed = 0, uses_anonymous_args = 0
 8780              		@ link register save eliminated.
 8781 0000 6846     		mov	r0, sp	@,
 8782 0002 20F00701 		bic	r1, r0, #7	@,,
 8783 0006 8D46     		mov	sp, r1	@,
 8784 0008 01B4     		push	{r0}	@
 8785              	@ main.c:5073: 		TIM3->SR = 0;
 8786 000a 0020     		movs	r0, #0	@ tmp122,
 8787              	@ main.c:5077: 		N = Timt3     + TIM3_ARR; Timt3 = N;
 8788 000c 4FF6FF73 		movw	r3, #65535	@ tmp124,
 8789              	@ main.c:5073: 		TIM3->SR = 0;
 8790 0010 0C4A     		ldr	r2, .L702	@ tmp120,
 8791              	@ main.c:5077: 		N = Timt3     + TIM3_ARR; Timt3 = N;
 8792 0012 0D49     		ldr	r1, .L702+4	@ tmp123,
 8793              	@ main.c:5073: 		TIM3->SR = 0;
 8794 0014 1082     		strh	r0, [r2, #16]	@ movhi	@ tmp122, MEM[(struct TIM_TypeDef *)1073742848B].SR
 8795              	@ main.c:5077: 		N = Timt3     + TIM3_ARR; Timt3 = N;
 8796 0016 0A68     		ldr	r2, [r1]	@ Timt3.231_1, Timt3
 8797              	@ main.c:5078: 		n = delay3_us + TIM3_ARR; delay3_us = n;
 8798 0018 0C48     		ldr	r0, .L702+8	@ tmp126,
 8799              	@ main.c:5077: 		N = Timt3     + TIM3_ARR; Timt3 = N;
 8800 001a 1A44     		add	r2, r2, r3	@ N, tmp124
 8801 001c 0A60     		str	r2, [r1]	@ N, Timt3
 8802              	@ main.c:5078: 		n = delay3_us + TIM3_ARR; delay3_us = n;
 8803 001e 0268     		ldr	r2, [r0]	@ delay3_us.232_2, delay3_us
 8804              	@ main.c:5082: 		n = (t3rg0 + TIM3_ARR); t3rg0 = n;
 8805 0020 0B49     		ldr	r1, .L702+12	@ tmp129,
 8806              	@ main.c:5078: 		n = delay3_us + TIM3_ARR; delay3_us = n;
 8807 0022 1A44     		add	r2, r2, r3	@ n, tmp124
 8808 0024 0260     		str	r2, [r0]	@ n, delay3_us
 8809              	@ main.c:5082: 		n = (t3rg0 + TIM3_ARR); t3rg0 = n;
 8810 0026 0A68     		ldr	r2, [r1]	@ t3rg0.233_3, t3rg0
 8811              	@ main.c:5083: 		n = (t3rg1 + TIM3_ARR); t3rg1 = n;
 8812 0028 0A48     		ldr	r0, .L702+16	@ tmp132,
 8813              	@ main.c:5082: 		n = (t3rg0 + TIM3_ARR); t3rg0 = n;
 8814 002a 1A44     		add	r2, r2, r3	@ n, tmp124
 8815 002c 0A60     		str	r2, [r1]	@ n, t3rg0
 8816              	@ main.c:5083: 		n = (t3rg1 + TIM3_ARR); t3rg1 = n;
 8817 002e 0268     		ldr	r2, [r0]	@ t3rg1.234_4, t3rg1
 8818              	@ main.c:5084: 		n = (t3rg2 + TIM3_ARR); t3rg2 = n;
 8819 0030 0949     		ldr	r1, .L702+20	@ tmp135,
 8820              	@ main.c:5083: 		n = (t3rg1 + TIM3_ARR); t3rg1 = n;
 8821 0032 1A44     		add	r2, r2, r3	@ n, tmp124
 8822 0034 0260     		str	r2, [r0]	@ n, t3rg1
 8823              	@ main.c:5084: 		n = (t3rg2 + TIM3_ARR); t3rg2 = n;
 8824 0036 0A68     		ldr	r2, [r1]	@ t3rg2.235_5, t3rg2
 8825              	@ main.c:5088: 	}
 8826 0038 01BC     		pop	{r0}	@
 8827              	@ main.c:5084: 		n = (t3rg2 + TIM3_ARR); t3rg2 = n;
 8828 003a 1344     		add	r3, r3, r2	@ n, t3rg2.235_5
 8829 003c 0B60     		str	r3, [r1]	@ n, t3rg2
 8830              	@ main.c:5088: 	}
 8831 003e 8546     		mov	sp, r0	@,
 8832 0040 7047     		bx	lr	@
 8833              	.L703:
 8834 0042 00BF     		.align	2
 8835              	.L702:
ARM GAS  /tmp/ccDfNsWv.s 			page 156


 8836 0044 00040040 		.word	1073742848
 8837 0048 00000000 		.word	Timt3
 8838 004c 00000000 		.word	delay3_us
 8839 0050 00000000 		.word	t3rg0
 8840 0054 00000000 		.word	t3rg1
 8841 0058 00000000 		.word	t3rg2
 8842              		.size	TIM3_IRQHandler, .-TIM3_IRQHandler
 8843              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 8844              		.align	1
 8845              		.p2align 2,,3
 8846              		.global	EXTI0_IRQHandler
 8847              		.syntax unified
 8848              		.thumb
 8849              		.thumb_func
 8850              		.fpu softvfp
 8851              		.type	EXTI0_IRQHandler, %function
 8852              	EXTI0_IRQHandler:
 8853              		@ Stack Align: May be called with mis-aligned SP.
 8854              		@ args = 0, pretend = 0, frame = 0
 8855              		@ frame_needed = 0, uses_anonymous_args = 0
 8856              		@ link register save eliminated.
 8857 0000 6846     		mov	r0, sp	@,
 8858 0002 20F00701 		bic	r1, r0, #7	@,,
 8859 0006 8D46     		mov	sp, r1	@,
 8860              	@ main.c:5090: 		if(PB0_i){
 8861 0008 064B     		ldr	r3, .L709	@ tmp116,
 8862              	@ main.c:5089: __attribute__((interrupt)) void EXTI0_IRQHandler(void)			{
 8863 000a 01B4     		push	{r0}	@
 8864              	@ main.c:5090: 		if(PB0_i){
 8865 000c 1B68     		ldr	r3, [r3]	@ _1, MEM[(volatile long unsigned int *)1109491968B]
 8866 000e 1BB1     		cbz	r3, .L705	@ _1,
 8867              	@ main.c:5091: 			flag_9=1;
 8868 0010 0122     		movs	r2, #1	@ tmp120,
 8869 0012 054B     		ldr	r3, .L709+4	@ tmp118,
 8870 0014 5B01     		lsls	r3, r3, #5	@ tmp119, tmp118,
 8871 0016 5A62     		str	r2, [r3, #36]	@ tmp120, *_6
 8872              	.L705:
 8873              	@ main.c:5093: 		EXTI->PR   = EXTI_PR_PR0;				// Clear interupt request
 8874 0018 0122     		movs	r2, #1	@ tmp122,
 8875 001a 044B     		ldr	r3, .L709+8	@ tmp121,
 8876              	@ main.c:5094: 	}
 8877 001c 01BC     		pop	{r0}	@
 8878              	@ main.c:5093: 		EXTI->PR   = EXTI_PR_PR0;				// Clear interupt request
 8879 001e 5A61     		str	r2, [r3, #20]	@ tmp122, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 8880              	@ main.c:5094: 	}
 8881 0020 8546     		mov	sp, r0	@,
 8882 0022 7047     		bx	lr	@
 8883              	.L710:
 8884              		.align	2
 8885              	.L709:
 8886 0024 00812142 		.word	1109491968
 8887 0028 00001001 		.word	.LANCHOR8+17825792
 8888 002c 00040140 		.word	1073808384
 8889              		.size	EXTI0_IRQHandler, .-EXTI0_IRQHandler
 8890              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
 8891              		.align	1
 8892              		.p2align 2,,3
ARM GAS  /tmp/ccDfNsWv.s 			page 157


 8893              		.global	EXTI1_IRQHandler
 8894              		.syntax unified
 8895              		.thumb
 8896              		.thumb_func
 8897              		.fpu softvfp
 8898              		.type	EXTI1_IRQHandler, %function
 8899              	EXTI1_IRQHandler:
 8900              		@ Stack Align: May be called with mis-aligned SP.
 8901              		@ args = 0, pretend = 0, frame = 0
 8902              		@ frame_needed = 0, uses_anonymous_args = 0
 8903              		@ link register save eliminated.
 8904 0000 6846     		mov	r0, sp	@,
 8905 0002 20F00701 		bic	r1, r0, #7	@,,
 8906 0006 8D46     		mov	sp, r1	@,
 8907              	@ main.c:5097: 		EXTI->PR   = EXTI_PR_PR1;				// Clear interupt request
 8908 0008 0221     		movs	r1, #2	@ tmp113,
 8909 000a 054B     		ldr	r3, .L712	@ tmp112,
 8910              	@ main.c:5098: 		LED ^=1;
 8911 000c 054A     		ldr	r2, .L712+4	@ tmp114,
 8912              	@ main.c:5095: __attribute__((interrupt)) void EXTI1_IRQHandler(void)			{
 8913 000e 01B4     		push	{r0}	@
 8914              	@ main.c:5097: 		EXTI->PR   = EXTI_PR_PR1;				// Clear interupt request
 8915 0010 5961     		str	r1, [r3, #20]	@ tmp113, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 8916              	@ main.c:5098: 		LED ^=1;
 8917 0012 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109524916B]
 8918              	@ main.c:5099: 	}
 8919 0014 01BC     		pop	{r0}	@
 8920              	@ main.c:5098: 		LED ^=1;
 8921 0016 83F00103 		eor	r3, r3, #1	@ _2, _1,
 8922 001a 1360     		str	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109524916B]
 8923              	@ main.c:5099: 	}
 8924 001c 8546     		mov	sp, r0	@,
 8925 001e 7047     		bx	lr	@
 8926              	.L713:
 8927              		.align	2
 8928              	.L712:
 8929 0020 00040140 		.word	1073808384
 8930 0024 B4012242 		.word	1109524916
 8931              		.size	EXTI1_IRQHandler, .-EXTI1_IRQHandler
 8932              		.section	.text.EXTI2_IRQHandler,"ax",%progbits
 8933              		.align	1
 8934              		.p2align 2,,3
 8935              		.global	EXTI2_IRQHandler
 8936              		.syntax unified
 8937              		.thumb
 8938              		.thumb_func
 8939              		.fpu softvfp
 8940              		.type	EXTI2_IRQHandler, %function
 8941              	EXTI2_IRQHandler:
 8942              		@ Stack Align: May be called with mis-aligned SP.
 8943              		@ args = 0, pretend = 0, frame = 0
 8944              		@ frame_needed = 0, uses_anonymous_args = 0
 8945              		@ link register save eliminated.
 8946 0000 6846     		mov	r0, sp	@,
 8947 0002 20F00701 		bic	r1, r0, #7	@,,
 8948 0006 8D46     		mov	sp, r1	@,
 8949              	@ main.c:5101: 		bEXTI_PR_2 = 1;
ARM GAS  /tmp/ccDfNsWv.s 			page 158


 8950 0008 0121     		movs	r1, #1	@ tmp113,
 8951 000a 054B     		ldr	r3, .L715	@ tmp112,
 8952              	@ main.c:5102: 		LED ^= 1;
 8953 000c 054A     		ldr	r2, .L715+4	@ tmp114,
 8954              	@ main.c:5100: __attribute__((interrupt)) void EXTI2_IRQHandler(void)			{
 8955 000e 01B4     		push	{r0}	@
 8956              	@ main.c:5101: 		bEXTI_PR_2 = 1;
 8957 0010 1960     		str	r1, [r3]	@ tmp113, MEM[(volatile long unsigned int *)1109426824B]
 8958              	@ main.c:5102: 		LED ^= 1;
 8959 0012 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109524916B]
 8960              	@ main.c:5103: 	}
 8961 0014 01BC     		pop	{r0}	@
 8962              	@ main.c:5102: 		LED ^= 1;
 8963 0016 4B40     		eors	r3, r3, r1	@, _2, _1,
 8964 0018 1360     		str	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109524916B]
 8965              	@ main.c:5103: 	}
 8966 001a 8546     		mov	sp, r0	@,
 8967 001c 7047     		bx	lr	@
 8968              	.L716:
 8969 001e 00BF     		.align	2
 8970              	.L715:
 8971 0020 88822042 		.word	1109426824
 8972 0024 B4012242 		.word	1109524916
 8973              		.size	EXTI2_IRQHandler, .-EXTI2_IRQHandler
 8974              		.section	.text.EXTI3_IRQHandler,"ax",%progbits
 8975              		.align	1
 8976              		.p2align 2,,3
 8977              		.global	EXTI3_IRQHandler
 8978              		.syntax unified
 8979              		.thumb
 8980              		.thumb_func
 8981              		.fpu softvfp
 8982              		.type	EXTI3_IRQHandler, %function
 8983              	EXTI3_IRQHandler:
 8984              		@ Stack Align: May be called with mis-aligned SP.
 8985              		@ args = 0, pretend = 0, frame = 0
 8986              		@ frame_needed = 0, uses_anonymous_args = 0
 8987              		@ link register save eliminated.
 8988 0000 6846     		mov	r0, sp	@,
 8989 0002 20F00701 		bic	r1, r0, #7	@,,
 8990 0006 8D46     		mov	sp, r1	@,
 8991              	@ main.c:5105: 		EXTI->PR   = EXTI_PR_PR3;				// Clear interupt request
 8992 0008 0821     		movs	r1, #8	@ tmp113,
 8993 000a 054B     		ldr	r3, .L718	@ tmp112,
 8994              	@ main.c:5106: 		LED ^=1;
 8995 000c 054A     		ldr	r2, .L718+4	@ tmp114,
 8996              	@ main.c:5104: __attribute__((interrupt)) void EXTI3_IRQHandler(void)			{
 8997 000e 01B4     		push	{r0}	@
 8998              	@ main.c:5105: 		EXTI->PR   = EXTI_PR_PR3;				// Clear interupt request
 8999 0010 5961     		str	r1, [r3, #20]	@ tmp113, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9000              	@ main.c:5106: 		LED ^=1;
 9001 0012 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109524916B]
 9002              	@ main.c:5107: 	}
 9003 0014 01BC     		pop	{r0}	@
 9004              	@ main.c:5106: 		LED ^=1;
 9005 0016 83F00103 		eor	r3, r3, #1	@ _2, _1,
 9006 001a 1360     		str	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109524916B]
ARM GAS  /tmp/ccDfNsWv.s 			page 159


 9007              	@ main.c:5107: 	}
 9008 001c 8546     		mov	sp, r0	@,
 9009 001e 7047     		bx	lr	@
 9010              	.L719:
 9011              		.align	2
 9012              	.L718:
 9013 0020 00040140 		.word	1073808384
 9014 0024 B4012242 		.word	1109524916
 9015              		.size	EXTI3_IRQHandler, .-EXTI3_IRQHandler
 9016              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
 9017              		.align	1
 9018              		.p2align 2,,3
 9019              		.global	EXTI4_IRQHandler
 9020              		.syntax unified
 9021              		.thumb
 9022              		.thumb_func
 9023              		.fpu softvfp
 9024              		.type	EXTI4_IRQHandler, %function
 9025              	EXTI4_IRQHandler:
 9026              		@ Stack Align: May be called with mis-aligned SP.
 9027              		@ args = 0, pretend = 0, frame = 0
 9028              		@ frame_needed = 0, uses_anonymous_args = 0
 9029              		@ link register save eliminated.
 9030 0000 6846     		mov	r0, sp	@,
 9031 0002 20F00701 		bic	r1, r0, #7	@,,
 9032 0006 8D46     		mov	sp, r1	@,
 9033              	@ main.c:5109: 		EXTI->PR   = EXTI_PR_PR4;			
 9034 0008 1021     		movs	r1, #16	@ tmp113,
 9035 000a 054B     		ldr	r3, .L721	@ tmp112,
 9036              	@ main.c:5110: 		LED ^= 1;
 9037 000c 054A     		ldr	r2, .L721+4	@ tmp114,
 9038              	@ main.c:5108: __attribute__((interrupt)) void EXTI4_IRQHandler(void)			{
 9039 000e 01B4     		push	{r0}	@
 9040              	@ main.c:5109: 		EXTI->PR   = EXTI_PR_PR4;			
 9041 0010 5961     		str	r1, [r3, #20]	@ tmp113, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9042              	@ main.c:5110: 		LED ^= 1;
 9043 0012 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109524916B]
 9044              	@ main.c:5111: 	}
 9045 0014 01BC     		pop	{r0}	@
 9046              	@ main.c:5110: 		LED ^= 1;
 9047 0016 83F00103 		eor	r3, r3, #1	@ _2, _1,
 9048 001a 1360     		str	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109524916B]
 9049              	@ main.c:5111: 	}
 9050 001c 8546     		mov	sp, r0	@,
 9051 001e 7047     		bx	lr	@
 9052              	.L722:
 9053              		.align	2
 9054              	.L721:
 9055 0020 00040140 		.word	1073808384
 9056 0024 B4012242 		.word	1109524916
 9057              		.size	EXTI4_IRQHandler, .-EXTI4_IRQHandler
 9058              		.section	.text.EXTI15_10_IRQHandler,"ax",%progbits
 9059              		.align	1
 9060              		.p2align 2,,3
 9061              		.global	EXTI15_10_IRQHandler
 9062              		.syntax unified
 9063              		.thumb
ARM GAS  /tmp/ccDfNsWv.s 			page 160


 9064              		.thumb_func
 9065              		.fpu softvfp
 9066              		.type	EXTI15_10_IRQHandler, %function
 9067              	EXTI15_10_IRQHandler:
 9068              		@ Stack Align: May be called with mis-aligned SP.
 9069              		@ args = 0, pretend = 0, frame = 0
 9070              		@ frame_needed = 0, uses_anonymous_args = 0
 9071              		@ link register save eliminated.
 9072 0000 6846     		mov	r0, sp	@,
 9073 0002 20F00701 		bic	r1, r0, #7	@,,
 9074 0006 8D46     		mov	sp, r1	@,
 9075              	@ main.c:5113: 		if(bEXTI_PR_13) {
 9076 0008 044B     		ldr	r3, .L728	@ tmp111,
 9077              	@ main.c:5112: __attribute__((interrupt)) void EXTI15_10_IRQHandler(void)	{
 9078 000a 01B4     		push	{r0}	@
 9079              	@ main.c:5113: 		if(bEXTI_PR_13) {
 9080 000c 1A68     		ldr	r2, [r3]	@ _1, MEM[(volatile long unsigned int *)1109426868B]
 9081 000e 0AB1     		cbz	r2, .L723	@ _1,
 9082              	@ main.c:5114: 			bEXTI_PR_13 = 1;
 9083 0010 0122     		movs	r2, #1	@ tmp113,
 9084 0012 1A60     		str	r2, [r3]	@ tmp113, MEM[(volatile long unsigned int *)1109426868B]
 9085              	.L723:
 9086              	@ main.c:5118: 	}
 9087 0014 01BC     		pop	{r0}	@
 9088 0016 8546     		mov	sp, r0	@,
 9089 0018 7047     		bx	lr	@
 9090              	.L729:
 9091 001a 00BF     		.align	2
 9092              	.L728:
 9093 001c B4822042 		.word	1109426868
 9094              		.size	EXTI15_10_IRQHandler, .-EXTI15_10_IRQHandler
 9095              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 9096              		.align	1
 9097              		.p2align 2,,3
 9098              		.global	EXTI9_5_IRQHandler
 9099              		.syntax unified
 9100              		.thumb
 9101              		.thumb_func
 9102              		.fpu softvfp
 9103              		.type	EXTI9_5_IRQHandler, %function
 9104              	EXTI9_5_IRQHandler:
 9105              		@ Stack Align: May be called with mis-aligned SP.
 9106              		@ args = 0, pretend = 0, frame = 0
 9107              		@ frame_needed = 0, uses_anonymous_args = 0
 9108              		@ link register save eliminated.
 9109 0000 6846     		mov	r0, sp	@,
 9110 0002 20F00701 		bic	r1, r0, #7	@,,
 9111 0006 8D46     		mov	sp, r1	@,
 9112              	@ main.c:5120: 		if((bPBI_6 == 0)&&(EXTI->PR & EXTI_PR_PR6)) {			// check request PB6 touchpad
 9113 0008 0B4B     		ldr	r3, .L735	@ tmp120,
 9114              	@ main.c:5119: __attribute__((interrupt)) void EXTI9_5_IRQHandler	 (void)	{
 9115 000a 01B4     		push	{r0}	@
 9116              	@ main.c:5120: 		if((bPBI_6 == 0)&&(EXTI->PR & EXTI_PR_PR6)) {			// check request PB6 touchpad
 9117 000c 1B68     		ldr	r3, [r3]	@ _1, MEM[(volatile long unsigned int *)1109491992B]
 9118 000e 83B9     		cbnz	r3, .L730	@ _1,
 9119              	@ main.c:5120: 		if((bPBI_6 == 0)&&(EXTI->PR & EXTI_PR_PR6)) {			// check request PB6 touchpad
 9120 0010 03F18043 		add	r3, r3, #1073741824	@ tmp121, tmp121,
ARM GAS  /tmp/ccDfNsWv.s 			page 161


 9121 0014 03F58233 		add	r3, r3, #66560	@ tmp121, tmp121,
 9122 0018 5A69     		ldr	r2, [r3, #20]	@ _2, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9123 001a 5206     		lsls	r2, r2, #25	@, _2,
 9124 001c 09D5     		bpl	.L730	@,
 9125              	@ main.c:5123: 			f1_tpirq   = 1;									// set IRQ_TP FLAG
 9126 001e 0120     		movs	r0, #1	@ tmp126,
 9127              	@ main.c:5124: 			EXTI->PR   = EXTI_PR_PR6;				// Clear interupt request
 9128 0020 4021     		movs	r1, #64	@ tmp128,
 9129              	@ main.c:5123: 			f1_tpirq   = 1;									// set IRQ_TP FLAG
 9130 0022 064A     		ldr	r2, .L735+4	@ tmp124,
 9131 0024 5201     		lsls	r2, r2, #5	@ tmp125, tmp124,
 9132 0026 5060     		str	r0, [r2, #4]	@ tmp126, *_8
 9133              	@ main.c:5124: 			EXTI->PR   = EXTI_PR_PR6;				// Clear interupt request
 9134 0028 5961     		str	r1, [r3, #20]	@ tmp128, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9135              	@ main.c:5127: 			EXTI->FTSR &= ~EXTI_FTSR_TR6;  	// Failing trigger disabled
 9136 002a DA68     		ldr	r2, [r3, #12]	@ _9, MEM[(struct EXTI_TypeDef *)1073808384B].FTSR
 9137 002c 22F04002 		bic	r2, r2, #64	@ _10, _9,
 9138 0030 DA60     		str	r2, [r3, #12]	@ _10, MEM[(struct EXTI_TypeDef *)1073808384B].FTSR
 9139              	.L730:
 9140              	@ main.c:5131: 	}
 9141 0032 01BC     		pop	{r0}	@
 9142 0034 8546     		mov	sp, r0	@,
 9143 0036 7047     		bx	lr	@
 9144              	.L736:
 9145              		.align	2
 9146              	.L735:
 9147 0038 18812142 		.word	1109491992
 9148 003c 00001001 		.word	.LANCHOR8+17825792
 9149              		.size	EXTI9_5_IRQHandler, .-EXTI9_5_IRQHandler
 9150              		.section	.text.RTC_IRQHandler,"ax",%progbits
 9151              		.align	1
 9152              		.p2align 2,,3
 9153              		.global	RTC_IRQHandler
 9154              		.syntax unified
 9155              		.thumb
 9156              		.thumb_func
 9157              		.fpu softvfp
 9158              		.type	RTC_IRQHandler, %function
 9159              	RTC_IRQHandler:
 9160              		@ Stack Align: May be called with mis-aligned SP.
 9161              		@ args = 0, pretend = 0, frame = 0
 9162              		@ frame_needed = 0, uses_anonymous_args = 0
 9163              		@ link register save eliminated.
 9164 0000 6846     		mov	r0, sp	@,
 9165 0002 20F00701 		bic	r1, r0, #7	@,,
 9166 0006 8D46     		mov	sp, r1	@,
 9167              	@ main.c:5136: 		f3_rtc_1sec = 1;
 9168 0008 0121     		movs	r1, #1	@ tmp121,
 9169              	@ main.c:5132: __attribute__((interrupt)) void RTC_IRQHandler 	(void)			{
 9170 000a 11B4     		push	{r0, r4}	@
 9171              	@ main.c:5135: 		bRTC_CRL_SECF = 0;		//Clear Interrupt Flag bit
 9172 000c 0024     		movs	r4, #0	@ tmp117,
 9173              	@ main.c:5136: 		f3_rtc_1sec = 1;
 9174 000e 064B     		ldr	r3, .L741	@ tmp119,
 9175              	@ main.c:5135: 		bRTC_CRL_SECF = 0;		//Clear Interrupt Flag bit
 9176 0010 0648     		ldr	r0, .L741+4	@ tmp116,
 9177              	@ main.c:5136: 		f3_rtc_1sec = 1;
ARM GAS  /tmp/ccDfNsWv.s 			page 162


 9178 0012 5B01     		lsls	r3, r3, #5	@ tmp120, tmp119,
 9179              	@ main.c:5137: 		while( bRTC_CRL_RTOFF == 0 );
 9180 0014 064A     		ldr	r2, .L741+8	@ tmp122,
 9181              	@ main.c:5135: 		bRTC_CRL_SECF = 0;		//Clear Interrupt Flag bit
 9182 0016 0460     		str	r4, [r0]	@ tmp117, MEM[(volatile long unsigned int *)1107624064B]
 9183              	@ main.c:5136: 		f3_rtc_1sec = 1;
 9184 0018 D960     		str	r1, [r3, #12]	@ tmp121, *_5
 9185              	.L738:
 9186              	@ main.c:5137: 		while( bRTC_CRL_RTOFF == 0 );
 9187 001a 1368     		ldr	r3, [r2]	@ _6, MEM[(volatile long unsigned int *)1107624084B]
 9188 001c 002B     		cmp	r3, #0	@ _6
 9189 001e FCD0     		beq	.L738	@
 9190              	@ main.c:5138: 	}
 9191 0020 11BC     		pop	{r0, r4}	@
 9192 0022 8546     		mov	sp, r0	@,
 9193 0024 7047     		bx	lr	@
 9194              	.L742:
 9195 0026 00BF     		.align	2
 9196              	.L741:
 9197 0028 00001001 		.word	.LANCHOR8+17825792
 9198 002c 80000542 		.word	1107624064
 9199 0030 94000542 		.word	1107624084
 9200              		.size	RTC_IRQHandler, .-RTC_IRQHandler
 9201              		.section	.text.RTCAlarm_IRQHandler,"ax",%progbits
 9202              		.align	1
 9203              		.p2align 2,,3
 9204              		.global	RTCAlarm_IRQHandler
 9205              		.syntax unified
 9206              		.thumb
 9207              		.thumb_func
 9208              		.fpu softvfp
 9209              		.type	RTCAlarm_IRQHandler, %function
 9210              	RTCAlarm_IRQHandler:
 9211              		@ Stack Align: May be called with mis-aligned SP.
 9212              		@ args = 0, pretend = 0, frame = 0
 9213              		@ frame_needed = 0, uses_anonymous_args = 0
 9214              		@ link register save eliminated.
 9215 0000 6846     		mov	r0, sp	@,
 9216 0002 20F00701 		bic	r1, r0, #7	@,,
 9217 0006 8D46     		mov	sp, r1	@,
 9218              	@ main.c:5140: 		RTC->CRL &= ~(RTC_CRL_ALRF); // potrzebne do wakeup
 9219 0008 0749     		ldr	r1, .L744	@ tmp114,
 9220              	@ main.c:5141: 		EXTI->PR |= EXTI_PR_PR17;
 9221 000a 084A     		ldr	r2, .L744+4	@ tmp120,
 9222              	@ main.c:5140: 		RTC->CRL &= ~(RTC_CRL_ALRF); // potrzebne do wakeup
 9223 000c 8B88     		ldrh	r3, [r1, #4]	@, MEM[(struct RTC_TypeDef *)1073752064B].CRL
 9224              	@ main.c:5139: __attribute__((interrupt)) void RTCAlarm_IRQHandler(void){
 9225 000e 01B4     		push	{r0}	@
 9226              	@ main.c:5140: 		RTC->CRL &= ~(RTC_CRL_ALRF); // potrzebne do wakeup
 9227 0010 23F00203 		bic	r3, r3, #2	@ _2, MEM[(struct RTC_TypeDef *)1073752064B].CRL,
 9228 0014 1B04     		lsls	r3, r3, #16	@ _2, _2,
 9229 0016 1B0C     		lsrs	r3, r3, #16	@ _2, _2,
 9230 0018 8B80     		strh	r3, [r1, #4]	@ movhi	@ _2, MEM[(struct RTC_TypeDef *)1073752064B].CRL
 9231              	@ main.c:5141: 		EXTI->PR |= EXTI_PR_PR17;
 9232 001a 5369     		ldr	r3, [r2, #20]	@ _3, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9233              	@ main.c:5144: 	}
 9234 001c 01BC     		pop	{r0}	@
ARM GAS  /tmp/ccDfNsWv.s 			page 163


 9235              	@ main.c:5141: 		EXTI->PR |= EXTI_PR_PR17;
 9236 001e 43F40033 		orr	r3, r3, #131072	@ _4, _3,
 9237 0022 5361     		str	r3, [r2, #20]	@ _4, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9238              	@ main.c:5144: 	}
 9239 0024 8546     		mov	sp, r0	@,
 9240 0026 7047     		bx	lr	@
 9241              	.L745:
 9242              		.align	2
 9243              	.L744:
 9244 0028 00280040 		.word	1073752064
 9245 002c 00040140 		.word	1073808384
 9246              		.size	RTCAlarm_IRQHandler, .-RTCAlarm_IRQHandler
 9247              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 9248              		.align	1
 9249              		.p2align 2,,3
 9250              		.global	DMA1_Channel1_IRQHandler
 9251              		.syntax unified
 9252              		.thumb
 9253              		.thumb_func
 9254              		.fpu softvfp
 9255              		.type	DMA1_Channel1_IRQHandler, %function
 9256              	DMA1_Channel1_IRQHandler:
 9257              		@ Stack Align: May be called with mis-aligned SP.
 9258              		@ args = 0, pretend = 0, frame = 0
 9259              		@ frame_needed = 0, uses_anonymous_args = 0
 9260              		@ link register save eliminated.
 9261 0000 6846     		mov	r0, sp	@,
 9262 0002 20F00701 		bic	r1, r0, #7	@,,
 9263 0006 8D46     		mov	sp, r1	@,
 9264              	@ main.c:5146: 		if(DMA1->ISR & DMA_ISR_GIF1){
 9265 0008 084B     		ldr	r3, .L751	@ tmp119,
 9266              	@ main.c:5145: __attribute__((interrupt)) void DMA1_Channel1_IRQHandler(void){
 9267 000a 11B4     		push	{r0, r4}	@
 9268              	@ main.c:5146: 		if(DMA1->ISR & DMA_ISR_GIF1){
 9269 000c 1A68     		ldr	r2, [r3]	@ _1, MEM[(struct DMA_TypeDef *)1073872896B].ISR
 9270 000e D207     		lsls	r2, r2, #31	@, _1,
 9271 0010 09D5     		bpl	.L746	@,
 9272              	@ main.c:5151: 			f7_dma1 = 1;
 9273 0012 0120     		movs	r0, #1	@ tmp126,
 9274              	@ main.c:5148: 			DMA1->IFCR =                  DMA_IFCR_CTCIF1;
 9275 0014 0224     		movs	r4, #2	@ tmp122,
 9276              	@ main.c:5151: 			f7_dma1 = 1;
 9277 0016 064A     		ldr	r2, .L751+4	@ tmp124,
 9278              	@ main.c:5152: 			LED1   ^= 1;
 9279 0018 0649     		ldr	r1, .L751+8	@ tmp127,
 9280              	@ main.c:5151: 			f7_dma1 = 1;
 9281 001a 5201     		lsls	r2, r2, #5	@ tmp125, tmp124,
 9282              	@ main.c:5148: 			DMA1->IFCR =                  DMA_IFCR_CTCIF1;
 9283 001c 5C60     		str	r4, [r3, #4]	@ tmp122, MEM[(struct DMA_TypeDef *)1073872896B].IFCR
 9284              	@ main.c:5151: 			f7_dma1 = 1;
 9285 001e D061     		str	r0, [r2, #28]	@ tmp126, *_7
 9286              	@ main.c:5152: 			LED1   ^= 1;
 9287 0020 0B68     		ldr	r3, [r1]	@ _8, MEM[(volatile long unsigned int *)1109492096B]
 9288 0022 4340     		eors	r3, r3, r0	@, _9, _8,
 9289 0024 0B60     		str	r3, [r1]	@ _9, MEM[(volatile long unsigned int *)1109492096B]
 9290              	.L746:
 9291              	@ main.c:5156: 	}
ARM GAS  /tmp/ccDfNsWv.s 			page 164


 9292 0026 11BC     		pop	{r0, r4}	@
 9293 0028 8546     		mov	sp, r0	@,
 9294 002a 7047     		bx	lr	@
 9295              	.L752:
 9296              		.align	2
 9297              	.L751:
 9298 002c 00000240 		.word	1073872896
 9299 0030 00001001 		.word	.LANCHOR8+17825792
 9300 0034 80812142 		.word	1109492096
 9301              		.size	DMA1_Channel1_IRQHandler, .-DMA1_Channel1_IRQHandler
 9302              		.section	.text.FSMC_IRQHandler,"ax",%progbits
 9303              		.align	1
 9304              		.p2align 2,,3
 9305              		.global	FSMC_IRQHandler
 9306              		.syntax unified
 9307              		.thumb
 9308              		.thumb_func
 9309              		.fpu softvfp
 9310              		.type	FSMC_IRQHandler, %function
 9311              	FSMC_IRQHandler:
 9312              		@ Stack Align: May be called with mis-aligned SP.
 9313              		@ args = 0, pretend = 0, frame = 0
 9314              		@ frame_needed = 0, uses_anonymous_args = 0
 9315              		@ link register save eliminated.
 9316 0000 6846     		mov	r0, sp	@,
 9317 0002 20F00701 		bic	r1, r0, #7	@,,
 9318 0006 8D46     		mov	sp, r1	@,
 9319 0008 01B4     		push	{r0}	@
 9320              	@ main.c:5159: }
 9321 000a 01BC     		pop	{r0}	@
 9322 000c 8546     		mov	sp, r0	@,
 9323 000e 7047     		bx	lr	@
 9324              		.size	FSMC_IRQHandler, .-FSMC_IRQHandler
 9325              		.section	.text.DACDmaInit,"ax",%progbits
 9326              		.align	1
 9327              		.p2align 2,,3
 9328              		.global	DACDmaInit
 9329              		.syntax unified
 9330              		.thumb
 9331              		.thumb_func
 9332              		.fpu softvfp
 9333              		.type	DACDmaInit, %function
 9334              	DACDmaInit:
 9335              		@ args = 0, pretend = 0, frame = 0
 9336              		@ frame_needed = 0, uses_anonymous_args = 0
 9337              		@ link register save eliminated.
 9338 0000 10B4     		push	{r4}	@
 9339              	@ main.c:5350: 	DAC->DHR12RD	= (0<<16) | 900;
 9340 0002 4FF46174 		mov	r4, #900	@ tmp125,
 9341              	@ main.c:5341: 	RCC->APB1ENR  |= RCC_APB1ENR_DACEN;
 9342 0006 0A48     		ldr	r0, .L756	@ tmp116,
 9343              	@ main.c:5342: 	GPIOA->CRL   	&= 0xff00ffff;
 9344 0008 0A4B     		ldr	r3, .L756+4	@ tmp118,
 9345              	@ main.c:5341: 	RCC->APB1ENR  |= RCC_APB1ENR_DACEN;
 9346 000a C269     		ldr	r2, [r0, #28]	@ _1, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 9347              	@ main.c:5346: 	DAC->CR				= DAC_CR_TEN1|DAC_CR_TEN2|DAC_CR_WAVE1|DAC_CR_WAVE2|DAC_CR_EN1|DAC_CR_EN
 9348 000c 0A49     		ldr	r1, .L756+8	@ tmp122,
ARM GAS  /tmp/ccDfNsWv.s 			page 165


 9349              	@ main.c:5341: 	RCC->APB1ENR  |= RCC_APB1ENR_DACEN;
 9350 000e 42F00052 		orr	r2, r2, #536870912	@ _2, _1,
 9351 0012 C261     		str	r2, [r0, #28]	@ _2, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 9352              	@ main.c:5342: 	GPIOA->CRL   	&= 0xff00ffff;
 9353 0014 1A68     		ldr	r2, [r3]	@ _3, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 9354              	@ main.c:5346: 	DAC->CR				= DAC_CR_TEN1|DAC_CR_TEN2|DAC_CR_WAVE1|DAC_CR_WAVE2|DAC_CR_EN1|DAC_CR_EN
 9355 0016 0948     		ldr	r0, .L756+12	@ tmp123,
 9356              	@ main.c:5342: 	GPIOA->CRL   	&= 0xff00ffff;
 9357 0018 22F47F02 		bic	r2, r2, #16711680	@ _4, _3,
 9358 001c 1A60     		str	r2, [r3]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 9359              	@ main.c:5343: 	GPIOA->CRL   	|= 0x00dd0000;
 9360 001e 1A68     		ldr	r2, [r3]	@ _5, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 9361 0020 42F45D02 		orr	r2, r2, #14483456	@ _6, _5,
 9362 0024 1A60     		str	r2, [r3]	@ _6, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 9363              	@ main.c:5346: 	DAC->CR				= DAC_CR_TEN1|DAC_CR_TEN2|DAC_CR_WAVE1|DAC_CR_WAVE2|DAC_CR_EN1|DAC_CR_EN
 9364 0026 0860     		str	r0, [r1]	@ tmp123, MEM[(struct DAC_TypeDef *)1073771520B].CR
 9365              	@ main.c:5350: 	DAC->DHR12RD	= (0<<16) | 900;
 9366 0028 0C62     		str	r4, [r1, #32]	@ tmp125, MEM[(struct DAC_TypeDef *)1073771520B].DHR12RD
 9367              	@ main.c:5352: }
 9368 002a 10BC     		pop	{r4}	@
 9369 002c 7047     		bx	lr	@
 9370              	.L757:
 9371 002e 00BF     		.align	2
 9372              	.L756:
 9373 0030 00100240 		.word	1073876992
 9374 0034 00080140 		.word	1073809408
 9375 0038 00740040 		.word	1073771520
 9376 003c D50AD50A 		.word	181734101
 9377              		.size	DACDmaInit, .-DACDmaInit
 9378              		.section	.text.TIM4_IRQHandler,"ax",%progbits
 9379              		.align	1
 9380              		.p2align 2,,3
 9381              		.global	TIM4_IRQHandler
 9382              		.syntax unified
 9383              		.thumb
 9384              		.thumb_func
 9385              		.fpu softvfp
 9386              		.type	TIM4_IRQHandler, %function
 9387              	TIM4_IRQHandler:
 9388              		@ args = 0, pretend = 0, frame = 0
 9389              		@ frame_needed = 0, uses_anonymous_args = 0
 9390              		@ link register save eliminated.
 9391              	@ main.c:5426: 		TIM4->SR = 0;
 9392 0000 0021     		movs	r1, #0	@ tmp114,
 9393 0002 034B     		ldr	r3, .L759	@ tmp112,
 9394              	@ main.c:5428: 		Tim4++;
 9395 0004 034A     		ldr	r2, .L759+4	@ tmp115,
 9396              	@ main.c:5426: 		TIM4->SR = 0;
 9397 0006 1982     		strh	r1, [r3, #16]	@ movhi	@ tmp114, MEM[(struct TIM_TypeDef *)1073743872B].SR
 9398              	@ main.c:5428: 		Tim4++;
 9399 0008 1368     		ldr	r3, [r2]	@ Tim4.240_1, Tim4
 9400 000a 0133     		adds	r3, r3, #1	@ _2, Tim4.240_1,
 9401 000c 1360     		str	r3, [r2]	@ _2, Tim4
 9402              	@ main.c:5429: 	}
 9403 000e 7047     		bx	lr	@
 9404              	.L760:
 9405              		.align	2
ARM GAS  /tmp/ccDfNsWv.s 			page 166


 9406              	.L759:
 9407 0010 00080040 		.word	1073743872
 9408 0014 00000000 		.word	Tim4
 9409              		.size	TIM4_IRQHandler, .-TIM4_IRQHandler
 9410              		.section	.text.adc1_init_injected,"ax",%progbits
 9411              		.align	1
 9412              		.p2align 2,,3
 9413              		.global	adc1_init_injected
 9414              		.syntax unified
 9415              		.thumb
 9416              		.thumb_func
 9417              		.fpu softvfp
 9418              		.type	adc1_init_injected, %function
 9419              	adc1_init_injected:
 9420              		@ args = 0, pretend = 0, frame = 0
 9421              		@ frame_needed = 0, uses_anonymous_args = 0
 9422              		@ link register save eliminated.
 9423 0000 F0B4     		push	{r4, r5, r6, r7}	@
 9424              	@ main.c:5474: 	ADC1_CR1_SCAN_bb = 1;									// enable scan mode (multi channel mode)
 9425 0002 0124     		movs	r4, #1	@ tmp144,
 9426              	@ main.c:5464: 	ADC1->SMPR2 = (0<<channel*3);
 9427 0004 0026     		movs	r6, #0	@ tmp131,
 9428              	@ main.c:5472: 	ADC1->CR2 = ADC_CR2_JEXTSEL_JSWSTART | ADC_CR2_JEXTTRIG | ADC_CR2_CAL | ADC_CR2_ADO
 9429 0006 4FF20505 		movw	r5, #61445	@ tmp142,
 9430              	@ main.c:5461: 	RCC->CFGR |= RCC_CFGR_ADCPRE_DIV2;		// divide the ADC clock by 6 -> f_SAMP = 0.85MH
 9431 000a 114A     		ldr	r2, .L769	@ tmp126,
 9432              	@ main.c:5468: 			(channel << ADC_JSQR_JSQ3_bit) |
 9433 000c 8B02     		lsls	r3, r1, #10	@ tmp133, channel,
 9434              	@ main.c:5461: 	RCC->CFGR |= RCC_CFGR_ADCPRE_DIV2;		// divide the ADC clock by 6 -> f_SAMP = 0.85MH
 9435 000e 5768     		ldr	r7, [r2, #4]	@ _1, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 9436              	@ main.c:5469: 			(channel << ADC_JSQR_JSQ2_bit) |
 9437 0010 43EAC133 		orr	r3, r3, r1, lsl #15	@ tmp134, tmp133, channel,
 9438 0014 0B43     		orrs	r3, r3, r1	@, tmp135, tmp134, channel
 9439              	@ main.c:5461: 	RCC->CFGR |= RCC_CFGR_ADCPRE_DIV2;		// divide the ADC clock by 6 -> f_SAMP = 0.85MH
 9440 0016 5760     		str	r7, [r2, #4]	@ _1, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 9441              	@ main.c:5466: 	ADC1->JSQR = ((conversions - 1) << ADC_JSQR_JL_bit) |	// configure desired number o
 9442 0018 0138     		subs	r0, r0, #1	@ tmp138, conversions,
 9443              	@ main.c:5469: 			(channel << ADC_JSQR_JSQ2_bit) |
 9444 001a 43EA4113 		orr	r3, r3, r1, lsl #5	@ tmp137, tmp135, channel,
 9445 001e 43EA0053 		orr	r3, r3, r0, lsl #20	@ _12, tmp137, tmp138,
 9446              	@ main.c:5462: 	RCC->APB2ENR   |= RCC_APB2ENR_ADC1EN;	// enable clock for ADC1
 9447 0022 9069     		ldr	r0, [r2, #24]	@ _2, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 9448              	@ main.c:5464: 	ADC1->SMPR2 = (0<<channel*3);
 9449 0024 0B49     		ldr	r1, .L769+4	@ tmp130,
 9450              	@ main.c:5462: 	RCC->APB2ENR   |= RCC_APB2ENR_ADC1EN;	// enable clock for ADC1
 9451 0026 40F40070 		orr	r0, r0, #512	@ _3, _2,
 9452 002a 9061     		str	r0, [r2, #24]	@ _3, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 9453              	@ main.c:5474: 	ADC1_CR1_SCAN_bb = 1;									// enable scan mode (multi channel mode)
 9454 002c 0A4F     		ldr	r7, .L769+8	@ tmp143,
 9455              	@ main.c:5476: 	ADC1_CR2_JSWSTART_bb = 1;						// start Injected Group
 9456 002e 0B48     		ldr	r0, .L769+12	@ tmp145,
 9457              	@ main.c:5477: 	while (ADC1_SR_JSTRT_bb == 0);			// wait for conversion to start
 9458 0030 0B4A     		ldr	r2, .L769+16	@ tmp147,
 9459              	@ main.c:5464: 	ADC1->SMPR2 = (0<<channel*3);
 9460 0032 0E61     		str	r6, [r1, #16]	@ tmp131, MEM[(struct ADC_TypeDef *)1073816576B].SMPR2
 9461              	@ main.c:5466: 	ADC1->JSQR = ((conversions - 1) << ADC_JSQR_JL_bit) |	// configure desired number o
 9462 0034 8B63     		str	r3, [r1, #56]	@ _12, MEM[(struct ADC_TypeDef *)1073816576B].JSQR
ARM GAS  /tmp/ccDfNsWv.s 			page 167


 9463              	@ main.c:5472: 	ADC1->CR2 = ADC_CR2_JEXTSEL_JSWSTART | ADC_CR2_JEXTTRIG | ADC_CR2_CAL | ADC_CR2_ADO
 9464 0036 8D60     		str	r5, [r1, #8]	@ tmp142, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 9465              	@ main.c:5474: 	ADC1_CR1_SCAN_bb = 1;									// enable scan mode (multi channel mode)
 9466 0038 3C60     		str	r4, [r7]	@ tmp144, MEM[(volatile long unsigned int *)1109688480B]
 9467              	@ main.c:5476: 	ADC1_CR2_JSWSTART_bb = 1;						// start Injected Group
 9468 003a 0460     		str	r4, [r0]	@ tmp144, MEM[(volatile long unsigned int *)1109688660B]
 9469              	.L762:
 9470              	@ main.c:5477: 	while (ADC1_SR_JSTRT_bb == 0);			// wait for conversion to start
 9471 003c 1368     		ldr	r3, [r2]	@ _13, MEM[(volatile long unsigned int *)1109688332B]
 9472 003e 002B     		cmp	r3, #0	@ _13
 9473 0040 FCD0     		beq	.L762	@
 9474              	@ main.c:5483: 	while (ADC1_CR2_CAL_bb == 1);					// wait for calibration end
 9475 0042 084A     		ldr	r2, .L769+20	@ tmp148,
 9476              	.L763:
 9477              	@ main.c:5483: 	while (ADC1_CR2_CAL_bb == 1);					// wait for calibration end
 9478 0044 1368     		ldr	r3, [r2]	@ _14, MEM[(volatile long unsigned int *)1109688584B]
 9479 0046 012B     		cmp	r3, #1	@ _14,
 9480 0048 FCD0     		beq	.L763	@,
 9481              	@ main.c:5484: }
 9482 004a F0BC     		pop	{r4, r5, r6, r7}	@
 9483 004c 7047     		bx	lr	@
 9484              	.L770:
 9485 004e 00BF     		.align	2
 9486              	.L769:
 9487 0050 00100240 		.word	1073876992
 9488 0054 00240140 		.word	1073816576
 9489 0058 A0802442 		.word	1109688480
 9490 005c 54812442 		.word	1109688660
 9491 0060 0C802442 		.word	1109688332
 9492 0064 08812442 		.word	1109688584
 9493              		.size	adc1_init_injected, .-adc1_init_injected
 9494              		.section	.text.adc_get_internals,"ax",%progbits
 9495              		.align	1
 9496              		.p2align 2,,3
 9497              		.global	adc_get_internals
 9498              		.syntax unified
 9499              		.thumb
 9500              		.thumb_func
 9501              		.fpu softvfp
 9502              		.type	adc_get_internals, %function
 9503              	adc_get_internals:
 9504              		@ args = 0, pretend = 0, frame = 0
 9505              		@ frame_needed = 0, uses_anonymous_args = 0
 9506              		@ link register save eliminated.
 9507              	@ main.c:5490: 	ADC1_CR2_JSWSTART_bb = 1;						// start Injected Group
 9508 0000 0122     		movs	r2, #1	@ tmp122,
 9509              	@ main.c:5485: uint32_t adc_get_internals(uint32_t avg_cycles)		{
 9510 0002 10B4     		push	{r4}	@
 9511              	@ main.c:5485: uint32_t adc_get_internals(uint32_t avg_cycles)		{
 9512 0004 0446     		mov	r4, r0	@ avg_cycles, avg_cycles
 9513              	@ main.c:5490: 	ADC1_CR2_JSWSTART_bb = 1;						// start Injected Group
 9514 0006 134B     		ldr	r3, .L785	@ tmp121,
 9515              	@ main.c:5491: 	while (ADC1_SR_JSTRT_bb == 0);			// wait for conversion to start
 9516 0008 1349     		ldr	r1, .L785+4	@ tmp123,
 9517              	@ main.c:5490: 	ADC1_CR2_JSWSTART_bb = 1;						// start Injected Group
 9518 000a 1A60     		str	r2, [r3]	@ tmp122, MEM[(volatile long unsigned int *)1109688660B]
 9519              	.L772:
ARM GAS  /tmp/ccDfNsWv.s 			page 168


 9520              	@ main.c:5491: 	while (ADC1_SR_JSTRT_bb == 0);			// wait for conversion to start
 9521 000c 0B68     		ldr	r3, [r1]	@ _1, MEM[(volatile long unsigned int *)1109688332B]
 9522 000e 002B     		cmp	r3, #0	@ _1
 9523 0010 FCD0     		beq	.L772	@
 9524              	@ main.c:5492: 	ADC1_SR_JSTRT_bb = 0;								// reset "Injected Group start of conversion" flag
 9525 0012 0023     		movs	r3, #0	@ tmp125,
 9526              	@ main.c:5493: 	while (ADC1_SR_JEOC_bb == 0);				// wait for conversions to end
 9527 0014 114A     		ldr	r2, .L785+8	@ tmp126,
 9528              	@ main.c:5492: 	ADC1_SR_JSTRT_bb = 0;								// reset "Injected Group start of conversion" flag
 9529 0016 0B60     		str	r3, [r1]	@ tmp125, MEM[(volatile long unsigned int *)1109688332B]
 9530              	.L773:
 9531              	@ main.c:5493: 	while (ADC1_SR_JEOC_bb == 0);				// wait for conversions to end
 9532 0018 1368     		ldr	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109688328B]
 9533 001a 002B     		cmp	r3, #0	@ _2
 9534 001c FCD0     		beq	.L773	@
 9535              	@ main.c:5494: 	ADC1_SR_JEOC_bb = 0;								// reset "end of conversion" flag
 9536 001e 0020     		movs	r0, #0	@ tmp128,
 9537 0020 1060     		str	r0, [r2]	@ tmp128, MEM[(volatile long unsigned int *)1109688328B]
 9538              	@ main.c:5496: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9539 0022 A4B1     		cbz	r4, .L777	@ avg_cycles,
 9540 0024 0E49     		ldr	r1, .L785+12	@ tmp129,
 9541 0026 0F4A     		ldr	r2, .L785+16	@ pretmp_5,
 9542 0028 0B1D     		adds	r3, r1, #4	@ ivtmp.740, tmp129,
 9543              	@ main.c:5497: 		value += *jdrs[i];
 9544 002a 1268     		ldr	r2, [r2]	@ _14, *prephitmp_20
 9545 002c 01EB8401 		add	r1, r1, r4, lsl #2	@ _24, tmp129, avg_cycles,
 9546              	@ main.c:5496: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9547 0030 8B42     		cmp	r3, r1	@ ivtmp.740, _24
 9548              	@ main.c:5497: 		value += *jdrs[i];
 9549 0032 1044     		add	r0, r0, r2	@ <retval>, _14
 9550              	@ main.c:5496: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9551 0034 05D0     		beq	.L775	@,
 9552              	.L784:
 9553 0036 53F8042B 		ldr	r2, [r3], #4	@ pretmp_5, MEM[base: _25, offset: 0B]
 9554              	@ main.c:5497: 		value += *jdrs[i];
 9555 003a 1268     		ldr	r2, [r2]	@ _14, *prephitmp_20
 9556              	@ main.c:5496: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9557 003c 8B42     		cmp	r3, r1	@ ivtmp.740, _24
 9558              	@ main.c:5497: 		value += *jdrs[i];
 9559 003e 1044     		add	r0, r0, r2	@ <retval>, _14
 9560              	@ main.c:5496: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9561 0040 F9D1     		bne	.L784	@,
 9562              	.L775:
 9563              	@ main.c:5499: 	if (avg_cycles > 1)									// should the samples be averaged?
 9564 0042 012C     		cmp	r4, #1	@ avg_cycles,
 9565 0044 01D9     		bls	.L771	@,
 9566              	@ main.c:5502: 		value /= avg_cycles;
 9567 0046 B0FBF4F0 		udiv	r0, r0, r4	@ <retval>, <retval>, avg_cycles
 9568              	.L771:
 9569              	@ main.c:5506: }
 9570 004a 10BC     		pop	{r4}	@
 9571 004c 7047     		bx	lr	@
 9572              	.L777:
 9573              	@ main.c:5488: 	uint32_t i, value = 0;
 9574 004e 2046     		mov	r0, r4	@ <retval>, avg_cycles
 9575              	@ main.c:5506: }
 9576 0050 10BC     		pop	{r4}	@
ARM GAS  /tmp/ccDfNsWv.s 			page 169


 9577 0052 7047     		bx	lr	@
 9578              	.L786:
 9579              		.align	2
 9580              	.L785:
 9581 0054 54812442 		.word	1109688660
 9582 0058 0C802442 		.word	1109688332
 9583 005c 08802442 		.word	1109688328
 9584 0060 00000000 		.word	.LANCHOR26
 9585 0064 3C240140 		.word	1073816636
 9586              		.size	adc_get_internals, .-adc_get_internals
 9587              		.section	.text.adc_get_injected,"ax",%progbits
 9588              		.align	1
 9589              		.p2align 2,,3
 9590              		.global	adc_get_injected
 9591              		.syntax unified
 9592              		.thumb
 9593              		.thumb_func
 9594              		.fpu softvfp
 9595              		.type	adc_get_injected, %function
 9596              	adc_get_injected:
 9597              		@ args = 0, pretend = 0, frame = 0
 9598              		@ frame_needed = 0, uses_anonymous_args = 0
 9599              		@ link register save eliminated.
 9600              	@ main.c:5512: 	ADC1_CR2_JSWSTART_bb = 1;
 9601 0000 0121     		movs	r1, #1	@ tmp121,
 9602              	@ main.c:5507: uint32_t adc_get_injected(uint32_t avg_cycles)		{
 9603 0002 10B4     		push	{r4}	@
 9604              	@ main.c:5507: uint32_t adc_get_injected(uint32_t avg_cycles)		{
 9605 0004 0446     		mov	r4, r0	@ avg_cycles, avg_cycles
 9606              	@ main.c:5512: 	ADC1_CR2_JSWSTART_bb = 1;
 9607 0006 104B     		ldr	r3, .L798	@ tmp120,
 9608              	@ main.c:5513: 	while (ADC1_SR_JEOC_bb == 0);				// wait for conversions to end
 9609 0008 104A     		ldr	r2, .L798+4	@ tmp122,
 9610              	@ main.c:5512: 	ADC1_CR2_JSWSTART_bb = 1;
 9611 000a 1960     		str	r1, [r3]	@ tmp121, MEM[(volatile long unsigned int *)1109688660B]
 9612              	.L788:
 9613              	@ main.c:5513: 	while (ADC1_SR_JEOC_bb == 0);				// wait for conversions to end
 9614 000c 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109688328B]
 9615 000e 002B     		cmp	r3, #0	@ _1
 9616 0010 FCD0     		beq	.L788	@
 9617              	@ main.c:5514: 	ADC1_SR_JEOC_bb = 0;								// reset "end of conversion" flag
 9618 0012 0020     		movs	r0, #0	@ tmp124,
 9619 0014 1060     		str	r0, [r2]	@ tmp124, MEM[(volatile long unsigned int *)1109688328B]
 9620              	@ main.c:5516: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9621 0016 A4B1     		cbz	r4, .L792	@ avg_cycles,
 9622 0018 0D4B     		ldr	r3, .L798+8	@ ivtmp.754,
 9623 001a 0E4A     		ldr	r2, .L798+12	@ pretmp_4,
 9624 001c 191F     		subs	r1, r3, #4	@ tmp126, ivtmp.754,
 9625 001e 01EB8401 		add	r1, r1, r4, lsl #2	@ _22, tmp126, avg_cycles,
 9626              	@ main.c:5517: 		value += *jdrs[i];
 9627 0022 1268     		ldr	r2, [r2]	@ _12, *prephitmp_18
 9628              	@ main.c:5516: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9629 0024 8B42     		cmp	r3, r1	@ ivtmp.754, _22
 9630              	@ main.c:5517: 		value += *jdrs[i];
 9631 0026 1044     		add	r0, r0, r2	@ <retval>, _12
 9632              	@ main.c:5516: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9633 0028 05D0     		beq	.L790	@,
ARM GAS  /tmp/ccDfNsWv.s 			page 170


 9634              	.L797:
 9635 002a 53F8042B 		ldr	r2, [r3], #4	@ pretmp_4, MEM[base: _23, offset: 0B]
 9636              	@ main.c:5517: 		value += *jdrs[i];
 9637 002e 1268     		ldr	r2, [r2]	@ _12, *prephitmp_18
 9638              	@ main.c:5516: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9639 0030 8B42     		cmp	r3, r1	@ ivtmp.754, _22
 9640              	@ main.c:5517: 		value += *jdrs[i];
 9641 0032 1044     		add	r0, r0, r2	@ <retval>, _12
 9642              	@ main.c:5516: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9643 0034 F9D1     		bne	.L797	@,
 9644              	.L790:
 9645              	@ main.c:5519: 	if (avg_cycles > 1)									// should the samples be averaged?
 9646 0036 012C     		cmp	r4, #1	@ avg_cycles,
 9647 0038 01D9     		bls	.L787	@,
 9648              	@ main.c:5522: 		value /= avg_cycles;
 9649 003a B0FBF4F0 		udiv	r0, r0, r4	@ <retval>, <retval>, avg_cycles
 9650              	.L787:
 9651              	@ main.c:5526: }
 9652 003e 10BC     		pop	{r4}	@
 9653 0040 7047     		bx	lr	@
 9654              	.L792:
 9655              	@ main.c:5510: 	uint32_t i, value = 0;
 9656 0042 2046     		mov	r0, r4	@ <retval>, avg_cycles
 9657              	@ main.c:5526: }
 9658 0044 10BC     		pop	{r4}	@
 9659 0046 7047     		bx	lr	@
 9660              	.L799:
 9661              		.align	2
 9662              	.L798:
 9663 0048 54812442 		.word	1109688660
 9664 004c 08802442 		.word	1109688328
 9665 0050 04000000 		.word	jdrs.9077+4
 9666 0054 3C240140 		.word	1073816636
 9667              		.size	adc_get_injected, .-adc_get_injected
 9668              		.section	.text.NVIC_conf,"ax",%progbits
 9669              		.align	1
 9670              		.p2align 2,,3
 9671              		.global	NVIC_conf
 9672              		.syntax unified
 9673              		.thumb
 9674              		.thumb_func
 9675              		.fpu softvfp
 9676              		.type	NVIC_conf, %function
 9677              	NVIC_conf:
 9678              		@ args = 0, pretend = 0, frame = 0
 9679              		@ frame_needed = 0, uses_anonymous_args = 0
 9680              		@ link register save eliminated.
 9681 0000 70B4     		push	{r4, r5, r6}	@
 9682              	@ main.c:5535: 	NVIC->IP[TIM1_CC_IRQn] = (0<<4);           //Set the highest priority for TIMER1, s
 9683 0002 0020     		movs	r0, #0	@ tmp122,
 9684              	@ main.c:5533: 	NVIC->IP[ADC1_2_IRQn]  = (2<<4);
 9685 0004 2025     		movs	r5, #32	@ tmp116,
 9686              	@ main.c:5534: 	NVIC->IP[DMA1_Channel1_IRQn] = (1<<4);
 9687 0006 1024     		movs	r4, #16	@ tmp119,
 9688              	@ main.c:5530: 	SCB->AIRCR |= AIRCR_VECTKEY_MASK | (3<<8);      //[Optional] Define interrupt field
 9689 0008 0749     		ldr	r1, .L802	@ tmp112,
 9690 000a 084A     		ldr	r2, .L802+4	@ _2,
ARM GAS  /tmp/ccDfNsWv.s 			page 171


 9691 000c CE68     		ldr	r6, [r1, #12]	@ _1, MEM[(struct SCB_Type *)3758157056B].AIRCR
 9692              	@ main.c:5533: 	NVIC->IP[ADC1_2_IRQn]  = (2<<4);
 9693 000e 084B     		ldr	r3, .L802+8	@ tmp115,
 9694              	@ main.c:5530: 	SCB->AIRCR |= AIRCR_VECTKEY_MASK | (3<<8);      //[Optional] Define interrupt field
 9695 0010 3243     		orrs	r2, r2, r6	@, _2, _2, _1
 9696 0012 CA60     		str	r2, [r1, #12]	@ _2, MEM[(struct SCB_Type *)3758157056B].AIRCR
 9697              	@ main.c:5538: 	NVIC->ISER[0]= (1<<TIM1_CC_IRQn )|(1<<ADC1_2_IRQn)|(1<<DMA1_Channel1_IRQn);   //Ena
 9698 0014 074A     		ldr	r2, .L802+12	@ tmp125,
 9699              	@ main.c:5533: 	NVIC->IP[ADC1_2_IRQn]  = (2<<4);
 9700 0016 83F81253 		strb	r5, [r3, #786]	@ tmp116, MEM[(struct NVIC_Type *)3758153984B].IP
 9701              	@ main.c:5534: 	NVIC->IP[DMA1_Channel1_IRQn] = (1<<4);
 9702 001a 83F80B43 		strb	r4, [r3, #779]	@ tmp119, MEM[(struct NVIC_Type *)3758153984B].IP
 9703              	@ main.c:5535: 	NVIC->IP[TIM1_CC_IRQn] = (0<<4);           //Set the highest priority for TIMER1, s
 9704 001e 83F81B03 		strb	r0, [r3, #795]	@ tmp122, MEM[(struct NVIC_Type *)3758153984B].IP
 9705              	@ main.c:5539: }
 9706 0022 70BC     		pop	{r4, r5, r6}	@
 9707              	@ main.c:5538: 	NVIC->ISER[0]= (1<<TIM1_CC_IRQn )|(1<<ADC1_2_IRQn)|(1<<DMA1_Channel1_IRQn);   //Ena
 9708 0024 1A60     		str	r2, [r3]	@ tmp125, MEM[(struct NVIC_Type *)3758153984B].ISER
 9709              	@ main.c:5539: }
 9710 0026 7047     		bx	lr	@
 9711              	.L803:
 9712              		.align	2
 9713              	.L802:
 9714 0028 00ED00E0 		.word	-536810240
 9715 002c 0003FA05 		.word	100270848
 9716 0030 00E100E0 		.word	-536813312
 9717 0034 00080408 		.word	134481920
 9718              		.size	NVIC_conf, .-NVIC_conf
 9719              		.section	.text.SetDate,"ax",%progbits
 9720              		.align	1
 9721              		.p2align 2,,3
 9722              		.global	SetDate
 9723              		.syntax unified
 9724              		.thumb
 9725              		.thumb_func
 9726              		.fpu softvfp
 9727              		.type	SetDate, %function
 9728              	SetDate:
 9729              		@ args = 0, pretend = 0, frame = 40
 9730              		@ frame_needed = 0, uses_anonymous_args = 0
 9731 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 9732              	@ main.c:5546: 	UaPutS("\r\n rok = ");
 9733 0004 6548     		ldr	r0, .L820	@,
 9734              	@ main.c:5543: void SetDate(void)	{
 9735 0006 8BB0     		sub	sp, sp, #44	@,,
 9736              	@ main.c:5546: 	UaPutS("\r\n rok = ");
 9737 0008 FFF7FEFF 		bl	UaPutS	@
 9738              	@ main.c:5547: 	u16 yer = str2int((char *)u1buf);
 9739 000c 06A8     		add	r0, sp, #24	@ tmp230,,
 9740 000e FFF7FEFF 		bl	str2int	@
 9741              	@ main.c:5548: 	memset((char *)u1buf,0,16);
 9742 0012 0027     		movs	r7, #0	@ tmp152,
 9743              	@ main.c:5547: 	u16 yer = str2int((char *)u1buf);
 9744 0014 0546     		mov	r5, r0	@ _1,
 9745              	@ main.c:5549: 	UaPutS("\r\n mies = ");
 9746 0016 6248     		ldr	r0, .L820+4	@,
 9747              	@ main.c:5548: 	memset((char *)u1buf,0,16);
ARM GAS  /tmp/ccDfNsWv.s 			page 172


 9748 0018 CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 9749 001c CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 9750              	@ main.c:5549: 	UaPutS("\r\n mies = ");
 9751 0020 FFF7FEFF 		bl	UaPutS	@
 9752              	@ main.c:5550: 	u08 mon = str2int((char *)u1buf);
 9753 0024 06A8     		add	r0, sp, #24	@ tmp231,,
 9754 0026 FFF7FEFF 		bl	str2int	@
 9755 002a 0646     		mov	r6, r0	@ _2,
 9756              	@ main.c:5552: 	UaPutS("\r\n dzien = ");
 9757 002c 5D48     		ldr	r0, .L820+8	@,
 9758              	@ main.c:5551: 	memset((char *)u1buf,0,16);
 9759 002e CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 9760 0032 CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 9761              	@ main.c:5552: 	UaPutS("\r\n dzien = ");
 9762 0036 FFF7FEFF 		bl	UaPutS	@
 9763              	@ main.c:5553: 	u08 day = str2int((char *)u1buf);
 9764 003a 06A8     		add	r0, sp, #24	@ tmp232,,
 9765 003c FFF7FEFF 		bl	str2int	@
 9766 0040 8246     		mov	r10, r0	@ _3,
 9767              	@ main.c:5555: 	UaPutS("\r\n gdz = ");
 9768 0042 5948     		ldr	r0, .L820+12	@,
 9769              	@ main.c:5554: 	memset((char *)u1buf,0,16);
 9770 0044 CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 9771 0048 CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 9772              	@ main.c:5555: 	UaPutS("\r\n gdz = ");
 9773 004c FFF7FEFF 		bl	UaPutS	@
 9774              	@ main.c:5556: 	u08 hor = str2int((char *)u1buf);
 9775 0050 06A8     		add	r0, sp, #24	@ tmp233,,
 9776 0052 FFF7FEFF 		bl	str2int	@
 9777 0056 8046     		mov	r8, r0	@ _4,
 9778              	@ main.c:5558: 	UaPutS("\r\n min = ");
 9779 0058 5448     		ldr	r0, .L820+16	@,
 9780              	@ main.c:5557: 	memset((char *)u1buf,0,16);
 9781 005a CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 9782 005e CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 9783              	@ main.c:5558: 	UaPutS("\r\n min = ");
 9784 0062 FFF7FEFF 		bl	UaPutS	@
 9785              	@ main.c:5559: 	u08 min = str2int((char *)u1buf);
 9786 0066 06A8     		add	r0, sp, #24	@ tmp234,,
 9787 0068 FFF7FEFF 		bl	str2int	@
 9788 006c 8146     		mov	r9, r0	@ _5,
 9789              	@ main.c:5561: 	UaPutS("\r\n sek = ");
 9790 006e 5048     		ldr	r0, .L820+20	@,
 9791              	@ main.c:5560: 	memset((char *)u1buf,0,16);
 9792 0070 CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 9793 0074 CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 9794              	@ main.c:5561: 	UaPutS("\r\n sek = ");
 9795 0078 FFF7FEFF 		bl	UaPutS	@
 9796              	@ main.c:5562: 	u08 sec = str2int((char *)u1buf);
 9797 007c 06A8     		add	r0, sp, #24	@ tmp235,,
 9798 007e FFF7FEFF 		bl	str2int	@
 9799              	@ main.c:5563: 	memset((char *)u1buf,0,16);
 9800 0082 CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 9801 0086 CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 9802              	@ main.c:5564: 	u32 Uxt = 1924984799;
 9803 008a 4A4C     		ldr	r4, .L820+24	@ Uxt,
 9804 008c DFF830B1 		ldr	fp, .L820+36	@ tmp226,
ARM GAS  /tmp/ccDfNsWv.s 			page 173


 9805              	@ main.c:5562: 	u08 sec = str2int((char *)u1buf);
 9806 0090 0190     		str	r0, [sp, #4]	@, %sfp
 9807 0092 ADB2     		uxth	r5, r5	@ _92, _1
 9808              	@ main.c:5568: 			if(ptm.tm_mon == mon) 	{
 9809 0094 F6B2     		uxtb	r6, r6	@ _2, _2
 9810              	@ main.c:5569: 				if(ptm.tm_mday == day)  {
 9811 0096 5FFA8AFA 		uxtb	r10, r10	@ _3, _3
 9812              	@ main.c:5570: 					if(ptm.tm_hour == hor)  {
 9813 009a 5FFA88F8 		uxtb	r8, r8	@ _4, _4
 9814              	.L813:
 9815              	@ main.c:5566: 		gmtime_r (&Uxt, &ptm);
 9816 009e 2046     		mov	r0, r4	@, Uxt
 9817 00a0 FFF7FEFF 		bl	gmtime_r.isra.0.constprop.2	@
 9818              	@ main.c:5567: 		if(ptm.tm_year == yer) 	{
 9819 00a4 DBF81430 		ldr	r3, [fp, #20]	@ ptm.tm_year, ptm.tm_year
 9820 00a8 AB42     		cmp	r3, r5	@ ptm.tm_year, _92
 9821 00aa 08D0     		beq	.L816	@,
 9822              	.L805:
 9823              	@ main.c:5588: 		} else Uxt -= 86400;
 9824 00ac A4F5A834 		sub	r4, r4, #86016	@ Uxt, Uxt,
 9825 00b0 A4F5C074 		sub	r4, r4, #384	@ Uxt, Uxt,
 9826              	@ main.c:5590: 	while(Uxt);
 9827 00b4 002C     		cmp	r4, #0	@ Uxt
 9828 00b6 F2D1     		bne	.L813	@
 9829              	.L804:
 9830              	@ main.c:5591: }
 9831 00b8 0BB0     		add	sp, sp, #44	@,,
 9832              		@ sp needed	@
 9833 00ba BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 9834              	.L816:
 9835              	@ main.c:5568: 			if(ptm.tm_mon == mon) 	{
 9836 00be DBF81030 		ldr	r3, [fp, #16]	@ ptm.tm_mon, ptm.tm_mon
 9837 00c2 B342     		cmp	r3, r6	@ ptm.tm_mon, _2
 9838 00c4 F2D1     		bne	.L805	@,
 9839              	@ main.c:5569: 				if(ptm.tm_mday == day)  {
 9840 00c6 DBF80C30 		ldr	r3, [fp, #12]	@ ptm.tm_mday, ptm.tm_mday
 9841 00ca 5345     		cmp	r3, r10	@ ptm.tm_mday, _3
 9842 00cc EED1     		bne	.L805	@,
 9843              	@ main.c:5570: 					if(ptm.tm_hour == hor)  {
 9844 00ce DBF80830 		ldr	r3, [fp, #8]	@ ptm.tm_hour, ptm.tm_hour
 9845 00d2 4345     		cmp	r3, r8	@ ptm.tm_hour, _4
 9846 00d4 04D0     		beq	.L817	@,
 9847              	@ main.c:5585: 					}else Uxt -= 3600;
 9848 00d6 A4F56164 		sub	r4, r4, #3600	@ Uxt, Uxt,
 9849              	@ main.c:5590: 	while(Uxt);
 9850 00da 002C     		cmp	r4, #0	@ Uxt
 9851 00dc DFD1     		bne	.L813	@
 9852 00de EBE7     		b	.L804	@
 9853              	.L817:
 9854              	@ main.c:5571: 						if(ptm.tm_min == min) 	{
 9855 00e0 DBF80420 		ldr	r2, [fp, #4]	@ ptm.tm_min, ptm.tm_min
 9856 00e4 5FFA89F3 		uxtb	r3, r9	@ _5, _5
 9857 00e8 9A42     		cmp	r2, r3	@ ptm.tm_min, _5
 9858 00ea 03D0     		beq	.L818	@,
 9859              	@ main.c:5584: 						}else Uxt -= 60;
 9860 00ec 3C3C     		subs	r4, r4, #60	@ Uxt, Uxt,
 9861              	@ main.c:5590: 	while(Uxt);
ARM GAS  /tmp/ccDfNsWv.s 			page 174


 9862 00ee 002C     		cmp	r4, #0	@ Uxt
 9863 00f0 D5D1     		bne	.L813	@
 9864 00f2 E1E7     		b	.L804	@
 9865              	.L818:
 9866              	@ main.c:5572: 							if(ptm.tm_sec == sec)		{
 9867 00f4 DBF80020 		ldr	r2, [fp]	@ ptm.tm_sec, ptm.tm_sec
 9868 00f8 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2	@ _6, %sfp
 9869 00fc 9A42     		cmp	r2, r3	@ ptm.tm_sec, _6
 9870 00fe 03D0     		beq	.L819	@,
 9871              	@ main.c:5583: 							} else Uxt --;
 9872 0100 013C     		subs	r4, r4, #1	@ Uxt, Uxt,
 9873              	@ main.c:5590: 	while(Uxt);
 9874 0102 002C     		cmp	r4, #0	@ Uxt
 9875 0104 CBD1     		bne	.L813	@
 9876 0106 D7E7     		b	.L804	@
 9877              	.L819:
 9878              	@ main.c:5573: 								gmtime_r (&Uxt, &ptm);
 9879 0108 2046     		mov	r0, r4	@, Uxt
 9880 010a FFF7FEFF 		bl	gmtime_r.isra.0.constprop.2	@
 9881              	@ main.c:5574: 								UaPutS("\r\n ");
 9882 010e 2A48     		ldr	r0, .L820+28	@,
 9883 0110 FFF7FEFF 		bl	UaPutS	@
 9884              	@ main.c:5575: 								UaPutS(uint2str(ptm.tm_year,tbuf));		UaPutC('-');
 9885 0114 02A9     		add	r1, sp, #8	@,,
 9886 0116 DBF81400 		ldr	r0, [fp, #20]	@, ptm.tm_year
 9887 011a FFF7FEFF 		bl	uint2str	@
 9888 011e FFF7FEFF 		bl	UaPutS	@
 9889 0122 2D20     		movs	r0, #45	@,
 9890 0124 FFF7FEFF 		bl	UaPutC	@
 9891              	@ main.c:5576: 								UaPutS(uint2str(ptm.tm_mon,tbuf));		UaPutC('-');
 9892 0128 02A9     		add	r1, sp, #8	@,,
 9893 012a DBF81000 		ldr	r0, [fp, #16]	@, ptm.tm_mon
 9894 012e FFF7FEFF 		bl	uint2str	@
 9895 0132 FFF7FEFF 		bl	UaPutS	@
 9896 0136 2D20     		movs	r0, #45	@,
 9897 0138 FFF7FEFF 		bl	UaPutC	@
 9898              	@ main.c:5577: 								UaPutS(uint2str(ptm.tm_mday,tbuf));		UaPutC(' ');
 9899 013c 02A9     		add	r1, sp, #8	@,,
 9900 013e DBF80C00 		ldr	r0, [fp, #12]	@, ptm.tm_mday
 9901 0142 FFF7FEFF 		bl	uint2str	@
 9902 0146 FFF7FEFF 		bl	UaPutS	@
 9903 014a 2020     		movs	r0, #32	@,
 9904 014c FFF7FEFF 		bl	UaPutC	@
 9905              	@ main.c:5578: 								UaPutS(uint2str(ptm.tm_hour,tbuf));		UaPutC(':');
 9906 0150 02A9     		add	r1, sp, #8	@,,
 9907 0152 DBF80800 		ldr	r0, [fp, #8]	@, ptm.tm_hour
 9908 0156 FFF7FEFF 		bl	uint2str	@
 9909 015a FFF7FEFF 		bl	UaPutS	@
 9910 015e 3A20     		movs	r0, #58	@,
 9911 0160 FFF7FEFF 		bl	UaPutC	@
 9912              	@ main.c:5579: 								UaPutS(uint2str(ptm.tm_min,tbuf));		UaPutC(':');
 9913 0164 02A9     		add	r1, sp, #8	@,,
 9914 0166 DBF80400 		ldr	r0, [fp, #4]	@, ptm.tm_min
 9915 016a FFF7FEFF 		bl	uint2str	@
 9916 016e FFF7FEFF 		bl	UaPutS	@
 9917 0172 3A20     		movs	r0, #58	@,
 9918 0174 FFF7FEFF 		bl	UaPutC	@
ARM GAS  /tmp/ccDfNsWv.s 			page 175


 9919              	@ main.c:5580: 								UaPutS(uint2str(ptm.tm_sec,tbuf));		UaPutS("\r\n TimStmp = ");
 9920 0178 02A9     		add	r1, sp, #8	@,,
 9921 017a DBF80000 		ldr	r0, [fp]	@, ptm.tm_sec
 9922 017e FFF7FEFF 		bl	uint2str	@
 9923 0182 FFF7FEFF 		bl	UaPutS	@
 9924 0186 0D48     		ldr	r0, .L820+32	@,
 9925 0188 FFF7FEFF 		bl	UaPutS	@
 9926              	@ main.c:5581: 								UaPutS(uint2str(Uxt,tbuf));
 9927 018c 02A9     		add	r1, sp, #8	@,,
 9928 018e 2046     		mov	r0, r4	@, Uxt
 9929 0190 FFF7FEFF 		bl	uint2str	@
 9930 0194 FFF7FEFF 		bl	UaPutS	@
 9931              	@ main.c:5582: 								break;
 9932 0198 8EE7     		b	.L804	@
 9933              	.L821:
 9934 019a 00BF     		.align	2
 9935              	.L820:
 9936 019c 00000000 		.word	.LC151
 9937 01a0 0C000000 		.word	.LC152
 9938 01a4 18000000 		.word	.LC153
 9939 01a8 24000000 		.word	.LC154
 9940 01ac 30000000 		.word	.LC155
 9941 01b0 3C000000 		.word	.LC156
 9942 01b4 DFEFBC72 		.word	1924984799
 9943 01b8 30000000 		.word	.LC66
 9944 01bc 48000000 		.word	.LC157
 9945 01c0 00000000 		.word	ptm
 9946              		.size	SetDate, .-SetDate
 9947              		.section	.text.flash_latency,"ax",%progbits
 9948              		.align	1
 9949              		.p2align 2,,3
 9950              		.global	flash_latency
 9951              		.syntax unified
 9952              		.thumb
 9953              		.thumb_func
 9954              		.fpu softvfp
 9955              		.type	flash_latency, %function
 9956              	flash_latency:
 9957              		@ args = 0, pretend = 0, frame = 0
 9958              		@ frame_needed = 0, uses_anonymous_args = 0
 9959              		@ link register save eliminated.
 9960              	@ main.c:5627: 	if (frequency < 24000000ul)			// 0 wait states for core speed below 24MHz
 9961 0000 084B     		ldr	r3, .L826	@ tmp114,
 9962 0002 9842     		cmp	r0, r3	@ frequency, tmp114
 9963 0004 0CD9     		bls	.L824	@,
 9964              	@ main.c:5629: 	else if (frequency < 48000000ul)// 1 wait state for core 24MHz < speed >48MHz
 9965 0006 03F1B773 		add	r3, r3, #23986176	@ tmp115, tmp115,
 9966 000a 03F55853 		add	r3, r3, #13824	@ tmp115, tmp115,
 9967              	@ main.c:5632: 		wait_states = 2;
 9968 000e 9842     		cmp	r0, r3	@ frequency, tmp115
 9969 0010 94BF     		ite	ls	@
 9970 0012 0120     		movls	r0, #1	@, wait_states,
 9971 0014 0220     		movhi	r0, #2	@, wait_states,
 9972              	.L823:
 9973              	@ main.c:5634: 	FLASH->ACR |= wait_states;				// set the latency
 9974 0016 044A     		ldr	r2, .L826+4	@ tmp116,
 9975 0018 1368     		ldr	r3, [r2]	@ _1, MEM[(struct FLASH_TypeDef *)1073881088B].ACR
ARM GAS  /tmp/ccDfNsWv.s 			page 176


 9976 001a 1843     		orrs	r0, r0, r3	@, _2, wait_states, _1
 9977 001c 1060     		str	r0, [r2]	@ _2, MEM[(struct FLASH_TypeDef *)1073881088B].ACR
 9978              	@ main.c:5635: }
 9979 001e 7047     		bx	lr	@
 9980              	.L824:
 9981              	@ main.c:5628: 		wait_states = 0;
 9982 0020 0020     		movs	r0, #0	@ wait_states,
 9983 0022 F8E7     		b	.L823	@
 9984              	.L827:
 9985              		.align	2
 9986              	.L826:
 9987 0024 FF356E01 		.word	23999999
 9988 0028 00200240 		.word	1073881088
 9989              		.size	flash_latency, .-flash_latency
 9990              		.set	jdrs.9077,jdrs.9062
 9991              		.global	p_TSpm
 9992              		.comm	Rtc,8,4
 9993              		.global	FLAG
 9994              		.global	_ytab
 9995              		.comm	Timt3,4,4
 9996              		.comm	Timt,4,4
 9997              		.comm	Time6,4,4
 9998              		.comm	Tim6,4,4
 9999              		.comm	Tim4,4,4
 10000              		.comm	delay_us,4,4
 10001              		.comm	Tim2,4,4
 10002              		.comm	Tim1,4,4
 10003              		.comm	Tim0,4,4
 10004              		.comm	delay3_us,4,4
 10005              		.comm	t3rg2,4,4
 10006              		.comm	t3rg1,4,4
 10007              		.comm	t3rg0,4,4
 10008              		.comm	trg5,4,4
 10009              		.comm	trg4,4,4
 10010              		.comm	trg3,4,4
 10011              		.comm	trg2,4,4
 10012              		.comm	trg1,4,4
 10013              		.comm	trg0,4,4
 10014              		.comm	PutChar,4,4
 10015              		.comm	ptm,36,4
 10016              		.section	.rodata
 10017              		.align	2
 10018              		.set	.LANCHOR1,. + 0
 10019              	.LC0:
 10020 0000 6D01     		.short	365
 10021 0002 6401     		.short	356
 10022 0004 0000     		.short	0
 10023 0006 1E00     		.short	30
 10024 0008 0000     		.short	0
 10025 000a 0000     		.short	0
 10026 000c 0000     		.short	0
 10027 000e 0000     		.short	0
 10028              	.LC1:
 10029 0010 D007     		.short	2000
 10030 0012 0019     		.short	6400
 10031 0014 0000     		.short	0
 10032 0016 1E00     		.short	30
ARM GAS  /tmp/ccDfNsWv.s 			page 177


 10033 0018 0000     		.short	0
 10034 001a 0000     		.short	0
 10035 001c 0000     		.short	0
 10036 001e 0000     		.short	0
 10037              	.LC2:
 10038 0020 5601     		.short	342
 10039 0022 5001     		.short	336
 10040 0024 0000     		.short	0
 10041 0026 0200     		.short	2
 10042 0028 0000     		.short	0
 10043 002a 0000     		.short	0
 10044 002c 0000     		.short	0
 10045 002e 0000     		.short	0
 10046              	.LC3:
 10047 0030 7200     		.short	114
 10048 0032 0701     		.short	263
 10049 0034 0000     		.short	0
 10050 0036 0200     		.short	2
 10051 0038 0000     		.short	0
 10052 003a 0000     		.short	0
 10053 003c 0000     		.short	0
 10054 003e 0000     		.short	0
 10055              		.section	.bss.FLAG,"aw",%nobits
 10056              		.align	2
 10057              		.set	.LANCHOR8,. + 0
 10058              		.type	FLAG, %object
 10059              		.size	FLAG, 4
 10060              	FLAG:
 10061 0000 00000000 		.space	4
 10062              		.section	.bss.SX1278_1.8446,"aw",%nobits
 10063              		.align	2
 10064              		.set	.LANCHOR10,. + 0
 10065              		.type	SX1278_1.8446, %object
 10066              		.size	SX1278_1.8446, 76
 10067              	SX1278_1.8446:
 10068 0000 00000000 		.space	76
 10068      00000000 
 10068      00000000 
 10068      00000000 
 10068      00000000 
 10069              		.section	.bss.SX1278_1.8472,"aw",%nobits
 10070              		.align	2
 10071              		.set	.LANCHOR12,. + 0
 10072              		.type	SX1278_1.8472, %object
 10073              		.size	SX1278_1.8472, 76
 10074              	SX1278_1.8472:
 10075 0000 00000000 		.space	76
 10075      00000000 
 10075      00000000 
 10075      00000000 
 10075      00000000 
 10076              		.section	.bss.SX1278_1.8497,"aw",%nobits
 10077              		.align	2
 10078              		.set	.LANCHOR15,. + 0
 10079              		.type	SX1278_1.8497, %object
 10080              		.size	SX1278_1.8497, 76
 10081              	SX1278_1.8497:
ARM GAS  /tmp/ccDfNsWv.s 			page 178


 10082 0000 00000000 		.space	76
 10082      00000000 
 10082      00000000 
 10082      00000000 
 10082      00000000 
 10083              		.section	.bss.SX1278_hw1.8445,"aw",%nobits
 10084              		.align	2
 10085              		.set	.LANCHOR9,. + 0
 10086              		.type	SX1278_hw1.8445, %object
 10087              		.size	SX1278_hw1.8445, 24
 10088              	SX1278_hw1.8445:
 10089 0000 00000000 		.space	24
 10089      00000000 
 10089      00000000 
 10089      00000000 
 10089      00000000 
 10090              		.section	.bss.SX1278_hw1.8471,"aw",%nobits
 10091              		.align	2
 10092              		.set	.LANCHOR11,. + 0
 10093              		.type	SX1278_hw1.8471, %object
 10094              		.size	SX1278_hw1.8471, 24
 10095              	SX1278_hw1.8471:
 10096 0000 00000000 		.space	24
 10096      00000000 
 10096      00000000 
 10096      00000000 
 10096      00000000 
 10097              		.section	.bss.SX1278_hw1.8496,"aw",%nobits
 10098              		.align	2
 10099              		.set	.LANCHOR14,. + 0
 10100              		.type	SX1278_hw1.8496, %object
 10101              		.size	SX1278_hw1.8496, 24
 10102              	SX1278_hw1.8496:
 10103 0000 00000000 		.space	24
 10103      00000000 
 10103      00000000 
 10103      00000000 
 10103      00000000 
 10104              		.section	.bss.TSpm,"aw",%nobits
 10105              		.align	2
 10106              		.type	TSpm, %object
 10107              		.size	TSpm, 4096
 10108              	TSpm:
 10109 0000 00000000 		.space	4096
 10109      00000000 
 10109      00000000 
 10109      00000000 
 10109      00000000 
 10110              		.section	.bss.buf_rx.8475,"aw",%nobits
 10111              		.align	2
 10112              		.set	.LANCHOR13,. + 0
 10113              		.type	buf_rx.8475, %object
 10114              		.size	buf_rx.8475, 256
 10115              	buf_rx.8475:
 10116 0000 00000000 		.space	256
 10116      00000000 
 10116      00000000 
ARM GAS  /tmp/ccDfNsWv.s 			page 179


 10116      00000000 
 10116      00000000 
 10117              		.section	.bss.buf_tx.8499,"aw",%nobits
 10118              		.align	2
 10119              		.set	.LANCHOR16,. + 0
 10120              		.type	buf_tx.8499, %object
 10121              		.size	buf_tx.8499, 10
 10122              	buf_tx.8499:
 10123 0000 00000000 		.space	10
 10123      00000000 
 10123      0000
 10124              		.section	.bss.buffer.8851,"aw",%nobits
 10125              		.align	2
 10126              		.type	buffer.8851, %object
 10127              		.size	buffer.8851, 8192
 10128              	buffer.8851:
 10129 0000 00000000 		.space	8192
 10129      00000000 
 10129      00000000 
 10129      00000000 
 10129      00000000 
 10130              		.section	.bss.cap.8272,"aw",%nobits
 10131              		.align	2
 10132              		.set	.LANCHOR2,. + 0
 10133              		.type	cap.8272, %object
 10134              		.size	cap.8272, 4
 10135              	cap.8272:
 10136 0000 00000000 		.space	4
 10137              		.section	.bss.cnt.8277,"aw",%nobits
 10138              		.set	.LANCHOR7,. + 0
 10139              		.type	cnt.8277, %object
 10140              		.size	cnt.8277, 1
 10141              	cnt.8277:
 10142 0000 00       		.space	1
 10143              		.section	.bss.cur.8268,"aw",%nobits
 10144              		.align	1
 10145              		.set	.LANCHOR4,. + 0
 10146              		.type	cur.8268, %object
 10147              		.size	cur.8268, 2
 10148              	cur.8268:
 10149 0000 0000     		.space	2
 10150              		.section	.bss.datetime.8674,"aw",%nobits
 10151              		.align	2
 10152              		.set	.LANCHOR19,. + 0
 10153              		.type	datetime.8674, %object
 10154              		.size	datetime.8674, 8
 10155              	datetime.8674:
 10156 0000 00000000 		.space	8
 10156      00000000 
 10157              		.section	.bss.dinit.8852,"aw",%nobits
 10158              		.set	.LANCHOR20,. + 0
 10159              		.type	dinit.8852, %object
 10160              		.size	dinit.8852, 1
 10161              	dinit.8852:
 10162 0000 00       		.space	1
 10163              		.section	.bss.dma_buf,"aw",%nobits
 10164              		.align	2
ARM GAS  /tmp/ccDfNsWv.s 			page 180


 10165              		.set	.LANCHOR18,. + 0
 10166              		.type	dma_buf, %object
 10167              		.size	dma_buf, 24
 10168              	dma_buf:
 10169 0000 00000000 		.space	24
 10169      00000000 
 10169      00000000 
 10169      00000000 
 10169      00000000 
 10170              		.section	.bss.dma_buf.8762,"aw",%nobits
 10171              		.align	2
 10172              		.set	.LANCHOR23,. + 0
 10173              		.type	dma_buf.8762, %object
 10174              		.size	dma_buf.8762, 578
 10175              	dma_buf.8762:
 10176 0000 00000000 		.space	578
 10176      00000000 
 10176      00000000 
 10176      00000000 
 10176      00000000 
 10177              		.section	.bss.pow.8273,"aw",%nobits
 10178              		.align	1
 10179              		.set	.LANCHOR6,. + 0
 10180              		.type	pow.8273, %object
 10181              		.size	pow.8273, 2
 10182              	pow.8273:
 10183 0000 0000     		.space	2
 10184              		.section	.bss.str_num.8500,"aw",%nobits
 10185              		.align	2
 10186              		.set	.LANCHOR17,. + 0
 10187              		.type	str_num.8500, %object
 10188              		.size	str_num.8500, 5
 10189              	str_num.8500:
 10190 0000 00000000 		.space	5
 10190      00
 10191              		.section	.bss.vacu.8270,"aw",%nobits
 10192              		.align	1
 10193              		.set	.LANCHOR5,. + 0
 10194              		.type	vacu.8270, %object
 10195              		.size	vacu.8270, 2
 10196              	vacu.8270:
 10197 0000 0000     		.space	2
 10198              		.section	.bss.val.8747,"aw",%nobits
 10199              		.align	2
 10200              		.set	.LANCHOR24,. + 0
 10201              		.type	val.8747, %object
 10202              		.size	val.8747, 20
 10203              	val.8747:
 10204 0000 00000000 		.space	20
 10204      00000000 
 10204      00000000 
 10204      00000000 
 10204      00000000 
 10205              		.section	.bss.vbus.8269,"aw",%nobits
 10206              		.align	1
 10207              		.set	.LANCHOR3,. + 0
 10208              		.type	vbus.8269, %object
ARM GAS  /tmp/ccDfNsWv.s 			page 181


 10209              		.size	vbus.8269, 2
 10210              	vbus.8269:
 10211 0000 0000     		.space	2
 10212              		.section	.bss.yb.8743,"aw",%nobits
 10213              		.align	2
 10214              		.set	.LANCHOR21,. + 0
 10215              		.type	yb.8743, %object
 10216              		.size	yb.8743, 1
 10217              	yb.8743:
 10218 0000 00       		.space	1
 10219              		.section	.bss.yn.8744,"aw",%nobits
 10220              		.align	2
 10221              		.set	.LANCHOR22,. + 0
 10222              		.type	yn.8744, %object
 10223              		.size	yn.8744, 1
 10224              	yn.8744:
 10225 0000 00       		.space	1
 10226              		.section	.data.p_TSpm,"aw",%progbits
 10227              		.align	2
 10228              		.type	p_TSpm, %object
 10229              		.size	p_TSpm, 4
 10230              	p_TSpm:
 10231 0000 00000000 		.word	TSpm
 10232              		.section	.data.tbuf.8749,"aw",%progbits
 10233              		.align	2
 10234              		.set	.LANCHOR25,. + 0
 10235              		.type	tbuf.8749, %object
 10236              		.size	tbuf.8749, 20
 10237              	tbuf.8749:
 10238 0000 30303030 		.ascii	"0000-00-00 00:00:00\000"
 10238      2D30302D 
 10238      30302030 
 10238      303A3030 
 10238      3A303000 
 10239              		.section	.rodata.BMP280_i2c.str1.4,"aMS",%progbits,1
 10240              		.align	2
 10241              	.LC57:
 10242 0000 0D0A2069 		.ascii	"\015\012 i2c_BMP280 = 0x\000"
 10242      32635F42 
 10242      4D503238 
 10242      30203D20 
 10242      307800
 10243 0013 00       		.space	1
 10244              	.LC58:
 10245 0014 0D0A2042 		.ascii	"\015\012 BMP280 \000"
 10245      4D503238 
 10245      302000
 10246 001f 00       		.space	1
 10247              	.LC59:
 10248 0020 74743D00 		.ascii	"tt=\000"
 10249              	.LC60:
 10250 0024 20543D00 		.ascii	" T=\000"
 10251              	.LC61:
 10252 0028 20703D20 		.ascii	" p= \000"
 10252      00
 10253 002d 000000   		.space	3
 10254              	.LC62:
ARM GAS  /tmp/ccDfNsWv.s 			page 182


 10255 0030 2074703D 		.ascii	" tp=\000"
 10255      00
 10256              		.section	.rodata.BMP280_spi.str1.4,"aMS",%progbits,1
 10257              		.align	2
 10258              	.LC63:
 10259 0000 0D0A2042 		.ascii	"\015\012 BMP280T1 = 0x\000"
 10259      4D503238 
 10259      30543120 
 10259      3D203078 
 10259      00
 10260              		.section	.rodata.Intro2.str1.4,"aMS",%progbits,1
 10261              		.align	2
 10262              	.LC145:
 10263 0000 0D0A2053 		.ascii	"\015\012 Start programu... \015\012\000"
 10263      74617274 
 10263      2070726F 
 10263      6772616D 
 10263      752E2E2E 
 10264              	.LC146:
 10265 0018 0D0A2044 		.ascii	"\015\012 Debug0...\000"
 10265      65627567 
 10265      302E2E2E 
 10265      00
 10266 0025 000000   		.space	3
 10267              	.LC147:
 10268 0028 0D0A2077 		.ascii	"\015\012 wXlen \000"
 10268      586C656E 
 10268      2000
 10269 0032 0000     		.space	2
 10270              	.LC148:
 10271 0034 0D0A2054 		.ascii	"\015\012 TIM4->PSC/ARR=\000"
 10271      494D342D 
 10271      3E505343 
 10271      2F415252 
 10271      3D00
 10272              		.section	.rodata.LoRaRX.str1.4,"aMS",%progbits,1
 10273              		.align	2
 10274              	.LC35:
 10275 0000 0A00     		.ascii	"\012\000"
 10276              		.section	.rodata.LoRaRX1.str1.4,"aMS",%progbits,1
 10277              		.align	2
 10278              	.LC36:
 10279 0000 2054696D 		.ascii	" Time=\000"
 10279      653D00
 10280 0007 00       		.space	1
 10281              	.LC37:
 10282 0008 0D0A2052 		.ascii	"\015\012 Read Reg1=0x\000"
 10282      65616420 
 10282      52656731 
 10282      3D307800 
 10283              	.LC38:
 10284 0018 20526567 		.ascii	" Reg1 0x\000"
 10284      31203078 
 10284      00
 10285 0021 000000   		.space	3
 10286              	.LC39:
 10287 0024 3D203078 		.ascii	"= 0x\000"
ARM GAS  /tmp/ccDfNsWv.s 			page 183


 10287      00
 10288 0029 000000   		.space	3
 10289              	.LC40:
 10290 002c 0D0A2030 		.ascii	"\015\012 0-3(\000"
 10290      2D332800 
 10291              	.LC41:
 10292 0034 2920504F 		.ascii	") POWER=\000"
 10292      5745523D 
 10292      00
 10293 003d 000000   		.space	3
 10294              	.LC42:
 10295 0040 0D0A2030 		.ascii	"\015\012 0-6(\000"
 10295      2D362800 
 10296              	.LC43:
 10297 0048 29205346 		.ascii	") SF=\000"
 10297      3D00
 10298 004e 0000     		.space	2
 10299              	.LC44:
 10300 0050 0D0A2030 		.ascii	"\015\012 0-9(\000"
 10300      2D392800 
 10301              	.LC45:
 10302 0058 29204257 		.ascii	") BW=\000"
 10302      3D00
 10303 005e 0000     		.space	2
 10304              	.LC46:
 10305 0060 0D0A2073 		.ascii	"\015\012 sek(\000"
 10305      656B2800 
 10306              	.LC47:
 10307 0068 29204465 		.ascii	") Delay=\000"
 10307      6C61793D 
 10307      00
 10308 0071 000000   		.space	3
 10309              	.LC48:
 10310 0074 0D0A204D 		.ascii	"\015\012 Menu > \000"
 10310      656E7520 
 10310      3E2000
 10311 007f 00       		.space	1
 10312              	.LC49:
 10313 0080 0D0A2070 		.ascii	"\015\012 prssi->\000"
 10313      72737369 
 10313      2D3E00
 10314              		.section	.rodata.MAX44009_i2c.str1.4,"aMS",%progbits,1
 10315              		.align	2
 10316              	.LC56:
 10317 0000 0D0A2041 		.ascii	"\015\012 APDS9960_ID=0x\000"
 10317      50445339 
 10317      3936305F 
 10317      49443D30 
 10317      7800
 10318              		.section	.rodata.MemCard_Menu.str1.4,"aMS",%progbits,1
 10319              		.align	2
 10320              	.LC99:
 10321 0000 0D0A5344 		.ascii	"\015\012SD Card Init = \000"
 10321      20436172 
 10321      6420496E 
 10321      6974203D 
 10321      2000
ARM GAS  /tmp/ccDfNsWv.s 			page 184


 10322 0012 0000     		.space	2
 10323              	.LC100:
 10324 0014 0D0A5344 		.ascii	"\015\012SD Card Init ERROR \000"
 10324      20436172 
 10324      6420496E 
 10324      69742045 
 10324      52524F52 
 10325 002a 0000     		.space	2
 10326              	.LC101:
 10327 002c 0D0A5344 		.ascii	"\015\012SD Card ser_num    = \000"
 10327      20436172 
 10327      64207365 
 10327      725F6E75 
 10327      6D202020 
 10328              	.LC102:
 10329 0044 0D0A5344 		.ascii	"\015\012SD Card block_num  = \000"
 10329      20436172 
 10329      6420626C 
 10329      6F636B5F 
 10329      6E756D20 
 10330              	.LC103:
 10331 005c 0D0A5344 		.ascii	"\015\012SD Card read_blen  = \000"
 10331      20436172 
 10331      64207265 
 10331      61645F62 
 10331      6C656E20 
 10332              	.LC104:
 10333 0074 0D0A5344 		.ascii	"\015\012SD Card write_blen = \000"
 10333      20436172 
 10333      64207772 
 10333      6974655F 
 10333      626C656E 
 10334              	.LC105:
 10335 008c 53746174 		.ascii	"Statistic Card  \000"
 10335      69737469 
 10335      63204361 
 10335      72642020 
 10335      00
 10336 009d 000000   		.space	3
 10337              	.LC106:
 10338 00a0 0D0A5344 		.ascii	"\015\012SD Card Not Init\000"
 10338      20436172 
 10338      64204E6F 
 10338      7420496E 
 10338      697400
 10339 00b3 00       		.space	1
 10340              	.LC107:
 10341 00b4 46696C6C 		.ascii	"Fill sector\000"
 10341      20736563 
 10341      746F7200 
 10342              	.LC108:
 10343 00c0 0D0A2053 		.ascii	"\015\012 Start Block  = 0x\000"
 10343      74617274 
 10343      20426C6F 
 10343      636B2020 
 10343      3D203078 
 10344 00d5 000000   		.space	3
ARM GAS  /tmp/ccDfNsWv.s 			page 185


 10345              	.LC109:
 10346 00d8 0D0A2045 		.ascii	"\015\012 End   Blocks = 0x\000"
 10346      6E642020 
 10346      20426C6F 
 10346      636B7320 
 10346      3D203078 
 10347 00ed 000000   		.space	3
 10348              	.LC110:
 10349 00f0 0D0A204E 		.ascii	"\015\012 Num Blocks   = \000"
 10349      756D2042 
 10349      6C6F636B 
 10349      73202020 
 10349      3D2000
 10350 0103 00       		.space	1
 10351              	.LC111:
 10352 0104 0D0A2044 		.ascii	"\015\012 Data to fill = 0x\000"
 10352      61746120 
 10352      746F2066 
 10352      696C6C20 
 10352      3D203078 
 10353 0119 000000   		.space	3
 10354              	.LC112:
 10355 011c 0D0A2046 		.ascii	"\015\012 Fill error = 0x\000"
 10355      696C6C20 
 10355      6572726F 
 10355      72203D20 
 10355      307800
 10356 012f 00       		.space	1
 10357              	.LC113:
 10358 0130 0D0A2046 		.ascii	"\015\012 Fill OK \000"
 10358      696C6C20 
 10358      4F4B2000 
 10359              	.LC114:
 10360 013c 2054696D 		.ascii	" Time[us] = \000"
 10360      655B7573 
 10360      5D203D20 
 10360      00
 10361 0149 000000   		.space	3
 10362              	.LC115:
 10363 014c 4D6F6469 		.ascii	"Modify memory\000"
 10363      6679206D 
 10363      656D6F72 
 10363      7900
 10364 015a 0000     		.space	2
 10365              	.LC116:
 10366 015c 0D0A204D 		.ascii	"\015\012 Memory Addr = 0x\000"
 10366      656D6F72 
 10366      79204164 
 10366      6472203D 
 10366      20307800 
 10367              	.LC117:
 10368 0170 0D0A204D 		.ascii	"\015\012 Memory Data = 0x\000"
 10368      656D6F72 
 10368      79204461 
 10368      7461203D 
 10368      20307800 
 10369              	.LC118:
ARM GAS  /tmp/ccDfNsWv.s 			page 186


 10370 0184 0D0A204E 		.ascii	"\015\012 New Data    = 0x\000"
 10370      65772044 
 10370      61746120 
 10370      2020203D 
 10370      20307800 
 10371              	.LC119:
 10372 0198 0D0A204D 		.ascii	"\015\012 Modify OK\000"
 10372      6F646966 
 10372      79204F4B 
 10372      00
 10373 01a5 000000   		.space	3
 10374              	.LC120:
 10375 01a8 0D0A2052 		.ascii	"\015\012 ReadB 0x\000"
 10375      65616442 
 10375      20307800 
 10376              	.LC121:
 10377 01b4 20204672 		.ascii	"  From 0x\000"
 10377      6F6D2030 
 10377      7800
 10378 01be 0000     		.space	2
 10379              	.LC122:
 10380 01c0 2D3E3078 		.ascii	"->0x\000"
 10380      00
 10381 01c5 000000   		.space	3
 10382              	.LC123:
 10383 01c8 20205772 		.ascii	"  WriteB 0x\000"
 10383      69746542 
 10383      20307800 
 10384              	.LC124:
 10385 01d4 20203078 		.ascii	"  0x\000"
 10385      00
 10386 01d9 000000   		.space	3
 10387              	.LC125:
 10388 01dc 0D0A2073 		.ascii	"\015\012 sectorNumber = 0x\000"
 10388      6563746F 
 10388      724E756D 
 10388      62657220 
 10388      3D203078 
 10389 01f1 000000   		.space	3
 10390              	.LC126:
 10391 01f4 20745F63 		.ascii	" t_crc = \000"
 10391      7263203D 
 10391      2000
 10392 01fe 0000     		.space	2
 10393              	.LC127:
 10394 0200 0D0A2052 		.ascii	"\015\012 Read Error = \000"
 10394      65616420 
 10394      4572726F 
 10394      72203D20 
 10394      00
 10395 0211 000000   		.space	3
 10396              	.LC128:
 10397 0214 52656164 		.ascii	"Read multi sector\000"
 10397      206D756C 
 10397      74692073 
 10397      6563746F 
 10397      7200
ARM GAS  /tmp/ccDfNsWv.s 			page 187


 10398 0226 0000     		.space	2
 10399              	.LC129:
 10400 0228 0D0A204E 		.ascii	"\015\012 Num Sectors  = \000"
 10400      756D2053 
 10400      6563746F 
 10400      72732020 
 10400      3D2000
 10401 023b 00       		.space	1
 10402              	.LC130:
 10403 023c 0D0A2052 		.ascii	"\015\012 Read error = 0x\000"
 10403      65616420 
 10403      6572726F 
 10403      72203D20 
 10403      307800
 10404 024f 00       		.space	1
 10405              	.LC131:
 10406 0250 0D0A2052 		.ascii	"\015\012 Read OK \000"
 10406      65616420 
 10406      4F4B2000 
 10407              	.LC132:
 10408 025c 20793220 		.ascii	" y2 = \000"
 10408      3D2000
 10409 0263 00       		.space	1
 10410              	.LC133:
 10411 0264 0900     		.ascii	"\011\000"
 10412 0266 0000     		.space	2
 10413              	.LC134:
 10414 0268 56696577 		.ascii	"View last sector\000"
 10414      206C6173 
 10414      74207365 
 10414      63746F72 
 10414      00
 10415 0279 000000   		.space	3
 10416              	.LC135:
 10417 027c 0D0A2046 		.ascii	"\015\012 First Sector = 0x\000"
 10417      69727374 
 10417      20536563 
 10417      746F7220 
 10417      3D203078 
 10418 0291 000000   		.space	3
 10419              	.LC136:
 10420 0294 0D0A2053 		.ascii	"\015\012 Searching \000"
 10420      65617263 
 10420      68696E67 
 10420      2000
 10421 02a2 0000     		.space	2
 10422              	.LC137:
 10423 02a4 0D0A2045 		.ascii	"\015\012 Exit Read Error !!!\000"
 10423      78697420 
 10423      52656164 
 10423      20457272 
 10423      6F722021 
 10424 02bb 00       		.space	1
 10425              	.LC138:
 10426 02bc 0D0A2046 		.ascii	"\015\012 Find Sector = 0x\000"
 10426      696E6420 
 10426      53656374 
ARM GAS  /tmp/ccDfNsWv.s 			page 188


 10426      6F72203D 
 10426      20307800 
 10427              	.LC139:
 10428 02d0 0D0A2020 		.ascii	"\015\012     lenBlock= \000"
 10428      2020206C 
 10428      656E426C 
 10428      6F636B3D 
 10428      2000
 10429 02e2 0000     		.space	2
 10430              	.LC140:
 10431 02e4 0D0A2042 		.ascii	"\015\012 Block = \000"
 10431      6C6F636B 
 10431      203D2000 
 10432              	.LC141:
 10433 02f0 0D0A2052 		.ascii	"\015\012 Read Error \000"
 10433      65616420 
 10433      4572726F 
 10433      722000
 10434 02ff 00       		.space	1
 10435              	.LC142:
 10436 0300 0D0A2053 		.ascii	"\015\012 SD_Status \015\012 \000"
 10436      445F5374 
 10436      61747573 
 10436      200D0A20 
 10436      00
 10437 0311 000000   		.space	3
 10438              	.LC143:
 10439 0314 54657374 		.ascii	"Testing ...\000"
 10439      696E6720 
 10439      2E2E2E00 
 10440              	.LC144:
 10441 0320 556E6B72 		.ascii	"Unkr_dma_buf Command !\000"
 10441      5F646D61 
 10441      5F627566 
 10441      20436F6D 
 10441      6D616E64 
 10442              		.section	.rodata.Menu1.str1.4,"aMS",%progbits,1
 10443              		.align	2
 10444              	.LC95:
 10445 0000 0A0D0A3D 		.ascii	"\012\015\012======= STM32F4 SD/MMC Card ==========="
 10445      3D3D3D3D 
 10445      3D3D2053 
 10445      544D3332 
 10445      46342053 
 10446 002a 3D3D3D3D 		.ascii	"===========\015\012\000"
 10446      3D3D3D3D 
 10446      3D3D3D0D 
 10446      0A00
 10447              	.LC96:
 10448 0038 2069202D 		.ascii	" i - Init      r - Read  sector  e - Erase sector  "
 10448      20496E69 
 10448      74202020 
 10448      20202072 
 10448      202D2052 
 10449 006b 200D0A00 		.ascii	" \015\012\000"
 10450 006f 00       		.space	1
 10451              	.LC97:
ARM GAS  /tmp/ccDfNsWv.s 			page 189


 10452 0070 2064202D 		.ascii	" d - Delete    f - Write sector  s - Statistic Card"
 10452      2044656C 
 10452      65746520 
 10452      20202066 
 10452      202D2057 
 10453 00a3 200D0A00 		.ascii	" \015\012\000"
 10454 00a7 00       		.space	1
 10455              	.LC98:
 10456 00a8 206D202D 		.ascii	" m - Modf mem  c - Copy  sector  n - Next Cluster  "
 10456      204D6F64 
 10456      66206D65 
 10456      6D202063 
 10456      202D2043 
 10457 00db 0D0A00   		.ascii	"\015\012\000"
 10458              		.section	.rodata.SPI_Tool.str1.4,"aMS",%progbits,1
 10459              		.align	2
 10460              	.LC88:
 10461 0000 0D0A496E 		.ascii	"\015\012Init spi    = \000"
 10461      69742073 
 10461      70692020 
 10461      20203D20 
 10461      00
 10462 0011 000000   		.space	3
 10463              	.LC89:
 10464 0014 0D0A2052 		.ascii	"\015\012 Reg = \000"
 10464      6567203D 
 10464      2000
 10465 001e 0000     		.space	2
 10466              	.LC90:
 10467 0020 436F7079 		.ascii	"Copy memory\000"
 10467      206D656D 
 10467      6F727900 
 10468              	.LC91:
 10469 002c 0D0A2053 		.ascii	"\015\012 Src Mem adr = 0x\000"
 10469      7263204D 
 10469      656D2061 
 10469      6472203D 
 10469      20307800 
 10470              	.LC92:
 10471 0040 0D0A2048 		.ascii	"\015\012 How many byte = \000"
 10471      6F77206D 
 10471      616E7920 
 10471      62797465 
 10471      203D2000 
 10472              	.LC93:
 10473 0054 0D0A2044 		.ascii	"\015\012 Dst mem adr = 0x\000"
 10473      7374206D 
 10473      656D2061 
 10473      6472203D 
 10473      20307800 
 10474              	.LC94:
 10475 0068 4E69657A 		.ascii	"Nieznana Komenda\000"
 10475      6E616E61 
 10475      204B6F6D 
 10475      656E6461 
 10475      00
 10476              		.section	.rodata.SPI_Tool_Menu.str1.4,"aMS",%progbits,1
ARM GAS  /tmp/ccDfNsWv.s 			page 190


 10477              		.align	2
 10478              	.LC84:
 10479 0000 0A0D0A3D 		.ascii	"\012\015\012======= STM32F1 SPI TOOL =============="
 10479      3D3D3D3D 
 10479      3D3D2053 
 10479      544D3332 
 10479      46312053 
 10480 002a 3D3D3D3D 		.ascii	"===========\015\012\000"
 10480      3D3D3D3D 
 10480      3D3D3D0D 
 10480      0A00
 10481              	.LC85:
 10482 0038 2069202D 		.ascii	" i - Init      r - Read  sector  e -               "
 10482      20496E69 
 10482      74202020 
 10482      20202072 
 10482      202D2052 
 10483 006b 200D0A00 		.ascii	" \015\012\000"
 10484 006f 00       		.space	1
 10485              	.LC86:
 10486 0070 2064202D 		.ascii	" d - Delete    f - Write sector  s -               "
 10486      2044656C 
 10486      65746520 
 10486      20202066 
 10486      202D2057 
 10487 00a3 200D0A00 		.ascii	" \015\012\000"
 10488 00a7 00       		.space	1
 10489              	.LC87:
 10490 00a8 206D202D 		.ascii	" m - Modf      c - Copy  sector  n -               "
 10490      204D6F64 
 10490      66202020 
 10490      20202063 
 10490      202D2043 
 10491 00db 0D0A00   		.ascii	"\015\012\000"
 10492              		.section	.rodata.SetDate.str1.4,"aMS",%progbits,1
 10493              		.align	2
 10494              	.LC151:
 10495 0000 0D0A2072 		.ascii	"\015\012 rok = \000"
 10495      6F6B203D 
 10495      2000
 10496 000a 0000     		.space	2
 10497              	.LC152:
 10498 000c 0D0A206D 		.ascii	"\015\012 mies = \000"
 10498      69657320 
 10498      3D2000
 10499 0017 00       		.space	1
 10500              	.LC153:
 10501 0018 0D0A2064 		.ascii	"\015\012 dzien = \000"
 10501      7A69656E 
 10501      203D2000 
 10502              	.LC154:
 10503 0024 0D0A2067 		.ascii	"\015\012 gdz = \000"
 10503      647A203D 
 10503      2000
 10504 002e 0000     		.space	2
 10505              	.LC155:
 10506 0030 0D0A206D 		.ascii	"\015\012 min = \000"
ARM GAS  /tmp/ccDfNsWv.s 			page 191


 10506      696E203D 
 10506      2000
 10507 003a 0000     		.space	2
 10508              	.LC156:
 10509 003c 0D0A2073 		.ascii	"\015\012 sek = \000"
 10509      656B203D 
 10509      2000
 10510 0046 0000     		.space	2
 10511              	.LC157:
 10512 0048 0D0A2054 		.ascii	"\015\012 TimStmp = \000"
 10512      696D5374 
 10512      6D70203D 
 10512      2000
 10513              		.section	.rodata.TSL2561_i2c.str1.4,"aMS",%progbits,1
 10514              		.align	2
 10515              	.LC55:
 10516 0000 2C00     		.ascii	",\000"
 10517              		.section	.rodata.Zegarek.str1.4,"aMS",%progbits,1
 10518              		.align	2
 10519              	.LC149:
 10520 0000 30302D30 		.ascii	"00-00-00\000"
 10520      302D3030 
 10520      00
 10521 0009 000000   		.space	3
 10522              	.LC150:
 10523 000c 30303030 		.ascii	"0000-00-00\000"
 10523      2D30302D 
 10523      303000
 10524              		.section	.rodata._ytab,"a",%progbits
 10525              		.align	2
 10526              		.set	.LANCHOR0,. + 0
 10527              		.type	_ytab, %object
 10528              		.size	_ytab, 96
 10529              	_ytab:
 10530 0000 1F000000 		.word	31
 10531 0004 1C000000 		.word	28
 10532 0008 1F000000 		.word	31
 10533 000c 1E000000 		.word	30
 10534 0010 1F000000 		.word	31
 10535 0014 1E000000 		.word	30
 10536 0018 1F000000 		.word	31
 10537 001c 1F000000 		.word	31
 10538 0020 1E000000 		.word	30
 10539 0024 1F000000 		.word	31
 10540 0028 1E000000 		.word	30
 10541 002c 1F000000 		.word	31
 10542 0030 1F000000 		.word	31
 10543 0034 1D000000 		.word	29
 10544 0038 1F000000 		.word	31
 10545 003c 1E000000 		.word	30
 10546 0040 1F000000 		.word	31
 10547 0044 1E000000 		.word	30
 10548 0048 1F000000 		.word	31
 10549 004c 1F000000 		.word	31
 10550 0050 1E000000 		.word	30
 10551 0054 1F000000 		.word	31
 10552 0058 1E000000 		.word	30
ARM GAS  /tmp/ccDfNsWv.s 			page 192


 10553 005c 1F000000 		.word	31
 10554              		.section	.rodata.fun_tool.str1.4,"aMS",%progbits,1
 10555              		.align	2
 10556              	.LC64:
 10557 0000 0D0A2046 		.ascii	"\015\012 FLASH memory Read = \000"
 10557      4C415348 
 10557      206D656D 
 10557      6F727920 
 10557      52656164 
 10558              	.LC65:
 10559 0018 0D0A2046 		.ascii	"\015\012 Flash memory Page =\000"
 10559      6C617368 
 10559      206D656D 
 10559      6F727920 
 10559      50616765 
 10560 002f 00       		.space	1
 10561              	.LC66:
 10562 0030 0D0A2000 		.ascii	"\015\012 \000"
 10563              	.LC67:
 10564 0034 0D0A0A20 		.ascii	"\015\012\012 \000"
 10564      00
 10565 0039 000000   		.space	3
 10566              	.LC68:
 10567 003c 202000   		.ascii	"  \000"
 10568 003f 00       		.space	1
 10569              	.LC69:
 10570 0040 20637263 		.ascii	" crc = \000"
 10570      203D2000 
 10571              	.LC70:
 10572 0048 0D0A2046 		.ascii	"\015\012 Flash memory Page = \000"
 10572      6C617368 
 10572      206D656D 
 10572      6F727920 
 10572      50616765 
 10573              	.LC71:
 10574 0060 0D0A204B 		.ascii	"\015\012 Kasowanie pamieci FLASH = \000"
 10574      61736F77 
 10574      616E6965 
 10574      2070616D 
 10574      69656369 
 10575 007e 0000     		.space	2
 10576              	.LC72:
 10577 0080 0D0A2047 		.ascii	"\015\012 Godzina = \000"
 10577      6F647A69 
 10577      6E61203D 
 10577      2000
 10578 008e 0000     		.space	2
 10579              	.LC73:
 10580 0090 0D0A204D 		.ascii	"\015\012 Minut   = \000"
 10580      696E7574 
 10580      2020203D 
 10580      2000
 10581 009e 0000     		.space	2
 10582              	.LC74:
 10583 00a0 0D0A2053 		.ascii	"\015\012 Sekunda = \000"
 10583      656B756E 
 10583      6461203D 
ARM GAS  /tmp/ccDfNsWv.s 			page 193


 10583      2000
 10584 00ae 0000     		.space	2
 10585              	.LC75:
 10586 00b0 0D0A2052 		.ascii	"\015\012 Read Start !\000"
 10586      65616420 
 10586      53746172 
 10586      74202100 
 10587              	.LC76:
 10588 00c0 2E00     		.ascii	".\000"
 10589 00c2 0000     		.space	2
 10590              	.LC77:
 10591 00c4 0D0A2052 		.ascii	"\015\012 Read Done !\000"
 10591      65616420 
 10591      446F6E65 
 10591      202100
 10592 00d3 00       		.space	1
 10593              	.LC78:
 10594 00d4 0D0A2043 		.ascii	"\015\012 Clear !\000"
 10594      6C656172 
 10594      202100
 10595 00df 00       		.space	1
 10596              	.LC79:
 10597 00e0 52656164 		.ascii	"Read sector\000"
 10597      20736563 
 10597      746F7200 
 10598              	.LC80:
 10599 00ec 0D0A2073 		.ascii	"\015\012 sectorNumber = \000"
 10599      6563746F 
 10599      724E756D 
 10599      62657220 
 10599      3D2000
 10600 00ff 00       		.space	1
 10601              	.LC81:
 10602 0100 20745F72 		.ascii	" t_rsdio = \000"
 10602      7364696F 
 10602      203D2000 
 10603              	.LC82:
 10604 010c 0D0A2052 		.ascii	"\015\012 Read Error !!!\000"
 10604      65616420 
 10604      4572726F 
 10604      72202121 
 10604      2100
 10605              		.section	.rodata.head.str1.4,"aMS",%progbits,1
 10606              		.align	2
 10607              	.LC8:
 10608 0000 0C0D0A20 		.ascii	"\014\015\012 Mini STM32F103C8T6 RAM   \000"
 10608      4D696E69 
 10608      2053544D 
 10608      33324631 
 10608      30334338 
 10609 001e 0000     		.space	2
 10610              	.LC9:
 10611 0020 204D487A 		.ascii	" MHz\000"
 10611      00
 10612              		.section	.rodata.ili9486.str1.4,"aMS",%progbits,1
 10613              		.align	2
 10614              	.LC28:
ARM GAS  /tmp/ccDfNsWv.s 			page 194


 10615 0000 0D0A2072 		.ascii	"\015\012 reg = 0x\000"
 10615      6567203D 
 10615      20307800 
 10616              	.LC29:
 10617 000c 0D0A2064 		.ascii	"\015\012 dat = 0x\000"
 10617      6174203D 
 10617      20307800 
 10618              	.LC30:
 10619 0018 0C00     		.ascii	"\014\000"
 10620 001a 0000     		.space	2
 10621              	.LC31:
 10622 001c 0A0D0A3D 		.ascii	"\012\015\012======= ILI9486 ======================="
 10622      3D3D3D3D 
 10622      3D3D2049 
 10622      4C493934 
 10622      3836203D 
 10623 0046 3D3D3D3D 		.ascii	"===========\015\012\000"
 10623      3D3D3D3D 
 10623      3D3D3D0D 
 10623      0A00
 10624              	.LC32:
 10625 0054 2072202D 		.ascii	" r - Read   c - Clear page  \015\012\000"
 10625      20526561 
 10625      64202020 
 10625      63202D20 
 10625      436C6561 
 10626 0073 00       		.space	1
 10627              	.LC33:
 10628 0074 2077202D 		.ascii	" w - Write  l - Loop read   \015\012\000"
 10628      20577269 
 10628      74652020 
 10628      6C202D20 
 10628      4C6F6F70 
 10629 0093 00       		.space	1
 10630              	.LC34:
 10631 0094 3D3D3D3D 		.ascii	"==================================================\015"
 10631      3D3D3D3D 
 10631      3D3D3D3D 
 10631      3D3D3D3D 
 10631      3D3D3D3D 
 10632 00c7 0A203E20 		.ascii	"\012 > \000"
 10632      00
 10633              		.section	.rodata.jdrs.9062,"a",%progbits
 10634              		.align	2
 10635              		.set	.LANCHOR26,. + 0
 10636              		.type	jdrs.9062, %object
 10637              		.size	jdrs.9062, 16
 10638              	jdrs.9062:
 10639 0000 3C240140 		.word	1073816636
 10640 0004 40240140 		.word	1073816640
 10641 0008 44240140 		.word	1073816644
 10642 000c 48240140 		.word	1073816648
 10643              		.section	.rodata.lexmark_lcd.str1.4,"aMS",%progbits,1
 10644              		.align	2
 10645              	.LC51:
 10646 0000 57697461 		.ascii	"Witaj szkolo         \000"
 10646      6A20737A 
ARM GAS  /tmp/ccDfNsWv.s 			page 195


 10646      6B6F6C6F 
 10646      20202020 
 10646      20202020 
 10647 0016 0000     		.space	2
 10648              	.LC52:
 10649 0018 5A617072 		.ascii	"Zapraszam do pracy        \000"
 10649      61737A61 
 10649      6D20646F 
 10649      20707261 
 10649      63792020 
 10650 0033 00       		.space	1
 10651              	.LC53:
 10652 0034 20202020 		.ascii	"                          \000"
 10652      20202020 
 10652      20202020 
 10652      20202020 
 10652      20202020 
 10653 004f 00       		.space	1
 10654              	.LC54:
 10655 0050 20545B75 		.ascii	" T[us]=\000"
 10655      735D3D00 
 10656              		.section	.rodata.lion_updown.str1.4,"aMS",%progbits,1
 10657              		.align	2
 10658              	.LC23:
 10659 0000 5600     		.ascii	"V\000"
 10660 0002 0000     		.space	2
 10661              	.LC24:
 10662 0004 6D4100   		.ascii	"mA\000"
 10663 0007 00       		.space	1
 10664              	.LC25:
 10665 0008 5700     		.ascii	"W\000"
 10666 000a 0000     		.space	2
 10667              	.LC26:
 10668 000c 6D416800 		.ascii	"mAh\000"
 10669              	.LC27:
 10670 0010 0D2000   		.ascii	"\015 \000"
 10671              		.section	.rodata.liontrend.str1.4,"aMS",%progbits,1
 10672              		.align	2
 10673              	.LC21:
 10674 0000 763D00   		.ascii	"v=\000"
 10675 0003 00       		.space	1
 10676              	.LC22:
 10677 0004 633D00   		.ascii	"c=\000"
 10678              		.section	.rodata.minios.str1.4,"aMS",%progbits,1
 10679              		.align	2
 10680              	.LC10:
 10681 0000 0C205541 		.ascii	"\014 UART1 \000"
 10681      52543120 
 10681      00
 10682 0009 000000   		.space	3
 10683              	.LC11:
 10684 000c 20622F73 		.ascii	" b/s \015\012\000"
 10684      200D0A00 
 10685              	.LC12:
 10686 0014 0C205541 		.ascii	"\014 UART2 \000"
 10686      52543220 
 10686      00
ARM GAS  /tmp/ccDfNsWv.s 			page 196


 10687 001d 000000   		.space	3
 10688              	.LC13:
 10689 0020 436F6E66 		.ascii	"Config=\000"
 10689      69673D00 
 10690              	.LC14:
 10691 0028 2000     		.ascii	" \000"
 10692 002a 0000     		.space	2
 10693              	.LC15:
 10694 002c 0D00     		.ascii	"\015\000"
 10695 002e 0000     		.space	2
 10696              	.LC16:
 10697 0030 76627573 		.ascii	"vbus=\000"
 10697      3D00
 10698 0036 0000     		.space	2
 10699              	.LC17:
 10700 0038 20637572 		.ascii	" cur=\000"
 10700      3D00
 10701 003e 0000     		.space	2
 10702              	.LC18:
 10703 0040 0D0A00   		.ascii	"\015\012\000"
 10704 0043 00       		.space	1
 10705              	.LC19:
 10706 0044 09096120 		.ascii	"\011\011a Podaj liczbe \000"
 10706      506F6461 
 10706      6A206C69 
 10706      637A6265 
 10706      2000
 10707 0056 0000     		.space	2
 10708              	.LC20:
 10709 0058 206E756D 		.ascii	" num=\000"
 10709      3D00
 10710              		.section	.rodata.qtouch.str1.4,"aMS",%progbits,1
 10711              		.align	2
 10712              	.LC83:
 10713 0000 0D0A2051 		.ascii	"\015\012 QT =\000"
 10713      54203D00 
 10714              		.section	.rodata.ws2812led.str1.4,"aMS",%progbits,1
 10715              		.align	2
 10716              	.LC50:
 10717 0000 0D0A2044 		.ascii	"\015\012 DMA start...\000"
 10717      4D412073 
 10717      74617274 
 10717      2E2E2E00 
 10718              		.ident	"GCC: (15:7-2018-q2-6) 7.3.1 20180622 (release) [ARM/embedded-7-branch revision 261907]"
ARM GAS  /tmp/ccDfNsWv.s 			page 197


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccDfNsWv.s:69     .text.gmtime_r.isra.0.constprop.2:00000000 $t
     /tmp/ccDfNsWv.s:76     .text.gmtime_r.isra.0.constprop.2:00000000 gmtime_r.isra.0.constprop.2
     /tmp/ccDfNsWv.s:264    .text.gmtime_r.isra.0.constprop.2:00000154 $d
                            *COM*:00000024 ptm
     /tmp/ccDfNsWv.s:274    .text.head:00000000 $t
     /tmp/ccDfNsWv.s:282    .text.head:00000000 head
     /tmp/ccDfNsWv.s:305    .text.head:00000024 $d
     /tmp/ccDfNsWv.s:309    .text.minios:00000000 $t
     /tmp/ccDfNsWv.s:317    .text.minios:00000000 minios
     /tmp/ccDfNsWv.s:668    .text.minios:00000278 $d
                            *COM*:00000004 PutChar
                            *COM*:00000004 trg0
     /tmp/ccDfNsWv.s:697    .text.startup.main:00000000 $t
     /tmp/ccDfNsWv.s:705    .text.startup.main:00000000 main
     /tmp/ccDfNsWv.s:796    .text.startup.main:00000074 $d
     /tmp/ccDfNsWv.s:807    .text.liontrend:00000000 $t
     /tmp/ccDfNsWv.s:815    .text.liontrend:00000000 liontrend
     /tmp/ccDfNsWv.s:944    .text.liontrend:00000124 $d
     /tmp/ccDfNsWv.s:950    .text.oblicz:00000000 $t
     /tmp/ccDfNsWv.s:958    .text.oblicz:00000000 oblicz
     /tmp/ccDfNsWv.s:1089   .text.oblicz:000000dc $d
     /tmp/ccDfNsWv.s:1104   .text.lion_updown:00000000 $t
     /tmp/ccDfNsWv.s:1112   .text.lion_updown:00000000 lion_updown
     /tmp/ccDfNsWv.s:1358   .text.lion_updown:000001b4 $d
     /tmp/ccDfNsWv.s:1384   .text.lion_updown:0000021c $t
     /tmp/ccDfNsWv.s:1524   .text.lion_updown:000002c4 $d
                            *COM*:00000004 trg1
                            *COM*:00000004 trg2
     /tmp/ccDfNsWv.s:1554   .text.lion_updown:00000334 $t
     /tmp/ccDfNsWv.s:1743   .text.lion_updown:000004ac $d
     /tmp/ccDfNsWv.s:1761   .text.uht:00000000 $t
     /tmp/ccDfNsWv.s:1769   .text.uht:00000000 uht
     /tmp/ccDfNsWv.s:1784   .text.uht:00000010 $d
     /tmp/ccDfNsWv.s:1787   .text.rtc_calibrate:00000000 $t
     /tmp/ccDfNsWv.s:1795   .text.rtc_calibrate:00000000 rtc_calibrate
     /tmp/ccDfNsWv.s:1958   .text.rtc_calibrate:00000104 $d
                            *COM*:00000004 Timt
                            *COM*:00000004 delay_us
     /tmp/ccDfNsWv.s:1973   .text.testwsk:00000000 $t
     /tmp/ccDfNsWv.s:1981   .text.testwsk:00000000 testwsk
     /tmp/ccDfNsWv.s:1989   .text.veml6075:00000000 $t
     /tmp/ccDfNsWv.s:1997   .text.veml6075:00000000 veml6075
     /tmp/ccDfNsWv.s:2102   .text.veml6075:000000a0 $d
     /tmp/ccDfNsWv.s:2117   .text.softSPI_w:00000000 $t
     /tmp/ccDfNsWv.s:2125   .text.softSPI_w:00000000 softSPI_w
     /tmp/ccDfNsWv.s:2195   .text.softSPI_w:00000064 $d
     /tmp/ccDfNsWv.s:2202   .text.softSPI_r:00000000 $t
     /tmp/ccDfNsWv.s:2210   .text.softSPI_r:00000000 softSPI_r
     /tmp/ccDfNsWv.s:2262   .text.softSPI_r:00000038 $d
     /tmp/ccDfNsWv.s:2267   .text.ili9486:00000000 $t
     /tmp/ccDfNsWv.s:2275   .text.ili9486:00000000 ili9486
     /tmp/ccDfNsWv.s:2477   .text.ili9486:00000128 $d
     /tmp/ccDfNsWv.s:2494   .text.wiznet5500:00000000 $t
     /tmp/ccDfNsWv.s:2502   .text.wiznet5500:00000000 wiznet5500
     /tmp/ccDfNsWv.s:2576   .text.wiznet5500:00000074 $d
ARM GAS  /tmp/ccDfNsWv.s 			page 198


     /tmp/ccDfNsWv.s:2586   .text.uv_meter:00000000 $t
     /tmp/ccDfNsWv.s:2594   .text.uv_meter:00000000 uv_meter
     /tmp/ccDfNsWv.s:2684   .text.uv_meter:00000078 $d
     /tmp/ccDfNsWv.s:2692   .text.IRQLoraInit:00000000 $t
     /tmp/ccDfNsWv.s:2700   .text.IRQLoraInit:00000000 IRQLoraInit
     /tmp/ccDfNsWv.s:2733   .text.IRQLoraInit:0000001c $d
     /tmp/ccDfNsWv.s:2738   .text.LoRaRX:00000000 $t
     /tmp/ccDfNsWv.s:2746   .text.LoRaRX:00000000 LoRaRX
     /tmp/ccDfNsWv.s:2955   .text.LoRaRX:00000144 $d
     /tmp/ccDfNsWv.s:2973   .text.LoRaRX1:00000000 $t
     /tmp/ccDfNsWv.s:2981   .text.LoRaRX1:00000000 LoRaRX1
     /tmp/ccDfNsWv.s:3137   .text.LoRaRX1:00000100 $d
     /tmp/ccDfNsWv.s:3155   .text.LoRaRX1:00000112 $t
     /tmp/ccDfNsWv.s:3304   .text.LoRaRX1:00000238 $d
     /tmp/ccDfNsWv.s:3336   .text.LoRaTX:00000000 $t
     /tmp/ccDfNsWv.s:3344   .text.LoRaTX:00000000 LoRaTX
     /tmp/ccDfNsWv.s:3586   .text.LoRaTX:00000198 $d
     /tmp/ccDfNsWv.s:3606   .text.col1:00000000 $t
     /tmp/ccDfNsWv.s:3614   .text.col1:00000000 col1
     /tmp/ccDfNsWv.s:3634   .text.col1:00000018 $d
     /tmp/ccDfNsWv.s:3638   .text.col2:00000000 $t
     /tmp/ccDfNsWv.s:3646   .text.col2:00000000 col2
     /tmp/ccDfNsWv.s:3662   .text.col2:00000014 $d
     /tmp/ccDfNsWv.s:3665   .text.col0:00000000 $t
     /tmp/ccDfNsWv.s:3673   .text.col0:00000000 col0
     /tmp/ccDfNsWv.s:3689   .text.col0:00000014 $d
     /tmp/ccDfNsWv.s:3692   .text.ws2812led:00000000 $t
     /tmp/ccDfNsWv.s:3700   .text.ws2812led:00000000 ws2812led
     /tmp/ccDfNsWv.s:3858   .text.ws2812led:000000e4 $d
     /tmp/ccDfNsWv.s:3875   .text.lexmark_lcd:00000000 $t
     /tmp/ccDfNsWv.s:3883   .text.lexmark_lcd:00000000 lexmark_lcd
     /tmp/ccDfNsWv.s:3953   .text.lexmark_lcd:0000006c $d
     /tmp/ccDfNsWv.s:3964   .text.softUTX_init:00000000 $t
     /tmp/ccDfNsWv.s:3972   .text.softUTX_init:00000000 softUTX_init
     /tmp/ccDfNsWv.s:3987   .text.softUTX_init:00000010 $d
     /tmp/ccDfNsWv.s:3990   .text.sofUTX:00000000 $t
     /tmp/ccDfNsWv.s:3998   .text.sofUTX:00000000 sofUTX
     /tmp/ccDfNsWv.s:4089   .text.sofUTX:0000006c $d
     /tmp/ccDfNsWv.s:4094   .text.ToLED:00000000 $t
     /tmp/ccDfNsWv.s:4102   .text.ToLED:00000000 ToLED
     /tmp/ccDfNsWv.s:4130   .text.cmd_LCD:00000000 $t
     /tmp/ccDfNsWv.s:4138   .text.cmd_LCD:00000000 cmd_LCD
     /tmp/ccDfNsWv.s:4200   .text.cmd_LCD:00000058 $d
     /tmp/ccDfNsWv.s:4206   .text.CalculateLux:00000000 $t
     /tmp/ccDfNsWv.s:4214   .text.CalculateLux:00000000 CalculateLux
     /tmp/ccDfNsWv.s:4386   .text.TSL2561_i2c:00000000 $t
     /tmp/ccDfNsWv.s:4394   .text.TSL2561_i2c:00000000 TSL2561_i2c
     /tmp/ccDfNsWv.s:4531   .text.TSL2561_i2c:000000dc $d
     /tmp/ccDfNsWv.s:4543   .text.set_mode:00000000 $t
     /tmp/ccDfNsWv.s:4551   .text.set_mode:00000000 set_mode
     /tmp/ccDfNsWv.s:4612   .text.MAX44009_i2c:00000000 $t
     /tmp/ccDfNsWv.s:4620   .text.MAX44009_i2c:00000000 MAX44009_i2c
     /tmp/ccDfNsWv.s:4891   .text.MAX44009_i2c:000001ec $d
     /tmp/ccDfNsWv.s:4907   .text.BMP280_i2c:00000000 $t
     /tmp/ccDfNsWv.s:4915   .text.BMP280_i2c:00000000 BMP280_i2c
     /tmp/ccDfNsWv.s:5385   .text.BMP280_i2c:00000334 $d
     /tmp/ccDfNsWv.s:5406   .text.BMP280_spi:00000000 $t
ARM GAS  /tmp/ccDfNsWv.s 			page 199


     /tmp/ccDfNsWv.s:5414   .text.BMP280_spi:00000000 BMP280_spi
     /tmp/ccDfNsWv.s:5668   .text.BMP280_spi:000001bc $d
     /tmp/ccDfNsWv.s:5684   .text.fun_tool:00000000 $t
     /tmp/ccDfNsWv.s:5692   .text.fun_tool:00000000 fun_tool
     /tmp/ccDfNsWv.s:5705   .text.fun_tool:00000014 $d
     /tmp/ccDfNsWv.s:5726   .text.fun_tool:0000003e $t
     /tmp/ccDfNsWv.s:6132   .text.fun_tool:00000318 $d
     /tmp/ccDfNsWv.s:6159   .text.qtouch_mesaure:00000000 $t
     /tmp/ccDfNsWv.s:6167   .text.qtouch_mesaure:00000000 qtouch_mesaure
     /tmp/ccDfNsWv.s:6223   .text.qtouch_mesaure:0000003c $d
     /tmp/ccDfNsWv.s:6229   .text.qtouch:00000000 $t
     /tmp/ccDfNsWv.s:6237   .text.qtouch:00000000 qtouch
     /tmp/ccDfNsWv.s:6280   .text.qtouch:00000048 $d
     /tmp/ccDfNsWv.s:6287   .text.DHT_Tool:00000000 $t
     /tmp/ccDfNsWv.s:6295   .text.DHT_Tool:00000000 DHT_Tool
     /tmp/ccDfNsWv.s:6328   .text.DHT_Tool:0000002c $d
     /tmp/ccDfNsWv.s:6334   .text.SPI_Tool_Menu:00000000 $t
     /tmp/ccDfNsWv.s:6342   .text.SPI_Tool_Menu:00000000 SPI_Tool_Menu
     /tmp/ccDfNsWv.s:6366   .text.SPI_Tool_Menu:00000024 $d
     /tmp/ccDfNsWv.s:6373   .text.SPI_Tool:00000000 $t
     /tmp/ccDfNsWv.s:6381   .text.SPI_Tool:00000000 SPI_Tool
     /tmp/ccDfNsWv.s:6548   .text.SPI_Tool:00000114 $d
     /tmp/ccDfNsWv.s:6569   .text.Menu1:00000000 $t
     /tmp/ccDfNsWv.s:6577   .text.Menu1:00000000 Menu1
     /tmp/ccDfNsWv.s:6601   .text.Menu1:00000024 $d
     /tmp/ccDfNsWv.s:6608   .text.MemCard_Menu:00000000 $t
     /tmp/ccDfNsWv.s:6616   .text.MemCard_Menu:00000000 MemCard_Menu
     /tmp/ccDfNsWv.s:6689   .text.MemCard_Menu:00000082 $d
     /tmp/ccDfNsWv.s:6728   .text.MemCard_Menu:000000d0 $t
     /tmp/ccDfNsWv.s:7004   .text.MemCard_Menu:000002c0 $d
     /tmp/ccDfNsWv.s:10128  .bss.buffer.8851:00000000 buffer.8851
     /tmp/ccDfNsWv.s:7031   .text.MemCard_Menu:00000324 $t
     /tmp/ccDfNsWv.s:7394   .text.MemCard_Menu:000005e8 $d
     /tmp/ccDfNsWv.s:7433   .text.MemCard_Menu:0000067c $t
     /tmp/ccDfNsWv.s:7692   .text.MemCard_Menu:00000854 $d
     /tmp/ccDfNsWv.s:7717   .text.CopyClock:00000000 $t
     /tmp/ccDfNsWv.s:7725   .text.CopyClock:00000000 CopyClock
     /tmp/ccDfNsWv.s:7791   .text.Intro2:00000000 $t
     /tmp/ccDfNsWv.s:7799   .text.Intro2:00000000 Intro2
     /tmp/ccDfNsWv.s:8244   .text.Intro2:000002e0 $d
                            *COM*:00000008 Rtc
     /tmp/ccDfNsWv.s:8272   .text.Intro2:00000348 $t
     /tmp/ccDfNsWv.s:8449   .text.Intro2:00000490 $d
     /tmp/ccDfNsWv.s:8460   .text.CopyTime:00000000 $t
     /tmp/ccDfNsWv.s:8468   .text.CopyTime:00000000 CopyTime
     /tmp/ccDfNsWv.s:8507   .text.CopyDate:00000000 $t
     /tmp/ccDfNsWv.s:8515   .text.CopyDate:00000000 CopyDate
     /tmp/ccDfNsWv.s:8554   .text.Zegarek:00000000 $t
     /tmp/ccDfNsWv.s:8562   .text.Zegarek:00000000 Zegarek
     /tmp/ccDfNsWv.s:8621   .text.Zegarek:00000054 $d
     /tmp/ccDfNsWv.s:8629   .text.SysTick_Handler:00000000 $t
     /tmp/ccDfNsWv.s:8637   .text.SysTick_Handler:00000000 SysTick_Handler
     /tmp/ccDfNsWv.s:8715   .text.SysTick_Handler:00000054 $d
                            *COM*:00000004 Tim0
                            *COM*:00000004 Tim1
                            *COM*:00000004 trg3
                            *COM*:00000004 trg4
ARM GAS  /tmp/ccDfNsWv.s 			page 200


                            *COM*:00000004 trg5
     /tmp/ccDfNsWv.s:8728   .text.TIM2_IRQHandler:00000000 $t
     /tmp/ccDfNsWv.s:8736   .text.TIM2_IRQHandler:00000000 TIM2_IRQHandler
     /tmp/ccDfNsWv.s:8765   .text.TIM2_IRQHandler:0000001c $d
     /tmp/ccDfNsWv.s:8768   .text.TIM3_IRQHandler:00000000 $t
     /tmp/ccDfNsWv.s:8776   .text.TIM3_IRQHandler:00000000 TIM3_IRQHandler
     /tmp/ccDfNsWv.s:8836   .text.TIM3_IRQHandler:00000044 $d
                            *COM*:00000004 Timt3
                            *COM*:00000004 delay3_us
                            *COM*:00000004 t3rg0
                            *COM*:00000004 t3rg1
                            *COM*:00000004 t3rg2
     /tmp/ccDfNsWv.s:8844   .text.EXTI0_IRQHandler:00000000 $t
     /tmp/ccDfNsWv.s:8852   .text.EXTI0_IRQHandler:00000000 EXTI0_IRQHandler
     /tmp/ccDfNsWv.s:8886   .text.EXTI0_IRQHandler:00000024 $d
     /tmp/ccDfNsWv.s:8891   .text.EXTI1_IRQHandler:00000000 $t
     /tmp/ccDfNsWv.s:8899   .text.EXTI1_IRQHandler:00000000 EXTI1_IRQHandler
     /tmp/ccDfNsWv.s:8929   .text.EXTI1_IRQHandler:00000020 $d
     /tmp/ccDfNsWv.s:8933   .text.EXTI2_IRQHandler:00000000 $t
     /tmp/ccDfNsWv.s:8941   .text.EXTI2_IRQHandler:00000000 EXTI2_IRQHandler
     /tmp/ccDfNsWv.s:8971   .text.EXTI2_IRQHandler:00000020 $d
     /tmp/ccDfNsWv.s:8975   .text.EXTI3_IRQHandler:00000000 $t
     /tmp/ccDfNsWv.s:8983   .text.EXTI3_IRQHandler:00000000 EXTI3_IRQHandler
     /tmp/ccDfNsWv.s:9013   .text.EXTI3_IRQHandler:00000020 $d
     /tmp/ccDfNsWv.s:9017   .text.EXTI4_IRQHandler:00000000 $t
     /tmp/ccDfNsWv.s:9025   .text.EXTI4_IRQHandler:00000000 EXTI4_IRQHandler
     /tmp/ccDfNsWv.s:9055   .text.EXTI4_IRQHandler:00000020 $d
     /tmp/ccDfNsWv.s:9059   .text.EXTI15_10_IRQHandler:00000000 $t
     /tmp/ccDfNsWv.s:9067   .text.EXTI15_10_IRQHandler:00000000 EXTI15_10_IRQHandler
     /tmp/ccDfNsWv.s:9093   .text.EXTI15_10_IRQHandler:0000001c $d
     /tmp/ccDfNsWv.s:9096   .text.EXTI9_5_IRQHandler:00000000 $t
     /tmp/ccDfNsWv.s:9104   .text.EXTI9_5_IRQHandler:00000000 EXTI9_5_IRQHandler
     /tmp/ccDfNsWv.s:9147   .text.EXTI9_5_IRQHandler:00000038 $d
     /tmp/ccDfNsWv.s:9151   .text.RTC_IRQHandler:00000000 $t
     /tmp/ccDfNsWv.s:9159   .text.RTC_IRQHandler:00000000 RTC_IRQHandler
     /tmp/ccDfNsWv.s:9197   .text.RTC_IRQHandler:00000028 $d
     /tmp/ccDfNsWv.s:9202   .text.RTCAlarm_IRQHandler:00000000 $t
     /tmp/ccDfNsWv.s:9210   .text.RTCAlarm_IRQHandler:00000000 RTCAlarm_IRQHandler
     /tmp/ccDfNsWv.s:9244   .text.RTCAlarm_IRQHandler:00000028 $d
     /tmp/ccDfNsWv.s:9248   .text.DMA1_Channel1_IRQHandler:00000000 $t
     /tmp/ccDfNsWv.s:9256   .text.DMA1_Channel1_IRQHandler:00000000 DMA1_Channel1_IRQHandler
     /tmp/ccDfNsWv.s:9298   .text.DMA1_Channel1_IRQHandler:0000002c $d
     /tmp/ccDfNsWv.s:9303   .text.FSMC_IRQHandler:00000000 $t
     /tmp/ccDfNsWv.s:9311   .text.FSMC_IRQHandler:00000000 FSMC_IRQHandler
     /tmp/ccDfNsWv.s:9326   .text.DACDmaInit:00000000 $t
     /tmp/ccDfNsWv.s:9334   .text.DACDmaInit:00000000 DACDmaInit
     /tmp/ccDfNsWv.s:9373   .text.DACDmaInit:00000030 $d
     /tmp/ccDfNsWv.s:9379   .text.TIM4_IRQHandler:00000000 $t
     /tmp/ccDfNsWv.s:9387   .text.TIM4_IRQHandler:00000000 TIM4_IRQHandler
     /tmp/ccDfNsWv.s:9407   .text.TIM4_IRQHandler:00000010 $d
                            *COM*:00000004 Tim4
     /tmp/ccDfNsWv.s:9411   .text.adc1_init_injected:00000000 $t
     /tmp/ccDfNsWv.s:9419   .text.adc1_init_injected:00000000 adc1_init_injected
     /tmp/ccDfNsWv.s:9487   .text.adc1_init_injected:00000050 $d
     /tmp/ccDfNsWv.s:9495   .text.adc_get_internals:00000000 $t
     /tmp/ccDfNsWv.s:9503   .text.adc_get_internals:00000000 adc_get_internals
     /tmp/ccDfNsWv.s:9581   .text.adc_get_internals:00000054 $d
ARM GAS  /tmp/ccDfNsWv.s 			page 201


     /tmp/ccDfNsWv.s:9588   .text.adc_get_injected:00000000 $t
     /tmp/ccDfNsWv.s:9596   .text.adc_get_injected:00000000 adc_get_injected
     /tmp/ccDfNsWv.s:9663   .text.adc_get_injected:00000048 $d
                .rodata.jdrs.9062:00000000 jdrs.9077
     /tmp/ccDfNsWv.s:9669   .text.NVIC_conf:00000000 $t
     /tmp/ccDfNsWv.s:9677   .text.NVIC_conf:00000000 NVIC_conf
     /tmp/ccDfNsWv.s:9714   .text.NVIC_conf:00000028 $d
     /tmp/ccDfNsWv.s:9720   .text.SetDate:00000000 $t
     /tmp/ccDfNsWv.s:9728   .text.SetDate:00000000 SetDate
     /tmp/ccDfNsWv.s:9936   .text.SetDate:0000019c $d
     /tmp/ccDfNsWv.s:9948   .text.flash_latency:00000000 $t
     /tmp/ccDfNsWv.s:9956   .text.flash_latency:00000000 flash_latency
     /tmp/ccDfNsWv.s:9987   .text.flash_latency:00000024 $d
     /tmp/ccDfNsWv.s:10638  .rodata.jdrs.9062:00000000 jdrs.9062
     /tmp/ccDfNsWv.s:10230  .data.p_TSpm:00000000 p_TSpm
     /tmp/ccDfNsWv.s:10060  .bss.FLAG:00000000 FLAG
     /tmp/ccDfNsWv.s:10529  .rodata._ytab:00000000 _ytab
                            *COM*:00000004 Time6
                            *COM*:00000004 Tim6
                            *COM*:00000004 Tim2
     /tmp/ccDfNsWv.s:10017  .rodata:00000000 $d
     /tmp/ccDfNsWv.s:10056  .bss.FLAG:00000000 $d
     /tmp/ccDfNsWv.s:10063  .bss.SX1278_1.8446:00000000 $d
     /tmp/ccDfNsWv.s:10067  .bss.SX1278_1.8446:00000000 SX1278_1.8446
     /tmp/ccDfNsWv.s:10070  .bss.SX1278_1.8472:00000000 $d
     /tmp/ccDfNsWv.s:10074  .bss.SX1278_1.8472:00000000 SX1278_1.8472
     /tmp/ccDfNsWv.s:10077  .bss.SX1278_1.8497:00000000 $d
     /tmp/ccDfNsWv.s:10081  .bss.SX1278_1.8497:00000000 SX1278_1.8497
     /tmp/ccDfNsWv.s:10084  .bss.SX1278_hw1.8445:00000000 $d
     /tmp/ccDfNsWv.s:10088  .bss.SX1278_hw1.8445:00000000 SX1278_hw1.8445
     /tmp/ccDfNsWv.s:10091  .bss.SX1278_hw1.8471:00000000 $d
     /tmp/ccDfNsWv.s:10095  .bss.SX1278_hw1.8471:00000000 SX1278_hw1.8471
     /tmp/ccDfNsWv.s:10098  .bss.SX1278_hw1.8496:00000000 $d
     /tmp/ccDfNsWv.s:10102  .bss.SX1278_hw1.8496:00000000 SX1278_hw1.8496
     /tmp/ccDfNsWv.s:10105  .bss.TSpm:00000000 $d
     /tmp/ccDfNsWv.s:10108  .bss.TSpm:00000000 TSpm
     /tmp/ccDfNsWv.s:10111  .bss.buf_rx.8475:00000000 $d
     /tmp/ccDfNsWv.s:10115  .bss.buf_rx.8475:00000000 buf_rx.8475
     /tmp/ccDfNsWv.s:10118  .bss.buf_tx.8499:00000000 $d
     /tmp/ccDfNsWv.s:10122  .bss.buf_tx.8499:00000000 buf_tx.8499
     /tmp/ccDfNsWv.s:10125  .bss.buffer.8851:00000000 $d
     /tmp/ccDfNsWv.s:10131  .bss.cap.8272:00000000 $d
     /tmp/ccDfNsWv.s:10135  .bss.cap.8272:00000000 cap.8272
     /tmp/ccDfNsWv.s:10141  .bss.cnt.8277:00000000 cnt.8277
     /tmp/ccDfNsWv.s:10142  .bss.cnt.8277:00000000 $d
     /tmp/ccDfNsWv.s:10144  .bss.cur.8268:00000000 $d
     /tmp/ccDfNsWv.s:10148  .bss.cur.8268:00000000 cur.8268
     /tmp/ccDfNsWv.s:10151  .bss.datetime.8674:00000000 $d
     /tmp/ccDfNsWv.s:10155  .bss.datetime.8674:00000000 datetime.8674
     /tmp/ccDfNsWv.s:10161  .bss.dinit.8852:00000000 dinit.8852
     /tmp/ccDfNsWv.s:10162  .bss.dinit.8852:00000000 $d
     /tmp/ccDfNsWv.s:10164  .bss.dma_buf:00000000 $d
     /tmp/ccDfNsWv.s:10168  .bss.dma_buf:00000000 dma_buf
     /tmp/ccDfNsWv.s:10171  .bss.dma_buf.8762:00000000 $d
     /tmp/ccDfNsWv.s:10175  .bss.dma_buf.8762:00000000 dma_buf.8762
     /tmp/ccDfNsWv.s:10178  .bss.pow.8273:00000000 $d
     /tmp/ccDfNsWv.s:10182  .bss.pow.8273:00000000 pow.8273
ARM GAS  /tmp/ccDfNsWv.s 			page 202


     /tmp/ccDfNsWv.s:10185  .bss.str_num.8500:00000000 $d
     /tmp/ccDfNsWv.s:10189  .bss.str_num.8500:00000000 str_num.8500
     /tmp/ccDfNsWv.s:10192  .bss.vacu.8270:00000000 $d
     /tmp/ccDfNsWv.s:10196  .bss.vacu.8270:00000000 vacu.8270
     /tmp/ccDfNsWv.s:10199  .bss.val.8747:00000000 $d
     /tmp/ccDfNsWv.s:10203  .bss.val.8747:00000000 val.8747
     /tmp/ccDfNsWv.s:10206  .bss.vbus.8269:00000000 $d
     /tmp/ccDfNsWv.s:10210  .bss.vbus.8269:00000000 vbus.8269
     /tmp/ccDfNsWv.s:10213  .bss.yb.8743:00000000 $d
     /tmp/ccDfNsWv.s:10217  .bss.yb.8743:00000000 yb.8743
     /tmp/ccDfNsWv.s:10220  .bss.yn.8744:00000000 $d
     /tmp/ccDfNsWv.s:10224  .bss.yn.8744:00000000 yn.8744
     /tmp/ccDfNsWv.s:10227  .data.p_TSpm:00000000 $d
     /tmp/ccDfNsWv.s:10233  .data.tbuf.8749:00000000 $d
     /tmp/ccDfNsWv.s:10237  .data.tbuf.8749:00000000 tbuf.8749
     /tmp/ccDfNsWv.s:10240  .rodata.BMP280_i2c.str1.4:00000000 $d
     /tmp/ccDfNsWv.s:10257  .rodata.BMP280_spi.str1.4:00000000 $d
     /tmp/ccDfNsWv.s:10261  .rodata.Intro2.str1.4:00000000 $d
     /tmp/ccDfNsWv.s:10273  .rodata.LoRaRX.str1.4:00000000 $d
     /tmp/ccDfNsWv.s:10277  .rodata.LoRaRX1.str1.4:00000000 $d
     /tmp/ccDfNsWv.s:10315  .rodata.MAX44009_i2c.str1.4:00000000 $d
     /tmp/ccDfNsWv.s:10319  .rodata.MemCard_Menu.str1.4:00000000 $d
     /tmp/ccDfNsWv.s:10443  .rodata.Menu1.str1.4:00000000 $d
     /tmp/ccDfNsWv.s:10459  .rodata.SPI_Tool.str1.4:00000000 $d
     /tmp/ccDfNsWv.s:10477  .rodata.SPI_Tool_Menu.str1.4:00000000 $d
     /tmp/ccDfNsWv.s:10493  .rodata.SetDate.str1.4:00000000 $d
     /tmp/ccDfNsWv.s:10514  .rodata.TSL2561_i2c.str1.4:00000000 $d
     /tmp/ccDfNsWv.s:10518  .rodata.Zegarek.str1.4:00000000 $d
     /tmp/ccDfNsWv.s:10525  .rodata._ytab:00000000 $d
     /tmp/ccDfNsWv.s:10555  .rodata.fun_tool.str1.4:00000000 $d
     /tmp/ccDfNsWv.s:10606  .rodata.head.str1.4:00000000 $d
     /tmp/ccDfNsWv.s:10613  .rodata.ili9486.str1.4:00000000 $d
     /tmp/ccDfNsWv.s:10634  .rodata.jdrs.9062:00000000 $d
     /tmp/ccDfNsWv.s:10644  .rodata.lexmark_lcd.str1.4:00000000 $d
     /tmp/ccDfNsWv.s:10657  .rodata.lion_updown.str1.4:00000000 $d
     /tmp/ccDfNsWv.s:10672  .rodata.liontrend.str1.4:00000000 $d
     /tmp/ccDfNsWv.s:10679  .rodata.minios.str1.4:00000000 $d
     /tmp/ccDfNsWv.s:10711  .rodata.qtouch.str1.4:00000000 $d
     /tmp/ccDfNsWv.s:10715  .rodata.ws2812led.str1.4:00000000 $d

UNDEFINED SYMBOLS
tr_pen_color
UaPutK
uint2uart
UaPutS
uint2str
i2c1r_init
i2c1_write
i2c1_read
tr_locate
unt2uart
UART_getChar
int2uart
UART_getNum
UART1_putc
UART2_putc
p_Fifo1
ARM GAS  /tmp/ccDfNsWv.s 			page 203


sint2uart
BkpRegInit
int2uarz
UaPutC
RtcInit
i2c1_init
ssd1306_init
num2uart
int2str
oled_str16
oled_refresh_gram
oled_hw
oled_num24
UART_getHex
hex2uart
SPI1_init_
DHT_Init
DHT_read
I2C2_init
i2c2_scan
SX1278_begin
SX1278_LoRaEntryRx
SX1278_LoRaRx
SX1278_SPIRead
SX1278_LoRaRxPacket
SX1278_read
unt2str
strlen
stpcpy
SX1278_LoRaEntryTx
SX1278_LoRaTxPacketStart
SX1278_sleep
UC1608_Init
UC1608_Clr
UC1608_str
UC1608_Refresh
i2c2_write
i2c2_read
spi1_rw
mmc_read_sect
crc16_spi2
EraseFlashPage
TFT_Clear
rtc_SetTime
SPI2_init
spi2_rw
TFT_Init
crc16_spi2_init
CardType
mmc_init
mmc_read_config
mmc_write_sect
TFT_dy
rtc_GetTime
TFT_Fill
TFT_txt
TFT_SetWindow
ARM GAS  /tmp/ccDfNsWv.s 			page 204


ColCon
str2int
