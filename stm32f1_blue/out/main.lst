ARM GAS  /tmp/ccjvICQi.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   3              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   4              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   5              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   6              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   7              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
   8              		.eabi_attribute 30, 2	@ Tag_ABI_optimization_goals
   9              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  10              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  11              		.file	"main.c"
  12              	@ GNU C99 (15:7-2018-q2-6) version 7.3.1 20180622 (release) [ARM/embedded-7-branch revision 261907]
  13              	@	compiled by GNU C version 8.2.0, GMP version 6.1.2, MPFR version 4.0.2, MPC version 1.1.0, isl ve
  14              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  15              	@ options passed:  -I . -imultilib thumb/v7-m -MD out/main.d -MF out/main.d
  16              	@ -MP -MQ out/main.o -D__USES_INITFINI__ -D RAMCODE -D STM32F10X_HD main.c
  17              	@ -mcpu=cortex-m3 -mthumb -auxbase-strip out/main.o -O2 -Wall
  18              	@ -Wstrict-prototypes -Wextra -Wno-uninitialized
  19              	@ -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable
  20              	@ -std=gnu99 -ffunction-sections -fdata-sections -fverbose-asm
  21              	@ options enabled:  -faggressive-loop-optimizations -falign-jumps
  22              	@ -falign-labels -falign-loops -fauto-inc-dec -fbranch-count-reg
  23              	@ -fcaller-saves -fchkp-check-incomplete-type -fchkp-check-read
  24              	@ -fchkp-check-write -fchkp-instrument-calls -fchkp-narrow-bounds
  25              	@ -fchkp-optimize -fchkp-store-bounds -fchkp-use-static-bounds
  26              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcode-hoisting
  27              	@ -fcombine-stack-adjustments -fcommon -fcompare-elim -fcprop-registers
  28              	@ -fcrossjumping -fcse-follow-jumps -fdata-sections -fdefer-pop
  29              	@ -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
  30              	@ -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-types
  31              	@ -fexpensive-optimizations -fforward-propagate -ffp-int-builtin-inexact
  32              	@ -ffunction-cse -ffunction-sections -fgcse -fgcse-lm -fgnu-runtime
  33              	@ -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  34              	@ -fif-conversion -fif-conversion2 -findirect-inlining -finline
  35              	@ -finline-atomics -finline-functions-called-once -finline-small-functions
  36              	@ -fipa-bit-cp -fipa-cp -fipa-icf -fipa-icf-functions -fipa-icf-variables
  37              	@ -fipa-profile -fipa-pure-const -fipa-ra -fipa-reference -fipa-sra
  38              	@ -fipa-vrp -fira-hoist-pressure -fira-share-save-slots
  39              	@ -fira-share-spill-slots -fisolate-erroneous-paths-dereference -fivopts
  40              	@ -fkeep-static-consts -fleading-underscore -flifetime-dse -flra-remat
  41              	@ -flto-odr-type-merging -fmath-errno -fmerge-constants
  42              	@ -fmerge-debug-strings -fmove-loop-invariants -fomit-frame-pointer
  43              	@ -foptimize-sibling-calls -foptimize-strlen -fpartial-inlining -fpeephole
  44              	@ -fpeephole2 -fplt -fprefetch-loop-arrays -freg-struct-return
  45              	@ -freorder-blocks -freorder-functions -frerun-cse-after-loop
  46              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  47              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  48              	@ -fsched-pressure -fsched-rank-heuristic -fsched-spec
  49              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-insns
  50              	@ -fschedule-insns2 -fsection-anchors -fsemantic-interposition
  51              	@ -fshow-column -fshrink-wrap -fshrink-wrap-separate -fsigned-zeros
  52              	@ -fsplit-ivs-in-unroller -fsplit-wide-types -fssa-backprop -fssa-phiopt
  53              	@ -fstdarg-opt -fstore-merging -fstrict-aliasing -fstrict-overflow
  54              	@ -fstrict-volatile-bitfields -fsync-libcalls -fthread-jumps
  55              	@ -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce
  56              	@ -ftree-ccp -ftree-ch -ftree-coalesce-vars -ftree-copy-prop -ftree-cselim
  57              	@ -ftree-dce -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
ARM GAS  /tmp/ccjvICQi.s 			page 2


  58              	@ -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  59              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pre
  60              	@ -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slsr
  61              	@ -ftree-sra -ftree-switch-conversion -ftree-tail-merge -ftree-ter
  62              	@ -ftree-vrp -funit-at-a-time -fverbose-asm -fzero-initialized-in-bss
  63              	@ -masm-syntax-unified -mfix-cortex-m3-ldrd -mlittle-endian
  64              	@ -mpic-data-is-text-relative -msched-prolog -mthumb -munaligned-access
  65              	@ -mvectorize-with-neon-quad
  66              	
  67              		.text
  68              		.section	.text.gmtime_r.isra.0.constprop.2,"ax",%progbits
  69              		.align	1
  70              		.p2align 2,,3
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu softvfp
  75              		.type	gmtime_r.isra.0.constprop.2, %function
  76              	gmtime_r.isra.0.constprop.2:
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}	@
  80              	@ main.c:5707: 	tmbuf->tm_min = (dayclock % 3600) / 60;
  81 0004 4FF46164 		mov	r4, #3600	@ tmp221,
  82              	@ main.c:5703: 	dayclock = (u32) time % SECS_DAY;
  83 0008 524B     		ldr	r3, .L35	@ tmp191,
  84 000a 534A     		ldr	r2, .L35+4	@ tmp193,
  85 000c A3FB0013 		umull	r1, r3, r3, r0	@ tmp372, tmp190, tmp191, ISRA.324
  86 0010 190C     		lsrs	r1, r3, #16	@ dayclock, tmp190,
  87 0012 02FB1101 		mls	r1, r2, r1, r0	@ dayclock, tmp193, dayclock, ISRA.324
  88              	@ main.c:5707: 	tmbuf->tm_min = (dayclock % 3600) / 60;
  89 0016 514A     		ldr	r2, .L35+8	@ tmp219,
  90              	@ main.c:5704: 	dayno = (u32) time / SECS_DAY;
  91 0018 1B0C     		lsrs	r3, r3, #16	@ dayno, tmp190,
  92              	@ main.c:5707: 	tmbuf->tm_min = (dayclock % 3600) / 60;
  93 001a A2FB012E 		umull	r2, lr, r2, r1	@ tmp373, tmp218, tmp219, dayclock
  94              	@ main.c:5709: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
  95 001e 504A     		ldr	r2, .L35+12	@ tmp252,
  96 0020 1D1D     		adds	r5, r3, #4	@ tmp250, dayno,
  97              	@ main.c:5707: 	tmbuf->tm_min = (dayclock % 3600) / 60;
  98 0022 4FEADE2E 		lsr	lr, lr, #11	@ tmp217, tmp218,
  99              	@ main.c:5709: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 100 0026 A2FB0502 		umull	r0, r2, r2, r5	@ tmp374, tmp251, tmp252, tmp250
 101              	@ main.c:5706: 	tmbuf->tm_sec = dayclock % 60;
 102 002a 4E4E     		ldr	r6, .L35+16	@ tmp198,
 103              	@ main.c:5707: 	tmbuf->tm_min = (dayclock % 3600) / 60;
 104 002c 04FB1E10 		mls	r0, r4, lr, r1	@ tmp222, tmp221, tmp217, dayclock
 105              	@ main.c:5706: 	tmbuf->tm_sec = dayclock % 60;
 106 0030 A6FB0174 		umull	r7, r4, r6, r1	@ tmp375, tmp197, tmp198, dayclock
 107              	@ main.c:5709: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 108 0034 AF1A     		subs	r7, r5, r2	@ tmp253, tmp250, tmp251
 109              	@ main.c:5707: 	tmbuf->tm_min = (dayclock % 3600) / 60;
 110 0036 A6FB0060 		umull	r6, r0, r6, r0	@ tmp376, tmp232, tmp198, tmp222
 111              	@ main.c:5709: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 112 003a 02EB5702 		add	r2, r2, r7, lsr #1	@ tmp255, tmp251, tmp253,
 113 003e 9208     		lsrs	r2, r2, #2	@ tmp256, tmp255,
 114              	@ main.c:5706: 	tmbuf->tm_sec = dayclock % 60;
ARM GAS  /tmp/ccjvICQi.s 			page 3


 115 0040 6409     		lsrs	r4, r4, #5	@ tmp199, tmp197,
 116 0042 DFF82CC1 		ldr	ip, .L35+28	@ tmp364,
 117              	@ main.c:5709: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 118 0046 C2EBC202 		rsb	r2, r2, r2, lsl #3	@ tmp259, tmp256, tmp256,
 119              	@ main.c:5706: 	tmbuf->tm_sec = dayclock % 60;
 120 004a C4EB0414 		rsb	r4, r4, r4, lsl #4	@ tmp202, tmp199, tmp199,
 121              	@ main.c:5709: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 122 004e AA1A     		subs	r2, r5, r2	@ tmp260, tmp250, tmp259
 123              	@ main.c:5707: 	tmbuf->tm_min = (dayclock % 3600) / 60;
 124 0050 4009     		lsrs	r0, r0, #5	@ tmp234, tmp232,
 125              	@ main.c:5706: 	tmbuf->tm_sec = dayclock % 60;
 126 0052 A1EB8401 		sub	r1, r1, r4, lsl #2	@ tmp204, dayclock, tmp202,
 127              	@ main.c:5709: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 128 0056 CCF81820 		str	r2, [ip, #24]	@ tmp260, ptm.tm_wday
 129              	@ main.c:5707: 	tmbuf->tm_min = (dayclock % 3600) / 60;
 130 005a CCE90010 		strd	r1, r0, [ip]	@ tmp204, tmp234, tmp364
 131              	@ main.c:5701: 	int year = EPOCH_YR;
 132 005e 40F2B272 		movw	r2, #1970	@ year,
 133              	@ main.c:5712: 		dayno -= YEARSIZE(year);
 134 0062 40F26D18 		movw	r8, #365	@ iftmp.301_20,
 135              	@ main.c:5710: 	while (dayno >= (u32) YEARSIZE(year))
 136 0066 404D     		ldr	r5, .L35+20	@ tmp368,
 137 0068 6420     		movs	r0, #100	@ tmp369,
 138 006a 4FF4C877 		mov	r7, #400	@ tmp371,
 139 006e 10E0     		b	.L2	@
 140              	.L31:
 141 0070 A5FB0241 		umull	r4, r1, r5, r2	@ tmp377, tmp285, tmp368, year
 142 0074 4C09     		lsrs	r4, r1, #5	@ _24, tmp285,
 143 0076 00FB1424 		mls	r4, r0, r4, r2	@ _24, tmp369, _24, year
 144 007a 9CB9     		cbnz	r4, .L5	@ _24,
 145 007c C909     		lsrs	r1, r1, #7	@ tmp365, tmp285,
 146 007e 07FB1121 		mls	r1, r7, r1, r2	@ _125, tmp371, tmp365, year
 147 0082 D9B9     		cbnz	r1, .L29	@ _125,
 148 0084 B3F5B77F 		cmp	r3, #366	@ dayno,
 149 0088 61D3     		bcc	.L30	@,
 150              	.L23:
 151              	@ main.c:5712: 		dayno -= YEARSIZE(year);
 152 008a 4FF4B771 		mov	r1, #366	@ iftmp.301_20,
 153              	.L3:
 154 008e 5B1A     		subs	r3, r3, r1	@ dayno, dayno, iftmp.301_20
 155              	@ main.c:5713: 		year++;
 156 0090 0132     		adds	r2, r2, #1	@ year, year,
 157              	.L2:
 158              	@ main.c:5710: 	while (dayno >= (u32) YEARSIZE(year))
 159 0092 12F00306 		ands	r6, r2, #3	@ _15, year,
 160 0096 EBD0     		beq	.L31	@,
 161 0098 B3F5B67F 		cmp	r3, #364	@ dayno,
 162 009c 13D9     		bls	.L32	@,
 163              	@ main.c:5712: 		dayno -= YEARSIZE(year);
 164 009e 40F26D11 		movw	r1, #365	@ iftmp.301_20,
 165 00a2 F4E7     		b	.L3	@
 166              	.L5:
 167              	@ main.c:5710: 	while (dayno >= (u32) YEARSIZE(year))
 168 00a4 B3F5B77F 		cmp	r3, #366	@ dayno,
 169 00a8 EFD2     		bcs	.L23	@,
 170              	.L17:
 171 00aa 4FF4C870 		mov	r0, #400	@ tmp355,
ARM GAS  /tmp/ccjvICQi.s 			page 4


 172 00ae 2E49     		ldr	r1, .L35+20	@ tmp353,
 173 00b0 A1FB0251 		umull	r5, r1, r1, r2	@ tmp379, tmp352, tmp353, year
 174 00b4 C909     		lsrs	r1, r1, #7	@ _125, tmp352,
 175 00b6 00FB1121 		mls	r1, r0, r1, r2	@ _125, tmp355, _125, year
 176 00ba 10E0     		b	.L14	@
 177              	.L29:
 178 00bc B3F5B67F 		cmp	r3, #364	@ dayno,
 179 00c0 F3D9     		bls	.L17	@,
 180              	@ main.c:5712: 		dayno -= YEARSIZE(year);
 181 00c2 4146     		mov	r1, r8	@ iftmp.301_20, iftmp.301_20
 182 00c4 E3E7     		b	.L3	@
 183              	.L32:
 184 00c6 6425     		movs	r5, #100	@ tmp335,
 185 00c8 4FF4C870 		mov	r0, #400	@ tmp345,
 186 00cc 2649     		ldr	r1, .L35+20	@ tmp333,
 187 00ce A1FB0241 		umull	r4, r1, r1, r2	@ tmp378, tmp332, tmp333, year
 188 00d2 4C09     		lsrs	r4, r1, #5	@ _24, tmp332,
 189 00d4 C909     		lsrs	r1, r1, #7	@ _125, tmp332,
 190 00d6 05FB1424 		mls	r4, r5, r4, r2	@ _24, tmp335, _24, year
 191 00da 00FB1121 		mls	r1, r0, r1, r2	@ _125, tmp345, _125, year
 192              	.L14:
 193              	@ main.c:5716: 	tmbuf->tm_yday = dayno;
 194 00de CCF81C30 		str	r3, [ip, #28]	@ dayno, ptm.tm_yday
 195 00e2 2248     		ldr	r0, .L35+24	@ ivtmp.429,
 196 00e4 002C     		cmp	r4, #0	@ _24,
 197 00e6 14BF     		ite	ne	@
 198 00e8 4FF03008 		movne	r8, #48	@, tmp315,
 199 00ec 4FF00008 		moveq	r8, #0	@, tmp315,
 200 00f0 0029     		cmp	r1, #0	@ _125,
 201 00f2 0CBF     		ite	eq	@
 202 00f4 4FF03009 		moveq	r9, #48	@, tmp321,
 203 00f8 4FF00009 		movne	r9, #0	@, tmp321,
 204              	@ main.c:5720: 		dayno -= _ytab[LEAPYEAR(year)][tmbuf->tm_mon];
 205 00fc 0025     		movs	r5, #0	@ ivtmp.427,
 206              	@ main.c:5718: 	while (dayno >= (u32) _ytab[LEAPYEAR(year)][tmbuf->tm_mon])
 207 00fe 5EB9     		cbnz	r6, .L10	@ _15,
 208              	.L34:
 209 0100 D4B9     		cbnz	r4, .L11	@ _24,
 210 0102 F9B9     		cbnz	r1, .L33	@ _125,
 211 0104 076B     		ldr	r7, [r0, #48]	@ MEM[base: _42, offset: 48B], MEM[base: _42, offset: 48B]
 212 0106 BB42     		cmp	r3, r7	@ dayno, MEM[base: _42, offset: 48B]
 213 0108 09D3     		bcc	.L16	@,
 214              	.L15:
 215 010a 50F80970 		ldr	r7, [r0, r9]	@ _73, MEM[base: _120, index: _18, offset: 0B]
 216              	.L9:
 217              	@ main.c:5720: 		dayno -= _ytab[LEAPYEAR(year)][tmbuf->tm_mon];
 218 010e DB1B     		subs	r3, r3, r7	@ dayno, dayno, _73
 219 0110 0135     		adds	r5, r5, #1	@ ivtmp.427, ivtmp.427,
 220 0112 0430     		adds	r0, r0, #4	@ ivtmp.429, ivtmp.429,
 221              	@ main.c:5718: 	while (dayno >= (u32) _ytab[LEAPYEAR(year)][tmbuf->tm_mon])
 222 0114 002E     		cmp	r6, #0	@ _15
 223 0116 F3D0     		beq	.L34	@
 224              	.L10:
 225 0118 0768     		ldr	r7, [r0]	@ _73, MEM[base: _121, offset: 0B]
 226 011a BB42     		cmp	r3, r7	@ dayno, _73
 227 011c F7D2     		bcs	.L9	@,
 228              	.L16:
ARM GAS  /tmp/ccjvICQi.s 			page 5


 229              	@ main.c:5724: 	tmbuf->tm_isdst = 1;
 230 011e 0121     		movs	r1, #1	@ tmp325,
 231              	@ main.c:5723: 	tmbuf->tm_mday = dayno + 1;
 232 0120 0B44     		add	r3, r3, r1	@ tmp323,
 233              	@ main.c:5725: 	tmbuf->tm_hour += TIMEZONE - tmbuf->tm_isdst;
 234 0122 0EEB0100 		add	r0, lr, r1	@ tmp327, tmp217,
 235              	@ main.c:5727: 	tmbuf->tm_mon  += 1;
 236 0126 0D44     		add	r5, r5, r1	@ tmp330,
 237              	@ main.c:5725: 	tmbuf->tm_hour += TIMEZONE - tmbuf->tm_isdst;
 238 0128 CCE90203 		strd	r0, r3, [ip, #8]	@ tmp327, tmp323, tmp364,
 239              	@ main.c:5726: 	tmbuf->tm_year += YEAR0;
 240 012c CCE90452 		strd	r5, r2, [ip, #16]	@ tmp330, year, tmp364,
 241              	@ main.c:5724: 	tmbuf->tm_isdst = 1;
 242 0130 CCF82010 		str	r1, [ip, #32]	@ tmp325, ptm.tm_isdst
 243              	@ main.c:5729: }
 244 0134 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}	@
 245              	.L11:
 246              	@ main.c:5718: 	while (dayno >= (u32) _ytab[LEAPYEAR(year)][tmbuf->tm_mon])
 247 0138 50F80870 		ldr	r7, [r0, r8]	@ MEM[base: _88, index: _74, offset: 0B], MEM[base: _88, index: _74, offset: 0B]
 248 013c BB42     		cmp	r3, r7	@ dayno, MEM[base: _88, index: _74, offset: 0B]
 249 013e EED3     		bcc	.L16	@,
 250 0140 076B     		ldr	r7, [r0, #48]	@ _73, MEM[base: _88, offset: 48B]
 251 0142 E4E7     		b	.L9	@
 252              	.L33:
 253 0144 50F80870 		ldr	r7, [r0, r8]	@ MEM[base: _32, index: _74, offset: 0B], MEM[base: _32, index: _74, offset: 0B]
 254 0148 BB42     		cmp	r3, r7	@ dayno, MEM[base: _32, index: _74, offset: 0B]
 255 014a DED2     		bcs	.L15	@,
 256 014c E7E7     		b	.L16	@
 257              	.L30:
 258              	@ main.c:5710: 	while (dayno >= (u32) YEARSIZE(year))
 259 014e 0C46     		mov	r4, r1	@ _24, _125
 260 0150 C5E7     		b	.L14	@
 261              	.L36:
 262 0152 00BF     		.align	2
 263              	.L35:
 264 0154 07452EC2 		.word	-1037155065
 265 0158 80510100 		.word	86400
 266 015c C5B3A291 		.word	-1851608123
 267 0160 25499224 		.word	613566757
 268 0164 89888888 		.word	-2004318071
 269 0168 1F85EB51 		.word	1374389535
 270 016c 00000000 		.word	.LANCHOR0
 271 0170 00000000 		.word	ptm
 272              		.size	gmtime_r.isra.0.constprop.2, .-gmtime_r.isra.0.constprop.2
 273              		.section	.text.head,"ax",%progbits
 274              		.align	1
 275              		.p2align 2,,3
 276              		.global	head
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 280              		.fpu softvfp
 281              		.type	head, %function
 282              	head:
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285 0000 08B5     		push	{r3, lr}	@
ARM GAS  /tmp/ccjvICQi.s 			page 6


 286              	@ main.c:216: 		tr_pen_color( TGREEN );
 287 0002 0220     		movs	r0, #2	@,
 288 0004 FFF7FEFF 		bl	tr_pen_color	@
 289              	@ main.c:218: 		UaPutK("\f\r\n Mini STM32F103C8T6 RAM   "); // Boot from RAM 	 = B0+ B1+
 290 0008 0648     		ldr	r0, .L39	@,
 291 000a FFF7FEFF 		bl	UaPutK	@
 292              	@ main.c:222: 		uint2uart(F_CPU/1e6);	UaPutK(" MHz");
 293 000e 4820     		movs	r0, #72	@,
 294 0010 FFF7FEFF 		bl	uint2uart	@
 295 0014 0448     		ldr	r0, .L39+4	@,
 296 0016 FFF7FEFF 		bl	UaPutK	@
 297              	@ main.c:224: 	}
 298 001a BDE80840 		pop	{r3, lr}	@
 299              	@ main.c:223: 		tr_pen_color( TYELLOW );
 300 001e 0320     		movs	r0, #3	@,
 301 0020 FFF7FEBF 		b	tr_pen_color	@
 302              	.L40:
 303              		.align	2
 304              	.L39:
 305 0024 00000000 		.word	.LC10
 306 0028 20000000 		.word	.LC11
 307              		.size	head, .-head
 308              		.section	.text.liontrend,"ax",%progbits
 309              		.align	1
 310              		.p2align 2,,3
 311              		.global	liontrend
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu softvfp
 316              		.type	liontrend, %function
 317              	liontrend:
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}	@
 321              	@ main.c:246: 		v[6] = (100*(v[0]-v[1]))/(v[2]-v[3]); //a=(y2-y1)/(x2-x1)
 322 0004 6423     		movs	r3, #100	@ tmp194,
 323 0006 B0F90060 		ldrsh	r6, [r0]	@ _1, *v_82(D)
 324 000a B0F902E0 		ldrsh	lr, [r0, #2]	@ _3, MEM[(s16 *)v_82(D) + 2B]
 325 000e B0F90440 		ldrsh	r4, [r0, #4]	@ _8, MEM[(s16 *)v_82(D) + 4B]
 326 0012 A6EB0E0C 		sub	ip, r6, lr	@ tmp192, _1, _3
 327 0016 03FB0CFC 		mul	ip, r3, ip	@ tmp193, tmp194, tmp192
 328 001a B0F90620 		ldrsh	r2, [r0, #6]	@ _10, MEM[(s16 *)v_82(D) + 6B]
 329              	@ main.c:244: void liontrend(s16 v[],s16 c[]){
 330 001e 0546     		mov	r5, r0	@ v, v
 331              	@ main.c:246: 		v[6] = (100*(v[0]-v[1]))/(v[2]-v[3]); //a=(y2-y1)/(x2-x1)
 332 0020 A01A     		subs	r0, r4, r2	@ tmp195, _8, _10
 333 0022 9CFBF0FC 		sdiv	ip, ip, r0	@ tmp197, tmp193, tmp195
 334 0026 0FFA8CFC 		sxth	ip, ip	@ _13, tmp197
 335              	@ main.c:247: 		v[5] = v[0]-v[6]*v[2]/100;  //b=y-ax
 336 002a 0CFB04F4 		mul	r4, ip, r4	@ tmp199, _13, _8
 337 002e 3D4F     		ldr	r7, .L43	@ tmp202,
 338              	@ main.c:248: 		v[4] = v[1]-v[6]*v[3]/100;  //b=y-ax;
 339 0030 0CFB02F2 		mul	r2, ip, r2	@ tmp209, _13, _10
 340              	@ main.c:247: 		v[5] = v[0]-v[6]*v[2]/100;  //b=y-ax
 341 0034 87FB0408 		smull	r0, r8, r7, r4	@ tmp275, tmp201, tmp202, tmp199
 342 0038 E017     		asrs	r0, r4, #31	@ tmp204, tmp199,
ARM GAS  /tmp/ccjvICQi.s 			page 7


 343 003a A0EB6810 		sub	r0, r0, r8, asr #5	@ tmp200, tmp204, tmp201,
 344 003e 3044     		add	r0, r0, r6	@ tmp207, _1
 345 0040 00B2     		sxth	r0, r0	@ _20, tmp207
 346              	@ main.c:249: 		v[7] = 100*(339-v[5])/v[6]; //x=(y-b)/a
 347 0042 C0F5A974 		rsb	r4, r0, #338	@ tmp220, _20,
 348 0046 0134     		adds	r4, r4, #1	@ tmp220, tmp220,
 349 0048 03FB04F4 		mul	r4, r3, r4	@ tmp221, tmp194, tmp220
 350 004c 94FBFCF4 		sdiv	r4, r4, ip	@ tmp224, tmp221, _13
 351              	@ main.c:244: void liontrend(s16 v[],s16 c[]){
 352 0050 0E46     		mov	r6, r1	@ c, c
 353              	@ main.c:248: 		v[4] = v[1]-v[6]*v[3]/100;  //b=y-ax;
 354 0052 87FB0281 		smull	r8, r1, r7, r2	@ tmp276, tmp211, tmp202, tmp209
 355 0056 D217     		asrs	r2, r2, #31	@ tmp214, tmp209,
 356 0058 A2EB6112 		sub	r2, r2, r1, asr #5	@ tmp210, tmp214, tmp211,
 357 005c 7244     		add	r2, r2, lr	@ tmp217, _3
 358 005e 2A81     		strh	r2, [r5, #8]	@ movhi	@ tmp217, MEM[(s16 *)v_82(D) + 8B]
 359              	@ main.c:247: 		v[5] = v[0]-v[6]*v[2]/100;  //b=y-ax
 360 0060 6881     		strh	r0, [r5, #10]	@ movhi	@ _20, MEM[(s16 *)v_82(D) + 10B]
 361              	@ main.c:249: 		v[7] = 100*(339-v[5])/v[6]; //x=(y-b)/a
 362 0062 EC81     		strh	r4, [r5, #14]	@ movhi	@ tmp224, MEM[(s16 *)v_82(D) + 14B]
 363              	@ main.c:246: 		v[6] = (100*(v[0]-v[1]))/(v[2]-v[3]); //a=(y2-y1)/(x2-x1)
 364 0064 A5F80CC0 		strh	ip, [r5, #12]	@ movhi	@ _13, MEM[(s16 *)v_82(D) + 12B]
 365              	@ main.c:251: 		c[6] = (100*(c[0]-c[1]))/(c[2]-c[3]);
 366 0068 B6F900E0 		ldrsh	lr, [r6]	@ _32, *c_87(D)
 367 006c B6F902C0 		ldrsh	ip, [r6, #2]	@ _34, MEM[(s16 *)c_87(D) + 2B]
 368 0070 B6F90440 		ldrsh	r4, [r6, #4]	@ _39, MEM[(s16 *)c_87(D) + 4B]
 369 0074 AEEB0C02 		sub	r2, lr, ip	@ tmp226, _32, _34
 370 0078 03FB02F3 		mul	r3, r3, r2	@ tmp227, tmp194, tmp226
 371 007c B6F90610 		ldrsh	r1, [r6, #6]	@ _41, MEM[(s16 *)c_87(D) + 6B]
 372              	@ main.c:256: 		UaPutS("v="); sint2uart(v[6]); sint2uart(v[5]); sint2uart(v[4]); sint2uart(v[7]); U
 373 0080 2948     		ldr	r0, .L43+4	@,
 374              	@ main.c:251: 		c[6] = (100*(c[0]-c[1]))/(c[2]-c[3]);
 375 0082 621A     		subs	r2, r4, r1	@ tmp229, _39, _41
 376 0084 93FBF2F3 		sdiv	r3, r3, r2	@ tmp231, tmp227, tmp229
 377 0088 1BB2     		sxth	r3, r3	@ _44, tmp231
 378              	@ main.c:252: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 379 008a 03FB04F4 		mul	r4, r3, r4	@ tmp233, _44, _39
 380              	@ main.c:253: 		c[4] = c[1]-c[6]*c[3]/100;//y-ax
 381 008e 03FB01F1 		mul	r1, r3, r1	@ tmp243, _44, _41
 382              	@ main.c:252: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 383 0092 87FB0429 		smull	r2, r9, r7, r4	@ tmp277, tmp235, tmp202, tmp233
 384              	@ main.c:253: 		c[4] = c[1]-c[6]*c[3]/100;//y-ax
 385 0096 87FB0128 		smull	r2, r8, r7, r1	@ tmp278, tmp245, tmp202, tmp243
 386              	@ main.c:252: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 387 009a E217     		asrs	r2, r4, #31	@ tmp238, tmp233,
 388 009c A2EB6912 		sub	r2, r2, r9, asr #5	@ tmp234, tmp238, tmp235,
 389              	@ main.c:253: 		c[4] = c[1]-c[6]*c[3]/100;//y-ax
 390 00a0 C917     		asrs	r1, r1, #31	@ tmp248, tmp243,
 391              	@ main.c:252: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 392 00a2 7244     		add	r2, r2, lr	@ tmp241, _32
 393              	@ main.c:253: 		c[4] = c[1]-c[6]*c[3]/100;//y-ax
 394 00a4 A1EB6811 		sub	r1, r1, r8, asr #5	@ tmp244, tmp248, tmp245,
 395 00a8 6144     		add	r1, r1, ip	@ tmp251, _34
 396              	@ main.c:252: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 397 00aa 92B2     		uxth	r2, r2	@ _50, tmp241
 398              	@ main.c:251: 		c[6] = (100*(c[0]-c[1]))/(c[2]-c[3]);
 399 00ac B381     		strh	r3, [r6, #12]	@ movhi	@ _44, MEM[(s16 *)c_87(D) + 12B]
ARM GAS  /tmp/ccjvICQi.s 			page 8


 400              	@ main.c:252: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 401 00ae 7281     		strh	r2, [r6, #10]	@ movhi	@ _50, MEM[(s16 *)c_87(D) + 10B]
 402              	@ main.c:253: 		c[4] = c[1]-c[6]*c[3]/100;//y-ax
 403 00b0 3181     		strh	r1, [r6, #8]	@ movhi	@ tmp251, MEM[(s16 *)c_87(D) + 8B]
 404              	@ main.c:254: 		c[7] = c[5]+c[6]*v[7]/100;// szukana pojemnosc
 405 00b2 B5F90E10 		ldrsh	r1, [r5, #14]	@ MEM[(s16 *)v_82(D) + 14B], MEM[(s16 *)v_82(D) + 14B]
 406              	@ main.c:256: 		UaPutS("v="); sint2uart(v[6]); sint2uart(v[5]); sint2uart(v[4]); sint2uart(v[7]); U
 407 00b6 1D4C     		ldr	r4, .L43+8	@ tmp268,
 408              	@ main.c:254: 		c[7] = c[5]+c[6]*v[7]/100;// szukana pojemnosc
 409 00b8 03FB01F3 		mul	r3, r3, r1	@ tmp254, _44, MEM[(s16 *)v_82(D) + 14B]
 410 00bc 87FB0317 		smull	r1, r7, r7, r3	@ tmp279, tmp256, tmp202, tmp254
 411 00c0 DB17     		asrs	r3, r3, #31	@ tmp259, tmp254,
 412 00c2 C3EB6713 		rsb	r3, r3, r7, asr #5	@ tmp255, tmp259, tmp256,
 413 00c6 1A44     		add	r2, r2, r3	@ tmp261, tmp255
 414 00c8 F281     		strh	r2, [r6, #14]	@ movhi	@ tmp261, MEM[(s16 *)c_87(D) + 14B]
 415              	@ main.c:256: 		UaPutS("v="); sint2uart(v[6]); sint2uart(v[5]); sint2uart(v[4]); sint2uart(v[7]); U
 416 00ca FFF7FEFF 		bl	UaPutS	@
 417 00ce B5F90C00 		ldrsh	r0, [r5, #12]	@, MEM[(s16 *)v_82(D) + 12B]
 418 00d2 FFF7FEFF 		bl	sint2uart	@
 419 00d6 B5F90A00 		ldrsh	r0, [r5, #10]	@, MEM[(s16 *)v_82(D) + 10B]
 420 00da FFF7FEFF 		bl	sint2uart	@
 421 00de B5F90800 		ldrsh	r0, [r5, #8]	@, MEM[(s16 *)v_82(D) + 8B]
 422 00e2 FFF7FEFF 		bl	sint2uart	@
 423 00e6 B5F90E00 		ldrsh	r0, [r5, #14]	@, MEM[(s16 *)v_82(D) + 14B]
 424 00ea FFF7FEFF 		bl	sint2uart	@
 425 00ee 2046     		mov	r0, r4	@, tmp268
 426 00f0 FFF7FEFF 		bl	UaPutS	@
 427              	@ main.c:257: 		UaPutS("c="); sint2uart(c[6]); sint2uart(c[5]); sint2uart(c[4]); sint2uart(c[7]); U
 428 00f4 0E48     		ldr	r0, .L43+12	@,
 429 00f6 FFF7FEFF 		bl	UaPutS	@
 430 00fa B6F90C00 		ldrsh	r0, [r6, #12]	@, MEM[(s16 *)c_87(D) + 12B]
 431 00fe FFF7FEFF 		bl	sint2uart	@
 432 0102 B6F90A00 		ldrsh	r0, [r6, #10]	@, MEM[(s16 *)c_87(D) + 10B]
 433 0106 FFF7FEFF 		bl	sint2uart	@
 434 010a B6F90800 		ldrsh	r0, [r6, #8]	@, MEM[(s16 *)c_87(D) + 8B]
 435 010e FFF7FEFF 		bl	sint2uart	@
 436 0112 B6F90E00 		ldrsh	r0, [r6, #14]	@, MEM[(s16 *)c_87(D) + 14B]
 437 0116 FFF7FEFF 		bl	sint2uart	@
 438 011a 2046     		mov	r0, r4	@, tmp268
 439              	@ main.c:258: 	}
 440 011c BDE8F843 		pop	{r3, r4, r5, r6, r7, r8, r9, lr}	@
 441              	@ main.c:257: 		UaPutS("c="); sint2uart(c[6]); sint2uart(c[5]); sint2uart(c[4]); sint2uart(c[7]); U
 442 0120 FFF7FEBF 		b	UaPutS	@
 443              	.L44:
 444              		.align	2
 445              	.L43:
 446 0124 1F85EB51 		.word	1374389535
 447 0128 00000000 		.word	.LC12
 448 012c 04000000 		.word	.LC13
 449 0130 08000000 		.word	.LC14
 450              		.size	liontrend, .-liontrend
 451              		.section	.text.oblicz,"ax",%progbits
 452              		.align	1
 453              		.p2align 2,,3
 454              		.global	oblicz
 455              		.syntax unified
 456              		.thumb
ARM GAS  /tmp/ccjvICQi.s 			page 9


 457              		.thumb_func
 458              		.fpu softvfp
 459              		.type	oblicz, %function
 460              	oblicz:
 461              		@ Volatile: function does not return.
 462              		@ args = 0, pretend = 0, frame = 80
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464              	@ main.c:5463: 	USART1->BRR = (F_CPU+UART1_SPEED/2)/UART1_SPEED;
 465 0000 40F27126 		movw	r6, #625	@ tmp141,
 466              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 467 0004 2025     		movs	r5, #32	@ tmp143,
 468              	@ main.c:259: void oblicz(void){
 469 0006 80B5     		push	{r7, lr}	@
 470 0008 94B0     		sub	sp, sp, #80	@,,
 471              	@ main.c:261: 		BkpRegInit();
 472 000a FFF7FEFF 		bl	BkpRegInit	@
 473              	@ main.c:267: 		PB12_o = 0;		// rozladowanie
 474 000e 0022     		movs	r2, #0	@ tmp150,
 475              	@ main.c:269: 		PB14_o = 1;   // dzwonek
 476 0010 0121     		movs	r1, #1	@ tmp154,
 477              	@ main.c:5460: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 478 0012 324F     		ldr	r7, .L48	@ tmp126,
 479              	@ main.c:5461: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 480 0014 3248     		ldr	r0, .L48+4	@ tmp128,
 481              	@ main.c:5460: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 482 0016 BB69     		ldr	r3, [r7, #24]	@ _28, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 483              	@ main.c:5462: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 484 0018 324C     		ldr	r4, .L48+8	@ tmp131,
 485              	@ main.c:5460: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 486 001a 43F48043 		orr	r3, r3, #16384	@ _29, _28,
 487 001e BB61     		str	r3, [r7, #24]	@ _29, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 488              	@ main.c:5461: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 489 0020 4368     		ldr	r3, [r0, #4]	@ _30, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 490              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 491 0022 314F     		ldr	r7, .L48+12	@ tmp142,
 492              	@ main.c:5461: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 493 0024 23F47F63 		bic	r3, r3, #4080	@ tmp129, _30,
 494 0028 43F49263 		orr	r3, r3, #1168	@ _32, tmp129,
 495 002c 4360     		str	r3, [r0, #4]	@ _32, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 496              	@ main.c:5462: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 497 002e A389     		ldrh	r3, [r4, #12]	@, MEM[(struct USART_TypeDef *)1073821696B].CR1
 498              	@ main.c:267: 		PB12_o = 0;		// rozladowanie
 499 0030 DFF8D8C0 		ldr	ip, .L48+48	@ tmp149,
 500              	@ main.c:5462: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 501 0034 43F40053 		orr	r3, r3, #8192	@ _34, MEM[(struct USART_TypeDef *)1073821696B].CR1,
 502 0038 43F02C03 		orr	r3, r3, #44	@ _34, _34,
 503 003c A381     		strh	r3, [r4, #12]	@ movhi	@ _34, MEM[(struct USART_TypeDef *)1073821696B].CR1
 504              	@ main.c:5463: 	USART1->BRR = (F_CPU+UART1_SPEED/2)/UART1_SPEED;
 505 003e 2681     		strh	r6, [r4, #8]	@ movhi	@ tmp141, MEM[(struct USART_TypeDef *)1073821696B].BRR
 506              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 507 0040 7D60     		str	r5, [r7, #4]	@ tmp143, MEM[(struct NVIC_Type *)3758153984B].ISER
 508              	@ main.c:265: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 509 0042 D0F80434 		ldr	r3, [r0, #1028]	@ _1, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 510              	@ main.c:268: 		PB13_o = 0;   // ladowanie
 511 0046 294F     		ldr	r7, .L48+16	@ tmp151,
 512              	@ main.c:265: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 513 0048 23F07F63 		bic	r3, r3, #267386880	@ tmp145, _1,
ARM GAS  /tmp/ccjvICQi.s 			page 10


 514 004c 23F47023 		bic	r3, r3, #983040	@ tmp145, tmp145,
 515 0050 43F0AA63 		orr	r3, r3, #89128960	@ _3, tmp145,
 516              	@ main.c:269: 		PB14_o = 1;   // dzwonek
 517 0054 264E     		ldr	r6, .L48+20	@ tmp153,
 518              	@ main.c:265: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 519 0056 43F4A023 		orr	r3, r3, #327680	@ _3, _3,
 520 005a C0F80434 		str	r3, [r0, #1028]	@ _3, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 521              	@ main.c:271: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 522 005e 254D     		ldr	r5, .L48+24	@ tmp155,
 523 0060 254B     		ldr	r3, .L48+28	@ tmp156,
 524              	@ main.c:267: 		PB12_o = 0;		// rozladowanie
 525 0062 CCF80020 		str	r2, [ip]	@ tmp150, MEM[(volatile long unsigned int *)1109492144B]
 526              	@ main.c:271: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 527 0066 0320     		movs	r0, #3	@,
 528              	@ main.c:268: 		PB13_o = 0;   // ladowanie
 529 0068 3A60     		str	r2, [r7]	@ tmp150, MEM[(volatile long unsigned int *)1109492148B]
 530              	@ main.c:269: 		PB14_o = 1;   // dzwonek
 531 006a 3160     		str	r1, [r6]	@ tmp154, MEM[(volatile long unsigned int *)1109492152B]
 532              	@ main.c:271: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 533 006c 2B60     		str	r3, [r5]	@ tmp156, PutChar
 534 006e FFF7FEFF 		bl	tr_pen_color	@
 535              	@ main.c:272: 		UaPutS("\f UART1 "); UaPutS (uint2str( (F_CPU/1)/(1*USART1->BRR-1),buf));	
 536 0072 2248     		ldr	r0, .L48+32	@,
 537 0074 FFF7FEFF 		bl	UaPutS	@
 538 0078 2389     		ldrh	r3, [r4, #8]	@, MEM[(struct USART_TypeDef *)1073821696B].BRR
 539 007a 2148     		ldr	r0, .L48+36	@ tmp165,
 540 007c 013B     		subs	r3, r3, #1	@ tmp162, MEM[(struct USART_TypeDef *)1073821696B].BRR,
 541 007e B0FBF3F0 		udiv	r0, r0, r3	@, tmp165, tmp162
 542 0082 01A9     		add	r1, sp, #4	@,,
 543 0084 FFF7FEFF 		bl	uint2str	@
 544              	@ main.c:276: 		s16 v[8]={365,356,0, 30,0,0,0,0};
 545 0088 1E4C     		ldr	r4, .L48+40	@ tmp167,
 546              	@ main.c:272: 		UaPutS("\f UART1 "); UaPutS (uint2str( (F_CPU/1)/(1*USART1->BRR-1),buf));	
 547 008a FFF7FEFF 		bl	UaPutS	@
 548              	@ main.c:273: 		UaPutS (" b/s \r\n");
 549 008e 1E48     		ldr	r0, .L48+44	@,
 550 0090 FFF7FEFF 		bl	UaPutS	@
 551              	@ main.c:276: 		s16 v[8]={365,356,0, 30,0,0,0,0};
 552 0094 94E80F00 		ldm	r4, {r0, r1, r2, r3}	@ tmp167,,,,
 553              	@ main.c:277: 		s16 c[8]={2000 ,6400 ,0, 30,0,0,0,0};
 554 0098 04F11005 		add	r5, r4, #16	@ tmp172, tmp167,
 555 009c 0DF1200C 		add	ip, sp, #32	@ tmp171,,
 556              	@ main.c:279: 		s16 a[8]={342,336,0,2,0,0,0,0};
 557 00a0 04F12006 		add	r6, r4, #32	@ tmp175, tmp167,
 558              	@ main.c:276: 		s16 v[8]={365,356,0, 30,0,0,0,0};
 559 00a4 04AF     		add	r7, sp, #16	@ tmp168,,
 560 00a6 87E80F00 		stm	r7, {r0, r1, r2, r3}	@ tmp168,,,,
 561              	@ main.c:277: 		s16 c[8]={2000 ,6400 ,0, 30,0,0,0,0};
 562 00aa 95E80F00 		ldm	r5, {r0, r1, r2, r3}	@ tmp172,,,,
 563              	@ main.c:280: 		s16 b[8]={114,263,0,2,0,0,0,0};
 564 00ae 3034     		adds	r4, r4, #48	@ tmp178, tmp167,
 565              	@ main.c:279: 		s16 a[8]={342,336,0,2,0,0,0,0};
 566 00b0 0CAD     		add	r5, sp, #48	@ tmp174,,
 567              	@ main.c:277: 		s16 c[8]={2000 ,6400 ,0, 30,0,0,0,0};
 568 00b2 8CE80F00 		stm	ip, {r0, r1, r2, r3}	@ tmp171,,,,
 569              	@ main.c:279: 		s16 a[8]={342,336,0,2,0,0,0,0};
 570 00b6 96E80F00 		ldm	r6, {r0, r1, r2, r3}	@ tmp175,,,,
ARM GAS  /tmp/ccjvICQi.s 			page 11


 571              	@ main.c:280: 		s16 b[8]={114,263,0,2,0,0,0,0};
 572 00ba 10AE     		add	r6, sp, #64	@ tmp177,,
 573              	@ main.c:279: 		s16 a[8]={342,336,0,2,0,0,0,0};
 574 00bc 85E80F00 		stm	r5, {r0, r1, r2, r3}	@ tmp174,,,,
 575              	@ main.c:280: 		s16 b[8]={114,263,0,2,0,0,0,0};
 576 00c0 94E80F00 		ldm	r4, {r0, r1, r2, r3}	@ tmp178,,,,
 577 00c4 86E80F00 		stm	r6, {r0, r1, r2, r3}	@ tmp177,,,,
 578              	@ main.c:282: 		liontrend(v,c);
 579 00c8 6146     		mov	r1, ip	@, tmp171
 580 00ca 3846     		mov	r0, r7	@, tmp168
 581 00cc FFF7FEFF 		bl	liontrend	@
 582              	@ main.c:283: 		liontrend(a,b);
 583 00d0 3146     		mov	r1, r6	@, tmp177
 584 00d2 2846     		mov	r0, r5	@, tmp174
 585 00d4 FFF7FEFF 		bl	liontrend	@
 586              	.L46:
 587 00d8 FEE7     		b	.L46	@
 588              	.L49:
 589 00da 00BF     		.align	2
 590              	.L48:
 591 00dc 00100240 		.word	1073876992
 592 00e0 00080140 		.word	1073809408
 593 00e4 00380140 		.word	1073821696
 594 00e8 00E100E0 		.word	-536813312
 595 00ec B4812142 		.word	1109492148
 596 00f0 B8812142 		.word	1109492152
 597 00f4 00000000 		.word	PutChar
 598 00f8 00000000 		.word	UART1_putc
 599 00fc 00000000 		.word	.LC15
 600 0100 00A24A04 		.word	72000000
 601 0104 00000000 		.word	.LANCHOR1
 602 0108 0C000000 		.word	.LC16
 603 010c B0812142 		.word	1109492144
 604              		.size	oblicz, .-oblicz
 605              		.section	.text.lion_updown,"ax",%progbits
 606              		.align	1
 607              		.p2align 2,,3
 608              		.global	lion_updown
 609              		.syntax unified
 610              		.thumb
 611              		.thumb_func
 612              		.fpu softvfp
 613              		.type	lion_updown, %function
 614              	lion_updown:
 615              		@ args = 0, pretend = 0, frame = 112
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 618 0004 9DB0     		sub	sp, sp, #116	@,,
 619              	@ main.c:299: 		BkpRegInit();
 620 0006 FFF7FEFF 		bl	BkpRegInit	@
 621              	@ main.c:5462: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 622 000a 42F22C02 		movw	r2, #8236	@ tmp386,
 623              	@ main.c:5463: 	USART1->BRR = (F_CPU+UART1_SPEED/2)/UART1_SPEED;
 624 000e 40F27126 		movw	r6, #625	@ tmp392,
 625              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 626 0012 2025     		movs	r5, #32	@ tmp394,
 627 0014 4FF0400C 		mov	ip, #64	@ tmp412,
ARM GAS  /tmp/ccjvICQi.s 			page 12


 628              	@ main.c:5470: 	USART2->BRR = ((F_CPU+UART2_SPEED/2)/UART2_SPEED)/2;
 629 0018 4FF49C77 		mov	r7, #312	@ tmp410,
 630              	@ main.c:5460: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 631 001c C24B     		ldr	r3, .L132	@ tmp377,
 632              	@ main.c:5461: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 633 001e DFF888E3 		ldr	lr, .L132+128	@ tmp379,
 634              	@ main.c:5460: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 635 0022 9969     		ldr	r1, [r3, #24]	@ _506, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 636              	@ main.c:5462: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 637 0024 C14C     		ldr	r4, .L132+4	@ tmp382,
 638              	@ main.c:5460: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 639 0026 41F48041 		orr	r1, r1, #16384	@ _507, _506,
 640 002a 9961     		str	r1, [r3, #24]	@ _507, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 641              	@ main.c:5461: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 642 002c DEF80410 		ldr	r1, [lr, #4]	@ _508, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 643              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 644 0030 BF48     		ldr	r0, .L132+8	@ tmp393,
 645              	@ main.c:5461: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 646 0032 21F47F61 		bic	r1, r1, #4080	@ tmp380, _508,
 647 0036 41F49261 		orr	r1, r1, #1168	@ _510, tmp380,
 648 003a CEF80410 		str	r1, [lr, #4]	@ _510, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 649              	@ main.c:5462: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 650 003e A189     		ldrh	r1, [r4, #12]	@, MEM[(struct USART_TypeDef *)1073821696B].CR1
 651              	@ main.c:5469: 	USART2->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 652 0040 DFF86883 		ldr	r8, .L132+132	@ tmp400,
 653              	@ main.c:5462: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 654 0044 1143     		orrs	r1, r1, r2	@, _512, MEM[(struct USART_TypeDef *)1073821696B].CR1, tmp386
 655 0046 A181     		strh	r1, [r4, #12]	@ movhi	@ _512, MEM[(struct USART_TypeDef *)1073821696B].CR1
 656              	@ main.c:5463: 	USART1->BRR = (F_CPU+UART1_SPEED/2)/UART1_SPEED;
 657 0048 2681     		strh	r6, [r4, #8]	@ movhi	@ tmp392, MEM[(struct USART_TypeDef *)1073821696B].BRR
 658              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 659 004a 4560     		str	r5, [r0, #4]	@ tmp394, MEM[(struct NVIC_Type *)3758153984B].ISER
 660              	@ main.c:5467: 	RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 661 004c D969     		ldr	r1, [r3, #28]	@ _499, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 662              	@ main.c:5475: 	GPIOB->CRH  = (GPIOB->CRH & 0xffff00ff)| 0x00004900; //PB10=TX, PB11=RX zerowanie
 663 004e B94E     		ldr	r6, .L132+12	@ tmp415,
 664              	@ main.c:5467: 	RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 665 0050 41F40031 		orr	r1, r1, #131072	@ _500, _499,
 666 0054 D961     		str	r1, [r3, #28]	@ _500, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 667              	@ main.c:5468: 	GPIOA->CRL = (GPIOA->CRL & 0xffff00ff) | 0x00004900; // PA2=TX, PA3=RX 
 668 0056 DEF80010 		ldr	r1, [lr]	@ _501, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 669              	@ main.c:5476: 	USART3->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 670 005a B74D     		ldr	r5, .L132+16	@ tmp418,
 671              	@ main.c:5468: 	GPIOA->CRL = (GPIOA->CRL & 0xffff00ff) | 0x00004900; // PA2=TX, PA3=RX 
 672 005c 21F47F41 		bic	r1, r1, #65280	@ tmp398, _501,
 673 0060 41F49241 		orr	r1, r1, #18688	@ _503, tmp398,
 674 0064 CEF80010 		str	r1, [lr]	@ _503, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 675              	@ main.c:5469: 	USART2->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 676 0068 B8F80C10 		ldrh	r1, [r8, #12]	@, MEM[(struct USART_TypeDef *)1073759232B].CR1
 677 006c DFF84093 		ldr	r9, .L132+136	@ tmp1081,
 678 0070 1143     		orrs	r1, r1, r2	@, _505, MEM[(struct USART_TypeDef *)1073759232B].CR1, tmp386
 679 0072 A8F80C10 		strh	r1, [r8, #12]	@ movhi	@ _505, MEM[(struct USART_TypeDef *)1073759232B].CR1
 680              	@ main.c:5470: 	USART2->BRR = ((F_CPU+UART2_SPEED/2)/UART2_SPEED)/2;
 681 0076 A8F80870 		strh	r7, [r8, #8]	@ movhi	@ tmp410, MEM[(struct USART_TypeDef *)1073759232B].BRR
 682              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 683 007a C0F804C0 		str	ip, [r0, #4]	@ tmp412, MEM[(struct NVIC_Type *)3758153984B].ISER
 684              	@ main.c:5474: 	RCC->APB1ENR |= RCC_APB1ENR_USART3EN;
ARM GAS  /tmp/ccjvICQi.s 			page 13


 685 007e D969     		ldr	r1, [r3, #28]	@ _492, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 686              	@ main.c:308: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 687 0080 0320     		movs	r0, #3	@,
 688              	@ main.c:5474: 	RCC->APB1ENR |= RCC_APB1ENR_USART3EN;
 689 0082 41F48021 		orr	r1, r1, #262144	@ _493, _492,
 690 0086 D961     		str	r1, [r3, #28]	@ _493, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 691              	@ main.c:5475: 	GPIOB->CRH  = (GPIOB->CRH & 0xffff00ff)| 0x00004900; //PB10=TX, PB11=RX zerowanie
 692 0088 7368     		ldr	r3, [r6, #4]	@ _494, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 693 008a DFF82883 		ldr	r8, .L132+140	@ tmp1073,
 694 008e 23F47F43 		bic	r3, r3, #65280	@ tmp416, _494,
 695 0092 43F49243 		orr	r3, r3, #18688	@ _496, tmp416,
 696 0096 7360     		str	r3, [r6, #4]	@ _496, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 697              	@ main.c:5476: 	USART3->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 698 0098 AB89     		ldrh	r3, [r5, #12]	@, MEM[(struct USART_TypeDef *)1073760256B].CR1
 699 009a DFF81CA3 		ldr	r10, .L132+144	@ tmp1099,
 700 009e 1A43     		orrs	r2, r2, r3	@, _498, tmp386, MEM[(struct USART_TypeDef *)1073760256B].CR1
 701 00a0 AA81     		strh	r2, [r5, #12]	@ movhi	@ _498, MEM[(struct USART_TypeDef *)1073760256B].CR1
 702              	@ main.c:308: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 703 00a2 A64B     		ldr	r3, .L132+20	@ tmp1129,
 704 00a4 A64A     		ldr	r2, .L132+24	@ tmp1130,
 705              	@ main.c:5477: 	USART3->BRR = ((F_CPU+UART3_SPEED/2)/UART3_SPEED)/2;
 706 00a6 2F81     		strh	r7, [r5, #8]	@ movhi	@ tmp410, MEM[(struct USART_TypeDef *)1073760256B].BRR
 707              	@ main.c:308: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 708 00a8 1A60     		str	r2, [r3]	@ tmp1130, PutChar
 709 00aa FFF7FEFF 		bl	tr_pen_color	@
 710              	@ main.c:309: 		UaPutS("\f UART1 "); UaPutS (uint2str( (F_CPU/1)/(1*USART1->BRR-1),buf));	
 711 00ae A548     		ldr	r0, .L132+28	@,
 712 00b0 FFF7FEFF 		bl	UaPutS	@
 713 00b4 2389     		ldrh	r3, [r4, #8]	@, MEM[(struct USART_TypeDef *)1073821696B].BRR
 714 00b6 A448     		ldr	r0, .L132+32	@ tmp439,
 715 00b8 013B     		subs	r3, r3, #1	@ tmp436, MEM[(struct USART_TypeDef *)1073821696B].BRR,
 716 00ba B0FBF3F0 		udiv	r0, r0, r3	@, tmp439, tmp436
 717 00be 08A9     		add	r1, sp, #32	@,,
 718              	@ main.c:334: 		const u08 i2cnf[3]={0,0x1e,0x67},i2trig_bus[3]={0,0x1e,0x67};
 719 00c0 A24F     		ldr	r7, .L132+36	@ tmp441,
 720              	@ main.c:309: 		UaPutS("\f UART1 "); UaPutS (uint2str( (F_CPU/1)/(1*USART1->BRR-1),buf));	
 721 00c2 FFF7FEFF 		bl	uint2str	@
 722 00c6 FFF7FEFF 		bl	UaPutS	@
 723              	@ main.c:351: 		char tstat[7][8]={" LadPoj"," RozPoj"," Czekaj"," Napiec"," LadKon"," RozKon"," Lad
 724 00ca 07F14405 		add	r5, r7, #68	@ tmp457, tmp441,
 725              	@ main.c:310: 		UaPutS (" b/s \r\n"); 
 726 00ce A048     		ldr	r0, .L132+40	@,
 727              	@ main.c:351: 		char tstat[7][8]={" LadPoj"," RozPoj"," Czekaj"," Napiec"," LadKon"," RozKon"," Lad
 728 00d0 0EAC     		add	r4, sp, #56	@ tmp1131,,
 729              	@ main.c:310: 		UaPutS (" b/s \r\n"); 
 730 00d2 FFF7FEFF 		bl	UaPutS	@
 731              	@ main.c:351: 		char tstat[7][8]={" LadPoj"," RozPoj"," Czekaj"," Napiec"," LadKon"," RozKon"," Lad
 732 00d6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}	@ tmp457,,,,
 733 00d8 0FC4     		stmia	r4!, {r0, r1, r2, r3}	@ tmp456,,,,
 734 00da 0FCD     		ldmia	r5!, {r0, r1, r2, r3}	@ tmp457,,,,
 735 00dc 0FC4     		stmia	r4!, {r0, r1, r2, r3}	@ tmp456,,,,
 736 00de 0FCD     		ldmia	r5!, {r0, r1, r2, r3}	@ tmp457,,,,
 737 00e0 0FC4     		stmia	r4!, {r0, r1, r2, r3}	@ tmp456,,,,
 738 00e2 95E80300 		ldm	r5, {r0, r1}	@ tmp457,,
 739              	@ main.c:334: 		const u08 i2cnf[3]={0,0x1e,0x67},i2trig_bus[3]={0,0x1e,0x67};
 740 00e6 3B6C     		ldr	r3, [r7, #64]	@ tmp444,
 741              	@ main.c:383: 		stat = czk;
ARM GAS  /tmp/ccjvICQi.s 			page 14


 742 00e8 0225     		movs	r5, #2	@ stat,
 743              	@ main.c:334: 		const u08 i2cnf[3]={0,0x1e,0x67},i2trig_bus[3]={0,0x1e,0x67};
 744 00ea 1A0C     		lsrs	r2, r3, #16	@ tmp446, tmp444,
 745 00ec ADF81430 		strh	r3, [sp, #20]	@ movhi	@ tmp444, i2cnf
 746 00f0 ADF81830 		strh	r3, [sp, #24]	@ movhi	@ tmp444, i2trig_bus
 747 00f4 8DF81620 		strb	r2, [sp, #22]	@ tmp446, i2cnf
 748 00f8 8DF81A20 		strb	r2, [sp, #26]	@ tmp446, i2trig_bus
 749              	@ main.c:351: 		char tstat[7][8]={" LadPoj"," RozPoj"," Czekaj"," Napiec"," LadKon"," RozKon"," Lad
 750 00fc 84E80300 		stm	r4, {r0, r1}	@ tmp456,,
 751              	@ main.c:355: 		i2c1r_init();
 752 0100 FFF7FEFF 		bl	i2c1r_init	@
 753              	@ main.c:360: 		i2c1_write(INA219_ADDR,(u08 *)i2cnf,3);
 754 0104 05A9     		add	r1, sp, #20	@ tmp1132,,
 755 0106 0322     		movs	r2, #3	@,
 756 0108 8020     		movs	r0, #128	@,
 757 010a FFF7FEFF 		bl	i2c1_write	@
 758              	@ main.c:362: 		i2weg[0]=5;    // Calibration Register 0x1e63 continus
 759 010e 40F60574 		movw	r4, #3845	@ tmp460,
 760              	@ main.c:363: 		i2weg[1]=0x0f; // MSB Data
 761 0112 DB23     		movs	r3, #219	@ tmp461,
 762              	@ main.c:365: 		i2c1_write(INA219_ADDR,i2weg,3);
 763 0114 0322     		movs	r2, #3	@,
 764 0116 04A9     		add	r1, sp, #16	@,,
 765 0118 8020     		movs	r0, #128	@,
 766              	@ main.c:362: 		i2weg[0]=5;    // Calibration Register 0x1e63 continus
 767 011a ADF81040 		strh	r4, [sp, #16]	@ movhi	@ tmp460, MEM[(u08[3] *)&i2weg]
 768              	@ main.c:363: 		i2weg[1]=0x0f; // MSB Data
 769 011e 8DF81230 		strb	r3, [sp, #18]	@ tmp461, MEM[(u08[3] *)&i2weg + 2B]
 770              	@ main.c:365: 		i2c1_write(INA219_ADDR,i2weg,3);
 771 0122 FFF7FEFF 		bl	i2c1_write	@
 772              	@ main.c:367: 		i2c1_read (INA219_ADDR,0,i2reg,2);
 773 0126 03AA     		add	r2, sp, #12	@ tmp1133,,
 774 0128 0223     		movs	r3, #2	@,
 775 012a 0021     		movs	r1, #0	@,
 776 012c 8020     		movs	r0, #128	@,
 777 012e FFF7FEFF 		bl	i2c1_read	@
 778              	@ main.c:381: 		LAD = 0; ROZ = 0;	BEP = 1; 
 779 0132 0022     		movs	r2, #0	@ tmp489,
 780 0134 4FF0010E 		mov	lr, #1	@ tmp493,
 781              	@ main.c:372: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 782 0138 7768     		ldr	r7, [r6, #4]	@ _7, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 783              	@ main.c:378: 		cah = (BKP->DR2<<16) + BKP->DR1;
 784 013a 8649     		ldr	r1, .L132+44	@ tmp470,
 785              	@ main.c:372: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 786 013c 27F07F67 		bic	r7, r7, #267386880	@ tmp466, _7,
 787 0140 27F47027 		bic	r7, r7, #983040	@ tmp466, tmp466,
 788 0144 47F0AA67 		orr	r7, r7, #89128960	@ _9, tmp466,
 789 0148 47F4A027 		orr	r7, r7, #327680	@ _9, _9,
 790              	@ main.c:382: 		beep=0; 
 791 014c 0192     		str	r2, [sp, #4]	@ tmp489, %sfp
 792              	@ main.c:372: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 793 014e 7760     		str	r7, [r6, #4]	@ _9, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 794              	@ main.c:378: 		cah = (BKP->DR2<<16) + BKP->DR1;
 795 0150 0F89     		ldrh	r7, [r1, #8]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR2
 796 0152 8E88     		ldrh	r6, [r1, #4]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR1
 797              	@ main.c:381: 		LAD = 0; ROZ = 0;	BEP = 1; 
 798 0154 8048     		ldr	r0, .L132+48	@ tmp490,
ARM GAS  /tmp/ccjvICQi.s 			page 15


 799              	@ main.c:378: 		cah = (BKP->DR2<<16) + BKP->DR1;
 800 0156 06EB0746 		add	r6, r6, r7, lsl #16	@ tmp478, MEM[(struct BKP_TypeDef *)1073769472B].DR1, MEM[(struct BKP_Type
 801 015a 804F     		ldr	r7, .L132+52	@ tmp1134,
 802              	@ main.c:381: 		LAD = 0; ROZ = 0;	BEP = 1; 
 803 015c DFF82CC2 		ldr	ip, .L132+100	@ tmp488,
 804              	@ main.c:378: 		cah = (BKP->DR2<<16) + BKP->DR1;
 805 0160 3E60     		str	r6, [r7]	@ tmp478, cah
 806              	@ main.c:379: 		cwh = (BKP->DR4<<16) + BKP->DR3;
 807 0162 0F8A     		ldrh	r7, [r1, #16]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR4
 808 0164 8989     		ldrh	r1, [r1, #12]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR3
 809              	@ main.c:381: 		LAD = 0; ROZ = 0;	BEP = 1; 
 810 0166 7E4E     		ldr	r6, .L132+56	@ tmp492,
 811              	@ main.c:379: 		cwh = (BKP->DR4<<16) + BKP->DR3;
 812 0168 01EB0741 		add	r1, r1, r7, lsl #16	@ tmp487, MEM[(struct BKP_TypeDef *)1073769472B].DR3, MEM[(struct BKP_Type
 813 016c 7D4F     		ldr	r7, .L132+60	@ tmp1135,
 814              	@ main.c:384: 		trg1  = SysTick->VAL;	
 815 016e 7E4B     		ldr	r3, .L132+64	@ tmp494,
 816              	@ main.c:379: 		cwh = (BKP->DR4<<16) + BKP->DR3;
 817 0170 3960     		str	r1, [r7]	@ tmp487, cwh
 818              	@ main.c:381: 		LAD = 0; ROZ = 0;	BEP = 1; 
 819 0172 CCF80020 		str	r2, [ip]	@ tmp489, MEM[(volatile long unsigned int *)1109492148B]
 820 0176 0260     		str	r2, [r0]	@ tmp489, MEM[(volatile long unsigned int *)1109492144B]
 821 0178 C6F800E0 		str	lr, [r6]	@ tmp493, MEM[(volatile long unsigned int *)1109492152B]
 822              	@ main.c:384: 		trg1  = SysTick->VAL;	
 823 017c 9A68     		ldr	r2, [r3, #8]	@ _24, MEM[(struct SysTick_Type *)3758153744B].VAL
 824 017e 7B49     		ldr	r1, .L132+68	@ tmp1136,
 825              	@ main.c:389: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 826 0180 1C46     		mov	r4, r3	@ tmp499, tmp494
 827              	@ main.c:384: 		trg1  = SysTick->VAL;	
 828 0182 0A60     		str	r2, [r1]	@ _24, trg1
 829              	@ main.c:385: 		trg0  = SysTick->VAL;
 830 0184 9B68     		ldr	r3, [r3, #8]	@ _25, MEM[(struct SysTick_Type *)3758153744B].VAL
 831 0186 7A4A     		ldr	r2, .L132+72	@ tmp1137,
 832 0188 7A4E     		ldr	r6, .L132+76	@ tmp1090,
 833 018a 1360     		str	r3, [r2]	@ _25,
 834              	.L90:
 835              	@ main.c:389: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 836 018c 784B     		ldr	r3, .L132+72	@ tmp1138,
 837 018e 1B68     		ldr	r3, [r3]	@ trg0.1_26, trg0
 838 0190 A268     		ldr	r2, [r4, #8]	@ _27, MEM[(struct SysTick_Type *)3758153744B].VAL
 839 0192 9B1A     		subs	r3, r3, r2	@ tmp500, trg0.1_26, _27
 840 0194 784A     		ldr	r2, .L132+80	@ tmp1139,
 841 0196 9342     		cmp	r3, r2	@ tmp500, tmp1139
 842 0198 00F20683 		bhi	.L126	@,
 843              	.L51:
 844              	@ main.c:478: 			if( (STCLK_MS*2000 < (trg1 - SysTick->VAL)) ){	
 845 019c 734B     		ldr	r3, .L132+68	@ tmp1188,
 846 019e 774A     		ldr	r2, .L132+84	@ tmp736,
 847 01a0 1F46     		mov	r7, r3	@ tmp1188, tmp1188
 848 01a2 1B68     		ldr	r3, [r3]	@ trg1.44_146, trg1
 849 01a4 A168     		ldr	r1, [r4, #8]	@ _147, MEM[(struct SysTick_Type *)3758153744B].VAL
 850 01a6 5B1A     		subs	r3, r3, r1	@ tmp735, trg1.44_146, _147
 851 01a8 9342     		cmp	r3, r2	@ tmp735, tmp736
 852 01aa 40F2A282 		bls	.L57	@,
 853              	@ main.c:481: 				if(abs(cur) < 1000 && vbus > 4200 && stat == lad){ // start rozladowanie
 854 01ae 744A     		ldr	r2, .L132+88	@ tmp1189,
 855 01b0 40F2CE7C 		movw	ip, #1998	@ tmp745,
ARM GAS  /tmp/ccjvICQi.s 			page 16


 856 01b4 1388     		ldrh	r3, [r2]	@ cur.46_151, cur
 857 01b6 6FF4FA62 		mvn	r2, #2000	@,
 858 01ba B8F90000 		ldrsh	r0, [r8]	@ pretmp_583, vbus
 859 01be 03F2E731 		addw	r1, r3, #999	@ tmp743, cur.46_151,
 860              	@ main.c:479: 				trg1  = SysTick->VAL;	
 861 01c2 D4F808E0 		ldr	lr, [r4, #8]	@ _149, MEM[(struct SysTick_Type *)3758153744B].VAL
 862              	@ main.c:481: 				if(abs(cur) < 1000 && vbus > 4200 && stat == lad){ // start rozladowanie
 863 01c6 89B2     		uxth	r1, r1	@ tmp744, tmp743
 864 01c8 8218     		adds	r2, r0, r2	@ tmp742, pretmp_583,
 865 01ca 6145     		cmp	r1, ip	@ tmp744, tmp745
 866 01cc 92B2     		uxth	r2, r2	@ _618, tmp742
 867              	@ main.c:479: 				trg1  = SysTick->VAL;	
 868 01ce C7F800E0 		str	lr, [r7]	@ _149, trg1
 869              	@ main.c:481: 				if(abs(cur) < 1000 && vbus > 4200 && stat == lad){ // start rozladowanie
 870 01d2 00F2A882 		bhi	.L58	@,
 871              	@ main.c:481: 				if(abs(cur) < 1000 && vbus > 4200 && stat == lad){ // start rozladowanie
 872 01d6 41F26801 		movw	r1, #4200	@ tmp746,
 873 01da 8842     		cmp	r0, r1	@ pretmp_583, tmp746
 874 01dc 40F3A382 		ble	.L58	@,
 875              	@ main.c:481: 				if(abs(cur) < 1000 && vbus > 4200 && stat == lad){ // start rozladowanie
 876 01e0 002D     		cmp	r5, #0	@ stat
 877 01e2 40F0A082 		bne	.L58	@
 878              	@ main.c:483: 					ROZ = 1;
 879 01e6 4FF0010C 		mov	ip, #1	@ tmp750,
 880              	@ main.c:490: 				if(vbus < 2600 && vbus > 2000 && stat==roz) { // koniec rozladowania z pomiarem p
 881 01ea 40F25621 		movw	r1, #598	@ tmp757,
 882              	@ main.c:483: 					ROZ = 1;
 883 01ee 5A4F     		ldr	r7, .L132+48	@ tmp1191,
 884              	@ main.c:482: 					LAD = 0;
 885 01f0 DFF898E1 		ldr	lr, .L132+100	@ tmp747,
 886              	@ main.c:490: 				if(vbus < 2600 && vbus > 2000 && stat==roz) { // koniec rozladowania z pomiarem p
 887 01f4 8A42     		cmp	r2, r1	@ _618, tmp757
 888              	@ main.c:482: 					LAD = 0;
 889 01f6 CEF80050 		str	r5, [lr]	@ stat, MEM[(volatile long unsigned int *)1109492148B]
 890              	@ main.c:483: 					ROZ = 1;
 891 01fa C7F800C0 		str	ip, [r7]	@ tmp750, MEM[(volatile long unsigned int *)1109492144B]
 892              	@ main.c:484: 					cah = 0;
 893 01fe 574F     		ldr	r7, .L132+52	@ tmp1192,
 894 0200 3D60     		str	r5, [r7]	@ stat, cah
 895              	@ main.c:485: 					cwh = 0;
 896 0202 584F     		ldr	r7, .L132+60	@ tmp1193,
 897 0204 3D60     		str	r5, [r7]	@ stat, cwh
 898              	@ main.c:487: 					Rwa = 0;
 899 0206 5F4F     		ldr	r7, .L132+92	@ tmp1194,
 900 0208 3D60     		str	r5, [r7]	@ stat, Rwa
 901              	@ main.c:490: 				if(vbus < 2600 && vbus > 2000 && stat==roz) { // koniec rozladowania z pomiarem p
 902 020a 40F25284 		bls	.L62	@,
 903              	@ main.c:525: 					if( (Cah > CAh*70 || vbus > 4200) && stat == kon ){ // koniec ladowania konserwu
 904 020e 4625     		movs	r5, #70	@ tmp1062,
 905 0210 5D4A     		ldr	r2, .L132+96	@ tmp1274,
 906 0212 1168     		ldr	r1, [r2]	@ CAh, CAh
 907 0214 D9F80020 		ldr	r2, [r9]	@ Cah, Cah
 908 0218 05FB01F1 		mul	r1, r5, r1	@ tmp1060, tmp1062, CAh
 909 021c 9142     		cmp	r1, r2	@ tmp1060, Cah
 910              	@ main.c:532: 				if(abs(cur) < 300 && vbus > 4200 && stat == dal){ // koniec ladownia zwyklego
 911 021e 6546     		mov	r5, ip	@ stat, tmp750
 912              	@ main.c:525: 					if( (Cah > CAh*70 || vbus > 4200) && stat == kon ){ // koniec ladowania konserwu
ARM GAS  /tmp/ccjvICQi.s 			page 17


 913 0220 C0F06782 		bcc	.L57	@,
 914              	.L122:
 915              	@ main.c:532: 				if(abs(cur) < 300 && vbus > 4200 && stat == dal){ // koniec ladownia zwyklego
 916 0224 40F25622 		movw	r2, #598	@ tmp849,
 917 0228 03F22B13 		addw	r3, r3, #299	@ tmp847, cur.46_151,
 918 022c 9BB2     		uxth	r3, r3	@ tmp848, tmp847
 919 022e 9342     		cmp	r3, r2	@ tmp848, tmp849
 920 0230 00F25F82 		bhi	.L57	@,
 921              	@ main.c:532: 				if(abs(cur) < 300 && vbus > 4200 && stat == dal){ // koniec ladownia zwyklego
 922 0234 41F26803 		movw	r3, #4200	@ tmp850,
 923 0238 9842     		cmp	r0, r3	@ pretmp_583, tmp850
 924 023a 40F35A82 		ble	.L57	@,
 925              	@ main.c:532: 				if(abs(cur) < 300 && vbus > 4200 && stat == dal){ // koniec ladownia zwyklego
 926 023e 062D     		cmp	r5, #6	@ stat,
 927 0240 40F05782 		bne	.L57	@,
 928              	.L125:
 929              	@ main.c:533: 					LAD = 0;
 930 0244 0023     		movs	r3, #0	@ tmp852,
 931 0246 514A     		ldr	r2, .L132+100	@ tmp851,
 932 0248 1360     		str	r3, [r2]	@ tmp852,
 933              	@ main.c:534: 					ROZ = 0;
 934 024a 42F8043C 		str	r3, [r2, #-4]	@ tmp852,
 935              	@ main.c:540: 			if( (STCLK_MS*200   < (trg2 - SysTick->VAL))) {
 936 024e 3368     		ldr	r3, [r6]	@ trg2.67_597, trg2
 937 0250 A168     		ldr	r1, [r4, #8]	@ _598, MEM[(struct SysTick_Type *)3758153744B].VAL
 938 0252 4F4A     		ldr	r2, .L132+104	@ tmp1038,
 939 0254 5B1A     		subs	r3, r3, r1	@ tmp1037, trg2.67_597, _598
 940 0256 9342     		cmp	r3, r2	@ tmp1037, tmp1038
 941 0258 40F21F84 		bls	.L127	@,
 942              	@ main.c:541: 				trg2  = SysTick->VAL;	
 943 025c 0225     		movs	r5, #2	@ stat,
 944 025e A368     		ldr	r3, [r4, #8]	@ _592, MEM[(struct SysTick_Type *)3758153744B].VAL
 945 0260 3360     		str	r3, [r6]	@ _592, trg2
 946              	.L91:
 947              	@ main.c:542: 				if(beep){	BEP = 1; }
 948 0262 0122     		movs	r2, #1	@ tmp862,
 949 0264 3E4B     		ldr	r3, .L132+56	@ tmp861,
 950              	@ main.c:545: 			if( (STCLK_MS*60000   < (trg4 - SysTick->VAL))) {
 951 0266 4B49     		ldr	r1, .L132+108	@ tmp866,
 952              	@ main.c:542: 				if(beep){	BEP = 1; }
 953 0268 1A60     		str	r2, [r3]	@ tmp862, MEM[(volatile long unsigned int *)1109492152B]
 954              	@ main.c:545: 			if( (STCLK_MS*60000   < (trg4 - SysTick->VAL))) {
 955 026a 4B4B     		ldr	r3, .L132+112	@ tmp1219,
 956 026c 1B68     		ldr	r3, [r3]	@ trg4.68_613, trg4
 957 026e A068     		ldr	r0, [r4, #8]	@ _614, MEM[(struct SysTick_Type *)3758153744B].VAL
 958 0270 1B1A     		subs	r3, r3, r0	@ tmp865, trg4.68_613, _614
 959 0272 8B42     		cmp	r3, r1	@ tmp865, tmp866
 960 0274 00F28E83 		bhi	.L72	@,
 961              	@ main.c:545: 			if( (STCLK_MS*60000   < (trg4 - SysTick->VAL))) {
 962 0278 0192     		str	r2, [sp, #4]	@ tmp862, %sfp
 963              	.L73:
 964              	@ main.c:552: 			if( (STCLK_MS*100   < (trg3 - SysTick->VAL))) {
 965 027a 4848     		ldr	r0, .L132+116	@ tmp1225,
 966 027c 484A     		ldr	r2, .L132+120	@ tmp880,
 967 027e 0368     		ldr	r3, [r0]	@ trg3.69_187, trg3
 968 0280 A168     		ldr	r1, [r4, #8]	@ _188, MEM[(struct SysTick_Type *)3758153744B].VAL
 969 0282 5B1A     		subs	r3, r3, r1	@ tmp879, trg3.69_187, _188
ARM GAS  /tmp/ccjvICQi.s 			page 18


 970 0284 9342     		cmp	r3, r2	@ tmp879, tmp880
 971 0286 06D9     		bls	.L74	@,
 972              	@ main.c:553: 				trg3  = SysTick->VAL;	
 973 0288 A368     		ldr	r3, [r4, #8]	@ _190, MEM[(struct SysTick_Type *)3758153744B].VAL
 974              	@ main.c:554: 				LED ^= 1;	
 975 028a 464A     		ldr	r2, .L132+124	@ tmp883,
 976              	@ main.c:553: 				trg3  = SysTick->VAL;	
 977 028c 0360     		str	r3, [r0]	@ _190, trg3
 978              	@ main.c:554: 				LED ^= 1;	
 979 028e 1368     		ldr	r3, [r2]	@ _191, MEM[(volatile long unsigned int *)1109524916B]
 980 0290 83F00103 		eor	r3, r3, #1	@ _192, _191,
 981 0294 1360     		str	r3, [r2]	@ _192, MEM[(volatile long unsigned int *)1109524916B]
 982              	.L74:
 983              	@ main.c:557: 			if(p_Fifo1->rct){
 984 0296 DAF80030 		ldr	r3, [r10]	@ p_Fifo1.70_193, p_Fifo1
 985 029a 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.70_193->rct
 986 029c 9BB2     		uxth	r3, r3	@ _194, p_Fifo1.70_193->rct
 987 029e 002B     		cmp	r3, #0	@ _194
 988 02a0 3FF474AF 		beq	.L90	@
 989              	@ main.c:558: 				UART_getChar( (char*)&swh);
 990 02a4 0DF10B00 		add	r0, sp, #11	@ tmp1227,,
 991 02a8 FFF7FEFF 		bl	UART_getChar	@
 992              	@ main.c:561: 				switch (swh)	{
 993 02ac 9DF80B30 		ldrb	r3, [sp, #11]	@ zero_extendqisi2	@ swh, swh
 994 02b0 613B     		subs	r3, r3, #97	@ tmp890, swh,
 995 02b2 192B     		cmp	r3, #25	@ tmp890,
 996 02b4 3FF66AAF 		bhi	.L90	@
 997 02b8 01A2     		adr	r2, .L77	@ tmp1124,
 998 02ba 52F823F0 		ldr	pc, [r2, r3, lsl #2]	@ tmp1124, tmp890
 999 02be 00BF     		.p2align 2
 1000              	.L77:
 1001 02c0 31060000 		.word	.L76+1
 1002 02c4 23060000 		.word	.L78+1
 1003 02c8 8D010000 		.word	.L90+1
 1004 02cc 0B060000 		.word	.L79+1
 1005 02d0 8D010000 		.word	.L90+1
 1006 02d4 8D010000 		.word	.L90+1
 1007 02d8 8D010000 		.word	.L90+1
 1008 02dc 8D010000 		.word	.L90+1
 1009 02e0 8D010000 		.word	.L90+1
 1010 02e4 8D010000 		.word	.L90+1
 1011 02e8 7D050000 		.word	.L80+1
 1012 02ec 5F050000 		.word	.L81+1
 1013 02f0 21050000 		.word	.L82+1
 1014 02f4 8D010000 		.word	.L90+1
 1015 02f8 8D010000 		.word	.L90+1
 1016 02fc 8D010000 		.word	.L90+1
 1017 0300 09050000 		.word	.L83+1
 1018 0304 8D010000 		.word	.L90+1
 1019 0308 8D010000 		.word	.L90+1
 1020 030c 71040000 		.word	.L84+1
 1021 0310 FB030000 		.word	.L85+1
 1022 0314 E7030000 		.word	.L86+1
 1023 0318 8D010000 		.word	.L90+1
 1024 031c 8D010000 		.word	.L90+1
 1025 0320 8D010000 		.word	.L90+1
 1026 0324 BD030000 		.word	.L87+1
ARM GAS  /tmp/ccjvICQi.s 			page 19


 1027              		.p2align 1
 1028              	.L133:
 1029              		.align	2
 1030              	.L132:
 1031 0328 00100240 		.word	1073876992
 1032 032c 00380140 		.word	1073821696
 1033 0330 00E100E0 		.word	-536813312
 1034 0334 000C0140 		.word	1073810432
 1035 0338 00480040 		.word	1073760256
 1036 033c 00000000 		.word	PutChar
 1037 0340 00000000 		.word	UART1_putc
 1038 0344 00000000 		.word	.LC15
 1039 0348 00A24A04 		.word	72000000
 1040 034c 00000000 		.word	.LANCHOR1
 1041 0350 0C000000 		.word	.LC16
 1042 0354 006C0040 		.word	1073769472
 1043 0358 B0812142 		.word	1109492144
 1044 035c 00000000 		.word	.LANCHOR2
 1045 0360 B8812142 		.word	1109492152
 1046 0364 00000000 		.word	.LANCHOR3
 1047 0368 10E000E0 		.word	-536813552
 1048 036c 00000000 		.word	trg1
 1049 0370 00000000 		.word	trg0
 1050 0374 00000000 		.word	trg2
 1051 0378 40548900 		.word	9000000
 1052 037c 80A81201 		.word	18000000
 1053 0380 00000000 		.word	.LANCHOR9
 1054 0384 00000000 		.word	.LANCHOR8
 1055 0388 00000000 		.word	.LANCHOR14
 1056 038c B4812142 		.word	1109492148
 1057 0390 40771B00 		.word	1800000
 1058 0394 00BF2F20 		.word	540000000
 1059 0398 00000000 		.word	trg4
 1060 039c 00000000 		.word	trg3
 1061 03a0 A0BB0D00 		.word	900000
 1062 03a4 B4012242 		.word	1109524916
 1063 03a8 00080140 		.word	1073809408
 1064 03ac 00440040 		.word	1073759232
 1065 03b0 00000000 		.word	.LANCHOR11
 1066 03b4 00000000 		.word	.LANCHOR4
 1067 03b8 00000000 		.word	p_Fifo1
 1068              	.L87:
 1069              	@ main.c:618: 						cah = 0;
 1070 03bc 0023     		movs	r3, #0	@ tmp952,
 1071 03be A24A     		ldr	r2, .L134	@ tmp1243,
 1072              	@ main.c:626: 						tr_locate(3,1);  UaPutS(TRCLS);	tr_locate(2,1);
 1073 03c0 0121     		movs	r1, #1	@,
 1074              	@ main.c:618: 						cah = 0;
 1075 03c2 1360     		str	r3, [r2]	@ tmp952, cah
 1076              	@ main.c:619: 						cwh = 0;
 1077 03c4 A14A     		ldr	r2, .L134+4	@ tmp1244,
 1078              	@ main.c:626: 						tr_locate(3,1);  UaPutS(TRCLS);	tr_locate(2,1);
 1079 03c6 0320     		movs	r0, #3	@,
 1080              	@ main.c:619: 						cwh = 0;
 1081 03c8 1360     		str	r3, [r2]	@ tmp952, cwh
 1082              	@ main.c:620: 						cnt = 0;
 1083 03ca A14A     		ldr	r2, .L134+8	@ tmp1296,
ARM GAS  /tmp/ccjvICQi.s 			page 20


 1084 03cc 1380     		strh	r3, [r2]	@ movhi	@ tmp952, cnt
 1085              	@ main.c:621: 						Rwa = 0;
 1086 03ce A14A     		ldr	r2, .L134+12	@ tmp1245,
 1087 03d0 1360     		str	r3, [r2]	@ tmp952, Rwa
 1088              	@ main.c:626: 						tr_locate(3,1);  UaPutS(TRCLS);	tr_locate(2,1);
 1089 03d2 FFF7FEFF 		bl	tr_locate	@
 1090 03d6 A048     		ldr	r0, .L134+16	@,
 1091 03d8 FFF7FEFF 		bl	UaPutS	@
 1092 03dc 0121     		movs	r1, #1	@,
 1093 03de 0220     		movs	r0, #2	@,
 1094 03e0 FFF7FEFF 		bl	tr_locate	@
 1095              	@ main.c:627: 					break;
 1096 03e4 D2E6     		b	.L90	@
 1097              	.L86:
 1098              	@ main.c:662: 						ROZ = 0;
 1099 03e6 0023     		movs	r3, #0	@ tmp989,
 1100              	@ main.c:661: 						LAD = 1;
 1101 03e8 0121     		movs	r1, #1	@ tmp987,
 1102 03ea 9C4A     		ldr	r2, .L134+20	@ tmp986,
 1103              	@ main.c:663: 						stat = pom;
 1104 03ec 0325     		movs	r5, #3	@ stat,
 1105              	@ main.c:661: 						LAD = 1;
 1106 03ee 1160     		str	r1, [r2]	@ tmp987, MEM[(volatile long unsigned int *)1109492148B]
 1107              	@ main.c:662: 						ROZ = 0;
 1108 03f0 42F8043C 		str	r3, [r2, #-4]	@ tmp989, MEM[(volatile long unsigned int *)1109492144B]
 1109              	@ main.c:664: 						Rwa = 0;
 1110 03f4 974A     		ldr	r2, .L134+12	@ tmp1256,
 1111 03f6 1360     		str	r3, [r2]	@ tmp989,
 1112              	@ main.c:665: 					break;
 1113 03f8 C8E6     		b	.L90	@
 1114              	.L85:
 1115              	@ main.c:676: 					CAh = Cah/100;
 1116 03fa D9F80020 		ldr	r2, [r9]	@ Cah, Cah
 1117 03fe 9849     		ldr	r1, .L134+24	@ tmp1007,
 1118              	@ main.c:677: 					CWh = Cwh/100;
 1119 0400 984B     		ldr	r3, .L134+28	@ tmp1260,
 1120              	@ main.c:676: 					CAh = Cah/100;
 1121 0402 A1FB0202 		umull	r0, r2, r1, r2	@ tmp1126, tmp1006, tmp1007, Cah
 1122              	@ main.c:677: 					CWh = Cwh/100;
 1123 0406 1B68     		ldr	r3, [r3]	@ Cwh, Cwh
 1124              	@ main.c:676: 					CAh = Cah/100;
 1125 0408 974F     		ldr	r7, .L134+32	@ tmp1261,
 1126              	@ main.c:677: 					CWh = Cwh/100;
 1127 040a A1FB0313 		umull	r1, r3, r1, r3	@ tmp1127, tmp1012, tmp1007, Cwh
 1128              	@ main.c:676: 					CAh = Cah/100;
 1129 040e 5209     		lsrs	r2, r2, #5	@ tmp1004, tmp1006,
 1130 0410 3A60     		str	r2, [r7]	@ tmp1004, CAh
 1131              	@ main.c:677: 					CWh = Cwh/100;
 1132 0412 964A     		ldr	r2, .L134+36	@ tmp1262,
 1133              	@ main.c:678: 					tr_locate(3,1);  UaPutS(TRCLS" sqlite3 lion.db \"update lion set mAh="); uint2ua
 1134 0414 0121     		movs	r1, #1	@,
 1135              	@ main.c:677: 					CWh = Cwh/100;
 1136 0416 5B09     		lsrs	r3, r3, #5	@ tmp1010, tmp1012,
 1137              	@ main.c:678: 					tr_locate(3,1);  UaPutS(TRCLS" sqlite3 lion.db \"update lion set mAh="); uint2ua
 1138 0418 0320     		movs	r0, #3	@,
 1139              	@ main.c:677: 					CWh = Cwh/100;
 1140 041a 1360     		str	r3, [r2]	@ tmp1010, CWh
ARM GAS  /tmp/ccjvICQi.s 			page 21


 1141              	@ main.c:678: 					tr_locate(3,1);  UaPutS(TRCLS" sqlite3 lion.db \"update lion set mAh="); uint2ua
 1142 041c FFF7FEFF 		bl	tr_locate	@
 1143 0420 9348     		ldr	r0, .L134+40	@,
 1144 0422 FFF7FEFF 		bl	UaPutS	@
 1145 0426 3868     		ldr	r0, [r7]	@, CAh
 1146 0428 FFF7FEFF 		bl	uint2uart	@
 1147              	@ main.c:679: 					UaPutS(",mWh="); uint2uart(CWh); UaPutS(",Rw="); uint2uart(Rwa); UaPutS(",kon=")
 1148 042c 9148     		ldr	r0, .L134+44	@,
 1149 042e FFF7FEFF 		bl	UaPutS	@
 1150 0432 8E4A     		ldr	r2, .L134+36	@ tmp1264,
 1151 0434 1068     		ldr	r0, [r2]	@, CWh
 1152 0436 FFF7FEFF 		bl	uint2uart	@
 1153 043a 8F48     		ldr	r0, .L134+48	@,
 1154 043c FFF7FEFF 		bl	UaPutS	@
 1155 0440 844B     		ldr	r3, .L134+12	@ tmp1265,
 1156 0442 1868     		ldr	r0, [r3]	@, Rwa
 1157 0444 FFF7FEFF 		bl	uint2uart	@
 1158 0448 8C48     		ldr	r0, .L134+52	@,
 1159 044a FFF7FEFF 		bl	UaPutS	@
 1160 044e 3B68     		ldr	r3, [r7]	@ CAh, CAh
 1161 0450 8B48     		ldr	r0, .L134+56	@ tmp1031,
 1162 0452 C3EBC303 		rsb	r3, r3, r3, lsl #3	@ tmp1028, CAh, CAh,
 1163 0456 A0FB0330 		umull	r3, r0, r0, r3	@ tmp1128, tmp1030, tmp1031, tmp1028
 1164 045a C008     		lsrs	r0, r0, #3	@, tmp1030,
 1165 045c FFF7FEFF 		bl	uint2uart	@
 1166              	@ main.c:680: 					UaPutS(" where id=85\""); tr_locate(2,1);
 1167 0460 8848     		ldr	r0, .L134+60	@,
 1168 0462 FFF7FEFF 		bl	UaPutS	@
 1169 0466 0121     		movs	r1, #1	@,
 1170 0468 0220     		movs	r0, #2	@,
 1171 046a FFF7FEFF 		bl	tr_locate	@
 1172              	@ main.c:388: 		while(1){
 1173 046e 8DE6     		b	.L90	@
 1174              	.L84:
 1175              	@ main.c:563: 						UaPutS(TRCLS);
 1176 0470 7948     		ldr	r0, .L134+16	@,
 1177 0472 FFF7FEFF 		bl	UaPutS	@
 1178              	@ main.c:565: 						tr_locate(4,1);
 1179 0476 0121     		movs	r1, #1	@,
 1180 0478 0420     		movs	r0, #4	@,
 1181 047a FFF7FEFF 		bl	tr_locate	@
 1182              	@ main.c:566:   					UaPutS("0        1         2         3         4         5");
 1183 047e 8248     		ldr	r0, .L134+64	@,
 1184 0480 FFF7FEFF 		bl	UaPutS	@
 1185              	@ main.c:567: 						tr_locate(5,1);
 1186 0484 0121     		movs	r1, #1	@,
 1187 0486 0520     		movs	r0, #5	@,
 1188 0488 FFF7FEFF 		bl	tr_locate	@
 1189              	@ main.c:568:   					UaPutS("123456789 123456789 123456789 123456789 123456789 1234567890");
 1190 048c 7F48     		ldr	r0, .L134+68	@,
 1191 048e FFF7FEFF 		bl	UaPutS	@
 1192              	@ main.c:569: 						tr_locate(10,20);
 1193 0492 1421     		movs	r1, #20	@,
 1194 0494 0A20     		movs	r0, #10	@,
 1195 0496 FFF7FEFF 		bl	tr_locate	@
 1196              	@ main.c:570: 						UaPutS("Podaj wrtosc= ");
 1197 049a 7D48     		ldr	r0, .L134+72	@,
ARM GAS  /tmp/ccjvICQi.s 			page 22


 1198 049c FFF7FEFF 		bl	UaPutS	@
 1199              	@ main.c:571: 						tr_locate(10,37);
 1200 04a0 2521     		movs	r1, #37	@,
 1201 04a2 0A20     		movs	r0, #10	@,
 1202 04a4 FFF7FEFF 		bl	tr_locate	@
 1203              	@ main.c:572: 						UaPutS(TRCLS);
 1204 04a8 6B48     		ldr	r0, .L134+16	@,
 1205 04aa FFF7FEFF 		bl	UaPutS	@
 1206              	@ main.c:573: 						vr4 = UART_getDec((s32*)&vr3) ;
 1207 04ae 7948     		ldr	r0, .L134+76	@,
 1208 04b0 FFF7FEFF 		bl	UART_getDec	@
 1209 04b4 784F     		ldr	r7, .L134+80	@ tmp1228,
 1210              	@ main.c:575: 						tr_locate(11,20);
 1211 04b6 1421     		movs	r1, #20	@,
 1212              	@ main.c:573: 						vr4 = UART_getDec((s32*)&vr3) ;
 1213 04b8 3860     		str	r0, [r7]	@, vr4
 1214              	@ main.c:575: 						tr_locate(11,20);
 1215 04ba 0B20     		movs	r0, #11	@,
 1216 04bc FFF7FEFF 		bl	tr_locate	@
 1217              	@ main.c:576: 					  UaPutS(TRCLS"Wartosc ileZnak= ");  
 1218 04c0 7648     		ldr	r0, .L134+84	@,
 1219 04c2 FFF7FEFF 		bl	UaPutS	@
 1220              	@ main.c:577:  						UaPutS("\033[11;36H");
 1221 04c6 7648     		ldr	r0, .L134+88	@,
 1222 04c8 FFF7FEFF 		bl	UaPutS	@
 1223              	@ main.c:578:  						sint2uart (vr3);
 1224 04cc 714B     		ldr	r3, .L134+76	@ tmp1229,
 1225 04ce 1868     		ldr	r0, [r3]	@, vr3
 1226 04d0 FFF7FEFF 		bl	sint2uart	@
 1227              	@ main.c:579: 					  sint2uart (vr4-1); 
 1228 04d4 3868     		ldr	r0, [r7]	@ vr4, vr4
 1229 04d6 0138     		subs	r0, r0, #1	@, vr4,
 1230 04d8 FFF7FEFF 		bl	sint2uart	@
 1231              	@ main.c:580:  						tr_locate(12,20);
 1232 04dc 1421     		movs	r1, #20	@,
 1233 04de 0C20     		movs	r0, #12	@,
 1234 04e0 FFF7FEFF 		bl	tr_locate	@
 1235              	@ main.c:581: 						UaPutS("Zerowanie t/n=");
 1236 04e4 6F48     		ldr	r0, .L134+92	@,
 1237 04e6 FFF7FEFF 		bl	UaPutS	@
 1238              	@ main.c:582:  						tr_locate(12,37);
 1239 04ea 2521     		movs	r1, #37	@,
 1240 04ec 0C20     		movs	r0, #12	@,
 1241 04ee FFF7FEFF 		bl	tr_locate	@
 1242              	@ main.c:583: 						UaPutS(TRCLS);
 1243 04f2 5948     		ldr	r0, .L134+16	@,
 1244 04f4 FFF7FEFF 		bl	UaPutS	@
 1245              	@ main.c:584: 						UART_getStr(znaki);
 1246 04f8 0BA8     		add	r0, sp, #44	@ tmp1231,,
 1247 04fa FFF7FEFF 		bl	UART_getStr	@
 1248              	@ main.c:587:  						tr_locate(2,2); 						
 1249 04fe 0221     		movs	r1, #2	@,
 1250 0500 0846     		mov	r0, r1	@,
 1251 0502 FFF7FEFF 		bl	tr_locate	@
 1252              	@ main.c:588: 					break;
 1253 0506 41E6     		b	.L90	@
 1254              	.L83:
ARM GAS  /tmp/ccjvICQi.s 			page 23


 1255              	@ main.c:648: 						LAD = 0;
 1256 0508 0023     		movs	r3, #0	@ tmp976,
 1257              	@ main.c:650: 						BEP = 1;
 1258 050a 0121     		movs	r1, #1	@ tmp980,
 1259              	@ main.c:648: 						LAD = 0;
 1260 050c 5348     		ldr	r0, .L134+20	@ tmp975,
 1261              	@ main.c:650: 						BEP = 1;
 1262 050e 664A     		ldr	r2, .L134+96	@ tmp979,
 1263              	@ main.c:648: 						LAD = 0;
 1264 0510 0360     		str	r3, [r0]	@ tmp976, MEM[(volatile long unsigned int *)1109492148B]
 1265              	@ main.c:649: 						ROZ = 0;
 1266 0512 40F8043C 		str	r3, [r0, #-4]	@ tmp976, MEM[(volatile long unsigned int *)1109492144B]
 1267              	@ main.c:650: 						BEP = 1;
 1268 0516 1160     		str	r1, [r2]	@ tmp980, MEM[(volatile long unsigned int *)1109492152B]
 1269              	@ main.c:652: 						Rwa = 0;
 1270 0518 4E4A     		ldr	r2, .L134+12	@ tmp1250,
 1271              	@ main.c:651: 						stat = czk;
 1272 051a 0225     		movs	r5, #2	@ stat,
 1273              	@ main.c:652: 						Rwa = 0;
 1274 051c 1360     		str	r3, [r2]	@ tmp976,
 1275              	@ main.c:653: 					break;
 1276 051e 35E6     		b	.L90	@
 1277              	.L82:
 1278              	@ main.c:590: 						UaPutS(TRCLS);
 1279 0520 4D48     		ldr	r0, .L134+16	@,
 1280 0522 FFF7FEFF 		bl	UaPutS	@
 1281              	@ main.c:592: 						UaPutS(" Podaj wrtosc= ");
 1282 0526 6148     		ldr	r0, .L134+100	@,
 1283 0528 FFF7FEFF 		bl	UaPutS	@
 1284              	@ main.c:593: 						vr4 = UART_getDec((s32*)&vr3) ;
 1285 052c 5948     		ldr	r0, .L134+76	@,
 1286 052e FFF7FEFF 		bl	UART_getDec	@
 1287 0532 594B     		ldr	r3, .L134+80	@ tmp1232,
 1288              	@ main.c:594: 					  tr_locate(3,2);
 1289 0534 0221     		movs	r1, #2	@,
 1290              	@ main.c:593: 						vr4 = UART_getDec((s32*)&vr3) ;
 1291 0536 1F46     		mov	r7, r3	@ tmp1232, tmp1232
 1292 0538 1860     		str	r0, [r3]	@, vr4
 1293              	@ main.c:594: 					  tr_locate(3,2);
 1294 053a 0320     		movs	r0, #3	@,
 1295 053c FFF7FEFF 		bl	tr_locate	@
 1296              	@ main.c:595: 					  UaPutS(TRCLS"ileZnak,Wartosc=");
 1297 0540 5B48     		ldr	r0, .L134+104	@,
 1298 0542 FFF7FEFF 		bl	UaPutS	@
 1299              	@ main.c:596:  						sint2uart (vr4);
 1300 0546 3868     		ldr	r0, [r7]	@, vr4
 1301 0548 FFF7FEFF 		bl	sint2uart	@
 1302              	@ main.c:597:  						sint2uart (vr3);
 1303 054c 514B     		ldr	r3, .L134+76	@ tmp1234,
 1304 054e 1868     		ldr	r0, [r3]	@, vr3
 1305 0550 FFF7FEFF 		bl	sint2uart	@
 1306              	@ main.c:598: 						tr_locate(2,1);
 1307 0554 0121     		movs	r1, #1	@,
 1308 0556 0220     		movs	r0, #2	@,
 1309 0558 FFF7FEFF 		bl	tr_locate	@
 1310              	@ main.c:600: 					break;
 1311 055c 16E6     		b	.L90	@
ARM GAS  /tmp/ccjvICQi.s 			page 24


 1312              	.L81:
 1313              	@ main.c:667: 						ROZ = 0;
 1314 055e 0023     		movs	r3, #0	@ tmp993,
 1315              	@ main.c:668: 						LAD = 1;
 1316 0560 0122     		movs	r2, #1	@ tmp995,
 1317              	@ main.c:667: 						ROZ = 0;
 1318 0562 544D     		ldr	r5, .L134+108	@ tmp1257,
 1319              	@ main.c:668: 						LAD = 1;
 1320 0564 3D48     		ldr	r0, .L134+20	@ tmp994,
 1321              	@ main.c:669: 						BEP = 1;
 1322 0566 5049     		ldr	r1, .L134+96	@ tmp996,
 1323              	@ main.c:667: 						ROZ = 0;
 1324 0568 2B60     		str	r3, [r5]	@ tmp993, MEM[(volatile long unsigned int *)1109492144B]
 1325              	@ main.c:668: 						LAD = 1;
 1326 056a 0260     		str	r2, [r0]	@ tmp995, MEM[(volatile long unsigned int *)1109492148B]
 1327              	@ main.c:669: 						BEP = 1;
 1328 056c 0A60     		str	r2, [r1]	@ tmp995, MEM[(volatile long unsigned int *)1109492152B]
 1329              	@ main.c:672: 						cah = 0;
 1330 056e 364A     		ldr	r2, .L134	@ tmp1258,
 1331              	@ main.c:670: 						beep = 0; 
 1332 0570 0193     		str	r3, [sp, #4]	@ tmp993, %sfp
 1333              	@ main.c:672: 						cah = 0;
 1334 0572 1360     		str	r3, [r2]	@ tmp993, cah
 1335              	@ main.c:673: 						cwh = 0;
 1336 0574 354A     		ldr	r2, .L134+4	@ tmp1259,
 1337              	@ main.c:671: 						stat = dal;
 1338 0576 0625     		movs	r5, #6	@ stat,
 1339              	@ main.c:673: 						cwh = 0;
 1340 0578 1360     		str	r3, [r2]	@ tmp993, cwh
 1341              	@ main.c:674: 					break;
 1342 057a 07E6     		b	.L90	@
 1343              	.L80:
 1344              	@ main.c:602: 						UaPutS(TRCLS);
 1345 057c 3648     		ldr	r0, .L134+16	@,
 1346 057e FFF7FEFF 		bl	UaPutS	@
 1347              	@ main.c:605: 						BEP = 1;
 1348 0582 0122     		movs	r2, #1	@ tmp921,
 1349 0584 484B     		ldr	r3, .L134+96	@ tmp920,
 1350              	@ main.c:606: 						UaPutS(" Laduj do 70% [mAh]=");	sint2uart(CAh);  UaPutS(" ");
 1351 0586 384D     		ldr	r5, .L134+32	@ tmp1235,
 1352              	@ main.c:605: 						BEP = 1;
 1353 0588 1A60     		str	r2, [r3]	@ tmp921, MEM[(volatile long unsigned int *)1109492152B]
 1354              	@ main.c:606: 						UaPutS(" Laduj do 70% [mAh]=");	sint2uart(CAh);  UaPutS(" ");
 1355 058a 4B48     		ldr	r0, .L134+112	@,
 1356 058c FFF7FEFF 		bl	UaPutS	@
 1357 0590 2868     		ldr	r0, [r5]	@, CAh
 1358 0592 FFF7FEFF 		bl	sint2uart	@
 1359 0596 4948     		ldr	r0, .L134+116	@,
 1360 0598 FFF7FEFF 		bl	UaPutS	@
 1361              	@ main.c:607: 						if( UART_getDec(&vr3) ) CAh = vr3;
 1362 059c 3D48     		ldr	r0, .L134+76	@,
 1363 059e FFF7FEFF 		bl	UART_getDec	@
 1364 05a2 10B1     		cbz	r0, .L88	@,
 1365              	@ main.c:607: 						if( UART_getDec(&vr3) ) CAh = vr3;
 1366 05a4 3B4B     		ldr	r3, .L134+76	@ tmp1236,
 1367 05a6 1B68     		ldr	r3, [r3]	@ vr3, vr3
 1368 05a8 2B60     		str	r3, [r5]	@ vr3, CAh
ARM GAS  /tmp/ccjvICQi.s 			page 25


 1369              	.L88:
 1370              	@ main.c:608: 						UaPutS(TRCLS" Zeruj [t]= ");
 1371 05aa 4548     		ldr	r0, .L134+120	@,
 1372 05ac FFF7FEFF 		bl	UaPutS	@
 1373              	@ main.c:609: 						UART_getStr(str);
 1374 05b0 07A8     		add	r0, sp, #28	@ tmp1238,,
 1375 05b2 FFF7FEFF 		bl	UART_getStr	@
 1376              	@ main.c:610: 						sint2uart  (vr2);
 1377 05b6 0020     		movs	r0, #0	@,
 1378 05b8 FFF7FEFF 		bl	sint2uart	@
 1379              	@ main.c:611: 					  tr_locate(3,1); UaPutS(TRCLS" Laduj do [mAh]=");	sint2uart (CAh*7/10);
 1380 05bc 0121     		movs	r1, #1	@,
 1381 05be 0320     		movs	r0, #3	@,
 1382 05c0 FFF7FEFF 		bl	tr_locate	@
 1383 05c4 3F48     		ldr	r0, .L134+124	@,
 1384 05c6 FFF7FEFF 		bl	UaPutS	@
 1385 05ca 274B     		ldr	r3, .L134+32	@ tmp1239,
 1386 05cc 2C48     		ldr	r0, .L134+56	@ tmp941,
 1387 05ce 1B68     		ldr	r3, [r3]	@ CAh, CAh
 1388 05d0 C3EBC303 		rsb	r3, r3, r3, lsl #3	@ tmp938, CAh, CAh,
 1389 05d4 A0FB0330 		umull	r3, r0, r0, r3	@ tmp1125, tmp940, tmp941, tmp938
 1390 05d8 C008     		lsrs	r0, r0, #3	@, tmp940,
 1391 05da FFF7FEFF 		bl	sint2uart	@
 1392              	@ main.c:612: 						tr_locate(2,1);
 1393 05de 0121     		movs	r1, #1	@,
 1394 05e0 0220     		movs	r0, #2	@,
 1395 05e2 FFF7FEFF 		bl	tr_locate	@
 1396              	@ main.c:613: 						if(str[0]=='n') {;}	else { cah = 0; cwh=0; }
 1397 05e6 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2	@ str, str
 1398 05ea 6E2B     		cmp	r3, #110	@ str,
 1399 05ec 04D0     		beq	.L89	@,
 1400              	@ main.c:613: 						if(str[0]=='n') {;}	else { cah = 0; cwh=0; }
 1401 05ee 0023     		movs	r3, #0	@ tmp944,
 1402 05f0 154A     		ldr	r2, .L134	@ tmp1240,
 1403 05f2 1360     		str	r3, [r2]	@ tmp944, cah
 1404 05f4 154A     		ldr	r2, .L134+4	@ tmp1241,
 1405 05f6 1360     		str	r3, [r2]	@ tmp944, cwh
 1406              	.L89:
 1407              	@ main.c:614: 						stat = kon; ROZ = 0; LAD = 1; 
 1408 05f8 0023     		movs	r3, #0	@ tmp948,
 1409 05fa 0121     		movs	r1, #1	@ tmp950,
 1410 05fc 174A     		ldr	r2, .L134+20	@ tmp949,
 1411 05fe 2D48     		ldr	r0, .L134+108	@ tmp1242,
 1412 0600 0425     		movs	r5, #4	@ stat,
 1413 0602 0360     		str	r3, [r0]	@ tmp948, MEM[(volatile long unsigned int *)1109492144B]
 1414              	@ main.c:604: 						beep= 0;
 1415 0604 0193     		str	r3, [sp, #4]	@ tmp948, %sfp
 1416              	@ main.c:614: 						stat = kon; ROZ = 0; LAD = 1; 
 1417 0606 1160     		str	r1, [r2]	@ tmp950, MEM[(volatile long unsigned int *)1109492148B]
 1418              	@ main.c:615: 					break;
 1419 0608 C0E5     		b	.L90	@
 1420              	.L79:
 1421              	@ main.c:640: 						LAD = 0;
 1422 060a 0023     		movs	r3, #0	@ tmp968,
 1423              	@ main.c:641: 						ROZ = 1;
 1424 060c 0125     		movs	r5, #1	@ tmp970,
 1425              	@ main.c:640: 						LAD = 0;
ARM GAS  /tmp/ccjvICQi.s 			page 26


 1426 060e 1349     		ldr	r1, .L134+20	@ tmp967,
 1427              	@ main.c:642: 						BEP = 1;
 1428 0610 254A     		ldr	r2, .L134+96	@ tmp971,
 1429              	@ main.c:640: 						LAD = 0;
 1430 0612 0B60     		str	r3, [r1]	@ tmp968, MEM[(volatile long unsigned int *)1109492148B]
 1431              	@ main.c:641: 						ROZ = 1;
 1432 0614 41F8045C 		str	r5, [r1, #-4]	@ tmp970, MEM[(volatile long unsigned int *)1109492144B]
 1433              	@ main.c:642: 						BEP = 1;
 1434 0618 1560     		str	r5, [r2]	@ tmp970, MEM[(volatile long unsigned int *)1109492152B]
 1435              	@ main.c:645: 						Rwa = 0;
 1436 061a 0E4A     		ldr	r2, .L134+12	@ tmp1248,
 1437              	@ main.c:643: 						beep=0; 
 1438 061c 0193     		str	r3, [sp, #4]	@ tmp968, %sfp
 1439              	@ main.c:645: 						Rwa = 0;
 1440 061e 1360     		str	r3, [r2]	@ tmp968, Rwa
 1441              	@ main.c:646: 					break;
 1442 0620 B4E5     		b	.L90	@
 1443              	.L78:
 1444              	@ main.c:657: 						BEP  = 1;
 1445 0622 0122     		movs	r2, #1	@ tmp985,
 1446              	@ main.c:656: 						beep ^= 1;
 1447 0624 0199     		ldr	r1, [sp, #4]	@ beep, %sfp
 1448              	@ main.c:657: 						BEP  = 1;
 1449 0626 204B     		ldr	r3, .L134+96	@ tmp984,
 1450              	@ main.c:656: 						beep ^= 1;
 1451 0628 5140     		eors	r1, r1, r2	@, beep, beep,
 1452 062a 0191     		str	r1, [sp, #4]	@ beep, %sfp
 1453              	@ main.c:657: 						BEP  = 1;
 1454 062c 1A60     		str	r2, [r3]	@ tmp985, MEM[(volatile long unsigned int *)1109492152B]
 1455              	@ main.c:658: 					break;
 1456 062e ADE5     		b	.L90	@
 1457              	.L76:
 1458              	@ main.c:629: 						ROZ = 0;
 1459 0630 0022     		movs	r2, #0	@ tmp962,
 1460              	@ main.c:630: 						LAD = 1;
 1461 0632 0123     		movs	r3, #1	@ tmp964,
 1462 0634 0948     		ldr	r0, .L134+20	@ tmp963,
 1463              	@ main.c:631: 						BEP = 1;
 1464 0636 1C49     		ldr	r1, .L134+96	@ tmp965,
 1465              	@ main.c:629: 						ROZ = 0;
 1466 0638 1E4F     		ldr	r7, .L134+108	@ tmp1246,
 1467              	@ main.c:633: 						stat = lad;
 1468 063a 1546     		mov	r5, r2	@ stat, tmp962
 1469              	@ main.c:629: 						ROZ = 0;
 1470 063c 3A60     		str	r2, [r7]	@ tmp962, MEM[(volatile long unsigned int *)1109492144B]
 1471              	@ main.c:632: 						beep = 0; 
 1472 063e 0192     		str	r2, [sp, #4]	@ stat, %sfp
 1473              	@ main.c:630: 						LAD = 1;
 1474 0640 0360     		str	r3, [r0]	@ tmp964, MEM[(volatile long unsigned int *)1109492148B]
 1475              	@ main.c:631: 						BEP = 1;
 1476 0642 0B60     		str	r3, [r1]	@ tmp964, MEM[(volatile long unsigned int *)1109492152B]
 1477              	@ main.c:638: 					break;
 1478 0644 A2E5     		b	.L90	@
 1479              	.L135:
 1480 0646 00BF     		.align	2
 1481              	.L134:
 1482 0648 00000000 		.word	.LANCHOR2
ARM GAS  /tmp/ccjvICQi.s 			page 27


 1483 064c 00000000 		.word	.LANCHOR3
 1484 0650 00000000 		.word	.LANCHOR6
 1485 0654 00000000 		.word	.LANCHOR8
 1486 0658 74000000 		.word	.LC30
 1487 065c B4812142 		.word	1109492148
 1488 0660 1F85EB51 		.word	1374389535
 1489 0664 00000000 		.word	.LANCHOR12
 1490 0668 00000000 		.word	.LANCHOR14
 1491 066c 00000000 		.word	.LANCHOR15
 1492 0670 20000000 		.word	.LC25
 1493 0674 4C000000 		.word	.LC26
 1494 0678 54000000 		.word	.LC27
 1495 067c 5C000000 		.word	.LC28
 1496 0680 CDCCCCCC 		.word	-858993459
 1497 0684 64000000 		.word	.LC29
 1498 0688 78000000 		.word	.LC31
 1499 068c AC000000 		.word	.LC32
 1500 0690 EC000000 		.word	.LC33
 1501 0694 00000000 		.word	.LANCHOR16
 1502 0698 00000000 		.word	.LANCHOR17
 1503 069c FC000000 		.word	.LC34
 1504 06a0 14010000 		.word	.LC35
 1505 06a4 20010000 		.word	.LC36
 1506 06a8 B8812142 		.word	1109492152
 1507 06ac 30010000 		.word	.LC37
 1508 06b0 40010000 		.word	.LC38
 1509 06b4 B0812142 		.word	1109492144
 1510 06b8 54010000 		.word	.LC39
 1511 06bc 6C010000 		.word	.LC40
 1512 06c0 70010000 		.word	.LC41
 1513 06c4 80010000 		.word	.LC42
 1514              	.L129:
 1515              	@ main.c:518:           ROZ = 0;
 1516 06c8 0022     		movs	r2, #0	@ tmp823,
 1517              	@ main.c:519: 					LAD = 1;
 1518 06ca 0120     		movs	r0, #1	@ tmp825,
 1519              	@ main.c:525: 					if( (Cah > CAh*70 || vbus > 4200) && stat == kon ){ // koniec ladowania konserwu
 1520 06cc 4623     		movs	r3, #70	@ tmp833,
 1521              	@ main.c:519: 					LAD = 1;
 1522 06ce B449     		ldr	r1, .L136	@ tmp824,
 1523              	@ main.c:518:           ROZ = 0;
 1524 06d0 B44D     		ldr	r5, .L136+4	@ tmp1211,
 1525 06d2 2A60     		str	r2, [r5]	@ tmp823, MEM[(volatile long unsigned int *)1109492144B]
 1526              	@ main.c:519: 					LAD = 1;
 1527 06d4 0860     		str	r0, [r1]	@ tmp825, MEM[(volatile long unsigned int *)1109492148B]
 1528              	@ main.c:525: 					if( (Cah > CAh*70 || vbus > 4200) && stat == kon ){ // koniec ladowania konserwu
 1529 06d6 B449     		ldr	r1, .L136+8	@ tmp1212,
 1530              	@ main.c:520: 					cah = 0;
 1531 06d8 B448     		ldr	r0, .L136+12	@ tmp1213,
 1532              	@ main.c:525: 					if( (Cah > CAh*70 || vbus > 4200) && stat == kon ){ // koniec ladowania konserwu
 1533 06da 0968     		ldr	r1, [r1]	@ CAh, CAh
 1534              	@ main.c:520: 					cah = 0;
 1535 06dc 0260     		str	r2, [r0]	@ tmp823, cah
 1536              	@ main.c:525: 					if( (Cah > CAh*70 || vbus > 4200) && stat == kon ){ // koniec ladowania konserwu
 1537 06de 03FB01F3 		mul	r3, r3, r1	@ tmp831, tmp833, CAh
 1538 06e2 D9F80010 		ldr	r1, [r9]	@ Cah, Cah
 1539              	@ main.c:521: 					cwh = 0;
ARM GAS  /tmp/ccjvICQi.s 			page 28


 1540 06e6 B248     		ldr	r0, .L136+16	@ tmp1214,
 1541              	@ main.c:525: 					if( (Cah > CAh*70 || vbus > 4200) && stat == kon ){ // koniec ladowania konserwu
 1542 06e8 8B42     		cmp	r3, r1	@ tmp831, Cah
 1543              	@ main.c:521: 					cwh = 0;
 1544 06ea 0260     		str	r2, [r0]	@ tmp823, cwh
 1545              	@ main.c:525: 					if( (Cah > CAh*70 || vbus > 4200) && stat == kon ){ // koniec ladowania konserwu
 1546 06ec FFF4AAAD 		bcc	.L125	@,
 1547              	@ main.c:522: 					stat = kon;
 1548 06f0 0425     		movs	r5, #4	@ stat,
 1549              	.L57:
 1550              	@ main.c:540: 			if( (STCLK_MS*200   < (trg2 - SysTick->VAL))) {
 1551 06f2 3368     		ldr	r3, [r6]	@ trg2.67_178, trg2
 1552 06f4 A168     		ldr	r1, [r4, #8]	@ _179, MEM[(struct SysTick_Type *)3758153744B].VAL
 1553 06f6 AF4A     		ldr	r2, .L136+20	@ tmp858,
 1554 06f8 5B1A     		subs	r3, r3, r1	@ tmp857, trg2.67_178, _179
 1555 06fa 9342     		cmp	r3, r2	@ tmp857, tmp858
 1556 06fc 3ED9     		bls	.L70	@,
 1557              	@ main.c:541: 				trg2  = SysTick->VAL;	
 1558 06fe A368     		ldr	r3, [r4, #8]	@ _181, MEM[(struct SysTick_Type *)3758153744B].VAL
 1559 0700 3360     		str	r3, [r6]	@ _181, trg2
 1560              	@ main.c:542: 				if(beep){	BEP = 1; }
 1561 0702 019B     		ldr	r3, [sp, #4]	@ beep, %sfp
 1562 0704 002B     		cmp	r3, #0	@ beep
 1563 0706 7FF4ACAD 		bne	.L91	@
 1564              	@ main.c:545: 			if( (STCLK_MS*60000   < (trg4 - SysTick->VAL))) {
 1565 070a AB4B     		ldr	r3, .L136+24	@ tmp1268,
 1566 070c AB4A     		ldr	r2, .L136+28	@ tmp1046,
 1567 070e 1B68     		ldr	r3, [r3]	@ trg4.68_605, trg4
 1568 0710 A168     		ldr	r1, [r4, #8]	@ _606, MEM[(struct SysTick_Type *)3758153744B].VAL
 1569 0712 5B1A     		subs	r3, r3, r1	@ tmp1045, trg4.68_605, _606
 1570 0714 9342     		cmp	r3, r2	@ tmp1045, tmp1046
 1571 0716 7FF6B0AD 		bls	.L73	@,
 1572              	@ main.c:546: 				trg4  = SysTick->VAL;	
 1573 071a A368     		ldr	r3, [r4, #8]	@ _600, MEM[(struct SysTick_Type *)3758153744B].VAL
 1574 071c A64A     		ldr	r2, .L136+24	@ tmp1267,
 1575 071e 1360     		str	r3, [r2]	@ _600, trg4
 1576              	@ main.c:547: 				trg2  = SysTick->VAL;	
 1577 0720 A368     		ldr	r3, [r4, #8]	@ _602, MEM[(struct SysTick_Type *)3758153744B].VAL
 1578 0722 3360     		str	r3, [r6]	@ _602, trg2
 1579 0724 A9E5     		b	.L73	@
 1580              	.L58:
 1581              	@ main.c:490: 				if(vbus < 2600 && vbus > 2000 && stat==roz) { // koniec rozladowania z pomiarem p
 1582 0726 40F25621 		movw	r1, #598	@ tmp803,
 1583 072a 8A42     		cmp	r2, r1	@ _618, tmp803
 1584 072c 02D8     		bhi	.L61	@,
 1585              	@ main.c:490: 				if(vbus < 2600 && vbus > 2000 && stat==roz) { // koniec rozladowania z pomiarem p
 1586 072e 012D     		cmp	r5, #1	@ stat,
 1587 0730 00F0BF81 		beq	.L62	@,
 1588              	.L61:
 1589              	@ main.c:509: 				if( abs(cur) < 20 && vbus < 4200 && stat == lad ){ // zanikanie ladowania
 1590 0734 03F11301 		add	r1, r3, #19	@ tmp804, cur.46_151,
 1591 0738 89B2     		uxth	r1, r1	@ tmp805, tmp804
 1592 073a 2629     		cmp	r1, #38	@ tmp805,
 1593 073c 06D8     		bhi	.L63	@,
 1594              	@ main.c:509: 				if( abs(cur) < 20 && vbus < 4200 && stat == lad ){ // zanikanie ladowania
 1595 073e 41F26701 		movw	r1, #4199	@ tmp806,
 1596 0742 8842     		cmp	r0, r1	@ pretmp_583, tmp806
ARM GAS  /tmp/ccjvICQi.s 			page 29


 1597 0744 02DC     		bgt	.L63	@,
 1598              	@ main.c:509: 				if( abs(cur) < 20 && vbus < 4200 && stat == lad ){ // zanikanie ladowania
 1599 0746 002D     		cmp	r5, #0	@ stat
 1600 0748 00F00882 		beq	.L128	@
 1601              	.L63:
 1602              	@ main.c:517: 					if(vbus < 2800 && vbus > 2000 && stat==rok) { // koniec rozladowania konserwujac
 1603 074c 40F21E31 		movw	r1, #798	@ tmp821,
 1604 0750 8A42     		cmp	r2, r1	@ _618, tmp821
 1605 0752 01D8     		bhi	.L65	@,
 1606              	@ main.c:517: 					if(vbus < 2800 && vbus > 2000 && stat==rok) { // koniec rozladowania konserwujac
 1607 0754 052D     		cmp	r5, #5	@ stat,
 1608 0756 B7D0     		beq	.L129	@,
 1609              	.L65:
 1610              	@ main.c:525: 					if( (Cah > CAh*70 || vbus > 4200) && stat == kon ){ // koniec ladowania konserwu
 1611 0758 4FF0460C 		mov	ip, #70	@ tmp843,
 1612 075c 924A     		ldr	r2, .L136+8	@ tmp1216,
 1613 075e D9F80010 		ldr	r1, [r9]	@ Cah, Cah
 1614 0762 1268     		ldr	r2, [r2]	@ CAh, CAh
 1615 0764 0CFB02F2 		mul	r2, ip, r2	@ tmp841, tmp843, CAh
 1616 0768 8A42     		cmp	r2, r1	@ tmp841, Cah
 1617 076a 03D3     		bcc	.L67	@,
 1618              	@ main.c:525: 					if( (Cah > CAh*70 || vbus > 4200) && stat == kon ){ // koniec ladowania konserwu
 1619 076c 41F26802 		movw	r2, #4200	@ tmp846,
 1620 0770 9042     		cmp	r0, r2	@ pretmp_583, tmp846
 1621 0772 BEDD     		ble	.L57	@,
 1622              	.L67:
 1623              	@ main.c:525: 					if( (Cah > CAh*70 || vbus > 4200) && stat == kon ){ // koniec ladowania konserwu
 1624 0774 042D     		cmp	r5, #4	@ stat,
 1625 0776 7FF455AD 		bne	.L122	@,
 1626 077a 63E5     		b	.L125	@
 1627              	.L70:
 1628              	@ main.c:545: 			if( (STCLK_MS*60000   < (trg4 - SysTick->VAL))) {
 1629 077c 8E48     		ldr	r0, .L136+24	@ tmp1220,
 1630 077e 8F4A     		ldr	r2, .L136+28	@ tmp870,
 1631 0780 0368     		ldr	r3, [r0]	@ trg4.68_182, trg4
 1632 0782 A168     		ldr	r1, [r4, #8]	@ _183, MEM[(struct SysTick_Type *)3758153744B].VAL
 1633 0784 5B1A     		subs	r3, r3, r1	@ tmp869, trg4.68_182, _183
 1634 0786 9342     		cmp	r3, r2	@ tmp869, tmp870
 1635 0788 7FF677AD 		bls	.L73	@,
 1636              	@ main.c:546: 				trg4  = SysTick->VAL;	
 1637 078c A368     		ldr	r3, [r4, #8]	@ _185, MEM[(struct SysTick_Type *)3758153744B].VAL
 1638 078e 0360     		str	r3, [r0]	@ _185, trg4
 1639              	@ main.c:547: 				trg2  = SysTick->VAL;	
 1640 0790 A368     		ldr	r3, [r4, #8]	@ _186, MEM[(struct SysTick_Type *)3758153744B].VAL
 1641 0792 3360     		str	r3, [r6]	@ _186, trg2
 1642              	@ main.c:548: 				if(beep){	BEP = 0; }
 1643 0794 019B     		ldr	r3, [sp, #4]	@ beep, %sfp
 1644 0796 002B     		cmp	r3, #0	@ beep
 1645 0798 3FF46FAD 		beq	.L73	@
 1646              	.L95:
 1647              	@ main.c:548: 				if(beep){	BEP = 0; }
 1648 079c 0123     		movs	r3, #1	@ beep,
 1649 079e 0022     		movs	r2, #0	@ tmp876,
 1650 07a0 0193     		str	r3, [sp, #4]	@ beep, %sfp
 1651 07a2 874B     		ldr	r3, .L136+32	@ tmp875,
 1652 07a4 1A60     		str	r2, [r3]	@ tmp876, MEM[(volatile long unsigned int *)1109492152B]
 1653 07a6 68E5     		b	.L73	@
ARM GAS  /tmp/ccjvICQi.s 			page 30


 1654              	.L126:
 1655              	@ main.c:390: 				trg0  = SysTick->VAL;
 1656 07a8 D4F808C0 		ldr	ip, [r4, #8]	@ _29, MEM[(struct SysTick_Type *)3758153744B].VAL
 1657 07ac 854F     		ldr	r7, .L136+36	@ tmp1141,
 1658              	@ main.c:393: 				i2c1_read(INA219_ADDR,1,i2reg,2);
 1659 07ae 0223     		movs	r3, #2	@,
 1660 07b0 03AA     		add	r2, sp, #12	@ tmp1140,,
 1661 07b2 0121     		movs	r1, #1	@,
 1662 07b4 8020     		movs	r0, #128	@,
 1663              	@ main.c:390: 				trg0  = SysTick->VAL;
 1664 07b6 C7F800C0 		str	ip, [r7]	@ _29, trg0
 1665              	@ main.c:393: 				i2c1_read(INA219_ADDR,1,i2reg,2);
 1666 07ba FFF7FEFF 		bl	i2c1_read	@
 1667              	@ main.c:396: 				i2c1_read( INA219_ADDR,2,i2reg,2);
 1668 07be 0223     		movs	r3, #2	@,
 1669 07c0 03AA     		add	r2, sp, #12	@ tmp1142,,
 1670 07c2 1946     		mov	r1, r3	@,
 1671 07c4 8020     		movs	r0, #128	@,
 1672 07c6 FFF7FEFF 		bl	i2c1_read	@
 1673              	@ main.c:397: 				vbus = (((i2reg[1] | (i2reg[0]<<8))>>3)*510)/128 ; //512/128
 1674 07ca BDF80C20 		ldrh	r2, [sp, #12]	@, MEM[(u08[2] *)&i2reg]
 1675              	@ main.c:400: 				i2c1_read( INA219_ADDR,4,i2reg,2);
 1676 07ce 8020     		movs	r0, #128	@,
 1677              	@ main.c:397: 				vbus = (((i2reg[1] | (i2reg[0]<<8))>>3)*510)/128 ; //512/128
 1678 07d0 52BA     		rev16	r2, r2	@ tmp507, MEM[(u08[2] *)&i2reg]
 1679 07d2 C2F3CC02 		ubfx	r2, r2, #3, #13	@ tmp510, tmp507,,
 1680 07d6 C2EB0222 		rsb	r2, r2, r2, lsl #8	@ tmp513, tmp510, tmp510,
 1681 07da 4FEAA21C 		asr	ip, r2, #6	@ tmp515, tmp513,
 1682              	@ main.c:400: 				i2c1_read( INA219_ADDR,4,i2reg,2);
 1683 07de 0223     		movs	r3, #2	@,
 1684 07e0 03AA     		add	r2, sp, #12	@ tmp1143,,
 1685 07e2 0421     		movs	r1, #4	@,
 1686              	@ main.c:397: 				vbus = (((i2reg[1] | (i2reg[0]<<8))>>3)*510)/128 ; //512/128
 1687 07e4 A8F800C0 		strh	ip, [r8]	@ movhi	@ tmp515, vbus
 1688              	@ main.c:400: 				i2c1_read( INA219_ADDR,4,i2reg,2);
 1689 07e8 FFF7FEFF 		bl	i2c1_read	@
 1690              	@ main.c:403: 				if( (cnt)%60==0 && stat == roz){  // pomiar rezystancji wewnetrznej co 1min
 1691 07ec 764B     		ldr	r3, .L136+40	@ tmp1302,
 1692              	@ main.c:401: 				dcur = (i2reg[0]<<8) | i2reg[1] ;
 1693 07ee 9DF80C10 		ldrb	r1, [sp, #12]	@ zero_extendqisi2	@ i2reg, i2reg
 1694              	@ main.c:403: 				if( (cnt)%60==0 && stat == roz){  // pomiar rezystancji wewnetrznej co 1min
 1695 07f2 1A88     		ldrh	r2, [r3]	@ cnt, cnt
 1696 07f4 754B     		ldr	r3, .L136+44	@ tmp530,
 1697 07f6 A3FB0203 		umull	r0, r3, r3, r2	@ tmp1113, tmp529, tmp530, cnt
 1698 07fa 5B09     		lsrs	r3, r3, #5	@ tmp527, tmp529,
 1699 07fc C3EB0313 		rsb	r3, r3, r3, lsl #4	@ tmp533, tmp527, tmp527,
 1700              	@ main.c:401: 				dcur = (i2reg[0]<<8) | i2reg[1] ;
 1701 0800 9DF80D00 		ldrb	r0, [sp, #13]	@ zero_extendqisi2	@ i2reg, i2reg
 1702              	@ main.c:403: 				if( (cnt)%60==0 && stat == roz){  // pomiar rezystancji wewnetrznej co 1min
 1703 0804 A2EB8303 		sub	r3, r2, r3, lsl #2	@ tmp535, cnt, tmp533,
 1704              	@ main.c:401: 				dcur = (i2reg[0]<<8) | i2reg[1] ;
 1705 0808 714A     		ldr	r2, .L136+48	@ tmp1144,
 1706 080a 40EA0121 		orr	r1, r0, r1, lsl #8	@ tmp524, i2reg, i2reg,
 1707              	@ main.c:403: 				if( (cnt)%60==0 && stat == roz){  // pomiar rezystancji wewnetrznej co 1min
 1708 080e 9BB2     		uxth	r3, r3	@ tmp537, tmp535
 1709              	@ main.c:401: 				dcur = (i2reg[0]<<8) | i2reg[1] ;
 1710 0810 1180     		strh	r1, [r2]	@ movhi	@ tmp524, dcur
ARM GAS  /tmp/ccjvICQi.s 			page 31


 1711              	@ main.c:403: 				if( (cnt)%60==0 && stat == roz){  // pomiar rezystancji wewnetrznej co 1min
 1712 0812 13B9     		cbnz	r3, .L52	@ tmp537,
 1713              	@ main.c:403: 				if( (cnt)%60==0 && stat == roz){  // pomiar rezystancji wewnetrznej co 1min
 1714 0814 012D     		cmp	r5, #1	@ stat,
 1715 0816 00F0BA81 		beq	.L130	@,
 1716              	.L52:
 1717              	@ main.c:420: 				cur = dcur/10;
 1718 081a 6D4F     		ldr	r7, .L136+48	@ tmp1161,
 1719              	@ main.c:418: 				i2c1_write(INA219_ADDR,(u08 *)i2cnf,3);		//star conversion
 1720 081c 0322     		movs	r2, #3	@,
 1721 081e 05A9     		add	r1, sp, #20	@ tmp1160,,
 1722 0820 8020     		movs	r0, #128	@,
 1723 0822 FFF7FEFF 		bl	i2c1_write	@
 1724              	@ main.c:420: 				cur = dcur/10;
 1725 0826 B7F90030 		ldrsh	r3, [r7]	@ dcur, dcur
 1726 082a 6A4A     		ldr	r2, .L136+52	@ tmp592,
 1727 082c D817     		asrs	r0, r3, #31	@ tmp594, dcur,
 1728 082e 82FB0323 		smull	r2, r3, r2, r3	@ tmp1114, tmp591, tmp592, dcur
 1729              	@ main.c:422: 				pow = abs(vbus*cur)/1000;
 1730 0832 B8F90010 		ldrsh	r1, [r8]	@ vbus, vbus
 1731              	@ main.c:420: 				cur = dcur/10;
 1732 0836 C0EBA303 		rsb	r3, r0, r3, asr #2	@ tmp589, tmp594, tmp591,
 1733 083a 18B2     		sxth	r0, r3	@ _79, tmp589
 1734              	@ main.c:422: 				pow = abs(vbus*cur)/1000;
 1735 083c 00FB01F1 		mul	r1, r0, r1	@ tmp599, _79, vbus
 1736 0840 654B     		ldr	r3, .L136+56	@ tmp1162,
 1737 0842 0029     		cmp	r1, #0	@ tmp600,
 1738 0844 B8BF     		it	lt
 1739 0846 4942     		rsblt	r1, r1, #0	@ tmp600, tmp599,
 1740 0848 A3FB0131 		umull	r3, r1, r3, r1	@ tmp1115, tmp602, tmp1162, tmp600
 1741              	@ main.c:423: 				cah += abs(cur);
 1742 084c 574B     		ldr	r3, .L136+12	@ tmp1163,
 1743 084e 80EAE07C 		eor	ip, r0, r0, asr #31	@ tmp611, _79, _79,
 1744 0852 1B68     		ldr	r3, [r3]	@ cah, cah
 1745              	@ main.c:420: 				cur = dcur/10;
 1746 0854 614A     		ldr	r2, .L136+60	@ tmp1164,
 1747              	@ main.c:422: 				pow = abs(vbus*cur)/1000;
 1748 0856 624F     		ldr	r7, .L136+64	@ tmp1165,
 1749 0858 41F38F11 		sbfx	r1, r1, #6, #16	@ _86, tmp602,,
 1750              	@ main.c:423: 				cah += abs(cur);
 1751 085c ACEBE07C 		sub	ip, ip, r0, asr #31	@ tmp611, tmp611, _79,
 1752              	@ main.c:422: 				pow = abs(vbus*cur)/1000;
 1753 0860 3980     		strh	r1, [r7]	@ movhi	@ _86, pow
 1754              	@ main.c:420: 				cur = dcur/10;
 1755 0862 1080     		strh	r0, [r2]	@ movhi	@ _79, cur
 1756              	@ main.c:423: 				cah += abs(cur);
 1757 0864 6344     		add	r3, r3, ip	@ _90, tmp611
 1758              	@ main.c:424: 				BKP->DR1 = cah & 0x00ff;	BKP->DR2 = cah>>16;
 1759 0866 5F48     		ldr	r0, .L136+68	@ tmp618,
 1760              	@ main.c:425: 				cwh += abs(pow);
 1761 0868 81EAE17E 		eor	lr, r1, r1, asr #31	@ tmp623, _86, _86,
 1762              	@ main.c:423: 				cah += abs(cur);
 1763 086c 4F4F     		ldr	r7, .L136+12	@ tmp1166,
 1764              	@ main.c:425: 				cwh += abs(pow);
 1765 086e AEEBE17E 		sub	lr, lr, r1, asr #31	@ tmp623, tmp623, _86,
 1766              	@ main.c:424: 				BKP->DR1 = cah & 0x00ff;	BKP->DR2 = cah>>16;
 1767 0872 5FFA83FC 		uxtb	ip, r3	@ _92, _90
ARM GAS  /tmp/ccjvICQi.s 			page 32


 1768 0876 190C     		lsrs	r1, r3, #16	@ _94, _90,
 1769              	@ main.c:423: 				cah += abs(cur);
 1770 0878 3B60     		str	r3, [r7]	@ _90, cah
 1771              	@ main.c:424: 				BKP->DR1 = cah & 0x00ff;	BKP->DR2 = cah>>16;
 1772 087a A0F804C0 		strh	ip, [r0, #4]	@ movhi	@ _92, MEM[(struct BKP_TypeDef *)1073769472B].DR1
 1773 087e 0181     		strh	r1, [r0, #8]	@ movhi	@ _94, MEM[(struct BKP_TypeDef *)1073769472B].DR2
 1774              	@ main.c:425: 				cwh += abs(pow);
 1775 0880 4B49     		ldr	r1, .L136+16	@ tmp1167,
 1776              	@ main.c:427: 				Cah = cah/36;
 1777 0882 594A     		ldr	r2, .L136+72	@ tmp1168,
 1778              	@ main.c:425: 				cwh += abs(pow);
 1779 0884 0F46     		mov	r7, r1	@ tmp1167, tmp1167
 1780 0886 0968     		ldr	r1, [r1]	@ cwh, cwh
 1781              	@ main.c:427: 				Cah = cah/36;
 1782 0888 A2FB03C3 		umull	ip, r3, r2, r3	@ tmp1116, tmp636, tmp1168, _90
 1783              	@ main.c:425: 				cwh += abs(pow);
 1784 088c 0EEB0102 		add	r2, lr, r1	@ _99, tmp623, cwh
 1785              	@ main.c:426: 				BKP->DR3 = cwh & 0x00ff;	BKP->DR4 = cwh>>16;
 1786 0890 5FFA82FC 		uxtb	ip, r2	@ _101, _99
 1787 0894 110C     		lsrs	r1, r2, #16	@ _103, _99,
 1788              	@ main.c:425: 				cwh += abs(pow);
 1789 0896 3A60     		str	r2, [r7]	@ _99, cwh
 1790              	@ main.c:426: 				BKP->DR3 = cwh & 0x00ff;	BKP->DR4 = cwh>>16;
 1791 0898 A0F80CC0 		strh	ip, [r0, #12]	@ movhi	@ _101, MEM[(struct BKP_TypeDef *)1073769472B].DR3
 1792 089c 0182     		strh	r1, [r0, #16]	@ movhi	@ _103, MEM[(struct BKP_TypeDef *)1073769472B].DR4
 1793              	@ main.c:433: 					unt2uart ((cnt/60)%60,2);UaPutS(".");unt2uart (cnt%60,2);
 1794 089e 4A49     		ldr	r1, .L136+40	@ tmp1301,
 1795 08a0 DFF828B1 		ldr	fp, .L136+44	@ tmp649,
 1796 08a4 0888     		ldrh	r0, [r1]	@ cnt, cnt
 1797              	@ main.c:428: 				Cwh = cwh/36;
 1798 08a6 5049     		ldr	r1, .L136+72	@ tmp1170,
 1799 08a8 504F     		ldr	r7, .L136+76	@ tmp1171,
 1800 08aa A1FB0212 		umull	r1, r2, r1, r2	@ tmp1117, tmp640, tmp1170, _99
 1801              	@ main.c:433: 					unt2uart ((cnt/60)%60,2);UaPutS(".");unt2uart (cnt%60,2);
 1802 08ae ABFB0010 		umull	r1, r0, fp, r0	@ tmp1118, tmp648, tmp649, cnt
 1803 08b2 4009     		lsrs	r0, r0, #5	@ tmp651, tmp648,
 1804 08b4 ABFB00C1 		umull	ip, r1, fp, r0	@ tmp1119, tmp652, tmp649, tmp651
 1805 08b8 4909     		lsrs	r1, r1, #5	@ tmp650, tmp652,
 1806 08ba C1EB0111 		rsb	r1, r1, r1, lsl #4	@ tmp656, tmp650, tmp650,
 1807              	@ main.c:427: 				Cah = cah/36;
 1808 08be DB08     		lsrs	r3, r3, #3	@ tmp638, tmp636,
 1809              	@ main.c:428: 				Cwh = cwh/36;
 1810 08c0 D208     		lsrs	r2, r2, #3	@ tmp642, tmp640,
 1811 08c2 3A60     		str	r2, [r7]	@ tmp642, Cwh
 1812              	@ main.c:433: 					unt2uart ((cnt/60)%60,2);UaPutS(".");unt2uart (cnt%60,2);
 1813 08c4 A0EB8100 		sub	r0, r0, r1, lsl #2	@ tmp658, tmp651, tmp656,
 1814              	@ main.c:432: 					PutChar = UART1_putc;
 1815 08c8 494A     		ldr	r2, .L136+80	@ tmp1173,
 1816              	@ main.c:427: 				Cah = cah/36;
 1817 08ca C9F80030 		str	r3, [r9]	@ tmp638, Cah
 1818              	@ main.c:432: 					PutChar = UART1_putc;
 1819 08ce 494B     		ldr	r3, .L136+84	@ tmp1172,
 1820              	@ main.c:433: 					unt2uart ((cnt/60)%60,2);UaPutS(".");unt2uart (cnt%60,2);
 1821 08d0 0221     		movs	r1, #2	@,
 1822 08d2 80B2     		uxth	r0, r0	@, tmp658
 1823              	@ main.c:432: 					PutChar = UART1_putc;
 1824 08d4 1A60     		str	r2, [r3]	@ tmp1173, PutChar
ARM GAS  /tmp/ccjvICQi.s 			page 33


 1825              	@ main.c:433: 					unt2uart ((cnt/60)%60,2);UaPutS(".");unt2uart (cnt%60,2);
 1826 08d6 FFF7FEFF 		bl	unt2uart	@
 1827 08da 4748     		ldr	r0, .L136+88	@,
 1828 08dc FFF7FEFF 		bl	UaPutS	@
 1829 08e0 394B     		ldr	r3, .L136+40	@ tmp1300,
 1830 08e2 0221     		movs	r1, #2	@,
 1831 08e4 1888     		ldrh	r0, [r3]	@ cnt, cnt
 1832              	@ main.c:437: 					int2uart (dcur  ,5,1);	UaPutS("mA");
 1833 08e6 3A4F     		ldr	r7, .L136+48	@ tmp1175,
 1834              	@ main.c:433: 					unt2uart ((cnt/60)%60,2);UaPutS(".");unt2uart (cnt%60,2);
 1835 08e8 ABFB003B 		umull	r3, fp, fp, r0	@ tmp1120, tmp676, tmp649, cnt
 1836 08ec 4FEA5B1B 		lsr	fp, fp, #5	@ tmp674, tmp676,
 1837 08f0 CBEB0B1B 		rsb	fp, fp, fp, lsl #4	@ tmp680, tmp674, tmp674,
 1838 08f4 A0EB8B00 		sub	r0, r0, fp, lsl #2	@ tmp682, cnt, tmp680,
 1839 08f8 80B2     		uxth	r0, r0	@, tmp682
 1840 08fa FFF7FEFF 		bl	unt2uart	@
 1841              	@ main.c:434: 					UaPutS((char*)tstat[stat]);
 1842 08fe 0EAB     		add	r3, sp, #56	@ tmp1174,,
 1843 0900 03EBC500 		add	r0, r3, r5, lsl #3	@, tmp1174, stat,
 1844 0904 FFF7FEFF 		bl	UaPutS	@
 1845              	@ main.c:436: 					int2uart (vbus  ,4,3);	UaPutS("V ");
 1846 0908 0322     		movs	r2, #3	@,
 1847 090a 0421     		movs	r1, #4	@,
 1848 090c B8F90000 		ldrsh	r0, [r8]	@, vbus
 1849 0910 FFF7FEFF 		bl	int2uart	@
 1850 0914 3948     		ldr	r0, .L136+92	@,
 1851 0916 FFF7FEFF 		bl	UaPutS	@
 1852              	@ main.c:437: 					int2uart (dcur  ,5,1);	UaPutS("mA");
 1853 091a 0122     		movs	r2, #1	@,
 1854 091c 0521     		movs	r1, #5	@,
 1855 091e B7F90000 		ldrsh	r0, [r7]	@, dcur
 1856 0922 FFF7FEFF 		bl	int2uart	@
 1857 0926 3648     		ldr	r0, .L136+96	@,
 1858 0928 FFF7FEFF 		bl	UaPutS	@
 1859              	@ main.c:439: 					int2uart (pow   ,4,3);	UaPutS("W"); // (pow  ,4,3);
 1860 092c 2C4F     		ldr	r7, .L136+64	@ tmp1176,
 1861              	@ main.c:438: 					int2uart (Cah   ,6,2);	UaPutS("mAh");
 1862 092e 0222     		movs	r2, #2	@,
 1863 0930 0621     		movs	r1, #6	@,
 1864 0932 D9F80000 		ldr	r0, [r9]	@, Cah
 1865 0936 FFF7FEFF 		bl	int2uart	@
 1866 093a 3248     		ldr	r0, .L136+100	@,
 1867 093c FFF7FEFF 		bl	UaPutS	@
 1868              	@ main.c:439: 					int2uart (pow   ,4,3);	UaPutS("W"); // (pow  ,4,3);
 1869 0940 0322     		movs	r2, #3	@,
 1870 0942 0421     		movs	r1, #4	@,
 1871 0944 B7F90000 		ldrsh	r0, [r7]	@, pow
 1872              	@ main.c:440: 					int2uart (Cwh   ,7,2);	UaPutS("mWh");
 1873 0948 284F     		ldr	r7, .L136+76	@ tmp1177,
 1874              	@ main.c:439: 					int2uart (pow   ,4,3);	UaPutS("W"); // (pow  ,4,3);
 1875 094a FFF7FEFF 		bl	int2uart	@
 1876 094e 2E48     		ldr	r0, .L136+104	@,
 1877 0950 FFF7FEFF 		bl	UaPutS	@
 1878              	@ main.c:440: 					int2uart (Cwh   ,7,2);	UaPutS("mWh");
 1879 0954 0222     		movs	r2, #2	@,
 1880 0956 0721     		movs	r1, #7	@,
 1881 0958 3868     		ldr	r0, [r7]	@, Cwh
ARM GAS  /tmp/ccjvICQi.s 			page 34


 1882 095a FFF7FEFF 		bl	int2uart	@
 1883 095e 2B48     		ldr	r0, .L136+108	@,
 1884 0960 FFF7FEFF 		bl	UaPutS	@
 1885              	@ main.c:441: 					int2uart (Rwa   ,4,3);	UaPutS("ohm");
 1886 0964 2A4B     		ldr	r3, .L136+112	@ tmp1178,
 1887 0966 0322     		movs	r2, #3	@,
 1888 0968 1868     		ldr	r0, [r3]	@, Rwa
 1889 096a 0421     		movs	r1, #4	@,
 1890 096c FFF7FEFF 		bl	int2uart	@
 1891 0970 2848     		ldr	r0, .L136+116	@,
 1892 0972 FFF7FEFF 		bl	UaPutS	@
 1893              	@ main.c:443: 					UaPutS("\r ");
 1894 0976 2848     		ldr	r0, .L136+120	@,
 1895 0978 FFF7FEFF 		bl	UaPutS	@
 1896              	@ main.c:459: 					if(stat == lad || stat == roz || stat == kon || stat == rok || stat == dal) coil
 1897 097c 0222     		movs	r2, #2	@ tmp707,
 1898              	@ main.c:461: 					if( (cnt)%coile==0 ){   // pomiar rezystancji wewnetrznej
 1899 097e 124B     		ldr	r3, .L136+40	@ tmp1299,
 1900              	@ main.c:459: 					if(stat == lad || stat == roz || stat == kon || stat == rok || stat == dal) coil
 1901 0980 2649     		ldr	r1, .L136+124	@ tmp1179,
 1902              	@ main.c:461: 					if( (cnt)%coile==0 ){   // pomiar rezystancji wewnetrznej
 1903 0982 1B88     		ldrh	r3, [r3]	@ cnt.31_127, cnt
 1904              	@ main.c:459: 					if(stat == lad || stat == roz || stat == kon || stat == rok || stat == dal) coil
 1905 0984 0A70     		strb	r2, [r1]	@ tmp707, coile
 1906              	@ main.c:461: 					if( (cnt)%coile==0 ){   // pomiar rezystancji wewnetrznej
 1907 0986 13F0010B 		ands	fp, r3, #1	@ tmp712, cnt.31_127,
 1908 098a 49D0     		beq	.L131	@,
 1909              	.L56:
 1910              	@ main.c:474: 					cnt++;
 1911 098c 0E4A     		ldr	r2, .L136+40	@ tmp1297,
 1912 098e 0133     		adds	r3, r3, #1	@ tmp731, cnt.31_127,
 1913 0990 1380     		strh	r3, [r2]	@ movhi	@ tmp731, cnt
 1914 0992 03E4     		b	.L51	@
 1915              	.L72:
 1916              	@ main.c:546: 				trg4  = SysTick->VAL;	
 1917 0994 A368     		ldr	r3, [r4, #8]	@ _608, MEM[(struct SysTick_Type *)3758153744B].VAL
 1918 0996 084A     		ldr	r2, .L136+24	@ tmp1269,
 1919 0998 1360     		str	r3, [r2]	@ _608, trg4
 1920              	@ main.c:547: 				trg2  = SysTick->VAL;	
 1921 099a A368     		ldr	r3, [r4, #8]	@ _610,
 1922 099c 3360     		str	r3, [r6]	@ _610, trg2
 1923 099e FDE6     		b	.L95	@
 1924              	.L137:
 1925              		.align	2
 1926              	.L136:
 1927 09a0 B4812142 		.word	1109492148
 1928 09a4 B0812142 		.word	1109492144
 1929 09a8 00000000 		.word	.LANCHOR14
 1930 09ac 00000000 		.word	.LANCHOR2
 1931 09b0 00000000 		.word	.LANCHOR3
 1932 09b4 40771B00 		.word	1800000
 1933 09b8 00000000 		.word	trg4
 1934 09bc 00BF2F20 		.word	540000000
 1935 09c0 B8812142 		.word	1109492152
 1936 09c4 00000000 		.word	trg0
 1937 09c8 00000000 		.word	.LANCHOR6
 1938 09cc 89888888 		.word	-2004318071
ARM GAS  /tmp/ccjvICQi.s 			page 35


 1939 09d0 00000000 		.word	.LANCHOR5
 1940 09d4 67666666 		.word	1717986919
 1941 09d8 D34D6210 		.word	274877907
 1942 09dc 00000000 		.word	.LANCHOR9
 1943 09e0 00000000 		.word	.LANCHOR10
 1944 09e4 006C0040 		.word	1073769472
 1945 09e8 398EE338 		.word	954437177
 1946 09ec 00000000 		.word	.LANCHOR12
 1947 09f0 00000000 		.word	UART1_putc
 1948 09f4 00000000 		.word	PutChar
 1949 09f8 00000000 		.word	.LC17
 1950 09fc 04000000 		.word	.LC18
 1951 0a00 08000000 		.word	.LC19
 1952 0a04 0C000000 		.word	.LC20
 1953 0a08 10000000 		.word	.LC21
 1954 0a0c 14000000 		.word	.LC22
 1955 0a10 00000000 		.word	.LANCHOR8
 1956 0a14 18000000 		.word	.LC23
 1957 0a18 1C000000 		.word	.LC24
 1958 0a1c 00000000 		.word	.LANCHOR13
 1959              	.L131:
 1960              	@ main.c:462: 						PutChar = UART2_putc; // przypisanie callback 
 1961 0a20 834B     		ldr	r3, .L138	@ tmp1181,
 1962 0a22 844F     		ldr	r7, .L138+4	@ tmp1180,
 1963              	@ main.c:463: 						int2uarz (vbus  ,4,0); UaPutC(',');
 1964 0a24 5A46     		mov	r2, fp	@, tmp712
 1965 0a26 0421     		movs	r1, #4	@,
 1966 0a28 B8F90000 		ldrsh	r0, [r8]	@, vbus
 1967              	@ main.c:462: 						PutChar = UART2_putc; // przypisanie callback 
 1968 0a2c 3B60     		str	r3, [r7]	@ tmp1181, PutChar
 1969              	@ main.c:463: 						int2uarz (vbus  ,4,0); UaPutC(',');
 1970 0a2e FFF7FEFF 		bl	int2uarz	@
 1971 0a32 2C20     		movs	r0, #44	@,
 1972 0a34 FFF7FEFF 		bl	UaPutC	@
 1973              	@ main.c:464: 						int2uarz (cur   ,4,0); UaPutC(',');
 1974 0a38 7F4B     		ldr	r3, .L138+8	@ tmp1182,
 1975 0a3a 5A46     		mov	r2, fp	@, tmp712
 1976 0a3c B3F90000 		ldrsh	r0, [r3]	@, cur
 1977 0a40 0421     		movs	r1, #4	@,
 1978 0a42 FFF7FEFF 		bl	int2uarz	@
 1979 0a46 2C20     		movs	r0, #44	@,
 1980 0a48 FFF7FEFF 		bl	UaPutC	@
 1981              	@ main.c:465: 						int2uarz (Cah   ,6,0); UaPutC(',');
 1982 0a4c 5A46     		mov	r2, fp	@, tmp712
 1983 0a4e 0621     		movs	r1, #6	@,
 1984 0a50 D9F80000 		ldr	r0, [r9]	@, Cah
 1985 0a54 FFF7FEFF 		bl	int2uarz	@
 1986 0a58 2C20     		movs	r0, #44	@,
 1987 0a5a FFF7FEFF 		bl	UaPutC	@
 1988              	@ main.c:466: 						int2uarz (pow   ,4,0); UaPutC(',');
 1989 0a5e 774B     		ldr	r3, .L138+12	@ tmp1183,
 1990 0a60 5A46     		mov	r2, fp	@, tmp712
 1991 0a62 B3F90000 		ldrsh	r0, [r3]	@, pow
 1992 0a66 0421     		movs	r1, #4	@,
 1993 0a68 FFF7FEFF 		bl	int2uarz	@
 1994 0a6c 2C20     		movs	r0, #44	@,
 1995 0a6e FFF7FEFF 		bl	UaPutC	@
ARM GAS  /tmp/ccjvICQi.s 			page 36


 1996              	@ main.c:467: 						int2uarz (Cwh   ,7,0); UaPutC(',');
 1997 0a72 734B     		ldr	r3, .L138+16	@ tmp1184,
 1998 0a74 5A46     		mov	r2, fp	@, tmp712
 1999 0a76 1868     		ldr	r0, [r3]	@, Cwh
 2000 0a78 0721     		movs	r1, #7	@,
 2001 0a7a FFF7FEFF 		bl	int2uarz	@
 2002 0a7e 2C20     		movs	r0, #44	@,
 2003 0a80 FFF7FEFF 		bl	UaPutC	@
 2004              	@ main.c:468: 						int2uarz (Rwa 	,4,0);	
 2005 0a84 6F4B     		ldr	r3, .L138+20	@ tmp1185,
 2006 0a86 5A46     		mov	r2, fp	@, tmp712
 2007 0a88 1868     		ldr	r0, [r3]	@, Rwa
 2008 0a8a 0421     		movs	r1, #4	@,
 2009 0a8c FFF7FEFF 		bl	int2uarz	@
 2010 0a90 6D4B     		ldr	r3, .L138+24	@ tmp1298,
 2011              	@ main.c:470: 						PutChar = UART1_putc;
 2012 0a92 6E4A     		ldr	r2, .L138+28	@ tmp1187,
 2013 0a94 1B88     		ldrh	r3, [r3]	@ cnt.31_127, cnt
 2014 0a96 3A60     		str	r2, [r7]	@ tmp1187, PutChar
 2015 0a98 78E7     		b	.L56	@
 2016              	.L127:
 2017              	@ main.c:545: 			if( (STCLK_MS*60000   < (trg4 - SysTick->VAL))) {
 2018 0a9a 6D4B     		ldr	r3, .L138+32	@ tmp1271,
 2019 0a9c 6D4A     		ldr	r2, .L138+36	@ tmp1058,
 2020 0a9e 1B68     		ldr	r3, [r3]	@ trg4.68_541, trg4
 2021 0aa0 A168     		ldr	r1, [r4, #8]	@ _534, MEM[(struct SysTick_Type *)3758153744B].VAL
 2022 0aa2 5B1A     		subs	r3, r3, r1	@ tmp1057, trg4.68_541, _534
 2023 0aa4 9342     		cmp	r3, r2	@ tmp1057, tmp1058
 2024 0aa6 52D8     		bhi	.L96	@,
 2025 0aa8 0123     		movs	r3, #1	@ beep,
 2026 0aaa 0225     		movs	r5, #2	@ stat,
 2027 0aac 0193     		str	r3, [sp, #4]	@ beep, %sfp
 2028 0aae FFF7E4BB 		b	.L73	@
 2029              	.L62:
 2030              	@ main.c:498: 					cah = 0; cwh=0;
 2031 0ab2 0023     		movs	r3, #0	@ tmp771,
 2032              	@ main.c:502: 					LAD = 1; 
 2033 0ab4 0125     		movs	r5, #1	@ tmp781,
 2034              	@ main.c:496: 					CAh = Cah/100;
 2035 0ab6 D9F80010 		ldr	r1, [r9]	@ Cah, Cah
 2036 0aba 6748     		ldr	r0, .L138+40	@ tmp763,
 2037              	@ main.c:497: 					CWh = Cwh/100;
 2038 0abc 604A     		ldr	r2, .L138+16	@ tmp1195,
 2039              	@ main.c:496: 					CAh = Cah/100;
 2040 0abe A0FB0171 		umull	r7, r1, r0, r1	@ tmp1121, tmp762, tmp763, Cah
 2041              	@ main.c:497: 					CWh = Cwh/100;
 2042 0ac2 1268     		ldr	r2, [r2]	@ Cwh, Cwh
 2043              	@ main.c:496: 					CAh = Cah/100;
 2044 0ac4 654F     		ldr	r7, .L138+44	@ tmp1196,
 2045              	@ main.c:497: 					CWh = Cwh/100;
 2046 0ac6 A0FB0202 		umull	r0, r2, r0, r2	@ tmp1122, tmp768, tmp763, Cwh
 2047              	@ main.c:496: 					CAh = Cah/100;
 2048 0aca 4909     		lsrs	r1, r1, #5	@ tmp760, tmp762,
 2049 0acc 3960     		str	r1, [r7]	@ tmp760, CAh
 2050              	@ main.c:497: 					CWh = Cwh/100;
 2051 0ace 6449     		ldr	r1, .L138+48	@ tmp1197,
 2052 0ad0 5209     		lsrs	r2, r2, #5	@ tmp766, tmp768,
ARM GAS  /tmp/ccjvICQi.s 			page 37


 2053 0ad2 0A60     		str	r2, [r1]	@ tmp766, CWh
 2054              	@ main.c:498: 					cah = 0; cwh=0;
 2055 0ad4 634A     		ldr	r2, .L138+52	@ tmp1198,
 2056              	@ main.c:502: 					LAD = 1; 
 2057 0ad6 6448     		ldr	r0, .L138+56	@ tmp780,
 2058              	@ main.c:498: 					cah = 0; cwh=0;
 2059 0ad8 1360     		str	r3, [r2]	@ tmp771, cah
 2060 0ada 644A     		ldr	r2, .L138+60	@ tmp1199,
 2061              	@ main.c:499: 					Cah = 0; Cwh=0;
 2062 0adc C9F80030 		str	r3, [r9]	@ tmp771, Cah
 2063              	@ main.c:498: 					cah = 0; cwh=0;
 2064 0ae0 1360     		str	r3, [r2]	@ tmp771, cwh
 2065              	@ main.c:499: 					Cah = 0; Cwh=0;
 2066 0ae2 574A     		ldr	r2, .L138+16	@ tmp1200,
 2067              	@ main.c:503: 					tr_locate(3,1);  UaPutS(TRCLS" sqlite3 lion.db \"update lion set mAh="); uint2ua
 2068 0ae4 2946     		mov	r1, r5	@, tmp781
 2069              	@ main.c:499: 					Cah = 0; Cwh=0;
 2070 0ae6 1360     		str	r3, [r2]	@ tmp771, Cwh
 2071              	@ main.c:501: 					ROZ = 0; // odlacz zarowke
 2072 0ae8 614A     		ldr	r2, .L138+64	@ tmp1201,
 2073 0aea 1360     		str	r3, [r2]	@ tmp771, MEM[(volatile long unsigned int *)1109492144B]
 2074              	@ main.c:502: 					LAD = 1; 
 2075 0aec 0560     		str	r5, [r0]	@ tmp781, MEM[(volatile long unsigned int *)1109492148B]
 2076              	@ main.c:503: 					tr_locate(3,1);  UaPutS(TRCLS" sqlite3 lion.db \"update lion set mAh="); uint2ua
 2077 0aee 0320     		movs	r0, #3	@,
 2078 0af0 FFF7FEFF 		bl	tr_locate	@
 2079 0af4 5F48     		ldr	r0, .L138+68	@,
 2080 0af6 FFF7FEFF 		bl	UaPutS	@
 2081 0afa 3868     		ldr	r0, [r7]	@, CAh
 2082 0afc FFF7FEFF 		bl	uint2uart	@
 2083              	@ main.c:504: 					UaPutS(",mWh="); uint2uart(CWh); UaPutS(",Rw="); uint2uart(Rwa); UaPutS(",kon=")
 2084 0b00 5D48     		ldr	r0, .L138+72	@,
 2085 0b02 FFF7FEFF 		bl	UaPutS	@
 2086 0b06 5649     		ldr	r1, .L138+48	@ tmp1203,
 2087 0b08 0868     		ldr	r0, [r1]	@, CWh
 2088 0b0a FFF7FEFF 		bl	uint2uart	@
 2089 0b0e 5B48     		ldr	r0, .L138+76	@,
 2090 0b10 FFF7FEFF 		bl	UaPutS	@
 2091 0b14 4B4B     		ldr	r3, .L138+20	@ tmp1204,
 2092 0b16 1868     		ldr	r0, [r3]	@, Rwa
 2093 0b18 FFF7FEFF 		bl	uint2uart	@
 2094 0b1c 5848     		ldr	r0, .L138+80	@,
 2095 0b1e FFF7FEFF 		bl	UaPutS	@
 2096 0b22 3868     		ldr	r0, [r7]	@ CAh, CAh
 2097 0b24 574B     		ldr	r3, .L138+84	@ tmp799,
 2098 0b26 C0EBC000 		rsb	r0, r0, r0, lsl #3	@ tmp796, CAh, CAh,
 2099 0b2a A3FB0030 		umull	r3, r0, r3, r0	@ tmp1123, tmp798, tmp799, tmp796
 2100 0b2e C008     		lsrs	r0, r0, #3	@, tmp798,
 2101 0b30 FFF7FEFF 		bl	uint2uart	@
 2102              	@ main.c:505: 					UaPutS(" where id=85\""); tr_locate(2,1);
 2103 0b34 5448     		ldr	r0, .L138+88	@,
 2104 0b36 FFF7FEFF 		bl	UaPutS	@
 2105 0b3a 2946     		mov	r1, r5	@, tmp781
 2106 0b3c 0220     		movs	r0, #2	@,
 2107 0b3e FFF7FEFF 		bl	tr_locate	@
 2108              	@ main.c:509: 				if( abs(cur) < 20 && vbus < 4200 && stat == lad ){ // zanikanie ladowania
 2109 0b42 3D4B     		ldr	r3, .L138+8	@ tmp1206,
ARM GAS  /tmp/ccjvICQi.s 			page 38


 2110              	@ main.c:506: 					stat = kon; 
 2111 0b44 0425     		movs	r5, #4	@ stat,
 2112              	@ main.c:509: 				if( abs(cur) < 20 && vbus < 4200 && stat == lad ){ // zanikanie ladowania
 2113 0b46 1B88     		ldrh	r3, [r3]	@ cur.46_151, cur
 2114 0b48 B8F90000 		ldrsh	r0, [r8]	@ pretmp_583, vbus
 2115 0b4c 04E6     		b	.L65	@
 2116              	.L96:
 2117              	@ main.c:546: 				trg4  = SysTick->VAL;	
 2118 0b4e A368     		ldr	r3, [r4, #8]	@ _34, MEM[(struct SysTick_Type *)3758153744B].VAL
 2119 0b50 3F4A     		ldr	r2, .L138+32	@ tmp1270,
 2120              	@ main.c:547: 				trg2  = SysTick->VAL;	
 2121 0b52 0225     		movs	r5, #2	@ stat,
 2122              	@ main.c:546: 				trg4  = SysTick->VAL;	
 2123 0b54 1360     		str	r3, [r2]	@ _34, trg4
 2124              	@ main.c:547: 				trg2  = SysTick->VAL;	
 2125 0b56 A368     		ldr	r3, [r4, #8]	@ _36,
 2126 0b58 3360     		str	r3, [r6]	@ _36, trg2
 2127 0b5a 1FE6     		b	.L95	@
 2128              	.L128:
 2129              	@ main.c:511: 					ROZ = 1;
 2130 0b5c 0122     		movs	r2, #1	@ tmp810,
 2131              	@ main.c:510: 					LAD = 0;
 2132 0b5e 4249     		ldr	r1, .L138+56	@ tmp807,
 2133              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 2134 0b60 DFF838C1 		ldr	ip, .L138+108	@ tmp816,
 2135              	@ main.c:510: 					LAD = 0;
 2136 0b64 0D60     		str	r5, [r1]	@ stat, MEM[(volatile long unsigned int *)1109492148B]
 2137              	@ main.c:511: 					ROZ = 1;
 2138 0b66 41F8042C 		str	r2, [r1, #-4]	@ tmp810, MEM[(volatile long unsigned int *)1109492144B]
 2139              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 2140 0b6a A268     		ldr	r2, [r4, #8]	@ _488, MEM[(struct SysTick_Type *)3758153744B].VAL
 2141 0b6c 4749     		ldr	r1, .L138+92	@ tmp1208,
 2142 0b6e 0A60     		str	r2, [r1]	@ _488, delay_us
 2143              	.L64:
 2144              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 2145 0b70 464A     		ldr	r2, .L138+92	@ tmp1209,
 2146 0b72 1268     		ldr	r2, [r2]	@ delay_us.88_489, delay_us
 2147 0b74 A168     		ldr	r1, [r4, #8]	@ _490, MEM[(struct SysTick_Type *)3758153744B].VAL
 2148 0b76 521A     		subs	r2, r2, r1	@ tmp815, delay_us.88_489, _490
 2149 0b78 6245     		cmp	r2, ip	@ tmp815, tmp816
 2150 0b7a F9D9     		bls	.L64	@,
 2151              	@ main.c:513: 					ROZ = 0;
 2152 0b7c 4FF0000C 		mov	ip, #0	@ tmp818,
 2153              	@ main.c:514: 					LAD = 1;
 2154 0b80 0121     		movs	r1, #1	@ tmp820,
 2155 0b82 394A     		ldr	r2, .L138+56	@ tmp819,
 2156              	@ main.c:513: 					ROZ = 0;
 2157 0b84 3A4F     		ldr	r7, .L138+64	@ tmp1210,
 2158 0b86 C7F800C0 		str	ip, [r7]	@ tmp818, MEM[(volatile long unsigned int *)1109492144B]
 2159              	@ main.c:514: 					LAD = 1;
 2160 0b8a 1160     		str	r1, [r2]	@ tmp820, MEM[(volatile long unsigned int *)1109492148B]
 2161 0b8c E4E5     		b	.L65	@
 2162              	.L130:
 2163              	@ main.c:404: 					cnt2++;
 2164 0b8e 4049     		ldr	r1, .L138+96	@ tmp1145,
 2165 0b90 0A68     		ldr	r2, [r1]	@ cnt2, cnt2
 2166 0b92 0132     		adds	r2, r2, #1	@ tmp540, cnt2,
ARM GAS  /tmp/ccjvICQi.s 			page 39


 2167 0b94 0A60     		str	r2, [r1]	@ tmp540, cnt2
 2168              	@ main.c:405: 					ROZ = 0;
 2169 0b96 364A     		ldr	r2, .L138+64	@ tmp1147,
 2170 0b98 1360     		str	r3, [r2]	@ tmp537, MEM[(volatile long unsigned int *)1109492144B]
 2171              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 2172 0b9a A368     		ldr	r3, [r4, #8]	@ _484, MEM[(struct SysTick_Type *)3758153744B].VAL
 2173 0b9c 3B4A     		ldr	r2, .L138+92	@ tmp1148,
 2174 0b9e 1360     		str	r3, [r2]	@ _484, delay_us
 2175              	.L53:
 2176              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 2177 0ba0 3A4B     		ldr	r3, .L138+92	@ tmp1149,
 2178 0ba2 1B68     		ldr	r3, [r3]	@ delay_us.88_485, delay_us
 2179 0ba4 A268     		ldr	r2, [r4, #8]	@ _486, MEM[(struct SysTick_Type *)3758153744B].VAL
 2180 0ba6 9B1A     		subs	r3, r3, r2	@ tmp548, delay_us.88_485, _486
 2181 0ba8 3A4A     		ldr	r2, .L138+100	@ tmp1150,
 2182 0baa 9342     		cmp	r3, r2	@ tmp548, tmp1150
 2183 0bac F8D9     		bls	.L53	@,
 2184              	@ main.c:407: 					i2c1_write(INA219_ADDR,(u08 *)i2trig_bus,3);		//star conversion
 2185 0bae 0322     		movs	r2, #3	@,
 2186 0bb0 06A9     		add	r1, sp, #24	@ tmp1151,,
 2187 0bb2 8020     		movs	r0, #128	@,
 2188 0bb4 FFF7FEFF 		bl	i2c1_write	@
 2189              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 2190 0bb8 A368     		ldr	r3, [r4, #8]	@ _480, MEM[(struct SysTick_Type *)3758153744B].VAL
 2191 0bba 344A     		ldr	r2, .L138+92	@ tmp1152,
 2192              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 2193 0bbc 3649     		ldr	r1, .L138+104	@ tmp556,
 2194              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 2195 0bbe 1360     		str	r3, [r2]	@ _480, delay_us
 2196              	.L54:
 2197              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 2198 0bc0 324B     		ldr	r3, .L138+92	@ tmp1153,
 2199 0bc2 1B68     		ldr	r3, [r3]	@ delay_us.88_481, delay_us
 2200 0bc4 A268     		ldr	r2, [r4, #8]	@ _482, MEM[(struct SysTick_Type *)3758153744B].VAL
 2201 0bc6 9B1A     		subs	r3, r3, r2	@ tmp555, delay_us.88_481, _482
 2202 0bc8 8B42     		cmp	r3, r1	@ tmp555, tmp556
 2203 0bca F9D9     		bls	.L54	@,
 2204              	@ main.c:409: 					i2c1_read( INA219_ADDR,2,i2reg,2);
 2205 0bcc 0223     		movs	r3, #2	@,
 2206 0bce 03AA     		add	r2, sp, #12	@ tmp1154,,
 2207 0bd0 1946     		mov	r1, r3	@,
 2208 0bd2 8020     		movs	r0, #128	@,
 2209 0bd4 FFF7FEFF 		bl	i2c1_read	@
 2210              	@ main.c:412: 					ROZ = 1;
 2211 0bd8 0122     		movs	r2, #1	@ tmp569,
 2212              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 2213 0bda 42F22731 		movw	r1, #8999	@ tmp575,
 2214              	@ main.c:410: 					ve = (((i2reg[0]<<8) | i2reg[1])>>3)*515/128 ;
 2215 0bde BDF80C30 		ldrh	r3, [sp, #12]	@, MEM[(u08[2] *)&i2reg]
 2216              	@ main.c:412: 					ROZ = 1;
 2217 0be2 2348     		ldr	r0, .L138+64	@ tmp1155,
 2218              	@ main.c:410: 					ve = (((i2reg[0]<<8) | i2reg[1])>>3)*515/128 ;
 2219 0be4 5BBA     		rev16	r3, r3	@ tmp558, MEM[(u08[2] *)&i2reg]
 2220 0be6 C3F3CC03 		ubfx	r3, r3, #3, #13	@ tmp561, tmp558,,
 2221              	@ main.c:412: 					ROZ = 1;
 2222 0bea 0260     		str	r2, [r0]	@ tmp569, MEM[(volatile long unsigned int *)1109492144B]
 2223              	@ main.c:410: 					ve = (((i2reg[0]<<8) | i2reg[1])>>3)*515/128 ;
ARM GAS  /tmp/ccjvICQi.s 			page 40


 2224 0bec 03EB0320 		add	r0, r3, r3, lsl #8	@ tmp564, tmp561, tmp561,
 2225 0bf0 03EB4003 		add	r3, r3, r0, lsl #1	@ tmp566, tmp561, tmp564,
 2226              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 2227 0bf4 A268     		ldr	r2, [r4, #8]	@ _476, MEM[(struct SysTick_Type *)3758153744B].VAL
 2228              	@ main.c:410: 					ve = (((i2reg[0]<<8) | i2reg[1])>>3)*515/128 ;
 2229 0bf6 43F3CF10 		sbfx	r0, r3, #7, #16	@ _67, tmp566,,
 2230              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 2231 0bfa 244B     		ldr	r3, .L138+92	@ tmp1156,
 2232 0bfc 1A60     		str	r2, [r3]	@ _476, delay_us
 2233              	.L55:
 2234              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 2235 0bfe 234B     		ldr	r3, .L138+92	@ tmp1157,
 2236 0c00 1B68     		ldr	r3, [r3]	@ delay_us.88_477, delay_us
 2237 0c02 A268     		ldr	r2, [r4, #8]	@ _478, MEM[(struct SysTick_Type *)3758153744B].VAL
 2238 0c04 9B1A     		subs	r3, r3, r2	@ tmp574, delay_us.88_477, _478
 2239 0c06 8B42     		cmp	r3, r1	@ tmp574, tmp575
 2240 0c08 F9D9     		bls	.L55	@,
 2241              	@ main.c:414: 					Rwa = abs(1000*(ve-vbus)/cur);
 2242 0c0a 4FF47A72 		mov	r2, #1000	@ tmp581,
 2243 0c0e B8F90030 		ldrsh	r3, [r8]	@ vbus, vbus
 2244 0c12 C31A     		subs	r3, r0, r3	@ tmp579, _67, vbus
 2245 0c14 02FB03F3 		mul	r3, r2, r3	@ tmp580, tmp581, tmp579
 2246 0c18 074A     		ldr	r2, .L138+8	@ tmp1158,
 2247 0c1a B2F90020 		ldrsh	r2, [r2]	@ cur, cur
 2248 0c1e 93FBF2F3 		sdiv	r3, r3, r2	@ tmp585, tmp580, cur
 2249 0c22 084A     		ldr	r2, .L138+20	@ tmp1159,
 2250 0c24 002B     		cmp	r3, #0	@ tmp586,
 2251 0c26 B8BF     		it	lt
 2252 0c28 5B42     		rsblt	r3, r3, #0	@ tmp586, tmp585,
 2253 0c2a 1360     		str	r3, [r2]	@ tmp586, Rwa
 2254 0c2c F5E5     		b	.L52	@
 2255              	.L139:
 2256 0c2e 00BF     		.align	2
 2257              	.L138:
 2258 0c30 00000000 		.word	UART2_putc
 2259 0c34 00000000 		.word	PutChar
 2260 0c38 00000000 		.word	.LANCHOR9
 2261 0c3c 00000000 		.word	.LANCHOR10
 2262 0c40 00000000 		.word	.LANCHOR12
 2263 0c44 00000000 		.word	.LANCHOR8
 2264 0c48 00000000 		.word	.LANCHOR6
 2265 0c4c 00000000 		.word	UART1_putc
 2266 0c50 00000000 		.word	trg4
 2267 0c54 00BF2F20 		.word	540000000
 2268 0c58 1F85EB51 		.word	1374389535
 2269 0c5c 00000000 		.word	.LANCHOR14
 2270 0c60 00000000 		.word	.LANCHOR15
 2271 0c64 00000000 		.word	.LANCHOR2
 2272 0c68 B4812142 		.word	1109492148
 2273 0c6c 00000000 		.word	.LANCHOR3
 2274 0c70 B0812142 		.word	1109492144
 2275 0c74 20000000 		.word	.LC25
 2276 0c78 4C000000 		.word	.LC26
 2277 0c7c 54000000 		.word	.LC27
 2278 0c80 5C000000 		.word	.LC28
 2279 0c84 CDCCCCCC 		.word	-858993459
 2280 0c88 64000000 		.word	.LC29
ARM GAS  /tmp/ccjvICQi.s 			page 41


 2281 0c8c 00000000 		.word	delay_us
 2282 0c90 00000000 		.word	.LANCHOR7
 2283 0c94 1FAA4400 		.word	4499999
 2284 0c98 1FBF0200 		.word	179999
 2285 0c9c CFDD0600 		.word	449999
 2286              		.size	lion_updown, .-lion_updown
 2287              		.section	.text.startup.main,"ax",%progbits
 2288              		.align	1
 2289              		.p2align 2,,3
 2290              		.global	main
 2291              		.syntax unified
 2292              		.thumb
 2293              		.thumb_func
 2294              		.fpu softvfp
 2295              		.type	main, %function
 2296              	main:
 2297              		@ Volatile: function does not return.
 2298              		@ args = 0, pretend = 0, frame = 0
 2299              		@ frame_needed = 0, uses_anonymous_args = 0
 2300              	@ main.c:5750: 	RCC_CR_HSEON_bb = 1;						// enable HSE clock
 2301 0000 0121     		movs	r1, #1	@ tmp123,
 2302              	@ main.c:227: int main(void){
 2303 0002 08B5     		push	{r3, lr}	@
 2304              	@ main.c:5750: 	RCC_CR_HSEON_bb = 1;						// enable HSE clock
 2305 0004 1B4B     		ldr	r3, .L150	@ tmp122,
 2306              	@ main.c:5751: 	while (!RCC_CR_HSERDY_bb);			// wait for stable clock
 2307 0006 1C4A     		ldr	r2, .L150+4	@ tmp124,
 2308              	@ main.c:5750: 	RCC_CR_HSEON_bb = 1;						// enable HSE clock
 2309 0008 1960     		str	r1, [r3]	@ tmp123, MEM[(volatile long unsigned int *)1111621696B]
 2310              	.L141:
 2311              	@ main.c:5751: 	while (!RCC_CR_HSERDY_bb);			// wait for stable clock
 2312 000a 1368     		ldr	r3, [r2]	@ _14, MEM[(volatile long unsigned int *)1111621700B]
 2313 000c 002B     		cmp	r3, #0	@ _14
 2314 000e FCD0     		beq	.L141	@
 2315              	@ main.c:5755: 	RCC_CR_PLLON_bb = 1;						// enable PLL
 2316 0010 0124     		movs	r4, #1	@ tmp129,
 2317              	@ main.c:5753: 	RCC->CFGR |= ((mul - 2)<<RCC_CFGR_PLLMUL_bit)|RCC_CFGR_PLLSRC|RCC_CFGR_PPRE1_DIV2;	
 2318 0012 1A49     		ldr	r1, .L150+8	@ tmp125,
 2319              	@ main.c:5755: 	RCC_CR_PLLON_bb = 1;						// enable PLL
 2320 0014 1A48     		ldr	r0, .L150+12	@ tmp128,
 2321              	@ main.c:5753: 	RCC->CFGR |= ((mul - 2)<<RCC_CFGR_PLLMUL_bit)|RCC_CFGR_PLLSRC|RCC_CFGR_PPRE1_DIV2;	
 2322 0016 4B68     		ldr	r3, [r1, #4]	@ _15, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 2323              	@ main.c:5756: 	while (!RCC_CR_PLLRDY_bb);			// wait for PLL lock
 2324 0018 1A4A     		ldr	r2, .L150+16	@ tmp130,
 2325              	@ main.c:5753: 	RCC->CFGR |= ((mul - 2)<<RCC_CFGR_PLLMUL_bit)|RCC_CFGR_PLLSRC|RCC_CFGR_PPRE1_DIV2;	
 2326 001a 43F4E813 		orr	r3, r3, #1900544	@ _20, _15,
 2327 001e 43F48063 		orr	r3, r3, #1024	@ _20, _20,
 2328 0022 4B60     		str	r3, [r1, #4]	@ _20, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 2329              	@ main.c:5755: 	RCC_CR_PLLON_bb = 1;						// enable PLL
 2330 0024 0460     		str	r4, [r0]	@ tmp129, MEM[(volatile long unsigned int *)1111621728B]
 2331              	.L142:
 2332              	@ main.c:5756: 	while (!RCC_CR_PLLRDY_bb);			// wait for PLL lock
 2333 0026 1368     		ldr	r3, [r2]	@ _21, MEM[(volatile long unsigned int *)1111621732B]
 2334 0028 002B     		cmp	r3, #0	@ _21
 2335 002a FCD0     		beq	.L142	@
 2336              	@ main.c:5758: 	RCC->CFGR |= RCC_CFGR_SW_PLL;		// change SYSCLK to PLL
 2337 002c 134B     		ldr	r3, .L150+8	@ tmp131,
ARM GAS  /tmp/ccjvICQi.s 			page 42


 2338              	@ main.c:5759: 	while (((RCC->CFGR) & RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);	// wait for switch
 2339 002e 1A46     		mov	r2, r3	@ tmp133, tmp131
 2340              	@ main.c:5758: 	RCC->CFGR |= RCC_CFGR_SW_PLL;		// change SYSCLK to PLL
 2341 0030 5968     		ldr	r1, [r3, #4]	@ _22, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 2342 0032 41F00201 		orr	r1, r1, #2	@ _23, _22,
 2343 0036 5960     		str	r1, [r3, #4]	@ _23, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 2344              	.L143:
 2345              	@ main.c:5759: 	while (((RCC->CFGR) & RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);	// wait for switch
 2346 0038 5368     		ldr	r3, [r2, #4]	@ _24, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 2347 003a 03F00C03 		and	r3, r3, #12	@ tmp134, _24,
 2348 003e 082B     		cmp	r3, #8	@ tmp134,
 2349 0040 FAD1     		bne	.L143	@,
 2350              	@ main.c:5762: 	RCC->APB2ENR = RCC_APB2ENR_IOPAEN | RCC_APB2ENR_IOPBEN | RCC_APB2ENR_IOPCEN | RCC_A
 2351 0042 1D20     		movs	r0, #29	@ tmp138,
 2352              	@ main.c:186: 	SCB->VTOR = NVIC_VectTab_RAM;
 2353 0044 4FF00056 		mov	r6, #536870912	@ tmp136,
 2354              	@ main.c:194: 	AFIO->MAPR = AFIO_MAPR_SWJ_CFG_1; // enable pin PA15=JTDI,PB3=JTDO,PB4=JNTRST,
 2355 0048 4FF00075 		mov	r5, #33554432	@ tmp140,
 2356              	@ main.c:5556: 	SysTick->CTRL = SysTick_CTRL_TICKINT|SysTick_CTRL_ENABLE; // enable SysTick
 2357 004c 0321     		movs	r1, #3	@ tmp144,
 2358              	@ main.c:186: 	SCB->VTOR = NVIC_VectTab_RAM;
 2359 004e 0E4B     		ldr	r3, .L150+20	@ tmp135,
 2360              	@ main.c:194: 	AFIO->MAPR = AFIO_MAPR_SWJ_CFG_1; // enable pin PA15=JTDI,PB3=JTDO,PB4=JNTRST,
 2361 0050 0E4C     		ldr	r4, .L150+24	@ tmp139,
 2362              	@ main.c:186: 	SCB->VTOR = NVIC_VectTab_RAM;
 2363 0052 9E60     		str	r6, [r3, #8]	@ tmp136, MEM[(struct SCB_Type *)3758157056B].VTOR
 2364              	@ main.c:5762: 	RCC->APB2ENR = RCC_APB2ENR_IOPAEN | RCC_APB2ENR_IOPBEN | RCC_APB2ENR_IOPCEN | RCC_A
 2365 0054 9061     		str	r0, [r2, #24]	@ tmp138, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 2366              	@ main.c:5555: 	SysTick->LOAD = STCLK_LD - 1;    // 72/8/SysTick_LOAD interrupt every x s
 2367 0056 0E48     		ldr	r0, .L150+28	@ tmp142,
 2368 0058 A3F54F63 		sub	r3, r3, #3312	@ tmp141, tmp141,
 2369              	@ main.c:231: 		 GPIOC->CRH = (GPIOC->CRH & 0xff0fffff) | 0x00100000;	// LED Blue  PC13		
 2370 005c 0D4A     		ldr	r2, .L150+32	@ tmp145,
 2371              	@ main.c:194: 	AFIO->MAPR = AFIO_MAPR_SWJ_CFG_1; // enable pin PA15=JTDI,PB3=JTDO,PB4=JNTRST,
 2372 005e 6560     		str	r5, [r4, #4]	@ tmp140, MEM[(struct AFIO_TypeDef *)1073807360B].MAPR
 2373              	@ main.c:5555: 	SysTick->LOAD = STCLK_LD - 1;    // 72/8/SysTick_LOAD interrupt every x s
 2374 0060 5860     		str	r0, [r3, #4]	@ tmp142, MEM[(struct SysTick_Type *)3758153744B].LOAD
 2375              	@ main.c:5556: 	SysTick->CTRL = SysTick_CTRL_TICKINT|SysTick_CTRL_ENABLE; // enable SysTick
 2376 0062 1960     		str	r1, [r3]	@ tmp144, MEM[(struct SysTick_Type *)3758153744B].CTRL
 2377              	@ main.c:231: 		 GPIOC->CRH = (GPIOC->CRH & 0xff0fffff) | 0x00100000;	// LED Blue  PC13		
 2378 0064 5368     		ldr	r3, [r2, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 2379 0066 23F47003 		bic	r3, r3, #15728640	@ tmp146, _1,
 2380 006a 43F48013 		orr	r3, r3, #1048576	@ _3, tmp146,
 2381 006e 5360     		str	r3, [r2, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 2382              	@ main.c:240: 		lion_updown();
 2383 0070 FFF7FEFF 		bl	lion_updown	@
 2384              	.L151:
 2385              		.align	2
 2386              	.L150:
 2387 0074 40004242 		.word	1111621696
 2388 0078 44004242 		.word	1111621700
 2389 007c 00100240 		.word	1073876992
 2390 0080 60004242 		.word	1111621728
 2391 0084 64004242 		.word	1111621732
 2392 0088 00ED00E0 		.word	-536810240
 2393 008c 00000140 		.word	1073807360
 2394 0090 3F548900 		.word	8999999
ARM GAS  /tmp/ccjvICQi.s 			page 43


 2395 0094 00100140 		.word	1073811456
 2396              		.size	main, .-main
 2397              		.section	.text.uht,"ax",%progbits
 2398              		.align	1
 2399              		.p2align 2,,3
 2400              		.global	uht
 2401              		.syntax unified
 2402              		.thumb
 2403              		.thumb_func
 2404              		.fpu softvfp
 2405              		.type	uht, %function
 2406              	uht:
 2407              		@ args = 0, pretend = 0, frame = 0
 2408              		@ frame_needed = 0, uses_anonymous_args = 0
 2409              		@ link register save eliminated.
 2410              	@ main.c:692: 		GPIOB->CRL = (GPIOB->CRL & 0xffffff0f) | 0x00000060;
 2411 0000 034A     		ldr	r2, .L153	@ tmp113,
 2412 0002 1368     		ldr	r3, [r2]	@ _1, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2413 0004 23F0F003 		bic	r3, r3, #240	@ tmp114, _1,
 2414 0008 43F06003 		orr	r3, r3, #96	@ _3, tmp114,
 2415 000c 1360     		str	r3, [r2]	@ _3, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2416              	@ main.c:761: 	} 
 2417 000e 7047     		bx	lr	@
 2418              	.L154:
 2419              		.align	2
 2420              	.L153:
 2421 0010 000C0140 		.word	1073810432
 2422              		.size	uht, .-uht
 2423              		.section	.text.rtc_calibrate,"ax",%progbits
 2424              		.align	1
 2425              		.p2align 2,,3
 2426              		.global	rtc_calibrate
 2427              		.syntax unified
 2428              		.thumb
 2429              		.thumb_func
 2430              		.fpu softvfp
 2431              		.type	rtc_calibrate, %function
 2432              	rtc_calibrate:
 2433              		@ args = 0, pretend = 0, frame = 24
 2434              		@ frame_needed = 0, uses_anonymous_args = 0
 2435 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}	@
 2436 0004 87B0     		sub	sp, sp, #28	@,,
 2437              	@ main.c:767: 		RtcInit();
 2438 0006 FFF7FEFF 		bl	RtcInit	@
 2439              	@ main.c:768: 		i2c1_init();
 2440 000a FFF7FEFF 		bl	i2c1_init	@
 2441              	@ main.c:769: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 2442 000e 3D48     		ldr	r0, .L178	@ tmp140,
 2443              	@ main.c:770: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2444 0010 3D49     		ldr	r1, .L178+4	@ tmp145,
 2445              	@ main.c:769: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 2446 0012 4368     		ldr	r3, [r0, #4]	@ _2, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 2447              	@ main.c:772: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 2448 0014 3D4A     		ldr	r2, .L178+8	@ tmp148,
 2449              	@ main.c:769: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 2450 0016 23F0F023 		bic	r3, r3, #-268374016	@ tmp141, _2,
 2451 001a 23F47023 		bic	r3, r3, #983040	@ tmp141, tmp141,
ARM GAS  /tmp/ccjvICQi.s 			page 44


 2452 001e 43F01023 		orr	r3, r3, #268439552	@ _4, tmp141,
 2453 0022 43F48033 		orr	r3, r3, #65536	@ _4, _4,
 2454 0026 4360     		str	r3, [r0, #4]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 2455              	@ main.c:770: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2456 0028 0B68     		ldr	r3, [r1]	@ _5, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2457              	@ main.c:776: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 2458 002a 3948     		ldr	r0, .L178+12	@ tmp157,
 2459              	@ main.c:770: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2460 002c 23F47F23 		bic	r3, r3, #1044480	@ tmp146, _5,
 2461 0030 43F48833 		orr	r3, r3, #69632	@ _7, tmp146,
 2462              	@ main.c:772: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 2463 0034 374F     		ldr	r7, .L178+16	@ tmp149,
 2464              	@ main.c:773: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 2465 0036 384E     		ldr	r6, .L178+20	@ tmp151,
 2466              	@ main.c:774: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 2467 0038 384D     		ldr	r5, .L178+24	@ tmp153,
 2468              	@ main.c:775: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 2469 003a 394C     		ldr	r4, .L178+28	@ tmp155,
 2470              	@ main.c:770: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2471 003c 0B60     		str	r3, [r1]	@ _7, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2472              	@ main.c:772: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 2473 003e 5760     		str	r7, [r2, #4]	@ tmp149, oled_hw.sck
 2474              	@ main.c:773: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 2475 0040 1660     		str	r6, [r2]	@ tmp151, oled_hw.mosi
 2476              	@ main.c:774: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 2477 0042 9560     		str	r5, [r2, #8]	@ tmp153, oled_hw.dc
 2478              	@ main.c:775: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 2479 0044 D460     		str	r4, [r2, #12]	@ tmp155, oled_hw.cs
 2480              	@ main.c:776: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 2481 0046 1061     		str	r0, [r2, #16]	@ tmp157, oled_hw.rst
 2482              	@ main.c:779: 		ssd1306_init();
 2483 0048 FFF7FEFF 		bl	ssd1306_init	@
 2484              	@ main.c:796: 		num2uart (tim/TIM_US,7,0);	
 2485 004c 0022     		movs	r2, #0	@,
 2486 004e 0721     		movs	r1, #7	@,
 2487 0050 1046     		mov	r0, r2	@,
 2488 0052 FFF7FEFF 		bl	num2uart	@
 2489              	@ main.c:799: 		num2uart (tim4,8,1);	
 2490 0056 0122     		movs	r2, #1	@,
 2491 0058 0821     		movs	r1, #8	@,
 2492 005a 0298     		ldr	r0, [sp, #8]	@, tim4
 2493 005c FFF7FEFF 		bl	num2uart	@
 2494              	@ main.c:817: 				while(!iPB5)
 2495 0060 04F5FE44 		add	r4, r4, #32512	@ tmp173, tmp173,
 2496 0064 DFF8C880 		ldr	r8, .L178+44	@ tmp194,
 2497 0068 2E4E     		ldr	r6, .L178+32	@ tmp195,
 2498 006a 2F4F     		ldr	r7, .L178+36	@ tmp197,
 2499              	@ main.c:804: 			if( TIM_MS*500 < (trg0 - SysTick->VAL) ){
 2500 006c 2F4D     		ldr	r5, .L178+40	@ tmp163,
 2501 006e DFF8C490 		ldr	r9, .L178+48	@ tmp165,
 2502              	@ main.c:817: 				while(!iPB5)
 2503 0072 6834     		adds	r4, r4, #104	@ tmp173, tmp173,
 2504              	.L156:
 2505              	@ main.c:804: 			if( TIM_MS*500 < (trg0 - SysTick->VAL) ){
 2506 0074 D8F80030 		ldr	r3, [r8]	@ trg0.97_10, trg0
 2507 0078 AA68     		ldr	r2, [r5, #8]	@ _11, MEM[(struct SysTick_Type *)3758153744B].VAL
 2508 007a 9B1A     		subs	r3, r3, r2	@ tmp164, trg0.97_10, _11
ARM GAS  /tmp/ccjvICQi.s 			page 45


 2509 007c 4B45     		cmp	r3, r9	@ tmp164, tmp165
 2510 007e F9D9     		bls	.L156	@,
 2511              	@ main.c:805: 				trg0 = SysTick->VAL; 
 2512 0080 D5F808C0 		ldr	ip, [r5, #8]	@ _13, MEM[(struct SysTick_Type *)3758153744B].VAL
 2513              	@ main.c:807: 				i2c1_read( DS3231_ADDR,0,tm,3);
 2514 0084 0323     		movs	r3, #3	@,
 2515 0086 01AA     		add	r2, sp, #4	@ tmp203,,
 2516 0088 0021     		movs	r1, #0	@,
 2517 008a D020     		movs	r0, #208	@,
 2518              	@ main.c:805: 				trg0 = SysTick->VAL; 
 2519 008c C8F800C0 		str	ip, [r8]	@ _13, trg0
 2520              	@ main.c:807: 				i2c1_read( DS3231_ADDR,0,tm,3);
 2521 0090 FFF7FEFF 		bl	i2c1_read	@
 2522              	@ main.c:812: 				i2c1_read( DS3231_ADDR,0x0e,&ContReg,1);
 2523 0094 0123     		movs	r3, #1	@,
 2524 0096 0DF10302 		add	r2, sp, #3	@ tmp204,,
 2525 009a 0E21     		movs	r1, #14	@,
 2526 009c D020     		movs	r0, #208	@,
 2527 009e FFF7FEFF 		bl	i2c1_read	@
 2528              	.L157:
 2529              	@ main.c:817: 				while(!iPB5)
 2530 00a2 2368     		ldr	r3, [r4]	@ _15, MEM[(volatile long unsigned int *)1109491988B]
 2531 00a4 2BB9     		cbnz	r3, .L159	@ _15,
 2532              	.L175:
 2533              	@ main.c:818: 				while(iPB5) 	TIM_start();
 2534 00a6 2368     		ldr	r3, [r4]	@ _14,
 2535 00a8 002B     		cmp	r3, #0	@ _14
 2536 00aa FAD0     		beq	.L157	@
 2537              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 2538 00ac AB68     		ldr	r3, [r5, #8]	@ _46, MEM[(struct SysTick_Type *)3758153744B].VAL
 2539 00ae 3360     		str	r3, [r6]	@ _46, Timt
 2540 00b0 F9E7     		b	.L175	@
 2541              	.L159:
 2542              	@ main.c:819: 				while(!iPB5)
 2543 00b2 2368     		ldr	r3, [r4]	@ _17, MEM[(volatile long unsigned int *)1109491988B]
 2544 00b4 3BB9     		cbnz	r3, .L162	@ _17,
 2545              	.L177:
 2546              	@ main.c:820: 				while(iPB5)	TIM_stop(&tim4);
 2547 00b6 2368     		ldr	r3, [r4]	@ _16,
 2548 00b8 002B     		cmp	r3, #0	@ _16
 2549 00ba FAD0     		beq	.L159	@
 2550              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 2551 00bc 3368     		ldr	r3, [r6]	@ Timt.100_47, Timt
 2552 00be AA68     		ldr	r2, [r5, #8]	@ _48, MEM[(struct SysTick_Type *)3758153744B].VAL
 2553 00c0 9B1A     		subs	r3, r3, r2	@ _49, Timt.100_47, _48
 2554 00c2 0293     		str	r3, [sp, #8]	@ _49, MEM[(volatile u32 *)&tim4]
 2555 00c4 F7E7     		b	.L177	@
 2556              	.L162:
 2557              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 2558 00c6 40F25241 		movw	r1, #1106	@ tmp187,
 2559              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 2560 00ca AB68     		ldr	r3, [r5, #8]	@ _54, MEM[(struct SysTick_Type *)3758153744B].VAL
 2561 00cc 3360     		str	r3, [r6]	@ _54, Timt
 2562              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 2563 00ce AB68     		ldr	r3, [r5, #8]	@ _50, MEM[(struct SysTick_Type *)3758153744B].VAL
 2564 00d0 3B60     		str	r3, [r7]	@ _50, delay_us
 2565              	.L164:
ARM GAS  /tmp/ccjvICQi.s 			page 46


 2566              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 2567 00d2 3B68     		ldr	r3, [r7]	@ delay_us.101_51, delay_us
 2568 00d4 AA68     		ldr	r2, [r5, #8]	@ _52, MEM[(struct SysTick_Type *)3758153744B].VAL
 2569 00d6 9B1A     		subs	r3, r3, r2	@ tmp186, delay_us.101_51, _52
 2570 00d8 8B42     		cmp	r3, r1	@ tmp186, tmp187
 2571 00da FAD9     		bls	.L164	@,
 2572              	@ main.c:825: 				int2str(tim4,tbuf,6,0); 
 2573 00dc 03A9     		add	r1, sp, #12	@ tmp205,,
 2574 00de 0023     		movs	r3, #0	@,
 2575 00e0 0622     		movs	r2, #6	@,
 2576 00e2 0298     		ldr	r0, [sp, #8]	@, tim4
 2577 00e4 FFF7FEFF 		bl	int2str	@
 2578              	@ main.c:826: 				int2str(123,tbuf,6,0); 
 2579 00e8 0023     		movs	r3, #0	@,
 2580 00ea 03A9     		add	r1, sp, #12	@ tmp206,,
 2581 00ec 0622     		movs	r2, #6	@,
 2582 00ee 7B20     		movs	r0, #123	@,
 2583 00f0 FFF7FEFF 		bl	int2str	@
 2584              	@ main.c:828: 				oled_str16(0,0,tbuf);
 2585 00f4 0021     		movs	r1, #0	@,
 2586 00f6 03AA     		add	r2, sp, #12	@ tmp207,,
 2587 00f8 0846     		mov	r0, r1	@,
 2588 00fa FFF7FEFF 		bl	oled_str16	@
 2589              	@ main.c:832: 				oled_refresh_gram();
 2590 00fe FFF7FEFF 		bl	oled_refresh_gram	@
 2591 0102 B7E7     		b	.L156	@
 2592              	.L179:
 2593              		.align	2
 2594              	.L178:
 2595 0104 00080140 		.word	1073809408
 2596 0108 000C0140 		.word	1073810432
 2597 010c 00000000 		.word	oled_hw
 2598 0110 BC012142 		.word	1109459388
 2599 0114 90812142 		.word	1109492112
 2600 0118 8C812142 		.word	1109492108
 2601 011c B0012142 		.word	1109459376
 2602 0120 AC012142 		.word	1109459372
 2603 0124 00000000 		.word	Timt
 2604 0128 00000000 		.word	delay_us
 2605 012c 10E000E0 		.word	-536813552
 2606 0130 00000000 		.word	trg0
 2607 0134 20AA4400 		.word	4500000
 2608              		.size	rtc_calibrate, .-rtc_calibrate
 2609              		.section	.text.testwsk,"ax",%progbits
 2610              		.align	1
 2611              		.p2align 2,,3
 2612              		.global	testwsk
 2613              		.syntax unified
 2614              		.thumb
 2615              		.thumb_func
 2616              		.fpu softvfp
 2617              		.type	testwsk, %function
 2618              	testwsk:
 2619              		@ args = 0, pretend = 0, frame = 0
 2620              		@ frame_needed = 0, uses_anonymous_args = 0
 2621              		@ link register save eliminated.
 2622              	@ main.c:850: 	}
ARM GAS  /tmp/ccjvICQi.s 			page 47


 2623 0000 7047     		bx	lr	@
 2624              		.size	testwsk, .-testwsk
 2625 0002 00BF     		.section	.text.veml6075,"ax",%progbits
 2626              		.align	1
 2627              		.p2align 2,,3
 2628              		.global	veml6075
 2629              		.syntax unified
 2630              		.thumb
 2631              		.thumb_func
 2632              		.fpu softvfp
 2633              		.type	veml6075, %function
 2634              	veml6075:
 2635              		@ args = 0, pretend = 0, frame = 16
 2636              		@ frame_needed = 0, uses_anonymous_args = 0
 2637              	@ main.c:854: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='l';
 2638 0000 0123     		movs	r3, #1	@ tmp128,
 2639 0002 6C20     		movs	r0, #108	@ tmp131,
 2640 0004 264A     		ldr	r2, .L186	@ tmp126,
 2641              	@ main.c:871: 		LED=1;
 2642 0006 2749     		ldr	r1, .L186+4	@ tmp133,
 2643              	@ main.c:854: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='l';
 2644 0008 1268     		ldr	r2, [r2]	@ p_Fifo1.102_1, p_Fifo1
 2645              	@ main.c:851: void veml6075(void){
 2646 000a 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 2647              	@ main.c:873: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 2648 000e 264C     		ldr	r4, .L186+8	@ tmp135,
 2649              	@ main.c:854: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='l';
 2650 0010 9380     		strh	r3, [r2, #4]	@ movhi	@ tmp128, p_Fifo1.102_1->rct
 2651 0012 5380     		strh	r3, [r2, #2]	@ movhi	@ tmp128, p_Fifo1.102_1->rwi
 2652 0014 9071     		strb	r0, [r2, #6]	@ tmp131, p_Fifo1.102_1->rbuf
 2653              	@ main.c:871: 		LED=1;
 2654 0016 0B60     		str	r3, [r1]	@ tmp128, MEM[(volatile long unsigned int *)1109524916B]
 2655              	@ main.c:873: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 2656 0018 6368     		ldr	r3, [r4, #4]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 2657              	@ main.c:874: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2658 001a 2448     		ldr	r0, .L186+12	@ tmp140,
 2659              	@ main.c:873: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 2660 001c 23F0F023 		bic	r3, r3, #-268374016	@ tmp136, _4,
 2661 0020 23F47023 		bic	r3, r3, #983040	@ tmp136, tmp136,
 2662 0024 43F01023 		orr	r3, r3, #268439552	@ _6, tmp136,
 2663 0028 43F48033 		orr	r3, r3, #65536	@ _6, _6,
 2664 002c 6360     		str	r3, [r4, #4]	@ _6, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 2665              	@ main.c:874: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2666 002e 0268     		ldr	r2, [r0]	@ _7, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2667              	@ main.c:876: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 2668 0030 1F4B     		ldr	r3, .L186+16	@ tmp143,
 2669              	@ main.c:874: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2670 0032 22F47F22 		bic	r2, r2, #1044480	@ tmp141, _7,
 2671 0036 42F48832 		orr	r2, r2, #69632	@ _9, tmp141,
 2672 003a 0260     		str	r2, [r0]	@ _9, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2673              	@ main.c:876: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 2674 003c 1D4E     		ldr	r6, .L186+20	@ tmp144,
 2675              	@ main.c:879: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 2676 003e 1E48     		ldr	r0, .L186+24	@ tmp150,
 2677              	@ main.c:880: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 2678 0040 1E4A     		ldr	r2, .L186+28	@ tmp152,
 2679              	@ main.c:877: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
ARM GAS  /tmp/ccjvICQi.s 			page 48


 2680 0042 1F4D     		ldr	r5, .L186+32	@ tmp146,
 2681              	@ main.c:878: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 2682 0044 1F4C     		ldr	r4, .L186+36	@ tmp148,
 2683              	@ main.c:851: void veml6075(void){
 2684 0046 84B0     		sub	sp, sp, #16	@,,
 2685              	@ main.c:876: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 2686 0048 5E60     		str	r6, [r3, #4]	@ tmp144, oled_hw.sck
 2687              	@ main.c:906: 				LED^=1;
 2688 004a 8846     		mov	r8, r1	@ tmp163, tmp133
 2689              	@ main.c:877: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 2690 004c 1D60     		str	r5, [r3]	@ tmp146, oled_hw.mosi
 2691              	@ main.c:898: 		oled_refresh_gram();
 2692 004e 0027     		movs	r7, #0	@ ivtmp.456,
 2693              	@ main.c:878: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 2694 0050 9C60     		str	r4, [r3, #8]	@ tmp148, oled_hw.dc
 2695              	@ main.c:879: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 2696 0052 D860     		str	r0, [r3, #12]	@ tmp150, oled_hw.cs
 2697              	@ main.c:880: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 2698 0054 1A61     		str	r2, [r3, #16]	@ tmp152, oled_hw.rst
 2699              	@ main.c:883: 		ssd1306_init();
 2700 0056 FFF7FEFF 		bl	ssd1306_init	@
 2701              	@ main.c:898: 		oled_refresh_gram();
 2702 005a FFF7FEFF 		bl	oled_refresh_gram	@
 2703 005e 1A4D     		ldr	r5, .L186+40	@ tmp166,
 2704              	@ main.c:901: 			if(STCLK_MS*20 < (trg0 - SysTick->VAL)){	
 2705 0060 1A4C     		ldr	r4, .L186+44	@ tmp154,
 2706 0062 1B4E     		ldr	r6, .L186+48	@ tmp156,
 2707              	.L182:
 2708 0064 2B68     		ldr	r3, [r5]	@ trg0.105_10, trg0
 2709 0066 A268     		ldr	r2, [r4, #8]	@ _11, MEM[(struct SysTick_Type *)3758153744B].VAL
 2710 0068 9B1A     		subs	r3, r3, r2	@ tmp155, trg0.105_10, _11
 2711 006a B342     		cmp	r3, r6	@ tmp155, tmp156
 2712 006c FAD9     		bls	.L182	@,
 2713              	@ main.c:902: 				trg0  = SysTick->VAL;	
 2714 006e D4F808C0 		ldr	ip, [r4, #8]	@ _13, MEM[(struct SysTick_Type *)3758153744B].VAL
 2715              	@ main.c:903: 				int2str(cnt++ ,tbuf,5,0);		oled_num24(0,0,tbuf);
 2716 0072 0023     		movs	r3, #0	@,
 2717 0074 0522     		movs	r2, #5	@,
 2718 0076 01A9     		add	r1, sp, #4	@ tmp167,,
 2719 0078 B8B2     		uxth	r0, r7	@, ivtmp.456
 2720              	@ main.c:902: 				trg0  = SysTick->VAL;	
 2721 007a C5F800C0 		str	ip, [r5]	@ _13, trg0
 2722              	@ main.c:903: 				int2str(cnt++ ,tbuf,5,0);		oled_num24(0,0,tbuf);
 2723 007e FFF7FEFF 		bl	int2str	@
 2724 0082 0021     		movs	r1, #0	@,
 2725 0084 01AA     		add	r2, sp, #4	@ tmp168,,
 2726 0086 0846     		mov	r0, r1	@,
 2727 0088 FFF7FEFF 		bl	oled_num24	@
 2728              	@ main.c:904: 				oled_refresh_gram();	
 2729 008c FFF7FEFF 		bl	oled_refresh_gram	@
 2730              	@ main.c:906: 				LED^=1;
 2731 0090 D8F80030 		ldr	r3, [r8]	@ _16, MEM[(volatile long unsigned int *)1109524916B]
 2732 0094 0137     		adds	r7, r7, #1	@ ivtmp.456, ivtmp.456,
 2733 0096 83F00103 		eor	r3, r3, #1	@ _17, _16,
 2734 009a C8F80030 		str	r3, [r8]	@ _17, MEM[(volatile long unsigned int *)1109524916B]
 2735 009e E1E7     		b	.L182	@
 2736              	.L187:
ARM GAS  /tmp/ccjvICQi.s 			page 49


 2737              		.align	2
 2738              	.L186:
 2739 00a0 00000000 		.word	p_Fifo1
 2740 00a4 B4012242 		.word	1109524916
 2741 00a8 00080140 		.word	1073809408
 2742 00ac 000C0140 		.word	1073810432
 2743 00b0 00000000 		.word	oled_hw
 2744 00b4 90812142 		.word	1109492112
 2745 00b8 AC012142 		.word	1109459372
 2746 00bc BC012142 		.word	1109459388
 2747 00c0 8C812142 		.word	1109492108
 2748 00c4 B0012142 		.word	1109459376
 2749 00c8 00000000 		.word	trg0
 2750 00cc 10E000E0 		.word	-536813552
 2751 00d0 20BF0200 		.word	180000
 2752              		.size	veml6075, .-veml6075
 2753              		.section	.text.softSPI_w,"ax",%progbits
 2754              		.align	1
 2755              		.p2align 2,,3
 2756              		.global	softSPI_w
 2757              		.syntax unified
 2758              		.thumb
 2759              		.thumb_func
 2760              		.fpu softvfp
 2761              		.type	softSPI_w, %function
 2762              	softSPI_w:
 2763              		@ args = 0, pretend = 0, frame = 0
 2764              		@ frame_needed = 0, uses_anonymous_args = 0
 2765 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}	@
 2766              	@ main.c:1026: 			if (byte & 0x80)			wMOSI = 1;
 2767 0004 4FF0010E 		mov	lr, #1	@ tmp152,
 2768              	@ main.c:1022: uint8_t softSPI_w(uint8_t byte)	{
 2769 0008 0824     		movs	r4, #8	@ ivtmp_5,
 2770              	@ main.c:1030: 			wSCK = 1; /* a slave latches input data bit */
 2771 000a F046     		mov	r8, lr	@ MEM[(volatile long unsigned int *)1109459348B], tmp152
 2772              	@ main.c:1027: 			else			wMOSI = 0;
 2773 000c 0026     		movs	r6, #0	@ tmp151,
 2774 000e 1549     		ldr	r1, .L202	@ tmp149,
 2775 0010 DFF85CC0 		ldr	ip, .L202+12	@ tmp150,
 2776              	@ main.c:1030: 			wSCK = 1; /* a slave latches input data bit */
 2777 0014 144D     		ldr	r5, .L202+4	@ tmp131,
 2778              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 2779 0016 154A     		ldr	r2, .L202+8	@ tmp133,
 2780              	@ main.c:1032: 			if (wMISO)			byte |= 0x01;
 2781 0018 DFF85890 		ldr	r9, .L202+16	@ tmp138,
 2782              	.L194:
 2783              	@ main.c:1026: 			if (byte & 0x80)			wMOSI = 1;
 2784 001c 0306     		lsls	r3, r0, #24	@, byte,
 2785 001e 4CBF     		ite	mi
 2786 0020 CCF800E0 		strmi	lr, [ip]	@ tmp152, MEM[(volatile long unsigned int *)1109459356B]
 2787              	@ main.c:1027: 			else			wMOSI = 0;
 2788 0024 CCF80060 		strpl	r6, [ip]	@ tmp151, MEM[(volatile long unsigned int *)1109459356B]
 2789              	@ main.c:1030: 			wSCK = 1; /* a slave latches input data bit */
 2790 0028 C5F80080 		str	r8, [r5]	@ MEM[(volatile long unsigned int *)1109459348B], MEM[(volatile long unsigned int *)1
 2791              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 2792 002c 9368     		ldr	r3, [r2, #8]	@ _18, MEM[(struct SysTick_Type *)3758153744B].VAL
 2793              	@ main.c:1029: 			byte <<= 1;
ARM GAS  /tmp/ccjvICQi.s 			page 50


 2794 002e 4000     		lsls	r0, r0, #1	@ tmp130, byte,
 2795 0030 C0B2     		uxtb	r0, r0	@ byte, tmp130
 2796              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 2797 0032 0B60     		str	r3, [r1]	@ _18, delay_us
 2798              	.L191:
 2799              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 2800 0034 0B68     		ldr	r3, [r1]	@ delay_us.101_19, delay_us
 2801 0036 9768     		ldr	r7, [r2, #8]	@ _20, MEM[(struct SysTick_Type *)3758153744B].VAL
 2802 0038 DB1B     		subs	r3, r3, r7	@ tmp137, delay_us.101_19, _20
 2803 003a 592B     		cmp	r3, #89	@ tmp137,
 2804 003c FAD9     		bls	.L191	@,
 2805              	@ main.c:1032: 			if (wMISO)			byte |= 0x01;
 2806 003e D9F80030 		ldr	r3, [r9]	@ _2, MEM[(volatile long unsigned int *)1109459224B]
 2807 0042 0BB1     		cbz	r3, .L192	@ _2,
 2808              	@ main.c:1032: 			if (wMISO)			byte |= 0x01;
 2809 0044 40F00100 		orr	r0, r0, #1	@ byte, byte,
 2810              	.L192:
 2811              	@ main.c:1034: 			wSCK = 0; /* a slave shifts out next output data bit */
 2812 0048 2E60     		str	r6, [r5]	@ tmp151, MEM[(volatile long unsigned int *)1109459348B]
 2813              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 2814 004a 9368     		ldr	r3, [r2, #8]	@ _22, MEM[(struct SysTick_Type *)3758153744B].VAL
 2815 004c 0B60     		str	r3, [r1]	@ _22, delay_us
 2816              	.L193:
 2817              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 2818 004e 0B68     		ldr	r3, [r1]	@ delay_us.101_23, delay_us
 2819 0050 9768     		ldr	r7, [r2, #8]	@ _24, MEM[(struct SysTick_Type *)3758153744B].VAL
 2820 0052 DB1B     		subs	r3, r3, r7	@ tmp146, delay_us.101_23, _24
 2821 0054 592B     		cmp	r3, #89	@ tmp146,
 2822 0056 FAD9     		bls	.L193	@,
 2823 0058 013C     		subs	r4, r4, #1	@ tmp147, ivtmp_5,
 2824              	@ main.c:1024: 		for(counter = 8; counter; counter--)
 2825 005a 14F0FF04 		ands	r4, r4, #255	@ ivtmp_5, tmp147,
 2826 005e DDD1     		bne	.L194	@,
 2827              	@ main.c:1038: 	}
 2828 0060 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}	@
 2829              	.L203:
 2830              		.align	2
 2831              	.L202:
 2832 0064 00000000 		.word	delay_us
 2833 0068 94012142 		.word	1109459348
 2834 006c 10E000E0 		.word	-536813552
 2835 0070 9C012142 		.word	1109459356
 2836 0074 18012142 		.word	1109459224
 2837              		.size	softSPI_w, .-softSPI_w
 2838              		.section	.text.softSPI_r,"ax",%progbits
 2839              		.align	1
 2840              		.p2align 2,,3
 2841              		.global	softSPI_r
 2842              		.syntax unified
 2843              		.thumb
 2844              		.thumb_func
 2845              		.fpu softvfp
 2846              		.type	softSPI_r, %function
 2847              	softSPI_r:
 2848              		@ args = 0, pretend = 0, frame = 0
 2849              		@ frame_needed = 0, uses_anonymous_args = 0
 2850              		@ link register save eliminated.
ARM GAS  /tmp/ccjvICQi.s 			page 51


 2851              	@ main.c:1045: 			else				wMOSI = 0;
 2852 0000 4FF0000C 		mov	ip, #0	@ tmp132,
 2853              	@ main.c:1040: uint8_t softSPI_r(uint8_t byte)	{
 2854 0004 F0B4     		push	{r4, r5, r6, r7}	@
 2855              	@ main.c:1040: uint8_t softSPI_r(uint8_t byte)	{
 2856 0006 0823     		movs	r3, #8	@ ivtmp_5,
 2857              	@ main.c:1047: 			wSCK = 0; /* a slave shifts out output data bit */
 2858 0008 6746     		mov	r7, ip	@ MEM[(volatile long unsigned int *)1109459348B], tmp132
 2859              	@ main.c:1044: 			if (byte & 0x80)			wMOSI = 1;
 2860 000a 0124     		movs	r4, #1	@ tmp133,
 2861              	@ main.c:1045: 			else				wMOSI = 0;
 2862 000c 0A4E     		ldr	r6, .L214	@ tmp131,
 2863              	@ main.c:1047: 			wSCK = 0; /* a slave shifts out output data bit */
 2864 000e 0B4A     		ldr	r2, .L214+4	@ tmp122,
 2865              	@ main.c:1050: 			if (wMISO)		byte |= 0x01;
 2866 0010 0B4D     		ldr	r5, .L214+8	@ tmp125,
 2867              	.L208:
 2868              	@ main.c:1044: 			if (byte & 0x80)			wMOSI = 1;
 2869 0012 0106     		lsls	r1, r0, #24	@, byte,
 2870 0014 4CBF     		ite	mi
 2871 0016 3460     		strmi	r4, [r6]	@ tmp133, MEM[(volatile long unsigned int *)1109459356B]
 2872              	@ main.c:1045: 			else				wMOSI = 0;
 2873 0018 C6F800C0 		strpl	ip, [r6]	@ tmp132, MEM[(volatile long unsigned int *)1109459356B]
 2874              	@ main.c:1047: 			wSCK = 0; /* a slave shifts out output data bit */
 2875 001c 1760     		str	r7, [r2]	@ MEM[(volatile long unsigned int *)1109459348B], MEM[(volatile long unsigned int *)1
 2876              	@ main.c:1050: 			if (wMISO)		byte |= 0x01;
 2877 001e 2968     		ldr	r1, [r5]	@ _2, MEM[(volatile long unsigned int *)1109459224B]
 2878              	@ main.c:1048: 			byte <<= 1;
 2879 0020 4000     		lsls	r0, r0, #1	@ tmp124, byte,
 2880 0022 013B     		subs	r3, r3, #1	@ tmp129, ivtmp_5,
 2881 0024 C0B2     		uxtb	r0, r0	@ byte, tmp124
 2882              	@ main.c:1050: 			if (wMISO)		byte |= 0x01;
 2883 0026 09B1     		cbz	r1, .L207	@ _2,
 2884              	@ main.c:1050: 			if (wMISO)		byte |= 0x01;
 2885 0028 40F00100 		orr	r0, r0, #1	@ byte, byte,
 2886              	.L207:
 2887              	@ main.c:1042: 		for(counter = 8; counter; counter--)
 2888 002c 13F0FF03 		ands	r3, r3, #255	@ ivtmp_5, tmp129,
 2889              	@ main.c:1051: 			wSCK = 1; /* a slave latches input data bit */
 2890 0030 1460     		str	r4, [r2]	@ tmp133, MEM[(volatile long unsigned int *)1109459348B]
 2891              	@ main.c:1042: 		for(counter = 8; counter; counter--)
 2892 0032 EED1     		bne	.L208	@,
 2893              	@ main.c:1054: 	}
 2894 0034 F0BC     		pop	{r4, r5, r6, r7}	@
 2895 0036 7047     		bx	lr	@
 2896              	.L215:
 2897              		.align	2
 2898              	.L214:
 2899 0038 9C012142 		.word	1109459356
 2900 003c 94012142 		.word	1109459348
 2901 0040 18012142 		.word	1109459224
 2902              		.size	softSPI_r, .-softSPI_r
 2903              		.section	.text.ili9486,"ax",%progbits
 2904              		.align	1
 2905              		.p2align 2,,3
 2906              		.global	ili9486
 2907              		.syntax unified
ARM GAS  /tmp/ccjvICQi.s 			page 52


 2908              		.thumb
 2909              		.thumb_func
 2910              		.fpu softvfp
 2911              		.type	ili9486, %function
 2912              	ili9486:
 2913              		@ args = 0, pretend = 0, frame = 8
 2914              		@ frame_needed = 0, uses_anonymous_args = 0
 2915              	@ main.c:1058: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='c';
 2916 0000 0123     		movs	r3, #1	@ tmp136,
 2917 0002 6320     		movs	r0, #99	@ tmp139,
 2918              	@ main.c:1055: void ili9486(void){
 2919 0004 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 2920              	@ main.c:1058: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='c';
 2921 0008 DFF85491 		ldr	r9, .L247+56	@ tmp196,
 2922              	@ main.c:1060: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0x34330000;	//   PA7=MOSI, PA6=MISO, PA5=
 2923 000c 4649     		ldr	r1, .L247	@ tmp141,
 2924              	@ main.c:1058: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='c';
 2925 000e D9F80020 		ldr	r2, [r9]	@ pretmp_14, p_Fifo1
 2926              	@ main.c:1045: 			else				wMOSI = 0;
 2927 0012 464E     		ldr	r6, .L247+4	@ tmp207,
 2928              	@ main.c:1058: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='c';
 2929 0014 9380     		strh	r3, [r2, #4]	@ movhi	@ tmp136, p_Fifo1.116_1->rct
 2930 0016 5380     		strh	r3, [r2, #2]	@ movhi	@ tmp136, p_Fifo1.116_1->rwi
 2931 0018 9071     		strb	r0, [r2, #6]	@ tmp139, p_Fifo1.116_1->rbuf
 2932              	@ main.c:1060: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0x34330000;	//   PA7=MOSI, PA6=MISO, PA5=
 2933 001a 0B68     		ldr	r3, [r1]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 2934              	@ main.c:1047: 			wSCK = 0; /* a slave shifts out output data bit */
 2935 001c 444C     		ldr	r4, .L247+8	@ tmp208,
 2936              	@ main.c:1060: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0x34330000;	//   PA7=MOSI, PA6=MISO, PA5=
 2937 001e 9BB2     		uxth	r3, r3	@ tmp142, _4
 2938 0020 43F05053 		orr	r3, r3, #872415232	@ _6, tmp142,
 2939 0024 43F44C13 		orr	r3, r3, #3342336	@ _6, _6,
 2940              	@ main.c:1055: void ili9486(void){
 2941 0028 83B0     		sub	sp, sp, #12	@,,
 2942              	@ main.c:1060: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0x34330000;	//   PA7=MOSI, PA6=MISO, PA5=
 2943 002a 0B60     		str	r3, [r1]	@ _6, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 2944              	.L218:
 2945              	@ main.c:1064: 			if(p_Fifo1->rct){
 2946 002c 9388     		ldrh	r3, [r2, #4]	@, prephitmp_55->rct
 2947 002e 9BB2     		uxth	r3, r3	@ _8, prephitmp_55->rct
 2948 0030 002B     		cmp	r3, #0	@ _8
 2949 0032 FBD0     		beq	.L218	@
 2950              	@ main.c:1065: 				UART_getChar( (char*)&swh);
 2951 0034 0DF10700 		add	r0, sp, #7	@ tmp214,,
 2952 0038 FFF7FEFF 		bl	UART_getChar	@
 2953              	@ main.c:1067: 				switch (swh)	{
 2954 003c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2	@ swh, swh
 2955 0040 722B     		cmp	r3, #114	@ swh,
 2956 0042 09D0     		beq	.L220	@,
 2957 0044 772B     		cmp	r3, #119	@ swh,
 2958 0046 42D0     		beq	.L221	@,
 2959 0048 632B     		cmp	r3, #99	@ swh,
 2960 004a 30D0     		beq	.L246	@,
 2961              	@ main.c:1093: 					UaPutK("\r");
 2962 004c 3948     		ldr	r0, .L247+12	@,
 2963 004e FFF7FEFF 		bl	UaPutK	@
 2964              	.L227:
ARM GAS  /tmp/ccjvICQi.s 			page 53


 2965 0052 D9F80020 		ldr	r2, [r9]	@ pretmp_14, p_Fifo1
 2966 0056 E9E7     		b	.L218	@
 2967              	.L220:
 2968              	@ main.c:1070: 					UaPutK("\r\n reg = 0x");	reg=UART_getHex();
 2969 0058 3748     		ldr	r0, .L247+16	@,
 2970 005a FFF7FEFF 		bl	UaPutK	@
 2971 005e FFF7FEFF 		bl	UART_getHex	@
 2972 0062 C5B2     		uxtb	r5, r0	@ reg,
 2973              	@ main.c:1071: 					UaPutK("\r\n dat = 0x");
 2974 0064 3548     		ldr	r0, .L247+20	@,
 2975 0066 FFF7FEFF 		bl	UaPutK	@
 2976              	@ main.c:1072: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 2977 006a 0022     		movs	r2, #0	@ tmp154,
 2978 006c 0823     		movs	r3, #8	@ ivtmp_53,
 2979              	@ main.c:1045: 			else				wMOSI = 0;
 2980 006e 9446     		mov	ip, r2	@ tmp198, tmp154
 2981              	@ main.c:1047: 			wSCK = 0; /* a slave shifts out output data bit */
 2982 0070 1746     		mov	r7, r2	@ MEM[(volatile long unsigned int *)1109459348B], tmp198
 2983              	@ main.c:1044: 			if (byte & 0x80)			wMOSI = 1;
 2984 0072 0121     		movs	r1, #1	@ tmp199,
 2985              	@ main.c:1072: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 2986 0074 3248     		ldr	r0, .L247+24	@ tmp215,
 2987              	@ main.c:1050: 			if (wMISO)		byte |= 0x01;
 2988 0076 DFF8E0E0 		ldr	lr, .L247+48	@ tmp163,
 2989              	@ main.c:1072: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 2990 007a 0260     		str	r2, [r0]	@ tmp154, MEM[(volatile long unsigned int *)1109459344B]
 2991              	.L226:
 2992              	@ main.c:1044: 			if (byte & 0x80)			wMOSI = 1;
 2993 007c 2A06     		lsls	r2, r5, #24	@, reg,
 2994 007e 4CBF     		ite	mi
 2995 0080 3160     		strmi	r1, [r6]	@ tmp199, MEM[(volatile long unsigned int *)1109459356B]
 2996              	@ main.c:1045: 			else				wMOSI = 0;
 2997 0082 C6F800C0 		strpl	ip, [r6]	@ tmp198, MEM[(volatile long unsigned int *)1109459356B]
 2998              	@ main.c:1047: 			wSCK = 0; /* a slave shifts out output data bit */
 2999 0086 2760     		str	r7, [r4]	@ MEM[(volatile long unsigned int *)1109459348B], MEM[(volatile long unsigned int *)1
 3000              	@ main.c:1050: 			if (wMISO)		byte |= 0x01;
 3001 0088 DEF80020 		ldr	r2, [lr]	@ _43, MEM[(volatile long unsigned int *)1109459224B]
 3002              	@ main.c:1048: 			byte <<= 1;
 3003 008c 6D00     		lsls	r5, r5, #1	@ tmp162, reg,
 3004 008e 013B     		subs	r3, r3, #1	@ tmp167, ivtmp_53,
 3005 0090 EDB2     		uxtb	r5, r5	@ reg, tmp162
 3006              	@ main.c:1050: 			if (wMISO)		byte |= 0x01;
 3007 0092 0AB1     		cbz	r2, .L225	@ _43,
 3008 0094 45F00105 		orr	r5, r5, #1	@ reg, reg,
 3009              	.L225:
 3010              	@ main.c:1042: 		for(counter = 8; counter; counter--)
 3011 0098 13F0FF03 		ands	r3, r3, #255	@ ivtmp_53, tmp167,
 3012              	@ main.c:1051: 			wSCK = 1; /* a slave latches input data bit */
 3013 009c 2160     		str	r1, [r4]	@ tmp199, MEM[(volatile long unsigned int *)1109459348B]
 3014              	@ main.c:1042: 		for(counter = 8; counter; counter--)
 3015 009e EDD1     		bne	.L226	@,
 3016              	@ main.c:1072: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 3017 00a0 274B     		ldr	r3, .L247+24	@ tmp216,
 3018              	@ main.c:1073: 					hex2uart(dat,2);
 3019 00a2 2846     		mov	r0, r5	@, reg
 3020              	@ main.c:1072: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 3021 00a4 1960     		str	r1, [r3]	@ tmp199, MEM[(volatile long unsigned int *)1109459344B]
ARM GAS  /tmp/ccjvICQi.s 			page 54


 3022              	@ main.c:1073: 					hex2uart(dat,2);
 3023 00a6 0221     		movs	r1, #2	@,
 3024 00a8 FFF7FEFF 		bl	hex2uart	@
 3025              	@ main.c:1075: 					break;
 3026 00ac D1E7     		b	.L227	@
 3027              	.L246:
 3028              	@ main.c:1086: 					UaPutK("\f");
 3029 00ae 2548     		ldr	r0, .L247+28	@,
 3030 00b0 FFF7FEFF 		bl	UaPutK	@
 3031              	@ main.c:1087: 					UaPutK("\n\r\n======= ILI9486 ==================================\r\n");
 3032 00b4 2448     		ldr	r0, .L247+32	@,
 3033 00b6 FFF7FEFF 		bl	UaPutK	@
 3034              	@ main.c:1088: 					UaPutK(" r - Read   c - Clear page  \r\n");
 3035 00ba 2448     		ldr	r0, .L247+36	@,
 3036 00bc FFF7FEFF 		bl	UaPutK	@
 3037              	@ main.c:1089: 					UaPutK(" w - Write  l - Loop read   \r\n");
 3038 00c0 2348     		ldr	r0, .L247+40	@,
 3039 00c2 FFF7FEFF 		bl	UaPutK	@
 3040              	@ main.c:1090: 					UaPutK("==================================================\r\n > ");
 3041 00c6 2348     		ldr	r0, .L247+44	@,
 3042 00c8 FFF7FEFF 		bl	UaPutK	@
 3043              	@ main.c:1091: 					break;
 3044 00cc C1E7     		b	.L227	@
 3045              	.L221:
 3046              	@ main.c:1077: 					wCS = 0;
 3047 00ce 0023     		movs	r3, #0	@ tmp171,
 3048              	@ main.c:1078: 					for(u08 i=0;i<64;i++){
 3049 00d0 9B46     		mov	fp, r3	@ i, tmp171
 3050              	@ main.c:1045: 			else				wMOSI = 0;
 3051 00d2 9A46     		mov	r10, r3	@ tmp202, i
 3052              	@ main.c:1047: 			wSCK = 0; /* a slave shifts out output data bit */
 3053 00d4 9846     		mov	r8, r3	@ MEM[(volatile long unsigned int *)1109459348B], i
 3054              	@ main.c:1077: 					wCS = 0;
 3055 00d6 1A4A     		ldr	r2, .L247+24	@ tmp217,
 3056              	@ main.c:1050: 			if (wMISO)		byte |= 0x01;
 3057 00d8 1F4F     		ldr	r7, .L247+48	@ tmp180,
 3058              	@ main.c:1077: 					wCS = 0;
 3059 00da 1360     		str	r3, [r2]	@ tmp171, MEM[(volatile long unsigned int *)1109459344B]
 3060              	.L228:
 3061              	@ main.c:1072: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 3062 00dc 5846     		mov	r0, fp	@ byte, i
 3063 00de 0822     		movs	r2, #8	@ ivtmp_7,
 3064              	@ main.c:1044: 			if (byte & 0x80)			wMOSI = 1;
 3065 00e0 0125     		movs	r5, #1	@ tmp203,
 3066              	.L232:
 3067 00e2 0306     		lsls	r3, r0, #24	@, byte,
 3068 00e4 4CBF     		ite	mi
 3069 00e6 3560     		strmi	r5, [r6]	@ tmp203, MEM[(volatile long unsigned int *)1109459356B]
 3070              	@ main.c:1045: 			else				wMOSI = 0;
 3071 00e8 C6F800A0 		strpl	r10, [r6]	@ tmp202, MEM[(volatile long unsigned int *)1109459356B]
 3072              	@ main.c:1047: 			wSCK = 0; /* a slave shifts out output data bit */
 3073 00ec C4F80080 		str	r8, [r4]	@ MEM[(volatile long unsigned int *)1109459348B], MEM[(volatile long unsigned int *)1
 3074              	@ main.c:1050: 			if (wMISO)		byte |= 0x01;
 3075 00f0 3968     		ldr	r1, [r7]	@ _51, MEM[(volatile long unsigned int *)1109459224B]
 3076              	@ main.c:1048: 			byte <<= 1;
 3077 00f2 4000     		lsls	r0, r0, #1	@ tmp179, byte,
 3078 00f4 013A     		subs	r2, r2, #1	@ tmp184, ivtmp_7,
ARM GAS  /tmp/ccjvICQi.s 			page 55


 3079 00f6 C0B2     		uxtb	r0, r0	@ byte, tmp179
 3080              	@ main.c:1050: 			if (wMISO)		byte |= 0x01;
 3081 00f8 09B1     		cbz	r1, .L231	@ _51,
 3082 00fa 40F00100 		orr	r0, r0, #1	@ byte, byte,
 3083              	.L231:
 3084              	@ main.c:1042: 		for(counter = 8; counter; counter--)
 3085 00fe 12F0FF02 		ands	r2, r2, #255	@ ivtmp_7, tmp184,
 3086              	@ main.c:1051: 			wSCK = 1; /* a slave latches input data bit */
 3087 0102 2560     		str	r5, [r4]	@ tmp203, MEM[(volatile long unsigned int *)1109459348B]
 3088              	@ main.c:1042: 		for(counter = 8; counter; counter--)
 3089 0104 EDD1     		bne	.L232	@,
 3090              	@ main.c:1078: 					for(u08 i=0;i<64;i++){
 3091 0106 0BF1010B 		add	fp, fp, #1	@ tmp185, i,
 3092              	@ main.c:1079: 						hex2uart(softSPI_r(i),2);
 3093 010a 0221     		movs	r1, #2	@,
 3094              	@ main.c:1078: 					for(u08 i=0;i<64;i++){
 3095 010c 5FFA8BFB 		uxtb	fp, fp	@ i, tmp185
 3096              	@ main.c:1079: 						hex2uart(softSPI_r(i),2);
 3097 0110 FFF7FEFF 		bl	hex2uart	@
 3098              	@ main.c:1078: 					for(u08 i=0;i<64;i++){
 3099 0114 BBF1400F 		cmp	fp, #64	@ i,
 3100 0118 E0D1     		bne	.L228	@,
 3101              	@ main.c:1081: 					wCS = 1;
 3102 011a 094B     		ldr	r3, .L247+24	@ tmp218,
 3103              	@ main.c:1082: 					UaPutK("\r\n");
 3104 011c 0F48     		ldr	r0, .L247+52	@,
 3105              	@ main.c:1081: 					wCS = 1;
 3106 011e 1D60     		str	r5, [r3]	@ tmp203, MEM[(volatile long unsigned int *)1109459344B]
 3107              	@ main.c:1082: 					UaPutK("\r\n");
 3108 0120 FFF7FEFF 		bl	UaPutK	@
 3109              	@ main.c:1084: 					break;
 3110 0124 95E7     		b	.L227	@
 3111              	.L248:
 3112 0126 00BF     		.align	2
 3113              	.L247:
 3114 0128 00080140 		.word	1073809408
 3115 012c 9C012142 		.word	1109459356
 3116 0130 94012142 		.word	1109459348
 3117 0134 CC000000 		.word	.LC50
 3118 0138 00000000 		.word	.LC43
 3119 013c 0C000000 		.word	.LC44
 3120 0140 90012142 		.word	1109459344
 3121 0144 18000000 		.word	.LC45
 3122 0148 1C000000 		.word	.LC46
 3123 014c 54000000 		.word	.LC47
 3124 0150 74000000 		.word	.LC48
 3125 0154 94000000 		.word	.LC49
 3126 0158 18012142 		.word	1109459224
 3127 015c 04000000 		.word	.LC13
 3128 0160 00000000 		.word	p_Fifo1
 3129              		.size	ili9486, .-ili9486
 3130              		.section	.text.wiznet5500,"ax",%progbits
 3131              		.align	1
 3132              		.p2align 2,,3
 3133              		.global	wiznet5500
 3134              		.syntax unified
 3135              		.thumb
ARM GAS  /tmp/ccjvICQi.s 			page 56


 3136              		.thumb_func
 3137              		.fpu softvfp
 3138              		.type	wiznet5500, %function
 3139              	wiznet5500:
 3140              		@ args = 0, pretend = 0, frame = 8
 3141              		@ frame_needed = 0, uses_anonymous_args = 0
 3142 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 3143 0004 82B0     		sub	sp, sp, #8	@,,
 3144              	@ main.c:1105: 	SPI1_init_();
 3145 0006 FFF7FEFF 		bl	SPI1_init_	@
 3146              	@ main.c:1107: 	GPIOB->CRL = (GPIOB->CRL & 0xffffff0f) | 0x00000010;	
 3147 000a 1A49     		ldr	r1, .L256	@ tmp130,
 3148              	@ main.c:1108: 	GPIOC->CRH = (GPIOC->CRH & 0xf0ffffff) | 0x01000000;	// LED Blue  PC14
 3149 000c 1A4A     		ldr	r2, .L256+4	@ tmp133,
 3150              	@ main.c:1107: 	GPIOB->CRL = (GPIOB->CRL & 0xffffff0f) | 0x00000010;	
 3151 000e 0B68     		ldr	r3, [r1]	@ _2, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 3152              	@ main.c:1181: 			if(flag_9);
 3153 0010 1A4F     		ldr	r7, .L256+8	@ tmp137,
 3154              	@ main.c:1107: 	GPIOB->CRL = (GPIOB->CRL & 0xffffff0f) | 0x00000010;	
 3155 0012 23F0F003 		bic	r3, r3, #240	@ tmp131, _2,
 3156 0016 43F01003 		orr	r3, r3, #16	@ _5, tmp131,
 3157 001a 0B60     		str	r3, [r1]	@ _5, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 3158              	@ main.c:1108: 	GPIOC->CRH = (GPIOC->CRH & 0xf0ffffff) | 0x01000000;	// LED Blue  PC14
 3159 001c 5368     		ldr	r3, [r2, #4]	@ _7, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 3160              	@ main.c:1181: 			if(flag_9);
 3161 001e 7F01     		lsls	r7, r7, #5	@ tmp138, tmp137,
 3162              	@ main.c:1108: 	GPIOC->CRH = (GPIOC->CRH & 0xf0ffffff) | 0x01000000;	// LED Blue  PC14
 3163 0020 23F07063 		bic	r3, r3, #251658240	@ tmp134, _7,
 3164 0024 43F08073 		orr	r3, r3, #16777216	@ _9, tmp134,
 3165 0028 5360     		str	r3, [r2, #4]	@ _9, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 3166              	@ main.c:1110: 	DHT_Init();
 3167 002a FFF7FEFF 		bl	DHT_Init	@
 3168 002e 144C     		ldr	r4, .L256+12	@ tmp150,
 3169              	@ main.c:1165: 		if(STCLK_MS*1000  < (trg0 - SysTick->VAL)){
 3170 0030 144D     		ldr	r5, .L256+16	@ tmp142,
 3171              	@ main.c:1168: 			if (!(DHT_read( &AMh, &AMt,1,&AM2302_pin)) ){		// AM2302 read T & H
 3172 0032 DFF85C80 		ldr	r8, .L256+28	@ tmp153,
 3173              	@ main.c:1171: 			LED^=1;
 3174 0036 144E     		ldr	r6, .L256+20	@ tmp148,
 3175              	@ main.c:1181: 			if(flag_9);
 3176 0038 2437     		adds	r7, r7, #36	@ _20, tmp138,
 3177              	.L251:
 3178              	@ main.c:1165: 		if(STCLK_MS*1000  < (trg0 - SysTick->VAL)){
 3179 003a 1449     		ldr	r1, .L256+24	@ tmp140,
 3180              	.L250:
 3181 003c 2368     		ldr	r3, [r4]	@ trg0.123_10, trg0
 3182 003e 8A68     		ldr	r2, [r1, #8]	@ _11, MEM[(struct SysTick_Type *)3758153744B].VAL
 3183 0040 9B1A     		subs	r3, r3, r2	@ tmp141, trg0.123_10, _11
 3184 0042 AB42     		cmp	r3, r5	@ tmp141, tmp142
 3185 0044 FAD9     		bls	.L250	@,
 3186              	@ main.c:1166: 			trg0 = SysTick->VAL;
 3187 0046 D1F808C0 		ldr	ip, [r1, #8]	@ _13, MEM[(struct SysTick_Type *)3758153744B].VAL
 3188              	@ main.c:1168: 			if (!(DHT_read( &AMh, &AMt,1,&AM2302_pin)) ){		// AM2302 read T & H
 3189 004a 4346     		mov	r3, r8	@, tmp153
 3190 004c 0122     		movs	r2, #1	@,
 3191 004e 0DF10601 		add	r1, sp, #6	@ tmp154,,
 3192 0052 01A8     		add	r0, sp, #4	@ tmp155,,
ARM GAS  /tmp/ccjvICQi.s 			page 57


 3193              	@ main.c:1166: 			trg0 = SysTick->VAL;
 3194 0054 C4F800C0 		str	ip, [r4]	@ _13, trg0
 3195              	@ main.c:1168: 			if (!(DHT_read( &AMh, &AMt,1,&AM2302_pin)) ){		// AM2302 read T & H
 3196 0058 FFF7FEFF 		bl	DHT_read	@
 3197              	@ main.c:1171: 			LED^=1;
 3198 005c 3368     		ldr	r3, [r6]	@ _14, MEM[(volatile long unsigned int *)1109524916B]
 3199 005e 83F00103 		eor	r3, r3, #1	@ _15, _14,
 3200 0062 3360     		str	r3, [r6]	@ _15, MEM[(volatile long unsigned int *)1109524916B]
 3201              	@ main.c:1181: 			if(flag_9);
 3202 0064 3B68     		ldr	r3, [r7]	@ _21, *_20
 3203 0066 002B     		cmp	r3, #0	@ _21
 3204 0068 E7D1     		bne	.L251	@
 3205              	@ main.c:1185: 			flag_9 ^=1;
 3206 006a 3B68     		ldr	r3, [r7]	@ _22, *_20
 3207 006c 83F00103 		eor	r3, r3, #1	@ _23, _22,
 3208 0070 3B60     		str	r3, [r7]	@ _23, *_20
 3209 0072 E2E7     		b	.L251	@
 3210              	.L257:
 3211              		.align	2
 3212              	.L256:
 3213 0074 000C0140 		.word	1073810432
 3214 0078 00100140 		.word	1073811456
 3215 007c 00001001 		.word	.LANCHOR18+17825792
 3216 0080 00000000 		.word	trg0
 3217 0084 40548900 		.word	9000000
 3218 0088 B4012242 		.word	1109524916
 3219 008c 10E000E0 		.word	-536813552
 3220 0090 3C012142 		.word	1109459260
 3221              		.size	wiznet5500, .-wiznet5500
 3222              		.section	.text.uv_meter,"ax",%progbits
 3223              		.align	1
 3224              		.p2align 2,,3
 3225              		.global	uv_meter
 3226              		.syntax unified
 3227              		.thumb
 3228              		.thumb_func
 3229              		.fpu softvfp
 3230              		.type	uv_meter, %function
 3231              	uv_meter:
 3232              		@ args = 0, pretend = 0, frame = 264
 3233              		@ frame_needed = 0, uses_anonymous_args = 0
 3234 0000 F0B5     		push	{r4, r5, r6, r7, lr}	@
 3235              	@ main.c:1199: 		PB10_o = 1;
 3236 0002 0124     		movs	r4, #1	@ tmp126,
 3237              	@ main.c:1197: 		GPIOA->CRL = (GPIOA->CRL & 0x000fffff) | 0xaa000000; // ADC12_IN5		
 3238 0004 1C4A     		ldr	r2, .L267	@ tmp121,
 3239              	@ main.c:1199: 		PB10_o = 1;
 3240 0006 1D48     		ldr	r0, .L267+4	@ tmp125,
 3241              	@ main.c:1197: 		GPIOA->CRL = (GPIOA->CRL & 0x000fffff) | 0xaa000000; // ADC12_IN5		
 3242 0008 1368     		ldr	r3, [r2]	@ _2, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 3243              	@ main.c:1200: 		LED = 1;
 3244 000a 1D49     		ldr	r1, .L267+8	@ tmp127,
 3245              	@ main.c:1197: 		GPIOA->CRL = (GPIOA->CRL & 0x000fffff) | 0xaa000000; // ADC12_IN5		
 3246 000c C3F31303 		ubfx	r3, r3, #0, #20	@ tmp122, _2,,
 3247 0010 43F02A43 		orr	r3, r3, #-1442840576	@ _4, tmp122,
 3248 0014 1360     		str	r3, [r2]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 3249              	@ main.c:1192: void uv_meter(void)			{
ARM GAS  /tmp/ccjvICQi.s 			page 58


 3250 0016 C3B0     		sub	sp, sp, #268	@,,
 3251              	@ main.c:1199: 		PB10_o = 1;
 3252 0018 0460     		str	r4, [r0]	@ tmp126, MEM[(volatile long unsigned int *)1109492136B]
 3253              	@ main.c:1200: 		LED = 1;
 3254 001a 0C60     		str	r4, [r1]	@ tmp126, MEM[(volatile long unsigned int *)1109524916B]
 3255              	@ main.c:1201: 		I2C2_init();
 3256 001c FFF7FEFF 		bl	I2C2_init	@
 3257              	@ main.c:1208: 		ADC1->SQR3 = ( 5<<0*5 );		//(channel<<sequence*5) sequence=0..5   
 3258 0020 0527     		movs	r7, #5	@ tmp140,
 3259              	@ main.c:5337: 		RCC_APB2RSTR_ADC1RST_bb = 0;
 3260 0022 0022     		movs	r2, #0	@ tmp136,
 3261              	@ main.c:1209: 		ADC1->SMPR2 = (4<<5*3 );
 3262 0024 4FF40036 		mov	r6, #131072	@ tmp142,
 3263              	@ main.c:1210: 		ADC1->CR1 = ADC_CR1_SCAN;			// multi channel mode		
 3264 0028 4FF48070 		mov	r0, #256	@ tmp144,
 3265              	@ main.c:5334: 		RCC->APB2ENR   |= RCC_APB2ENR_ADC1EN;	// enable clock for ADC1
 3266 002c 154B     		ldr	r3, .L267+12	@ tmp129,
 3267              	@ main.c:1228: 			b=0;
 3268 002e 1546     		mov	r5, r2	@ tmp153, tmp136
 3269              	@ main.c:5334: 		RCC->APB2ENR   |= RCC_APB2ENR_ADC1EN;	// enable clock for ADC1
 3270 0030 9969     		ldr	r1, [r3, #24]	@ _22, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 3271 0032 41F40071 		orr	r1, r1, #512	@ _23, _22,
 3272 0036 9961     		str	r1, [r3, #24]	@ _23, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 3273              	@ main.c:5335: 		RCC->CFGR 		 |= RCC_CFGR_ADCPRE_DIV4;  // 2/4/6/8 str98
 3274 0038 5968     		ldr	r1, [r3, #4]	@ _24, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 3275 003a 41F48041 		orr	r1, r1, #16384	@ _25, _24,
 3276 003e 5960     		str	r1, [r3, #4]	@ _25, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 3277              	@ main.c:5336: 		RCC_APB2RSTR_ADC1RST_bb = 1;		// Reset ADC1
 3278 0040 1149     		ldr	r1, .L267+16	@ tmp133,
 3279              	@ main.c:1207: 		ADC1->SQR1 = ( 0<<20 	); 		//length and sequence 12..15 conversion 13-16 on channe
 3280 0042 A3F56C43 		sub	r3, r3, #60416	@ tmp137, tmp137,
 3281              	@ main.c:5336: 		RCC_APB2RSTR_ADC1RST_bb = 1;		// Reset ADC1
 3282 0046 0C60     		str	r4, [r1]	@ tmp126, MEM[(volatile long unsigned int *)1111622052B]
 3283              	@ main.c:5337: 		RCC_APB2RSTR_ADC1RST_bb = 0;
 3284 0048 0A60     		str	r2, [r1]	@ tmp136, MEM[(volatile long unsigned int *)1111622052B]
 3285              	@ main.c:1207: 		ADC1->SQR1 = ( 0<<20 	); 		//length and sequence 12..15 conversion 13-16 on channe
 3286 004a DA62     		str	r2, [r3, #44]	@ tmp136, MEM[(struct ADC_TypeDef *)1073816576B].SQR1
 3287              	@ main.c:1208: 		ADC1->SQR3 = ( 5<<0*5 );		//(channel<<sequence*5) sequence=0..5   
 3288 004c 5F63     		str	r7, [r3, #52]	@ tmp140, MEM[(struct ADC_TypeDef *)1073816576B].SQR3
 3289              	@ main.c:1209: 		ADC1->SMPR2 = (4<<5*3 );
 3290 004e 1E61     		str	r6, [r3, #16]	@ tmp142, MEM[(struct ADC_TypeDef *)1073816576B].SMPR2
 3291              	@ main.c:1210: 		ADC1->CR1 = ADC_CR1_SCAN;			// multi channel mode		
 3292 0050 5860     		str	r0, [r3, #4]	@ tmp144, MEM[(struct ADC_TypeDef *)1073816576B].CR1
 3293              	@ main.c:1211: 		ADC1->CR2 |= ADC_CR2_ADON ;		// On ADC
 3294 0052 9A68     		ldr	r2, [r3, #8]	@ _5, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 3295              	@ main.c:1219: 			while(PB0_i==0);
 3296 0054 0D4C     		ldr	r4, .L267+20	@ tmp147,
 3297              	@ main.c:1211: 		ADC1->CR2 |= ADC_CR2_ADON ;		// On ADC
 3298 0056 42F00102 		orr	r2, r2, #1	@ _6, _5,
 3299 005a 9A60     		str	r2, [r3, #8]	@ _6, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 3300              	.L259:
 3301              	@ main.c:1219: 			while(PB0_i==0);
 3302 005c 2368     		ldr	r3, [r4]	@ _7, MEM[(volatile long unsigned int *)1109491968B]
 3303 005e 002B     		cmp	r3, #0	@ _7
 3304 0060 FCD0     		beq	.L259	@
 3305              	@ main.c:1223: 			i2c2_scan(a,&b);
 3306 0062 0DF10701 		add	r1, sp, #7	@ tmp157,,
ARM GAS  /tmp/ccjvICQi.s 			page 59


 3307 0066 02A8     		add	r0, sp, #8	@ tmp158,,
 3308 0068 FFF7FEFF 		bl	i2c2_scan	@
 3309              	.L260:
 3310              	@ main.c:1227: 			while(PB0_i==1);
 3311 006c 2368     		ldr	r3, [r4]	@ _8, MEM[(volatile long unsigned int *)1109491968B]
 3312 006e 012B     		cmp	r3, #1	@ _8,
 3313 0070 FCD0     		beq	.L260	@,
 3314              	@ main.c:1228: 			b=0;
 3315 0072 8DF80750 		strb	r5, [sp, #7]	@ tmp153, b
 3316              	@ main.c:1219: 			while(PB0_i==0);
 3317 0076 F1E7     		b	.L259	@
 3318              	.L268:
 3319              		.align	2
 3320              	.L267:
 3321 0078 00080140 		.word	1073809408
 3322 007c A8812142 		.word	1109492136
 3323 0080 B4012242 		.word	1109524916
 3324 0084 00100240 		.word	1073876992
 3325 0088 A4014242 		.word	1111622052
 3326 008c 00812142 		.word	1109491968
 3327              		.size	uv_meter, .-uv_meter
 3328              		.section	.text.IRQLoraInit,"ax",%progbits
 3329              		.align	1
 3330              		.p2align 2,,3
 3331              		.global	IRQLoraInit
 3332              		.syntax unified
 3333              		.thumb
 3334              		.thumb_func
 3335              		.fpu softvfp
 3336              		.type	IRQLoraInit, %function
 3337              	IRQLoraInit:
 3338              		@ args = 0, pretend = 0, frame = 0
 3339              		@ frame_needed = 0, uses_anonymous_args = 0
 3340              		@ link register save eliminated.
 3341              	@ main.c:1268: 		AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI0_PB;		// Enable interrupt port PA0
 3342 0000 0123     		movs	r3, #1	@ tmp111,
 3343              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 3344 0002 4020     		movs	r0, #64	@ tmp119,
 3345              	@ main.c:1259: void IRQLoraInit(void)	{
 3346 0004 10B4     		push	{r4}	@
 3347              	@ main.c:1269: 		EXTI->PR   = EXTI_PR_PR0;			// Clear interupt request EXTI0
 3348 0006 054A     		ldr	r2, .L271	@ tmp112,
 3349              	@ main.c:1268: 		AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI0_PB;		// Enable interrupt port PA0
 3350 0008 054C     		ldr	r4, .L271+4	@ tmp110,
 3351              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 3352 000a 0649     		ldr	r1, .L271+8	@ tmp118,
 3353              	@ main.c:1268: 		AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI0_PB;		// Enable interrupt port PA0
 3354 000c A360     		str	r3, [r4, #8]	@ tmp111, MEM[(struct AFIO_TypeDef *)1073807360B].EXTICR
 3355              	@ main.c:1269: 		EXTI->PR   = EXTI_PR_PR0;			// Clear interupt request EXTI0
 3356 000e 5361     		str	r3, [r2, #20]	@ tmp111, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 3357              	@ main.c:1274: 	}
 3358 0010 10BC     		pop	{r4}	@
 3359              	@ main.c:1270: 		EXTI->RTSR 	 = EXTI_RTSR_TR0;
 3360 0012 9360     		str	r3, [r2, #8]	@ tmp111, MEM[(struct EXTI_TypeDef *)1073808384B].RTSR
 3361              	@ main.c:1272: 		EXTI->IMR  =  EXTI_IMR_MR0;		// Interrupt mask register EXTI_IMR
 3362 0014 1360     		str	r3, [r2]	@ tmp111, MEM[(struct EXTI_TypeDef *)1073808384B].IMR
 3363              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
ARM GAS  /tmp/ccjvICQi.s 			page 60


 3364 0016 0860     		str	r0, [r1]	@ tmp119, MEM[(struct NVIC_Type *)3758153984B].ISER
 3365              	@ main.c:1274: 	}
 3366 0018 7047     		bx	lr	@
 3367              	.L272:
 3368 001a 00BF     		.align	2
 3369              	.L271:
 3370 001c 00040140 		.word	1073808384
 3371 0020 00000140 		.word	1073807360
 3372 0024 00E100E0 		.word	-536813312
 3373              		.size	IRQLoraInit, .-IRQLoraInit
 3374              		.section	.text.LoRaRX,"ax",%progbits
 3375              		.align	1
 3376              		.p2align 2,,3
 3377              		.global	LoRaRX
 3378              		.syntax unified
 3379              		.thumb
 3380              		.thumb_func
 3381              		.fpu softvfp
 3382              		.type	LoRaRX, %function
 3383              	LoRaRX:
 3384              		@ args = 0, pretend = 0, frame = 80
 3385              		@ frame_needed = 0, uses_anonymous_args = 0
 3386 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 3387              	@ main.c:1304: 		SX1278_begin(&SX1278_1, SX1278_433MHZ, SX1278_POWER_11DBM, SX1278_LORA_SF_7,SX1278
 3388 0004 0926     		movs	r6, #9	@ tmp180,
 3389 0006 0022     		movs	r2, #0	@,
 3390              	@ main.c:1294: 		GPIOA->CRL = (GPIOA->CRL & 0xfff00000) | 0x00044343;	//   PA2=MOSI, PA1=MISO, PA0=
 3391 0008 4E4C     		ldr	r4, .L283	@ tmp157,
 3392 000a 4F49     		ldr	r1, .L283+4	@ _3,
 3393 000c 2368     		ldr	r3, [r4]	@ _1, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 3394              	@ main.c:1295: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 3395 000e 4F48     		ldr	r0, .L283+8	@ tmp162,
 3396              	@ main.c:1294: 		GPIOA->CRL = (GPIOA->CRL & 0xfff00000) | 0x00044343;	//   PA2=MOSI, PA1=MISO, PA0=
 3397 0010 1B0D     		lsrs	r3, r3, #20	@ tmp158, _1,
 3398 0012 1B05     		lsls	r3, r3, #20	@ tmp158, tmp158,
 3399 0014 1943     		orrs	r1, r1, r3	@, _3, _3, tmp158
 3400 0016 2160     		str	r1, [r4]	@ _3, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 3401              	@ main.c:1295: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 3402 0018 4368     		ldr	r3, [r0, #4]	@ _4, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 3403              	@ main.c:1296: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 2); 
 3404 001a 4D4F     		ldr	r7, .L283+12	@ tmp244,
 3405              	@ main.c:1295: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 3406 001c 23F0FF03 		bic	r3, r3, #255	@ tmp163, _4,
 3407              	@ main.c:1275: void LoRaRX(void)				{
 3408 0020 97B0     		sub	sp, sp, #92	@,,
 3409              	@ main.c:1295: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 3410 0022 43F03303 		orr	r3, r3, #51	@ _6, tmp163,
 3411              	@ main.c:1297: 		SX1278_hw1.miso = (u32 *)m_BITBAND_PERIPH(&GPIOA->IDR, 1); 
 3412 0026 4B4C     		ldr	r4, .L283+16	@ tmp168,
 3413              	@ main.c:1295: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 3414 0028 4360     		str	r3, [r0, #4]	@ _6, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 3415              	@ main.c:1303: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 3416 002a 4B4D     		ldr	r5, .L283+20	@ tmp177,
 3417              	@ main.c:1304: 		SX1278_begin(&SX1278_1, SX1278_433MHZ, SX1278_POWER_11DBM, SX1278_LORA_SF_7,SX1278
 3418 002c 0096     		str	r6, [sp]	@ tmp180,
 3419              	@ main.c:1298: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 0); 
 3420 002e DFF844E1 		ldr	lr, .L283+48	@ tmp170,
ARM GAS  /tmp/ccjvICQi.s 			page 61


 3421              	@ main.c:1299: 		SX1278_hw1.nss  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 8); 
 3422 0032 DFF844C1 		ldr	ip, .L283+52	@ tmp172,
 3423              	@ main.c:1296: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 2); 
 3424 0036 DFF84481 		ldr	r8, .L283+56	@ tmp166,
 3425              	@ main.c:1300: 		SX1278_hw1.rst  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 9); 
 3426 003a 484E     		ldr	r6, .L283+24	@ tmp174,
 3427              	@ main.c:1297: 		SX1278_hw1.miso = (u32 *)m_BITBAND_PERIPH(&GPIOA->IDR, 1); 
 3428 003c 7C60     		str	r4, [r7, #4]	@ tmp168, SX1278_hw1.miso
 3429              	@ main.c:1301: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 1); 
 3430 003e 04F50044 		add	r4, r4, #32768	@ tmp176, tmp176,
 3431              	@ main.c:1304: 		SX1278_begin(&SX1278_1, SX1278_433MHZ, SX1278_POWER_11DBM, SX1278_LORA_SF_7,SX1278
 3432 0042 1146     		mov	r1, r2	@,
 3433 0044 0123     		movs	r3, #1	@,
 3434              	@ main.c:1300: 		SX1278_hw1.rst  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 9); 
 3435 0046 C7E903C6 		strd	ip, r6, [r7, #12]	@ tmp172, tmp174, tmp244,
 3436              	@ main.c:1304: 		SX1278_begin(&SX1278_1, SX1278_433MHZ, SX1278_POWER_11DBM, SX1278_LORA_SF_7,SX1278
 3437 004a 2846     		mov	r0, r5	@, tmp177
 3438              	@ main.c:1296: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 2); 
 3439 004c C7F80080 		str	r8, [r7]	@ tmp166, SX1278_hw1.mosi
 3440              	@ main.c:1298: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 0); 
 3441 0050 C7F808E0 		str	lr, [r7, #8]	@ tmp170, SX1278_hw1.sck
 3442              	@ main.c:1301: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 1); 
 3443 0054 7C61     		str	r4, [r7, #20]	@ tmp176, SX1278_hw1.dio0
 3444              	@ main.c:1303: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 3445 0056 2F60     		str	r7, [r5]	@ tmp244, SX1278_1.hw
 3446              	@ main.c:1304: 		SX1278_begin(&SX1278_1, SX1278_433MHZ, SX1278_POWER_11DBM, SX1278_LORA_SF_7,SX1278
 3447 0058 FFF7FEFF 		bl	SX1278_begin	@
 3448              	@ main.c:1311: 		ret = SX1278_LoRaEntryRx(&SX1278_1, 7, 2000);
 3449 005c 4FF4FA62 		mov	r2, #2000	@,
 3450 0060 2846     		mov	r0, r5	@, tmp177
 3451 0062 0721     		movs	r1, #7	@,
 3452 0064 FFF7FEFF 		bl	SX1278_LoRaEntryRx	@
 3453              	@ main.c:1335: 		flag_10=0;
 3454 0068 0022     		movs	r2, #0	@ tmp187,
 3455              	@ main.c:1367: 				SX1278_LoRaRx(&SX1278_1);  // Odczyt danych do buforów
 3456 006a A946     		mov	r9, r5	@ tmp245, tmp177
 3457              	@ main.c:1328: 		trg1  = SysTick->VAL;
 3458 006c 3C4B     		ldr	r3, .L283+28	@ tmp182,
 3459              	@ main.c:1335: 		flag_10=0;
 3460 006e 3D4C     		ldr	r4, .L283+32	@ tmp185,
 3461              	@ main.c:1425: 					trg1  = SysTick->VAL;
 3462 0070 9A46     		mov	r10, r3	@ tmp247, tmp182
 3463              	@ main.c:1328: 		trg1  = SysTick->VAL;
 3464 0072 3D4E     		ldr	r6, .L283+36	@ tmp243,
 3465 0074 9B68     		ldr	r3, [r3, #8]	@ _7, MEM[(struct SysTick_Type *)3758153744B].VAL
 3466              	@ main.c:1335: 		flag_10=0;
 3467 0076 6401     		lsls	r4, r4, #5	@ tmp186, tmp185,
 3468              	@ main.c:1424: 					LED = 0;
 3469 0078 DFF804B1 		ldr	fp, .L283+60	@ tmp246,
 3470              	@ main.c:1328: 		trg1  = SysTick->VAL;
 3471 007c 3360     		str	r3, [r6]	@ _7, trg1
 3472 007e 05F10A08 		add	r8, r5, #10	@ tmp242, tmp177,
 3473              	@ main.c:1335: 		flag_10=0;
 3474 0082 A262     		str	r2, [r4, #40]	@ tmp187, *_12
 3475 0084 2834     		adds	r4, r4, #40	@ _12, tmp186,
 3476              	.L274:
 3477              	@ main.c:1359: 			if( (flag_10==0) && *SX1278_hw1.dio0==1 )  {
ARM GAS  /tmp/ccjvICQi.s 			page 62


 3478 0086 2568     		ldr	r5, [r4]	@ _25, *_12
 3479 0088 1DB9     		cbnz	r5, .L275	@ _25,
 3480              	@ main.c:1359: 			if( (flag_10==0) && *SX1278_hw1.dio0==1 )  {
 3481 008a 7B69     		ldr	r3, [r7, #20]	@ _26, SX1278_hw1.dio0
 3482 008c 1B68     		ldr	r3, [r3]	@ _27, *_26
 3483 008e 012B     		cmp	r3, #1	@ _27,
 3484 0090 1DD0     		beq	.L282	@,
 3485              	.L275:
 3486              	@ main.c:1430: 			if(flag_10 && (*SX1278_hw1.dio0)==0 ) { flag_10=0; }
 3487 0092 2368     		ldr	r3, [r4]	@ _49, *_12
 3488              	@ main.c:1432: 			if((STCLK_MS*300 < (trg1 - SysTick->VAL)) && LED==0){	
 3489 0094 354A     		ldr	r2, .L283+40	@ tmp235,
 3490              	@ main.c:1430: 			if(flag_10 && (*SX1278_hw1.dio0)==0 ) { flag_10=0; }
 3491 0096 1BB1     		cbz	r3, .L276	@ _49,
 3492              	@ main.c:1430: 			if(flag_10 && (*SX1278_hw1.dio0)==0 ) { flag_10=0; }
 3493 0098 7B69     		ldr	r3, [r7, #20]	@ _50, SX1278_hw1.dio0
 3494 009a 1B68     		ldr	r3, [r3]	@ _51, *_50
 3495 009c 03B9     		cbnz	r3, .L276	@ _51,
 3496              	@ main.c:1430: 			if(flag_10 && (*SX1278_hw1.dio0)==0 ) { flag_10=0; }
 3497 009e 2360     		str	r3, [r4]	@ _51, *_12
 3498              	.L276:
 3499              	@ main.c:1432: 			if((STCLK_MS*300 < (trg1 - SysTick->VAL)) && LED==0){	
 3500 00a0 3368     		ldr	r3, [r6]	@ trg1.135_52, trg1
 3501 00a2 DAF80810 		ldr	r1, [r10, #8]	@ _53, MEM[(struct SysTick_Type *)3758153744B].VAL
 3502 00a6 5B1A     		subs	r3, r3, r1	@ tmp234, trg1.135_52, _53
 3503 00a8 9342     		cmp	r3, r2	@ tmp234, tmp235
 3504 00aa ECD9     		bls	.L274	@,
 3505              	@ main.c:1432: 			if((STCLK_MS*300 < (trg1 - SysTick->VAL)) && LED==0){	
 3506 00ac DBF80030 		ldr	r3, [fp]	@ _55, MEM[(volatile long unsigned int *)1109524916B]
 3507 00b0 002B     		cmp	r3, #0	@ _55
 3508 00b2 E8D1     		bne	.L274	@
 3509              	@ main.c:1435: 				LED = 1;
 3510 00b4 0123     		movs	r3, #1	@ tmp240,
 3511              	@ main.c:1433: 					trg1  = SysTick->VAL;
 3512 00b6 DAF80820 		ldr	r2, [r10, #8]	@ _56, MEM[(struct SysTick_Type *)3758153744B].VAL
 3513 00ba 3260     		str	r2, [r6]	@ _56, trg1
 3514              	@ main.c:1435: 				LED = 1;
 3515 00bc CBF80030 		str	r3, [fp]	@ tmp240, MEM[(volatile long unsigned int *)1109524916B]
 3516              	@ main.c:1359: 			if( (flag_10==0) && *SX1278_hw1.dio0==1 )  {
 3517 00c0 2568     		ldr	r5, [r4]	@ _25, *_12
 3518 00c2 002D     		cmp	r5, #0	@ _25
 3519 00c4 E5D1     		bne	.L275	@
 3520 00c6 7B69     		ldr	r3, [r7, #20]	@ _26, SX1278_hw1.dio0
 3521 00c8 1B68     		ldr	r3, [r3]	@ _27, *_26
 3522 00ca 012B     		cmp	r3, #1	@ _27,
 3523 00cc E1D1     		bne	.L275	@,
 3524              	.L282:
 3525              	@ main.c:1367: 				SX1278_LoRaRx(&SX1278_1);  // Odczyt danych do buforów
 3526 00ce 4846     		mov	r0, r9	@, tmp245
 3527 00d0 0593     		str	r3, [sp, #20]	@ _27, %sfp
 3528 00d2 FFF7FEFF 		bl	SX1278_LoRaRx	@
 3529              	@ main.c:1377: 				prssi = SX1278_SPIRead(&SX1278_1, LR_RegPktRssiValue)-164;
 3530 00d6 1A21     		movs	r1, #26	@,
 3531 00d8 4846     		mov	r0, r9	@, tmp245
 3532 00da FFF7FEFF 		bl	SX1278_SPIRead	@
 3533              	@ main.c:1384: 				memcpy(buf_rx, SX1278_1.rxBuffer, 7);
 3534 00de B8F80420 		ldrh	r2, [r8, #4]	@ unaligned	@ tmp198, MEM[(void *)&SX1278_1 + 10B]
ARM GAS  /tmp/ccjvICQi.s 			page 63


 3535 00e2 D8F80000 		ldr	r0, [r8]	@ unaligned	@, MEM[(void *)&SX1278_1 + 10B]
 3536 00e6 ADF81C20 		strh	r2, [sp, #28]	@ unaligned	@ tmp198, MEM[(void *)&buf_rx]
 3537              	@ main.c:1391: 				Cnt= (s16)(buf_rx[4]+(buf_rx[5]<<8));
 3538 00ea 9DF81D10 		ldrb	r1, [sp, #29]	@ zero_extendqisi2	@ buf_rx, buf_rx
 3539 00ee 9DF81C20 		ldrb	r2, [sp, #28]	@ zero_extendqisi2	@ buf_rx, buf_rx
 3540              	@ main.c:1384: 				memcpy(buf_rx, SX1278_1.rxBuffer, 7);
 3541 00f2 98F806C0 		ldrb	ip, [r8, #6]	@ zero_extendqisi2	@ MEM[(void *)&SX1278_1 + 10B], MEM[(void *)&SX1278_1 + 10B]
 3542              	@ main.c:1391: 				Cnt= (s16)(buf_rx[4]+(buf_rx[5]<<8));
 3543 00f6 02EB0122 		add	r2, r2, r1, lsl #8	@ tmp215, buf_rx, buf_rx,
 3544 00fa 92B2     		uxth	r2, r2	@ Cnt, tmp215
 3545              	@ main.c:1390: 				t2 = (s16)(buf_rx[2]+(buf_rx[3]<<8));
 3546 00fc 0114     		asrs	r1, r0, #16	@ t2,,
 3547              	@ main.c:1384: 				memcpy(buf_rx, SX1278_1.rxBuffer, 7);
 3548 00fe 0690     		str	r0, [sp, #24]	@, MEM[(void *)&buf_rx]
 3549              	@ main.c:1398: 					sint2uart(t1);	//UaPutK("  ");
 3550 0100 00B2     		sxth	r0, r0	@,
 3551              	@ main.c:1384: 				memcpy(buf_rx, SX1278_1.rxBuffer, 7);
 3552 0102 8DF81EC0 		strb	ip, [sp, #30]	@ MEM[(void *)&SX1278_1 + 10B], MEM[(void *)&buf_rx]
 3553              	@ main.c:1391: 				Cnt= (s16)(buf_rx[4]+(buf_rx[5]<<8));
 3554 0106 0392     		str	r2, [sp, #12]	@ Cnt, %sfp
 3555              	@ main.c:1390: 				t2 = (s16)(buf_rx[2]+(buf_rx[3]<<8));
 3556 0108 0491     		str	r1, [sp, #16]	@ t2, %sfp
 3557              	@ main.c:1383: 				buf_rx[7] = 0;
 3558 010a 8DF81F50 		strb	r5, [sp, #31]	@ _25, buf_rx
 3559              	@ main.c:1398: 					sint2uart(t1);	//UaPutK("  ");
 3560 010e FFF7FEFF 		bl	sint2uart	@
 3561              	@ main.c:1399: 					UaPutC(',');					
 3562 0112 2C20     		movs	r0, #44	@,
 3563 0114 FFF7FEFF 		bl	UaPutC	@
 3564              	@ main.c:1400: 					sint2uart(t2);	//UaPutK("  ");
 3565 0118 0499     		ldr	r1, [sp, #16]	@ t2, %sfp
 3566 011a 0846     		mov	r0, r1	@, t2
 3567 011c FFF7FEFF 		bl	sint2uart	@
 3568              	@ main.c:1401: 					UaPutC(',');					
 3569 0120 2C20     		movs	r0, #44	@,
 3570 0122 FFF7FEFF 		bl	UaPutC	@
 3571              	@ main.c:1402: 					sint2uart(Cnt);	//UaPutK("  ");
 3572 0126 039A     		ldr	r2, [sp, #12]	@ Cnt, %sfp
 3573 0128 1046     		mov	r0, r2	@, Cnt
 3574 012a FFF7FEFF 		bl	sint2uart	@
 3575              	@ main.c:1403: 					UaPutS("\n");					
 3576 012e 1048     		ldr	r0, .L283+44	@,
 3577 0130 FFF7FEFF 		bl	UaPutS	@
 3578              	@ main.c:1424: 					LED = 0;
 3579 0134 CBF80050 		str	r5, [fp]	@ _25, MEM[(volatile long unsigned int *)1109524916B]
 3580              	@ main.c:1425: 					trg1  = SysTick->VAL;
 3581 0138 DAF80820 		ldr	r2, [r10, #8]	@ _48, MEM[(struct SysTick_Type *)3758153744B].VAL
 3582              	@ main.c:1427: 				flag_10 = 1;
 3583 013c 059B     		ldr	r3, [sp, #20]	@ _27, %sfp
 3584              	@ main.c:1425: 					trg1  = SysTick->VAL;
 3585 013e 3260     		str	r2, [r6]	@ _48, trg1
 3586              	@ main.c:1427: 				flag_10 = 1;
 3587 0140 2360     		str	r3, [r4]	@ _27, *_12
 3588 0142 A6E7     		b	.L275	@
 3589              	.L284:
 3590              		.align	2
 3591              	.L283:
ARM GAS  /tmp/ccjvICQi.s 			page 64


 3592 0144 00080140 		.word	1073809408
 3593 0148 43430400 		.word	279363
 3594 014c 000C0140 		.word	1073810432
 3595 0150 00000000 		.word	.LANCHOR19
 3596 0154 04012142 		.word	1109459204
 3597 0158 00000000 		.word	.LANCHOR20
 3598 015c A4812142 		.word	1109492132
 3599 0160 10E000E0 		.word	-536813552
 3600 0164 00001001 		.word	.LANCHOR18+17825792
 3601 0168 00000000 		.word	trg1
 3602 016c E0322900 		.word	2700000
 3603 0170 00000000 		.word	.LC51
 3604 0174 80012142 		.word	1109459328
 3605 0178 A0812142 		.word	1109492128
 3606 017c 88012142 		.word	1109459336
 3607 0180 B4012242 		.word	1109524916
 3608              		.size	LoRaRX, .-LoRaRX
 3609              		.section	.text.LoRaRX1,"ax",%progbits
 3610              		.align	1
 3611              		.p2align 2,,3
 3612              		.global	LoRaRX1
 3613              		.syntax unified
 3614              		.thumb
 3615              		.thumb_func
 3616              		.fpu softvfp
 3617              		.type	LoRaRX1, %function
 3618              	LoRaRX1:
 3619              		@ args = 0, pretend = 0, frame = 24
 3620              		@ frame_needed = 0, uses_anonymous_args = 0
 3621              	@ main.c:1469: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3622 0000 0022     		movs	r2, #0	@,
 3623              	@ main.c:1440: void LoRaRX1(void)	{
 3624 0002 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 3625              	@ main.c:1450: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3626 0006 3021     		movs	r1, #48	@ tmp169,
 3627 0008 4FF00109 		mov	r9, #1	@ tmp166,
 3628              	@ main.c:1469: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3629 000c 4FF0090A 		mov	r10, #9	@ tmp192,
 3630              	@ main.c:1477: 		flag_9=0;
 3631 0010 1746     		mov	r7, r2	@ tmp197,
 3632              	@ main.c:1450: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3633 0012 DFF89082 		ldr	r8, .L311+108	@ tmp257,
 3634              	@ main.c:1451: 		LED=1;
 3635 0016 884D     		ldr	r5, .L311	@ tmp171,
 3636              	@ main.c:1450: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3637 0018 D8F80030 		ldr	r3, [r8]	@ p_Fifo1.136_1, p_Fifo1
 3638              	@ main.c:1454: 		GPIOB->CRH = (GPIOB->CRH & 0x0000ff00) | 0x43430033;	//   
 3639 001c 8748     		ldr	r0, .L311+4	@ tmp173,
 3640              	@ main.c:1450: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3641 001e A3F80490 		strh	r9, [r3, #4]	@ movhi	@ tmp166, p_Fifo1.136_1->rct
 3642 0022 A3F80290 		strh	r9, [r3, #2]	@ movhi	@ tmp166, p_Fifo1.136_1->rwi
 3643 0026 9971     		strb	r1, [r3, #6]	@ tmp169, p_Fifo1.136_1->rbuf
 3644              	@ main.c:1451: 		LED=1;
 3645 0028 C5F80090 		str	r9, [r5]	@ tmp166, MEM[(volatile long unsigned int *)1109524916B]
 3646              	@ main.c:1454: 		GPIOB->CRH = (GPIOB->CRH & 0x0000ff00) | 0x43430033;	//   
 3647 002c 4168     		ldr	r1, [r0, #4]	@ _6, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 3648 002e 844B     		ldr	r3, .L311+8	@ _9,
ARM GAS  /tmp/ccjvICQi.s 			page 65


 3649              	@ main.c:1455: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 12); 
 3650 0030 844E     		ldr	r6, .L311+12	@ tmp254,
 3651              	@ main.c:1454: 		GPIOB->CRH = (GPIOB->CRH & 0x0000ff00) | 0x43430033;	//   
 3652 0032 01F47F41 		and	r1, r1, #65280	@ tmp174, _6,
 3653              	@ main.c:1455: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 12); 
 3654 0036 DFF870C2 		ldr	ip, .L311+112	@ tmp178,
 3655              	@ main.c:1454: 		GPIOB->CRH = (GPIOB->CRH & 0x0000ff00) | 0x43430033;	//   
 3656 003a 0B43     		orrs	r3, r3, r1	@, _9, _9, tmp174
 3657              	@ main.c:1456: 		SX1278_hw1.miso = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 13); 
 3658 003c DFF86CE2 		ldr	lr, .L311+116	@ tmp180,
 3659              	@ main.c:1454: 		GPIOB->CRH = (GPIOB->CRH & 0x0000ff00) | 0x43430033;	//   
 3660 0040 4360     		str	r3, [r0, #4]	@ _9, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 3661              	@ main.c:1468: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 3662 0042 814C     		ldr	r4, .L311+16	@ tmp255,
 3663              	@ main.c:1455: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 12); 
 3664 0044 C6F800C0 		str	ip, [r6]	@ tmp178, SX1278_hw1.mosi
 3665              	@ main.c:1457: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 14); 
 3666 0048 0CF1080C 		add	ip, ip, #8	@ tmp182, tmp182,
 3667              	@ main.c:1440: void LoRaRX1(void)	{
 3668 004c 89B0     		sub	sp, sp, #36	@,,
 3669              	@ main.c:1457: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 14); 
 3670 004e C6E901EC 		strd	lr, ip, [r6, #4]	@ tmp180, tmp182, tmp254,
 3671              	@ main.c:1458: 		SX1278_hw1.nss  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 8); 
 3672 0052 0EF16C0E 		add	lr, lr, #108	@ tmp184, tmp184,
 3673              	@ main.c:1459: 		SX1278_hw1.rst  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 9); 
 3674 0056 ACF1140C 		sub	ip, ip, #20	@ tmp186, tmp186,
 3675 005a C6E903EC 		strd	lr, ip, [r6, #12]	@ tmp184, tmp186, tmp254,
 3676              	@ main.c:1469: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3677 005e 4B46     		mov	r3, r9	@, tmp166
 3678              	@ main.c:1460: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 15); 
 3679 0060 ACF1680C 		sub	ip, ip, #104	@ tmp188, tmp188,
 3680              	@ main.c:1469: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3681 0064 1146     		mov	r1, r2	@,
 3682 0066 CDF800A0 		str	r10, [sp]	@ tmp192,
 3683 006a 2046     		mov	r0, r4	@, tmp255
 3684              	@ main.c:1460: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 15); 
 3685 006c C6F814C0 		str	ip, [r6, #20]	@ tmp188, SX1278_hw1.dio0
 3686              	@ main.c:1569: 					LED ^= 1;
 3687 0070 0495     		str	r5, [sp, #16]	@ tmp171, %sfp
 3688              	@ main.c:1468: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 3689 0072 2660     		str	r6, [r4]	@ tmp254, SX1278_1.hw
 3690              	@ main.c:1469: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3691 0074 FFF7FEFF 		bl	SX1278_begin	@
 3692              	@ main.c:1470: 		SX1278_LoRaEntryRx(&SX1278_1, 64, 2000);
 3693 0078 4FF4FA62 		mov	r2, #2000	@,
 3694 007c 4021     		movs	r1, #64	@,
 3695 007e 2046     		mov	r0, r4	@, tmp255
 3696 0080 FFF7FEFF 		bl	SX1278_LoRaEntryRx	@
 3697              	@ main.c:1477: 		flag_9=0;
 3698 0084 714B     		ldr	r3, .L311+20	@ tmp195,
 3699              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 3700 0086 724A     		ldr	r2, .L311+24	@ tmp198,
 3701              	@ main.c:1477: 		flag_9=0;
 3702 0088 5B01     		lsls	r3, r3, #5	@ tmp196, tmp195,
 3703 008a 5F62     		str	r7, [r3, #36]	@ tmp197, *_14
 3704              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 3705 008c 9168     		ldr	r1, [r2, #8]	@ _126, MEM[(struct SysTick_Type *)3758153744B].VAL
ARM GAS  /tmp/ccjvICQi.s 			page 66


 3706 008e 714B     		ldr	r3, .L311+28	@ tmp199,
 3707              	@ main.c:1481: 		UaPutK(" Time=");		uint2uart(tim/TIM_US);			
 3708 0090 7148     		ldr	r0, .L311+32	@,
 3709              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 3710 0092 1960     		str	r1, [r3]	@ _126, Timt
 3711              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 3712 0094 1D68     		ldr	r5, [r3]	@ Timt.100_123, Timt
 3713 0096 9368     		ldr	r3, [r2, #8]	@ _124, MEM[(struct SysTick_Type *)3758153744B].VAL
 3714 0098 ED1A     		subs	r5, r5, r3	@ _125, Timt.100_123, _124
 3715 009a 0795     		str	r5, [sp, #28]	@ _125, MEM[(volatile u32 *)&tim]
 3716              	@ main.c:1481: 		UaPutK(" Time=");		uint2uart(tim/TIM_US);			
 3717 009c FFF7FEFF 		bl	UaPutK	@
 3718 00a0 6E48     		ldr	r0, .L311+36	@ tmp205,
 3719              	@ main.c:1465: 		sx[3]=SX1278_LORA_BW_500KHZ;
 3720 00a2 CDF80CA0 		str	r10, [sp, #12]	@ tmp192, %sfp
 3721              	@ main.c:1481: 		UaPutK(" Time=");		uint2uart(tim/TIM_US);			
 3722 00a6 A0FB0530 		umull	r3, r0, r0, r5	@ tmp267, tmp204, tmp205, _125
 3723 00aa 20FA09F0 		lsr	r0, r0, r9	@, tmp204,
 3724 00ae FFF7FEFF 		bl	uint2uart	@
 3725              	@ main.c:1466: 		sx[4]=10;
 3726 00b2 0A23     		movs	r3, #10	@ sx$4,
 3727              	@ main.c:1463: 		sx[1]=SX1278_POWER_11DBM;
 3728 00b4 BA46     		mov	r10, r7	@ sx$1, tmp197
 3729 00b6 6A4D     		ldr	r5, .L311+40	@ tmp253,
 3730              	@ main.c:1574: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){	
 3731 00b8 6A4F     		ldr	r7, .L311+44	@ tmp250,
 3732              	@ main.c:1466: 		sx[4]=10;
 3733 00ba 0593     		str	r3, [sp, #20]	@ sx$4, %sfp
 3734              	.L286:
 3735              	@ main.c:1489: 			if(p_Fifo1->rct){
 3736 00bc D8F80030 		ldr	r3, [r8]	@ p_Fifo1.142_16, p_Fifo1
 3737 00c0 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.142_16->rct
 3738 00c2 9BB2     		uxth	r3, r3	@ _17, p_Fifo1.142_16->rct
 3739 00c4 8BB9     		cbnz	r3, .L309	@ _17,
 3740              	.L287:
 3741              	@ main.c:1545: 			if( *SX1278_hw1.dio0 ){
 3742 00c6 7369     		ldr	r3, [r6, #20]	@ _34, SX1278_hw1.dio0
 3743 00c8 1B68     		ldr	r3, [r3]	@ _35, *_34
 3744 00ca 002B     		cmp	r3, #0	@ _35
 3745 00cc 43D1     		bne	.L310	@
 3746              	.L298:
 3747              	@ main.c:1574: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){	
 3748 00ce 604A     		ldr	r2, .L311+24	@ tmp248,
 3749 00d0 2B68     		ldr	r3, [r5]	@ trg0.145_45, trg0
 3750 00d2 9168     		ldr	r1, [r2, #8]	@ _47, MEM[(struct SysTick_Type *)3758153744B].VAL
 3751 00d4 5B1A     		subs	r3, r3, r1	@ tmp249, trg0.145_45, _47
 3752 00d6 BB42     		cmp	r3, r7	@ tmp249, tmp250
 3753 00d8 F0D9     		bls	.L286	@,
 3754              	@ main.c:1575: 				trg0  = SysTick->VAL;	
 3755 00da 9368     		ldr	r3, [r2, #8]	@ _50, MEM[(struct SysTick_Type *)3758153744B].VAL
 3756 00dc 2B60     		str	r3, [r5]	@ _50, trg0
 3757              	@ main.c:1489: 			if(p_Fifo1->rct){
 3758 00de D8F80030 		ldr	r3, [r8]	@ p_Fifo1.142_16, p_Fifo1
 3759 00e2 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.142_16->rct
 3760 00e4 9BB2     		uxth	r3, r3	@ _17, p_Fifo1.142_16->rct
 3761 00e6 002B     		cmp	r3, #0	@ _17
 3762 00e8 EDD0     		beq	.L287	@
ARM GAS  /tmp/ccjvICQi.s 			page 67


 3763              	.L309:
 3764              	@ main.c:1490: 				UART_getChar( (char*)&swh);
 3765 00ea 0DF11B00 		add	r0, sp, #27	@ tmp271,,
 3766 00ee FFF7FEFF 		bl	UART_getChar	@
 3767              	@ main.c:1492: 				switch (swh)	{
 3768 00f2 9DF81B30 		ldrb	r3, [sp, #27]	@ zero_extendqisi2	@ swh, swh
 3769 00f6 623B     		subs	r3, r3, #98	@ tmp211, swh,
 3770 00f8 112B     		cmp	r3, #17	@ tmp211,
 3771 00fa 17D8     		bhi	.L288	@
 3772 00fc DFE803F0 		tbb	[pc, r3]	@ tmp211
 3773              	.L290:
 3774 0100 53       		.byte	(.L289-.L290)/2
 3775 0101 16       		.byte	(.L288-.L290)/2
 3776 0102 45       		.byte	(.L291-.L290)/2
 3777 0103 16       		.byte	(.L288-.L290)/2
 3778 0104 16       		.byte	(.L288-.L290)/2
 3779 0105 16       		.byte	(.L288-.L290)/2
 3780 0106 16       		.byte	(.L288-.L290)/2
 3781 0107 16       		.byte	(.L288-.L290)/2
 3782 0108 16       		.byte	(.L288-.L290)/2
 3783 0109 16       		.byte	(.L288-.L290)/2
 3784 010a 16       		.byte	(.L288-.L290)/2
 3785 010b 16       		.byte	(.L288-.L290)/2
 3786 010c 16       		.byte	(.L288-.L290)/2
 3787 010d 16       		.byte	(.L288-.L290)/2
 3788 010e 74       		.byte	(.L292-.L290)/2
 3789 010f 61       		.byte	(.L293-.L290)/2
 3790 0110 82       		.byte	(.L294-.L290)/2
 3791 0111 09       		.byte	(.L295-.L290)/2
 3792              		.p2align 1
 3793              	.L295:
 3794              	@ main.c:1516: 					UaPutK("\r\n 0-6("); uint2uart(sx[2]);UaPutK(") SF=");					
 3795 0112 5548     		ldr	r0, .L311+48	@,
 3796 0114 FFF7FEFF 		bl	UaPutK	@
 3797 0118 4846     		mov	r0, r9	@, sx$2
 3798 011a FFF7FEFF 		bl	uint2uart	@
 3799 011e 5348     		ldr	r0, .L311+52	@,
 3800 0120 FFF7FEFF 		bl	UaPutK	@
 3801              	@ main.c:1517: 					sx[2] = UART_getNum();					
 3802 0124 FFF7FEFF 		bl	UART_getNum	@
 3803 0128 5FFA80F9 		uxtb	r9, r0	@ sx$2,
 3804              	.L288:
 3805              	@ main.c:1532: 				SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3806 012c 039B     		ldr	r3, [sp, #12]	@ sx$3, %sfp
 3807 012e 5246     		mov	r2, r10	@, sx$1
 3808 0130 0093     		str	r3, [sp]	@ sx$3,
 3809 0132 0021     		movs	r1, #0	@,
 3810 0134 4B46     		mov	r3, r9	@, sx$2
 3811 0136 2046     		mov	r0, r4	@, tmp260
 3812 0138 FFF7FEFF 		bl	SX1278_begin	@
 3813              	@ main.c:1533: 				SX1278_LoRaEntryRx(&SX1278_1, 64, 2000);
 3814 013c 4FF4FA62 		mov	r2, #2000	@,
 3815 0140 4021     		movs	r1, #64	@,
 3816 0142 2046     		mov	r0, r4	@, tmp260
 3817 0144 FFF7FEFF 		bl	SX1278_LoRaEntryRx	@
 3818              	@ main.c:1535: 				UaPutK("\r\n Menu > ");
 3819 0148 4948     		ldr	r0, .L311+56	@,
ARM GAS  /tmp/ccjvICQi.s 			page 68


 3820 014a FFF7FEFF 		bl	UaPutK	@
 3821              	@ main.c:1545: 			if( *SX1278_hw1.dio0 ){
 3822 014e 7369     		ldr	r3, [r6, #20]	@ _34, SX1278_hw1.dio0
 3823 0150 1B68     		ldr	r3, [r3]	@ _35, *_34
 3824 0152 002B     		cmp	r3, #0	@ _35
 3825 0154 BBD0     		beq	.L298	@
 3826              	.L310:
 3827              	@ main.c:1546: 				 message_length = SX1278_LoRaRxPacket(&SX1278_1);
 3828 0156 2046     		mov	r0, r4	@, tmp260
 3829 0158 FFF7FEFF 		bl	SX1278_LoRaRxPacket	@
 3830              	@ main.c:1547: 				if(message_length){
 3831 015c 0028     		cmp	r0, #0	@
 3832 015e B6D0     		beq	.L298	@
 3833              	@ main.c:1549: 					SX1278_read(&SX1278_1, (uint8_t *) buf_rx);
 3834 0160 4449     		ldr	r1, .L311+60	@,
 3835 0162 2046     		mov	r0, r4	@, tmp260
 3836 0164 FFF7FEFF 		bl	SX1278_read	@
 3837              	@ main.c:1550: 					UaPutK("\r\n prssi->");	
 3838 0168 4348     		ldr	r0, .L311+64	@,
 3839 016a FFF7FEFF 		bl	UaPutK	@
 3840              	@ main.c:1551: 					prssi = SX1278_SPIRead(&SX1278_1, LR_RegPktRssiValue)-164;
 3841 016e 1A21     		movs	r1, #26	@,
 3842 0170 2046     		mov	r0, r4	@, tmp260
 3843 0172 FFF7FEFF 		bl	SX1278_SPIRead	@
 3844 0176 A438     		subs	r0, r0, #164	@ tmp243,,
 3845              	@ main.c:1552: 					sint2uart(prssi);
 3846 0178 00B2     		sxth	r0, r0	@, tmp243
 3847 017a FFF7FEFF 		bl	sint2uart	@
 3848              	@ main.c:1569: 					LED ^= 1;
 3849 017e 049A     		ldr	r2, [sp, #16]	@ tmp261, %sfp
 3850 0180 1368     		ldr	r3, [r2]	@ _42, MEM[(volatile long unsigned int *)1109524916B]
 3851 0182 83F00103 		eor	r3, r3, #1	@ _44, _42,
 3852 0186 1360     		str	r3, [r2]	@ _44, MEM[(volatile long unsigned int *)1109524916B]
 3853 0188 A1E7     		b	.L298	@
 3854              	.L291:
 3855              	@ main.c:1524: 					UaPutK("\r\n sek("); uint2uart(sx[4]);UaPutK(") Delay=");					
 3856 018a 3C48     		ldr	r0, .L311+68	@,
 3857 018c FFF7FEFF 		bl	UaPutK	@
 3858 0190 0598     		ldr	r0, [sp, #20]	@, %sfp
 3859 0192 FFF7FEFF 		bl	uint2uart	@
 3860 0196 3A48     		ldr	r0, .L311+72	@,
 3861 0198 FFF7FEFF 		bl	UaPutK	@
 3862              	@ main.c:1525: 					sx[4] = UART_getNum();					
 3863 019c FFF7FEFF 		bl	UART_getNum	@
 3864 01a0 C3B2     		uxtb	r3, r0	@ sx$4,
 3865 01a2 0593     		str	r3, [sp, #20]	@ sx$4, %sfp
 3866              	@ main.c:1526: 					break;
 3867 01a4 C2E7     		b	.L288	@
 3868              	.L289:
 3869              	@ main.c:1520: 					UaPutK("\r\n 0-9("); uint2uart(sx[3]);UaPutK(") BW=");					
 3870 01a6 3748     		ldr	r0, .L311+76	@,
 3871 01a8 FFF7FEFF 		bl	UaPutK	@
 3872 01ac 0398     		ldr	r0, [sp, #12]	@, %sfp
 3873 01ae FFF7FEFF 		bl	uint2uart	@
 3874 01b2 3548     		ldr	r0, .L311+80	@,
 3875 01b4 FFF7FEFF 		bl	UaPutK	@
 3876              	@ main.c:1521: 					sx[3] = UART_getNum();					
ARM GAS  /tmp/ccjvICQi.s 			page 69


 3877 01b8 FFF7FEFF 		bl	UART_getNum	@
 3878 01bc C3B2     		uxtb	r3, r0	@ sx$3,
 3879 01be 0393     		str	r3, [sp, #12]	@ sx$3, %sfp
 3880              	@ main.c:1522: 					break;
 3881 01c0 B4E7     		b	.L288	@
 3882              	.L293:
 3883              	@ main.c:1497: 					UaPutK("\r\n");
 3884 01c2 3248     		ldr	r0, .L311+84	@,
 3885 01c4 FFF7FEFF 		bl	UaPutK	@
 3886 01c8 4FF0000B 		mov	fp, #0	@ ivtmp.497,
 3887              	.L296:
 3888              	@ main.c:1499: 						dat = SX1278_SPIRead(&SX1278_1, n);
 3889 01cc 5FFA8BF1 		uxtb	r1, fp	@, ivtmp.497
 3890 01d0 2046     		mov	r0, r4	@, tmp260
 3891 01d2 FFF7FEFF 		bl	SX1278_SPIRead	@
 3892 01d6 0BF1010B 		add	fp, fp, #1	@ ivtmp.497, ivtmp.497,
 3893              	@ main.c:1500: 						hex2uart(dat,2);
 3894 01da 0221     		movs	r1, #2	@,
 3895 01dc FFF7FEFF 		bl	hex2uart	@
 3896              	@ main.c:1498: 					for (u08 n=0;n<0x14;n++){
 3897 01e0 BBF1140F 		cmp	fp, #20	@ ivtmp.497,
 3898 01e4 F2D1     		bne	.L296	@,
 3899 01e6 A1E7     		b	.L288	@
 3900              	.L292:
 3901              	@ main.c:1512: 					UaPutK("\r\n 0-3("); uint2uart(sx[1]);UaPutK(") POWER=");					
 3902 01e8 2948     		ldr	r0, .L311+88	@,
 3903 01ea FFF7FEFF 		bl	UaPutK	@
 3904 01ee 5046     		mov	r0, r10	@, sx$1
 3905 01f0 FFF7FEFF 		bl	uint2uart	@
 3906 01f4 2748     		ldr	r0, .L311+92	@,
 3907 01f6 FFF7FEFF 		bl	UaPutK	@
 3908              	@ main.c:1513: 					sx[1] = UART_getNum();					
 3909 01fa FFF7FEFF 		bl	UART_getNum	@
 3910 01fe 5FFA80FA 		uxtb	r10, r0	@ sx$1,
 3911              	@ main.c:1514: 					break;
 3912 0202 93E7     		b	.L288	@
 3913              	.L294:
 3914              	@ main.c:1505: 					UaPutK("\r\n Read Reg1=0x");	reg=UART_getHex();
 3915 0204 2448     		ldr	r0, .L311+96	@,
 3916 0206 FFF7FEFF 		bl	UaPutK	@
 3917 020a FFF7FEFF 		bl	UART_getHex	@
 3918 020e 8346     		mov	fp, r0	@ _20,
 3919              	@ main.c:1506: 					UaPutK(" Reg1 0x");						hex2uart(reg,2);
 3920 0210 2248     		ldr	r0, .L311+100	@,
 3921 0212 5FFA8BFB 		uxtb	fp, fp	@ _20, _20
 3922 0216 FFF7FEFF 		bl	UaPutK	@
 3923 021a 5846     		mov	r0, fp	@, _20
 3924 021c 0221     		movs	r1, #2	@,
 3925 021e FFF7FEFF 		bl	hex2uart	@
 3926              	@ main.c:1507: 					UaPutK("= 0x");						
 3927 0222 1F48     		ldr	r0, .L311+104	@,
 3928 0224 FFF7FEFF 		bl	UaPutK	@
 3929              	@ main.c:1508: 					dat = SX1278_SPIRead(&SX1278_1, reg);
 3930 0228 5946     		mov	r1, fp	@, _20
 3931 022a 2046     		mov	r0, r4	@, tmp260
 3932 022c FFF7FEFF 		bl	SX1278_SPIRead	@
 3933              	@ main.c:1509: 					hex2uart(dat,2);
ARM GAS  /tmp/ccjvICQi.s 			page 70


 3934 0230 0221     		movs	r1, #2	@,
 3935 0232 FFF7FEFF 		bl	hex2uart	@
 3936              	@ main.c:1510: 					break;
 3937 0236 79E7     		b	.L288	@
 3938              	.L312:
 3939              		.align	2
 3940              	.L311:
 3941 0238 B4012242 		.word	1109524916
 3942 023c 000C0140 		.word	1073810432
 3943 0240 33004343 		.word	1128464435
 3944 0244 00000000 		.word	.LANCHOR21
 3945 0248 00000000 		.word	.LANCHOR22
 3946 024c 00001001 		.word	.LANCHOR18+17825792
 3947 0250 10E000E0 		.word	-536813552
 3948 0254 00000000 		.word	Timt
 3949 0258 00000000 		.word	.LC52
 3950 025c 398EE338 		.word	954437177
 3951 0260 00000000 		.word	trg0
 3952 0264 40548900 		.word	9000000
 3953 0268 40000000 		.word	.LC58
 3954 026c 48000000 		.word	.LC59
 3955 0270 74000000 		.word	.LC64
 3956 0274 00000000 		.word	.LANCHOR23
 3957 0278 80000000 		.word	.LC65
 3958 027c 60000000 		.word	.LC62
 3959 0280 68000000 		.word	.LC63
 3960 0284 50000000 		.word	.LC60
 3961 0288 58000000 		.word	.LC61
 3962 028c 04000000 		.word	.LC13
 3963 0290 2C000000 		.word	.LC56
 3964 0294 34000000 		.word	.LC57
 3965 0298 08000000 		.word	.LC53
 3966 029c 18000000 		.word	.LC54
 3967 02a0 24000000 		.word	.LC55
 3968 02a4 00000000 		.word	p_Fifo1
 3969 02a8 B0812142 		.word	1109492144
 3970 02ac 34812142 		.word	1109492020
 3971              		.size	LoRaRX1, .-LoRaRX1
 3972              		.section	.text.LoRaTX,"ax",%progbits
 3973              		.align	1
 3974              		.p2align 2,,3
 3975              		.global	LoRaTX
 3976              		.syntax unified
 3977              		.thumb
 3978              		.thumb_func
 3979              		.fpu softvfp
 3980              		.type	LoRaTX, %function
 3981              	LoRaTX:
 3982              		@ args = 0, pretend = 0, frame = 8
 3983              		@ frame_needed = 0, uses_anonymous_args = 0
 3984 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 3985              	@ main.c:5544: 		TIM3->CR1 = 0;
 3986 0004 0024     		movs	r4, #0	@ tmp160,
 3987              	@ main.c:5545: 		TIM3->PSC = (F_CPU/(1000000)) - 1;
 3988 0006 4FF04708 		mov	r8, #71	@ tmp163,
 3989              	@ main.c:5539: 		RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
 3990 000a 634F     		ldr	r7, .L318	@ tmp156,
ARM GAS  /tmp/ccjvICQi.s 			page 71


 3991              	@ main.c:1583: void LoRaTX(void)		{
 3992 000c 85B0     		sub	sp, sp, #20	@,,
 3993              	@ main.c:1602: 		RtcInit();
 3994 000e FFF7FEFF 		bl	RtcInit	@
 3995              	@ main.c:5539: 		RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
 3996 0012 FA69     		ldr	r2, [r7, #28]	@ _71, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 3997              	@ main.c:5544: 		TIM3->CR1 = 0;
 3998 0014 614B     		ldr	r3, .L318+4	@ tmp158,
 3999              	@ main.c:5539: 		RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
 4000 0016 42F00202 		orr	r2, r2, #2	@ _72, _71,
 4001 001a FA61     		str	r2, [r7, #28]	@ _72, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 4002              	@ main.c:5546: 		TIM3->ARR = TIM3_ARR - 1;
 4003 001c 4FF6FE7E 		movw	lr, #65534	@ tmp166,
 4004              	@ main.c:5544: 		TIM3->CR1 = 0;
 4005 0020 1C80     		strh	r4, [r3]	@ movhi	@ tmp160, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 4006              	@ main.c:5545: 		TIM3->PSC = (F_CPU/(1000000)) - 1;
 4007 0022 A3F82880 		strh	r8, [r3, #40]	@ movhi	@ tmp163, MEM[(struct TIM_TypeDef *)1073742848B].PSC
 4008              	@ main.c:5548: 		TIM3->DIER = TIM_DIER_UIE;
 4009 0026 4FF00108 		mov	r8, #1	@ movhi	@ tmp269,
 4010              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 4011 002a 4FF0005C 		mov	ip, #536870912	@ tmp181,
 4012              	@ main.c:1604: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 4013 002e 3025     		movs	r5, #48	@ tmp187,
 4014              	@ main.c:1623: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 4015 0030 0920     		movs	r0, #9	@ tmp212,
 4016              	@ main.c:5546: 		TIM3->ARR = TIM3_ARR - 1;
 4017 0032 A3F82CE0 		strh	lr, [r3, #44]	@ movhi	@ tmp166, MEM[(struct TIM_TypeDef *)1073742848B].ARR
 4018              	@ main.c:5548: 		TIM3->DIER = TIM_DIER_UIE;
 4019 0036 A3F80C80 		strh	r8, [r3, #12]	@ movhi	@ tmp269, MEM[(struct TIM_TypeDef *)1073742848B].DIER
 4020              	@ main.c:5549: 		TIM3->CR1  |= TIM_CR1_DIR;
 4021 003a 1A88     		ldrh	r2, [r3]	@, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 4022              	@ main.c:1604: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 4023 003c DFF88CE1 		ldr	lr, .L318+52	@ tmp182,
 4024              	@ main.c:5549: 		TIM3->CR1  |= TIM_CR1_DIR;
 4025 0040 42F01002 		orr	r2, r2, #16	@ _74, MEM[(struct TIM_TypeDef *)1073742848B].CR1,
 4026 0044 1A80     		strh	r2, [r3]	@ movhi	@ _74, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 4027              	@ main.c:5550: 		TIM3->CR1  |= TIM_CR1_CEN;
 4028 0046 1A88     		ldrh	r2, [r3]	@, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 4029              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 4030 0048 5549     		ldr	r1, .L318+8	@ tmp180,
 4031              	@ main.c:5550: 		TIM3->CR1  |= TIM_CR1_CEN;
 4032 004a 42F00102 		orr	r2, r2, #1	@ _76, MEM[(struct TIM_TypeDef *)1073742848B].CR1,
 4033 004e 1A80     		strh	r2, [r3]	@ movhi	@ _76, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 4034              	@ main.c:1604: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 4035 0050 DEF80030 		ldr	r3, [lr]	@ p_Fifo1.147_2, p_Fifo1
 4036              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 4037 0054 C1F800C0 		str	ip, [r1]	@ tmp181, MEM[(struct NVIC_Type *)3758153984B].ISER
 4038              	@ main.c:1607: 		GPIOA->CRL = (GPIOA->CRL & 0xfff00000) | 0x00044343;	//   PA2=MOSI, PA1=MISO, PA0=
 4039 0058 A7F58437 		sub	r7, r7, #67584	@ tmp189, tmp189,
 4040              	@ main.c:1604: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 4041 005c A3F80480 		strh	r8, [r3, #4]	@ movhi	@ tmp270, p_Fifo1.147_2->rct
 4042 0060 A3F80280 		strh	r8, [r3, #2]	@ movhi	@ tmp271, p_Fifo1.147_2->rwi
 4043 0064 9D71     		strb	r5, [r3, #6]	@ tmp187, p_Fifo1.147_2->rbuf
 4044              	@ main.c:1607: 		GPIOA->CRL = (GPIOA->CRL & 0xfff00000) | 0x00044343;	//   PA2=MOSI, PA1=MISO, PA0=
 4045 0066 3B68     		ldr	r3, [r7]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 4046 0068 4E49     		ldr	r1, .L318+12	@ _6,
 4047 006a 1B0D     		lsrs	r3, r3, #20	@ tmp190, _4,
ARM GAS  /tmp/ccjvICQi.s 			page 72


 4048 006c 1B05     		lsls	r3, r3, #20	@ tmp190, tmp190,
 4049              	@ main.c:1608: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 4050 006e 4E4A     		ldr	r2, .L318+16	@ tmp194,
 4051              	@ main.c:1607: 		GPIOA->CRL = (GPIOA->CRL & 0xfff00000) | 0x00044343;	//   PA2=MOSI, PA1=MISO, PA0=
 4052 0070 1943     		orrs	r1, r1, r3	@, _6, _6, tmp190
 4053 0072 3960     		str	r1, [r7]	@ _6, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 4054              	@ main.c:1608: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 4055 0074 5368     		ldr	r3, [r2, #4]	@ _7, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 4056              	@ main.c:1609: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 2); 
 4057 0076 4D4D     		ldr	r5, .L318+20	@ tmp197,
 4058 0078 DFF854E1 		ldr	lr, .L318+56	@ tmp198,
 4059              	@ main.c:1610: 		SX1278_hw1.miso = (u32 *)m_BITBAND_PERIPH(&GPIOA->IDR, 1); 
 4060 007c DFF854C1 		ldr	ip, .L318+60	@ tmp200,
 4061              	@ main.c:1608: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 4062 0080 23F0FF03 		bic	r3, r3, #255	@ tmp195, _7,
 4063 0084 43F03303 		orr	r3, r3, #51	@ _9, tmp195,
 4064 0088 5360     		str	r3, [r2, #4]	@ _9, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 4065              	@ main.c:1623: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 4066 008a 0090     		str	r0, [sp]	@ tmp212,
 4067              	@ main.c:1609: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 2); 
 4068 008c C5F800E0 		str	lr, [r5]	@ tmp198, SX1278_hw1.mosi
 4069              	@ main.c:1610: 		SX1278_hw1.miso = (u32 *)m_BITBAND_PERIPH(&GPIOA->IDR, 1); 
 4070 0090 C5F804C0 		str	ip, [r5, #4]	@ tmp200, SX1278_hw1.miso
 4071              	@ main.c:1611: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 0); 
 4072 0094 AEF1080E 		sub	lr, lr, #8	@ tmp202, tmp202,
 4073              	@ main.c:1612: 		SX1278_hw1.nss  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 8); 
 4074 0098 0CF5004C 		add	ip, ip, #32768	@ tmp204, tmp204,
 4075              	@ main.c:1611: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 0); 
 4076 009c C5F808E0 		str	lr, [r5, #8]	@ tmp202, SX1278_hw1.sck
 4077              	@ main.c:1622: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 4078 00a0 DFF83481 		ldr	r8, .L318+64	@ tmp209,
 4079              	@ main.c:1612: 		SX1278_hw1.nss  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 8); 
 4080 00a4 0CF19C0C 		add	ip, ip, #156	@ tmp204, tmp204,
 4081              	@ main.c:1613: 		SX1278_hw1.rst  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 9); 
 4082 00a8 0EF5004E 		add	lr, lr, #32768	@ tmp206, tmp206,
 4083              	@ main.c:1612: 		SX1278_hw1.nss  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 8); 
 4084 00ac C5F80CC0 		str	ip, [r5, #12]	@ tmp204, SX1278_hw1.nss
 4085              	@ main.c:1613: 		SX1278_hw1.rst  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 9); 
 4086 00b0 0EF1240E 		add	lr, lr, #36	@ tmp206, tmp206,
 4087              	@ main.c:1614: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 1); 
 4088 00b4 ACF19C0C 		sub	ip, ip, #156	@ tmp208, tmp208,
 4089              	@ main.c:1623: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 4090 00b8 2246     		mov	r2, r4	@, tmp160
 4091 00ba 2146     		mov	r1, r4	@, tmp160
 4092 00bc 0123     		movs	r3, #1	@,
 4093 00be 4046     		mov	r0, r8	@, tmp209
 4094              	@ main.c:1622: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 4095 00c0 C8F80050 		str	r5, [r8]	@ tmp197, SX1278_1.hw
 4096              	@ main.c:1614: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 1); 
 4097 00c4 C5E904EC 		strd	lr, ip, [r5, #16]	@ tmp206, tmp208, tmp197,
 4098              	@ main.c:1623: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 4099 00c8 FFF7FEFF 		bl	SX1278_begin	@
 4100              	@ main.c:1627: 		GPIOA->CRH = (GPIOA->CRH & 0x0fffffff) | 0x60000000;
 4101 00cc 7B68     		ldr	r3, [r7, #4]	@ _10, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 4102              	@ main.c:1637: 		GPIOA->ODR = 0b0001010000000000;
 4103 00ce 4FF4A051 		mov	r1, #5120	@ tmp228,
 4104              	@ main.c:1627: 		GPIOA->CRH = (GPIOA->CRH & 0x0fffffff) | 0x60000000;
ARM GAS  /tmp/ccjvICQi.s 			page 73


 4105 00d2 23F07043 		bic	r3, r3, #-268435456	@ tmp214, _10,
 4106 00d6 43F0C043 		orr	r3, r3, #1610612736	@ _12, tmp214,
 4107 00da 7B60     		str	r3, [r7, #4]	@ _12, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 4108              	@ main.c:1633: 		LED	   = 1;		
 4109 00dc 0123     		movs	r3, #1	@ tmp272,
 4110              	@ main.c:1632: 		flag_9 = 0;		
 4111 00de 344A     		ldr	r2, .L318+24	@ tmp217,
 4112              	@ main.c:1633: 		LED	   = 1;		
 4113 00e0 3448     		ldr	r0, .L318+28	@ tmp220,
 4114              	@ main.c:1632: 		flag_9 = 0;		
 4115 00e2 5201     		lsls	r2, r2, #5	@ tmp218, tmp217,
 4116 00e4 5462     		str	r4, [r2, #36]	@ tmp160, *_17
 4117              	@ main.c:1633: 		LED	   = 1;		
 4118 00e6 0360     		str	r3, [r0]	@ tmp272, MEM[(volatile long unsigned int *)1109524916B]
 4119              	@ main.c:1635: 		GPIOA->CRH = (GPIOA->CRH & 0xfff0f0ff)|0x00020200 ; //low power
 4120 00e8 7B68     		ldr	r3, [r7, #4]	@ _18, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 4121 00ea DFF8F090 		ldr	r9, .L318+68	@ tmp263,
 4122 00ee 23F47023 		bic	r3, r3, #983040	@ tmp223, _18,
 4123 00f2 23F47063 		bic	r3, r3, #3840	@ tmp223, tmp223,
 4124 00f6 43F40033 		orr	r3, r3, #131072	@ _20, tmp223,
 4125 00fa 43F40073 		orr	r3, r3, #512	@ _20, _20,
 4126 00fe 7B60     		str	r3, [r7, #4]	@ _20, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 4127              	@ main.c:1637: 		GPIOA->ODR = 0b0001010000000000;
 4128 0100 F960     		str	r1, [r7, #12]	@ tmp228, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
 4129              	@ main.c:1638: 		GPIOA->ODR |= (1<<10)|(1<<12); 
 4130 0102 FB68     		ldr	r3, [r7, #12]	@ _21, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
 4131              	@ main.c:1673: 				LED ^= 1;
 4132 0104 8346     		mov	fp, r0	@ tmp238, tmp220
 4133              	@ main.c:1638: 		GPIOA->ODR |= (1<<10)|(1<<12); 
 4134 0106 0B43     		orrs	r3, r3, r1	@, _22, _21,
 4135 0108 FB60     		str	r3, [r7, #12]	@ _22, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
 4136              	@ main.c:1668: 		flag_9=1;	
 4137 010a 0123     		movs	r3, #1	@ tmp274,
 4138 010c CA46     		mov	r10, r9	@ tmp265, tmp263
 4139              	@ main.c:1632: 		flag_9 = 0;		
 4140 010e 3046     		mov	r0, r6	@ n, n
 4141              	@ main.c:1668: 		flag_9=1;	
 4142 0110 5362     		str	r3, [r2, #36]	@ tmp274, *_17
 4143 0112 294D     		ldr	r5, .L318+32	@ tmp261,
 4144              	@ main.c:1632: 		flag_9 = 0;		
 4145 0114 02F12403 		add	r3, r2, #36	@ _17, tmp218,
 4146              	@ main.c:1671: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 4147 0118 284C     		ldr	r4, .L318+36	@ tmp233,
 4148 011a 294F     		ldr	r7, .L318+40	@ tmp235,
 4149              	@ main.c:1632: 		flag_9 = 0;		
 4150 011c 0393     		str	r3, [sp, #12]	@ _17, %sfp
 4151              	.L314:
 4152              	@ main.c:1671: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 4153 011e 2B68     		ldr	r3, [r5]	@ trg0.152_23, trg0
 4154 0120 A268     		ldr	r2, [r4, #8]	@ _24, MEM[(struct SysTick_Type *)3758153744B].VAL
 4155 0122 9B1A     		subs	r3, r3, r2	@ tmp234, trg0.152_23, _24
 4156 0124 BB42     		cmp	r3, r7	@ tmp234, tmp235
 4157 0126 FAD9     		bls	.L314	@,
 4158              	@ main.c:1675: 				strcpy (buf_tx," ");		
 4159 0128 4FF0200E 		mov	lr, #32	@ tmp242,
 4160              	@ main.c:1672: 				trg0 = SysTick->VAL; 
 4161 012c A368     		ldr	r3, [r4, #8]	@ _26, MEM[(struct SysTick_Type *)3758153744B].VAL
ARM GAS  /tmp/ccjvICQi.s 			page 74


 4162              	@ main.c:1677: 				strcat (buf_tx,unt2str(n++,str_num,5));
 4163 012e 00F1010C 		add	ip, r0, #1	@ tmp243, n,
 4164              	@ main.c:1672: 				trg0 = SysTick->VAL; 
 4165 0132 2B60     		str	r3, [r5]	@ _26, trg0
 4166              	@ main.c:1673: 				LED ^= 1;
 4167 0134 DBF80020 		ldr	r2, [fp]	@ _27, MEM[(volatile long unsigned int *)1109524916B]
 4168              	@ main.c:1677: 				strcat (buf_tx,unt2str(n++,str_num,5));
 4169 0138 1FFA8CF3 		uxth	r3, ip	@ n, tmp243
 4170              	@ main.c:1673: 				LED ^= 1;
 4171 013c 82F00102 		eor	r2, r2, #1	@ _28, _27,
 4172 0140 CBF80020 		str	r2, [fp]	@ _28, MEM[(volatile long unsigned int *)1109524916B]
 4173              	@ main.c:1677: 				strcat (buf_tx,unt2str(n++,str_num,5));
 4174 0144 1F49     		ldr	r1, .L318+44	@,
 4175 0146 0522     		movs	r2, #5	@,
 4176              	@ main.c:1675: 				strcpy (buf_tx," ");		
 4177 0148 A9F800E0 		strh	lr, [r9]	@ movhi	@ tmp242, MEM[(void *)&buf_tx]
 4178              	@ main.c:1677: 				strcat (buf_tx,unt2str(n++,str_num,5));
 4179 014c 0293     		str	r3, [sp, #8]	@ n, %sfp
 4180 014e FFF7FEFF 		bl	unt2str	@
 4181 0152 0646     		mov	r6, r0	@ _30,
 4182 0154 5046     		mov	r0, r10	@, tmp265
 4183 0156 FFF7FEFF 		bl	strlen	@
 4184 015a 3146     		mov	r1, r6	@, _30
 4185 015c 4844     		add	r0, r0, r9	@, tmp263
 4186 015e FFF7FEFF 		bl	stpcpy	@
 4187              	@ main.c:1678: 				strcat (buf_tx," ");
 4188 0162 194B     		ldr	r3, .L318+48	@ tmp278,
 4189 0164 A0EB0906 		sub	r6, r0, r9	@ _64, tmp249, tmp263
 4190 0168 1A88     		ldrh	r2, [r3]	@ unaligned	@ tmp254, MEM[(void *)" "]
 4191              	@ main.c:1679: 				message_length = strlen(buf_tx); 
 4192 016a 0136     		adds	r6, r6, #1	@ tmp255, _64,
 4193              	@ main.c:1681: 				SX1278_LoRaEntryTx (&SX1278_1, message_length, 2000);
 4194 016c F6B2     		uxtb	r6, r6	@ _32, tmp255
 4195              	@ main.c:1678: 				strcat (buf_tx," ");
 4196 016e 0280     		strh	r2, [r0]	@ unaligned	@ tmp254, MEM[(void *)_65]
 4197              	@ main.c:1681: 				SX1278_LoRaEntryTx (&SX1278_1, message_length, 2000);
 4198 0170 3146     		mov	r1, r6	@, _32
 4199 0172 4FF4FA62 		mov	r2, #2000	@,
 4200 0176 4046     		mov	r0, r8	@, tmp266
 4201 0178 FFF7FEFF 		bl	SX1278_LoRaEntryTx	@
 4202              	@ main.c:1685: 				SX1278_LoRaTxPacketStart(&SX1278_1, (uint8_t *) buf_tx, message_length);  // Sta
 4203 017c 3246     		mov	r2, r6	@, _32
 4204 017e 5146     		mov	r1, r10	@, tmp265
 4205 0180 4046     		mov	r0, r8	@, tmp266
 4206 0182 FFF7FEFF 		bl	SX1278_LoRaTxPacketStart	@
 4207              	@ main.c:1686: 				flag_9=1;	
 4208 0186 0122     		movs	r2, #1	@ tmp259,
 4209 0188 039B     		ldr	r3, [sp, #12]	@ _17, %sfp
 4210              	@ main.c:1687: 				SX1278_sleep(&SX1278_1);
 4211 018a 4046     		mov	r0, r8	@, tmp266
 4212              	@ main.c:1686: 				flag_9=1;	
 4213 018c 1A60     		str	r2, [r3]	@ tmp259, *_17
 4214              	@ main.c:1687: 				SX1278_sleep(&SX1278_1);
 4215 018e FFF7FEFF 		bl	SX1278_sleep	@
 4216              	@ main.c:1677: 				strcat (buf_tx,unt2str(n++,str_num,5));
 4217 0192 029B     		ldr	r3, [sp, #8]	@ n, %sfp
 4218 0194 1846     		mov	r0, r3	@ n, n
ARM GAS  /tmp/ccjvICQi.s 			page 75


 4219 0196 C2E7     		b	.L314	@
 4220              	.L319:
 4221              		.align	2
 4222              	.L318:
 4223 0198 00100240 		.word	1073876992
 4224 019c 00040040 		.word	1073742848
 4225 01a0 00E100E0 		.word	-536813312
 4226 01a4 43430400 		.word	279363
 4227 01a8 000C0140 		.word	1073810432
 4228 01ac 00000000 		.word	.LANCHOR24
 4229 01b0 00001001 		.word	.LANCHOR18+17825792
 4230 01b4 B4012242 		.word	1109524916
 4231 01b8 00000000 		.word	trg0
 4232 01bc 10E000E0 		.word	-536813552
 4233 01c0 40548900 		.word	9000000
 4234 01c4 00000000 		.word	.LANCHOR27
 4235 01c8 6C010000 		.word	.LC40
 4236 01cc 00000000 		.word	p_Fifo1
 4237 01d0 88012142 		.word	1109459336
 4238 01d4 04012142 		.word	1109459204
 4239 01d8 00000000 		.word	.LANCHOR25
 4240 01dc 00000000 		.word	.LANCHOR26
 4241              		.size	LoRaTX, .-LoRaTX
 4242              		.section	.text.col1,"ax",%progbits
 4243              		.align	1
 4244              		.p2align 2,,3
 4245              		.global	col1
 4246              		.syntax unified
 4247              		.thumb
 4248              		.thumb_func
 4249              		.fpu softvfp
 4250              		.type	col1, %function
 4251              	col1:
 4252              		@ args = 0, pretend = 0, frame = 0
 4253              		@ frame_needed = 0, uses_anonymous_args = 0
 4254              		@ link register save eliminated.
 4255              	@ main.c:1805: 			dma_buf[0]=0xe0;	dma_buf[8]  =0xe0;	dma_buf[16]=0xe0;
 4256 0000 4FF0E032 		mov	r2, #-522133280	@ tmp111,
 4257 0004 044B     		ldr	r3, .L321	@ tmp110,
 4258              	@ main.c:1808: 			dma_buf[3]=0xe0;	dma_buf[11] =0xe0;	dma_buf[19]=0xe0;
 4259 0006 0549     		ldr	r1, .L321+4	@ tmp113,
 4260              	@ main.c:1805: 			dma_buf[0]=0xe0;	dma_buf[8]  =0xe0;	dma_buf[16]=0xe0;
 4261 0008 1A60     		str	r2, [r3]	@ tmp111, MEM[(u08[24] *)&dma_buf]
 4262              	@ main.c:1808: 			dma_buf[3]=0xe0;	dma_buf[11] =0xe0;	dma_buf[19]=0xe0;
 4263 000a C3E90222 		strd	r2, r2, [r3, #8]	@ tmp111, tmp111, tmp110,
 4264 000e C3E90422 		strd	r2, r2, [r3, #16]	@ tmp111, tmp111, tmp110,
 4265 0012 5960     		str	r1, [r3, #4]	@ tmp113, MEM[(u08[24] *)&dma_buf + 4B]
 4266              	@ main.c:1813: 		}
 4267 0014 7047     		bx	lr	@
 4268              	.L322:
 4269 0016 00BF     		.align	2
 4270              	.L321:
 4271 0018 00000000 		.word	.LANCHOR28
 4272 001c E0F8F8F8 		.word	-117901088
 4273              		.size	col1, .-col1
 4274              		.section	.text.col2,"ax",%progbits
 4275              		.align	1
ARM GAS  /tmp/ccjvICQi.s 			page 76


 4276              		.p2align 2,,3
 4277              		.global	col2
 4278              		.syntax unified
 4279              		.thumb
 4280              		.thumb_func
 4281              		.fpu softvfp
 4282              		.type	col2, %function
 4283              	col2:
 4284              		@ args = 0, pretend = 0, frame = 0
 4285              		@ frame_needed = 0, uses_anonymous_args = 0
 4286              		@ link register save eliminated.
 4287              	@ main.c:1815: 			dma_buf[0]=0xe0;	dma_buf[8]  =0xe0;	dma_buf[16]=0xe0;
 4288 0000 4FF0E032 		mov	r2, #-522133280	@ tmp111,
 4289 0004 034B     		ldr	r3, .L324	@ tmp110,
 4290              	@ main.c:1818: 			dma_buf[3]=0xe0;	dma_buf[11] =0xe0;	dma_buf[19]=0xe0;
 4291 0006 C3E90022 		strd	r2, r2, [r3]	@ tmp111, tmp111, tmp110
 4292 000a C3E90222 		strd	r2, r2, [r3, #8]	@ tmp111, tmp111, tmp110,
 4293 000e C3E90422 		strd	r2, r2, [r3, #16]	@ tmp111, tmp111, tmp110,
 4294              	@ main.c:1823: 	}	
 4295 0012 7047     		bx	lr	@
 4296              	.L325:
 4297              		.align	2
 4298              	.L324:
 4299 0014 00000000 		.word	.LANCHOR28
 4300              		.size	col2, .-col2
 4301              		.section	.text.col0,"ax",%progbits
 4302              		.align	1
 4303              		.p2align 2,,3
 4304              		.global	col0
 4305              		.syntax unified
 4306              		.thumb
 4307              		.thumb_func
 4308              		.fpu softvfp
 4309              		.type	col0, %function
 4310              	col0:
 4311              		@ args = 0, pretend = 0, frame = 0
 4312              		@ frame_needed = 0, uses_anonymous_args = 0
 4313              		@ link register save eliminated.
 4314              	@ main.c:1825: 			dma_buf[0]=0;	dma_buf[8]  =0x0;	dma_buf[16]=0x0;
 4315 0000 0022     		movs	r2, #0	@ tmp111,
 4316 0002 044B     		ldr	r3, .L327	@ tmp110,
 4317              	@ main.c:1828: 			dma_buf[3]=0;	dma_buf[11] =0x0;	dma_buf[19]=0x0;
 4318 0004 C3E90022 		strd	r2, r2, [r3]	@ tmp111, tmp111, tmp110
 4319 0008 C3E90222 		strd	r2, r2, [r3, #8]	@ tmp111, tmp111, tmp110,
 4320 000c C3E90422 		strd	r2, r2, [r3, #16]	@ tmp111, tmp111, tmp110,
 4321              	@ main.c:1833: 	}
 4322 0010 7047     		bx	lr	@
 4323              	.L328:
 4324 0012 00BF     		.align	2
 4325              	.L327:
 4326 0014 00000000 		.word	.LANCHOR28
 4327              		.size	col0, .-col0
 4328              		.section	.text.ws2812led,"ax",%progbits
 4329              		.align	1
 4330              		.p2align 2,,3
 4331              		.global	ws2812led
 4332              		.syntax unified
ARM GAS  /tmp/ccjvICQi.s 			page 77


 4333              		.thumb
 4334              		.thumb_func
 4335              		.fpu softvfp
 4336              		.type	ws2812led, %function
 4337              	ws2812led:
 4338              		@ args = 0, pretend = 0, frame = 0
 4339              		@ frame_needed = 0, uses_anonymous_args = 0
 4340 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 4341              	@ main.c:1845: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|SPI_CR1_MSTR|SPI_CR1_BR_0|SPI_CR1_BR_1;	// 0x0
 4342 0004 4FF44774 		mov	r4, #796	@ tmp152,
 4343              	@ main.c:1839: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0xBBB30000;	// PA5~7
 4344 0008 3648     		ldr	r0, .L341	@ tmp143,
 4345              	@ main.c:1843: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 4346 000a 3749     		ldr	r1, .L341+4	@ tmp148,
 4347              	@ main.c:1839: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0xBBB30000;	// PA5~7
 4348 000c 0368     		ldr	r3, [r0]	@ _2, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 4349              	@ main.c:1845: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|SPI_CR1_MSTR|SPI_CR1_BR_0|SPI_CR1_BR_1;	// 0x0
 4350 000e 374A     		ldr	r2, .L341+8	@ tmp150,
 4351              	@ main.c:1839: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0xBBB30000;	// PA5~7
 4352 0010 9BB2     		uxth	r3, r3	@ tmp144, _2
 4353 0012 43F03B43 		orr	r3, r3, #-1157627904	@ _5, tmp144,
 4354 0016 43F43303 		orr	r3, r3, #11730944	@ _5, _5,
 4355 001a 0360     		str	r3, [r0]	@ _5, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 4356              	@ main.c:1858: 		DMA1_Channel3->CCR 	= 0;										//Disable channel
 4357 001c 0020     		movs	r0, #0	@ tmp167,
 4358              	@ main.c:1843: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 4359 001e 8B69     		ldr	r3, [r1, #24]	@ _7, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 4360              	@ main.c:1873: 		DMA1_Channel3->CCR =  CCR_reg;	
 4361 0020 B026     		movs	r6, #176	@ tmp175,
 4362              	@ main.c:1843: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 4363 0022 43F48053 		orr	r3, r3, #4096	@ _8, _7,
 4364 0026 8B61     		str	r3, [r1, #24]	@ _8, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 4365              	@ main.c:1845: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|SPI_CR1_MSTR|SPI_CR1_BR_0|SPI_CR1_BR_1;	// 0x0
 4366 0028 1480     		strh	r4, [r2]	@ movhi	@ tmp152, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 4367              	@ main.c:1846: 		SPI1->CR2 |= SPI_CR2_TXDMAEN;
 4368 002a 9388     		ldrh	r3, [r2, #4]	@, MEM[(struct SPI_TypeDef *)1073819648B].CR2
 4369              	@ main.c:1880: 		u08 fl=0;
 4370 002c 0446     		mov	r4, r0	@ fl, tmp167
 4371              	@ main.c:1846: 		SPI1->CR2 |= SPI_CR2_TXDMAEN;
 4372 002e 43F00203 		orr	r3, r3, #2	@ _10, MEM[(struct SPI_TypeDef *)1073819648B].CR2,
 4373 0032 9380     		strh	r3, [r2, #4]	@ movhi	@ _10, MEM[(struct SPI_TypeDef *)1073819648B].CR2
 4374              	@ main.c:1847: 		SPI1->CR1 |= SPI_CR1_SPE;		
 4375 0034 1388     		ldrh	r3, [r2]	@, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 4376              	@ main.c:1875: 		DMA1->IFCR = DMA_IFCR_CGIF3 | DMA_IFCR_CTCIF3;
 4377 0036 4FF44075 		mov	r5, #768	@ tmp177,
 4378              	@ main.c:1847: 		SPI1->CR1 |= SPI_CR1_SPE;		
 4379 003a 43F04003 		orr	r3, r3, #64	@ _12, MEM[(struct SPI_TypeDef *)1073819648B].CR1,
 4380 003e 1380     		strh	r3, [r2]	@ movhi	@ _12, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 4381              	@ main.c:1855: 		col0();
 4382 0040 FFF7FEFF 		bl	col0	@
 4383              	@ main.c:1862: 		DMA1_Channel3->CNDTR = 24;		//Buffor size :
 4384 0044 4FF0180C 		mov	ip, #24	@ tmp173,
 4385              	@ main.c:1857: 		RCC->AHBENR   			|= RCC_AHBENR_DMA1EN;		// enable clock for DMA1
 4386 0048 4A69     		ldr	r2, [r1, #20]	@ _13, MEM[(struct RCC_TypeDef *)1073876992B].AHBENR
 4387              	@ main.c:1858: 		DMA1_Channel3->CCR 	= 0;										//Disable channel
 4388 004a 294B     		ldr	r3, .L341+12	@ tmp166,
 4389              	@ main.c:1857: 		RCC->AHBENR   			|= RCC_AHBENR_DMA1EN;		// enable clock for DMA1
ARM GAS  /tmp/ccjvICQi.s 			page 78


 4390 004c 42F00102 		orr	r2, r2, #1	@ _14, _13,
 4391 0050 4A61     		str	r2, [r1, #20]	@ _14, MEM[(struct RCC_TypeDef *)1073876992B].AHBENR
 4392              	@ main.c:1859: 		DMA1_Channel3->CMAR = (uint32_t)dma_buf;	 	//Destination address:
 4393 0052 2849     		ldr	r1, .L341+16	@ tmp168,
 4394              	@ main.c:1860: 		DMA1_Channel3->CPAR = (uint32_t)&SPI1->DR;	//Source PERIPHERAL address:
 4395 0054 284A     		ldr	r2, .L341+20	@ tmp171,
 4396              	@ main.c:1858: 		DMA1_Channel3->CCR 	= 0;										//Disable channel
 4397 0056 1860     		str	r0, [r3]	@ tmp167, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CCR
 4398              	@ main.c:1859: 		DMA1_Channel3->CMAR = (uint32_t)dma_buf;	 	//Destination address:
 4399 0058 D960     		str	r1, [r3, #12]	@ tmp168, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CMAR
 4400              	@ main.c:1860: 		DMA1_Channel3->CPAR = (uint32_t)&SPI1->DR;	//Source PERIPHERAL address:
 4401 005a 9A60     		str	r2, [r3, #8]	@ tmp171, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CPAR
 4402              	@ main.c:1875: 		DMA1->IFCR = DMA_IFCR_CGIF3 | DMA_IFCR_CTCIF3;
 4403 005c 274A     		ldr	r2, .L341+24	@ tmp176,
 4404              	@ main.c:1862: 		DMA1_Channel3->CNDTR = 24;		//Buffor size :
 4405 005e C3F804C0 		str	ip, [r3, #4]	@ tmp173, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CNDTR
 4406              	@ main.c:1873: 		DMA1_Channel3->CCR =  CCR_reg;	
 4407 0062 1E60     		str	r6, [r3]	@ tmp175, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CCR
 4408              	@ main.c:1875: 		DMA1->IFCR = DMA_IFCR_CGIF3 | DMA_IFCR_CTCIF3;
 4409 0064 5560     		str	r5, [r2, #4]	@ tmp177, MEM[(struct DMA_TypeDef *)1073872896B].IFCR
 4410              	@ main.c:1876: 		DMA1_Channel3->CCR |= DMA_CCR1_EN;
 4411 0066 1A68     		ldr	r2, [r3]	@ _16, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CCR
 4412              	@ main.c:1879: 		UaPutK("\r\n DMA start...");
 4413 0068 2548     		ldr	r0, .L341+28	@,
 4414              	@ main.c:1876: 		DMA1_Channel3->CCR |= DMA_CCR1_EN;
 4415 006a 42F00102 		orr	r2, r2, #1	@ _17, _16,
 4416 006e 1A60     		str	r2, [r3]	@ _17, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CCR
 4417              	@ main.c:1879: 		UaPutK("\r\n DMA start...");
 4418 0070 FFF7FEFF 		bl	UaPutK	@
 4419 0074 234F     		ldr	r7, .L341+32	@ tmp206,
 4420 0076 DFF8A080 		ldr	r8, .L341+52	@ tmp208,
 4421 007a 234E     		ldr	r6, .L341+36	@ tmp207,
 4422              	@ main.c:1884: 			if(STCLK_MS*100 < (trg0 - SysTick->VAL)){
 4423 007c 2348     		ldr	r0, .L341+40	@ tmp182,
 4424              	@ main.c:1911: 					LED ^= 1;
 4425 007e 244D     		ldr	r5, .L341+44	@ tmp209,
 4426              	.L336:
 4427              	@ main.c:1884: 			if(STCLK_MS*100 < (trg0 - SysTick->VAL)){
 4428 0080 DFF898C0 		ldr	ip, .L341+56	@ tmp184,
 4429              	@ main.c:1888: 			if(STCLK_MS*200 < (trg1 - SysTick->VAL)){
 4430 0084 2349     		ldr	r1, .L341+48	@ tmp190,
 4431              	.L331:
 4432              	@ main.c:1884: 			if(STCLK_MS*100 < (trg0 - SysTick->VAL)){
 4433 0086 3B68     		ldr	r3, [r7]	@ trg0.161_18, trg0
 4434 0088 8268     		ldr	r2, [r0, #8]	@ _19, MEM[(struct SysTick_Type *)3758153744B].VAL
 4435 008a 9B1A     		subs	r3, r3, r2	@ tmp183, trg0.161_18, _19
 4436 008c 6345     		cmp	r3, ip	@ tmp183, tmp184
 4437              	@ main.c:1885: 				trg0 = SysTick->VAL;
 4438 008e 84BF     		itt	hi
 4439 0090 8368     		ldrhi	r3, [r0, #8]	@ _21, MEM[(struct SysTick_Type *)3758153744B].VAL
 4440 0092 3B60     		strhi	r3, [r7]	@ _21, trg0
 4441              	@ main.c:1888: 			if(STCLK_MS*200 < (trg1 - SysTick->VAL)){
 4442 0094 D8F80030 		ldr	r3, [r8]	@ trg1.162_22, trg1
 4443 0098 8268     		ldr	r2, [r0, #8]	@ _23, MEM[(struct SysTick_Type *)3758153744B].VAL
 4444 009a 9B1A     		subs	r3, r3, r2	@ tmp189, trg1.162_22, _23
 4445 009c 8B42     		cmp	r3, r1	@ tmp189, tmp190
 4446 009e F2D9     		bls	.L331	@,
ARM GAS  /tmp/ccjvICQi.s 			page 79


 4447              	@ main.c:1889: 				trg1 = SysTick->VAL;
 4448 00a0 8368     		ldr	r3, [r0, #8]	@ _25, MEM[(struct SysTick_Type *)3758153744B].VAL
 4449 00a2 C8F80030 		str	r3, [r8]	@ _25, trg1
 4450              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4451 00a6 8368     		ldr	r3, [r0, #8]	@ _55, MEM[(struct SysTick_Type *)3758153744B].VAL
 4452 00a8 3360     		str	r3, [r6]	@ _55, delay_us
 4453              	.L332:
 4454              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4455 00aa 3368     		ldr	r3, [r6]	@ delay_us.101_56, delay_us
 4456 00ac 8268     		ldr	r2, [r0, #8]	@ _57, MEM[(struct SysTick_Type *)3758153744B].VAL
 4457 00ae 9B1A     		subs	r3, r3, r2	@ tmp197, delay_us.101_56, _57
 4458 00b0 B3F5E17F 		cmp	r3, #450	@ tmp197,
 4459 00b4 F9D3     		bcc	.L332	@,
 4460              	@ main.c:1905: 				if(fl){
 4461 00b6 74B1     		cbz	r4, .L333	@ fl,
 4462              	@ main.c:1906: 					col1();
 4463 00b8 FFF7FEFF 		bl	col1	@
 4464              	@ main.c:1907: 					fl=0;
 4465 00bc 0024     		movs	r4, #0	@ fl,
 4466              	.L334:
 4467              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4468 00be 40F62311 		movw	r1, #2339	@ tmp205,
 4469              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4470 00c2 8368     		ldr	r3, [r0, #8]	@ _59, MEM[(struct SysTick_Type *)3758153744B].VAL
 4471 00c4 3360     		str	r3, [r6]	@ _59, delay_us
 4472              	.L335:
 4473              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4474 00c6 3368     		ldr	r3, [r6]	@ delay_us.101_60, delay_us
 4475 00c8 8268     		ldr	r2, [r0, #8]	@ _61, MEM[(struct SysTick_Type *)3758153744B].VAL
 4476 00ca 9B1A     		subs	r3, r3, r2	@ tmp204, delay_us.101_60, _61
 4477 00cc 8B42     		cmp	r3, r1	@ tmp204, tmp205
 4478 00ce FAD9     		bls	.L335	@,
 4479              	@ main.c:1915: 				col0();
 4480 00d0 FFF7FEFF 		bl	col0	@
 4481 00d4 D4E7     		b	.L336	@
 4482              	.L333:
 4483              	@ main.c:1910: 					fl=1;
 4484 00d6 0124     		movs	r4, #1	@ fl,
 4485              	@ main.c:1909: 					col1();
 4486 00d8 FFF7FEFF 		bl	col1	@
 4487              	@ main.c:1911: 					LED ^= 1;
 4488 00dc 2B68     		ldr	r3, [r5]	@ _26, MEM[(volatile long unsigned int *)1109524916B]
 4489 00de 6340     		eors	r3, r3, r4	@, _27, _26,
 4490 00e0 2B60     		str	r3, [r5]	@ _27, MEM[(volatile long unsigned int *)1109524916B]
 4491 00e2 ECE7     		b	.L334	@
 4492              	.L342:
 4493              		.align	2
 4494              	.L341:
 4495 00e4 00080140 		.word	1073809408
 4496 00e8 00100240 		.word	1073876992
 4497 00ec 00300140 		.word	1073819648
 4498 00f0 30000240 		.word	1073872944
 4499 00f4 00000000 		.word	.LANCHOR28
 4500 00f8 0C300140 		.word	1073819660
 4501 00fc 00000240 		.word	1073872896
 4502 0100 00000000 		.word	.LC66
 4503 0104 00000000 		.word	trg0
ARM GAS  /tmp/ccjvICQi.s 			page 80


 4504 0108 00000000 		.word	delay_us
 4505 010c 10E000E0 		.word	-536813552
 4506 0110 B4012242 		.word	1109524916
 4507 0114 40771B00 		.word	1800000
 4508 0118 00000000 		.word	trg1
 4509 011c A0BB0D00 		.word	900000
 4510              		.size	ws2812led, .-ws2812led
 4511              		.section	.text.lexmark_lcd,"ax",%progbits
 4512              		.align	1
 4513              		.p2align 2,,3
 4514              		.global	lexmark_lcd
 4515              		.syntax unified
 4516              		.thumb
 4517              		.thumb_func
 4518              		.fpu softvfp
 4519              		.type	lexmark_lcd, %function
 4520              	lexmark_lcd:
 4521              		@ Volatile: function does not return.
 4522              		@ args = 0, pretend = 0, frame = 8
 4523              		@ frame_needed = 0, uses_anonymous_args = 0
 4524 0000 00B5     		push	{lr}	@
 4525 0002 83B0     		sub	sp, sp, #12	@,,
 4526              	@ main.c:1996: 		UC1608_Init();
 4527 0004 FFF7FEFF 		bl	UC1608_Init	@
 4528              	@ main.c:2002: 		UC1608_Clr();
 4529 0008 FFF7FEFF 		bl	UC1608_Clr	@
 4530              	@ main.c:2004: 		UC1608_str (0, 0,"Witaj szkolo         ");
 4531 000c 0021     		movs	r1, #0	@,
 4532 000e 174A     		ldr	r2, .L348	@,
 4533 0010 0846     		mov	r0, r1	@,
 4534 0012 FFF7FEFF 		bl	UC1608_str	@
 4535              	@ main.c:2005: 		UC1608_str (1, 0,"Zapraszam do pracy        ");
 4536 0016 164A     		ldr	r2, .L348+4	@,
 4537 0018 0021     		movs	r1, #0	@,
 4538 001a 0120     		movs	r0, #1	@,
 4539 001c FFF7FEFF 		bl	UC1608_str	@
 4540              	@ main.c:2006: 		UC1608_Refresh();
 4541 0020 FFF7FEFF 		bl	UC1608_Refresh	@
 4542              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 4543 0024 134B     		ldr	r3, .L348+8	@ tmp122,
 4544 0026 144A     		ldr	r2, .L348+12	@ tmp137,
 4545              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 4546 0028 1D46     		mov	r5, r3	@ tmp125, tmp122
 4547              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 4548 002a 9B68     		ldr	r3, [r3, #8]	@ _17, MEM[(struct SysTick_Type *)3758153744B].VAL
 4549              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 4550 002c 1349     		ldr	r1, .L348+16	@ tmp127,
 4551              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 4552 002e 1360     		str	r3, [r2]	@ _17, delay_us
 4553              	.L344:
 4554              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 4555 0030 1368     		ldr	r3, [r2]	@ delay_us.88_18, delay_us
 4556 0032 A868     		ldr	r0, [r5, #8]	@ _19, MEM[(struct SysTick_Type *)3758153744B].VAL
 4557 0034 1B1A     		subs	r3, r3, r0	@ tmp126, delay_us.88_18, _19
 4558 0036 8B42     		cmp	r3, r1	@ tmp126, tmp127
 4559 0038 FAD9     		bls	.L344	@,
 4560              	@ main.c:2009: 		UC1608_str (1, 0,"                          ");
ARM GAS  /tmp/ccjvICQi.s 			page 81


 4561 003a 114A     		ldr	r2, .L348+20	@,
 4562 003c 0021     		movs	r1, #0	@,
 4563 003e 0120     		movs	r0, #1	@,
 4564 0040 FFF7FEFF 		bl	UC1608_str	@
 4565              	@ main.c:2010: 		UC1608_Refresh();
 4566 0044 FFF7FEFF 		bl	UC1608_Refresh	@
 4567              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 4568 0048 AA68     		ldr	r2, [r5, #8]	@ _16, MEM[(struct SysTick_Type *)3758153744B].VAL
 4569 004a 0E4B     		ldr	r3, .L348+24	@ tmp130,
 4570              	@ main.c:2015: 		UaPutS(" T[us]="); sint2uart(tim/TIM_US);
 4571 004c 0E48     		ldr	r0, .L348+28	@,
 4572              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 4573 004e 1A60     		str	r2, [r3]	@ _16, Timt
 4574              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 4575 0050 1C68     		ldr	r4, [r3]	@ Timt.100_13, Timt
 4576 0052 AB68     		ldr	r3, [r5, #8]	@ _14, MEM[(struct SysTick_Type *)3758153744B].VAL
 4577 0054 E41A     		subs	r4, r4, r3	@ _15, Timt.100_13, _14
 4578 0056 0194     		str	r4, [sp, #4]	@ _15, MEM[(volatile u32 *)&tim]
 4579              	@ main.c:2015: 		UaPutS(" T[us]="); sint2uart(tim/TIM_US);
 4580 0058 FFF7FEFF 		bl	UaPutS	@
 4581 005c 0B48     		ldr	r0, .L348+32	@ tmp136,
 4582 005e A0FB0430 		umull	r3, r0, r0, r4	@ tmp138, tmp135, tmp136, _15
 4583 0062 4008     		lsrs	r0, r0, #1	@, tmp135,
 4584 0064 FFF7FEFF 		bl	sint2uart	@
 4585              	.L345:
 4586 0068 FEE7     		b	.L345	@
 4587              	.L349:
 4588 006a 00BF     		.align	2
 4589              	.L348:
 4590 006c 00000000 		.word	.LC67
 4591 0070 18000000 		.word	.LC68
 4592 0074 10E000E0 		.word	-536813552
 4593 0078 00000000 		.word	delay_us
 4594 007c 3F548900 		.word	8999999
 4595 0080 34000000 		.word	.LC69
 4596 0084 00000000 		.word	Timt
 4597 0088 50000000 		.word	.LC70
 4598 008c 398EE338 		.word	954437177
 4599              		.size	lexmark_lcd, .-lexmark_lcd
 4600              		.section	.text.softUTX_init,"ax",%progbits
 4601              		.align	1
 4602              		.p2align 2,,3
 4603              		.global	softUTX_init
 4604              		.syntax unified
 4605              		.thumb
 4606              		.thumb_func
 4607              		.fpu softvfp
 4608              		.type	softUTX_init, %function
 4609              	softUTX_init:
 4610              		@ args = 0, pretend = 0, frame = 0
 4611              		@ frame_needed = 0, uses_anonymous_args = 0
 4612              		@ link register save eliminated.
 4613              	@ main.c:2085: 		GPIOC->CRH = (GPIOC->CRH & 0xf0ffffff) | 0x01000000;  				// PC14 = softUART
 4614 0000 034A     		ldr	r2, .L351	@ tmp113,
 4615 0002 5368     		ldr	r3, [r2, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 4616 0004 23F07063 		bic	r3, r3, #251658240	@ tmp114, _1,
 4617 0008 43F08073 		orr	r3, r3, #16777216	@ _3, tmp114,
ARM GAS  /tmp/ccjvICQi.s 			page 82


 4618 000c 5360     		str	r3, [r2, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 4619              	@ main.c:2086: 	}
 4620 000e 7047     		bx	lr	@
 4621              	.L352:
 4622              		.align	2
 4623              	.L351:
 4624 0010 00100140 		.word	1073811456
 4625              		.size	softUTX_init, .-softUTX_init
 4626              		.section	.text.sofUTX,"ax",%progbits
 4627              		.align	1
 4628              		.p2align 2,,3
 4629              		.global	sofUTX
 4630              		.syntax unified
 4631              		.thumb
 4632              		.thumb_func
 4633              		.fpu softvfp
 4634              		.type	sofUTX, %function
 4635              	sofUTX:
 4636              		@ args = 0, pretend = 0, frame = 8
 4637              		@ frame_needed = 0, uses_anonymous_args = 0
 4638              		@ link register save eliminated.
 4639              	@ main.c:2090: 		p_SofTX=0;				  //START Bit
 4640 0000 0021     		movs	r1, #0	@ tmp129,
 4641              	@ main.c:2087: void sofUTX(volatile u08 bTX)	{  /// Sotware Transmit USART Frame [8N1] with TIMER P
 4642 0002 F0B4     		push	{r4, r5, r6, r7}	@
 4643              	@ main.c:2090: 		p_SofTX=0;				  //START Bit
 4644 0004 194A     		ldr	r2, .L365	@ tmp128,
 4645              	@ inc/tool/delay.h:99: 		delay_us = SysTick->VAL; 
 4646 0006 1A4B     		ldr	r3, .L365+4	@ tmp130,
 4647              	@ main.c:2087: void sofUTX(volatile u08 bTX)	{  /// Sotware Transmit USART Frame [8N1] with TIMER P
 4648 0008 82B0     		sub	sp, sp, #8	@,,
 4649              	@ main.c:2087: void sofUTX(volatile u08 bTX)	{  /// Sotware Transmit USART Frame [8N1] with TIMER P
 4650 000a 8DF80700 		strb	r0, [sp, #7]	@ bTX, bTX
 4651              	@ main.c:2090: 		p_SofTX=0;				  //START Bit
 4652 000e 1160     		str	r1, [r2]	@ tmp129, MEM[(volatile long unsigned int *)1109524920B]
 4653              	@ inc/tool/delay.h:100: 		while( STCLK_DN*ns > (delay_us - SysTick->VAL) );
 4654 0010 1C46     		mov	r4, r3	@ tmp133, tmp130
 4655              	@ inc/tool/delay.h:99: 		delay_us = SysTick->VAL; 
 4656 0012 1849     		ldr	r1, .L365+8	@ tmp158,
 4657 0014 9B68     		ldr	r3, [r3, #8]	@ _16, MEM[(struct SysTick_Type *)3758153744B].VAL
 4658 0016 0B60     		str	r3, [r1]	@ _16, delay_us
 4659              	.L354:
 4660              	@ inc/tool/delay.h:100: 		while( STCLK_DN*ns > (delay_us - SysTick->VAL) );
 4661 0018 0B68     		ldr	r3, [r1]	@ delay_us.170_17, delay_us
 4662 001a A268     		ldr	r2, [r4, #8]	@ _18, MEM[(struct SysTick_Type *)3758153744B].VAL
 4663 001c 9B1A     		subs	r3, r3, r2	@ tmp134, delay_us.170_17, _18
 4664 001e 112B     		cmp	r3, #17	@ tmp134,
 4665 0020 FAD9     		bls	.L354	@,
 4666              	@ main.c:2088: 		u08  cTX = 1 ;
 4667 0022 0124     		movs	r4, #1	@ cTX,
 4668              	@ inc/tool/delay.h:100: 		while( STCLK_DN*ns > (delay_us - SysTick->VAL) );
 4669 0024 0825     		movs	r5, #8	@ ivtmp_3,
 4670              	@ main.c:2093: 		 if(bTX & cTX)  p_SofTX=1;
 4671 0026 2746     		mov	r7, r4	@ tmp160, cTX
 4672              	@ main.c:2094: 		 else 					p_SofTX=0;
 4673 0028 104E     		ldr	r6, .L365	@ tmp159,
 4674              	@ inc/tool/delay.h:99: 		delay_us = SysTick->VAL; 
ARM GAS  /tmp/ccjvICQi.s 			page 83


 4675 002a 1148     		ldr	r0, .L365+4	@ tmp146,
 4676              	.L358:
 4677              	@ main.c:2093: 		 if(bTX & cTX)  p_SofTX=1;
 4678 002c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2	@ bTX, bTX
 4679 0030 2340     		ands	r3, r3, r4	@ tmp140, bTX, cTX
 4680 0032 14BF     		ite	ne
 4681 0034 3760     		strne	r7, [r6]	@ tmp160, MEM[(volatile long unsigned int *)1109524920B]
 4682              	@ main.c:2094: 		 else 					p_SofTX=0;
 4683 0036 3360     		streq	r3, [r6]	@ tmp140, MEM[(volatile long unsigned int *)1109524920B]
 4684              	@ inc/tool/delay.h:99: 		delay_us = SysTick->VAL; 
 4685 0038 8368     		ldr	r3, [r0, #8]	@ _20, MEM[(struct SysTick_Type *)3758153744B].VAL
 4686              	@ main.c:2095: 		 cTX <<= 1;
 4687 003a 6400     		lsls	r4, r4, #1	@ tmp145, cTX,
 4688 003c E4B2     		uxtb	r4, r4	@ cTX, tmp145
 4689              	@ inc/tool/delay.h:99: 		delay_us = SysTick->VAL; 
 4690 003e 0B60     		str	r3, [r1]	@ _20, delay_us
 4691              	.L357:
 4692              	@ inc/tool/delay.h:100: 		while( STCLK_DN*ns > (delay_us - SysTick->VAL) );
 4693 0040 0B68     		ldr	r3, [r1]	@ delay_us.170_21, delay_us
 4694 0042 8268     		ldr	r2, [r0, #8]	@ _22, MEM[(struct SysTick_Type *)3758153744B].VAL
 4695 0044 9B1A     		subs	r3, r3, r2	@ tmp150, delay_us.170_21, _22
 4696 0046 112B     		cmp	r3, #17	@ tmp150,
 4697 0048 FAD9     		bls	.L357	@,
 4698              	@ main.c:2092: 		while(cTX != 0){		//Wait to send Data
 4699 004a 013D     		subs	r5, r5, #1	@ ivtmp_3, ivtmp_3,
 4700 004c EED1     		bne	.L358	@,
 4701              	@ main.c:2098: 		p_SofTX=1;				//STOP Bit		
 4702 004e 0122     		movs	r2, #1	@ tmp152,
 4703 0050 064B     		ldr	r3, .L365	@ tmp151,
 4704              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4705 0052 074C     		ldr	r4, .L365+4	@ tmp156,
 4706              	@ main.c:2098: 		p_SofTX=1;				//STOP Bit		
 4707 0054 1A60     		str	r2, [r3]	@ tmp152, MEM[(volatile long unsigned int *)1109524920B]
 4708              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4709 0056 8368     		ldr	r3, [r0, #8]	@ _12, MEM[(struct SysTick_Type *)3758153744B].VAL
 4710 0058 0B60     		str	r3, [r1]	@ _12, delay_us
 4711              	.L359:
 4712              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4713 005a 0B68     		ldr	r3, [r1]	@ delay_us.101_13, delay_us
 4714 005c A268     		ldr	r2, [r4, #8]	@ _14, MEM[(struct SysTick_Type *)3758153744B].VAL
 4715 005e 9B1A     		subs	r3, r3, r2	@ tmp157, delay_us.101_13, _14
 4716 0060 592B     		cmp	r3, #89	@ tmp157,
 4717 0062 FAD9     		bls	.L359	@,
 4718              	@ main.c:2100: 	}
 4719 0064 02B0     		add	sp, sp, #8	@,,
 4720              		@ sp needed	@
 4721 0066 F0BC     		pop	{r4, r5, r6, r7}	@
 4722 0068 7047     		bx	lr	@
 4723              	.L366:
 4724 006a 00BF     		.align	2
 4725              	.L365:
 4726 006c B8012242 		.word	1109524920
 4727 0070 10E000E0 		.word	-536813552
 4728 0074 00000000 		.word	delay_us
 4729              		.size	sofUTX, .-sofUTX
 4730              		.section	.text.ToLED,"ax",%progbits
 4731              		.align	1
ARM GAS  /tmp/ccjvICQi.s 			page 84


 4732              		.p2align 2,,3
 4733              		.global	ToLED
 4734              		.syntax unified
 4735              		.thumb
 4736              		.thumb_func
 4737              		.fpu softvfp
 4738              		.type	ToLED, %function
 4739              	ToLED:
 4740              		@ args = 0, pretend = 0, frame = 0
 4741              		@ frame_needed = 0, uses_anonymous_args = 0
 4742 0000 70B5     		push	{r4, r5, r6, lr}	@
 4743              	@ main.c:2101: void ToLED(u16 B,u16 A,u08 dot)	{
 4744 0002 0546     		mov	r5, r0	@ B, B
 4745 0004 0C46     		mov	r4, r1	@ A, A
 4746 0006 1646     		mov	r6, r2	@ dot, dot
 4747              	@ main.c:2102: 		sofUTX(B&0x00ff);	// segment LO
 4748 0008 C0B2     		uxtb	r0, r0	@, B
 4749 000a FFF7FEFF 		bl	sofUTX	@
 4750              	@ main.c:2103: 		sofUTX(B>>8);			// segment HI
 4751 000e 280A     		lsrs	r0, r5, #8	@, B,
 4752 0010 FFF7FEFF 		bl	sofUTX	@
 4753              	@ main.c:2104: 		sofUTX(A&0x00ff);	// segment LO
 4754 0014 E0B2     		uxtb	r0, r4	@, A
 4755 0016 FFF7FEFF 		bl	sofUTX	@
 4756              	@ main.c:2105: 		sofUTX(A>>8);			// segment HI
 4757 001a 200A     		lsrs	r0, r4, #8	@, A,
 4758 001c FFF7FEFF 		bl	sofUTX	@
 4759              	@ main.c:2106: 		sofUTX(dot);
 4760 0020 3046     		mov	r0, r6	@, dot
 4761              	@ main.c:2107: 	}
 4762 0022 BDE87040 		pop	{r4, r5, r6, lr}	@
 4763              	@ main.c:2106: 		sofUTX(dot);
 4764 0026 FFF7FEBF 		b	sofUTX	@
 4765              		.size	ToLED, .-ToLED
 4766 002a 00BF     		.section	.text.cmd_LCD,"ax",%progbits
 4767              		.align	1
 4768              		.p2align 2,,3
 4769              		.global	cmd_LCD
 4770              		.syntax unified
 4771              		.thumb
 4772              		.thumb_func
 4773              		.fpu softvfp
 4774              		.type	cmd_LCD, %function
 4775              	cmd_LCD:
 4776              		@ args = 0, pretend = 0, frame = 0
 4777              		@ frame_needed = 0, uses_anonymous_args = 0
 4778 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 4779              	@ main.c:2112: 			if (byte & 0x80)	sMOSI = 1;
 4780 0004 4FF0010E 		mov	lr, #1	@ tmp147,
 4781              	@ main.c:2108: void cmd_LCD(uint8_t byte)	{
 4782 0008 0825     		movs	r5, #8	@ ivtmp_2,
 4783              	@ main.c:2115: 			sSCK = 1; /* a slave latches input data bit */
 4784 000a F046     		mov	r8, lr	@ MEM[(volatile long unsigned int *)1109459348B], tmp147
 4785              	@ main.c:2113: 			else							sMOSI = 0;
 4786 000c 0027     		movs	r7, #0	@ tmp146,
 4787 000e 1249     		ldr	r1, .L379	@ tmp144,
 4788 0010 DFF850C0 		ldr	ip, .L379+12	@ tmp145,
ARM GAS  /tmp/ccjvICQi.s 			page 85


 4789              	@ main.c:2115: 			sSCK = 1; /* a slave latches input data bit */
 4790 0014 114E     		ldr	r6, .L379+4	@ tmp129,
 4791              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4792 0016 124A     		ldr	r2, .L379+8	@ tmp131,
 4793              	.L374:
 4794              	@ main.c:2112: 			if (byte & 0x80)	sMOSI = 1;
 4795 0018 0306     		lsls	r3, r0, #24	@, byte,
 4796 001a 4CBF     		ite	mi
 4797 001c CCF800E0 		strmi	lr, [ip]	@ tmp147, MEM[(volatile long unsigned int *)1109459356B]
 4798              	@ main.c:2113: 			else							sMOSI = 0;
 4799 0020 CCF80070 		strpl	r7, [ip]	@ tmp146, MEM[(volatile long unsigned int *)1109459356B]
 4800              	@ main.c:2115: 			sSCK = 1; /* a slave latches input data bit */
 4801 0024 C6F80080 		str	r8, [r6]	@ MEM[(volatile long unsigned int *)1109459348B], MEM[(volatile long unsigned int *)1
 4802              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4803 0028 9368     		ldr	r3, [r2, #8]	@ _18, MEM[(struct SysTick_Type *)3758153744B].VAL
 4804              	@ main.c:2114: 			byte <<= 1;
 4805 002a 4000     		lsls	r0, r0, #1	@ tmp128, byte,
 4806 002c C0B2     		uxtb	r0, r0	@ byte, tmp128
 4807              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4808 002e 0B60     		str	r3, [r1]	@ _18, delay_us
 4809              	.L372:
 4810              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4811 0030 0B68     		ldr	r3, [r1]	@ delay_us.101_19, delay_us
 4812 0032 9468     		ldr	r4, [r2, #8]	@ _20, MEM[(struct SysTick_Type *)3758153744B].VAL
 4813 0034 1B1B     		subs	r3, r3, r4	@ tmp135, delay_us.101_19, _20
 4814 0036 112B     		cmp	r3, #17	@ tmp135,
 4815 0038 FAD9     		bls	.L372	@,
 4816              	@ main.c:2117: 			sSCK = 0; /* a slave shifts out next output data bit */
 4817 003a 3760     		str	r7, [r6]	@ tmp146, MEM[(volatile long unsigned int *)1109459348B]
 4818              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4819 003c 9368     		ldr	r3, [r2, #8]	@ _14, MEM[(struct SysTick_Type *)3758153744B].VAL
 4820 003e 0B60     		str	r3, [r1]	@ _14, delay_us
 4821              	.L373:
 4822              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4823 0040 0B68     		ldr	r3, [r1]	@ delay_us.101_15, delay_us
 4824 0042 9468     		ldr	r4, [r2, #8]	@ _16, MEM[(struct SysTick_Type *)3758153744B].VAL
 4825 0044 1B1B     		subs	r3, r3, r4	@ tmp142, delay_us.101_15, _16
 4826 0046 112B     		cmp	r3, #17	@ tmp142,
 4827 0048 FAD9     		bls	.L373	@,
 4828 004a 013D     		subs	r5, r5, #1	@ tmp143, ivtmp_2,
 4829              	@ main.c:2110: 		for(counter = 8; counter; counter--)
 4830 004c 15F0FF05 		ands	r5, r5, #255	@ ivtmp_2, tmp143,
 4831 0050 E2D1     		bne	.L374	@,
 4832              	@ main.c:2121: 	}
 4833 0052 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}	@
 4834              	.L380:
 4835 0056 00BF     		.align	2
 4836              	.L379:
 4837 0058 00000000 		.word	delay_us
 4838 005c 94012142 		.word	1109459348
 4839 0060 10E000E0 		.word	-536813552
 4840 0064 9C012142 		.word	1109459356
 4841              		.size	cmd_LCD, .-cmd_LCD
 4842              		.section	.text.CalculateLux,"ax",%progbits
 4843              		.align	1
 4844              		.p2align 2,,3
 4845              		.global	CalculateLux
ARM GAS  /tmp/ccjvICQi.s 			page 86


 4846              		.syntax unified
 4847              		.thumb
 4848              		.thumb_func
 4849              		.fpu softvfp
 4850              		.type	CalculateLux, %function
 4851              	CalculateLux:
 4852              		@ args = 4, pretend = 0, frame = 0
 4853              		@ frame_needed = 0, uses_anonymous_args = 0
 4854              		@ link register save eliminated.
 4855 0000 30B4     		push	{r4, r5}	@
 4856              	@ main.c:2122: u16  CalculateLux(u16 iGain, u16 tInt, u16 ch0, u16 ch1, int iType)	{
 4857 0002 029D     		ldr	r5, [sp, #8]	@ iType, iType
 4858              	@ main.c:2140:     switch (tInt)
 4859 0004 0029     		cmp	r1, #0	@ tInt
 4860 0006 47D0     		beq	.L383	@
 4861              	@ main.c:2151:        chScale = (1 << CH_SCALE);
 4862 0008 40F6E774 		movw	r4, #4071	@ tmp153,
 4863 000c 0129     		cmp	r1, #1	@ tInt,
 4864 000e 0CBF     		ite	eq
 4865 0010 2146     		moveq	r1, r4	@ chScale, tmp153
 4866 0012 4FF48061 		movne	r1, #1024	@ chScale,
 4867              	.L384:
 4868              	@ main.c:2156:     if (!iGain) chScale = chScale << 4; // scale 1X to 16X
 4869 0016 00B9     		cbnz	r0, .L385	@ iGain,
 4870              	@ main.c:2156:     if (!iGain) chScale = chScale << 4; // scale 1X to 16X
 4871 0018 0901     		lsls	r1, r1, #4	@ chScale, chScale,
 4872              	.L385:
 4873              	@ main.c:2160:     channel1 = (ch1 * chScale) >> CH_SCALE;
 4874 001a 01FB03F3 		mul	r3, r1, r3	@ _4, chScale, ch1
 4875              	@ main.c:2159:     channel0 = (ch0 * chScale) >> CH_SCALE;
 4876 001e 01FB02F1 		mul	r1, r1, r2	@ tmp139, chScale, ch0
 4877              	@ main.c:2166:     if (channel0 != 0) ratio1 = (channel1 << (RATIO_SCALE+1)) / channel0;
 4878 0022 890A     		lsrs	r1, r1, #10	@ channel0, tmp139,
 4879              	@ main.c:2160:     channel1 = (ch1 * chScale) >> CH_SCALE;
 4880 0024 4FEA9320 		lsr	r0, r3, #10	@ channel1, _4,
 4881              	@ main.c:2166:     if (channel0 != 0) ratio1 = (channel1 << (RATIO_SCALE+1)) / channel0;
 4882 0028 18D0     		beq	.L386	@,
 4883              	@ main.c:2166:     if (channel0 != 0) ratio1 = (channel1 << (RATIO_SCALE+1)) / channel0;
 4884 002a 23F47F73 		bic	r3, r3, #1020	@ tmp140, _4,
 4885 002e 23F00303 		bic	r3, r3, #3	@ tmp140, tmp140,
 4886 0032 B3FBF1F3 		udiv	r3, r3, r1	@ ratio1, tmp140, channel0
 4887 0036 0133     		adds	r3, r3, #1	@ tmp144, ratio1,
 4888 0038 5B08     		lsrs	r3, r3, #1	@ prephitmp_18, tmp144,
 4889              	@ main.c:2174:     switch (iType)
 4890 003a ADB3     		cbz	r5, .L388	@ iType,
 4891 003c 012D     		cmp	r5, #1	@ iType,
 4892 003e 15D0     		beq	.L389	@,
 4893              	.L387:
 4894 0040 0022     		movs	r2, #0	@ _164,
 4895 0042 1346     		mov	r3, r2	@ _166, _164
 4896              	.L390:
 4897              	@ main.c:2217:     temp = (u32)((channel0 * b) - (channel1 * m));
 4898 0044 02FB01F1 		mul	r1, r2, r1	@ tmp148, _164, channel0
 4899 0048 03FB1011 		mls	r1, r3, r0, r1	@ temp, _166, channel1, tmp148
 4900 004c 21EAE171 		bic	r1, r1, r1, asr #31	@ temp, temp
 4901 0050 01F50051 		add	r1, r1, #8192	@ tmp150, temp,
 4902 0054 C1F38F30 		ubfx	r0, r1, #14, #16	@ <retval>, tmp150,,
ARM GAS  /tmp/ccjvICQi.s 			page 87


 4903              	.L411:
 4904              	@ main.c:2229: 	}
 4905 0058 30BC     		pop	{r4, r5}	@
 4906 005a 7047     		bx	lr	@
 4907              	.L386:
 4908              	@ main.c:2174:     switch (iType)
 4909 005c FDB1     		cbz	r5, .L407	@ iType,
 4910 005e 012D     		cmp	r5, #1	@ iType,
 4911 0060 EED1     		bne	.L387	@,
 4912              	.L400:
 4913 0062 40F2AD13 		movw	r3, #429	@ _166,
 4914 0066 4FF40172 		mov	r2, #516	@ _164,
 4915 006a EBE7     		b	.L390	@
 4916              	.L389:
 4917              	@ main.c:2196:             if ((ratio >= 0) && (ratio <= K1C))
 4918 006c 432B     		cmp	r3, #67	@ prephitmp_18,
 4919 006e F8D9     		bls	.L400	@,
 4920              	@ main.c:2198:             else if (ratio <= K2C)
 4921 0070 852B     		cmp	r3, #133	@ prephitmp_18,
 4922 0072 34D9     		bls	.L401	@,
 4923              	@ main.c:2200:             else if (ratio <= K3C)
 4924 0074 C82B     		cmp	r3, #200	@ prephitmp_18,
 4925 0076 37DD     		ble	.L402	@,
 4926              	@ main.c:2202:             else if (ratio <= K4C)
 4927 0078 B3F5857F 		cmp	r3, #266	@ prephitmp_18,
 4928 007c 43DD     		ble	.L403	@,
 4929              	@ main.c:2204:             else if (ratio <= K5C)
 4930 007e B3F5A77F 		cmp	r3, #334	@ prephitmp_18,
 4931 0082 45DB     		blt	.L404	@,
 4932              	@ main.c:2206:             else if (ratio <= K6C)
 4933 0084 B3F5CD7F 		cmp	r3, #410	@ prephitmp_18,
 4934 0088 51DD     		ble	.L405	@,
 4935              	@ main.c:2208:             else if (ratio <= K7C)
 4936 008a 40F29A22 		movw	r2, #666	@ tmp146,
 4937 008e 9342     		cmp	r3, r2	@ prephitmp_18, tmp146
 4938 0090 4BDC     		bgt	.L406	@,
 4939 0092 2B23     		movs	r3, #43	@ _166,
 4940 0094 3722     		movs	r2, #55	@ _164,
 4941 0096 D5E7     		b	.L390	@
 4942              	.L383:
 4943              	@ main.c:2143:        chScale = CHSCALE_TINT0;
 4944 0098 47F21751 		movw	r1, #29975	@ chScale,
 4945 009c BBE7     		b	.L384	@
 4946              	.L407:
 4947              	@ main.c:2174:     switch (iType)
 4948 009e 4FF4DF73 		mov	r3, #446	@ _166,
 4949 00a2 4FF4F972 		mov	r2, #498	@ _164,
 4950 00a6 CDE7     		b	.L390	@
 4951              	.L388:
 4952              	@ main.c:2177:         if ((ratio >= 0) && (ratio <= K1T))
 4953 00a8 402B     		cmp	r3, #64	@ prephitmp_18,
 4954 00aa F8D9     		bls	.L407	@,
 4955              	@ main.c:2179:             else if (ratio <= K2T)
 4956 00ac 802B     		cmp	r3, #128	@ prephitmp_18,
 4957 00ae 11D9     		bls	.L394	@,
 4958              	@ main.c:2181:             else if (ratio <= K3T)
 4959 00b0 C02B     		cmp	r3, #192	@ prephitmp_18,
ARM GAS  /tmp/ccjvICQi.s 			page 88


 4960 00b2 1EDD     		ble	.L395	@,
 4961              	@ main.c:2183:             else if (ratio <= K4T)
 4962 00b4 B3F5807F 		cmp	r3, #256	@ prephitmp_18,
 4963 00b8 20DD     		ble	.L396	@,
 4964              	@ main.c:2185:             else if (ratio <= K5T)
 4965 00ba B3F59C7F 		cmp	r3, #312	@ prephitmp_18,
 4966 00be 2CDD     		ble	.L397	@,
 4967              	@ main.c:2187:             else if (ratio <= K6T)
 4968 00c0 B3F5CD7F 		cmp	r3, #410	@ prephitmp_18,
 4969 00c4 2EDD     		ble	.L398	@,
 4970              	@ main.c:2189:             else if (ratio <= K7T)
 4971 00c6 40F29A22 		movw	r2, #666	@ tmp145,
 4972 00ca 9342     		cmp	r3, r2	@ prephitmp_18, tmp145
 4973 00cc 2DDC     		bgt	.L406	@,
 4974 00ce 1223     		movs	r3, #18	@ _166,
 4975 00d0 1822     		movs	r2, #24	@ _164,
 4976 00d2 B7E7     		b	.L390	@
 4977              	.L394:
 4978 00d4 40F2D123 		movw	r3, #721	@ _166,
 4979 00d8 4FF40572 		mov	r2, #532	@ _164,
 4980 00dc B2E7     		b	.L390	@
 4981              	.L401:
 4982 00de 40F2C123 		movw	r3, #705	@ _166,
 4983 00e2 4FF40A72 		mov	r2, #552	@ _164,
 4984 00e6 ADE7     		b	.L390	@
 4985              	.L402:
 4986 00e8 40F26333 		movw	r3, #867	@ _166,
 4987 00ec 40F25322 		movw	r2, #595	@ _164,
 4988 00f0 A8E7     		b	.L390	@
 4989              	.L395:
 4990 00f2 40F27B33 		movw	r3, #891	@ _166,
 4991 00f6 40F23F22 		movw	r2, #575	@ _164,
 4992 00fa A3E7     		b	.L390	@
 4993              	.L396:
 4994 00fc 40F2FE33 		movw	r3, #1022	@ _166,
 4995 0100 4FF41C72 		mov	r2, #624	@ _164,
 4996 0104 9EE7     		b	.L390	@
 4997              	.L403:
 4998 0106 40F2DF33 		movw	r3, #991	@ _166,
 4999 010a 40F28222 		movw	r2, #642	@ _164,
 5000 010e 99E7     		b	.L390	@
 5001              	.L404:
 5002 0110 40F2DD13 		movw	r3, #477	@ _166,
 5003 0114 40F27712 		movw	r2, #375	@ _164,
 5004 0118 94E7     		b	.L390	@
 5005              	.L397:
 5006 011a 4FF4FE73 		mov	r3, #508	@ _166,
 5007 011e 40F26F12 		movw	r2, #367	@ _164,
 5008 0122 8FE7     		b	.L390	@
 5009              	.L398:
 5010 0124 FB23     		movs	r3, #251	@ _166,
 5011 0126 D222     		movs	r2, #210	@ _164,
 5012 0128 8CE7     		b	.L390	@
 5013              	.L406:
 5014 012a 0020     		movs	r0, #0	@ <retval>,
 5015              	@ main.c:2228:     return(lux);
 5016 012c 94E7     		b	.L411	@
ARM GAS  /tmp/ccjvICQi.s 			page 89


 5017              	.L405:
 5018 012e 40F22713 		movw	r3, #295	@ _166,
 5019 0132 40F20112 		movw	r2, #257	@ _164,
 5020 0136 85E7     		b	.L390	@
 5021              		.size	CalculateLux, .-CalculateLux
 5022              		.section	.text.TSL2561_i2c,"ax",%progbits
 5023              		.align	1
 5024              		.p2align 2,,3
 5025              		.global	TSL2561_i2c
 5026              		.syntax unified
 5027              		.thumb
 5028              		.thumb_func
 5029              		.fpu softvfp
 5030              		.type	TSL2561_i2c, %function
 5031              	TSL2561_i2c:
 5032              		@ args = 0, pretend = 0, frame = 8
 5033              		@ frame_needed = 0, uses_anonymous_args = 0
 5034              	@ main.c:2244: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 5035 0000 0122     		movs	r2, #1	@ tmp142,
 5036              	@ main.c:2230: void TSL2561_i2c(void){
 5037 0002 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}	@
 5038              	@ main.c:2264: 		buf[0]=0x80;
 5039 0006 4FF46070 		mov	r0, #896	@ tmp159,
 5040              	@ main.c:2246: 		I2C2_CR1_SWRST_bb = 0;
 5041 000a 0027     		movs	r7, #0	@ tmp146,
 5042              	@ main.c:2247: 		I2C2->TRISE = 37;               		// limit slope
 5043 000c 2526     		movs	r6, #37	@ tmp149,
 5044              	@ main.c:2249: 		I2C2->CCR = (F_CPU/(4*400000));             // setup speed (100kHz)
 5045 000e 2D25     		movs	r5, #45	@ tmp152,
 5046              	@ main.c:2252: 		I2C2->CR2 = I2C_CR2_FREQ_36MHz;     // config I2C2 module
 5047 0010 2424     		movs	r4, #36	@ tmp155,
 5048              	@ main.c:2242: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// ...009900 PB11=SDA (Open-d
 5049 0012 3249     		ldr	r1, .L418	@ tmp138,
 5050              	@ main.c:2230: void TSL2561_i2c(void){
 5051 0014 82B0     		sub	sp, sp, #8	@,,
 5052              	@ main.c:2242: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// ...009900 PB11=SDA (Open-d
 5053 0016 4B68     		ldr	r3, [r1, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 5054              	@ main.c:2264: 		buf[0]=0x80;
 5055 0018 0DF10808 		add	r8, sp, #8	@ tmp195,,
 5056              	@ main.c:2242: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// ...009900 PB11=SDA (Open-d
 5057 001c 23F47F43 		bic	r3, r3, #65280	@ tmp139, _1,
 5058 0020 43F45D43 		orr	r3, r3, #56576	@ _3, tmp139,
 5059 0024 4B60     		str	r3, [r1, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 5060              	@ main.c:2244: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 5061 0026 2E4B     		ldr	r3, .L418+4	@ tmp141,
 5062              	@ main.c:2245: 		I2C2_CR1_SWRST_bb = 1;            	// force software reset of I2C peripheral
 5063 0028 2E49     		ldr	r1, .L418+8	@ tmp143,
 5064              	@ main.c:2244: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 5065 002a 1A60     		str	r2, [r3]	@ tmp142, MEM[(volatile long unsigned int *)1111622616B]
 5066              	@ main.c:2247: 		I2C2->TRISE = 37;               		// limit slope
 5067 002c 2E4B     		ldr	r3, .L418+12	@ tmp147,
 5068              	@ main.c:2245: 		I2C2_CR1_SWRST_bb = 1;            	// force software reset of I2C peripheral
 5069 002e 0A60     		str	r2, [r1]	@ tmp142, MEM[(volatile long unsigned int *)1108017212B]
 5070              	@ main.c:2246: 		I2C2_CR1_SWRST_bb = 0;
 5071 0030 0F60     		str	r7, [r1]	@ tmp146, MEM[(volatile long unsigned int *)1108017212B]
 5072              	@ main.c:2247: 		I2C2->TRISE = 37;               		// limit slope
 5073 0032 1E84     		strh	r6, [r3, #32]	@ movhi	@ tmp149, MEM[(struct I2C_TypeDef *)1073764352B].TRISE
ARM GAS  /tmp/ccjvICQi.s 			page 90


 5074              	@ main.c:2249: 		I2C2->CCR = (F_CPU/(4*400000));             // setup speed (100kHz)
 5075 0034 9D83     		strh	r5, [r3, #28]	@ movhi	@ tmp152, MEM[(struct I2C_TypeDef *)1073764352B].CCR
 5076              	@ main.c:2252: 		I2C2->CR2 = I2C_CR2_FREQ_36MHz;     // config I2C2 module
 5077 0036 9C80     		strh	r4, [r3, #4]	@ movhi	@ tmp155, MEM[(struct I2C_TypeDef *)1073764352B].CR2
 5078              	@ main.c:2253: 		I2C2_CR1_PE_bb = 1;               	// enable peripheral
 5079 0038 41F83C2C 		str	r2, [r1, #-60]	@ tmp142, MEM[(volatile long unsigned int *)1108017152B]
 5080              	@ main.c:2264: 		buf[0]=0x80;
 5081 003c 28F8080D 		strh	r0, [r8, #-8]!	@ movhi	@ tmp159, MEM[(u08[3] *)&buf]
 5082              	@ main.c:2266: 		i2c2_write(TSL2561_ADR,buf,2); // init control Power UP
 5083 0040 4146     		mov	r1, r8	@, tmp195
 5084 0042 0222     		movs	r2, #2	@,
 5085 0044 7220     		movs	r0, #114	@,
 5086 0046 FFF7FEFF 		bl	i2c2_write	@
 5087              	@ main.c:2267: 		buf[0]=0x81;
 5088 004a 40F28123 		movw	r3, #641	@ tmp162,
 5089              	@ main.c:2269: 		i2c2_write(TSL2561_ADR,buf,2); // init Timing 
 5090 004e 4146     		mov	r1, r8	@, tmp195
 5091 0050 0222     		movs	r2, #2	@,
 5092 0052 7220     		movs	r0, #114	@,
 5093              	@ main.c:2267: 		buf[0]=0x81;
 5094 0054 ADF80030 		strh	r3, [sp]	@ movhi	@ tmp162, MEM[(u08[3] *)&buf]
 5095              	@ main.c:2269: 		i2c2_write(TSL2561_ADR,buf,2); // init Timing 
 5096 0058 FFF7FEFF 		bl	i2c2_write	@
 5097 005c 234D     		ldr	r5, .L418+16	@ tmp196,
 5098 005e 244F     		ldr	r7, .L418+20	@ tmp194,
 5099              	@ main.c:2274: 			if(STCLK_MS*300 < (trg0 - SysTick->VAL)){
 5100 0060 244C     		ldr	r4, .L418+24	@ tmp165,
 5101 0062 254E     		ldr	r6, .L418+28	@ tmp167,
 5102              	.L414:
 5103 0064 2B68     		ldr	r3, [r5]	@ trg0.175_4, trg0
 5104 0066 A268     		ldr	r2, [r4, #8]	@ _5, MEM[(struct SysTick_Type *)3758153744B].VAL
 5105 0068 9B1A     		subs	r3, r3, r2	@ tmp166, trg0.175_4, _5
 5106 006a B342     		cmp	r3, r6	@ tmp166, tmp167
 5107 006c FAD9     		bls	.L414	@,
 5108              	@ main.c:2275: 				trg0 = SysTick->VAL;
 5109 006e D4F808C0 		ldr	ip, [r4, #8]	@ _7, MEM[(struct SysTick_Type *)3758153744B].VAL
 5110              	@ main.c:2281: 				i2c2_read(TSL2561_ADR, DATA0LOW, buf,2 );
 5111 0072 0223     		movs	r3, #2	@,
 5112 0074 4246     		mov	r2, r8	@, tmp195
 5113 0076 8C21     		movs	r1, #140	@,
 5114 0078 7220     		movs	r0, #114	@,
 5115              	@ main.c:2275: 				trg0 = SysTick->VAL;
 5116 007a C5F800C0 		str	ip, [r5]	@ _7, trg0
 5117              	@ main.c:2281: 				i2c2_read(TSL2561_ADR, DATA0LOW, buf,2 );
 5118 007e FFF7FEFF 		bl	i2c2_read	@
 5119              	@ main.c:2282: 				ch0 = (buf[1]<<8)+buf[0];
 5120 0082 9DF80120 		ldrb	r2, [sp, #1]	@ zero_extendqisi2	@ buf, buf
 5121 0086 9DF800A0 		ldrb	r10, [sp]	@ zero_extendqisi2	@ buf, buf
 5122              	@ main.c:2283: 				i2c2_read(TSL2561_ADR, DATA1LOW, buf,2 );
 5123 008a 8E21     		movs	r1, #142	@,
 5124 008c 0223     		movs	r3, #2	@,
 5125              	@ main.c:2282: 				ch0 = (buf[1]<<8)+buf[0];
 5126 008e 0AEB022A 		add	r10, r10, r2, lsl #8	@ tmp177, buf, buf,
 5127              	@ main.c:2283: 				i2c2_read(TSL2561_ADR, DATA1LOW, buf,2 );
 5128 0092 7220     		movs	r0, #114	@,
 5129 0094 4246     		mov	r2, r8	@, tmp195
 5130 0096 FFF7FEFF 		bl	i2c2_read	@
ARM GAS  /tmp/ccjvICQi.s 			page 91


 5131              	@ main.c:2284: 				ch1	= (buf[1]<<8)+buf[0];
 5132 009a 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2	@ buf, buf
 5133 009e 9DF80090 		ldrb	r9, [sp]	@ zero_extendqisi2	@ buf, buf
 5134              	@ main.c:2282: 				ch0 = (buf[1]<<8)+buf[0];
 5135 00a2 1FFA8AFA 		uxth	r10, r10	@ ch0, tmp177
 5136              	@ main.c:2284: 				ch1	= (buf[1]<<8)+buf[0];
 5137 00a6 09EB0329 		add	r9, r9, r3, lsl #8	@ tmp185, buf, buf,
 5138              	@ main.c:2294: 				sint2uart(ch0);
 5139 00aa 5046     		mov	r0, r10	@, ch0
 5140 00ac FFF7FEFF 		bl	sint2uart	@
 5141              	@ main.c:2284: 				ch1	= (buf[1]<<8)+buf[0];
 5142 00b0 1FFA89F9 		uxth	r9, r9	@ ch1, tmp185
 5143              	@ main.c:2295: 				UaPutK(",");	
 5144 00b4 1148     		ldr	r0, .L418+32	@,
 5145 00b6 FFF7FEFF 		bl	UaPutK	@
 5146              	@ main.c:2296: 				sint2uart(ch1);
 5147 00ba 4846     		mov	r0, r9	@, ch1
 5148 00bc FFF7FEFF 		bl	sint2uart	@
 5149              	@ main.c:2297: 				UaPutK("\r\n");	
 5150 00c0 0F48     		ldr	r0, .L418+36	@,
 5151 00c2 FFF7FEFF 		bl	UaPutK	@
 5152              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5153 00c6 A368     		ldr	r3, [r4, #8]	@ _52, MEM[(struct SysTick_Type *)3758153744B].VAL
 5154 00c8 3B60     		str	r3, [r7]	@ _52, Timt
 5155              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5156 00ca 3B68     		ldr	r3, [r7]	@ Timt.100_49, Timt
 5157 00cc A268     		ldr	r2, [r4, #8]	@ _50, MEM[(struct SysTick_Type *)3758153744B].VAL
 5158 00ce 9B1A     		subs	r3, r3, r2	@ _51, Timt.100_49, _50
 5159 00d0 0193     		str	r3, [sp, #4]	@ _51, MEM[(volatile u32 *)&tim]
 5160 00d2 3B68     		ldr	r3, [r7]	@ Timt.100_42, Timt
 5161 00d4 A268     		ldr	r2, [r4, #8]	@ _47, MEM[(struct SysTick_Type *)3758153744B].VAL
 5162 00d6 9B1A     		subs	r3, r3, r2	@ _48, Timt.100_42, _47
 5163 00d8 0193     		str	r3, [sp, #4]	@ _48, MEM[(volatile u32 *)&tim]
 5164 00da C3E7     		b	.L414	@
 5165              	.L419:
 5166              		.align	2
 5167              	.L418:
 5168 00dc 000C0140 		.word	1073810432
 5169 00e0 D8034242 		.word	1111622616
 5170 00e4 3C000B42 		.word	1108017212
 5171 00e8 00580040 		.word	1073764352
 5172 00ec 00000000 		.word	trg0
 5173 00f0 00000000 		.word	Timt
 5174 00f4 10E000E0 		.word	-536813552
 5175 00f8 E0322900 		.word	2700000
 5176 00fc 00000000 		.word	.LC71
 5177 0100 04000000 		.word	.LC13
 5178              		.size	TSL2561_i2c, .-TSL2561_i2c
 5179              		.section	.text.set_mode,"ax",%progbits
 5180              		.align	1
 5181              		.p2align 2,,3
 5182              		.global	set_mode
 5183              		.syntax unified
 5184              		.thumb
 5185              		.thumb_func
 5186              		.fpu softvfp
 5187              		.type	set_mode, %function
ARM GAS  /tmp/ccjvICQi.s 			page 92


 5188              	set_mode:
 5189              		@ args = 0, pretend = 0, frame = 8
 5190              		@ frame_needed = 0, uses_anonymous_args = 0
 5191 0000 30B5     		push	{r4, r5, lr}	@
 5192 0002 83B0     		sub	sp, sp, #12	@,,
 5193              	@ main.c:2330: 		i2c1_read(APDS9960_ADR, APDS9960_ENABLE, buf,1 );
 5194 0004 0123     		movs	r3, #1	@,
 5195              	@ main.c:2327: void set_mode( u08 mode, bool enable )	{
 5196 0006 0446     		mov	r4, r0	@ mode, mode
 5197 0008 0D46     		mov	r5, r1	@ enable, enable
 5198              	@ main.c:2330: 		i2c1_read(APDS9960_ADR, APDS9960_ENABLE, buf,1 );
 5199 000a 01AA     		add	r2, sp, #4	@ tmp134,,
 5200 000c 8021     		movs	r1, #128	@,
 5201 000e 7220     		movs	r0, #114	@,
 5202 0010 FFF7FEFF 		bl	i2c1_read	@
 5203              	@ main.c:2331: 		uint8_t reg_val = buf[0];
 5204 0014 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2	@ reg_val, buf
 5205              	@ main.c:2333:     if( reg_val == ERROR )
 5206 0018 FF2B     		cmp	r3, #255	@ reg_val,
 5207 001a 0FD0     		beq	.L420	@,
 5208              	@ main.c:2338:     if( mode == ALL )
 5209 001c 062C     		cmp	r4, #6	@ mode,
 5210 001e 0FD9     		bls	.L422	@,
 5211              	@ main.c:2342:       reg_val = 0x7F;
 5212 0020 002D     		cmp	r5, #0	@ enable,
 5213 0022 0CBF     		ite	eq
 5214 0024 0023     		moveq	r3, #0	@ reg_val,
 5215 0026 7F23     		movne	r3, #127	@ reg_val,
 5216              	.L423:
 5217              	@ main.c:2351: 		buf[0]=APDS9960_ENABLE;			buf[1]=reg_val; 			i2c1_write(APDS9960_ADR,buf,2); 
 5218 0028 8024     		movs	r4, #128	@ tmp129,
 5219 002a 01A9     		add	r1, sp, #4	@ tmp135,,
 5220 002c 0222     		movs	r2, #2	@,
 5221 002e 7220     		movs	r0, #114	@,
 5222 0030 8DF80530 		strb	r3, [sp, #5]	@ reg_val, buf
 5223 0034 8DF80440 		strb	r4, [sp, #4]	@ tmp129, buf
 5224 0038 FFF7FEFF 		bl	i2c1_write	@
 5225              	.L420:
 5226              	@ main.c:2352: 	}
 5227 003c 03B0     		add	sp, sp, #12	@,,
 5228              		@ sp needed	@
 5229 003e 30BD     		pop	{r4, r5, pc}	@
 5230              	.L422:
 5231              	@ main.c:2344:       reg_val &= ~( 1 << mode );
 5232 0040 0120     		movs	r0, #1	@ tmp123,
 5233 0042 A040     		lsls	r0, r0, r4	@ tmp122, tmp123, mode
 5234 0044 5BB2     		sxtb	r3, r3	@ reg_val.176_5, reg_val
 5235 0046 40B2     		sxtb	r0, r0	@ _3, tmp122
 5236              	@ main.c:2345:       if( enable )
 5237 0048 15B1     		cbz	r5, .L431	@ enable,
 5238              	@ main.c:2346:       reg_val |= ( 1 << mode );
 5239 004a 1843     		orrs	r0, r0, r3	@, tmp128, _3, reg_val.176_5
 5240 004c C3B2     		uxtb	r3, r0	@ reg_val, tmp128
 5241 004e EBE7     		b	.L423	@
 5242              	.L431:
 5243              	@ main.c:2344:       reg_val &= ~( 1 << mode );
 5244 0050 23EA0003 		bic	r3, r3, r0	@ tmp127, reg_val.176_5, _3
ARM GAS  /tmp/ccjvICQi.s 			page 93


 5245 0054 DBB2     		uxtb	r3, r3	@ reg_val, tmp127
 5246 0056 E7E7     		b	.L423	@
 5247              		.size	set_mode, .-set_mode
 5248              		.section	.text.MAX44009_i2c,"ax",%progbits
 5249              		.align	1
 5250              		.p2align 2,,3
 5251              		.global	MAX44009_i2c
 5252              		.syntax unified
 5253              		.thumb
 5254              		.thumb_func
 5255              		.fpu softvfp
 5256              		.type	MAX44009_i2c, %function
 5257              	MAX44009_i2c:
 5258              		@ args = 0, pretend = 0, frame = 16
 5259              		@ frame_needed = 0, uses_anonymous_args = 0
 5260 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 5261              	@ main.c:2369: 		I2C2->CR2     = 0;
 5262 0004 0020     		movs	r0, #0	@ tmp203,
 5263              	@ main.c:2370: 		I2C2->CCR     = (F_CPU/(4*400000));             	// setup speed (100kHz)
 5264 0006 2D21     		movs	r1, #45	@ tmp206,
 5265              	@ main.c:2367: 		I2C2->TRISE   = 37;               								// limit slope
 5266 0008 2525     		movs	r5, #37	@ tmp200,
 5267              	@ main.c:2364: 		GPIOB->CRH    = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// PB11=SDA (Open-drain) P
 5268 000a 784F     		ldr	r7, .L439	@ tmp193,
 5269              	@ main.c:2403: 		buf[0]=0x02;
 5270 000c 44F20204 		movw	r4, #16386	@ tmp234,
 5271              	@ main.c:2364: 		GPIOB->CRH    = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// PB11=SDA (Open-drain) P
 5272 0010 7B68     		ldr	r3, [r7, #4]	@ _2, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 5273              	@ main.c:2365: 		RCC->APB1ENR |= RCC_APB1ENR_I2C2EN;
 5274 0012 774A     		ldr	r2, .L439+4	@ tmp196,
 5275              	@ main.c:2364: 		GPIOB->CRH    = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// PB11=SDA (Open-drain) P
 5276 0014 23F47F43 		bic	r3, r3, #65280	@ tmp194, _2,
 5277 0018 43F45D43 		orr	r3, r3, #56576	@ _4, tmp194,
 5278 001c 7B60     		str	r3, [r7, #4]	@ _4, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 5279              	@ main.c:2365: 		RCC->APB1ENR |= RCC_APB1ENR_I2C2EN;
 5280 001e D2F81CC0 		ldr	ip, [r2, #28]	@ _5, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 5281              	@ main.c:2367: 		I2C2->TRISE   = 37;               								// limit slope
 5282 0022 744B     		ldr	r3, .L439+8	@ tmp198,
 5283              	@ main.c:2365: 		RCC->APB1ENR |= RCC_APB1ENR_I2C2EN;
 5284 0024 4CF4800C 		orr	ip, ip, #4194304	@ _6, _5,
 5285 0028 C2F81CC0 		str	ip, [r2, #28]	@ _6, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 5286              	@ main.c:2367: 		I2C2->TRISE   = 37;               								// limit slope
 5287 002c 1D84     		strh	r5, [r3, #32]	@ movhi	@ tmp200, MEM[(struct I2C_TypeDef *)1073764352B].TRISE
 5288              	@ main.c:2369: 		I2C2->CR2     = 0;
 5289 002e 9880     		strh	r0, [r3, #4]	@ movhi	@ tmp203, MEM[(struct I2C_TypeDef *)1073764352B].CR2
 5290              	@ main.c:2370: 		I2C2->CCR     = (F_CPU/(4*400000));             	// setup speed (100kHz)
 5291 0030 9983     		strh	r1, [r3, #28]	@ movhi	@ tmp206, MEM[(struct I2C_TypeDef *)1073764352B].CCR
 5292              	@ main.c:2372: 		I2C2->CR1    |= I2C_CR1_PE;											  // I2C2 Pheripherial enable
 5293 0032 B3F800C0 		ldrh	ip, [r3]	@, MEM[(struct I2C_TypeDef *)1073764352B].CR1
 5294              	@ main.c:2353: void MAX44009_i2c(void){
 5295 0036 87B0     		sub	sp, sp, #28	@,,
 5296              	@ main.c:2372: 		I2C2->CR1    |= I2C_CR1_PE;											  // I2C2 Pheripherial enable
 5297 0038 4CF0010C 		orr	ip, ip, #1	@ _8, MEM[(struct I2C_TypeDef *)1073764352B].CR1,
 5298 003c A3F800C0 		strh	ip, [r3]	@ movhi	@ _8, MEM[(struct I2C_TypeDef *)1073764352B].CR1
 5299              	@ main.c:2374: 		AFIO->MAPR   |= AFIO_MAPR_I2C1_REMAP;		// Remap TIM3 CH2->PB5
 5300 0040 DFF8D8C1 		ldr	ip, .L439+48	@ tmp212,
 5301              	@ main.c:2403: 		buf[0]=0x02;
ARM GAS  /tmp/ccjvICQi.s 			page 94


 5302 0044 06AE     		add	r6, sp, #24	@ tmp332,,
 5303              	@ main.c:2374: 		AFIO->MAPR   |= AFIO_MAPR_I2C1_REMAP;		// Remap TIM3 CH2->PB5
 5304 0046 DCF80430 		ldr	r3, [ip, #4]	@ _9, MEM[(struct AFIO_TypeDef *)1073807360B].MAPR
 5305 004a 43F00203 		orr	r3, r3, #2	@ _10, _9,
 5306 004e CCF80430 		str	r3, [ip, #4]	@ _10, MEM[(struct AFIO_TypeDef *)1073807360B].MAPR
 5307              	@ main.c:2375: 		GPIOB->CRH    = (GPIOB->CRH & 0xffffff00) | 0x000000dd;	// PB9=SDA (Alternate Open
 5308 0052 7B68     		ldr	r3, [r7, #4]	@ _11, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 5309 0054 23F0FF03 		bic	r3, r3, #255	@ tmp215, _11,
 5310 0058 43F0DD03 		orr	r3, r3, #221	@ _13, tmp215,
 5311 005c 7B60     		str	r3, [r7, #4]	@ _13, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 5312              	@ main.c:2376: 		RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;
 5313 005e D769     		ldr	r7, [r2, #28]	@ _14, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 5314              	@ main.c:2377: 		I2C1->TRISE   = 37;               		// limit slope
 5315 0060 654B     		ldr	r3, .L439+12	@ tmp219,
 5316              	@ main.c:2376: 		RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;
 5317 0062 47F40017 		orr	r7, r7, #2097152	@ _15, _14,
 5318 0066 D761     		str	r7, [r2, #28]	@ _15, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 5319              	@ main.c:2377: 		I2C1->TRISE   = 37;               		// limit slope
 5320 0068 1D84     		strh	r5, [r3, #32]	@ movhi	@ tmp200, MEM[(struct I2C_TypeDef *)1073763328B].TRISE
 5321              	@ main.c:2378: 		I2C1->CR2     = 0;
 5322 006a 9880     		strh	r0, [r3, #4]	@ movhi	@ tmp203, MEM[(struct I2C_TypeDef *)1073763328B].CR2
 5323              	@ main.c:2379: 		I2C1->CCR     = (F_CPU/(4*400000));   // setup speed (400kHz)
 5324 006c 9983     		strh	r1, [r3, #28]	@ movhi	@ tmp206, MEM[(struct I2C_TypeDef *)1073763328B].CCR
 5325              	@ main.c:2380: 		I2C1->CR1    |= I2C_CR1_PE;						// I2C2 Pheripherial enable
 5326 006e 1988     		ldrh	r1, [r3]	@, MEM[(struct I2C_TypeDef *)1073763328B].CR1
 5327              	@ main.c:2405: 		i2c2_write(MAX44009_ADR,buf,2); // init control Power UP
 5328 0070 0222     		movs	r2, #2	@,
 5329              	@ main.c:2380: 		I2C1->CR1    |= I2C_CR1_PE;						// I2C2 Pheripherial enable
 5330 0072 41F00101 		orr	r1, r1, #1	@ _17, MEM[(struct I2C_TypeDef *)1073763328B].CR1,
 5331 0076 1980     		strh	r1, [r3]	@ movhi	@ _17, MEM[(struct I2C_TypeDef *)1073763328B].CR1
 5332              	@ main.c:2403: 		buf[0]=0x02;
 5333 0078 26F80C4D 		strh	r4, [r6, #-12]!	@ movhi	@ tmp234, MEM[(u08[10] *)&buf]
 5334              	@ main.c:2405: 		i2c2_write(MAX44009_ADR,buf,2); // init control Power UP
 5335 007c 3146     		mov	r1, r6	@, tmp332
 5336 007e 9420     		movs	r0, #148	@,
 5337 0080 FFF7FEFF 		bl	i2c2_write	@
 5338              	@ main.c:2423: 		set_mode( AMBIENT_LIGHT, true );
 5339 0084 0121     		movs	r1, #1	@,
 5340 0086 0846     		mov	r0, r1	@,
 5341 0088 FFF7FEFF 		bl	set_mode	@
 5342              	@ main.c:2426: 		i2c1_read(APDS9960_ADR, APDS9960_ID, buf,1 );
 5343 008c 3246     		mov	r2, r6	@, tmp332
 5344 008e 0123     		movs	r3, #1	@,
 5345 0090 9221     		movs	r1, #146	@,
 5346 0092 7220     		movs	r0, #114	@,
 5347 0094 FFF7FEFF 		bl	i2c1_read	@
 5348              	@ main.c:2427: 		UaPutK("\r\n APDS9960_ID=0x");	
 5349 0098 5848     		ldr	r0, .L439+16	@,
 5350 009a FFF7FEFF 		bl	UaPutK	@
 5351              	@ main.c:2428: 		hex2uart(buf[0],2);
 5352 009e 0221     		movs	r1, #2	@,
 5353 00a0 9DF80C00 		ldrb	r0, [sp, #12]	@ zero_extendqisi2	@, buf
 5354 00a4 FFF7FEFF 		bl	hex2uart	@
 5355              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 5356 00a8 554B     		ldr	r3, .L439+20	@ tmp239,
 5357 00aa 564A     		ldr	r2, .L439+24	@ tmp330,
 5358              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
ARM GAS  /tmp/ccjvICQi.s 			page 95


 5359 00ac 1846     		mov	r0, r3	@ tmp242, tmp239
 5360              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 5361 00ae 9B68     		ldr	r3, [r3, #8]	@ _106, MEM[(struct SysTick_Type *)3758153744B].VAL
 5362              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 5363 00b0 5549     		ldr	r1, .L439+28	@ tmp244,
 5364              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 5365 00b2 1360     		str	r3, [r2]	@ _106, delay_us
 5366              	.L433:
 5367              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 5368 00b4 1368     		ldr	r3, [r2]	@ delay_us.88_123, delay_us
 5369 00b6 8468     		ldr	r4, [r0, #8]	@ _124, MEM[(struct SysTick_Type *)3758153744B].VAL
 5370 00b8 1B1B     		subs	r3, r3, r4	@ tmp243, delay_us.88_123, _124
 5371 00ba 8B42     		cmp	r3, r1	@ tmp243, tmp244
 5372 00bc FAD9     		bls	.L433	@,
 5373 00be 534D     		ldr	r5, .L439+32	@ tmp331,
 5374              	@ main.c:2434: 			if(STCLK_MS*100 < (trg0 - SysTick->VAL)){
 5375 00c0 4F4C     		ldr	r4, .L439+20	@ tmp246,
 5376 00c2 534F     		ldr	r7, .L439+36	@ tmp248,
 5377              	@ main.c:2446: 				lux = ((1<<exponent) * mantissa * 45 ) /1000 ;
 5378 00c4 DFF85881 		ldr	r8, .L439+52	@ tmp270,
 5379              	.L434:
 5380              	@ main.c:2434: 			if(STCLK_MS*100 < (trg0 - SysTick->VAL)){
 5381 00c8 2B68     		ldr	r3, [r5]	@ trg0.178_20, trg0
 5382 00ca A268     		ldr	r2, [r4, #8]	@ _21, MEM[(struct SysTick_Type *)3758153744B].VAL
 5383 00cc 9B1A     		subs	r3, r3, r2	@ tmp247, trg0.178_20, _21
 5384 00ce BB42     		cmp	r3, r7	@ tmp247, tmp248
 5385 00d0 FAD9     		bls	.L434	@,
 5386              	@ main.c:2435: 				trg0 = SysTick->VAL;
 5387 00d2 A368     		ldr	r3, [r4, #8]	@ _23, MEM[(struct SysTick_Type *)3758153744B].VAL
 5388              	@ main.c:2437: 				UaPutK("\r\n");	
 5389 00d4 4F48     		ldr	r0, .L439+40	@,
 5390              	@ main.c:2435: 				trg0 = SysTick->VAL;
 5391 00d6 2B60     		str	r3, [r5]	@ _23, trg0
 5392              	@ main.c:2437: 				UaPutK("\r\n");	
 5393 00d8 FFF7FEFF 		bl	UaPutK	@
 5394              	@ main.c:2441: 				i2c2_read(MAX44009_ADR, 0x03, buf,2 );
 5395 00dc 0321     		movs	r1, #3	@,
 5396 00de 3246     		mov	r2, r6	@, tmp332
 5397 00e0 0223     		movs	r3, #2	@,
 5398 00e2 9420     		movs	r0, #148	@,
 5399 00e4 FFF7FEFF 		bl	i2c2_read	@
 5400              	@ main.c:2443: 				exponent = (buf[0] & 0xF0) >> 4;
 5401 00e8 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2	@ _24, buf
 5402              	@ main.c:2444: 				mantissa = ((buf[0] & 0x0F) << 4) | (buf[1] & 0x0F);
 5403 00ec 9DF80D20 		ldrb	r2, [sp, #13]	@ zero_extendqisi2	@ buf, buf
 5404 00f0 1801     		lsls	r0, r3, #4	@ tmp253, _24,
 5405 00f2 02F00F02 		and	r2, r2, #15	@ tmp258, buf,
 5406 00f6 C0B2     		uxtb	r0, r0	@ tmp254, tmp253
 5407              	@ main.c:2443: 				exponent = (buf[0] & 0xF0) >> 4;
 5408 00f8 1B09     		lsrs	r3, r3, #4	@ exponent, _24,
 5409              	@ main.c:2444: 				mantissa = ((buf[0] & 0x0F) << 4) | (buf[1] & 0x0F);
 5410 00fa 1043     		orrs	r0, r0, r2	@, mantissa, tmp254, tmp258
 5411              	@ main.c:2446: 				lux = ((1<<exponent) * mantissa * 45 ) /1000 ;
 5412 00fc 9840     		lsls	r0, r0, r3	@ tmp262, mantissa, exponent
 5413 00fe 00EB4000 		add	r0, r0, r0, lsl #1	@ tmp265, tmp262, tmp262,
 5414 0102 C0EB0010 		rsb	r0, r0, r0, lsl #4	@ tmp267, tmp265, tmp265,
 5415 0106 A8FB0030 		umull	r3, r0, r8, r0	@ tmp336, tmp269, tmp270, tmp267
ARM GAS  /tmp/ccjvICQi.s 			page 96


 5416              	@ main.c:2449: 				sint2uart(lux);
 5417 010a 8009     		lsrs	r0, r0, #6	@, tmp269,
 5418 010c FFF7FEFF 		bl	sint2uart	@
 5419              	@ main.c:2450: 				UaPutK(",");	
 5420 0110 4148     		ldr	r0, .L439+44	@,
 5421 0112 FFF7FEFF 		bl	UaPutK	@
 5422              	@ main.c:2452: 				i2c2_read(TSL2561_ADR, DATA0LOW, buf,2 );
 5423 0116 3246     		mov	r2, r6	@, tmp332
 5424 0118 0223     		movs	r3, #2	@,
 5425 011a 8C21     		movs	r1, #140	@,
 5426 011c 7220     		movs	r0, #114	@,
 5427 011e FFF7FEFF 		bl	i2c2_read	@
 5428              	@ main.c:2453: 				ch0 = (buf[1]<<8)+buf[0];
 5429 0122 9DF80D20 		ldrb	r2, [sp, #13]	@ zero_extendqisi2	@ buf, buf
 5430 0126 9DF80C90 		ldrb	r9, [sp, #12]	@ zero_extendqisi2	@ buf, buf
 5431              	@ main.c:2454: 				i2c2_read(TSL2561_ADR, DATA1LOW, buf,2 );
 5432 012a 0223     		movs	r3, #2	@,
 5433              	@ main.c:2453: 				ch0 = (buf[1]<<8)+buf[0];
 5434 012c 09EB0229 		add	r9, r9, r2, lsl #8	@ tmp284, buf, buf,
 5435              	@ main.c:2454: 				i2c2_read(TSL2561_ADR, DATA1LOW, buf,2 );
 5436 0130 8E21     		movs	r1, #142	@,
 5437 0132 3246     		mov	r2, r6	@, tmp332
 5438 0134 7220     		movs	r0, #114	@,
 5439 0136 FFF7FEFF 		bl	i2c2_read	@
 5440              	@ main.c:2457: 				lux=CalculateLux(1,2,ch0,ch1,0);
 5441 013a 0021     		movs	r1, #0	@ tmp294,
 5442              	@ main.c:2455: 				ch1	= (buf[1]<<8)+buf[0];
 5443 013c 9DF80D00 		ldrb	r0, [sp, #13]	@ zero_extendqisi2	@ buf, buf
 5444 0140 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2	@ buf, buf
 5445              	@ main.c:2453: 				ch0 = (buf[1]<<8)+buf[0];
 5446 0144 1FFA89F9 		uxth	r9, r9	@ ch0, tmp284
 5447              	@ main.c:2455: 				ch1	= (buf[1]<<8)+buf[0];
 5448 0148 03EB0023 		add	r3, r3, r0, lsl #8	@ tmp292, buf, buf,
 5449              	@ main.c:2457: 				lux=CalculateLux(1,2,ch0,ch1,0);
 5450 014c 4A46     		mov	r2, r9	@, ch0
 5451 014e 9BB2     		uxth	r3, r3	@, tmp292
 5452 0150 0091     		str	r1, [sp]	@ tmp294,
 5453 0152 0120     		movs	r0, #1	@,
 5454 0154 0221     		movs	r1, #2	@,
 5455 0156 FFF7FEFF 		bl	CalculateLux	@
 5456              	@ main.c:2458: 				sint2uart(lux);
 5457 015a FFF7FEFF 		bl	sint2uart	@
 5458              	@ main.c:2460: 				UaPutC(',');
 5459 015e 2C20     		movs	r0, #44	@,
 5460 0160 FFF7FEFF 		bl	UaPutC	@
 5461              	@ main.c:2463: 				memset ( buf, 1, 10);
 5462 0164 4FF0013C 		mov	ip, #16843009	@ tmp298,
 5463              	@ main.c:2464: 				i2c1_read(APDS9960_ADR, 0x94, buf,8 );
 5464 0168 3246     		mov	r2, r6	@, tmp332
 5465 016a 0823     		movs	r3, #8	@,
 5466 016c 9421     		movs	r1, #148	@,
 5467 016e 7220     		movs	r0, #114	@,
 5468              	@ main.c:2463: 				memset ( buf, 1, 10);
 5469 0170 C6E900CC 		strd	ip, ip, [r6]	@ tmp298, tmp298, tmp332
 5470 0174 A6F808C0 		strh	ip, [r6, #8]	@ movhi	@ tmp298, MEM[(void *)&buf]
 5471              	@ main.c:2464: 				i2c1_read(APDS9960_ADR, 0x94, buf,8 );
 5472 0178 FFF7FEFF 		bl	i2c1_read	@
ARM GAS  /tmp/ccjvICQi.s 			page 97


 5473              	@ main.c:2465: 				aC = (buf[1]<<8)+buf[0];
 5474 017c 9DF80DC0 		ldrb	ip, [sp, #13]	@ zero_extendqisi2	@ buf, buf
 5475 0180 9DF80C00 		ldrb	r0, [sp, #12]	@ zero_extendqisi2	@ buf, buf
 5476              	@ main.c:2466: 				aR = (buf[3]<<8)+buf[2];
 5477 0184 9DF80F10 		ldrb	r1, [sp, #15]	@ zero_extendqisi2	@ buf, buf
 5478 0188 9DF80EB0 		ldrb	fp, [sp, #14]	@ zero_extendqisi2	@ buf, buf
 5479              	@ main.c:2467: 				aG = (buf[5]<<8)+buf[4];
 5480 018c 9DF81120 		ldrb	r2, [sp, #17]	@ zero_extendqisi2	@ buf, buf
 5481              	@ main.c:2468: 				aB = (buf[7]<<8)+buf[6];
 5482 0190 9DF81330 		ldrb	r3, [sp, #19]	@ zero_extendqisi2	@ buf, buf
 5483              	@ main.c:2465: 				aC = (buf[1]<<8)+buf[0];
 5484 0194 00EB0C20 		add	r0, r0, ip, lsl #8	@ tmp328, buf, buf,
 5485              	@ main.c:2467: 				aG = (buf[5]<<8)+buf[4];
 5486 0198 9DF810A0 		ldrb	r10, [sp, #16]	@ zero_extendqisi2	@ buf, buf
 5487              	@ main.c:2468: 				aB = (buf[7]<<8)+buf[6];
 5488 019c 9DF81290 		ldrb	r9, [sp, #18]	@ zero_extendqisi2	@ buf, buf
 5489              	@ main.c:2466: 				aR = (buf[3]<<8)+buf[2];
 5490 01a0 0BEB012B 		add	fp, fp, r1, lsl #8	@ tmp307, buf, buf,
 5491              	@ main.c:2470: 				sint2uart(aC); UaPutC(','); //hex2uart((buf[1]<<8)+buf[0],4);
 5492 01a4 80B2     		uxth	r0, r0	@, tmp328
 5493              	@ main.c:2467: 				aG = (buf[5]<<8)+buf[4];
 5494 01a6 0AEB022A 		add	r10, r10, r2, lsl #8	@ tmp314, buf, buf,
 5495              	@ main.c:2468: 				aB = (buf[7]<<8)+buf[6];
 5496 01aa 09EB0329 		add	r9, r9, r3, lsl #8	@ tmp321, buf, buf,
 5497              	@ main.c:2466: 				aR = (buf[3]<<8)+buf[2];
 5498 01ae 1FFA8BFB 		uxth	fp, fp	@ aR, tmp307
 5499              	@ main.c:2470: 				sint2uart(aC); UaPutC(','); //hex2uart((buf[1]<<8)+buf[0],4);
 5500 01b2 FFF7FEFF 		bl	sint2uart	@
 5501 01b6 2C20     		movs	r0, #44	@,
 5502 01b8 FFF7FEFF 		bl	UaPutC	@
 5503              	@ main.c:2471: 				sint2uart(aR); UaPutC(','); //hex2uart((buf[3]<<8)+buf[2],4);
 5504 01bc 5846     		mov	r0, fp	@, aR
 5505 01be FFF7FEFF 		bl	sint2uart	@
 5506              	@ main.c:2467: 				aG = (buf[5]<<8)+buf[4];
 5507 01c2 1FFA8AFA 		uxth	r10, r10	@ aG, tmp314
 5508              	@ main.c:2471: 				sint2uart(aR); UaPutC(','); //hex2uart((buf[3]<<8)+buf[2],4);
 5509 01c6 2C20     		movs	r0, #44	@,
 5510 01c8 FFF7FEFF 		bl	UaPutC	@
 5511              	@ main.c:2472: 				sint2uart(aG); UaPutC(','); //hex2uart((buf[5]<<8)+buf[4],4);
 5512 01cc 5046     		mov	r0, r10	@, aG
 5513 01ce FFF7FEFF 		bl	sint2uart	@
 5514              	@ main.c:2468: 				aB = (buf[7]<<8)+buf[6];
 5515 01d2 1FFA89F9 		uxth	r9, r9	@ aB, tmp321
 5516              	@ main.c:2472: 				sint2uart(aG); UaPutC(','); //hex2uart((buf[5]<<8)+buf[4],4);
 5517 01d6 2C20     		movs	r0, #44	@,
 5518 01d8 FFF7FEFF 		bl	UaPutC	@
 5519              	@ main.c:2473: 				sint2uart(aB); UaPutC(',');//hex2uart((buf[7]<<8)+buf[6],4);
 5520 01dc 4846     		mov	r0, r9	@, aB
 5521 01de FFF7FEFF 		bl	sint2uart	@
 5522 01e2 2C20     		movs	r0, #44	@,
 5523 01e4 FFF7FEFF 		bl	UaPutC	@
 5524 01e8 6EE7     		b	.L434	@
 5525              	.L440:
 5526 01ea 00BF     		.align	2
 5527              	.L439:
 5528 01ec 000C0140 		.word	1073810432
 5529 01f0 00100240 		.word	1073876992
ARM GAS  /tmp/ccjvICQi.s 			page 98


 5530 01f4 00580040 		.word	1073764352
 5531 01f8 00540040 		.word	1073763328
 5532 01fc 00000000 		.word	.LC72
 5533 0200 10E000E0 		.word	-536813552
 5534 0204 00000000 		.word	delay_us
 5535 0208 3F771B00 		.word	1799999
 5536 020c 00000000 		.word	trg0
 5537 0210 A0BB0D00 		.word	900000
 5538 0214 04000000 		.word	.LC13
 5539 0218 00000000 		.word	.LC71
 5540 021c 00000140 		.word	1073807360
 5541 0220 D34D6210 		.word	274877907
 5542              		.size	MAX44009_i2c, .-MAX44009_i2c
 5543              		.section	.text.BMP280_i2c,"ax",%progbits
 5544              		.align	1
 5545              		.p2align 2,,3
 5546              		.global	BMP280_i2c
 5547              		.syntax unified
 5548              		.thumb
 5549              		.thumb_func
 5550              		.fpu softvfp
 5551              		.type	BMP280_i2c, %function
 5552              	BMP280_i2c:
 5553              		@ args = 0, pretend = 0, frame = 80
 5554              		@ frame_needed = 0, uses_anonymous_args = 0
 5555 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 5556              	@ main.c:2501: 		I2C2->CCR = (1<<15) | 25;               			// setup speed (800kHz)
 5557 0004 48F2190C 		movw	ip, #32793	@ tmp322,
 5558              	@ main.c:2498: 		I2C2->TRISE = 37;               		// limit slope
 5559 0008 4FF0250E 		mov	lr, #37	@ tmp319,
 5560              	@ main.c:2495: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 5561 000c 0125     		movs	r5, #1	@ tmp312,
 5562              	@ main.c:2497: 		I2C2_CR1_SWRST_bb = 0;
 5563 000e 4FF00008 		mov	r8, #0	@ tmp316,
 5564              	@ main.c:2502: 		I2C2->CR2 = I2C_CR2_FREQ_36MHz;     // config I2C2 module
 5565 0012 2427     		movs	r7, #36	@ tmp325,
 5566              	@ main.c:2493: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000bf00;	// ...009d00 PB10=SCL(Push-pu
 5567 0014 C74A     		ldr	r2, .L450	@ tmp308,
 5568              	@ main.c:2498: 		I2C2->TRISE = 37;               		// limit slope
 5569 0016 C84C     		ldr	r4, .L450+4	@ tmp317,
 5570              	@ main.c:2493: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000bf00;	// ...009d00 PB10=SCL(Push-pu
 5571 0018 5368     		ldr	r3, [r2, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 5572              	@ main.c:2496: 		I2C2_CR1_SWRST_bb = 1;            	// force software reset of I2C peripheral
 5573 001a C848     		ldr	r0, .L450+8	@ tmp313,
 5574              	@ main.c:2495: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 5575 001c C849     		ldr	r1, .L450+12	@ tmp311,
 5576              	@ main.c:2503: 		I2C2_CR1_PE_bb = 1;               	// enable peripheral
 5577 001e C94E     		ldr	r6, .L450+16	@ tmp326,
 5578              	@ main.c:2493: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000bf00;	// ...009d00 PB10=SCL(Push-pu
 5579 0020 23F47F43 		bic	r3, r3, #65280	@ tmp309, _1,
 5580              	@ main.c:2486: void BMP280_i2c(void){
 5581 0024 95B0     		sub	sp, sp, #84	@,,
 5582              	@ main.c:2493: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000bf00;	// ...009d00 PB10=SCL(Push-pu
 5583 0026 43F43F43 		orr	r3, r3, #48896	@ _3, tmp309,
 5584 002a 5360     		str	r3, [r2, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 5585              	@ main.c:2495: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 5586 002c 0D60     		str	r5, [r1]	@ tmp312, MEM[(volatile long unsigned int *)1111622616B]
ARM GAS  /tmp/ccjvICQi.s 			page 99


 5587              	@ main.c:2505: 		i2c2_read(BMP280_ADR,  0xD0, buf,1 );
 5588 002e 2B46     		mov	r3, r5	@, tmp312
 5589              	@ main.c:2496: 		I2C2_CR1_SWRST_bb = 1;            	// force software reset of I2C peripheral
 5590 0030 0560     		str	r5, [r0]	@ tmp312, MEM[(volatile long unsigned int *)1108017212B]
 5591              	@ main.c:2505: 		i2c2_read(BMP280_ADR,  0xD0, buf,1 );
 5592 0032 0EAA     		add	r2, sp, #56	@ tmp503,,
 5593              	@ main.c:2497: 		I2C2_CR1_SWRST_bb = 0;
 5594 0034 C0F80080 		str	r8, [r0]	@ tmp316, MEM[(volatile long unsigned int *)1108017212B]
 5595              	@ main.c:2505: 		i2c2_read(BMP280_ADR,  0xD0, buf,1 );
 5596 0038 D021     		movs	r1, #208	@,
 5597              	@ main.c:2498: 		I2C2->TRISE = 37;               		// limit slope
 5598 003a A4F820E0 		strh	lr, [r4, #32]	@ movhi	@ tmp319, MEM[(struct I2C_TypeDef *)1073764352B].TRISE
 5599              	@ main.c:2505: 		i2c2_read(BMP280_ADR,  0xD0, buf,1 );
 5600 003e EC20     		movs	r0, #236	@,
 5601              	@ main.c:2501: 		I2C2->CCR = (1<<15) | 25;               			// setup speed (800kHz)
 5602 0040 A4F81CC0 		strh	ip, [r4, #28]	@ movhi	@ tmp322, MEM[(struct I2C_TypeDef *)1073764352B].CCR
 5603              	@ main.c:2502: 		I2C2->CR2 = I2C_CR2_FREQ_36MHz;     // config I2C2 module
 5604 0044 A780     		strh	r7, [r4, #4]	@ movhi	@ tmp325, MEM[(struct I2C_TypeDef *)1073764352B].CR2
 5605              	@ main.c:2503: 		I2C2_CR1_PE_bb = 1;               	// enable peripheral
 5606 0046 3560     		str	r5, [r6]	@ tmp312, MEM[(volatile long unsigned int *)1108017152B]
 5607              	@ main.c:2505: 		i2c2_read(BMP280_ADR,  0xD0, buf,1 );
 5608 0048 FFF7FEFF 		bl	i2c2_read	@
 5609              	@ main.c:2506: 		UaPutK("\r\n i2c_BMP280 = 0x");	
 5610 004c BE48     		ldr	r0, .L450+20	@,
 5611 004e FFF7FEFF 		bl	UaPutK	@
 5612              	@ main.c:2507: 		hex2uart(buf[0],2);
 5613 0052 0221     		movs	r1, #2	@,
 5614 0054 9DF83800 		ldrb	r0, [sp, #56]	@ zero_extendqisi2	@, buf
 5615 0058 FFF7FEFF 		bl	hex2uart	@
 5616              	@ main.c:2510: 		buf[0]=0xf4;
 5617 005c 4BF2F473 		movw	r3, #47092	@ tmp332,
 5618              	@ main.c:2512: 		i2c2_write(BMP280_ADR,buf,2); // set mode
 5619 0060 0EA9     		add	r1, sp, #56	@ tmp504,,
 5620 0062 0222     		movs	r2, #2	@,
 5621 0064 EC20     		movs	r0, #236	@,
 5622              	@ main.c:2510: 		buf[0]=0xf4;
 5623 0066 ADF83830 		strh	r3, [sp, #56]	@ movhi	@ tmp332, MEM[(u08[24] *)&buf]
 5624              	@ main.c:2512: 		i2c2_write(BMP280_ADR,buf,2); // set mode
 5625 006a FFF7FEFF 		bl	i2c2_write	@
 5626              	@ main.c:2514: 		buf[0]=0xf5;
 5627 006e 41F2F503 		movw	r3, #4341	@ tmp335,
 5628              	@ main.c:2516: 		i2c2_write(BMP280_ADR,buf,2); // set mode
 5629 0072 0EA9     		add	r1, sp, #56	@ tmp505,,
 5630 0074 0222     		movs	r2, #2	@,
 5631 0076 EC20     		movs	r0, #236	@,
 5632              	@ main.c:2514: 		buf[0]=0xf5;
 5633 0078 ADF83830 		strh	r3, [sp, #56]	@ movhi	@ tmp335, MEM[(u08[24] *)&buf]
 5634              	@ main.c:2516: 		i2c2_write(BMP280_ADR,buf,2); // set mode
 5635 007c FFF7FEFF 		bl	i2c2_write	@
 5636              	@ main.c:2518: 		i2c2_read(BMP280_ADR,  0x88, buf,6+16 );
 5637 0080 0EAA     		add	r2, sp, #56	@ tmp506,,
 5638 0082 1623     		movs	r3, #22	@,
 5639 0084 8821     		movs	r1, #136	@,
 5640 0086 EC20     		movs	r0, #236	@,
 5641 0088 FFF7FEFF 		bl	i2c2_read	@
 5642              	@ main.c:2521: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5643 008c 9DF83D20 		ldrb	r2, [sp, #61]	@ zero_extendqisi2	@ buf, buf
ARM GAS  /tmp/ccjvICQi.s 			page 100


 5644              	@ main.c:2524: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5645 0090 9DF84110 		ldrb	r1, [sp, #65]	@ zero_extendqisi2	@ buf, buf
 5646              	@ main.c:2521: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5647 0094 0692     		str	r2, [sp, #24]	@ buf, %sfp
 5648              	@ main.c:2531: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5649 0096 9DF84F20 		ldrb	r2, [sp, #79]	@ zero_extendqisi2	@ buf, buf
 5650              	@ main.c:2521: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5651 009a 9DF83CA0 		ldrb	r10, [sp, #60]	@ zero_extendqisi2	@ buf, buf
 5652              	@ main.c:2531: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5653 009e 0592     		str	r2, [sp, #20]	@ buf, %sfp
 5654              	@ main.c:2521: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5655 00a0 069A     		ldr	r2, [sp, #24]	@ buf, %sfp
 5656              	@ main.c:2524: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5657 00a2 0091     		str	r1, [sp]	@ buf, %sfp
 5658              	@ main.c:2525: 		dig_P3 = (s16)((buf[11]<<8) | buf[10]);
 5659 00a4 9DF84300 		ldrb	r0, [sp, #67]	@ zero_extendqisi2	@ buf, buf
 5660              	@ main.c:2521: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5661 00a8 4AEA022A 		orr	r10, r10, r2, lsl #8	@ tmp349, buf, buf,
 5662              	@ main.c:2524: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5663 00ac 9DF84090 		ldrb	r9, [sp, #64]	@ zero_extendqisi2	@ buf, buf
 5664 00b0 009A     		ldr	r2, [sp]	@ buf, %sfp
 5665              	@ main.c:2525: 		dig_P3 = (s16)((buf[11]<<8) | buf[10]);
 5666 00b2 0190     		str	r0, [sp, #4]	@ buf, %sfp
 5667              	@ main.c:2527: 		dig_P5 = (s16)((buf[15]<<8) | buf[14]);
 5668 00b4 9DF84760 		ldrb	r6, [sp, #71]	@ zero_extendqisi2	@ buf, buf
 5669              	@ main.c:2524: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5670 00b8 49EA0229 		orr	r9, r9, r2, lsl #8	@ tmp355, buf, buf,
 5671              	@ main.c:2525: 		dig_P3 = (s16)((buf[11]<<8) | buf[10]);
 5672 00bc 9DF84280 		ldrb	r8, [sp, #66]	@ zero_extendqisi2	@ buf, buf
 5673 00c0 019A     		ldr	r2, [sp, #4]	@ buf, %sfp
 5674              	@ main.c:2527: 		dig_P5 = (s16)((buf[15]<<8) | buf[14]);
 5675 00c2 0296     		str	r6, [sp, #8]	@ buf, %sfp
 5676              	@ main.c:2528: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5677 00c4 9DF84970 		ldrb	r7, [sp, #73]	@ zero_extendqisi2	@ buf, buf
 5678              	@ main.c:2529: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5679 00c8 9DF84B10 		ldrb	r1, [sp, #75]	@ zero_extendqisi2	@ buf, buf
 5680              	@ main.c:2520: 		dig_T2 = (s16)((buf[3]<<8) | buf[2]);
 5681 00cc 9DF83B30 		ldrb	r3, [sp, #59]	@ zero_extendqisi2	@ buf, buf
 5682              	@ main.c:2525: 		dig_P3 = (s16)((buf[11]<<8) | buf[10]);
 5683 00d0 48EA0228 		orr	r8, r8, r2, lsl #8	@ tmp361, buf, buf,
 5684              	@ main.c:2520: 		dig_T2 = (s16)((buf[3]<<8) | buf[2]);
 5685 00d4 9DF83AB0 		ldrb	fp, [sp, #58]	@ zero_extendqisi2	@ buf, buf
 5686              	@ main.c:2527: 		dig_P5 = (s16)((buf[15]<<8) | buf[14]);
 5687 00d8 029A     		ldr	r2, [sp, #8]	@ buf, %sfp
 5688 00da 9DF846E0 		ldrb	lr, [sp, #70]	@ zero_extendqisi2	@ buf, buf
 5689              	@ main.c:2528: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5690 00de 0397     		str	r7, [sp, #12]	@ buf, %sfp
 5691              	@ main.c:2530: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5692 00e0 9DF84C60 		ldrb	r6, [sp, #76]	@ zero_extendqisi2	@ buf, buf
 5693              	@ main.c:2529: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5694 00e4 0491     		str	r1, [sp, #16]	@ buf, %sfp
 5695              	@ main.c:2530: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5696 00e6 9DF84D10 		ldrb	r1, [sp, #77]	@ zero_extendqisi2	@ buf, buf
 5697              	@ main.c:2527: 		dig_P5 = (s16)((buf[15]<<8) | buf[14]);
 5698 00ea 4EEA022E 		orr	lr, lr, r2, lsl #8	@ tmp373, buf, buf,
 5699              	@ main.c:2520: 		dig_T2 = (s16)((buf[3]<<8) | buf[2]);
 5700 00ee 4BEA032B 		orr	fp, fp, r3, lsl #8	@ tmp343, buf, buf,
ARM GAS  /tmp/ccjvICQi.s 			page 101


 5701              	@ main.c:2528: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5702 00f2 9DF848C0 		ldrb	ip, [sp, #72]	@ zero_extendqisi2	@ buf, buf
 5703 00f6 039A     		ldr	r2, [sp, #12]	@ buf, %sfp
 5704              	@ main.c:2530: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5705 00f8 46EA0121 		orr	r1, r6, r1, lsl #8	@ tmp391, buf, buf,
 5706              	@ main.c:2520: 		dig_T2 = (s16)((buf[3]<<8) | buf[2]);
 5707 00fc 0FFA8BF6 		sxth	r6, fp	@ dig_T2, tmp343
 5708              	@ main.c:2528: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5709 0100 4CEA022C 		orr	ip, ip, r2, lsl #8	@ tmp379, buf, buf,
 5710              	@ main.c:2526: 		dig_P4 = (s16)((buf[13]<<8) | buf[12]);
 5711 0104 9DF84500 		ldrb	r0, [sp, #69]	@ zero_extendqisi2	@ buf, buf
 5712 0108 9DF84440 		ldrb	r4, [sp, #68]	@ zero_extendqisi2	@ buf, buf
 5713              	@ main.c:2529: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5714 010c 9DF84A70 		ldrb	r7, [sp, #74]	@ zero_extendqisi2	@ buf, buf
 5715              	@ main.c:2531: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5716 0110 9DF84E30 		ldrb	r3, [sp, #78]	@ zero_extendqisi2	@ buf, buf
 5717              	@ main.c:2529: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5718 0114 049A     		ldr	r2, [sp, #16]	@ buf, %sfp
 5719              	@ main.c:2520: 		dig_T2 = (s16)((buf[3]<<8) | buf[2]);
 5720 0116 0296     		str	r6, [sp, #8]	@ dig_T2, %sfp
 5721              	@ main.c:2521: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5722 0118 0FFA8AF6 		sxth	r6, r10	@ dig_T3, tmp349
 5723 011c 0396     		str	r6, [sp, #12]	@ dig_T3, %sfp
 5724              	@ main.c:2524: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5725 011e 0FFA89F6 		sxth	r6, r9	@ dig_P2, tmp355
 5726              	@ main.c:2529: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5727 0122 47EA0227 		orr	r7, r7, r2, lsl #8	@ tmp385, buf, buf,
 5728              	@ main.c:2531: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5729 0126 059A     		ldr	r2, [sp, #20]	@ buf, %sfp
 5730              	@ main.c:2524: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5731 0128 0596     		str	r6, [sp, #20]	@ dig_P2, %sfp
 5732              	@ main.c:2525: 		dig_P3 = (s16)((buf[11]<<8) | buf[10]);
 5733 012a 0FFA88F6 		sxth	r6, r8	@ dig_P3, tmp361
 5734 012e 0696     		str	r6, [sp, #24]	@ dig_P3, %sfp
 5735              	@ main.c:2527: 		dig_P5 = (s16)((buf[15]<<8) | buf[14]);
 5736 0130 0FFA8EF6 		sxth	r6, lr	@ dig_P5, tmp373
 5737 0134 0796     		str	r6, [sp, #28]	@ dig_P5, %sfp
 5738              	@ main.c:2528: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5739 0136 0FFA8CF6 		sxth	r6, ip	@ dig_P6, tmp379
 5740              	@ main.c:2530: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5741 013a 0091     		str	r1, [sp]	@ tmp391, %sfp
 5742              	@ main.c:2528: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5743 013c 0896     		str	r6, [sp, #32]	@ dig_P6, %sfp
 5744              	@ main.c:2529: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5745 013e 3EB2     		sxth	r6, r7	@ dig_P7, tmp385
 5746              	@ main.c:2531: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5747 0140 43EA0223 		orr	r3, r3, r2, lsl #8	@ tmp397, buf, buf,
 5748              	@ main.c:2529: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5749 0144 0996     		str	r6, [sp, #36]	@ dig_P7, %sfp
 5750              	@ main.c:2530: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5751 0146 BDF90060 		ldrsh	r6, [sp]	@ dig_P8, %sfp
 5752              	@ main.c:2531: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5753 014a 0193     		str	r3, [sp, #4]	@ tmp397, %sfp
 5754              	@ main.c:2530: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5755 014c 0A96     		str	r6, [sp, #40]	@ dig_P8, %sfp
 5756              	@ main.c:2531: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5757 014e BDF90460 		ldrsh	r6, [sp, #4]	@ dig_P9, %sfp
ARM GAS  /tmp/ccjvICQi.s 			page 102


 5758              	@ main.c:2533: 		i2c2_read(BMP280_ADR,  0xf4, buf,1 ); hex2uart(buf[0],2);
 5759 0152 2B46     		mov	r3, r5	@, tmp312
 5760              	@ main.c:2531: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5761 0154 0B96     		str	r6, [sp, #44]	@ dig_P9, %sfp
 5762              	@ main.c:2523: 		dig_P1 = (u16)(((u16)(buf[7]<<8)) | buf[6]);
 5763 0156 BDF83E60 		ldrh	r6, [sp, #62]	@ dig_P1, MEM[(u08[24] *)&buf + 6B]
 5764              	@ main.c:2533: 		i2c2_read(BMP280_ADR,  0xf4, buf,1 ); hex2uart(buf[0],2);
 5765 015a 0EAA     		add	r2, sp, #56	@ tmp533,,
 5766              	@ main.c:2526: 		dig_P4 = (s16)((buf[13]<<8) | buf[12]);
 5767 015c 44EA0024 		orr	r4, r4, r0, lsl #8	@ tmp367, buf, buf,
 5768              	@ main.c:2533: 		i2c2_read(BMP280_ADR,  0xf4, buf,1 ); hex2uart(buf[0],2);
 5769 0160 F421     		movs	r1, #244	@,
 5770 0162 EC20     		movs	r0, #236	@,
 5771              	@ main.c:2519: 		dig_T1 = (u16)(((u16)(buf[1]<<8)) | buf[0]);
 5772 0164 BDF838A0 		ldrh	r10, [sp, #56]	@ dig_T1, MEM[(u08[24] *)&buf]
 5773              	@ main.c:2523: 		dig_P1 = (u16)(((u16)(buf[7]<<8)) | buf[6]);
 5774 0168 0496     		str	r6, [sp, #16]	@ dig_P1, %sfp
 5775              	@ main.c:2533: 		i2c2_read(BMP280_ADR,  0xf4, buf,1 ); hex2uart(buf[0],2);
 5776 016a FFF7FEFF 		bl	i2c2_read	@
 5777 016e 0221     		movs	r1, #2	@,
 5778 0170 9DF83800 		ldrb	r0, [sp, #56]	@ zero_extendqisi2	@, buf
 5779 0174 FFF7FEFF 		bl	hex2uart	@
 5780              	@ main.c:2534: 		i2c2_read(BMP280_ADR,  0xf5, buf,1 ); hex2uart(buf[0],2);
 5781 0178 2B46     		mov	r3, r5	@, tmp312
 5782 017a 0EAA     		add	r2, sp, #56	@ tmp554,,
 5783 017c F521     		movs	r1, #245	@,
 5784 017e EC20     		movs	r0, #236	@,
 5785 0180 FFF7FEFF 		bl	i2c2_read	@
 5786              	@ main.c:2526: 		dig_P4 = (s16)((buf[13]<<8) | buf[12]);
 5787 0184 24B2     		sxth	r4, r4	@ dig_P4, tmp367
 5788              	@ main.c:2534: 		i2c2_read(BMP280_ADR,  0xf5, buf,1 ); hex2uart(buf[0],2);
 5789 0186 0221     		movs	r1, #2	@,
 5790 0188 9DF83800 		ldrb	r0, [sp, #56]	@ zero_extendqisi2	@, buf
 5791 018c FFF7FEFF 		bl	hex2uart	@
 5792              	@ main.c:2586: 				var2 = (var2>>2)+(((s32)dig_P4)<<16); 
 5793 0190 2304     		lsls	r3, r4, #16	@ _139, dig_P4,
 5794 0192 0193     		str	r3, [sp, #4]	@ _139, %sfp
 5795 0194 DFF8DC81 		ldr	r8, .L450+64	@ tmp494,
 5796              	@ main.c:2560: 				var1 = ((((adc_T>>3)  - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5797 0198 0AFA05F3 		lsl	r3, r10, r5	@ _99, dig_T1,
 5798 019c 6B4F     		ldr	r7, .L450+24	@ tmp496,
 5799              	@ main.c:2545: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL)){
 5800 019e DFF8D891 		ldr	r9, .L450+68	@ tmp405,
 5801              	@ main.c:2612: 			if( STCLK_MS*1000 < (trg1 - SysTick->VAL)){
 5802 01a2 DFF8D8B1 		ldr	fp, .L450+72	@ tmp498,
 5803              	@ main.c:2545: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL)){
 5804 01a6 6A4E     		ldr	r6, .L450+28	@ tmp403,
 5805              	@ main.c:2560: 				var1 = ((((adc_T>>3)  - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5806 01a8 0093     		str	r3, [sp]	@ _99, %sfp
 5807              	.L446:
 5808              	@ main.c:2545: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL)){
 5809 01aa D8F80030 		ldr	r3, [r8]	@ trg0.181_80, trg0
 5810 01ae B268     		ldr	r2, [r6, #8]	@ _81, MEM[(struct SysTick_Type *)3758153744B].VAL
 5811 01b0 9B1A     		subs	r3, r3, r2	@ tmp404, trg0.181_80, _81
 5812 01b2 4B45     		cmp	r3, r9	@ tmp404, tmp405
 5813 01b4 40F2B080 		bls	.L442	@,
 5814              	@ main.c:2546: 				trg0 = SysTick->VAL;
ARM GAS  /tmp/ccjvICQi.s 			page 103


 5815 01b8 B368     		ldr	r3, [r6, #8]	@ _83, MEM[(struct SysTick_Type *)3758153744B].VAL
 5816              	@ main.c:2548: 				UaPutK("\r\n BMP280 ");	
 5817 01ba 6648     		ldr	r0, .L450+32	@,
 5818              	@ main.c:2546: 				trg0 = SysTick->VAL;
 5819 01bc C8F80030 		str	r3, [r8]	@ _83, trg0
 5820              	@ main.c:2548: 				UaPutK("\r\n BMP280 ");	
 5821 01c0 FFF7FEFF 		bl	UaPutK	@
 5822              	@ main.c:2555: 				i2c2_read(BMP280_ADR,  0xFA, buf,3 );
 5823 01c4 0323     		movs	r3, #3	@,
 5824 01c6 0EAA     		add	r2, sp, #56	@ tmp558,,
 5825 01c8 FA21     		movs	r1, #250	@,
 5826 01ca EC20     		movs	r0, #236	@,
 5827 01cc FFF7FEFF 		bl	i2c2_read	@
 5828              	@ main.c:2559: 				adc_T = ( (u32)((u16)((buf[0]) << 8) | buf[1] ) << 4) | ( (buf[2]) >> 4);
 5829 01d0 BDF83830 		ldrh	r3, [sp, #56]	@, MEM[(u08[24] *)&buf]
 5830 01d4 9DF83A20 		ldrb	r2, [sp, #58]	@ zero_extendqisi2	@ buf, buf
 5831 01d8 5BBA     		rev16	r3, r3	@ tmp412, MEM[(u08[24] *)&buf]
 5832 01da 9BB2     		uxth	r3, r3	@ tmp414, tmp412
 5833 01dc 1209     		lsrs	r2, r2, #4	@ tmp418, buf,
 5834 01de 42EA0312 		orr	r2, r2, r3, lsl #4	@ adc_T, tmp418, tmp414,
 5835              	@ main.c:2561:         var2 = (((((adc_T>>4) - ((s32)dig_T1)) * ((adc_T>>4) - ((s32)dig_T1))) >> 12
 5836 01e2 CAEB1213 		rsb	r3, r10, r2, lsr #4	@ _105, dig_T1, adc_T,
 5837 01e6 03FB03F3 		mul	r3, r3, r3	@ tmp424, _105, _105
 5838              	@ main.c:2562: 				* ((s32)dig_T3))>>14;
 5839 01ea 0398     		ldr	r0, [sp, #12]	@ dig_T3, %sfp
 5840              	@ main.c:2561:         var2 = (((((adc_T>>4) - ((s32)dig_T1)) * ((adc_T>>4) - ((s32)dig_T1))) >> 12
 5841 01ec 1B0B     		lsrs	r3, r3, #12	@ tmp425, tmp424,
 5842              	@ main.c:2562: 				* ((s32)dig_T3))>>14;
 5843 01ee 00FB03F3 		mul	r3, r0, r3	@ tmp426, dig_T3, tmp425
 5844              	@ main.c:2560: 				var1 = ((((adc_T>>3)  - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5845 01f2 0098     		ldr	r0, [sp]	@ _99, %sfp
 5846              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5847 01f4 B168     		ldr	r1, [r6, #8]	@ _259, MEM[(struct SysTick_Type *)3758153744B].VAL
 5848              	@ main.c:2560: 				var1 = ((((adc_T>>3)  - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5849 01f6 C0EBD202 		rsb	r2, r0, r2, lsr #3	@ tmp421, _99, adc_T,
 5850 01fa 0298     		ldr	r0, [sp, #8]	@ dig_T2, %sfp
 5851              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5852 01fc 3960     		str	r1, [r7]	@ _259, Timt
 5853              	@ main.c:2560: 				var1 = ((((adc_T>>3)  - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5854 01fe 00FB02F2 		mul	r2, r0, r2	@ tmp422, dig_T2, tmp421
 5855              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5856 0202 3D68     		ldr	r5, [r7]	@ Timt.100_256, Timt
 5857 0204 B168     		ldr	r1, [r6, #8]	@ _257, MEM[(struct SysTick_Type *)3758153744B].VAL
 5858              	@ main.c:2561:         var2 = (((((adc_T>>4) - ((s32)dig_T1)) * ((adc_T>>4) - ((s32)dig_T1))) >> 12
 5859 0206 9B0B     		lsrs	r3, r3, #14	@ var2, tmp426,
 5860              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5861 0208 6D1A     		subs	r5, r5, r1	@ _258, Timt.100_256, _257
 5862              	@ main.c:2571: 				UaPutS("tt="); sint2uart(tim);
 5863 020a 5348     		ldr	r0, .L450+36	@,
 5864              	@ main.c:2564:         t_fine = var1 + var2;
 5865 020c 03EBD224 		add	r4, r3, r2, lsr #11	@ t_fine, var2, tmp422,
 5866              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5867 0210 0D95     		str	r5, [sp, #52]	@ _258, MEM[(volatile u32 *)&tim]
 5868              	@ main.c:2571: 				UaPutS("tt="); sint2uart(tim);
 5869 0212 FFF7FEFF 		bl	UaPutS	@
 5870 0216 2846     		mov	r0, r5	@, _258
 5871 0218 FFF7FEFF 		bl	sint2uart	@
ARM GAS  /tmp/ccjvICQi.s 			page 104


 5872              	@ main.c:2574: 				UaPutK(" T=");	
 5873 021c 4F48     		ldr	r0, .L450+40	@,
 5874 021e FFF7FEFF 		bl	UaPutK	@
 5875              	@ main.c:2567: 				T     = (t_fine * 50 + 1280) >> 8; // resolution 0.001 C
 5876 0222 3220     		movs	r0, #50	@ tmp433,
 5877 0224 00FB04F0 		mul	r0, r0, r4	@ tmp432, tmp433, t_fine
 5878 0228 00F5A060 		add	r0, r0, #1280	@ tmp434, tmp432,
 5879              	@ main.c:2575: 				num2uart(T,5,3);
 5880 022c 000A     		lsrs	r0, r0, #8	@, tmp434,
 5881 022e 0322     		movs	r2, #3	@,
 5882 0230 0521     		movs	r1, #5	@,
 5883 0232 FFF7FEFF 		bl	num2uart	@
 5884              	@ main.c:2579: 				i2c2_read(BMP280_ADR,  0xF7, buf,3 );				
 5885 0236 0323     		movs	r3, #3	@,
 5886 0238 0EAA     		add	r2, sp, #56	@ tmp563,,
 5887 023a F721     		movs	r1, #247	@,
 5888 023c EC20     		movs	r0, #236	@,
 5889 023e FFF7FEFF 		bl	i2c2_read	@
 5890              	@ main.c:2583: 				var1 = (((s32)t_fine)>>1) - 64000UL; 
 5891 0242 6210     		asrs	r2, r4, #1	@ tmp446, t_fine,
 5892 0244 A2F57A42 		sub	r2, r2, #64000	@ var1, tmp446,
 5893              	@ main.c:2584: 				var2 = (((var1>>2) * (var1>>2)) >> 11 ) * ((s32)dig_P6); 
 5894 0248 9308     		lsrs	r3, r2, #2	@ _129, var1,
 5895 024a 03FB03F3 		mul	r3, r3, r3	@ _130, _129, _129
 5896              	@ main.c:2587: 				var1 = (((dig_P3 * (((var1>>2) * (var1>>2)) >> 13 )) >> 3) + ((((s32)dig_P2) * v
 5897 024e 0599     		ldr	r1, [sp, #20]	@ dig_P2, %sfp
 5898 0250 069C     		ldr	r4, [sp, #24]	@ dig_P3, %sfp
 5899 0252 01FB02F0 		mul	r0, r1, r2	@ tmp454, dig_P2, var1
 5900 0256 590B     		lsrs	r1, r3, #13	@ tmp451, _130,
 5901 0258 04FB01F1 		mul	r1, r4, r1	@ tmp452, dig_P3, tmp451
 5902              	@ main.c:2585: 				var2 = var2 + ((var1*((s32)dig_P5))<<1); 
 5903 025c 079C     		ldr	r4, [sp, #28]	@ dig_P5, %sfp
 5904              	@ main.c:2587: 				var1 = (((dig_P3 * (((var1>>2) * (var1>>2)) >> 13 )) >> 3) + ((((s32)dig_P2) * v
 5905 025e 4008     		lsrs	r0, r0, #1	@ tmp455, tmp454,
 5906              	@ main.c:2585: 				var2 = var2 + ((var1*((s32)dig_P5))<<1); 
 5907 0260 04FB02F2 		mul	r2, r4, r2	@ tmp448, dig_P5, var1
 5908              	@ main.c:2587: 				var1 = (((dig_P3 * (((var1>>2) * (var1>>2)) >> 13 )) >> 3) + ((((s32)dig_P2) * v
 5909 0264 00EBD100 		add	r0, r0, r1, lsr #3	@ _147, tmp455, tmp452,
 5910 0268 800C     		lsrs	r0, r0, #18	@ var1, _147,
 5911              	@ main.c:2588: 				var1 =((((32768+var1))*((s32)dig_P1))>>15); 
 5912 026a 0499     		ldr	r1, [sp, #16]	@ dig_P1, %sfp
 5913 026c 00F50040 		add	r0, r0, #32768	@ tmp457, var1,
 5914 0270 01FB00F0 		mul	r0, r1, r0	@ _150, dig_P1, tmp457
 5915              	@ main.c:2585: 				var2 = var2 + ((var1*((s32)dig_P5))<<1); 
 5916 0274 0899     		ldr	r1, [sp, #32]	@ dig_P6, %sfp
 5917 0276 5200     		lsls	r2, r2, #1	@ tmp449, tmp448,
 5918              	@ main.c:2584: 				var2 = (((var1>>2) * (var1>>2)) >> 11 ) * ((s32)dig_P6); 
 5919 0278 DB0A     		lsrs	r3, r3, #11	@ tmp447, _130,
 5920              	@ main.c:2585: 				var2 = var2 + ((var1*((s32)dig_P5))<<1); 
 5921 027a 01FB0323 		mla	r3, r1, r3, r2	@ var2, dig_P6, tmp447, tmp449
 5922              	@ main.c:2580: 				adc_P   = ((u32)((u16)(buf[0] << 8) | buf[1])<<4) | (buf[2]>>4);
 5923 027e BDF83810 		ldrh	r1, [sp, #56]	@, MEM[(u08[24] *)&buf]
 5924 0282 9DF83A20 		ldrb	r2, [sp, #58]	@ zero_extendqisi2	@ buf, buf
 5925 0286 49BA     		rev16	r1, r1	@ tmp437, MEM[(u08[24] *)&buf]
 5926 0288 89B2     		uxth	r1, r1	@ tmp439, tmp437
 5927              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5928 028a B468     		ldr	r4, [r6, #8]	@ _255, MEM[(struct SysTick_Type *)3758153744B].VAL
ARM GAS  /tmp/ccjvICQi.s 			page 105


 5929              	@ main.c:2580: 				adc_P   = ((u32)((u16)(buf[0] << 8) | buf[1])<<4) | (buf[2]>>4);
 5930 028c 1209     		lsrs	r2, r2, #4	@ tmp443, buf,
 5931              	@ main.c:2586: 				var2 = (var2>>2)+(((s32)dig_P4)<<16); 
 5932 028e 019D     		ldr	r5, [sp, #4]	@ _139, %sfp
 5933              	@ main.c:2580: 				adc_P   = ((u32)((u16)(buf[0] << 8) | buf[1])<<4) | (buf[2]>>4);
 5934 0290 42EA0112 		orr	r2, r2, r1, lsl #4	@ adc_P, tmp443, tmp439,
 5935              	@ main.c:2589: 				if (var1 == 0) 
 5936 0294 C10B     		lsrs	r1, r0, #15	@ var1, _150,
 5937              	@ main.c:2586: 				var2 = (var2>>2)+(((s32)dig_P4)<<16); 
 5938 0296 05EB9303 		add	r3, r5, r3, lsr #2	@ var2, _139, var2,
 5939              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5940 029a 3C60     		str	r4, [r7]	@ _255, Timt
 5941              	@ main.c:2589: 				if (var1 == 0) 
 5942 029c 46D0     		beq	.L441	@,
 5943              	@ main.c:2594: 					p = (((u32)(((s32)1048576)-adc_P)-(var2>>12)))*3125; 
 5944 029e 3048     		ldr	r0, .L450+44	@ tmp461,
 5945 02a0 02EB1333 		add	r3, r2, r3, lsr #12	@ tmp459, adc_P, var2,
 5946 02a4 00FB03F0 		mul	r0, r0, r3	@ tmp460, tmp461, tmp459
 5947 02a8 00F14340 		add	r0, r0, #-1023410176	@ p, tmp460,
 5948 02ac 00F5A000 		add	r0, r0, #5242880	@ p, p,
 5949              	@ main.c:2595: 					if (p < 0x80000000) { p = (p << 1) / ((u32)var1); 	}  
 5950 02b0 0028     		cmp	r0, #0	@ p,
 5951              	@ main.c:2596: 					else  							{ p = (p 			 /  (u32)var1)*2; } 
 5952 02b2 B3BF     		iteet	lt
 5953 02b4 B0FBF1F0 		udivlt	r0, r0, r1	@ _157, p, var1
 5954              	@ main.c:2595: 					if (p < 0x80000000) { p = (p << 1) / ((u32)var1); 	}  
 5955 02b8 4000     		lslge	r0, r0, #1	@ _156, p,
 5956 02ba B0FBF1F0 		udivge	r0, r0, r1	@ p, _156, var1
 5957              	@ main.c:2596: 					else  							{ p = (p 			 /  (u32)var1)*2; } 
 5958 02be 4000     		lsllt	r0, r0, #1	@ p, _157,
 5959              	@ main.c:2597: 					var1 = (((s32)dig_P9) * ((s32)(((p>>3) * (p>>3))>>13)))>>12; 
 5960 02c0 C308     		lsrs	r3, r0, #3	@ _159, p,
 5961 02c2 03FB03F3 		mul	r3, r3, r3	@ tmp463, _159, _159
 5962              	@ main.c:2598: 					var2 = (((s32)(p>>2)) * ((s32)dig_P8))>>13; 
 5963 02c6 0A99     		ldr	r1, [sp, #40]	@ dig_P8, %sfp
 5964 02c8 8208     		lsrs	r2, r0, #2	@ tmp467, p,
 5965 02ca 01FB02F2 		mul	r2, r1, r2	@ tmp468, dig_P8, tmp467
 5966              	@ main.c:2597: 					var1 = (((s32)dig_P9) * ((s32)(((p>>3) * (p>>3))>>13)))>>12; 
 5967 02ce 0B99     		ldr	r1, [sp, #44]	@ dig_P9, %sfp
 5968 02d0 5B0B     		lsrs	r3, r3, #13	@ tmp464, tmp463,
 5969 02d2 01FB03F3 		mul	r3, r1, r3	@ tmp465, dig_P9, tmp464
 5970              	@ main.c:2599: 					p = (u32)((s32)p + ((var1 + var2 + dig_P7) >> 4)); 
 5971 02d6 0999     		ldr	r1, [sp, #36]	@ dig_P7, %sfp
 5972 02d8 01EB6232 		add	r2, r1, r2, asr #13	@ tmp470, dig_P7, tmp468,
 5973 02dc 02EB2333 		add	r3, r2, r3, asr #12	@ tmp471, tmp470, tmp465,
 5974 02e0 00EB1310 		add	r0, r0, r3, lsr #4	@ p, p, tmp471,
 5975              	@ main.c:2600: 					p = (p*5)/8;
 5976 02e4 00EB8000 		add	r0, r0, r0, lsl #2	@ tmp475, p, p,
 5977 02e8 C008     		lsrs	r0, r0, #3	@ p, tmp475,
 5978              	@ main.c:2601: 					p = (p*5)/8;
 5979 02ea 00EB8004 		add	r4, r0, r0, lsl #2	@ tmp479, p, p,
 5980              	@ main.c:2602: 					UaPutK(" p= ");	
 5981 02ee 1D48     		ldr	r0, .L450+48	@,
 5982 02f0 FFF7FEFF 		bl	UaPutK	@
 5983              	@ main.c:2603: 					num2uart(p,9,3);
 5984 02f4 E008     		lsrs	r0, r4, #3	@, tmp479,
 5985 02f6 0322     		movs	r2, #3	@,
ARM GAS  /tmp/ccjvICQi.s 			page 106


 5986 02f8 0921     		movs	r1, #9	@,
 5987 02fa FFF7FEFF 		bl	num2uart	@
 5988              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5989 02fe 3C68     		ldr	r4, [r7]	@ Timt.100_260, Timt
 5990 0300 B368     		ldr	r3, [r6, #8]	@ _261, MEM[(struct SysTick_Type *)3758153744B].VAL
 5991              	@ main.c:2607: 				UaPutS(" tp="); sint2uart(tim/TIM_US);
 5992 0302 1948     		ldr	r0, .L450+52	@,
 5993              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5994 0304 E41A     		subs	r4, r4, r3	@ _262, Timt.100_260, _261
 5995 0306 0D94     		str	r4, [sp, #52]	@ _262, MEM[(volatile u32 *)&tim]
 5996              	@ main.c:2607: 				UaPutS(" tp="); sint2uart(tim/TIM_US);
 5997 0308 FFF7FEFF 		bl	UaPutS	@
 5998 030c 174B     		ldr	r3, .L450+56	@ tmp577,
 5999 030e A3FB0430 		umull	r3, r0, r3, r4	@ tmp502, tmp486, tmp577, _262
 6000 0312 4008     		lsrs	r0, r0, #1	@, tmp486,
 6001 0314 FFF7FEFF 		bl	sint2uart	@
 6002              	.L442:
 6003              	@ main.c:2612: 			if( STCLK_MS*1000 < (trg1 - SysTick->VAL)){
 6004 0318 154A     		ldr	r2, .L450+60	@ tmp488,
 6005 031a 1368     		ldr	r3, [r2]	@ trg1.187_178, trg1
 6006 031c B168     		ldr	r1, [r6, #8]	@ _179, MEM[(struct SysTick_Type *)3758153744B].VAL
 6007 031e 5B1A     		subs	r3, r3, r1	@ tmp490, trg1.187_178, _179
 6008 0320 5B45     		cmp	r3, fp	@ tmp490, tmp498
 6009 0322 7FF642AF 		bls	.L446	@,
 6010              	@ main.c:2613: 				trg1 = SysTick->VAL;
 6011 0326 B368     		ldr	r3, [r6, #8]	@ _181, MEM[(struct SysTick_Type *)3758153744B].VAL
 6012 0328 1360     		str	r3, [r2]	@ _181, trg1
 6013 032a 3EE7     		b	.L446	@
 6014              	.L441:
 6015              	@ main.c:2617: 	}
 6016 032c 15B0     		add	sp, sp, #84	@,,
 6017              		@ sp needed	@
 6018 032e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 6019              	.L451:
 6020 0332 00BF     		.align	2
 6021              	.L450:
 6022 0334 000C0140 		.word	1073810432
 6023 0338 00580040 		.word	1073764352
 6024 033c 3C000B42 		.word	1108017212
 6025 0340 D8034242 		.word	1111622616
 6026 0344 00000B42 		.word	1108017152
 6027 0348 00000000 		.word	.LC73
 6028 034c 00000000 		.word	Timt
 6029 0350 10E000E0 		.word	-536813552
 6030 0354 14000000 		.word	.LC74
 6031 0358 20000000 		.word	.LC75
 6032 035c 24000000 		.word	.LC76
 6033 0360 CBF3FFFF 		.word	-3125
 6034 0364 28000000 		.word	.LC77
 6035 0368 30000000 		.word	.LC78
 6036 036c 398EE338 		.word	954437177
 6037 0370 00000000 		.word	trg1
 6038 0374 00000000 		.word	trg0
 6039 0378 20AA4400 		.word	4500000
 6040 037c 40548900 		.word	9000000
 6041              		.size	BMP280_i2c, .-BMP280_i2c
 6042              		.section	.text.BMP280_spi,"ax",%progbits
ARM GAS  /tmp/ccjvICQi.s 			page 107


 6043              		.align	1
 6044              		.p2align 2,,3
 6045              		.global	BMP280_spi
 6046              		.syntax unified
 6047              		.thumb
 6048              		.thumb_func
 6049              		.fpu softvfp
 6050              		.type	BMP280_spi, %function
 6051              	BMP280_spi:
 6052              		@ args = 0, pretend = 0, frame = 16
 6053              		@ frame_needed = 0, uses_anonymous_args = 0
 6054 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 6055              	@ main.c:2631: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|7<<3|SPI_CR1_MSTR|SPI_CR1_CPOL|SPI_CR1_CPHA;		
 6056 0004 40F23F36 		movw	r6, #831	@ tmp198,
 6057              	@ main.c:2647: 		RX1276_CS1 = 0;
 6058 0008 0025     		movs	r5, #0	@ tmp211,
 6059              	@ main.c:2627: 		GPIOA->CRL = (GPIOA->CRL&0x0000ffff)|0xB4B30000;	// PA4~7
 6060 000a 6C48     		ldr	r0, .L459	@ tmp189,
 6061              	@ main.c:2628: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 6062 000c 6C49     		ldr	r1, .L459+4	@ tmp194,
 6063              	@ main.c:2627: 		GPIOA->CRL = (GPIOA->CRL&0x0000ffff)|0xB4B30000;	// PA4~7
 6064 000e 0368     		ldr	r3, [r0]	@ _1, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 6065              	@ main.c:2631: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|7<<3|SPI_CR1_MSTR|SPI_CR1_CPOL|SPI_CR1_CPHA;		
 6066 0010 6C4A     		ldr	r2, .L459+8	@ tmp196,
 6067              	@ main.c:2627: 		GPIOA->CRL = (GPIOA->CRL&0x0000ffff)|0xB4B30000;	// PA4~7
 6068 0012 9BB2     		uxth	r3, r3	@ tmp190, _1
 6069 0014 43F03443 		orr	r3, r3, #-1275068416	@ _4, tmp190,
 6070 0018 43F43303 		orr	r3, r3, #11730944	@ _4, _4,
 6071 001c 0360     		str	r3, [r0]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 6072              	@ main.c:2628: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 6073 001e 8B69     		ldr	r3, [r1, #24]	@ _6, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 6074              	@ main.c:2637: 		trg0 = SysTick->VAL;		trg1 = SysTick->VAL;		trg2 = SysTick->VAL;
 6075 0020 694C     		ldr	r4, .L459+12	@ tmp204,
 6076              	@ main.c:2628: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 6077 0022 43F48053 		orr	r3, r3, #4096	@ _8, _6,
 6078 0026 8B61     		str	r3, [r1, #24]	@ _8, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 6079              	@ main.c:2631: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|7<<3|SPI_CR1_MSTR|SPI_CR1_CPOL|SPI_CR1_CPHA;		
 6080 0028 1680     		strh	r6, [r2]	@ movhi	@ tmp198, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 6081              	@ main.c:2635: 		SPI1->CR1 |= SPI_CR1_SPE;		
 6082 002a 1388     		ldrh	r3, [r2]	@, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 6083              	@ main.c:2637: 		trg0 = SysTick->VAL;		trg1 = SysTick->VAL;		trg2 = SysTick->VAL;
 6084 002c 6749     		ldr	r1, .L459+16	@ tmp205,
 6085              	@ main.c:2635: 		SPI1->CR1 |= SPI_CR1_SPE;		
 6086 002e 43F04003 		orr	r3, r3, #64	@ _11, MEM[(struct SPI_TypeDef *)1073819648B].CR1,
 6087 0032 1380     		strh	r3, [r2]	@ movhi	@ _11, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 6088              	@ main.c:2637: 		trg0 = SysTick->VAL;		trg1 = SysTick->VAL;		trg2 = SysTick->VAL;
 6089 0034 A268     		ldr	r2, [r4, #8]	@ _12, MEM[(struct SysTick_Type *)3758153744B].VAL
 6090 0036 664B     		ldr	r3, .L459+20	@ tmp207,
 6091 0038 0A60     		str	r2, [r1]	@ _12, trg0
 6092 003a A268     		ldr	r2, [r4, #8]	@ _13, MEM[(struct SysTick_Type *)3758153744B].VAL
 6093 003c DFF8B091 		ldr	r9, .L459+52	@ tmp285,
 6094 0040 1A60     		str	r2, [r3]	@ _13, trg1
 6095 0042 A268     		ldr	r2, [r4, #8]	@ _14, MEM[(struct SysTick_Type *)3758153744B].VAL
 6096              	@ main.c:2647: 		RX1276_CS1 = 0;
 6097 0044 634B     		ldr	r3, .L459+24	@ tmp210,
 6098              	@ main.c:2637: 		trg0 = SysTick->VAL;		trg1 = SysTick->VAL;		trg2 = SysTick->VAL;
 6099 0046 C9F80020 		str	r2, [r9]	@ _14, trg2
ARM GAS  /tmp/ccjvICQi.s 			page 108


 6100              	@ main.c:2647: 		RX1276_CS1 = 0;
 6101 004a 1D60     		str	r5, [r3]	@ tmp211, MEM[(volatile long unsigned int *)1109459344B]
 6102              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 6103 004c 2546     		mov	r5, r4	@ tmp215, tmp204
 6104              	@ main.c:2618: void BMP280_spi(void){
 6105 004e 85B0     		sub	sp, sp, #20	@,,
 6106              	@ main.c:2649: 		spi1_rw(0xE0 & 0x7f);   // reset write
 6107 0050 6020     		movs	r0, #96	@,
 6108 0052 FFF7FEFF 		bl	spi1_rw	@
 6109              	@ main.c:2650: 		spi1_rw(0xB6); 			    // reset value
 6110 0056 B620     		movs	r0, #182	@,
 6111 0058 FFF7FEFF 		bl	spi1_rw	@
 6112              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 6113 005c A368     		ldr	r3, [r4, #8]	@ _123, MEM[(struct SysTick_Type *)3758153744B].VAL
 6114 005e 5E49     		ldr	r1, .L459+28	@ tmp286,
 6115              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 6116 0060 5E48     		ldr	r0, .L459+32	@ tmp217,
 6117              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 6118 0062 0B60     		str	r3, [r1]	@ _123, delay_us
 6119              	.L453:
 6120              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 6121 0064 0B68     		ldr	r3, [r1]	@ delay_us.88_124, delay_us
 6122 0066 AA68     		ldr	r2, [r5, #8]	@ _125, MEM[(struct SysTick_Type *)3758153744B].VAL
 6123 0068 9B1A     		subs	r3, r3, r2	@ tmp216, delay_us.88_124, _125
 6124 006a 8342     		cmp	r3, r0	@ tmp216, tmp217
 6125 006c FAD9     		bls	.L453	@,
 6126              	@ main.c:2654: 		spi1_rw(0xf4 & 0x7f); 	// Select Control register 
 6127 006e 7420     		movs	r0, #116	@,
 6128 0070 FFF7FEFF 		bl	spi1_rw	@
 6129              	@ main.c:2655: 		spi1_rw(0x27); 					// Write  Control register 
 6130 0074 2720     		movs	r0, #39	@,
 6131 0076 FFF7FEFF 		bl	spi1_rw	@
 6132              	@ main.c:2659: 		RX1276_CS1 = 1;
 6133 007a 564A     		ldr	r2, .L459+24	@ tmp218,
 6134 007c 0121     		movs	r1, #1	@ tmp219,
 6135              	@ main.c:2669: 				RX1276_CS1 = 0;
 6136 007e 9346     		mov	fp, r2	@ tmp226, tmp218
 6137              	@ main.c:2665: 			if( STCLK_MS*2000 < (trg2 - SysTick->VAL)){
 6138 0080 DFF844A1 		ldr	r10, .L459+12	@ tmp221,
 6139 0084 564B     		ldr	r3, .L459+36	@ tmp223,
 6140              	@ main.c:2659: 		RX1276_CS1 = 1;
 6141 0086 1160     		str	r1, [r2]	@ tmp219, MEM[(volatile long unsigned int *)1109459344B]
 6142              	.L454:
 6143              	@ main.c:2665: 			if( STCLK_MS*2000 < (trg2 - SysTick->VAL)){
 6144 0088 D9F80020 		ldr	r2, [r9]	@ trg2.188_15, trg2
 6145 008c DAF80810 		ldr	r1, [r10, #8]	@ _16, MEM[(struct SysTick_Type *)3758153744B].VAL
 6146 0090 521A     		subs	r2, r2, r1	@ tmp222, trg2.188_15, _16
 6147 0092 9A42     		cmp	r2, r3	@ tmp222, tmp223
 6148 0094 F8D9     		bls	.L454	@,
 6149              	@ main.c:2669: 				RX1276_CS1 = 0;
 6150 0096 0022     		movs	r2, #0	@ tmp227,
 6151              	@ main.c:2666: 				trg2 = SysTick->VAL;
 6152 0098 DAF80810 		ldr	r1, [r10, #8]	@ _18, MEM[(struct SysTick_Type *)3758153744B].VAL
 6153 009c 0393     		str	r3, [sp, #12]	@ tmp223, %sfp
 6154 009e C9F80010 		str	r1, [r9]	@ _18, trg2
 6155              	@ main.c:2671: 				spi1_rw(0xF4 & 0x7f); 	// Select Control register 
 6156 00a2 7420     		movs	r0, #116	@,
ARM GAS  /tmp/ccjvICQi.s 			page 109


 6157              	@ main.c:2669: 				RX1276_CS1 = 0;
 6158 00a4 CBF80020 		str	r2, [fp]	@ tmp227, MEM[(volatile long unsigned int *)1109459344B]
 6159              	@ main.c:2671: 				spi1_rw(0xF4 & 0x7f); 	// Select Control register 
 6160 00a8 FFF7FEFF 		bl	spi1_rw	@
 6161              	@ main.c:2672: 				spi1_rw(0x27); 					// Write  Control register 
 6162 00ac 2720     		movs	r0, #39	@,
 6163 00ae FFF7FEFF 		bl	spi1_rw	@
 6164              	@ main.c:2674: 				spi1_rw(0xF4);
 6165 00b2 F420     		movs	r0, #244	@,
 6166 00b4 FFF7FEFF 		bl	spi1_rw	@
 6167              	@ main.c:2675: 				ctrl_meas = spi1_rw(0xff);
 6168 00b8 FF20     		movs	r0, #255	@,
 6169 00ba FFF7FEFF 		bl	spi1_rw	@
 6170 00be 0190     		str	r0, [sp, #4]	@, %sfp
 6171              	@ main.c:2677: 				spi1_rw(0x88);
 6172 00c0 8820     		movs	r0, #136	@,
 6173 00c2 FFF7FEFF 		bl	spi1_rw	@
 6174              	@ main.c:2678: 				v0 = spi1_rw(0xff);
 6175 00c6 FF20     		movs	r0, #255	@,
 6176 00c8 FFF7FEFF 		bl	spi1_rw	@
 6177 00cc 0546     		mov	r5, r0	@ tmp229,
 6178              	@ main.c:2679: 				v1 = spi1_rw(0xff);
 6179 00ce FF20     		movs	r0, #255	@,
 6180 00d0 FFF7FEFF 		bl	spi1_rw	@
 6181              	@ main.c:2680: 				dig_T1 = (u16)(((u16)(v1<<8)) | v0);
 6182 00d4 EDB2     		uxtb	r5, r5	@ _20, tmp229
 6183 00d6 45EA0025 		orr	r5, r5, r0, lsl #8	@ tmp235, _20,,
 6184              	@ main.c:2682: 				spi1_rw(0x8A);
 6185 00da 8A20     		movs	r0, #138	@,
 6186 00dc FFF7FEFF 		bl	spi1_rw	@
 6187              	@ main.c:2683: 				v0 = spi1_rw(0xff);
 6188 00e0 FF20     		movs	r0, #255	@,
 6189 00e2 FFF7FEFF 		bl	spi1_rw	@
 6190 00e6 0646     		mov	r6, r0	@ tmp236,
 6191              	@ main.c:2684: 				v1 = spi1_rw(0xff);
 6192 00e8 FF20     		movs	r0, #255	@,
 6193 00ea FFF7FEFF 		bl	spi1_rw	@
 6194              	@ main.c:2685: 				dig_T2 = (s16)((v1<<8) | v0);
 6195 00ee F6B2     		uxtb	r6, r6	@ _24, tmp236
 6196 00f0 C0B2     		uxtb	r0, r0	@ _25,
 6197 00f2 46EA0026 		orr	r6, r6, r0, lsl #8	@ tmp243, _24, _25,
 6198              	@ main.c:2687: 				spi1_rw(0x8C);
 6199 00f6 8C20     		movs	r0, #140	@,
 6200 00f8 FFF7FEFF 		bl	spi1_rw	@
 6201              	@ main.c:2688: 				v0 = spi1_rw(0xff);
 6202 00fc FF20     		movs	r0, #255	@,
 6203 00fe FFF7FEFF 		bl	spi1_rw	@
 6204 0102 0446     		mov	r4, r0	@ tmp244,
 6205              	@ main.c:2689: 				v1 = spi1_rw(0xff);
 6206 0104 FF20     		movs	r0, #255	@,
 6207 0106 FFF7FEFF 		bl	spi1_rw	@
 6208              	@ main.c:2690: 				dig_T3 = (s16)((v1<<8) | v0);
 6209 010a E4B2     		uxtb	r4, r4	@ _30, tmp244
 6210 010c C0B2     		uxtb	r0, r0	@ _31,
 6211 010e 44EA0024 		orr	r4, r4, r0, lsl #8	@ tmp251, _30, _31,
 6212              	@ main.c:2692: 				spi1_rw(0xFA);
 6213 0112 FA20     		movs	r0, #250	@,
ARM GAS  /tmp/ccjvICQi.s 			page 110


 6214 0114 FFF7FEFF 		bl	spi1_rw	@
 6215              	@ main.c:2693: 				value[0] = spi1_rw(0xff);
 6216 0118 FF20     		movs	r0, #255	@,
 6217 011a FFF7FEFF 		bl	spi1_rw	@
 6218 011e 0746     		mov	r7, r0	@ tmp252,
 6219              	@ main.c:2694: 				value[1] = spi1_rw(0xff);
 6220 0120 FF20     		movs	r0, #255	@,
 6221 0122 FFF7FEFF 		bl	spi1_rw	@
 6222 0126 0290     		str	r0, [sp, #8]	@ tmp253, %sfp
 6223              	@ main.c:2695: 				value[2] = spi1_rw(0xff);
 6224 0128 FF20     		movs	r0, #255	@,
 6225 012a FFF7FEFF 		bl	spi1_rw	@
 6226              	@ main.c:2701: 				RX1276_CS1 = 1;
 6227 012e 0121     		movs	r1, #1	@ tmp256,
 6228              	@ main.c:2695: 				value[2] = spi1_rw(0xff);
 6229 0130 8046     		mov	r8, r0	@ tmp254,
 6230              	@ main.c:2701: 				RX1276_CS1 = 1;
 6231 0132 CBF80010 		str	r1, [fp]	@ tmp256, MEM[(volatile long unsigned int *)1109459344B]
 6232              	@ main.c:2703: 				UaPutK("\r\n BMP280T1 = 0x");	
 6233 0136 2B48     		ldr	r0, .L459+40	@,
 6234 0138 FFF7FEFF 		bl	UaPutK	@
 6235              	@ main.c:2680: 				dig_T1 = (u16)(((u16)(v1<<8)) | v0);
 6236 013c ADB2     		uxth	r5, r5	@ dig_T1, tmp235
 6237              	@ main.c:2704: 				hex2uart(ctrl_meas,2);
 6238 013e 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2	@, %sfp
 6239 0142 0221     		movs	r1, #2	@,
 6240 0144 FFF7FEFF 		bl	hex2uart	@
 6241              	@ main.c:2685: 				dig_T2 = (s16)((v1<<8) | v0);
 6242 0148 36B2     		sxth	r6, r6	@ dig_T2, tmp243
 6243              	@ main.c:2706: 				hex2uart(dig_T1,4);
 6244 014a 2846     		mov	r0, r5	@, dig_T1
 6245 014c 0421     		movs	r1, #4	@,
 6246 014e FFF7FEFF 		bl	hex2uart	@
 6247              	@ main.c:2690: 				dig_T3 = (s16)((v1<<8) | v0);
 6248 0152 24B2     		sxth	r4, r4	@ dig_T3, tmp251
 6249              	@ main.c:2707: 				hex2uart(dig_T2,4);
 6250 0154 3046     		mov	r0, r6	@, dig_T2
 6251 0156 0421     		movs	r1, #4	@,
 6252 0158 FFF7FEFF 		bl	hex2uart	@
 6253              	@ main.c:2708: 				hex2uart(dig_T3,4);
 6254 015c 0421     		movs	r1, #4	@,
 6255 015e 2046     		mov	r0, r4	@, dig_T3
 6256 0160 FFF7FEFF 		bl	hex2uart	@
 6257              	@ main.c:2715: 				adc = ( (u32)((u16)((value[0]) << 8) | value[1] ) << 4) | ( (value[2]) >> 4);
 6258 0164 029A     		ldr	r2, [sp, #8]	@ tmp253, %sfp
 6259 0166 3F02     		lsls	r7, r7, #8	@ tmp259, tmp252,
 6260 0168 BFB2     		uxth	r7, r7	@ tmp260, tmp259
 6261 016a D2B2     		uxtb	r2, r2	@ _37, tmp253
 6262 016c 3A43     		orrs	r2, r2, r7	@, tmp262, _37, tmp260
 6263 016e C8F30317 		ubfx	r7, r8, #4, #4	@ tmp266, tmp254,,
 6264 0172 47EA0217 		orr	r7, r7, r2, lsl #4	@ adc, tmp266, tmp262,
 6265              	@ main.c:2726: 				UaPutK(" T=");	
 6266 0176 1C48     		ldr	r0, .L459+44	@,
 6267 0178 FFF7FEFF 		bl	UaPutK	@
 6268              	@ main.c:2727: 				sint2uart(adc);
 6269 017c 3846     		mov	r0, r7	@, adc
 6270 017e FFF7FEFF 		bl	sint2uart	@
ARM GAS  /tmp/ccjvICQi.s 			page 111


 6271              	@ main.c:2719:         var2 = (((((adc>>4) - ((s32)dig_T1)) * ((adc>>4) - ((s32)dig_T1))) >> 12)
 6272 0182 C5EB1718 		rsb	r8, r5, r7, lsr #4	@ _61, dig_T1, adc,
 6273              	@ main.c:2728: 				UaPutK(" ");	
 6274 0186 1948     		ldr	r0, .L459+48	@,
 6275 0188 FFF7FEFF 		bl	UaPutK	@
 6276              	@ main.c:2719:         var2 = (((((adc>>4) - ((s32)dig_T1)) * ((adc>>4) - ((s32)dig_T1))) >> 12)
 6277 018c 08FB08F0 		mul	r0, r8, r8	@ tmp275, _61, _61
 6278              	@ main.c:2718: 				var1 = ((((adc>>3) - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 6279 0190 6D00     		lsls	r5, r5, #1	@ tmp271, dig_T1,
 6280              	@ main.c:2719:         var2 = (((((adc>>4) - ((s32)dig_T1)) * ((adc>>4) - ((s32)dig_T1))) >> 12)
 6281 0192 000B     		lsrs	r0, r0, #12	@ tmp276, tmp275,
 6282              	@ main.c:2718: 				var1 = ((((adc>>3) - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 6283 0194 C5EBD705 		rsb	r5, r5, r7, lsr #3	@ tmp272, tmp271, adc,
 6284              	@ main.c:2720: 				* ((s32)dig_T3))>>14;
 6285 0198 04FB00F0 		mul	r0, r4, r0	@ tmp277, dig_T3, tmp276
 6286              	@ main.c:2718: 				var1 = ((((adc>>3) - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 6287 019c 06FB05F5 		mul	r5, r6, r5	@ tmp273, dig_T2, tmp272
 6288              	@ main.c:2719:         var2 = (((((adc>>4) - ((s32)dig_T1)) * ((adc>>4) - ((s32)dig_T1))) >> 12)
 6289 01a0 800B     		lsrs	r0, r0, #14	@ var2, tmp277,
 6290              	@ main.c:2723:         tFine = var1 + var2;
 6291 01a2 00EBD520 		add	r0, r0, r5, lsr #11	@ tFine, var2, tmp273,
 6292              	@ main.c:2724: 				T     = (tFine * 5 + 128) >> 8;
 6293 01a6 00EB8000 		add	r0, r0, r0, lsl #2	@ tmp282, tFine, tFine,
 6294 01aa 8030     		adds	r0, r0, #128	@ tmp283, tmp282,
 6295              	@ main.c:2729: 				num2uart(T,5,3);
 6296 01ac 000A     		lsrs	r0, r0, #8	@, tmp283,
 6297 01ae 0322     		movs	r2, #3	@,
 6298 01b0 0521     		movs	r1, #5	@,
 6299 01b2 FFF7FEFF 		bl	num2uart	@
 6300 01b6 039B     		ldr	r3, [sp, #12]	@ tmp223, %sfp
 6301 01b8 66E7     		b	.L454	@
 6302              	.L460:
 6303 01ba 00BF     		.align	2
 6304              	.L459:
 6305 01bc 00080140 		.word	1073809408
 6306 01c0 00100240 		.word	1073876992
 6307 01c4 00300140 		.word	1073819648
 6308 01c8 10E000E0 		.word	-536813552
 6309 01cc 00000000 		.word	trg0
 6310 01d0 00000000 		.word	trg1
 6311 01d4 90012142 		.word	1109459344
 6312 01d8 00000000 		.word	delay_us
 6313 01dc 8F5F0100 		.word	89999
 6314 01e0 80A81201 		.word	18000000
 6315 01e4 00000000 		.word	.LC79
 6316 01e8 24000000 		.word	.LC76
 6317 01ec 6C010000 		.word	.LC40
 6318 01f0 00000000 		.word	trg2
 6319              		.size	BMP280_spi, .-BMP280_spi
 6320              		.section	.text.fun_tool,"ax",%progbits
 6321              		.align	1
 6322              		.p2align 2,,3
 6323              		.global	fun_tool
 6324              		.syntax unified
 6325              		.thumb
 6326              		.thumb_func
 6327              		.fpu softvfp
ARM GAS  /tmp/ccjvICQi.s 			page 112


 6328              		.type	fun_tool, %function
 6329              	fun_tool:
 6330              		@ args = 0, pretend = 0, frame = 528
 6331              		@ frame_needed = 0, uses_anonymous_args = 0
 6332 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 6333              	@ main.c:2746: 	switch(znak){
 6334 0004 6338     		subs	r0, r0, #99	@ tmp279, znak,
 6335              	@ main.c:2737: void fun_tool(u08 znak,T_SD1 * sda){
 6336 0006 ADF5057D 		sub	sp, sp, #532	@,,
 6337              	@ main.c:2746: 	switch(znak){
 6338 000a 1428     		cmp	r0, #20	@ tmp279,
 6339 000c 00F28880 		bhi	.L462	@
 6340 0010 DFE810F0 		tbh	[pc, r0, lsl #1]	@ tmp279
 6341              	.L464:
 6342 0014 B200     		.2byte	(.L463-.L464)/2
 6343 0016 8600     		.2byte	(.L462-.L464)/2
 6344 0018 8600     		.2byte	(.L462-.L464)/2
 6345 001a 8600     		.2byte	(.L462-.L464)/2
 6346 001c 8600     		.2byte	(.L462-.L464)/2
 6347 001e 8600     		.2byte	(.L462-.L464)/2
 6348 0020 8600     		.2byte	(.L462-.L464)/2
 6349 0022 8600     		.2byte	(.L462-.L464)/2
 6350 0024 8600     		.2byte	(.L462-.L464)/2
 6351 0026 8600     		.2byte	(.L462-.L464)/2
 6352 0028 BF00     		.2byte	(.L465-.L464)/2
 6353 002a 8600     		.2byte	(.L462-.L464)/2
 6354 002c 1500     		.2byte	(.L466-.L464)/2
 6355 002e 8600     		.2byte	(.L462-.L464)/2
 6356 0030 8600     		.2byte	(.L462-.L464)/2
 6357 0032 FF00     		.2byte	(.L467-.L464)/2
 6358 0034 8600     		.2byte	(.L462-.L464)/2
 6359 0036 8600     		.2byte	(.L462-.L464)/2
 6360 0038 5401     		.2byte	(.L468-.L464)/2
 6361 003a 8600     		.2byte	(.L462-.L464)/2
 6362 003c 8D00     		.2byte	(.L469-.L464)/2
 6363              		.p2align 1
 6364              	.L466:
 6365              	@ main.c:2858: 		UaPutK("Read sector");
 6366 003e B648     		ldr	r0, .L501	@,
 6367 0040 FFF7FEFF 		bl	UaPutK	@
 6368              	@ main.c:2859: 		UaPutK("\r\n sectorNumber = ");
 6369 0044 B548     		ldr	r0, .L501+4	@,
 6370 0046 FFF7FEFF 		bl	UaPutK	@
 6371              	@ main.c:2862: 		strBlock=UART_getNum();
 6372 004a FFF7FEFF 		bl	UART_getNum	@
 6373              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6374 004e B44C     		ldr	r4, .L501+8	@ tmp341,
 6375 0050 B44D     		ldr	r5, .L501+12	@ tmp342,
 6376 0052 A368     		ldr	r3, [r4, #8]	@ _169, MEM[(struct SysTick_Type *)3758153744B].VAL
 6377              	@ main.c:2865: 		sd_status=mci_read_sect (strBlock,buffer,1);
 6378 0054 0122     		movs	r2, #1	@,
 6379 0056 04A9     		add	r1, sp, #16	@ tmp393,,
 6380              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6381 0058 2B60     		str	r3, [r5]	@ _169, Timt
 6382              	@ main.c:2862: 		strBlock=UART_getNum();
 6383 005a 0746     		mov	r7, r0	@ strBlock,
 6384              	@ main.c:2865: 		sd_status=mci_read_sect (strBlock,buffer,1);
ARM GAS  /tmp/ccjvICQi.s 			page 113


 6385 005c FFF7FEFF 		bl	mmc_read_sect	@
 6386              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 6387 0060 2A68     		ldr	r2, [r5]	@ Timt.100_166, Timt
 6388 0062 A368     		ldr	r3, [r4, #8]	@ _167, MEM[(struct SysTick_Type *)3758153744B].VAL
 6389 0064 D31A     		subs	r3, r2, r3	@ _168, Timt.100_166, _167
 6390 0066 0193     		str	r3, [sp, #4]	@ _168, %sfp
 6391 0068 0393     		str	r3, [sp, #12]	@ _168, MEM[(volatile u32 *)&tim]
 6392              	@ main.c:2868: 		if(sd_status){
 6393 006a 0028     		cmp	r0, #0	@
 6394 006c 00F04F81 		beq	.L480	@
 6395              	@ main.c:2869: 			UaPutS("\r\n ");
 6396 0070 AD48     		ldr	r0, .L501+16	@,
 6397 0072 FFF7FEFF 		bl	UaPutS	@
 6398              	@ main.c:2871: 			hex2uart(strBlock, 8);
 6399 0076 0821     		movs	r1, #8	@,
 6400 0078 3846     		mov	r0, r7	@, strBlock
 6401 007a FFF7FEFF 		bl	hex2uart	@
 6402 007e 0024     		movs	r4, #0	@ ivtmp.578,
 6403              	.L481:
 6404              	@ main.c:2873: 				hex2uart(k, 2);
 6405 0080 2046     		mov	r0, r4	@, ivtmp.578
 6406 0082 0221     		movs	r1, #2	@,
 6407 0084 0134     		adds	r4, r4, #1	@ ivtmp.578, ivtmp.578,
 6408 0086 FFF7FEFF 		bl	hex2uart	@
 6409              	@ main.c:2872: 			for(u08 k=0;k<16;k++){
 6410 008a 102C     		cmp	r4, #16	@ ivtmp.578,
 6411 008c F8D1     		bne	.L481	@,
 6412              	@ main.c:2876: 			UaPutS("\r\n\n ");
 6413 008e A748     		ldr	r0, .L501+20	@,
 6414 0090 FFF7FEFF 		bl	UaPutS	@
 6415              	@ main.c:2878: 				hex2uart(strBlock*512 + i, 8);
 6416 0094 04AE     		add	r6, sp, #16	@ tmp396,,
 6417              	@ main.c:2882: 				UaPutS("  ");
 6418 0096 DFF8DC92 		ldr	r9, .L501+92	@ tmp378,
 6419              	@ main.c:2887: 				UaPutS("\r\n ");
 6420 009a DFF88C82 		ldr	r8, .L501+16	@ tmp379,
 6421 009e 0DF5047A 		add	r10, sp, #528	@ _54,,
 6422 00a2 C6EB4727 		rsb	r7, r6, r7, lsl #9	@ tmp371, tmp397, strBlock,
 6423 00a6 08AD     		add	r5, sp, #32	@ ivtmp.576,,
 6424              	.L486:
 6425              	@ main.c:2878: 				hex2uart(strBlock*512 + i, 8);
 6426 00a8 0821     		movs	r1, #8	@,
 6427 00aa B819     		adds	r0, r7, r6	@, tmp371, ivtmp.577
 6428 00ac FFF7FEFF 		bl	hex2uart	@
 6429 00b0 3446     		mov	r4, r6	@ ivtmp.568, ivtmp.577
 6430              	.L482:
 6431              	@ main.c:2880: 					hex2uart(buffer[k+i], 2);
 6432 00b2 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2	@, MEM[base: _181, offset: 0B]
 6433 00b6 0221     		movs	r1, #2	@,
 6434 00b8 FFF7FEFF 		bl	hex2uart	@
 6435              	@ main.c:2879: 				for(u08 k=0;k<16;k++){
 6436 00bc A542     		cmp	r5, r4	@ ivtmp.576, ivtmp.568
 6437 00be F8D1     		bne	.L482	@,
 6438              	@ main.c:2882: 				UaPutS("  ");
 6439 00c0 4846     		mov	r0, r9	@, tmp378
 6440 00c2 FFF7FEFF 		bl	UaPutS	@
 6441 00c6 B346     		mov	fp, r6	@ ivtmp.559, ivtmp.577
ARM GAS  /tmp/ccjvICQi.s 			page 114


 6442              	.L485:
 6443              	@ main.c:2884: 					if ( buffer[k+i]<0x20 || buffer[k+i]>127 ) UaPutC('.');
 6444 00c8 1BF8010B 		ldrb	r0, [fp], #1	@ zero_extendqisi2	@ _39, MEM[base: _195, offset: 0B]
 6445 00cc A0F12002 		sub	r2, r0, #32	@ tmp355, _39,
 6446 00d0 5F2A     		cmp	r2, #95	@ tmp355,
 6447 00d2 88BF     		it	hi
 6448 00d4 2E20     		movhi	r0, #46	@,
 6449              	@ main.c:2885: 					else UaPutC(buffer[k+i]);
 6450 00d6 FFF7FEFF 		bl	UaPutC	@
 6451              	@ main.c:2883: 				for(u08 k=0;k<16;k++){
 6452 00da 5C45     		cmp	r4, fp	@ ivtmp.568, ivtmp.559
 6453 00dc F4D1     		bne	.L485	@,
 6454 00de 1036     		adds	r6, r6, #16	@ ivtmp.577, ivtmp.577,
 6455              	@ main.c:2887: 				UaPutS("\r\n ");
 6456 00e0 4046     		mov	r0, r8	@, tmp379
 6457 00e2 FFF7FEFF 		bl	UaPutS	@
 6458              	@ main.c:2877: 			for(u32 i=0;i<512;i+=16){
 6459 00e6 B245     		cmp	r10, r6	@ _54, ivtmp.577
 6460 00e8 05F11005 		add	r5, r5, #16	@ ivtmp.576, ivtmp.576,
 6461 00ec DCD1     		bne	.L486	@,
 6462              	@ main.c:2889: 			UaPutK(" t_rsdio = ");	uint2uart(tim/TIM_US);
 6463 00ee 9048     		ldr	r0, .L501+24	@,
 6464 00f0 FFF7FEFF 		bl	UaPutK	@
 6465 00f4 019B     		ldr	r3, [sp, #4]	@ _168, %sfp
 6466 00f6 8F48     		ldr	r0, .L501+28	@ tmp360,
 6467 00f8 A0FB0330 		umull	r3, r0, r0, r3	@ tmp390, tmp359, tmp360, _168
 6468 00fc 4008     		lsrs	r0, r0, #1	@, tmp359,
 6469 00fe FFF7FEFF 		bl	uint2uart	@
 6470              	@ main.c:2891: 			crc16_spi2( (u16*) buffer,256, &crc16 );
 6471 0102 4FF48071 		mov	r1, #256	@,
 6472 0106 04A8     		add	r0, sp, #16	@ tmp400,,
 6473 0108 0DF10A02 		add	r2, sp, #10	@ tmp401,,
 6474              	.L499:
 6475 010c FFF7FEFF 		bl	crc16_spi2	@
 6476              	@ main.c:2893: 			UaPutK(" crc = ");	hex2uart(crc16,4);
 6477 0110 8948     		ldr	r0, .L501+32	@,
 6478 0112 FFF7FEFF 		bl	UaPutK	@
 6479 0116 BDF80A00 		ldrh	r0, [sp, #10]	@, crc16
 6480 011a 0421     		movs	r1, #4	@,
 6481 011c FFF7FEFF 		bl	hex2uart	@
 6482              	.L462:
 6483              	@ main.c:2902: 	UaPutS("\r\n ");
 6484 0120 8148     		ldr	r0, .L501+16	@,
 6485 0122 FFF7FEFF 		bl	UaPutS	@
 6486              	@ main.c:2903: }
 6487 0126 0DF5057D 		add	sp, sp, #532	@,,
 6488              		@ sp needed	@
 6489 012a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 6490              	.L469:
 6491              	@ main.c:2797: 		UaPutK("\r\n Flash memory Page = ");
 6492 012e 8348     		ldr	r0, .L501+36	@,
 6493 0130 FFF7FEFF 		bl	UaPutK	@
 6494              	@ main.c:2798: 		strBlock = UART_getNum();
 6495 0134 FFF7FEFF 		bl	UART_getNum	@
 6496              	@ main.c:2799: 		strBlock = strBlock > 254 ? 254 : strBlock;
 6497 0138 FE28     		cmp	r0, #254	@,
 6498 013a 28BF     		it	cs
ARM GAS  /tmp/ccjvICQi.s 			page 115


 6499 013c FE20     		movcs	r0, #254	@ strBlock,
 6500              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6501 013e 784D     		ldr	r5, .L501+8	@ tmp297,
 6502 0140 784C     		ldr	r4, .L501+12	@ tmp298,
 6503 0142 AB68     		ldr	r3, [r5, #8]	@ _161, MEM[(struct SysTick_Type *)3758153744B].VAL
 6504              	@ main.c:2800: 		strBlock = (u32)(0x800*strBlock + 0x08000000);
 6505 0144 00F58030 		add	r0, r0, #65536	@ _17, strBlock,
 6506              	@ main.c:2803: 		EraseFlashPage(strBlock);
 6507 0148 C002     		lsls	r0, r0, #11	@, _17,
 6508              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6509 014a 2360     		str	r3, [r4]	@ _161, Timt
 6510              	@ main.c:2803: 		EraseFlashPage(strBlock);
 6511 014c FFF7FEFF 		bl	EraseFlashPage	@
 6512              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 6513 0150 2468     		ldr	r4, [r4]	@ Timt.100_158, Timt
 6514 0152 AB68     		ldr	r3, [r5, #8]	@ _159, MEM[(struct SysTick_Type *)3758153744B].VAL
 6515              	@ main.c:2805: 		UaPutS("\r\n Kasowanie pamieci FLASH = "); sint2uart(tim/TIM_US);
 6516 0154 7A48     		ldr	r0, .L501+40	@,
 6517              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 6518 0156 E41A     		subs	r4, r4, r3	@ _160, Timt.100_158, _159
 6519 0158 0394     		str	r4, [sp, #12]	@ _160, MEM[(volatile u32 *)&tim]
 6520              	@ main.c:2805: 		UaPutS("\r\n Kasowanie pamieci FLASH = "); sint2uart(tim/TIM_US);
 6521 015a FFF7FEFF 		bl	UaPutS	@
 6522 015e 7548     		ldr	r0, .L501+28	@ tmp307,
 6523 0160 A0FB0430 		umull	r3, r0, r0, r4	@ tmp388, tmp306, tmp307, _160
 6524 0164 4008     		lsrs	r0, r0, #1	@, tmp306,
 6525 0166 FFF7FEFF 		bl	sint2uart	@
 6526              	@ main.c:2902: 	UaPutS("\r\n ");
 6527 016a 6F48     		ldr	r0, .L501+16	@,
 6528 016c FFF7FEFF 		bl	UaPutS	@
 6529              	@ main.c:2903: }
 6530 0170 0DF5057D 		add	sp, sp, #532	@,,
 6531              		@ sp needed	@
 6532 0174 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 6533              	.L463:
 6534              	@ main.c:2852: 		TFT_Clear(BLACK);
 6535 0178 0020     		movs	r0, #0	@,
 6536 017a FFF7FEFF 		bl	TFT_Clear	@
 6537              	@ main.c:2854: 		UaPutS("\r\n Clear !");
 6538 017e 7148     		ldr	r0, .L501+44	@,
 6539 0180 FFF7FEFF 		bl	UaPutS	@
 6540              	@ main.c:2902: 	UaPutS("\r\n ");
 6541 0184 6848     		ldr	r0, .L501+16	@,
 6542 0186 FFF7FEFF 		bl	UaPutS	@
 6543              	@ main.c:2903: }
 6544 018a 0DF5057D 		add	sp, sp, #532	@,,
 6545              		@ sp needed	@
 6546 018e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 6547              	.L465:
 6548              	@ main.c:2838: 		UaPutS("\r\n Read Start !");
 6549 0192 6D48     		ldr	r0, .L501+48	@,
 6550 0194 FFF7FEFF 		bl	UaPutS	@
 6551 0198 0025     		movs	r5, #0	@ ivtmp.549,
 6552 019a DFF88891 		ldr	r9, .L501+12	@ tmp370,
 6553              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6554 019e 604E     		ldr	r6, .L501+8	@ tmp325,
 6555              	@ main.c:2843: 			tim = tim/TIM_US;
ARM GAS  /tmp/ccjvICQi.s 			page 116


 6556 01a0 644F     		ldr	r7, .L501+28	@ tmp332,
 6557              	@ main.c:2846: 			if(tim>1000 || tim<700){ UaPutK("\r\n"); int2uart(n,7,0); int2uart(tim,6,3); }
 6558 01a2 DFF8D481 		ldr	r8, .L501+96	@ tmp374,
 6559 01a6 05E0     		b	.L487	@
 6560              	.L476:
 6561 01a8 BAF5967F 		cmp	r10, #300	@ _56,
 6562 01ac 18D8     		bhi	.L479	@,
 6563              	@ main.c:2839: 		for(u32 n=0;n<125;n++){
 6564 01ae 7C2D     		cmp	r5, #124	@ ivtmp.549,
 6565 01b0 25D0     		beq	.L500	@,
 6566              	.L477:
 6567 01b2 0135     		adds	r5, r5, #1	@ ivtmp.549, ivtmp.549,
 6568              	.L487:
 6569              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6570 01b4 B368     		ldr	r3, [r6, #8]	@ _165, MEM[(struct SysTick_Type *)3758153744B].VAL
 6571 01b6 C9F80030 		str	r3, [r9]	@ _165, Timt
 6572              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 6573 01ba D9F80030 		ldr	r3, [r9]	@ Timt.100_162, Timt
 6574 01be B268     		ldr	r2, [r6, #8]	@ _163, MEM[(struct SysTick_Type *)3758153744B].VAL
 6575 01c0 9B1A     		subs	r3, r3, r2	@ _164, Timt.100_162, _163
 6576              	@ main.c:2843: 			tim = tim/TIM_US;
 6577 01c2 A7FB0324 		umull	r2, r4, r7, r3	@ tmp389, tmp331, tmp332, _164
 6578 01c6 6408     		lsrs	r4, r4, #1	@ _24, tmp331,
 6579              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 6580 01c8 0393     		str	r3, [sp, #12]	@ _164, MEM[(volatile u32 *)&tim]
 6581 01ca A4F52F7A 		sub	r10, r4, #700	@ _56, _24,
 6582              	@ main.c:2843: 			tim = tim/TIM_US;
 6583 01ce 0394     		str	r4, [sp, #12]	@ _24, tim
 6584              	@ main.c:2845: 			if(n%1000==0) UaPutK(".");
 6585 01d0 002D     		cmp	r5, #0	@ ivtmp.549
 6586 01d2 E9D1     		bne	.L476	@
 6587              	@ main.c:2845: 			if(n%1000==0) UaPutK(".");
 6588 01d4 5D48     		ldr	r0, .L501+52	@,
 6589 01d6 FFF7FEFF 		bl	UaPutK	@
 6590              	@ main.c:2846: 			if(tim>1000 || tim<700){ UaPutK("\r\n"); int2uart(n,7,0); int2uart(tim,6,3); }
 6591 01da BAF5967F 		cmp	r10, #300	@ _56,
 6592 01de E8D9     		bls	.L477	@,
 6593              	.L479:
 6594              	@ main.c:2846: 			if(tim>1000 || tim<700){ UaPutK("\r\n"); int2uart(n,7,0); int2uart(tim,6,3); }
 6595 01e0 4046     		mov	r0, r8	@, tmp374
 6596 01e2 FFF7FEFF 		bl	UaPutK	@
 6597 01e6 0022     		movs	r2, #0	@,
 6598 01e8 0721     		movs	r1, #7	@,
 6599 01ea 2846     		mov	r0, r5	@, ivtmp.549
 6600 01ec FFF7FEFF 		bl	int2uart	@
 6601 01f0 2046     		mov	r0, r4	@, _24
 6602 01f2 0322     		movs	r2, #3	@,
 6603 01f4 0621     		movs	r1, #6	@,
 6604 01f6 FFF7FEFF 		bl	int2uart	@
 6605              	@ main.c:2839: 		for(u32 n=0;n<125;n++){
 6606 01fa 7C2D     		cmp	r5, #124	@ ivtmp.549,
 6607 01fc D9D1     		bne	.L477	@,
 6608              	.L500:
 6609              	@ main.c:2848: 		UaPutS("\r\n Read Done !");
 6610 01fe 5448     		ldr	r0, .L501+56	@,
 6611 0200 FFF7FEFF 		bl	UaPutS	@
 6612              	@ main.c:2902: 	UaPutS("\r\n ");
ARM GAS  /tmp/ccjvICQi.s 			page 117


 6613 0204 4848     		ldr	r0, .L501+16	@,
 6614 0206 FFF7FEFF 		bl	UaPutS	@
 6615              	@ main.c:2903: }
 6616 020a 0DF5057D 		add	sp, sp, #532	@,,
 6617              		@ sp needed	@
 6618 020e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 6619              	.L467:
 6620              	@ main.c:2749: 		UaPutK("\r\n FLASH memory Read = ");
 6621 0212 5048     		ldr	r0, .L501+60	@,
 6622 0214 FFF7FEFF 		bl	UaPutK	@
 6623              	@ main.c:2750: 		UaPutK("\r\n FLASH memory Read = ");
 6624 0218 4E48     		ldr	r0, .L501+60	@,
 6625 021a FFF7FEFF 		bl	UaPutK	@
 6626              	@ main.c:2752: 		strBlock = UART_getNum();
 6627 021e FFF7FEFF 		bl	UART_getNum	@
 6628              	@ main.c:2755: 		strBlock = strBlock > 254 ? 254 : strBlock;
 6629 0222 FE28     		cmp	r0, #254	@ tmp391,
 6630 0224 28BF     		it	cs
 6631 0226 FE20     		movcs	r0, #254	@ tmp391,
 6632 0228 0446     		mov	r4, r0	@ strBlock, tmp391
 6633              	@ main.c:2756: 		UaPutK("\r\n Flash memory Page ="); sint2uart(strBlock);
 6634 022a 4B48     		ldr	r0, .L501+64	@,
 6635 022c FFF7FEFF 		bl	UaPutK	@
 6636 0230 2046     		mov	r0, r4	@, strBlock
 6637              	@ main.c:2757: 		strBlock = 0x800*strBlock + 0x08000000;
 6638 0232 04F58034 		add	r4, r4, #65536	@ _2, strBlock,
 6639              	@ main.c:2756: 		UaPutK("\r\n Flash memory Page ="); sint2uart(strBlock);
 6640 0236 FFF7FEFF 		bl	sint2uart	@
 6641              	@ main.c:2757: 		strBlock = 0x800*strBlock + 0x08000000;
 6642 023a E402     		lsls	r4, r4, #11	@ ivtmp.604, _2,
 6643              	@ main.c:2765: 			UaPutS("\r\n ");
 6644 023c 3A48     		ldr	r0, .L501+16	@,
 6645 023e FFF7FEFF 		bl	UaPutS	@
 6646              	@ main.c:2767: 			hex2uart(strBlock, 8);
 6647 0242 2046     		mov	r0, r4	@, ivtmp.604
 6648 0244 0821     		movs	r1, #8	@,
 6649 0246 FFF7FEFF 		bl	hex2uart	@
 6650              	@ main.c:2762: 		p_buf = (u08 *) strBlock;
 6651 024a A346     		mov	fp, r4	@ p_buf, ivtmp.604
 6652              	@ main.c:2767: 			hex2uart(strBlock, 8);
 6653 024c 0025     		movs	r5, #0	@ ivtmp.606,
 6654              	.L470:
 6655              	@ main.c:2769: 				hex2uart(k, 2);
 6656 024e 2846     		mov	r0, r5	@, ivtmp.606
 6657 0250 0221     		movs	r1, #2	@,
 6658 0252 0135     		adds	r5, r5, #1	@ ivtmp.606, ivtmp.606,
 6659 0254 FFF7FEFF 		bl	hex2uart	@
 6660              	@ main.c:2768: 			for(u08 k=0;k<16;k++){
 6661 0258 102D     		cmp	r5, #16	@ ivtmp.606,
 6662 025a F8D1     		bne	.L470	@,
 6663              	@ main.c:2772: 			UaPutS("\r\n\n ");
 6664 025c 3348     		ldr	r0, .L501+20	@,
 6665 025e 04F12007 		add	r7, r4, #32	@ ivtmp.604, ivtmp.604,
 6666 0262 FFF7FEFF 		bl	UaPutS	@
 6667 0266 3E46     		mov	r6, r7	@ ivtmp.605, ivtmp.604
 6668              	@ main.c:2779: 				UaPutS("  ");
 6669 0268 DFF808A1 		ldr	r10, .L501+92	@ tmp384,
ARM GAS  /tmp/ccjvICQi.s 			page 118


 6670              	@ main.c:2784: 				UaPutS("\r\n ");
 6671 026c DFF8B890 		ldr	r9, .L501+16	@ tmp385,
 6672 0270 04F50068 		add	r8, r4, #2048	@ _241, ivtmp.604,
 6673              	.L475:
 6674              	@ main.c:2775: 				hex2uart(strBlock + i, 8);	// memory
 6675 0274 0821     		movs	r1, #8	@,
 6676 0276 2046     		mov	r0, r4	@, ivtmp.604
 6677 0278 FFF7FEFF 		bl	hex2uart	@
 6678 027c 2546     		mov	r5, r4	@ ivtmp.597, ivtmp.604
 6679              	.L471:
 6680              	@ main.c:2777: 					hex2uart(p_buf[k+i], 2);
 6681 027e 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2	@, *_7
 6682 0282 0221     		movs	r1, #2	@,
 6683 0284 FFF7FEFF 		bl	hex2uart	@
 6684              	@ main.c:2776: 				for(u08 k=0;k<32;k++){
 6685 0288 B542     		cmp	r5, r6	@ ivtmp.597, ivtmp.605
 6686 028a F8D1     		bne	.L471	@,
 6687              	@ main.c:2779: 				UaPutS("  ");
 6688 028c 5046     		mov	r0, r10	@, tmp384
 6689 028e FFF7FEFF 		bl	UaPutS	@
 6690              	.L474:
 6691              	@ main.c:2781: 					if ( p_buf[k+i]<0x20 || p_buf[k+i]>127 ) UaPutC('.');
 6692 0292 2078     		ldrb	r0, [r4]	@ zero_extendqisi2	@ _13, *_12
 6693 0294 0134     		adds	r4, r4, #1	@ ivtmp.590, ivtmp.590,
 6694 0296 A0F12003 		sub	r3, r0, #32	@ tmp288, _13,
 6695 029a 5F2B     		cmp	r3, #95	@ tmp288,
 6696 029c 88BF     		it	hi
 6697 029e 2E20     		movhi	r0, #46	@,
 6698              	@ main.c:2782: 					else UaPutC(p_buf[k+i]);
 6699 02a0 FFF7FEFF 		bl	UaPutC	@
 6700              	@ main.c:2780: 				for(u08 k=0;k<32;k++){
 6701 02a4 AC42     		cmp	r4, r5	@ ivtmp.590, ivtmp.597
 6702 02a6 F4D1     		bne	.L474	@,
 6703              	@ main.c:2784: 				UaPutS("\r\n ");
 6704 02a8 4846     		mov	r0, r9	@, tmp385
 6705 02aa FFF7FEFF 		bl	UaPutS	@
 6706              	@ main.c:2773: 			for(u32 i=0;i<2048;i+=32){
 6707 02ae 4745     		cmp	r7, r8	@ ivtmp.604, _241
 6708 02b0 06F12006 		add	r6, r6, #32	@ ivtmp.605, ivtmp.605,
 6709 02b4 3C46     		mov	r4, r7	@ ivtmp.604, ivtmp.604
 6710 02b6 24D0     		beq	.L496	@,
 6711 02b8 2037     		adds	r7, r7, #32	@ ivtmp.604, ivtmp.604,
 6712 02ba DBE7     		b	.L475	@
 6713              	.L468:
 6714              	@ main.c:2816: 		UaPutK("\r\n Godzina = ");
 6715 02bc 2748     		ldr	r0, .L501+68	@,
 6716 02be FFF7FEFF 		bl	UaPutK	@
 6717              	@ main.c:2817: 		datetime.hor = UART_getNum();
 6718 02c2 FFF7FEFF 		bl	UART_getNum	@
 6719 02c6 264C     		ldr	r4, .L501+72	@ tmp309,
 6720 02c8 A070     		strb	r0, [r4, #2]	@, datetime.hor
 6721              	@ main.c:2818: 		UaPutK("\r\n Minut   = ");
 6722 02ca 2648     		ldr	r0, .L501+76	@,
 6723 02cc FFF7FEFF 		bl	UaPutK	@
 6724              	@ main.c:2819: 		datetime.min = UART_getNum();
 6725 02d0 FFF7FEFF 		bl	UART_getNum	@
 6726 02d4 6070     		strb	r0, [r4, #1]	@, datetime.min
ARM GAS  /tmp/ccjvICQi.s 			page 119


 6727              	@ main.c:2820: 		UaPutK("\r\n Sekunda = ");
 6728 02d6 2448     		ldr	r0, .L501+80	@,
 6729 02d8 FFF7FEFF 		bl	UaPutK	@
 6730              	@ main.c:2821: 		datetime.sec = UART_getNum();
 6731 02dc FFF7FEFF 		bl	UART_getNum	@
 6732              	@ main.c:2825: 		datetime.mdy=18;		// 1..31	dzien miesiaca
 6733 02e0 0B23     		movs	r3, #11	@ tmp321,
 6734              	@ main.c:2823: 		datetime.yer=2016;	// 1970..2106
 6735 02e2 4FF4FC61 		mov	r1, #2016	@ tmp317,
 6736              	@ main.c:2828: 		datetime.sec=30;		// 0..59	sekunda
 6737 02e6 214A     		ldr	r2, .L501+84	@ tmp319,
 6738              	@ main.c:2829: 		rtc_SetTime(&datetime );
 6739 02e8 2046     		mov	r0, r4	@, tmp309
 6740              	@ main.c:2828: 		datetime.sec=30;		// 0..59	sekunda
 6741 02ea 2260     		str	r2, [r4]	@ tmp319, MEM[(unsigned char *)&datetime]
 6742              	@ main.c:2825: 		datetime.mdy=18;		// 1..31	dzien miesiaca
 6743 02ec 2371     		strb	r3, [r4, #4]	@ tmp321, MEM[(unsigned char *)&datetime + 4B]
 6744              	@ main.c:2823: 		datetime.yer=2016;	// 1970..2106
 6745 02ee E180     		strh	r1, [r4, #6]	@ movhi	@ tmp317, datetime.yer
 6746              	@ main.c:2829: 		rtc_SetTime(&datetime );
 6747 02f0 FFF7FEFF 		bl	rtc_SetTime	@
 6748              	@ main.c:2902: 	UaPutS("\r\n ");
 6749 02f4 0C48     		ldr	r0, .L501+16	@,
 6750 02f6 FFF7FEFF 		bl	UaPutS	@
 6751              	@ main.c:2903: }
 6752 02fa 0DF5057D 		add	sp, sp, #532	@,,
 6753              		@ sp needed	@
 6754 02fe BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 6755              	.L496:
 6756              	@ main.c:2789: 			crc16_spi2((u16*)p_buf,2048, &crc16 );
 6757 0302 5846     		mov	r0, fp	@, p_buf
 6758 0304 0DF10A02 		add	r2, sp, #10	@ tmp392,,
 6759 0308 4FF40061 		mov	r1, #2048	@,
 6760 030c FEE6     		b	.L499	@
 6761              	.L480:
 6762              	@ main.c:2896: 		} else UaPutK("\r\n Read Error !!!");
 6763 030e 1848     		ldr	r0, .L501+88	@,
 6764 0310 FFF7FEFF 		bl	UaPutK	@
 6765 0314 04E7     		b	.L462	@
 6766              	.L502:
 6767 0316 00BF     		.align	2
 6768              	.L501:
 6769 0318 DC000000 		.word	.LC94
 6770 031c E8000000 		.word	.LC95
 6771 0320 10E000E0 		.word	-536813552
 6772 0324 00000000 		.word	Timt
 6773 0328 30000000 		.word	.LC82
 6774 032c 34000000 		.word	.LC83
 6775 0330 FC000000 		.word	.LC96
 6776 0334 398EE338 		.word	954437177
 6777 0338 40000000 		.word	.LC85
 6778 033c 48000000 		.word	.LC86
 6779 0340 60000000 		.word	.LC87
 6780 0344 D0000000 		.word	.LC93
 6781 0348 B0000000 		.word	.LC91
 6782 034c 00000000 		.word	.LC17
 6783 0350 C0000000 		.word	.LC92
ARM GAS  /tmp/ccjvICQi.s 			page 120


 6784 0354 00000000 		.word	.LC80
 6785 0358 18000000 		.word	.LC81
 6786 035c 80000000 		.word	.LC88
 6787 0360 00000000 		.word	.LANCHOR29
 6788 0364 90000000 		.word	.LC89
 6789 0368 A0000000 		.word	.LC90
 6790 036c 1E320A12 		.word	302658078
 6791 0370 08010000 		.word	.LC97
 6792 0374 3C000000 		.word	.LC84
 6793 0378 04000000 		.word	.LC13
 6794              		.size	fun_tool, .-fun_tool
 6795              		.section	.text.qtouch_mesaure,"ax",%progbits
 6796              		.align	1
 6797              		.p2align 2,,3
 6798              		.global	qtouch_mesaure
 6799              		.syntax unified
 6800              		.thumb
 6801              		.thumb_func
 6802              		.fpu softvfp
 6803              		.type	qtouch_mesaure, %function
 6804              	qtouch_mesaure:
 6805              		@ args = 0, pretend = 0, frame = 0
 6806              		@ frame_needed = 0, uses_anonymous_args = 0
 6807              		@ link register save eliminated.
 6808              	@ main.c:3247: 		PE2_o = 0;
 6809 0000 0021     		movs	r1, #0	@ tmp118,
 6810 0002 0E4B     		ldr	r3, .L512	@ tmp117,
 6811              	@ main.c:3248: 		while(PE4_i == 1);
 6812 0004 0E4A     		ldr	r2, .L512+4	@ tmp119,
 6813              	@ main.c:3247: 		PE2_o = 0;
 6814 0006 1960     		str	r1, [r3]	@ tmp118, MEM[(volatile long unsigned int *)1109590408B]
 6815              	.L504:
 6816              	@ main.c:3248: 		while(PE4_i == 1);
 6817 0008 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109590288B]
 6818 000a 012B     		cmp	r3, #1	@ _1,
 6819 000c FCD0     		beq	.L504	@,
 6820              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 6821 000e 0D4B     		ldr	r3, .L512+8	@ tmp120,
 6822 0010 0D49     		ldr	r1, .L512+12	@ tmp131,
 6823              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 6824 0012 1846     		mov	r0, r3	@ tmp123, tmp120
 6825              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 6826 0014 9B68     		ldr	r3, [r3, #8]	@ _10, MEM[(struct SysTick_Type *)3758153744B].VAL
 6827 0016 0B60     		str	r3, [r1]	@ _10, delay_us
 6828              	.L505:
 6829              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 6830 0018 0B68     		ldr	r3, [r1]	@ delay_us.101_11, delay_us
 6831 001a 8268     		ldr	r2, [r0, #8]	@ _12, MEM[(struct SysTick_Type *)3758153744B].VAL
 6832 001c 9B1A     		subs	r3, r3, r2	@ tmp124, delay_us.101_11, _12
 6833 001e 112B     		cmp	r3, #17	@ tmp124,
 6834 0020 FAD9     		bls	.L505	@,
 6835              	@ main.c:3250: 		PE2_o = 1;
 6836 0022 0121     		movs	r1, #1	@ tmp126,
 6837              	@ main.c:3246: 		u32 i=0;
 6838 0024 0020     		movs	r0, #0	@ <retval>,
 6839              	@ main.c:3250: 		PE2_o = 1;
 6840 0026 054B     		ldr	r3, .L512	@ tmp125,
ARM GAS  /tmp/ccjvICQi.s 			page 121


 6841              	@ main.c:3251: 		do{i++;} while (PE4_i == 0);
 6842 0028 054A     		ldr	r2, .L512+4	@ tmp127,
 6843              	@ main.c:3250: 		PE2_o = 1;
 6844 002a 1960     		str	r1, [r3]	@ tmp126, MEM[(volatile long unsigned int *)1109590408B]
 6845              	.L506:
 6846              	@ main.c:3251: 		do{i++;} while (PE4_i == 0);
 6847 002c 1368     		ldr	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109590288B]
 6848 002e 0130     		adds	r0, r0, #1	@ <retval>, <retval>,
 6849 0030 002B     		cmp	r3, #0	@ _2
 6850 0032 FBD0     		beq	.L506	@
 6851              	@ main.c:3252: 		PE2_o = 0;
 6852 0034 0022     		movs	r2, #0	@ tmp129,
 6853 0036 014B     		ldr	r3, .L512	@ tmp128,
 6854 0038 1A60     		str	r2, [r3]	@ tmp129, MEM[(volatile long unsigned int *)1109590408B]
 6855              	@ main.c:3254: 	}
 6856 003a 7047     		bx	lr	@
 6857              	.L513:
 6858              		.align	2
 6859              	.L512:
 6860 003c 88012342 		.word	1109590408
 6861 0040 10012342 		.word	1109590288
 6862 0044 10E000E0 		.word	-536813552
 6863 0048 00000000 		.word	delay_us
 6864              		.size	qtouch_mesaure, .-qtouch_mesaure
 6865              		.section	.text.qtouch,"ax",%progbits
 6866              		.align	1
 6867              		.p2align 2,,3
 6868              		.global	qtouch
 6869              		.syntax unified
 6870              		.thumb
 6871              		.thumb_func
 6872              		.fpu softvfp
 6873              		.type	qtouch, %function
 6874              	qtouch:
 6875              		@ args = 0, pretend = 0, frame = 0
 6876              		@ frame_needed = 0, uses_anonymous_args = 0
 6877              	@ main.c:3257: 		GPIOE->CRL = (GPIOE->CRL & 0xfff0f0ff) | 0x00040300;	
 6878 0000 114A     		ldr	r2, .L519	@ tmp119,
 6879              	@ main.c:3255: void qtouch(void)					{
 6880 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 6881              	@ main.c:3257: 		GPIOE->CRL = (GPIOE->CRL & 0xfff0f0ff) | 0x00040300;	
 6882 0006 1368     		ldr	r3, [r2]	@ _1, MEM[(struct GPIO_TypeDef *)1073813504B].CRL
 6883 0008 104D     		ldr	r5, .L519+4	@ tmp131,
 6884 000a 23F47023 		bic	r3, r3, #983040	@ tmp120, _1,
 6885 000e 23F47063 		bic	r3, r3, #3840	@ tmp120, tmp120,
 6886 0012 43F48023 		orr	r3, r3, #262144	@ _3, tmp120,
 6887 0016 43F44073 		orr	r3, r3, #768	@ _3, _3,
 6888              	@ main.c:3259: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL) ){
 6889 001a 0D4C     		ldr	r4, .L519+8	@ tmp125,
 6890 001c 0D4E     		ldr	r6, .L519+12	@ tmp127,
 6891              	@ main.c:3262: 				UaPutS("\r\n QT =");		sint2uart(qt);
 6892 001e DFF83880 		ldr	r8, .L519+16	@ tmp132,
 6893              	@ main.c:3257: 		GPIOE->CRL = (GPIOE->CRL & 0xfff0f0ff) | 0x00040300;	
 6894 0022 1360     		str	r3, [r2]	@ _3, MEM[(struct GPIO_TypeDef *)1073813504B].CRL
 6895              	.L515:
 6896              	@ main.c:3259: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL) ){
 6897 0024 2B68     		ldr	r3, [r5]	@ trg0.224_4, trg0
ARM GAS  /tmp/ccjvICQi.s 			page 122


 6898 0026 A268     		ldr	r2, [r4, #8]	@ _5, MEM[(struct SysTick_Type *)3758153744B].VAL
 6899 0028 9B1A     		subs	r3, r3, r2	@ tmp126, trg0.224_4, _5
 6900 002a B342     		cmp	r3, r6	@ tmp126, tmp127
 6901 002c FAD9     		bls	.L515	@,
 6902              	@ main.c:3260: 				trg0 = SysTick->VAL;
 6903 002e A368     		ldr	r3, [r4, #8]	@ _7, MEM[(struct SysTick_Type *)3758153744B].VAL
 6904 0030 2B60     		str	r3, [r5]	@ _7, trg0
 6905              	@ main.c:3261: 				qt = qtouch_mesaure();
 6906 0032 FFF7FEFF 		bl	qtouch_mesaure	@
 6907 0036 0746     		mov	r7, r0	@ qt,
 6908              	@ main.c:3262: 				UaPutS("\r\n QT =");		sint2uart(qt);
 6909 0038 4046     		mov	r0, r8	@, tmp132
 6910 003a FFF7FEFF 		bl	UaPutS	@
 6911 003e 3846     		mov	r0, r7	@, qt
 6912 0040 FFF7FEFF 		bl	sint2uart	@
 6913 0044 EEE7     		b	.L515	@
 6914              	.L520:
 6915 0046 00BF     		.align	2
 6916              	.L519:
 6917 0048 00180140 		.word	1073813504
 6918 004c 00000000 		.word	trg0
 6919 0050 10E000E0 		.word	-536813552
 6920 0054 20AA4400 		.word	4500000
 6921 0058 00000000 		.word	.LC98
 6922              		.size	qtouch, .-qtouch
 6923              		.section	.text.DHT_Tool,"ax",%progbits
 6924              		.align	1
 6925              		.p2align 2,,3
 6926              		.global	DHT_Tool
 6927              		.syntax unified
 6928              		.thumb
 6929              		.thumb_func
 6930              		.fpu softvfp
 6931              		.type	DHT_Tool, %function
 6932              	DHT_Tool:
 6933              		@ args = 0, pretend = 0, frame = 0
 6934              		@ frame_needed = 0, uses_anonymous_args = 0
 6935              		@ link register save eliminated.
 6936              	@ main.c:3456: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6937 0000 0A49     		ldr	r1, .L522	@ tmp116,
 6938              	@ main.c:3457: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 6939 0002 0B4A     		ldr	r2, .L522+4	@ tmp121,
 6940              	@ main.c:3456: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6941 0004 4B68     		ldr	r3, [r1, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 6942              	@ main.c:3460: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 6943 0006 0B48     		ldr	r0, .L522+8	@ tmp124,
 6944              	@ main.c:3456: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6945 0008 23F0F023 		bic	r3, r3, #-268374016	@ tmp117, _1,
 6946 000c 23F47023 		bic	r3, r3, #983040	@ tmp117, tmp117,
 6947 0010 43F01023 		orr	r3, r3, #268439552	@ _3, tmp117,
 6948 0014 43F48033 		orr	r3, r3, #65536	@ _3, _3,
 6949 0018 4B60     		str	r3, [r1, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 6950              	@ main.c:3457: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 6951 001a 1368     		ldr	r3, [r2]	@ _4, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 6952              	@ main.c:3460: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 6953 001c 0649     		ldr	r1, .L522+12	@ tmp125,
 6954              	@ main.c:3457: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
ARM GAS  /tmp/ccjvICQi.s 			page 123


 6955 001e 23F47F23 		bic	r3, r3, #1044480	@ tmp122, _4,
 6956 0022 43F48833 		orr	r3, r3, #69632	@ _6, tmp122,
 6957 0026 1360     		str	r3, [r2]	@ _6, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 6958              	@ main.c:3460: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 6959 0028 0160     		str	r1, [r0]	@ tmp125, oled_hw.mosi
 6960              	@ main.c:3462: }
 6961 002a 7047     		bx	lr	@
 6962              	.L523:
 6963              		.align	2
 6964              	.L522:
 6965 002c 00080140 		.word	1073809408
 6966 0030 000C0140 		.word	1073810432
 6967 0034 00000000 		.word	oled_hw
 6968 0038 8C812142 		.word	1109492108
 6969              		.size	DHT_Tool, .-DHT_Tool
 6970              		.section	.text.SPI_Tool_Menu,"ax",%progbits
 6971              		.align	1
 6972              		.p2align 2,,3
 6973              		.global	SPI_Tool_Menu
 6974              		.syntax unified
 6975              		.thumb
 6976              		.thumb_func
 6977              		.fpu softvfp
 6978              		.type	SPI_Tool_Menu, %function
 6979              	SPI_Tool_Menu:
 6980              		@ args = 0, pretend = 0, frame = 0
 6981              		@ frame_needed = 0, uses_anonymous_args = 0
 6982 0000 08B5     		push	{r3, lr}	@
 6983              	@ main.c:3464: 	UaPutK("\n\r\n======= STM32F1 SPI TOOL =========================\r\n");
 6984 0002 0848     		ldr	r0, .L526	@,
 6985 0004 FFF7FEFF 		bl	UaPutK	@
 6986              	@ main.c:3465: 	UaPutK(" i - Init      r - Read  sector  e -                \r\n");
 6987 0008 0748     		ldr	r0, .L526+4	@,
 6988 000a FFF7FEFF 		bl	UaPutK	@
 6989              	@ main.c:3466: 	UaPutK(" d - Delete    f - Write sector  s -                \r\n");
 6990 000e 0748     		ldr	r0, .L526+8	@,
 6991 0010 FFF7FEFF 		bl	UaPutK	@
 6992              	@ main.c:3467: 	UaPutK(" m - Modf      c - Copy  sector  n -               \r\n");
 6993 0014 0648     		ldr	r0, .L526+12	@,
 6994 0016 FFF7FEFF 		bl	UaPutK	@
 6995              	@ main.c:3469: }
 6996 001a BDE80840 		pop	{r3, lr}	@
 6997              	@ main.c:3468: 	UaPutK("==================================================\r\n > ");
 6998 001e 0548     		ldr	r0, .L526+16	@,
 6999 0020 FFF7FEBF 		b	UaPutK	@
 7000              	.L527:
 7001              		.align	2
 7002              	.L526:
 7003 0024 00000000 		.word	.LC99
 7004 0028 38000000 		.word	.LC100
 7005 002c 70000000 		.word	.LC101
 7006 0030 A8000000 		.word	.LC102
 7007 0034 94000000 		.word	.LC49
 7008              		.size	SPI_Tool_Menu, .-SPI_Tool_Menu
 7009              		.section	.text.SPI_Tool,"ax",%progbits
 7010              		.align	1
 7011              		.p2align 2,,3
ARM GAS  /tmp/ccjvICQi.s 			page 124


 7012              		.global	SPI_Tool
 7013              		.syntax unified
 7014              		.thumb
 7015              		.thumb_func
 7016              		.fpu softvfp
 7017              		.type	SPI_Tool, %function
 7018              	SPI_Tool:
 7019              		@ args = 0, pretend = 0, frame = 16
 7020              		@ frame_needed = 0, uses_anonymous_args = 0
 7021              	@ main.c:3477: 	LED=1;
 7022 0000 0122     		movs	r2, #1	@ tmp125,
 7023 0002 444B     		ldr	r3, .L541	@ tmp124,
 7024              	@ main.c:3479: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 7025 0004 4449     		ldr	r1, .L541+4	@ tmp126,
 7026              	@ main.c:3470: void SPI_Tool(void)				{
 7027 0006 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 7028              	@ main.c:3477: 	LED=1;
 7029 000a 1A60     		str	r2, [r3]	@ tmp125, MEM[(volatile long unsigned int *)1109524916B]
 7030              	@ main.c:3479: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 7031 000c 4B68     		ldr	r3, [r1, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 7032              	@ main.c:3480: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 7033 000e 434A     		ldr	r2, .L541+8	@ tmp131,
 7034              	@ main.c:3479: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 7035 0010 23F0F023 		bic	r3, r3, #-268374016	@ tmp127, _1,
 7036 0014 23F47023 		bic	r3, r3, #983040	@ tmp127, tmp127,
 7037 0018 43F01023 		orr	r3, r3, #268439552	@ _3, tmp127,
 7038 001c 43F48033 		orr	r3, r3, #65536	@ _3, _3,
 7039 0020 4B60     		str	r3, [r1, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 7040              	@ main.c:3480: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 7041 0022 1368     		ldr	r3, [r2]	@ _4, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 7042              	@ main.c:3482: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 7043 0024 3E48     		ldr	r0, .L541+12	@ tmp134,
 7044              	@ main.c:3480: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 7045 0026 23F47F23 		bic	r3, r3, #1044480	@ tmp132, _4,
 7046 002a 43F48833 		orr	r3, r3, #69632	@ _6, tmp132,
 7047 002e 1360     		str	r3, [r2]	@ _6, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 7048              	@ main.c:3482: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 7049 0030 3C4E     		ldr	r6, .L541+16	@ tmp135,
 7050              	@ main.c:3483: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 7051 0032 3D49     		ldr	r1, .L541+20	@ tmp137,
 7052              	@ main.c:3484: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 7053 0034 3D4D     		ldr	r5, .L541+24	@ tmp139,
 7054              	@ main.c:3485: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 7055 0036 3E4A     		ldr	r2, .L541+28	@ tmp141,
 7056              	@ main.c:3486: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 7057 0038 3E4C     		ldr	r4, .L541+32	@ tmp143,
 7058              	@ main.c:3470: void SPI_Tool(void)				{
 7059 003a 84B0     		sub	sp, sp, #16	@,,
 7060              	@ main.c:3482: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 7061 003c 4660     		str	r6, [r0, #4]	@ tmp135, oled_hw.sck
 7062              	@ main.c:3490: 	int2str(12345678 ,tbuf,8,0);		
 7063 003e 0023     		movs	r3, #0	@,
 7064              	@ main.c:3483: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 7065 0040 0160     		str	r1, [r0]	@ tmp137, oled_hw.mosi
 7066              	@ main.c:3484: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 7067 0042 8560     		str	r5, [r0, #8]	@ tmp139, oled_hw.dc
 7068              	@ main.c:3490: 	int2str(12345678 ,tbuf,8,0);		
ARM GAS  /tmp/ccjvICQi.s 			page 125


 7069 0044 01A9     		add	r1, sp, #4	@ tmp175,,
 7070              	@ main.c:3485: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 7071 0046 C260     		str	r2, [r0, #12]	@ tmp141, oled_hw.cs
 7072              	@ main.c:3486: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 7073 0048 0461     		str	r4, [r0, #16]	@ tmp143, oled_hw.rst
 7074              	@ main.c:3490: 	int2str(12345678 ,tbuf,8,0);		
 7075 004a 0822     		movs	r2, #8	@,
 7076 004c 3A48     		ldr	r0, .L541+36	@,
 7077 004e FFF7FEFF 		bl	int2str	@
 7078              	@ main.c:3491: 	oled_num24(0, 4,tbuf);
 7079 0052 01AA     		add	r2, sp, #4	@ tmp176,,
 7080 0054 0421     		movs	r1, #4	@,
 7081 0056 0020     		movs	r0, #0	@,
 7082 0058 FFF7FEFF 		bl	oled_num24	@
 7083              	@ main.c:3492: 	oled_num24(0, 0,tbuf);
 7084 005c 0021     		movs	r1, #0	@,
 7085 005e 01AA     		add	r2, sp, #4	@ tmp177,,
 7086 0060 0846     		mov	r0, r1	@,
 7087 0062 FFF7FEFF 		bl	oled_num24	@
 7088              	@ main.c:3493: 	oled_refresh_gram();	
 7089 0066 FFF7FEFF 		bl	oled_refresh_gram	@
 7090              	@ main.c:3496: 	SPI2_init();
 7091 006a FFF7FEFF 		bl	SPI2_init	@
 7092 006e 334D     		ldr	r5, .L541+40	@ tmp171,
 7093              	@ main.c:3509: 		UaPutK("\r\n ");
 7094 0070 334C     		ldr	r4, .L541+44	@ tmp172,
 7095              	@ main.c:3515: 			UaPutK("\r\nInit spi    = "); uint2uart(1);
 7096 0072 344F     		ldr	r7, .L541+48	@ tmp173,
 7097              	@ main.c:3520: 			SPI2_CS = 0; 
 7098 0074 2036     		adds	r6, r6, #32	@ tmp174, tmp174,
 7099              	.L529:
 7100              	@ main.c:3503: 		SPI_Tool_Menu();
 7101 0076 FFF7FEFF 		bl	SPI_Tool_Menu	@
 7102              	@ main.c:3504: 		while(!p_Fifo1->rct);
 7103 007a 2A68     		ldr	r2, [r5]	@ p_Fifo1.226_7, p_Fifo1
 7104              	.L530:
 7105              	@ main.c:3504: 		while(!p_Fifo1->rct);
 7106 007c 9388     		ldrh	r3, [r2, #4]	@, p_Fifo1.226_7->rct
 7107 007e 9BB2     		uxth	r3, r3	@ _8, p_Fifo1.226_7->rct
 7108 0080 002B     		cmp	r3, #0	@ _8
 7109 0082 FBD0     		beq	.L530	@
 7110              	@ main.c:3507: 		UART_getChar((char*)&switcH);
 7111 0084 0DF10300 		add	r0, sp, #3	@ tmp178,,
 7112 0088 FFF7FEFF 		bl	UART_getChar	@
 7113              	@ main.c:3509: 		UaPutK("\r\n ");
 7114 008c 2046     		mov	r0, r4	@, tmp172
 7115 008e FFF7FEFF 		bl	UaPutK	@
 7116              	@ main.c:3510: 		switch (switcH)	{
 7117 0092 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2	@ switcH, switcH
 7118 0096 692B     		cmp	r3, #105	@ switcH,
 7119 0098 07D0     		beq	.L532	@,
 7120 009a 722B     		cmp	r3, #114	@ switcH,
 7121 009c 21D0     		beq	.L533	@,
 7122 009e 632B     		cmp	r3, #99	@ switcH,
 7123 00a0 0CD0     		beq	.L540	@,
 7124              	@ main.c:3538: 			UaPutK("Nieznana Komenda");
 7125 00a2 2948     		ldr	r0, .L541+52	@,
ARM GAS  /tmp/ccjvICQi.s 			page 126


 7126 00a4 FFF7FEFF 		bl	UaPutK	@
 7127              	@ main.c:3539: 			break;
 7128 00a8 E5E7     		b	.L529	@
 7129              	.L532:
 7130              	@ main.c:3514: 			SPI2_init();
 7131 00aa FFF7FEFF 		bl	SPI2_init	@
 7132              	@ main.c:3515: 			UaPutK("\r\nInit spi    = "); uint2uart(1);
 7133 00ae 3846     		mov	r0, r7	@, tmp173
 7134 00b0 FFF7FEFF 		bl	UaPutK	@
 7135 00b4 0120     		movs	r0, #1	@,
 7136 00b6 FFF7FEFF 		bl	uint2uart	@
 7137              	@ main.c:3517: 			break;
 7138 00ba DCE7     		b	.L529	@
 7139              	.L540:
 7140              	@ main.c:3529: 			UaPutK("Copy memory");
 7141 00bc 2348     		ldr	r0, .L541+56	@,
 7142 00be FFF7FEFF 		bl	UaPutK	@
 7143              	@ main.c:3530: 			UaPutK("\r\n Src Mem adr = 0x");	reg=UART_getHex();
 7144 00c2 2348     		ldr	r0, .L541+60	@,
 7145 00c4 FFF7FEFF 		bl	UaPutK	@
 7146 00c8 FFF7FEFF 		bl	UART_getHex	@
 7147              	@ main.c:3531: 			UaPutK("\r\n How many byte = ");	reg=UART_getNum();
 7148 00cc 2148     		ldr	r0, .L541+64	@,
 7149 00ce FFF7FEFF 		bl	UaPutK	@
 7150 00d2 FFF7FEFF 		bl	UART_getNum	@
 7151              	@ main.c:3532: 			UaPutK("\r\n Dst mem adr = 0x");	reg=UART_getHex();
 7152 00d6 2048     		ldr	r0, .L541+68	@,
 7153 00d8 FFF7FEFF 		bl	UaPutK	@
 7154 00dc FFF7FEFF 		bl	UART_getHex	@
 7155              	@ main.c:3535: 			break;
 7156 00e0 C9E7     		b	.L529	@
 7157              	.L533:
 7158              	@ main.c:3520: 			SPI2_CS = 0; 
 7159 00e2 4FF00008 		mov	r8, #0	@ tmp156,
 7160              	@ main.c:3521: 			UaPutK("\r\n Reg = ");	reg=UART_getNum();
 7161 00e6 1D48     		ldr	r0, .L541+72	@,
 7162              	@ main.c:3520: 			SPI2_CS = 0; 
 7163 00e8 C6F80080 		str	r8, [r6]	@ tmp156, MEM[(volatile long unsigned int *)1109492144B]
 7164              	@ main.c:3521: 			UaPutK("\r\n Reg = ");	reg=UART_getNum();
 7165 00ec FFF7FEFF 		bl	UaPutK	@
 7166 00f0 FFF7FEFF 		bl	UART_getNum	@
 7167              	@ main.c:3522: 			spi2_rw(reg);						// Read status register
 7168 00f4 C0B2     		uxtb	r0, r0	@,
 7169 00f6 FFF7FEFF 		bl	spi2_rw	@
 7170              	@ main.c:3523: 			UaPutK("\r\n Reg = ");	hex2uart(spi2_rw(0x00),2);
 7171 00fa 1848     		ldr	r0, .L541+72	@,
 7172 00fc FFF7FEFF 		bl	UaPutK	@
 7173 0100 4046     		mov	r0, r8	@, tmp156
 7174 0102 FFF7FEFF 		bl	spi2_rw	@
 7175 0106 0221     		movs	r1, #2	@,
 7176 0108 FFF7FEFF 		bl	hex2uart	@
 7177              	@ main.c:3524: 			SPI2_CS = 1;			
 7178 010c 0123     		movs	r3, #1	@ tmp164,
 7179 010e 3360     		str	r3, [r6]	@ tmp164, MEM[(volatile long unsigned int *)1109492144B]
 7180              	@ main.c:3526: 			break;
 7181 0110 B1E7     		b	.L529	@
 7182              	.L542:
ARM GAS  /tmp/ccjvICQi.s 			page 127


 7183 0112 00BF     		.align	2
 7184              	.L541:
 7185 0114 B4012242 		.word	1109524916
 7186 0118 00080140 		.word	1073809408
 7187 011c 000C0140 		.word	1073810432
 7188 0120 00000000 		.word	oled_hw
 7189 0124 90812142 		.word	1109492112
 7190 0128 8C812142 		.word	1109492108
 7191 012c B0012142 		.word	1109459376
 7192 0130 AC012142 		.word	1109459372
 7193 0134 BC012142 		.word	1109459388
 7194 0138 4E61BC00 		.word	12345678
 7195 013c 00000000 		.word	p_Fifo1
 7196 0140 30000000 		.word	.LC82
 7197 0144 00000000 		.word	.LC103
 7198 0148 68000000 		.word	.LC109
 7199 014c 20000000 		.word	.LC105
 7200 0150 2C000000 		.word	.LC106
 7201 0154 40000000 		.word	.LC107
 7202 0158 54000000 		.word	.LC108
 7203 015c 14000000 		.word	.LC104
 7204              		.size	SPI_Tool, .-SPI_Tool
 7205              		.section	.text.Menu1,"ax",%progbits
 7206              		.align	1
 7207              		.p2align 2,,3
 7208              		.global	Menu1
 7209              		.syntax unified
 7210              		.thumb
 7211              		.thumb_func
 7212              		.fpu softvfp
 7213              		.type	Menu1, %function
 7214              	Menu1:
 7215              		@ args = 0, pretend = 0, frame = 0
 7216              		@ frame_needed = 0, uses_anonymous_args = 0
 7217 0000 08B5     		push	{r3, lr}	@
 7218              	@ main.c:3989: 	UaPutK("\n\r\n======= STM32F4 SD/MMC Card ======================\r\n");
 7219 0002 0848     		ldr	r0, .L545	@,
 7220 0004 FFF7FEFF 		bl	UaPutK	@
 7221              	@ main.c:3990: 	UaPutK(" i - Init      r - Read  sector  e - Erase sector   \r\n");
 7222 0008 0748     		ldr	r0, .L545+4	@,
 7223 000a FFF7FEFF 		bl	UaPutK	@
 7224              	@ main.c:3991: 	UaPutK(" d - Delete    f - Write sector  s - Statistic Card \r\n");
 7225 000e 0748     		ldr	r0, .L545+8	@,
 7226 0010 FFF7FEFF 		bl	UaPutK	@
 7227              	@ main.c:3992: 	UaPutK(" m - Modf mem  c - Copy  sector  n - Next Cluster  \r\n");
 7228 0014 0648     		ldr	r0, .L545+12	@,
 7229 0016 FFF7FEFF 		bl	UaPutK	@
 7230              	@ main.c:3994: }
 7231 001a BDE80840 		pop	{r3, lr}	@
 7232              	@ main.c:3993: 	UaPutK("==================================================\r\n > ");
 7233 001e 0548     		ldr	r0, .L545+16	@,
 7234 0020 FFF7FEBF 		b	UaPutK	@
 7235              	.L546:
 7236              		.align	2
 7237              	.L545:
 7238 0024 00000000 		.word	.LC110
 7239 0028 38000000 		.word	.LC111
ARM GAS  /tmp/ccjvICQi.s 			page 128


 7240 002c 70000000 		.word	.LC112
 7241 0030 A8000000 		.word	.LC113
 7242 0034 94000000 		.word	.LC49
 7243              		.size	Menu1, .-Menu1
 7244              		.section	.text.MemCard_Menu,"ax",%progbits
 7245              		.align	1
 7246              		.p2align 2,,3
 7247              		.global	MemCard_Menu
 7248              		.syntax unified
 7249              		.thumb
 7250              		.thumb_func
 7251              		.fpu softvfp
 7252              		.type	MemCard_Menu, %function
 7253              	MemCard_Menu:
 7254              		@ args = 0, pretend = 0, frame = 40
 7255              		@ frame_needed = 0, uses_anonymous_args = 0
 7256              	@ main.c:3999: 	u16 crc=1,x=0,y1=0,y2=0;
 7257 0000 0123     		movs	r3, #1	@ tmp371,
 7258              	@ main.c:3995: void MemCard_Menu(void)		{
 7259 0002 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 7260 0006 8DB0     		sub	sp, sp, #52	@,,
 7261              	@ main.c:3999: 	u16 crc=1,x=0,y1=0,y2=0;
 7262 0008 ADF81E30 		strh	r3, [sp, #30]	@ movhi	@ tmp371, crc
 7263              	@ main.c:4001: 	TFT_Init();
 7264 000c FFF7FEFF 		bl	TFT_Init	@
 7265              	@ main.c:4002: 	TFT_Clear(BLACK);
 7266 0010 0020     		movs	r0, #0	@,
 7267 0012 FFF7FEFF 		bl	TFT_Clear	@
 7268              	@ main.c:4011: 	crc16_spi2_init();
 7269 0016 FFF7FEFF 		bl	crc16_spi2_init	@
 7270              	@ main.c:4013: 	if(dinit){
 7271 001a A94B     		ldr	r3, .L661	@ tmp701,
 7272 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2	@ dinit, dinit
 7273 001e 002B     		cmp	r3, #0	@ dinit
 7274 0020 00F01084 		beq	.L548	@
 7275              	@ main.c:4014: 		UaPutK("\r\nSD Card Init = "); sint2uart(CardType);
 7276 0024 A74B     		ldr	r3, .L661+4	@ tmp612,
 7277 0026 A848     		ldr	r0, .L661+8	@,
 7278 0028 1C46     		mov	r4, r3	@ tmp612, tmp612
 7279 002a 0393     		str	r3, [sp, #12]	@ tmp612, %sfp
 7280 002c FFF7FEFF 		bl	UaPutK	@
 7281 0030 2078     		ldrb	r0, [r4]	@ zero_extendqisi2	@, CardType
 7282 0032 FFF7FEFF 		bl	sint2uart	@
 7283              	.L549:
 7284              	@ main.c:3999: 	u16 crc=1,x=0,y1=0,y2=0;
 7285 0036 0023     		movs	r3, #0	@ y1,
 7286 0038 6FF4FF70 		mvn	r0, #510	@,
 7287              	@ main.c:4017: 	p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='i';
 7288 003c 0122     		movs	r2, #1	@ tmp380,
 7289 003e 6921     		movs	r1, #105	@ tmp383,
 7290              	@ main.c:3999: 	u16 crc=1,x=0,y1=0,y2=0;
 7291 0040 0493     		str	r3, [sp, #16]	@ y1, %sfp
 7292              	@ main.c:4017: 	p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='i';
 7293 0042 A24B     		ldr	r3, .L661+12	@ tmp708,
 7294 0044 DFF8D492 		ldr	r9, .L661+92	@ _443,
 7295 0048 1B68     		ldr	r3, [r3]	@ p_Fifo1.230_4, p_Fifo1
 7296 004a 4844     		add	r0, r9, r0	@ ivtmp.677, _443,
ARM GAS  /tmp/ccjvICQi.s 			page 129


 7297 004c 9A80     		strh	r2, [r3, #4]	@ movhi	@ tmp380, p_Fifo1.230_4->rct
 7298 004e 0590     		str	r0, [sp, #20]	@ ivtmp.677, %sfp
 7299 0050 5A80     		strh	r2, [r3, #2]	@ movhi	@ tmp380, p_Fifo1.230_4->rwi
 7300 0052 9971     		strb	r1, [r3, #6]	@ tmp383, p_Fifo1.230_4->rbuf
 7301              	.L550:
 7302              	@ main.c:4020: 		Menu1();
 7303 0054 FFF7FEFF 		bl	Menu1	@
 7304              	@ main.c:4021: 		while(!p_Fifo1->rct);
 7305 0058 9C4B     		ldr	r3, .L661+12	@ tmp711,
 7306 005a 1A68     		ldr	r2, [r3]	@ p_Fifo1.233_7, p_Fifo1
 7307              	.L551:
 7308              	@ main.c:4021: 		while(!p_Fifo1->rct);
 7309 005c 9388     		ldrh	r3, [r2, #4]	@, p_Fifo1.233_7->rct
 7310 005e 9BB2     		uxth	r3, r3	@ _8, p_Fifo1.233_7->rct
 7311 0060 002B     		cmp	r3, #0	@ _8
 7312 0062 FBD0     		beq	.L551	@
 7313              	@ main.c:4024: 		UART_getChar((char*)&switcH);
 7314 0064 0DF11D00 		add	r0, sp, #29	@ tmp712,,
 7315 0068 FFF7FEFF 		bl	UART_getChar	@
 7316              	@ main.c:4026: 		UaPutK("\r\n ");
 7317 006c 9848     		ldr	r0, .L661+16	@,
 7318 006e FFF7FEFF 		bl	UaPutK	@
 7319              	@ main.c:4027: 		switch (switcH)	{
 7320 0072 9DF81D30 		ldrb	r3, [sp, #29]	@ zero_extendqisi2	@ switcH, switcH
 7321 0076 523B     		subs	r3, r3, #82	@ tmp391, switcH,
 7322 0078 262B     		cmp	r3, #38	@ tmp391,
 7323 007a 00F27B82 		bhi	.L552	@
 7324 007e DFE813F0 		tbh	[pc, r3, lsl #1]	@ tmp391
 7325              	.L554:
 7326 0082 4202     		.2byte	(.L553-.L554)/2
 7327 0084 7902     		.2byte	(.L552-.L554)/2
 7328 0086 7902     		.2byte	(.L552-.L554)/2
 7329 0088 7902     		.2byte	(.L552-.L554)/2
 7330 008a 7902     		.2byte	(.L552-.L554)/2
 7331 008c 7902     		.2byte	(.L552-.L554)/2
 7332 008e 7902     		.2byte	(.L552-.L554)/2
 7333 0090 7902     		.2byte	(.L552-.L554)/2
 7334 0092 7902     		.2byte	(.L552-.L554)/2
 7335 0094 7902     		.2byte	(.L552-.L554)/2
 7336 0096 7902     		.2byte	(.L552-.L554)/2
 7337 0098 7902     		.2byte	(.L552-.L554)/2
 7338 009a 7902     		.2byte	(.L552-.L554)/2
 7339 009c 7902     		.2byte	(.L552-.L554)/2
 7340 009e 7902     		.2byte	(.L552-.L554)/2
 7341 00a0 7902     		.2byte	(.L552-.L554)/2
 7342 00a2 7902     		.2byte	(.L552-.L554)/2
 7343 00a4 CB01     		.2byte	(.L555-.L554)/2
 7344 00a6 7902     		.2byte	(.L552-.L554)/2
 7345 00a8 7902     		.2byte	(.L552-.L554)/2
 7346 00aa 7901     		.2byte	(.L556-.L554)/2
 7347 00ac 7902     		.2byte	(.L552-.L554)/2
 7348 00ae 7902     		.2byte	(.L552-.L554)/2
 7349 00b0 5101     		.2byte	(.L557-.L554)/2
 7350 00b2 7902     		.2byte	(.L552-.L554)/2
 7351 00b4 7902     		.2byte	(.L552-.L554)/2
 7352 00b6 7902     		.2byte	(.L552-.L554)/2
 7353 00b8 4B02     		.2byte	(.L558-.L554)/2
ARM GAS  /tmp/ccjvICQi.s 			page 130


 7354 00ba 7902     		.2byte	(.L552-.L554)/2
 7355 00bc 7902     		.2byte	(.L552-.L554)/2
 7356 00be 7902     		.2byte	(.L552-.L554)/2
 7357 00c0 D800     		.2byte	(.L559-.L554)/2
 7358 00c2 7000     		.2byte	(.L560-.L554)/2
 7359 00c4 6400     		.2byte	(.L561-.L554)/2
 7360 00c6 9100     		.2byte	(.L562-.L554)/2
 7361 00c8 2B00     		.2byte	(.L563-.L554)/2
 7362 00ca 7902     		.2byte	(.L552-.L554)/2
 7363 00cc 7902     		.2byte	(.L552-.L554)/2
 7364 00ce 2700     		.2byte	(.L564-.L554)/2
 7365              		.p2align 1
 7366              	.L564:
 7367              	@ main.c:4338: 			UaPutK("Testing ...");
 7368 00d0 8048     		ldr	r0, .L661+20	@,
 7369 00d2 FFF7FEFF 		bl	UaPutK	@
 7370              	@ main.c:4340: 			break;
 7371 00d6 BDE7     		b	.L550	@
 7372              	.L563:
 7373              	@ main.c:4236: 			UaPutK("View last sector");
 7374 00d8 7F48     		ldr	r0, .L661+24	@,
 7375 00da FFF7FEFF 		bl	UaPutK	@
 7376              	@ main.c:4237: 			UaPutK("\r\n First Sector = 0x");
 7377 00de 7F48     		ldr	r0, .L661+28	@,
 7378 00e0 FFF7FEFF 		bl	UaPutK	@
 7379              	@ main.c:4238: 			strBlock=UART_getHex();
 7380 00e4 FFF7FEFF 		bl	UART_getHex	@
 7381 00e8 0546     		mov	r5, r0	@ strBlock,
 7382              	@ main.c:4239: 			UaPutK("\r\n Searching ");
 7383 00ea 7D48     		ldr	r0, .L661+32	@,
 7384 00ec FFF7FEFF 		bl	UaPutK	@
 7385              	@ main.c:4248: 				if( mci_read_sect (strBlock++,buffer,1) ) {
 7386 00f0 7C4E     		ldr	r6, .L661+36	@ tmp637,
 7387 00f2 05E0     		b	.L593	@
 7388              	.L592:
 7389              	@ main.c:4258: 			while(crc != 0x822d );
 7390 00f4 48F22D23 		movw	r3, #33325	@ tmp561,
 7391 00f8 BDF81E20 		ldrh	r2, [sp, #30]	@ crc, crc
 7392 00fc 9A42     		cmp	r2, r3	@ crc, tmp561
 7393 00fe 16D0     		beq	.L591	@,
 7394              	.L593:
 7395              	@ main.c:4248: 				if( mci_read_sect (strBlock++,buffer,1) ) {
 7396 0100 0122     		movs	r2, #1	@,
 7397 0102 3146     		mov	r1, r6	@, tmp637
 7398 0104 2846     		mov	r0, r5	@, strBlock
 7399 0106 AC18     		adds	r4, r5, r2	@ strBlock, strBlock,
 7400 0108 FFF7FEFF 		bl	mmc_read_sect	@
 7401              	@ main.c:4255: 					if(!(strBlock%1024)) UaPutC('.');
 7402 010c C4F30903 		ubfx	r3, r4, #0, #10	@ tmp558, strBlock,,
 7403              	@ main.c:4248: 				if( mci_read_sect (strBlock++,buffer,1) ) {
 7404 0110 0028     		cmp	r0, #0	@
 7405 0112 40F06182 		bne	.L654	@
 7406 0116 2546     		mov	r5, r4	@ strBlock, strBlock
 7407              	@ main.c:4255: 					if(!(strBlock%1024)) UaPutC('.');
 7408 0118 002B     		cmp	r3, #0	@ tmp558
 7409 011a EBD1     		bne	.L592	@
 7410              	@ main.c:4255: 					if(!(strBlock%1024)) UaPutC('.');
ARM GAS  /tmp/ccjvICQi.s 			page 131


 7411 011c 2E20     		movs	r0, #46	@,
 7412 011e FFF7FEFF 		bl	UaPutC	@
 7413              	@ main.c:4258: 			while(crc != 0x822d );
 7414 0122 48F22D23 		movw	r3, #33325	@ tmp561,
 7415 0126 BDF81E20 		ldrh	r2, [sp, #30]	@ crc, crc
 7416 012a 9A42     		cmp	r2, r3	@ crc, tmp561
 7417 012c E8D1     		bne	.L593	@,
 7418              	.L591:
 7419              	@ main.c:4288: 			UaPutK("\r\n Find Sector = 0x");	hex2uart(strBlock, 8);
 7420 012e 6E48     		ldr	r0, .L661+40	@,
 7421 0130 FFF7FEFF 		bl	UaPutK	@
 7422 0134 2046     		mov	r0, r4	@, strBlock
 7423 0136 0821     		movs	r1, #8	@,
 7424 0138 FFF7FEFF 		bl	hex2uart	@
 7425              	@ main.c:4289: 			UaPutK("\r\n     lenBlock= ");		sint2uart(lenBlock);
 7426 013c 6B48     		ldr	r0, .L661+44	@,
 7427 013e FFF7FEFF 		bl	UaPutK	@
 7428 0142 0120     		movs	r0, #1	@,
 7429 0144 FFF7FEFF 		bl	sint2uart	@
 7430              	@ main.c:4290: 			break;
 7431 0148 84E7     		b	.L550	@
 7432              	.L561:
 7433              	@ main.c:4049: 			UaPutK("Statistic Card  ");
 7434 014a 6948     		ldr	r0, .L661+48	@,
 7435 014c FFF7FEFF 		bl	UaPutK	@
 7436              	@ main.c:4050: 			if(dinit){
 7437 0150 5B4B     		ldr	r3, .L661	@ tmp715,
 7438 0152 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2	@ dinit, dinit
 7439 0154 002B     		cmp	r3, #0	@ dinit
 7440 0156 40F0EC80 		bne	.L653	@
 7441              	@ main.c:4061: 			}else UaPutK("\r\nSD Card Not Init");
 7442 015a 6648     		ldr	r0, .L661+52	@,
 7443 015c FFF7FEFF 		bl	UaPutK	@
 7444 0160 78E7     		b	.L550	@
 7445              	.L560:
 7446              	@ main.c:4148: 			UaPutK("Read sector");
 7447 0162 6548     		ldr	r0, .L661+56	@,
 7448 0164 FFF7FEFF 		bl	UaPutK	@
 7449              	@ main.c:4149: 			UaPutK("\r\n sectorNumber = 0x");
 7450 0168 6448     		ldr	r0, .L661+60	@,
 7451 016a FFF7FEFF 		bl	UaPutK	@
 7452              	@ main.c:4151: 			strBlock=UART_getHex();
 7453 016e FFF7FEFF 		bl	UART_getHex	@
 7454              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7455 0172 634C     		ldr	r4, .L661+64	@ tmp475,
 7456 0174 634D     		ldr	r5, .L661+68	@ tmp727,
 7457 0176 A368     		ldr	r3, [r4, #8]	@ _373, MEM[(struct SysTick_Type *)3758153744B].VAL
 7458              	@ main.c:4154: 			d=mci_read_sect (strBlock,buffer,1);
 7459 0178 0122     		movs	r2, #1	@,
 7460 017a 5A49     		ldr	r1, .L661+36	@,
 7461              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7462 017c 2B60     		str	r3, [r5]	@ _373, Timt
 7463              	@ main.c:4151: 			strBlock=UART_getHex();
 7464 017e 0746     		mov	r7, r0	@ strBlock,
 7465              	@ main.c:4154: 			d=mci_read_sect (strBlock,buffer,1);
 7466 0180 FFF7FEFF 		bl	mmc_read_sect	@
 7467              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
ARM GAS  /tmp/ccjvICQi.s 			page 132


 7468 0184 2A68     		ldr	r2, [r5]	@ Timt.100_370, Timt
 7469 0186 A368     		ldr	r3, [r4, #8]	@ _371, MEM[(struct SysTick_Type *)3758153744B].VAL
 7470              	@ main.c:4156: 			if(d){
 7471 0188 0446     		mov	r4, r0	@ tmp478,
 7472              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7473 018a D31A     		subs	r3, r2, r3	@ _372, Timt.100_370, _371
 7474 018c 0293     		str	r3, [sp, #8]	@ _372, %sfp
 7475 018e 0893     		str	r3, [sp, #32]	@ _372, MEM[(volatile u32 *)&tim]
 7476              	@ main.c:4156: 			if(d){
 7477 0190 0028     		cmp	r0, #0	@ tmp478
 7478 0192 40F07382 		bne	.L655	@
 7479              	@ main.c:4183: 				UaPutK("\r\n Read Error = ");
 7480 0196 5C48     		ldr	r0, .L661+72	@,
 7481 0198 FFF7FEFF 		bl	UaPutK	@
 7482              	@ main.c:4184: 				uint2uart(d);
 7483 019c 2046     		mov	r0, r4	@, tmp478
 7484 019e FFF7FEFF 		bl	uint2uart	@
 7485 01a2 57E7     		b	.L550	@
 7486              	.L562:
 7487              	@ main.c:4293: 			UaPutK("Read sector");
 7488 01a4 5448     		ldr	r0, .L661+56	@,
 7489 01a6 FFF7FEFF 		bl	UaPutK	@
 7490              	@ main.c:4294: 			UaPutK("\r\n sectorNumber = 0x");
 7491 01aa 5448     		ldr	r0, .L661+60	@,
 7492 01ac FFF7FEFF 		bl	UaPutK	@
 7493              	@ main.c:4296: 			strBlock=UART_getHex();
 7494 01b0 FFF7FEFF 		bl	UART_getHex	@
 7495 01b4 0446     		mov	r4, r0	@ strBlock,
 7496              	@ main.c:4297: 			UaPutK("\r\n sectorNumber = 0x");		hex2uart(strBlock, 8);
 7497 01b6 5148     		ldr	r0, .L661+60	@,
 7498 01b8 FFF7FEFF 		bl	UaPutK	@
 7499 01bc 2046     		mov	r0, r4	@, strBlock
 7500 01be 0821     		movs	r1, #8	@,
 7501 01c0 FFF7FEFF 		bl	hex2uart	@
 7502              	@ main.c:4298: 			while(strBlock <  31116288 ){
 7503 01c4 514B     		ldr	r3, .L661+76	@ tmp748,
 7504 01c6 9C42     		cmp	r4, r3	@ strBlock, tmp748
 7505 01c8 26D8     		bhi	.L595	@,
 7506              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7507 01ca 4D4E     		ldr	r6, .L661+64	@ tmp570,
 7508              	@ main.c:4301: 				if( mci_read_sect (strBlock,buffer,1*16)) {
 7509 01cc 454D     		ldr	r5, .L661+36	@ tmp634,
 7510              	.L594:
 7511              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7512 01ce B368     		ldr	r3, [r6, #8]	@ _382, MEM[(struct SysTick_Type *)3758153744B].VAL
 7513 01d0 4C4F     		ldr	r7, .L661+68	@ tmp749,
 7514              	@ main.c:4301: 				if( mci_read_sect (strBlock,buffer,1*16)) {
 7515 01d2 1022     		movs	r2, #16	@,
 7516 01d4 2946     		mov	r1, r5	@, tmp634
 7517 01d6 2046     		mov	r0, r4	@, strBlock
 7518              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7519 01d8 3B60     		str	r3, [r7]	@ _382, Timt
 7520              	@ main.c:4301: 				if( mci_read_sect (strBlock,buffer,1*16)) {
 7521 01da FFF7FEFF 		bl	mmc_read_sect	@
 7522 01de 0028     		cmp	r0, #0	@
 7523 01e0 00F0CC81 		beq	.L596	@
 7524              	@ main.c:4302: 					crc16_spi2((u16*)buffer,256*16, &crc );
ARM GAS  /tmp/ccjvICQi.s 			page 133


 7525 01e4 0DF11E02 		add	r2, sp, #30	@ tmp750,,
 7526 01e8 4FF48051 		mov	r1, #4096	@,
 7527 01ec 2846     		mov	r0, r5	@, tmp634
 7528 01ee FFF7FEFF 		bl	crc16_spi2	@
 7529              	@ main.c:4303: 					if( crc ) {
 7530 01f2 BDF81E30 		ldrh	r3, [sp, #30]	@ crc, crc
 7531 01f6 002B     		cmp	r3, #0	@ crc
 7532 01f8 40F0E181 		bne	.L656	@
 7533              	.L597:
 7534              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7535 01fc 414B     		ldr	r3, .L661+68	@ tmp751,
 7536              	@ main.c:4309: 				if(p_Fifo1->rct) break;
 7537 01fe 334A     		ldr	r2, .L661+12	@ tmp752,
 7538              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7539 0200 1B68     		ldr	r3, [r3]	@ Timt.100_383, Timt
 7540 0202 B168     		ldr	r1, [r6, #8]	@ _384, MEM[(struct SysTick_Type *)3758153744B].VAL
 7541              	@ main.c:4309: 				if(p_Fifo1->rct) break;
 7542 0204 1268     		ldr	r2, [r2]	@ p_Fifo1.259_87, p_Fifo1
 7543              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7544 0206 5B1A     		subs	r3, r3, r1	@ _385, Timt.100_383, _384
 7545 0208 0893     		str	r3, [sp, #32]	@ _385, MEM[(volatile u32 *)&tim]
 7546              	@ main.c:4309: 				if(p_Fifo1->rct) break;
 7547 020a 9388     		ldrh	r3, [r2, #4]	@, p_Fifo1.259_87->rct
 7548              	@ main.c:4306: 					strBlock+=1*16;
 7549 020c 1034     		adds	r4, r4, #16	@ strBlock, strBlock,
 7550              	@ main.c:4309: 				if(p_Fifo1->rct) break;
 7551 020e 9BB2     		uxth	r3, r3	@ _88, p_Fifo1.259_87->rct
 7552 0210 13B9     		cbnz	r3, .L595	@ _88,
 7553              	@ main.c:4298: 			while(strBlock <  31116288 ){
 7554 0212 3E4B     		ldr	r3, .L661+76	@ tmp754,
 7555 0214 9C42     		cmp	r4, r3	@ strBlock, tmp754
 7556 0216 DAD9     		bls	.L594	@,
 7557              	.L595:
 7558              	@ main.c:4312: 			UaPutK("\r\n Block = ");	hex2uart(strBlock,8); hex2uart(crc,4);
 7559 0218 3D48     		ldr	r0, .L661+80	@,
 7560 021a FFF7FEFF 		bl	UaPutK	@
 7561 021e 2046     		mov	r0, r4	@, strBlock
 7562 0220 0821     		movs	r1, #8	@,
 7563 0222 FFF7FEFF 		bl	hex2uart	@
 7564 0226 0421     		movs	r1, #4	@,
 7565 0228 BDF81E00 		ldrh	r0, [sp, #30]	@, crc
 7566 022c FFF7FEFF 		bl	hex2uart	@
 7567              	@ main.c:4313: 			break;
 7568 0230 10E7     		b	.L550	@
 7569              	.L559:
 7570              	@ main.c:4319: 				UaPutK("\r\n SD_Status \r\n ");
 7571 0232 3848     		ldr	r0, .L661+84	@,
 7572 0234 FFF7FEFF 		bl	UaPutK	@
 7573              	@ main.c:4320: 				hex2uart(0,4);
 7574 0238 0421     		movs	r1, #4	@,
 7575 023a 0020     		movs	r0, #0	@,
 7576 023c FFF7FEFF 		bl	hex2uart	@
 7577 0240 0024     		movs	r4, #0	@ ivtmp.678,
 7578              	.L601:
 7579              	@ main.c:4321: 				for(u08 k=0;k<8;k++){ hex2uart(k, 2);	}
 7580 0242 2046     		mov	r0, r4	@, ivtmp.678
 7581 0244 0221     		movs	r1, #2	@,
ARM GAS  /tmp/ccjvICQi.s 			page 134


 7582 0246 0134     		adds	r4, r4, #1	@ ivtmp.678, ivtmp.678,
 7583 0248 FFF7FEFF 		bl	hex2uart	@
 7584 024c 082C     		cmp	r4, #8	@ ivtmp.678,
 7585 024e F8D1     		bne	.L601	@,
 7586              	@ main.c:4322: 				UaPutK("\r\n\n ");
 7587 0250 3148     		ldr	r0, .L661+88	@,
 7588 0252 FFF7FEFF 		bl	UaPutK	@
 7589 0256 4FF00008 		mov	r8, #0	@ ivtmp.675,
 7590 025a 224F     		ldr	r7, .L661+36	@ ivtmp.677,
 7591              	@ main.c:4328: 					UaPutS("  ");
 7592 025c DFF8C0B0 		ldr	fp, .L661+96	@ tmp625,
 7593              	@ main.c:4333: 					UaPutS("\r\n ");
 7594 0260 DFF86CA0 		ldr	r10, .L661+16	@ tmp626,
 7595 0264 07F10806 		add	r6, r7, #8	@ ivtmp.676, ivtmp.677,
 7596              	.L606:
 7597              	@ main.c:4324: 					unt2uart(i*8,4);	UaPutC(' ');
 7598 0268 0421     		movs	r1, #4	@,
 7599 026a 4046     		mov	r0, r8	@, ivtmp.675
 7600 026c FFF7FEFF 		bl	unt2uart	@
 7601 0270 2020     		movs	r0, #32	@,
 7602 0272 FFF7FEFF 		bl	UaPutC	@
 7603 0276 3C46     		mov	r4, r7	@ ivtmp.668, ivtmp.677
 7604              	.L602:
 7605              	@ main.c:4326: 						hex2uart(buffer[k+i], 2);
 7606 0278 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2	@, MEM[base: _425, offset: 0B]
 7607 027c 0221     		movs	r1, #2	@,
 7608 027e FFF7FEFF 		bl	hex2uart	@
 7609              	@ main.c:4325: 					for(u08 k=0;k<8;k++){
 7610 0282 A642     		cmp	r6, r4	@ ivtmp.676, ivtmp.668
 7611 0284 F8D1     		bne	.L602	@,
 7612              	@ main.c:4328: 					UaPutS("  ");
 7613 0286 5846     		mov	r0, fp	@, tmp625
 7614 0288 FFF7FEFF 		bl	UaPutS	@
 7615 028c 3D46     		mov	r5, r7	@ ivtmp.659, ivtmp.677
 7616              	.L605:
 7617              	@ main.c:4330: 						if ( buffer[k+i]<0x20 || buffer[k+i]>127 ) UaPutC('.');
 7618 028e 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2	@ _99, MEM[base: _423, offset: 0B]
 7619 0292 A0F12003 		sub	r3, r0, #32	@ tmp595, _99,
 7620 0296 5F2B     		cmp	r3, #95	@ tmp595,
 7621 0298 88BF     		it	hi
 7622 029a 2E20     		movhi	r0, #46	@,
 7623              	@ main.c:4331: 						else UaPutC(buffer[k+i]);
 7624 029c FFF7FEFF 		bl	UaPutC	@
 7625              	@ main.c:4329: 					for(u08 k=0;k<8;k++){
 7626 02a0 A542     		cmp	r5, r4	@ ivtmp.659, ivtmp.668
 7627 02a2 F4D1     		bne	.L605	@,
 7628 02a4 08F14008 		add	r8, r8, #64	@ ivtmp.675, ivtmp.675,
 7629              	@ main.c:4333: 					UaPutS("\r\n ");
 7630 02a8 5046     		mov	r0, r10	@, tmp626
 7631 02aa FFF7FEFF 		bl	UaPutS	@
 7632              	@ main.c:4323: 				for(u32 i=0;i<64;i+=8){
 7633 02ae B8F5007F 		cmp	r8, #512	@ ivtmp.675,
 7634 02b2 06F10806 		add	r6, r6, #8	@ ivtmp.676, ivtmp.676,
 7635 02b6 07F10807 		add	r7, r7, #8	@ ivtmp.677, ivtmp.677,
 7636 02ba D5D1     		bne	.L606	@,
 7637 02bc CAE6     		b	.L550	@
 7638              	.L662:
ARM GAS  /tmp/ccjvICQi.s 			page 135


 7639 02be 00BF     		.align	2
 7640              	.L661:
 7641 02c0 00000000 		.word	.LANCHOR30
 7642 02c4 00000000 		.word	CardType
 7643 02c8 00000000 		.word	.LC114
 7644 02cc 00000000 		.word	p_Fifo1
 7645 02d0 30000000 		.word	.LC82
 7646 02d4 14030000 		.word	.LC158
 7647 02d8 68020000 		.word	.LC149
 7648 02dc 7C020000 		.word	.LC150
 7649 02e0 94020000 		.word	.LC151
 7650 02e4 00000000 		.word	buffer.8846
 7651 02e8 BC020000 		.word	.LC153
 7652 02ec D0020000 		.word	.LC154
 7653 02f0 8C000000 		.word	.LC120
 7654 02f4 A0000000 		.word	.LC121
 7655 02f8 DC000000 		.word	.LC94
 7656 02fc DC010000 		.word	.LC140
 7657 0300 10E000E0 		.word	-536813552
 7658 0304 00000000 		.word	Timt
 7659 0308 00020000 		.word	.LC142
 7660 030c FFCBDA01 		.word	31116287
 7661 0310 E4020000 		.word	.LC155
 7662 0314 00030000 		.word	.LC157
 7663 0318 34000000 		.word	.LC83
 7664 031c FF010000 		.word	buffer.8846+511
 7665 0320 3C000000 		.word	.LC84
 7666              	.L557:
 7667              	@ main.c:4031: 			dinit=mci_init();
 7668 0324 FFF7FEFF 		bl	mmc_init	@
 7669 0328 AF4B     		ldr	r3, .L663	@ tmp713,
 7670 032a 1870     		strb	r0, [r3]	@ tmp392, dinit
 7671              	@ main.c:4032: 			if(dinit){
 7672 032c 0028     		cmp	r0, #0	@ tmp392
 7673 032e 00F0EF80 		beq	.L583	@
 7674              	.L653:
 7675              	@ main.c:4055: 				if(	mci_read_config (&mmcfg)){
 7676 0332 09A8     		add	r0, sp, #36	@ tmp716,,
 7677 0334 FFF7FEFF 		bl	mmc_read_config	@
 7678 0338 0028     		cmp	r0, #0	@
 7679 033a 3FF48BAE 		beq	.L550	@
 7680              	@ main.c:4056: 					UaPutK("\r\nSD Card ser_num    = "); uint2uart(mmcfg.sernum);
 7681 033e AB48     		ldr	r0, .L663+4	@,
 7682 0340 FFF7FEFF 		bl	UaPutK	@
 7683 0344 0998     		ldr	r0, [sp, #36]	@, mmcfg.sernum
 7684 0346 FFF7FEFF 		bl	uint2uart	@
 7685              	@ main.c:4057: 					UaPutK("\r\nSD Card block_num  = "); uint2uart(mmcfg.blocknr);
 7686 034a A948     		ldr	r0, .L663+8	@,
 7687 034c FFF7FEFF 		bl	UaPutK	@
 7688 0350 0A98     		ldr	r0, [sp, #40]	@, mmcfg.blocknr
 7689 0352 FFF7FEFF 		bl	uint2uart	@
 7690              	@ main.c:4058: 					UaPutK("\r\nSD Card read_blen  = "); uint2uart(mmcfg.read_blen);
 7691 0356 A748     		ldr	r0, .L663+12	@,
 7692 0358 FFF7FEFF 		bl	UaPutK	@
 7693 035c BDF82C00 		ldrh	r0, [sp, #44]	@, mmcfg.read_blen
 7694 0360 FFF7FEFF 		bl	uint2uart	@
 7695              	@ main.c:4059: 					UaPutK("\r\nSD Card write_blen = "); uint2uart(mmcfg.write_blen);
ARM GAS  /tmp/ccjvICQi.s 			page 136


 7696 0364 A448     		ldr	r0, .L663+16	@,
 7697 0366 FFF7FEFF 		bl	UaPutK	@
 7698 036a BDF82E00 		ldrh	r0, [sp, #46]	@, mmcfg.write_blen
 7699 036e FFF7FEFF 		bl	uint2uart	@
 7700 0372 6FE6     		b	.L550	@
 7701              	.L556:
 7702              	@ main.c:4065: 			UaPutK("Fill sector");
 7703 0374 A148     		ldr	r0, .L663+20	@,
 7704 0376 FFF7FEFF 		bl	UaPutK	@
 7705              	@ main.c:4066: 			UaPutK("\r\n Start Block  = 0x");		strBlock=UART_getHex();
 7706 037a A148     		ldr	r0, .L663+24	@,
 7707 037c FFF7FEFF 		bl	UaPutK	@
 7708 0380 FFF7FEFF 		bl	UART_getHex	@
 7709 0384 0446     		mov	r4, r0	@ strBlock,
 7710              	@ main.c:4068: 			UaPutK("\r\n End   Blocks = 0x");		dstBlock=UART_getHex();
 7711 0386 9F48     		ldr	r0, .L663+28	@,
 7712 0388 FFF7FEFF 		bl	UaPutK	@
 7713 038c FFF7FEFF 		bl	UART_getHex	@
 7714              	@ main.c:4069: 			dstBlock = dstBlock > strBlock ? dstBlock - strBlock + 1 : 1;
 7715 0390 8442     		cmp	r4, r0	@ strBlock, dstBlock
 7716 0392 80F02581 		bcs	.L607	@,
 7717              	@ main.c:4069: 			dstBlock = dstBlock > strBlock ? dstBlock - strBlock + 1 : 1;
 7718 0396 0130     		adds	r0, r0, #1	@ tmp423, dstBlock,
 7719 0398 051B     		subs	r5, r0, r4	@ iftmp.237_131, tmp423, strBlock
 7720 039a 05F1FF3B 		add	fp, r5, #-1	@ prephitmp_139, iftmp.237_131,
 7721              	.L568:
 7722              	@ main.c:4071: 			UaPutK("\r\n Num Blocks   = ");				uint2uart(dstBlock);
 7723 039e 9A48     		ldr	r0, .L663+32	@,
 7724 03a0 FFF7FEFF 		bl	UaPutK	@
 7725 03a4 2846     		mov	r0, r5	@, iftmp.237_131
 7726 03a6 FFF7FEFF 		bl	uint2uart	@
 7727              	@ main.c:4072: 			UaPutK("\r\n Data to fill = 0x");
 7728 03aa 9848     		ldr	r0, .L663+36	@,
 7729 03ac FFF7FEFF 		bl	UaPutK	@
 7730              	@ main.c:4073: 			znak=UART_getHex();
 7731 03b0 FFF7FEFF 		bl	UART_getHex	@
 7732 03b4 964B     		ldr	r3, .L663+40	@ ivtmp.649,
 7733 03b6 C0B2     		uxtb	r0, r0	@ znak,
 7734              	.L569:
 7735              	@ main.c:4075: 				buffer[i] = znak;
 7736 03b8 03F8010F 		strb	r0, [r3, #1]!	@ znak, MEM[base: _101, offset: 0B]
 7737              	@ main.c:4074: 			for(u32 i=0;i<512;i++){
 7738 03bc 4B45     		cmp	r3, r9	@ ivtmp.649, _443
 7739 03be FBD1     		bne	.L569	@,
 7740              	@ main.c:4077: 			while(dstBlock--){
 7741 03c0 002D     		cmp	r5, #0	@ iftmp.237_131
 7742 03c2 3FF447AE 		beq	.L550	@
 7743 03c6 651C     		adds	r5, r4, #1	@ strBlock, strBlock,
 7744              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7745 03c8 924F     		ldr	r7, .L663+44	@ tmp429,
 7746              	@ main.c:4080: 				d = mci_write_sect(strBlock, buffer, 1);
 7747 03ca DFF88482 		ldr	r8, .L663+104	@ tmp620,
 7748              	@ main.c:4088: 						UaPutS("\r\n Fill OK ");
 7749 03ce DFF8A8A2 		ldr	r10, .L663+144	@ tmp621,
 7750 03d2 AB44     		add	fp, fp, r5	@ _134, strBlock
 7751 03d4 07E0     		b	.L572	@
 7752              	.L570:
ARM GAS  /tmp/ccjvICQi.s 			page 137


 7753              	@ main.c:4086: 					if(!(strBlock%1024)){
 7754 03d6 002A     		cmp	r2, #0	@ tmp434
 7755 03d8 00F0DB80 		beq	.L657	@
 7756              	.L571:
 7757              	@ main.c:4077: 			while(dstBlock--){
 7758 03dc AB45     		cmp	fp, r5	@ _134, strBlock
 7759              	@ main.c:4094: 				strBlock++;
 7760 03de 2C46     		mov	r4, r5	@ strBlock, strBlock
 7761              	@ main.c:4077: 			while(dstBlock--){
 7762 03e0 3FF438AE 		beq	.L550	@,
 7763 03e4 0135     		adds	r5, r5, #1	@ strBlock, strBlock,
 7764              	.L572:
 7765              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7766 03e6 BB68     		ldr	r3, [r7, #8]	@ _366, MEM[(struct SysTick_Type *)3758153744B].VAL
 7767 03e8 8B4E     		ldr	r6, .L663+48	@ tmp717,
 7768              	@ main.c:4080: 				d = mci_write_sect(strBlock, buffer, 1);
 7769 03ea 0122     		movs	r2, #1	@,
 7770 03ec 4146     		mov	r1, r8	@, tmp620
 7771 03ee 2046     		mov	r0, r4	@, strBlock
 7772              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7773 03f0 3360     		str	r3, [r6]	@ _366, Timt
 7774              	@ main.c:4080: 				d = mci_write_sect(strBlock, buffer, 1);
 7775 03f2 FFF7FEFF 		bl	mmc_write_sect	@
 7776              	@ main.c:4086: 					if(!(strBlock%1024)){
 7777 03f6 C4F30902 		ubfx	r2, r4, #0, #10	@ tmp434, strBlock,,
 7778              	@ main.c:4081: 				if(d==0) {
 7779 03fa 0646     		mov	r6, r0	@ tmp432,
 7780 03fc 0028     		cmp	r0, #0	@ tmp432
 7781 03fe EAD1     		bne	.L570	@
 7782              	@ main.c:4082: 					UaPutS("\r\n Fill error = 0x");
 7783 0400 8648     		ldr	r0, .L663+52	@,
 7784 0402 FFF7FEFF 		bl	UaPutS	@
 7785              	@ main.c:4083: 					hex2uart(strBlock,8); hex2uart(d,2);
 7786 0406 2046     		mov	r0, r4	@, strBlock
 7787 0408 0821     		movs	r1, #8	@,
 7788 040a FFF7FEFF 		bl	hex2uart	@
 7789 040e 3046     		mov	r0, r6	@, tmp432
 7790 0410 0221     		movs	r1, #2	@,
 7791 0412 FFF7FEFF 		bl	hex2uart	@
 7792 0416 E1E7     		b	.L571	@
 7793              	.L555:
 7794              	@ main.c:4117: 			UaPutK("Copy memory");
 7795 0418 8148     		ldr	r0, .L663+56	@,
 7796 041a FFF7FEFF 		bl	UaPutK	@
 7797              	@ main.c:4118: 			UaPutK("\r\n Src Mem adr = 0x");	strBlock=UART_getHex();
 7798 041e 8148     		ldr	r0, .L663+60	@,
 7799 0420 FFF7FEFF 		bl	UaPutK	@
 7800 0424 FFF7FEFF 		bl	UART_getHex	@
 7801 0428 0446     		mov	r4, r0	@ strBlock,
 7802              	@ main.c:4119: 			UaPutK("\r\n How many byte = ");	lenBlock=UART_getNum();
 7803 042a 7F48     		ldr	r0, .L663+64	@,
 7804 042c FFF7FEFF 		bl	UaPutK	@
 7805 0430 FFF7FEFF 		bl	UART_getNum	@
 7806 0434 8246     		mov	r10, r0	@ _38,
 7807              	@ main.c:4120: 			UaPutK("\r\n Dst mem adr = 0x");	dstBlock=UART_getHex();
 7808 0436 7D48     		ldr	r0, .L663+68	@,
 7809 0438 FFF7FEFF 		bl	UaPutK	@
ARM GAS  /tmp/ccjvICQi.s 			page 138


 7810 043c FFF7FEFF 		bl	UART_getHex	@
 7811              	@ main.c:4123: 			for(u32 bl=(dstBlock/512);bl <= ((dstBlock+lenBlock-1)/512); bl++){
 7812 0440 8244     		add	r10, r10, r0	@ _130, dstBlock
 7813 0442 0AF1FF37 		add	r7, r10, #-1	@ tmp460, _130,
 7814 0446 7F0A     		lsrs	r7, r7, #9	@ _129, tmp460,
 7815 0448 4FEA502B 		lsr	fp, r0, #9	@ bl, dstBlock,
 7816 044c 5F45     		cmp	r7, fp	@ _129, bl
 7817              	@ main.c:4122: 			u32 dbl = dstBlock%512, sBlk=strBlock/512, sMem=strBlock%512;
 7818 044e 4FEA5426 		lsr	r6, r4, #9	@ sBlk, strBlock,
 7819 0452 C0F30805 		ubfx	r5, r0, #0, #9	@ dbl, dstBlock,,
 7820 0456 C4F30804 		ubfx	r4, r4, #0, #9	@ sMem, strBlock,,
 7821              	@ main.c:4123: 			for(u32 bl=(dstBlock/512);bl <= ((dstBlock+lenBlock-1)/512); bl++){
 7822 045a FFF4FBAD 		bcc	.L550	@,
 7823              	@ main.c:4133: 					if (bl == ((dstBlock+lenBlock)/512))	hex2uart((dstBlock+lenBlock)%512, 3);		//L
 7824 045e 4FEA5A23 		lsr	r3, r10, #9	@ _43, _130,
 7825 0462 0293     		str	r3, [sp, #8]	@ _43, %sfp
 7826 0464 5346     		mov	r3, r10	@ _130, _130
 7827              	@ main.c:4124: 				if (mci_read_sect(bl,buffer,1)){
 7828 0466 DFF8E881 		ldr	r8, .L663+104	@ tmp617,
 7829              	@ main.c:4133: 					if (bl == ((dstBlock+lenBlock)/512))	hex2uart((dstBlock+lenBlock)%512, 3);		//L
 7830 046a DA46     		mov	r10, fp	@ bl, bl
 7831 046c 9B46     		mov	fp, r3	@ _130, _130
 7832 046e 04E0     		b	.L575	@
 7833              	.L573:
 7834              	@ main.c:4123: 			for(u32 bl=(dstBlock/512);bl <= ((dstBlock+lenBlock-1)/512); bl++){
 7835 0470 0AF1010A 		add	r10, r10, #1	@ bl, bl,
 7836 0474 5745     		cmp	r7, r10	@ _129, bl
 7837 0476 FFF4EDAD 		bcc	.L550	@,
 7838              	.L575:
 7839              	@ main.c:4124: 				if (mci_read_sect(bl,buffer,1)){
 7840 047a 0122     		movs	r2, #1	@,
 7841 047c 4146     		mov	r1, r8	@, tmp617
 7842 047e 5046     		mov	r0, r10	@, bl
 7843 0480 FFF7FEFF 		bl	mmc_read_sect	@
 7844 0484 0028     		cmp	r0, #0	@
 7845 0486 F3D0     		beq	.L573	@
 7846              	@ main.c:4125: 					UaPutK("\r\n ReadB 0x");							hex2uart(sBlk++,3);
 7847 0488 6948     		ldr	r0, .L663+72	@,
 7848 048a FFF7FEFF 		bl	UaPutK	@
 7849 048e 0321     		movs	r1, #3	@,
 7850 0490 3046     		mov	r0, r6	@, sBlk
 7851 0492 FFF7FEFF 		bl	hex2uart	@
 7852 0496 0136     		adds	r6, r6, #1	@ sBlk, sBlk,
 7853              	@ main.c:4126: 					UaPutC(',');													hex2uart(sBlk, 	3);
 7854 0498 2C20     		movs	r0, #44	@,
 7855 049a FFF7FEFF 		bl	UaPutC	@
 7856 049e 0321     		movs	r1, #3	@,
 7857 04a0 3046     		mov	r0, r6	@, sBlk
 7858 04a2 FFF7FEFF 		bl	hex2uart	@
 7859              	@ main.c:4127: 					UaPutK("  From 0x");							    hex2uart(sMem, 	3);
 7860 04a6 6348     		ldr	r0, .L663+76	@,
 7861 04a8 FFF7FEFF 		bl	UaPutK	@
 7862 04ac 0321     		movs	r1, #3	@,
 7863 04ae 2046     		mov	r0, r4	@, sMem
 7864 04b0 FFF7FEFF 		bl	hex2uart	@
 7865 04b4 04F50074 		add	r4, r4, #512	@ _445, sMem,
 7866              	@ main.c:4129: 					UaPutK("->0x");											  hex2uart(sMem + (0x200-dbl), 3);
ARM GAS  /tmp/ccjvICQi.s 			page 139


 7867 04b8 5F48     		ldr	r0, .L663+80	@,
 7868 04ba FFF7FEFF 		bl	UaPutK	@
 7869              	@ main.c:4128: 					sMem = sMem + (0x200-dbl);
 7870 04be 641B     		subs	r4, r4, r5	@ sMem, _445, dbl
 7871              	@ main.c:4129: 					UaPutK("->0x");											  hex2uart(sMem + (0x200-dbl), 3);
 7872 04c0 C5F50070 		rsb	r0, r5, #512	@ tmp466, dbl,
 7873 04c4 0321     		movs	r1, #3	@,
 7874 04c6 2044     		add	r0, r0, r4	@, sMem
 7875 04c8 FFF7FEFF 		bl	hex2uart	@
 7876              	@ main.c:4130: 					UaPutK("  WriteB 0x");								hex2uart(bl, 		3);
 7877 04cc 5B48     		ldr	r0, .L663+84	@,
 7878 04ce FFF7FEFF 		bl	UaPutK	@
 7879 04d2 0321     		movs	r1, #3	@,
 7880 04d4 5046     		mov	r0, r10	@, bl
 7881 04d6 FFF7FEFF 		bl	hex2uart	@
 7882              	@ main.c:4131: 					UaPutK("  0x");					  						hex2uart(dbl, 	3);
 7883 04da 5948     		ldr	r0, .L663+88	@,
 7884 04dc FFF7FEFF 		bl	UaPutK	@
 7885 04e0 2846     		mov	r0, r5	@, dbl
 7886 04e2 0321     		movs	r1, #3	@,
 7887 04e4 FFF7FEFF 		bl	hex2uart	@
 7888              	@ main.c:4132: 					UaPutK("->0x");
 7889 04e8 5348     		ldr	r0, .L663+80	@,
 7890 04ea FFF7FEFF 		bl	UaPutK	@
 7891              	@ main.c:4133: 					if (bl == ((dstBlock+lenBlock)/512))	hex2uart((dstBlock+lenBlock)%512, 3);		//L
 7892 04ee 029B     		ldr	r3, [sp, #8]	@ _43, %sfp
 7893 04f0 0321     		movs	r1, #3	@,
 7894 04f2 5345     		cmp	r3, r10	@ _43, bl
 7895 04f4 0CBF     		ite	eq
 7896 04f6 CBF30800 		ubfxeq	r0, fp, #0, #9	@, _130,,
 7897              	@ main.c:4134: 					else																	hex2uart(0x200, 3);
 7898 04fa 4FF40070 		movne	r0, #512	@,
 7899 04fe FFF7FEFF 		bl	hex2uart	@
 7900              	@ main.c:4135: 					dbl = 0;
 7901 0502 0025     		movs	r5, #0	@ dbl,
 7902 0504 B4E7     		b	.L573	@
 7903              	.L553:
 7904              	@ main.c:4189: 			if(CardType){
 7905 0506 039B     		ldr	r3, [sp, #12]	@ tmp612, %sfp
 7906 0508 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2	@ CardType, CardType
 7907 050a 002B     		cmp	r3, #0	@ CardType
 7908 050c 40F02081 		bne	.L658	@
 7909              	.L583:
 7910              	@ main.c:4232: 			} else UaPutK("\r\nSD Card Init ERROR ");
 7911 0510 4C48     		ldr	r0, .L663+92	@,
 7912 0512 FFF7FEFF 		bl	UaPutK	@
 7913 0516 9DE5     		b	.L550	@
 7914              	.L558:
 7915              	@ main.c:4100: 			UaPutS("Modify memory");
 7916 0518 4B48     		ldr	r0, .L663+96	@,
 7917 051a FFF7FEFF 		bl	UaPutS	@
 7918              	@ main.c:4101: 			UaPutS("\r\n Memory Addr = 0x");
 7919 051e 4B48     		ldr	r0, .L663+100	@,
 7920 0520 FFF7FEFF 		bl	UaPutS	@
 7921              	@ main.c:4103: 			strBlock=UART_getHex();
 7922 0524 FFF7FEFF 		bl	UART_getHex	@
 7923              	@ main.c:4105: 			if (mci_read_sect	(strBlock/512, buffer, 1)){
ARM GAS  /tmp/ccjvICQi.s 			page 140


 7924 0528 450A     		lsrs	r5, r0, #9	@ _31, strBlock,
 7925              	@ main.c:4103: 			strBlock=UART_getHex();
 7926 052a 0446     		mov	r4, r0	@ strBlock,
 7927              	@ main.c:4105: 			if (mci_read_sect	(strBlock/512, buffer, 1)){
 7928 052c 0122     		movs	r2, #1	@,
 7929 052e 2846     		mov	r0, r5	@, _31
 7930 0530 4749     		ldr	r1, .L663+104	@,
 7931 0532 FFF7FEFF 		bl	mmc_read_sect	@
 7932 0536 0028     		cmp	r0, #0	@
 7933 0538 3FF48CAD 		beq	.L550	@
 7934              	@ main.c:4106: 				UaPutS("\r\n Memory Data = 0x");
 7935 053c 4548     		ldr	r0, .L663+108	@,
 7936 053e FFF7FEFF 		bl	UaPutS	@
 7937              	@ main.c:4107: 				hex2uart(buffer[strBlock%512], 2);
 7938 0542 059E     		ldr	r6, [sp, #20]	@ ivtmp.677, %sfp
 7939 0544 C4F30804 		ubfx	r4, r4, #0, #9	@ _33, strBlock,,
 7940 0548 0221     		movs	r1, #2	@,
 7941 054a 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2	@, buffer
 7942 054c FFF7FEFF 		bl	hex2uart	@
 7943              	@ main.c:4108: 				UaPutS("\r\n New Data    = 0x");
 7944 0550 4148     		ldr	r0, .L663+112	@,
 7945 0552 FFF7FEFF 		bl	UaPutS	@
 7946              	@ main.c:4109: 				StrBlock=UART_getHex();
 7947 0556 FFF7FEFF 		bl	UART_getHex	@
 7948              	@ main.c:4112: 				if (mci_write_sect		(strBlock/512, buffer,1))  UaPutS("\r\n Modify OK");
 7949 055a 0122     		movs	r2, #1	@,
 7950              	@ main.c:4110: 				buffer[strBlock%512] = StrBlock;
 7951 055c 3055     		strb	r0, [r6, r4]	@, buffer
 7952              	@ main.c:4112: 				if (mci_write_sect		(strBlock/512, buffer,1))  UaPutS("\r\n Modify OK");
 7953 055e 3C49     		ldr	r1, .L663+104	@,
 7954 0560 2846     		mov	r0, r5	@, _31
 7955 0562 FFF7FEFF 		bl	mmc_write_sect	@
 7956 0566 0028     		cmp	r0, #0	@
 7957 0568 3FF474AD 		beq	.L550	@
 7958              	@ main.c:4112: 				if (mci_write_sect		(strBlock/512, buffer,1))  UaPutS("\r\n Modify OK");
 7959 056c 3B48     		ldr	r0, .L663+116	@,
 7960 056e FFF7FEFF 		bl	UaPutS	@
 7961 0572 6FE5     		b	.L550	@
 7962              	.L552:
 7963              	@ main.c:4343: 			UaPutK("Unkr_dma_buf Command !");
 7964 0574 3A48     		ldr	r0, .L663+120	@,
 7965 0576 FFF7FEFF 		bl	UaPutK	@
 7966              	@ main.c:4344: 			break;
 7967 057a 6BE5     		b	.L550	@
 7968              	.L596:
 7969              	@ main.c:4308: 				} else UaPutK("\r\n Read Error ");
 7970 057c 3948     		ldr	r0, .L663+124	@,
 7971 057e FFF7FEFF 		bl	UaPutK	@
 7972              	@ main.c:4309: 				if(p_Fifo1->rct) break;
 7973 0582 394B     		ldr	r3, .L663+128	@ tmp753,
 7974 0584 1B68     		ldr	r3, [r3]	@ p_Fifo1.259_492, p_Fifo1
 7975 0586 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.259_492->rct
 7976 0588 9BB2     		uxth	r3, r3	@ _493, p_Fifo1.259_492->rct
 7977 058a 002B     		cmp	r3, #0	@ _493
 7978 058c 3FF41FAE 		beq	.L594	@
 7979 0590 42E6     		b	.L595	@
 7980              	.L657:
ARM GAS  /tmp/ccjvICQi.s 			page 141


 7981              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7982 0592 214B     		ldr	r3, .L663+48	@ tmp718,
 7983              	@ main.c:4088: 						UaPutS("\r\n Fill OK ");
 7984 0594 5046     		mov	r0, r10	@, tmp621
 7985              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7986 0596 1E68     		ldr	r6, [r3]	@ Timt.100_367, Timt
 7987 0598 BB68     		ldr	r3, [r7, #8]	@ _368, MEM[(struct SysTick_Type *)3758153744B].VAL
 7988 059a 0292     		str	r2, [sp, #8]	@ tmp434, %sfp
 7989 059c F61A     		subs	r6, r6, r3	@ _369, Timt.100_367, _368
 7990 059e 0896     		str	r6, [sp, #32]	@ _369, MEM[(volatile u32 *)&tim]
 7991              	@ main.c:4088: 						UaPutS("\r\n Fill OK ");
 7992 05a0 FFF7FEFF 		bl	UaPutS	@
 7993              	@ main.c:4089: 						hex2uart(strBlock,  8);
 7994 05a4 2046     		mov	r0, r4	@, strBlock
 7995 05a6 0821     		movs	r1, #8	@,
 7996 05a8 FFF7FEFF 		bl	hex2uart	@
 7997              	@ main.c:4090: 						UaPutS(" Time[us] = " );
 7998 05ac 2F48     		ldr	r0, .L663+132	@,
 7999 05ae FFF7FEFF 		bl	UaPutS	@
 8000              	@ main.c:4091: 						num2uart(tim, 8,0);
 8001 05b2 029A     		ldr	r2, [sp, #8]	@ tmp434, %sfp
 8002 05b4 3046     		mov	r0, r6	@, _369
 8003 05b6 0821     		movs	r1, #8	@,
 8004 05b8 FFF7FEFF 		bl	num2uart	@
 8005 05bc 0EE7     		b	.L571	@
 8006              	.L656:
 8007              	@ main.c:4304: 						UaPutK("\r\n Block = ");	hex2uart(strBlock,8); hex2uart(crc,4);
 8008 05be 2C48     		ldr	r0, .L663+136	@,
 8009 05c0 FFF7FEFF 		bl	UaPutK	@
 8010 05c4 2046     		mov	r0, r4	@, strBlock
 8011 05c6 0821     		movs	r1, #8	@,
 8012 05c8 FFF7FEFF 		bl	hex2uart	@
 8013 05cc 0421     		movs	r1, #4	@,
 8014 05ce BDF81E00 		ldrh	r0, [sp, #30]	@, crc
 8015 05d2 FFF7FEFF 		bl	hex2uart	@
 8016 05d6 11E6     		b	.L597	@
 8017              	.L654:
 8018              	@ main.c:4249: 					UaPutK("\r\n Exit Read Error !!!");
 8019 05d8 2648     		ldr	r0, .L663+140	@,
 8020 05da FFF7FEFF 		bl	UaPutK	@
 8021              	@ main.c:4250: 					break;
 8022 05de A6E5     		b	.L591	@
 8023              	.L607:
 8024 05e0 4FF0000B 		mov	fp, #0	@ prephitmp_139,
 8025              	@ main.c:4069: 			dstBlock = dstBlock > strBlock ? dstBlock - strBlock + 1 : 1;
 8026 05e4 0125     		movs	r5, #1	@ iftmp.237_131,
 8027 05e6 DAE6     		b	.L568	@
 8028              	.L664:
 8029              		.align	2
 8030              	.L663:
 8031 05e8 00000000 		.word	.LANCHOR30
 8032 05ec 2C000000 		.word	.LC116
 8033 05f0 44000000 		.word	.LC117
 8034 05f4 5C000000 		.word	.LC118
 8035 05f8 74000000 		.word	.LC119
 8036 05fc B4000000 		.word	.LC122
 8037 0600 C0000000 		.word	.LC123
ARM GAS  /tmp/ccjvICQi.s 			page 142


 8038 0604 D8000000 		.word	.LC124
 8039 0608 F0000000 		.word	.LC125
 8040 060c 04010000 		.word	.LC126
 8041 0610 FFFFFFFF 		.word	buffer.8846-1
 8042 0614 10E000E0 		.word	-536813552
 8043 0618 00000000 		.word	Timt
 8044 061c 1C010000 		.word	.LC127
 8045 0620 20000000 		.word	.LC105
 8046 0624 2C000000 		.word	.LC106
 8047 0628 40000000 		.word	.LC107
 8048 062c 54000000 		.word	.LC108
 8049 0630 A8010000 		.word	.LC135
 8050 0634 B4010000 		.word	.LC136
 8051 0638 C0010000 		.word	.LC137
 8052 063c C8010000 		.word	.LC138
 8053 0640 D4010000 		.word	.LC139
 8054 0644 14000000 		.word	.LC115
 8055 0648 4C010000 		.word	.LC130
 8056 064c 5C010000 		.word	.LC131
 8057 0650 00000000 		.word	buffer.8846
 8058 0654 70010000 		.word	.LC132
 8059 0658 84010000 		.word	.LC133
 8060 065c 98010000 		.word	.LC134
 8061 0660 20030000 		.word	.LC159
 8062 0664 F0020000 		.word	.LC156
 8063 0668 00000000 		.word	p_Fifo1
 8064 066c 3C010000 		.word	.LC129
 8065 0670 E4020000 		.word	.LC155
 8066 0674 A4020000 		.word	.LC152
 8067 0678 30010000 		.word	.LC128
 8068              	.L655:
 8069              	@ main.c:4157: 				UaPutS("\r\n ");
 8070 067c 7548     		ldr	r0, .L665	@,
 8071 067e FFF7FEFF 		bl	UaPutS	@
 8072              	@ main.c:4158: 				hex2uart(strBlock, 8);
 8073 0682 0821     		movs	r1, #8	@,
 8074 0684 3846     		mov	r0, r7	@, strBlock
 8075 0686 FFF7FEFF 		bl	hex2uart	@
 8076 068a 0024     		movs	r4, #0	@ ivtmp.711,
 8077              	.L577:
 8078              	@ main.c:4160: 					hex2uart(k, 2);
 8079 068c 2046     		mov	r0, r4	@, ivtmp.711
 8080 068e 0221     		movs	r1, #2	@,
 8081 0690 0134     		adds	r4, r4, #1	@ ivtmp.711, ivtmp.711,
 8082 0692 FFF7FEFF 		bl	hex2uart	@
 8083              	@ main.c:4159: 				for(u08 k=0;k<16;k++){
 8084 0696 102C     		cmp	r4, #16	@ ivtmp.711,
 8085 0698 F8D1     		bne	.L577	@,
 8086 069a 6F4D     		ldr	r5, .L665+4	@ _474,
 8087              	@ main.c:4162: 				UaPutS("\r\n\n ");
 8088 069c 6F48     		ldr	r0, .L665+8	@,
 8089              	@ main.c:4168: 					UaPutS("  ");
 8090 069e DFF80CA2 		ldr	r10, .L665+88	@ tmp631,
 8091              	@ main.c:4173: 					UaPutS("\r\n ");
 8092 06a2 DFF8B081 		ldr	r8, .L665	@ tmp632,
 8093              	@ main.c:4162: 				UaPutS("\r\n\n ");
 8094 06a6 FFF7FEFF 		bl	UaPutS	@
ARM GAS  /tmp/ccjvICQi.s 			page 143


 8095              	@ main.c:4164: 					hex2uart(strBlock*512 + i, 8);
 8096 06aa 2E46     		mov	r6, r5	@ ivtmp.710, ivtmp.677
 8097 06ac 0595     		str	r5, [sp, #20]	@ ivtmp.677, %sfp
 8098 06ae C5EB4727 		rsb	r7, r5, r7, lsl #9	@ tmp603, ivtmp.677, strBlock,
 8099 06b2 1035     		adds	r5, r5, #16	@ ivtmp.709, _474,
 8100              	.L582:
 8101 06b4 0821     		movs	r1, #8	@,
 8102 06b6 B819     		adds	r0, r7, r6	@, tmp603, ivtmp.710
 8103 06b8 FFF7FEFF 		bl	hex2uart	@
 8104 06bc 3446     		mov	r4, r6	@ ivtmp.701, ivtmp.710
 8105              	.L578:
 8106              	@ main.c:4166: 						hex2uart(buffer[k+i], 2);
 8107 06be 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2	@, MEM[base: _428, offset: 0B]
 8108 06c2 0221     		movs	r1, #2	@,
 8109 06c4 FFF7FEFF 		bl	hex2uart	@
 8110              	@ main.c:4165: 					for(u08 k=0;k<16;k++){
 8111 06c8 AC42     		cmp	r4, r5	@ ivtmp.701, ivtmp.709
 8112 06ca F8D1     		bne	.L578	@,
 8113              	@ main.c:4168: 					UaPutS("  ");
 8114 06cc 5046     		mov	r0, r10	@, tmp631
 8115 06ce FFF7FEFF 		bl	UaPutS	@
 8116 06d2 B346     		mov	fp, r6	@ ivtmp.692, ivtmp.710
 8117              	.L581:
 8118              	@ main.c:4170: 						if ( buffer[k+i]<0x20 || buffer[k+i]>126 ) UaPutC('.');
 8119 06d4 1BF8010B 		ldrb	r0, [fp], #1	@ zero_extendqisi2	@ _58, MEM[base: _413, offset: 0B]
 8120 06d8 A0F12003 		sub	r3, r0, #32	@ tmp487, _58,
 8121 06dc 5E2B     		cmp	r3, #94	@ tmp487,
 8122 06de 88BF     		it	hi
 8123 06e0 2E20     		movhi	r0, #46	@,
 8124              	@ main.c:4171: 						else UaPutC(buffer[k+i]);
 8125 06e2 FFF7FEFF 		bl	UaPutC	@
 8126              	@ main.c:4169: 					for(u08 k=0;k<16;k++){
 8127 06e6 A345     		cmp	fp, r4	@ ivtmp.692, ivtmp.701
 8128 06e8 F4D1     		bne	.L581	@,
 8129              	@ main.c:4173: 					UaPutS("\r\n ");
 8130 06ea 4046     		mov	r0, r8	@, tmp632
 8131 06ec FFF7FEFF 		bl	UaPutS	@
 8132              	@ main.c:4163: 				for(u32 i=0;i<512;i+=16){
 8133 06f0 5B4B     		ldr	r3, .L665+12	@ tmp733,
 8134 06f2 1036     		adds	r6, r6, #16	@ ivtmp.710, ivtmp.710,
 8135 06f4 9E42     		cmp	r6, r3	@ ivtmp.710, tmp733
 8136 06f6 05F11005 		add	r5, r5, #16	@ ivtmp.709, ivtmp.709,
 8137 06fa DBD1     		bne	.L582	@,
 8138              	@ main.c:4175: 				UaPutK(" t_rsdio = ");	uint2uart(tim/TIM_US);
 8139 06fc 5948     		ldr	r0, .L665+16	@,
 8140 06fe FFF7FEFF 		bl	UaPutK	@
 8141 0702 594E     		ldr	r6, .L665+20	@ tmp735,
 8142 0704 029B     		ldr	r3, [sp, #8]	@ _372, %sfp
 8143              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 8144 0706 594D     		ldr	r5, .L665+24	@ tmp493,
 8145              	@ main.c:4175: 				UaPutK(" t_rsdio = ");	uint2uart(tim/TIM_US);
 8146 0708 A6FB0330 		umull	r3, r0, r6, r3	@ tmp697, tmp491, tmp735, _372
 8147 070c 4008     		lsrs	r0, r0, #1	@, tmp491,
 8148 070e FFF7FEFF 		bl	uint2uart	@
 8149              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 8150 0712 574C     		ldr	r4, .L665+28	@ tmp738,
 8151 0714 AB68     		ldr	r3, [r5, #8]	@ _377, MEM[(struct SysTick_Type *)3758153744B].VAL
ARM GAS  /tmp/ccjvICQi.s 			page 144


 8152              	@ main.c:4177: 				crc16_spi2( (u16*) buffer,256, &crc );
 8153 0716 0DF11E02 		add	r2, sp, #30	@ tmp737,,
 8154 071a 4FF48071 		mov	r1, #256	@,
 8155 071e 4E48     		ldr	r0, .L665+4	@,
 8156              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 8157 0720 2360     		str	r3, [r4]	@ _377, Timt
 8158              	@ main.c:4177: 				crc16_spi2( (u16*) buffer,256, &crc );
 8159 0722 FFF7FEFF 		bl	crc16_spi2	@
 8160              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 8161 0726 2468     		ldr	r4, [r4]	@ Timt.100_374, Timt
 8162 0728 AB68     		ldr	r3, [r5, #8]	@ _375, MEM[(struct SysTick_Type *)3758153744B].VAL
 8163              	@ main.c:4180: 				UaPutK(" crc = ");	hex2uart(crc,4);
 8164 072a 5248     		ldr	r0, .L665+32	@,
 8165              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 8166 072c E41A     		subs	r4, r4, r3	@ _376, Timt.100_374, _375
 8167 072e 0894     		str	r4, [sp, #32]	@ _376, MEM[(volatile u32 *)&tim]
 8168              	@ main.c:4180: 				UaPutK(" crc = ");	hex2uart(crc,4);
 8169 0730 FFF7FEFF 		bl	UaPutK	@
 8170 0734 0421     		movs	r1, #4	@,
 8171 0736 BDF81E00 		ldrh	r0, [sp, #30]	@, crc
 8172 073a FFF7FEFF 		bl	hex2uart	@
 8173              	@ main.c:4181: 				UaPutK(" t_crc = ");	uint2uart(tim/TIM_US);
 8174 073e 4E48     		ldr	r0, .L665+36	@,
 8175 0740 FFF7FEFF 		bl	UaPutK	@
 8176 0744 A6FB0430 		umull	r3, r0, r6, r4	@ tmp698, tmp503, tmp740, _376
 8177 0748 4008     		lsrs	r0, r0, #1	@, tmp503,
 8178 074a FFF7FEFF 		bl	uint2uart	@
 8179 074e 81E4     		b	.L550	@
 8180              	.L658:
 8181              	@ main.c:4197: 				x=0;
 8182 0750 0024     		movs	r4, #0	@ x,
 8183              	@ main.c:4190: 				UaPutK("Read multi sector");
 8184 0752 4A48     		ldr	r0, .L665+40	@,
 8185 0754 FFF7FEFF 		bl	UaPutK	@
 8186              	@ main.c:4196: 				UaPutK("\r\n Num Sectors  = ");			uint2uart(dstBlock);
 8187 0758 4948     		ldr	r0, .L665+44	@,
 8188 075a FFF7FEFF 		bl	UaPutK	@
 8189 075e 4948     		ldr	r0, .L665+48	@,
 8190 0760 FFF7FEFF 		bl	uint2uart	@
 8191              	@ main.c:4198: 				TFT_Clear(BLACK);
 8192 0764 2046     		mov	r0, r4	@, x
 8193 0766 FFF7FEFF 		bl	TFT_Clear	@
 8194              	@ main.c:4193: 				strBlock = 0;
 8195 076a 2646     		mov	r6, r4	@ strBlock, x
 8196              	@ main.c:4201: 					d = mci_read_sect (strBlock,buffer,1);
 8197 076c 3A4F     		ldr	r7, .L665+4	@ tmp614,
 8198 076e DDF81080 		ldr	r8, [sp, #16]	@ y1, %sfp
 8199 0772 1BE0     		b	.L589	@
 8200              	.L660:
 8201              	@ main.c:4220: 								TFT_dy( x, y1, y2, YELLOW, 0);
 8202 0774 0020     		movs	r0, #0	@ tmp529,
 8203 0776 4FF6E073 		movw	r3, #65504	@,
 8204 077a 0090     		str	r0, [sp]	@ tmp529,
 8205 077c 2046     		mov	r0, r4	@, x
 8206 077e FFF7FEFF 		bl	TFT_dy	@
 8207              	.L588:
 8208              	@ main.c:4226: 							x = (x+1)%(wXmax-wXmin);
ARM GAS  /tmp/ccjvICQi.s 			page 145


 8209 0782 414B     		ldr	r3, .L665+52	@ tmp746,
 8210 0784 0134     		adds	r4, r4, #1	@ tmp530, x,
 8211 0786 A3FB0423 		umull	r2, r3, r3, r4	@ tmp700, tmp531, tmp746, tmp530
 8212 078a 5B09     		lsrs	r3, r3, #5	@ _76, tmp531,
 8213 078c 03EBC302 		add	r2, r3, r3, lsl #3	@ tmp535, _76, _76,
 8214 0790 C3EB4213 		rsb	r3, r3, r2, lsl #5	@ tmp537, _76, tmp535,
 8215 0794 E31A     		subs	r3, r4, r3	@ _76, tmp530, tmp537
 8216 0796 9CB2     		uxth	r4, r3	@ x, _76
 8217              	.L585:
 8218              	@ main.c:4230: 					if(p_Fifo1->rct) break;
 8219 0798 3C4B     		ldr	r3, .L665+56	@ tmp747,
 8220              	@ main.c:4199: 				while(dstBlock--){
 8221 079a 3A4A     		ldr	r2, .L665+48	@ tmp550,
 8222              	@ main.c:4230: 					if(p_Fifo1->rct) break;
 8223 079c 1B68     		ldr	r3, [r3]	@ p_Fifo1.253_77, p_Fifo1
 8224              	@ main.c:4229: 					strBlock++;
 8225 079e 0136     		adds	r6, r6, #1	@ strBlock, strBlock,
 8226              	@ main.c:4230: 					if(p_Fifo1->rct) break;
 8227 07a0 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.253_77->rct
 8228 07a2 9BB2     		uxth	r3, r3	@ _78, p_Fifo1.253_77->rct
 8229 07a4 002B     		cmp	r3, #0	@ _78
 8230 07a6 3BD1     		bne	.L649	@
 8231              	@ main.c:4199: 				while(dstBlock--){
 8232 07a8 9642     		cmp	r6, r2	@ strBlock, tmp550
 8233 07aa 39D0     		beq	.L649	@,
 8234              	.L589:
 8235              	@ main.c:4201: 					d = mci_read_sect (strBlock,buffer,1);
 8236 07ac 0122     		movs	r2, #1	@,
 8237 07ae 3946     		mov	r1, r7	@, tmp614
 8238 07b0 3046     		mov	r0, r6	@, strBlock
 8239 07b2 FFF7FEFF 		bl	mmc_read_sect	@
 8240              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 8241 07b6 2D4A     		ldr	r2, .L665+24	@ tmp516,
 8242              	@ main.c:4210: 							if(!(strBlock%4096)){
 8243 07b8 C6F30B03 		ubfx	r3, r6, #0, #12	@ tmp517, strBlock,,
 8244              	@ main.c:4202: 					if(!d) {
 8245 07bc 0028     		cmp	r0, #0	@ tmp512
 8246 07be 32D0     		beq	.L659	@
 8247              	@ main.c:4208: 						if(!(strBlock%256)){
 8248 07c0 16F0FF0F 		tst	r6, #255	@ strBlock
 8249 07c4 E8D1     		bne	.L585	@,
 8250              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 8251 07c6 2A49     		ldr	r1, .L665+28	@ tmp743,
 8252 07c8 0D68     		ldr	r5, [r1]	@ Timt.100_378, Timt
 8253 07ca 9268     		ldr	r2, [r2, #8]	@ _379, MEM[(struct SysTick_Type *)3758153744B].VAL
 8254 07cc AD1A     		subs	r5, r5, r2	@ _380, Timt.100_378, _379
 8255 07ce 0895     		str	r5, [sp, #32]	@ _380, MEM[(volatile u32 *)&tim]
 8256              	@ main.c:4210: 							if(!(strBlock%4096)){
 8257 07d0 93B9     		cbnz	r3, .L586	@ tmp517,
 8258              	@ main.c:4211: 								UaPutS("\r\n Read OK ");
 8259 07d2 2F48     		ldr	r0, .L665+60	@,
 8260 07d4 FFF7FEFF 		bl	UaPutS	@
 8261              	@ main.c:4212: 								hex2uart(strBlock,  8);
 8262 07d8 0821     		movs	r1, #8	@,
 8263 07da 3046     		mov	r0, r6	@, strBlock
 8264 07dc FFF7FEFF 		bl	hex2uart	@
 8265              	@ main.c:4213: 								UaPutS(" y2 = " );
ARM GAS  /tmp/ccjvICQi.s 			page 146


 8266 07e0 2C48     		ldr	r0, .L665+64	@,
 8267 07e2 FFF7FEFF 		bl	UaPutS	@
 8268              	@ main.c:4214: 								uint2uart(y1); UaPutS("\t" ); uint2uart(y2);
 8269 07e6 4046     		mov	r0, r8	@, y1
 8270 07e8 FFF7FEFF 		bl	uint2uart	@
 8271 07ec 2A48     		ldr	r0, .L665+68	@,
 8272 07ee FFF7FEFF 		bl	UaPutS	@
 8273 07f2 4046     		mov	r0, r8	@, y1
 8274 07f4 FFF7FEFF 		bl	uint2uart	@
 8275              	.L586:
 8276              	@ main.c:4218: 							y2 = tim/(3*TIM_MS);
 8277 07f8 284A     		ldr	r2, .L665+72	@ tmp744,
 8278 07fa EB08     		lsrs	r3, r5, #3	@ tmp524, _380,
 8279 07fc A2FB0323 		umull	r2, r3, r2, r3	@ tmp699, tmp525, tmp744, tmp524
 8280              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 8281 0800 1A4A     		ldr	r2, .L665+24	@ tmp522,
 8282              	@ main.c:4218: 							y2 = tim/(3*TIM_MS);
 8283 0802 5B0A     		lsrs	r3, r3, #9	@ _71, tmp525,
 8284              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 8285 0804 9068     		ldr	r0, [r2, #8]	@ _381, MEM[(struct SysTick_Type *)3758153744B].VAL
 8286              	@ main.c:4220: 								TFT_dy( x, y1, y2, YELLOW, 0);
 8287 0806 5FFA88F1 		uxtb	r1, r8	@, y1
 8288 080a DAB2     		uxtb	r2, r3	@, _71
 8289              	@ main.c:4218: 							y2 = tim/(3*TIM_MS);
 8290 080c 1FFA83F8 		uxth	r8, r3	@ y2, _71
 8291              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 8292 0810 174B     		ldr	r3, .L665+28	@ tmp745,
 8293 0812 1860     		str	r0, [r3]	@ _381, Timt
 8294              	@ main.c:4219: 							if(x){
 8295 0814 002C     		cmp	r4, #0	@ x
 8296 0816 ADD1     		bne	.L660	@
 8297              	@ main.c:4223: 								TFT_Clear(BLACK);
 8298 0818 2046     		mov	r0, r4	@, x
 8299 081a FFF7FEFF 		bl	TFT_Clear	@
 8300 081e B0E7     		b	.L588	@
 8301              	.L649:
 8302 0820 CDF81080 		str	r8, [sp, #16]	@ y1, %sfp
 8303 0824 16E4     		b	.L550	@
 8304              	.L659:
 8305 0826 0546     		mov	r5, r0	@ tmp512, tmp512
 8306              	@ main.c:4203: 						UaPutS("\r\n Read error = 0x");
 8307 0828 1D48     		ldr	r0, .L665+76	@,
 8308 082a CDF81080 		str	r8, [sp, #16]	@ y1, %sfp
 8309 082e FFF7FEFF 		bl	UaPutS	@
 8310              	@ main.c:4204: 						hex2uart(strBlock,8); hex2uart(d,2);
 8311 0832 3046     		mov	r0, r6	@, strBlock
 8312 0834 0821     		movs	r1, #8	@,
 8313 0836 FFF7FEFF 		bl	hex2uart	@
 8314 083a 2846     		mov	r0, r5	@, tmp512
 8315 083c 0221     		movs	r1, #2	@,
 8316 083e FFF7FEFF 		bl	hex2uart	@
 8317              	@ main.c:4205: 						break;
 8318 0842 07E4     		b	.L550	@
 8319              	.L548:
 8320              	@ main.c:4015: 	} else UaPutK("\r\nSD Card Init ERROR ");
 8321 0844 1748     		ldr	r0, .L665+80	@,
 8322 0846 FFF7FEFF 		bl	UaPutK	@
ARM GAS  /tmp/ccjvICQi.s 			page 147


 8323 084a 174B     		ldr	r3, .L665+84	@ tmp612,
 8324 084c 0393     		str	r3, [sp, #12]	@ tmp612, %sfp
 8325 084e FFF7F2BB 		b	.L549	@
 8326              	.L666:
 8327 0852 00BF     		.align	2
 8328              	.L665:
 8329 0854 30000000 		.word	.LC82
 8330 0858 00000000 		.word	buffer.8846
 8331 085c 34000000 		.word	.LC83
 8332 0860 00020000 		.word	buffer.8846+512
 8333 0864 FC000000 		.word	.LC96
 8334 0868 398EE338 		.word	954437177
 8335 086c 10E000E0 		.word	-536813552
 8336 0870 00000000 		.word	Timt
 8337 0874 40000000 		.word	.LC85
 8338 0878 F4010000 		.word	.LC141
 8339 087c 14020000 		.word	.LC143
 8340 0880 28020000 		.word	.LC144
 8341 0884 41420F00 		.word	1000001
 8342 0888 5B268B1C 		.word	478881371
 8343 088c 00000000 		.word	p_Fifo1
 8344 0890 50020000 		.word	.LC146
 8345 0894 5C020000 		.word	.LC147
 8346 0898 64020000 		.word	.LC148
 8347 089c CF0DD626 		.word	651562447
 8348 08a0 3C020000 		.word	.LC145
 8349 08a4 14000000 		.word	.LC115
 8350 08a8 00000000 		.word	CardType
 8351 08ac 3C000000 		.word	.LC84
 8352              		.size	MemCard_Menu, .-MemCard_Menu
 8353              		.section	.text.CopyClock,"ax",%progbits
 8354              		.align	1
 8355              		.p2align 2,,3
 8356              		.global	CopyClock
 8357              		.syntax unified
 8358              		.thumb
 8359              		.thumb_func
 8360              		.fpu softvfp
 8361              		.type	CopyClock, %function
 8362              	CopyClock:
 8363              		@ args = 0, pretend = 0, frame = 8
 8364              		@ frame_needed = 0, uses_anonymous_args = 0
 8365 0000 30B5     		push	{r4, r5, lr}	@
 8366 0002 0D46     		mov	r5, r1	@ lrtc, lrtc
 8367 0004 83B0     		sub	sp, sp, #12	@,,
 8368              	@ main.c:5084: void CopyClock(char *dczas, T_RTC *lrtc)	{
 8369 0006 0446     		mov	r4, r0	@ dczas, dczas
 8370              	@ main.c:5090: 		dczas += 0;	memcpy(dczas,unt2str(lrtc->yer,tbuf,4) ,4);
 8371 0008 6946     		mov	r1, sp	@,
 8372 000a E888     		ldrh	r0, [r5, #6]	@, lrtc_21(D)->yer
 8373 000c 0422     		movs	r2, #4	@,
 8374 000e FFF7FEFF 		bl	unt2str	@
 8375 0012 0368     		ldr	r3, [r0]	@ unaligned	@ tmp138, MEM[(char * {ref-all})_3]
 8376              	@ main.c:5091: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 8377 0014 6946     		mov	r1, sp	@,
 8378              	@ main.c:5090: 		dczas += 0;	memcpy(dczas,unt2str(lrtc->yer,tbuf,4) ,4);
 8379 0016 2360     		str	r3, [r4]	@ unaligned	@ tmp138, MEM[(char * {ref-all})dczas_19(D)]
ARM GAS  /tmp/ccjvICQi.s 			page 148


 8380              	@ main.c:5091: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 8381 0018 2879     		ldrb	r0, [r5, #4]	@ zero_extendqisi2	@, lrtc_21(D)->mon
 8382 001a 0222     		movs	r2, #2	@,
 8383 001c FFF7FEFF 		bl	unt2str	@
 8384 0020 0388     		ldrh	r3, [r0]	@ unaligned	@ _26, MEM[(char * {ref-all})_6]
 8385              	@ main.c:5092: 		dczas += 3; memcpy(dczas,unt2str(lrtc->mdy,tbuf,2) ,2);
 8386 0022 6946     		mov	r1, sp	@,
 8387              	@ main.c:5091: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 8388 0024 A4F80530 		strh	r3, [r4, #5]	@ unaligned	@ _26, MEM[(char * {ref-all})dczas_19(D) + 5B]
 8389              	@ main.c:5092: 		dczas += 3; memcpy(dczas,unt2str(lrtc->mdy,tbuf,2) ,2);
 8390 0028 E878     		ldrb	r0, [r5, #3]	@ zero_extendqisi2	@, lrtc_21(D)->mdy
 8391 002a 0222     		movs	r2, #2	@,
 8392 002c FFF7FEFF 		bl	unt2str	@
 8393 0030 0388     		ldrh	r3, [r0]	@ unaligned	@ _29, MEM[(char * {ref-all})_9]
 8394              	@ main.c:5093: 		dczas += 3; memcpy(dczas,unt2str(lrtc->hor,tbuf,2) ,2);
 8395 0032 6946     		mov	r1, sp	@,
 8396              	@ main.c:5092: 		dczas += 3; memcpy(dczas,unt2str(lrtc->mdy,tbuf,2) ,2);
 8397 0034 2381     		strh	r3, [r4, #8]	@ unaligned	@ _29, MEM[(char * {ref-all})dczas_19(D) + 8B]
 8398              	@ main.c:5093: 		dczas += 3; memcpy(dczas,unt2str(lrtc->hor,tbuf,2) ,2);
 8399 0036 A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2	@, lrtc_21(D)->hor
 8400 0038 0222     		movs	r2, #2	@,
 8401 003a FFF7FEFF 		bl	unt2str	@
 8402 003e 0388     		ldrh	r3, [r0]	@ unaligned	@ _32, MEM[(char * {ref-all})_12]
 8403              	@ main.c:5094: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 8404 0040 6946     		mov	r1, sp	@,
 8405              	@ main.c:5093: 		dczas += 3; memcpy(dczas,unt2str(lrtc->hor,tbuf,2) ,2);
 8406 0042 A4F80B30 		strh	r3, [r4, #11]	@ unaligned	@ _32, MEM[(char * {ref-all})dczas_19(D) + 11B]
 8407              	@ main.c:5094: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 8408 0046 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2	@, lrtc_21(D)->min
 8409 0048 0222     		movs	r2, #2	@,
 8410 004a FFF7FEFF 		bl	unt2str	@
 8411 004e 0388     		ldrh	r3, [r0]	@ unaligned	@ _35, MEM[(char * {ref-all})_15]
 8412              	@ main.c:5095: 		dczas += 3; memcpy(dczas,unt2str(lrtc->sec,tbuf,2) ,2);
 8413 0050 6946     		mov	r1, sp	@,
 8414              	@ main.c:5094: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 8415 0052 E381     		strh	r3, [r4, #14]	@ unaligned	@ _35, MEM[(char * {ref-all})dczas_19(D) + 14B]
 8416              	@ main.c:5095: 		dczas += 3; memcpy(dczas,unt2str(lrtc->sec,tbuf,2) ,2);
 8417 0054 2878     		ldrb	r0, [r5]	@ zero_extendqisi2	@, lrtc_21(D)->sec
 8418 0056 0222     		movs	r2, #2	@,
 8419 0058 FFF7FEFF 		bl	unt2str	@
 8420 005c 0388     		ldrh	r3, [r0]	@ unaligned	@ _38, MEM[(char * {ref-all})_18]
 8421 005e A4F81130 		strh	r3, [r4, #17]	@ unaligned	@ _38, MEM[(char * {ref-all})dczas_19(D) + 17B]
 8422              	@ main.c:5097: 	}
 8423 0062 03B0     		add	sp, sp, #12	@,,
 8424              		@ sp needed	@
 8425 0064 30BD     		pop	{r4, r5, pc}	@
 8426              		.size	CopyClock, .-CopyClock
 8427 0066 00BF     		.section	.text.Intro2,"ax",%progbits
 8428              		.align	1
 8429              		.p2align 2,,3
 8430              		.global	Intro2
 8431              		.syntax unified
 8432              		.thumb
 8433              		.thumb_func
 8434              		.fpu softvfp
 8435              		.type	Intro2, %function
 8436              	Intro2:
ARM GAS  /tmp/ccjvICQi.s 			page 149


 8437              		@ args = 0, pretend = 0, frame = 32
 8438              		@ frame_needed = 0, uses_anonymous_args = 0
 8439 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 8440              	@ main.c:2959: 		uint32_t tim=0;
 8441 0004 0025     		movs	r5, #0	@ tmp236,
 8442              	@ main.c:5276: 		DMA1_Channel1->CCR =  DMA_CCR1_PL_0 | DMA_CCR1_MSIZE_0 | DMA_CCR1_PSIZE_0 | DMA_CC
 8443 0006 41F2A256 		movw	r6, #5538	@ tmp246,
 8444              	@ main.c:2951: void Intro2(void){	
 8445 000a 8BB0     		sub	sp, sp, #44	@,,
 8446              	@ main.c:2954: 		UaPutS("\r\n Start programu... \r\n"); 
 8447 000c B448     		ldr	r0, .L726	@,
 8448 000e FFF7FEFF 		bl	UaPutS	@
 8449              	@ main.c:2981: 		UaPutS("\r\n Debug0..."); 
 8450 0012 B448     		ldr	r0, .L726+4	@,
 8451              	@ main.c:2959: 		uint32_t tim=0;
 8452 0014 0995     		str	r5, [sp, #36]	@ tmp236, tim
 8453              	@ main.c:2981: 		UaPutS("\r\n Debug0..."); 
 8454 0016 FFF7FEFF 		bl	UaPutS	@
 8455              	@ main.c:2982: 		RtcInit();
 8456 001a FFF7FEFF 		bl	RtcInit	@
 8457              	@ main.c:2983: 		rtc_GetTime(1,&Rtc);
 8458 001e B249     		ldr	r1, .L726+8	@,
 8459 0020 0120     		movs	r0, #1	@,
 8460 0022 FFF7FEFF 		bl	rtc_GetTime	@
 8461              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 8462 0026 B148     		ldr	r0, .L726+12	@ tmp249,
 8463              	@ main.c:5271: 		RCC->AHBENR   |= RCC_AHBENR_DMA1EN;					// enable clock for DMA1
 8464 0028 B149     		ldr	r1, .L726+16	@ tmp239,
 8465              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 8466 002a 0446     		mov	r4, r0	@ tmp252, tmp249
 8467              	@ main.c:5271: 		RCC->AHBENR   |= RCC_AHBENR_DMA1EN;					// enable clock for DMA1
 8468 002c 4A69     		ldr	r2, [r1, #20]	@ _190, MEM[(struct RCC_TypeDef *)1073876992B].AHBENR
 8469              	@ main.c:5272: 		DMA1_Channel1->CCR  = 0;										// Disable channel
 8470 002e B14B     		ldr	r3, .L726+20	@ tmp241,
 8471              	@ main.c:5271: 		RCC->AHBENR   |= RCC_AHBENR_DMA1EN;					// enable clock for DMA1
 8472 0030 42F00102 		orr	r2, r2, #1	@ _191, _190,
 8473 0034 4A61     		str	r2, [r1, #20]	@ _191, MEM[(struct RCC_TypeDef *)1073876992B].AHBENR
 8474              	@ main.c:5274: 		DMA1_Channel1->CPAR = (uint32_t)&ADC1->DR;	// Source address:
 8475 0036 A1F56B41 		sub	r1, r1, #60160	@ tmp244, tmp244,
 8476 003a B439     		subs	r1, r1, #180	@ tmp244, tmp244,
 8477              	@ main.c:5289: 		GPIOB->CRH   |= 0x00000090;	// PB9 out
 8478 003c AE4A     		ldr	r2, .L726+24	@ tmp247,
 8479              	@ main.c:5272: 		DMA1_Channel1->CCR  = 0;										// Disable channel
 8480 003e 1D60     		str	r5, [r3]	@ tmp236, MEM[(struct DMA_Channel_TypeDef *)1073872904B].CCR
 8481              	@ main.c:5274: 		DMA1_Channel1->CPAR = (uint32_t)&ADC1->DR;	// Source address:
 8482 0040 9960     		str	r1, [r3, #8]	@ tmp244, MEM[(struct DMA_Channel_TypeDef *)1073872904B].CPAR
 8483              	@ main.c:5276: 		DMA1_Channel1->CCR =  DMA_CCR1_PL_0 | DMA_CCR1_MSIZE_0 | DMA_CCR1_PSIZE_0 | DMA_CC
 8484 0042 1E60     		str	r6, [r3]	@ tmp246, MEM[(struct DMA_Channel_TypeDef *)1073872904B].CCR
 8485              	@ main.c:5289: 		GPIOB->CRH   |= 0x00000090;	// PB9 out
 8486 0044 5368     		ldr	r3, [r2, #4]	@ _192, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 8487              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 8488 0046 AD49     		ldr	r1, .L726+28	@ tmp500,
 8489              	@ main.c:5289: 		GPIOB->CRH   |= 0x00000090;	// PB9 out
 8490 0048 43F09003 		orr	r3, r3, #144	@ _193, _192,
 8491 004c 5360     		str	r3, [r2, #4]	@ _193, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 8492              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 8493 004e 8368     		ldr	r3, [r0, #8]	@ _194, MEM[(struct SysTick_Type *)3758153744B].VAL
ARM GAS  /tmp/ccjvICQi.s 			page 150


 8494 0050 0B60     		str	r3, [r1]	@ _194, delay_us
 8495              	.L670:
 8496              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 8497 0052 0B68     		ldr	r3, [r1]	@ delay_us.101_195, delay_us
 8498 0054 A268     		ldr	r2, [r4, #8]	@ _196, MEM[(struct SysTick_Type *)3758153744B].VAL
 8499 0056 9B1A     		subs	r3, r3, r2	@ tmp253, delay_us.101_195, _196
 8500 0058 592B     		cmp	r3, #89	@ tmp253,
 8501 005a FAD9     		bls	.L670	@,
 8502              	@ main.c:5296: 		TIM4->CCMR2 = TIM_CCMR2_OC4M_2 | TIM_CCMR2_OC4M_1;
 8503 005c 4FF4C045 		mov	r5, #24576	@ tmp270,
 8504              	@ main.c:5297: 		TIM4->CCER  = TIM_CCER_CC4E;
 8505 0060 4FF48050 		mov	r0, #4096	@ tmp273,
 8506              	@ main.c:5292: 		TIM4->PSC   = 100-1;
 8507 0064 4FF0630E 		mov	lr, #99	@ tmp258,
 8508              	@ main.c:5293:     TIM4->ARR   = 120-1;
 8509 0068 4FF0770C 		mov	ip, #119	@ tmp261,
 8510              	@ main.c:5294:     TIM4->CCR4  = 10;		//width pulse on PB9 out channel
 8511 006c 0A27     		movs	r7, #10	@ tmp264,
 8512              	@ main.c:5295: 		TIM4->CCMR1 = 0;
 8513 006e 0026     		movs	r6, #0	@ tmp267,
 8514              	@ main.c:5291: 		RCC->APB1ENR |= RCC_APB1ENR_TIM4EN;
 8515 0070 9F4B     		ldr	r3, .L726+16	@ tmp254,
 8516 0072 DA69     		ldr	r2, [r3, #28]	@ _198, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 8517 0074 42F00402 		orr	r2, r2, #4	@ _199, _198,
 8518 0078 DA61     		str	r2, [r3, #28]	@ _199, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 8519              	@ main.c:5292: 		TIM4->PSC   = 100-1;
 8520 007a A14A     		ldr	r2, .L726+32	@ tmp256,
 8521 007c A2F828E0 		strh	lr, [r2, #40]	@ movhi	@ tmp258, MEM[(struct TIM_TypeDef *)1073743872B].PSC
 8522              	@ main.c:5293:     TIM4->ARR   = 120-1;
 8523 0080 A2F82CC0 		strh	ip, [r2, #44]	@ movhi	@ tmp261, MEM[(struct TIM_TypeDef *)1073743872B].ARR
 8524              	@ main.c:5294:     TIM4->CCR4  = 10;		//width pulse on PB9 out channel
 8525 0084 A2F84070 		strh	r7, [r2, #64]	@ movhi	@ tmp264, MEM[(struct TIM_TypeDef *)1073743872B].CCR4
 8526              	@ main.c:5295: 		TIM4->CCMR1 = 0;
 8527 0088 1683     		strh	r6, [r2, #24]	@ movhi	@ tmp267, MEM[(struct TIM_TypeDef *)1073743872B].CCMR1
 8528              	@ main.c:5296: 		TIM4->CCMR2 = TIM_CCMR2_OC4M_2 | TIM_CCMR2_OC4M_1;
 8529 008a 9583     		strh	r5, [r2, #28]	@ movhi	@ tmp270, MEM[(struct TIM_TypeDef *)1073743872B].CCMR2
 8530              	@ main.c:5297: 		TIM4->CCER  = TIM_CCER_CC4E;
 8531 008c 1084     		strh	r0, [r2, #32]	@ movhi	@ tmp273, MEM[(struct TIM_TypeDef *)1073743872B].CCER
 8532              	@ main.c:5301: 		RCC->APB2ENR  |= RCC_APB2ENR_ADC1EN;			// enable clock for ADC1
 8533 008e 9A69     		ldr	r2, [r3, #24]	@ _200, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 8534              	@ main.c:5303: 		GPIOA->CRL = (GPIOA->CRL & 0xffff0000);
 8535 0090 05F18045 		add	r5, r5, #1073741824	@ tmp278, tmp278,
 8536              	@ main.c:5301: 		RCC->APB2ENR  |= RCC_APB2ENR_ADC1EN;			// enable clock for ADC1
 8537 0094 42F40072 		orr	r2, r2, #512	@ _201, _200,
 8538 0098 9A61     		str	r2, [r3, #24]	@ _201, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 8539              	@ main.c:5302: 		RCC->CFGR 		|= RCC_CFGR_ADCPRE_DIV4;  	// 2/4/6/8 str98
 8540 009a 5868     		ldr	r0, [r3, #4]	@ _202, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 8541              	@ main.c:5303: 		GPIOA->CRL = (GPIOA->CRL & 0xffff0000);
 8542 009c 05F52845 		add	r5, r5, #43008	@ tmp278, tmp278,
 8543              	@ main.c:5302: 		RCC->CFGR 		|= RCC_CFGR_ADCPRE_DIV4;  	// 2/4/6/8 str98
 8544 00a0 40F48040 		orr	r0, r0, #16384	@ _203, _202,
 8545 00a4 5860     		str	r0, [r3, #4]	@ _203, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 8546              	@ main.c:5303: 		GPIOA->CRL = (GPIOA->CRL & 0xffff0000);
 8547 00a6 2B68     		ldr	r3, [r5]	@ _204, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 8548              	@ main.c:5306: 		ADC1->CR1 |= ADC_CR1_SCAN;	// multi channel mode
 8549 00a8 964A     		ldr	r2, .L726+36	@ tmp281,
 8550              	@ main.c:5303: 		GPIOA->CRL = (GPIOA->CRL & 0xffff0000);
ARM GAS  /tmp/ccjvICQi.s 			page 151


 8551 00aa 1B0C     		lsrs	r3, r3, #16	@ _205, _204,
 8552 00ac 1B04     		lsls	r3, r3, #16	@ _205, _205,
 8553 00ae 2B60     		str	r3, [r5]	@ _205, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 8554              	@ main.c:5306: 		ADC1->CR1 |= ADC_CR1_SCAN;	// multi channel mode
 8555 00b0 5368     		ldr	r3, [r2, #4]	@ _206, MEM[(struct ADC_TypeDef *)1073816576B].CR1
 8556              	@ main.c:5307: 		ADC1->CR2 =  ADC_CR2_DMA | ADC_CR2_ADON | ADC_CR2_EXTTRIG | ADC_CR2_EXTSEL_2 | ADC
 8557 00b2 9548     		ldr	r0, .L726+40	@ tmp284,
 8558              	@ main.c:5306: 		ADC1->CR1 |= ADC_CR1_SCAN;	// multi channel mode
 8559 00b4 43F48073 		orr	r3, r3, #256	@ _207, _206,
 8560 00b8 5360     		str	r3, [r2, #4]	@ _207, MEM[(struct ADC_TypeDef *)1073816576B].CR1
 8561              	@ main.c:5307: 		ADC1->CR2 =  ADC_CR2_DMA | ADC_CR2_ADON | ADC_CR2_EXTTRIG | ADC_CR2_EXTSEL_2 | ADC
 8562 00ba 9060     		str	r0, [r2, #8]	@ tmp284, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 8563              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 8564 00bc A368     		ldr	r3, [r4, #8]	@ _208, MEM[(struct SysTick_Type *)3758153744B].VAL
 8565              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 8566 00be 8B4D     		ldr	r5, .L726+12	@ tmp288,
 8567              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 8568 00c0 0B60     		str	r3, [r1]	@ _208, delay_us
 8569              	.L671:
 8570              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 8571 00c2 0B68     		ldr	r3, [r1]	@ delay_us.101_209, delay_us
 8572 00c4 AA68     		ldr	r2, [r5, #8]	@ _210, MEM[(struct SysTick_Type *)3758153744B].VAL
 8573 00c6 9B1A     		subs	r3, r3, r2	@ tmp289, delay_us.101_209, _210
 8574 00c8 082B     		cmp	r3, #8	@ tmp289,
 8575 00ca FAD9     		bls	.L671	@,
 8576              	@ main.c:5317: 		ADC1->SMPR2 = 7<<0*3 | 7<<1*3 ;
 8577 00cc 3F21     		movs	r1, #63	@ tmp295,
 8578              	@ main.c:5312: 		ADC1->SQR1  = 0<<20;
 8579 00ce 0024     		movs	r4, #0	@ tmp291,
 8580              	@ main.c:5315: 		ADC1->SQR3  = 0<<1*5 | 1<<0*5 ;
 8581 00d0 0120     		movs	r0, #1	@ tmp293,
 8582              	@ main.c:5312: 		ADC1->SQR1  = 0<<20;
 8583 00d2 8C4B     		ldr	r3, .L726+36	@ tmp290,
 8584              	@ main.c:5320: 		while(ADC1->CR2 & ADC_CR2_RSTCAL);		// wait for reset
 8585 00d4 1A46     		mov	r2, r3	@ tmp298, tmp290
 8586              	@ main.c:5312: 		ADC1->SQR1  = 0<<20;
 8587 00d6 DC62     		str	r4, [r3, #44]	@ tmp291, MEM[(struct ADC_TypeDef *)1073816576B].SQR1
 8588              	@ main.c:5315: 		ADC1->SQR3  = 0<<1*5 | 1<<0*5 ;
 8589 00d8 5863     		str	r0, [r3, #52]	@ tmp293, MEM[(struct ADC_TypeDef *)1073816576B].SQR3
 8590              	@ main.c:5317: 		ADC1->SMPR2 = 7<<0*3 | 7<<1*3 ;
 8591 00da 1961     		str	r1, [r3, #16]	@ tmp295, MEM[(struct ADC_TypeDef *)1073816576B].SMPR2
 8592              	@ main.c:5319: 		ADC1->CR2 |= ADC_CR2_RSTCAL;					// reset calibration
 8593 00dc 9968     		ldr	r1, [r3, #8]	@ _212, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 8594 00de 41F00801 		orr	r1, r1, #8	@ _213, _212,
 8595 00e2 9960     		str	r1, [r3, #8]	@ _213, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 8596              	.L672:
 8597              	@ main.c:5320: 		while(ADC1->CR2 & ADC_CR2_RSTCAL);		// wait for reset
 8598 00e4 9368     		ldr	r3, [r2, #8]	@ _214, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 8599 00e6 1807     		lsls	r0, r3, #28	@, _214,
 8600 00e8 FCD4     		bmi	.L672	@,
 8601              	@ main.c:5321: 		ADC1->CR2 |= ADC_CR2_CAL;							// start calibration
 8602 00ea 9168     		ldr	r1, [r2, #8]	@ _216, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 8603              	@ main.c:5322: 		while(ADC1->CR2 & ADC_CR2_CAL);				// wait till calibration is done
 8604 00ec 854B     		ldr	r3, .L726+36	@ tmp302,
 8605              	@ main.c:5321: 		ADC1->CR2 |= ADC_CR2_CAL;							// start calibration
 8606 00ee 41F00401 		orr	r1, r1, #4	@ _217, _216,
 8607 00f2 9160     		str	r1, [r2, #8]	@ _217, MEM[(struct ADC_TypeDef *)1073816576B].CR2
ARM GAS  /tmp/ccjvICQi.s 			page 152


 8608              	.L673:
 8609              	@ main.c:5322: 		while(ADC1->CR2 & ADC_CR2_CAL);				// wait till calibration is done
 8610 00f4 9A68     		ldr	r2, [r3, #8]	@ _218, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 8611 00f6 5107     		lsls	r1, r2, #29	@, _218,
 8612 00f8 FCD4     		bmi	.L673	@,
 8613              	@ main.c:5323: 		ADC1->CR2 |= ADC_CR2_ADON;						// start conversion
 8614 00fa 9A68     		ldr	r2, [r3, #8]	@ _220, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 8615              	@ main.c:5324: 		while( !( ADC1->SR & ADC_SR_STRT ));
 8616 00fc 8149     		ldr	r1, .L726+36	@ tmp306,
 8617              	@ main.c:5323: 		ADC1->CR2 |= ADC_CR2_ADON;						// start conversion
 8618 00fe 42F00102 		orr	r2, r2, #1	@ _221, _220,
 8619 0102 9A60     		str	r2, [r3, #8]	@ _221, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 8620              	.L674:
 8621              	@ main.c:5324: 		while( !( ADC1->SR & ADC_SR_STRT ));
 8622 0104 0B68     		ldr	r3, [r1]	@ _222, MEM[(struct ADC_TypeDef *)1073816576B].SR
 8623 0106 DA06     		lsls	r2, r3, #27	@, _222,
 8624 0108 FCD5     		bpl	.L674	@,
 8625              	@ main.c:5327: 		TIM3->CR1 = TIM_CR1_CEN;
 8626 010a 0122     		movs	r2, #1	@ tmp310,
 8627 010c 7F4B     		ldr	r3, .L726+44	@ tmp308,
 8628              	@ main.c:5328: 		while( ! (ADC1->SR & ADC_SR_EOC) );
 8629 010e 7D49     		ldr	r1, .L726+36	@ tmp311,
 8630              	@ main.c:5327: 		TIM3->CR1 = TIM_CR1_CEN;
 8631 0110 1A80     		strh	r2, [r3]	@ movhi	@ tmp310, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 8632              	.L675:
 8633              	@ main.c:5328: 		while( ! (ADC1->SR & ADC_SR_EOC) );
 8634 0112 0B68     		ldr	r3, [r1]	@ _224, MEM[(struct ADC_TypeDef *)1073816576B].SR
 8635 0114 9B07     		lsls	r3, r3, #30	@, _224,
 8636 0116 FCD5     		bpl	.L675	@,
 8637              	@ main.c:2986: 		f7_dma1 = 0;
 8638 0118 0026     		movs	r6, #0	@ tmp315,
 8639              	@ main.c:3007: 		TFT_Fill(wXmin-1,wYmin-1,wXmax+1,wYmin-1,DGRAY);	// pozioma dolna
 8640 011a 47F6EF35 		movw	r5, #31727	@ tmp316,
 8641              	@ main.c:2986: 		f7_dma1 = 0;
 8642 011e 7C4C     		ldr	r4, .L726+48	@ tmp314,
 8643              	@ main.c:3007: 		TFT_Fill(wXmin-1,wYmin-1,wXmax+1,wYmin-1,DGRAY);	// pozioma dolna
 8644 0120 3346     		mov	r3, r6	@, tmp315
 8645              	@ main.c:2986: 		f7_dma1 = 0;
 8646 0122 6401     		lsls	r4, r4, #5	@ _3, tmp314,
 8647 0124 E661     		str	r6, [r4, #28]	@ tmp315, *_5
 8648              	@ main.c:3007: 		TFT_Fill(wXmin-1,wYmin-1,wXmax+1,wYmin-1,DGRAY);	// pozioma dolna
 8649 0126 3146     		mov	r1, r6	@, tmp315
 8650 0128 0095     		str	r5, [sp]	@ tmp316,
 8651 012a 40F23F12 		movw	r2, #319	@,
 8652 012e 1E20     		movs	r0, #30	@,
 8653 0130 FFF7FEFF 		bl	TFT_Fill	@
 8654              	@ main.c:3008: 		TFT_Fill(wXmin-1,wYmax+1,wXmax+1,wYmax+1,DGRAY);	// pozioma górna
 8655 0134 E423     		movs	r3, #228	@,
 8656 0136 0095     		str	r5, [sp]	@ tmp316,
 8657 0138 1946     		mov	r1, r3	@,
 8658 013a 40F23F12 		movw	r2, #319	@,
 8659 013e 1E20     		movs	r0, #30	@,
 8660 0140 FFF7FEFF 		bl	TFT_Fill	@
 8661              	@ main.c:3009: 		TFT_Fill(wXmin-1,wYmin-1,wXmin-1,wYmax+1,DGRAY);	// pionowa lewa
 8662 0144 1E22     		movs	r2, #30	@,
 8663 0146 3146     		mov	r1, r6	@, tmp315
 8664 0148 1046     		mov	r0, r2	@,
ARM GAS  /tmp/ccjvICQi.s 			page 153


 8665 014a 0095     		str	r5, [sp]	@ tmp316,
 8666 014c E423     		movs	r3, #228	@,
 8667 014e FFF7FEFF 		bl	TFT_Fill	@
 8668              	@ main.c:3010: 		TFT_Fill(wXmax+1,wYmin-1,wXmax+1,wYmax+1,DGRAY);	// pionowa prawa
 8669 0152 40F23F12 		movw	r2, #319	@,
 8670 0156 3146     		mov	r1, r6	@, tmp315
 8671 0158 1046     		mov	r0, r2	@,
 8672 015a 0095     		str	r5, [sp]	@ tmp316,
 8673 015c E423     		movs	r3, #228	@,
 8674 015e FFF7FEFF 		bl	TFT_Fill	@
 8675              	@ main.c:3014: 			yb[f] =wYmin;	
 8676 0162 0123     		movs	r3, #1	@ tmp321,
 8677 0164 DFF8DCA1 		ldr	r10, .L726+100	@ tmp494,
 8678              	@ main.c:3015: 			yn[f] =wYmin;
 8679 0168 6A4D     		ldr	r5, .L726+52	@ tmp495,
 8680              	@ main.c:3031: 		UaPutS("\r\n wXlen ");	sint2uart(wXlen); 
 8681 016a 6B48     		ldr	r0, .L726+56	@,
 8682              	@ main.c:3014: 			yb[f] =wYmin;	
 8683 016c 8AF80030 		strb	r3, [r10]	@ tmp321, yb
 8684              	@ main.c:3015: 			yn[f] =wYmin;
 8685 0170 2B70     		strb	r3, [r5]	@ tmp321, yn
 8686              	@ main.c:3031: 		UaPutS("\r\n wXlen ");	sint2uart(wXlen); 
 8687 0172 FFF7FEFF 		bl	UaPutS	@
 8688 0176 4FF49070 		mov	r0, #288	@,
 8689 017a FFF7FEFF 		bl	sint2uart	@
 8690              	@ main.c:3034: 		DMA1_Channel1->CNDTR = wXlen*nMES;					//Buffor size 
 8691 017e 4FF49070 		mov	r0, #288	@ tmp330,
 8692              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 8693 0182 4FF4006C 		mov	ip, #2048	@ tmp332,
 8694              	@ main.c:3057: 			dma_buf[i]=0x10;
 8695 0186 1027     		movs	r7, #16	@ tmp345,
 8696              	@ main.c:3033: 		DMA1_Channel1->CMAR = (uint32_t)dma_buf;	 	//Destination address:
 8697 0188 5A4A     		ldr	r2, .L726+20	@ tmp328,
 8698              	@ main.c:3042: 		TIM4->ARR   = BKP->DR42; //1200-1
 8699 018a 3346     		mov	r3, r6	@ ivtmp.733, tmp315
 8700              	@ main.c:3033: 		DMA1_Channel1->CMAR = (uint32_t)dma_buf;	 	//Destination address:
 8701 018c 634E     		ldr	r6, .L726+60	@ tmp496,
 8702              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 8703 018e 6449     		ldr	r1, .L726+64	@ tmp331,
 8704              	@ main.c:3033: 		DMA1_Channel1->CMAR = (uint32_t)dma_buf;	 	//Destination address:
 8705 0190 D660     		str	r6, [r2, #12]	@ tmp496, MEM[(struct DMA_Channel_TypeDef *)1073872904B].CMAR
 8706              	@ main.c:3034: 		DMA1_Channel1->CNDTR = wXlen*nMES;					//Buffor size 
 8707 0192 5060     		str	r0, [r2, #4]	@ tmp330, MEM[(struct DMA_Channel_TypeDef *)1073872904B].CNDTR
 8708              	@ main.c:3041: 		TIM4->PSC   = BKP->DR41; //1000-1
 8709 0194 6348     		ldr	r0, .L726+68	@ tmp333,
 8710              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 8711 0196 C1F800C0 		str	ip, [r1]	@ tmp332, MEM[(struct NVIC_Type *)3758153984B].ISER
 8712              	@ main.c:3041: 		TIM4->PSC   = BKP->DR41; //1000-1
 8713 019a B0F8B820 		ldrh	r2, [r0, #184]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8714 019e 5849     		ldr	r1, .L726+32	@ tmp336,
 8715 01a0 92B2     		uxth	r2, r2	@ _9, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8716 01a2 0A85     		strh	r2, [r1, #40]	@ movhi	@ _9, MEM[(struct TIM_TypeDef *)1073743872B].PSC
 8717              	@ main.c:3042: 		TIM4->ARR   = BKP->DR42; //1200-1
 8718 01a4 B0F8BC20 		ldrh	r2, [r0, #188]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR42
 8719 01a8 92B2     		uxth	r2, r2	@ _10, MEM[(struct BKP_TypeDef *)1073769472B].DR42
 8720 01aa 8A85     		strh	r2, [r1, #44]	@ movhi	@ _10, MEM[(struct TIM_TypeDef *)1073743872B].ARR
 8721              	.L676:
ARM GAS  /tmp/ccjvICQi.s 			page 154


 8722              	@ main.c:3057: 			dma_buf[i]=0x10;
 8723 01ac 26F81370 		strh	r7, [r6, r3, lsl #1]	@ movhi	@ tmp345, dma_buf
 8724 01b0 0133     		adds	r3, r3, #1	@ ivtmp.733, ivtmp.733,
 8725              	@ main.c:3054: 		for(u16 i=0;i<wXlen;i++){
 8726 01b2 B3F5907F 		cmp	r3, #288	@ ivtmp.733,
 8727 01b6 F9D1     		bne	.L676	@,
 8728              	@ main.c:2961: 		u16 x,c_dma1,r_dma_buf,idx,c_num,n1=10,cnt_dma=0;
 8729 01b8 4FF00008 		mov	r8, #0	@ cnt_dma,
 8730 01bc 04F10C03 		add	r3, r4, #12	@ _82, _3,
 8731 01c0 0593     		str	r3, [sp, #20]	@ _82, %sfp
 8732              	.L677:
 8733              	@ main.c:3062: 			if( STCLK_MS*BKP->DR41 < (trg0 - SysTick->VAL) ){
 8734 01c2 42F22830 		movw	r0, #9000	@ tmp367,
 8735 01c6 584F     		ldr	r7, .L726+72	@ tmp523,
 8736 01c8 08F10102 		add	r2, r8, #1	@ tmp351, cnt_dma,
 8737 01cc A7FB0213 		umull	r1, r3, r7, r2	@ tmp518, tmp352, tmp523, tmp351
 8738 01d0 5449     		ldr	r1, .L726+68	@ tmp524,
 8739 01d2 464C     		ldr	r4, .L726+12	@ tmp526,
 8740 01d4 B1F8B810 		ldrh	r1, [r1, #184]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8741 01d8 9B09     		lsrs	r3, r3, #6	@ _95, tmp352,
 8742 01da 00FB01F0 		mul	r0, r0, r1	@ tmp366, tmp367, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8743 01de 5349     		ldr	r1, .L726+76	@ tmp525,
 8744 01e0 03EBC303 		add	r3, r3, r3, lsl #3	@ tmp356, _95, _95,
 8745 01e4 0968     		ldr	r1, [r1]	@ trg0.210_16, trg0
 8746 01e6 A468     		ldr	r4, [r4, #8]	@ _17, MEM[(struct SysTick_Type *)3758153744B].VAL
 8747 01e8 A2EB4313 		sub	r3, r2, r3, lsl #5	@ _95, tmp351, tmp356,
 8748 01ec 091B     		subs	r1, r1, r4	@ tmp368, trg0.210_16, _17
 8749 01ee 8842     		cmp	r0, r1	@ tmp366, tmp368
 8750 01f0 1FFA83F9 		uxth	r9, r3	@ _152, _95
 8751 01f4 4246     		mov	r2, r8	@ _91, cnt_dma
 8752 01f6 13D2     		bcs	.L678	@,
 8753              	@ main.c:3065: 				dma_buf[cnt_dma]=0x1;
 8754 01f8 0120     		movs	r0, #1	@ tmp373,
 8755 01fa 1A18     		adds	r2, r3, r0	@ tmp374, _95,
 8756 01fc A7FB0271 		umull	r7, r1, r7, r2	@ tmp519, tmp375, tmp527, tmp374
 8757 0200 8909     		lsrs	r1, r1, #6	@ _49, tmp375,
 8758 0202 01EBC101 		add	r1, r1, r1, lsl #3	@ tmp379, _49, _49,
 8759 0206 A2EB4111 		sub	r1, r2, r1, lsl #5	@ _49, tmp374, tmp379,
 8760              	@ main.c:3063: 				trg0 = SysTick->VAL;
 8761 020a 384A     		ldr	r2, .L726+12	@ tmp528,
 8762 020c 474C     		ldr	r4, .L726+76	@ tmp529,
 8763 020e 9268     		ldr	r2, [r2, #8]	@ _19, MEM[(struct SysTick_Type *)3758153744B].VAL
 8764              	@ main.c:3064: 				cnt_dma=(cnt_dma+1)%wXlen;
 8765 0210 C846     		mov	r8, r9	@ cnt_dma, _152
 8766              	@ main.c:3063: 				trg0 = SysTick->VAL;
 8767 0212 2260     		str	r2, [r4]	@ _19, trg0
 8768              	@ main.c:3065: 				dma_buf[cnt_dma]=0x1;
 8769 0214 26F81300 		strh	r0, [r6, r3, lsl #1]	@ movhi	@ tmp373, dma_buf
 8770 0218 1A46     		mov	r2, r3	@ _91, _95
 8771 021a 0B46     		mov	r3, r1	@ _95, _49
 8772 021c 1FFA81F9 		uxth	r9, r1	@ _152, _95
 8773              	.L678:
 8774              	@ main.c:3070: 			if (c_dma1 != wXlen-cnt_dma){
 8775 0220 0499     		ldr	r1, [sp, #16]	@ c_dma1, %sfp
 8776 0222 C2F59072 		rsb	r2, r2, #288	@ tmp389, _91,
 8777 0226 9142     		cmp	r1, r2	@ c_dma1, tmp389
 8778 0228 24D1     		bne	.L719	@,
ARM GAS  /tmp/ccjvICQi.s 			page 155


 8779              	.L679:
 8780              	@ main.c:3177: 			if( STCLK_MS*500 < (trg1 - SysTick->VAL) ){
 8781 022a 414B     		ldr	r3, .L726+80	@ tmp543,
 8782 022c 2F4A     		ldr	r2, .L726+12	@ tmp544,
 8783 022e 1B68     		ldr	r3, [r3]	@ trg1.217_60, trg1
 8784 0230 9268     		ldr	r2, [r2, #8]	@ _61, MEM[(struct SysTick_Type *)3758153744B].VAL
 8785 0232 9B1A     		subs	r3, r3, r2	@ tmp438, trg1.217_60, _61
 8786 0234 3F4A     		ldr	r2, .L726+84	@ tmp545,
 8787 0236 9342     		cmp	r3, r2	@ tmp438, tmp545
 8788 0238 00F2E680 		bhi	.L720	@,
 8789              	.L689:
 8790              	@ main.c:3195: 			if(p_Fifo1->rct){	// Wywolanie interfejsu szeregowego gdy odebrano znak
 8791 023c 3E4B     		ldr	r3, .L726+88	@ tmp553,
 8792 023e 1B68     		ldr	r3, [r3]	@ p_Fifo1.219_72, p_Fifo1
 8793 0240 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.219_72->rct
 8794 0242 9BB2     		uxth	r3, r3	@ _73, p_Fifo1.219_72->rct
 8795 0244 002B     		cmp	r3, #0	@ _73
 8796 0246 40F0C780 		bne	.L721	@
 8797              	.L691:
 8798              	@ main.c:3232: 			if(f3_rtc_1sec){	// Aktualizacja zegara
 8799 024a 059A     		ldr	r2, [sp, #20]	@ _82, %sfp
 8800 024c 1368     		ldr	r3, [r2]	@ _83, *_82
 8801 024e 002B     		cmp	r3, #0	@ _83
 8802 0250 B7D0     		beq	.L677	@
 8803              	@ main.c:3233: 				f3_rtc_1sec = 0;
 8804 0252 0020     		movs	r0, #0	@ tmp478,
 8805              	@ main.c:3235: 				rtc_GetTime(0, &Rtc);
 8806 0254 2449     		ldr	r1, .L726+8	@,
 8807              	@ main.c:3233: 				f3_rtc_1sec = 0;
 8808 0256 1060     		str	r0, [r2]	@ tmp478, *_82
 8809              	@ main.c:3235: 				rtc_GetTime(0, &Rtc);
 8810 0258 FFF7FEFF 		bl	rtc_GetTime	@
 8811              	@ main.c:3236: 				CopyClock(tbuf,&Rtc); TFT_txt(tbuf,180, 229,YELLOW);
 8812 025c 2249     		ldr	r1, .L726+8	@,
 8813 025e 3748     		ldr	r0, .L726+92	@,
 8814 0260 FFF7FEFF 		bl	CopyClock	@
 8815 0264 4FF6E073 		movw	r3, #65504	@,
 8816 0268 E522     		movs	r2, #229	@,
 8817 026a B421     		movs	r1, #180	@,
 8818 026c 3348     		ldr	r0, .L726+92	@,
 8819 026e FFF7FEFF 		bl	TFT_txt	@
 8820 0272 A6E7     		b	.L677	@
 8821              	.L719:
 8822              	@ main.c:3075: 				dma_buf[cnt_dma]=0x1;
 8823 0274 4FF0010B 		mov	fp, #1	@ tmp393,
 8824              	@ main.c:3107: 				TFT_Fill(wXmin+(wXmax-wXmin)/2,wYmin-1,wXmin+(wXmax-wXmin)/2,wYmax+1,DGRAY);	// 
 8825 0278 AE22     		movs	r2, #174	@,
 8826 027a 47F6EF37 		movw	r7, #31727	@ tmp398,
 8827              	@ main.c:3075: 				dma_buf[cnt_dma]=0x1;
 8828 027e 26F813B0 		strh	fp, [r6, r3, lsl #1]	@ movhi	@ tmp393, dma_buf
 8829              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 8830 0282 1A48     		ldr	r0, .L726+12	@ tmp533,
 8831 0284 2E4B     		ldr	r3, .L726+96	@ tmp532,
 8832              	@ main.c:3072: 				c_dma1 = wXlen-cnt_dma;
 8833 0286 C8F59078 		rsb	r8, r8, #288	@ tmp390, cnt_dma,
 8834              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 8835 028a 1B68     		ldr	r3, [r3]	@ Timt.100_184, Timt
ARM GAS  /tmp/ccjvICQi.s 			page 156


 8836 028c 8168     		ldr	r1, [r0, #8]	@ _185, MEM[(struct SysTick_Type *)3758153744B].VAL
 8837              	@ main.c:3072: 				c_dma1 = wXlen-cnt_dma;
 8838 028e 1FFA88F4 		uxth	r4, r8	@ c_dma1, tmp390
 8839              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 8840 0292 5B1A     		subs	r3, r3, r1	@ _186, Timt.100_184, _185
 8841 0294 0993     		str	r3, [sp, #36]	@ _186, MEM[(volatile u32 *)&tim]
 8842              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 8843 0296 D0F808C0 		ldr	ip, [r0, #8]	@ _183, MEM[(struct SysTick_Type *)3758153744B].VAL
 8844              	@ main.c:3072: 				c_dma1 = wXlen-cnt_dma;
 8845 029a 0494     		str	r4, [sp, #16]	@ c_dma1, %sfp
 8846              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 8847 029c 284C     		ldr	r4, .L726+96	@ tmp537,
 8848              	@ main.c:3107: 				TFT_Fill(wXmin+(wXmax-wXmin)/2,wYmin-1,wXmin+(wXmax-wXmin)/2,wYmax+1,DGRAY);	// 
 8849 029e 1046     		mov	r0, r2	@,
 8850 02a0 0097     		str	r7, [sp]	@ tmp398,
 8851 02a2 E423     		movs	r3, #228	@,
 8852              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 8853 02a4 C4F800C0 		str	ip, [r4]	@ _183, Timt
 8854              	@ main.c:3107: 				TFT_Fill(wXmin+(wXmax-wXmin)/2,wYmin-1,wXmin+(wXmax-wXmin)/2,wYmax+1,DGRAY);	// 
 8855 02a8 0021     		movs	r1, #0	@,
 8856 02aa FFF7FEFF 		bl	TFT_Fill	@
 8857              	@ main.c:3108: 				TFT_Fill(wXmin-1,(wYmax-wYmin)/2,wXmax+1,(wYmax-wYmin)/2,DGRAY);						// pozioma
 8858 02ae 7123     		movs	r3, #113	@,
 8859 02b0 40F23F12 		movw	r2, #319	@,
 8860 02b4 1946     		mov	r1, r3	@,
 8861 02b6 1E20     		movs	r0, #30	@,
 8862 02b8 0097     		str	r7, [sp]	@ tmp398,
 8863 02ba FFF7FEFF 		bl	TFT_Fill	@
 8864              	@ main.c:3110: 				TFT_SetWindow(wXmin,wYmin,wXmax,wYmax);
 8865 02be 5946     		mov	r1, fp	@, tmp393
 8866 02c0 E323     		movs	r3, #227	@,
 8867 02c2 4FF49F72 		mov	r2, #318	@,
 8868 02c6 1F20     		movs	r0, #31	@,
 8869 02c8 FFF7FEFF 		bl	TFT_SetWindow	@
 8870 02cc 09F1FF33 		add	r3, r9, #-1	@ tmp504, _152,
 8871 02d0 0024     		movs	r4, #0	@ ivtmp.726,
 8872 02d2 2978     		ldrb	r1, [r5]	@ zero_extendqisi2	@ pretmp_47, yn
 8873 02d4 09F21F1B 		addw	fp, r9, #287	@ tmp503, _152,
 8874 02d8 0393     		str	r3, [sp, #12]	@ tmp504, %sfp
 8875              	@ main.c:3164: 						else {	yn[i]=wYmax-wYmin;		}
 8876 02da 4FF0E208 		mov	r8, #226	@ tmp505,
 8877 02de 46E0     		b	.L680	@
 8878              	.L727:
 8879              		.align	2
 8880              	.L726:
 8881 02e0 00000000 		.word	.LC160
 8882 02e4 18000000 		.word	.LC161
 8883 02e8 00000000 		.word	Rtc
 8884 02ec 10E000E0 		.word	-536813552
 8885 02f0 00100240 		.word	1073876992
 8886 02f4 08000240 		.word	1073872904
 8887 02f8 000C0140 		.word	1073810432
 8888 02fc 00000000 		.word	delay_us
 8889 0300 00080040 		.word	1073743872
 8890 0304 00240140 		.word	1073816576
 8891 0308 01011A00 		.word	1704193
 8892 030c 00040040 		.word	1073742848
ARM GAS  /tmp/ccjvICQi.s 			page 157


 8893 0310 00001001 		.word	.LANCHOR18+17825792
 8894 0314 00000000 		.word	.LANCHOR32
 8895 0318 28000000 		.word	.LC162
 8896 031c 00000000 		.word	.LANCHOR33
 8897 0320 00E100E0 		.word	-536813312
 8898 0324 006C0040 		.word	1073769472
 8899 0328 398EE338 		.word	954437177
 8900 032c 00000000 		.word	trg0
 8901 0330 00000000 		.word	trg1
 8902 0334 20AA4400 		.word	4500000
 8903 0338 00000000 		.word	p_Fifo1
 8904 033c 00000000 		.word	.LANCHOR35
 8905 0340 00000000 		.word	Timt
 8906 0344 00000000 		.word	.LANCHOR31
 8907              	.L697:
 8908              	@ main.c:3163: 						yn[i]=wYmin + (r_dma_buf);	}
 8909 0348 0133     		adds	r3, r3, #1	@ tmp423, _43,
 8910              	@ main.c:3168: 					if(x==wXlen-2){
 8911 034a B4F58F7F 		cmp	r4, #286	@ ivtmp.726,
 8912              	@ main.c:3163: 						yn[i]=wYmin + (r_dma_buf);	}
 8913 034e 2B70     		strb	r3, [r5]	@ tmp423, yn
 8914              	@ main.c:3168: 					if(x==wXlen-2){
 8915 0350 20D0     		beq	.L722	@,
 8916              	.L686:
 8917              	@ main.c:3112: 				for(x=0;x<wXlen;x++){
 8918 0352 40F21F13 		movw	r3, #287	@ tmp435,
 8919 0356 9C42     		cmp	r4, r3	@ ivtmp.726, tmp435
 8920 0358 3CD0     		beq	.L723	@,
 8921              	@ main.c:3134: 					if( x>0 && x< wXlen-0 ){
 8922 035a B4F58F7F 		cmp	r4, #286	@ ivtmp.726,
 8923 035e 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2	@ prephitmp_27, yn
 8924 0360 1DD9     		bls	.L687	@,
 8925 0362 671C     		adds	r7, r4, #1	@ tmp406, ivtmp.726,
 8926 0364 BFB2     		uxth	r7, r7	@ ivtmp.726, tmp406
 8927              	@ main.c:3143: 					if(x>1){
 8928 0366 012F     		cmp	r7, #1	@ ivtmp.726,
 8929 0368 25D1     		bne	.L724	@,
 8930              	.L682:
 8931              	@ main.c:3065: 				dma_buf[cnt_dma]=0x1;
 8932 036a 3C46     		mov	r4, r7	@ ivtmp.726, ivtmp.726
 8933 036c 1146     		mov	r1, r2	@ pretmp_47, prephitmp_27
 8934              	.L680:
 8935              	@ main.c:3154: 					if(x<cnt_dma)	idx=(0    +cnt_dma-x-1)*nMES; 
 8936 036e A145     		cmp	r9, r4	@ _152, ivtmp.726
 8937 0370 8ABF     		itet	hi
 8938 0372 039B     		ldrhi	r3, [sp, #12]	@ tmp504, %sfp
 8939 0374 ABEB0402 		subls	r2, fp, r4	@ tmp420, tmp503, ivtmp.726
 8940 0378 1A1B     		subhi	r2, r3, r4	@ tmp417, tmp504, ivtmp.726
 8941 037a 92B2     		uxth	r2, r2	@ idx, tmp420
 8942              	@ main.c:3159: 						r_dma_buf =(dma_buf[i+idx]-rz[i])*mn[i]/dl[i]; 
 8943 037c 36F81230 		ldrh	r3, [r6, r2, lsl #1]	@, dma_buf
 8944              	@ main.c:3160: 						yb[i]=yn[i];
 8945 0380 8AF80010 		strb	r1, [r10]	@ pretmp_47, yb
 8946              	@ main.c:3159: 						r_dma_buf =(dma_buf[i+idx]-rz[i])*mn[i]/dl[i]; 
 8947 0384 9BB2     		uxth	r3, r3	@ _43, tmp486
 8948              	@ main.c:3162: 						if(r_dma_buf < (wYmax-wYmin) ){
 8949 0386 E12B     		cmp	r3, #225	@ _43,
ARM GAS  /tmp/ccjvICQi.s 			page 158


 8950 0388 DED9     		bls	.L697	@,
 8951              	@ main.c:3168: 					if(x==wXlen-2){
 8952 038a B4F58F7F 		cmp	r4, #286	@ ivtmp.726,
 8953              	@ main.c:3164: 						else {	yn[i]=wYmax-wYmin;		}
 8954 038e 85F80080 		strb	r8, [r5]	@ tmp505, yn
 8955              	@ main.c:3168: 					if(x==wXlen-2){
 8956 0392 DED1     		bne	.L686	@,
 8957              	.L722:
 8958              	@ main.c:3170: 							val[i]=dma_buf[i+idx];
 8959 0394 36F81230 		ldrh	r3, [r6, r2, lsl #1]	@, dma_buf
 8960 0398 3D48     		ldr	r0, .L728	@ tmp542,
 8961 039a 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2	@ prephitmp_27, yn
 8962 039c 0380     		strh	r3, [r0]	@ movhi	@ tmp431, val
 8963              	.L687:
 8964              	@ main.c:3137: 							TFT_dy(wXmin+x-1, yb[i], yn[i],BLACK,WID);
 8965 039e 0023     		movs	r3, #0	@ tmp404,
 8966 03a0 04F11F00 		add	r0, r4, #31	@ tmp402, ivtmp.726,
 8967 03a4 671C     		adds	r7, r4, #1	@ tmp406, ivtmp.726,
 8968 03a6 0093     		str	r3, [sp]	@ tmp404,
 8969 03a8 80B2     		uxth	r0, r0	@, tmp402
 8970 03aa BFB2     		uxth	r7, r7	@ ivtmp.726, tmp406
 8971 03ac FFF7FEFF 		bl	TFT_dy	@
 8972              	@ main.c:3143: 					if(x>1){
 8973 03b0 012F     		cmp	r7, #1	@ ivtmp.726,
 8974 03b2 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2	@ prephitmp_27, yn
 8975 03b4 D9D0     		beq	.L682	@,
 8976              	.L724:
 8977              	@ main.c:3145: 							TFT_dy(wXmin+x-2, yb[i], yn[i],ColCon[6+i],WID);
 8978 03b6 4FF0000C 		mov	ip, #0	@ tmp413,
 8979 03ba 364B     		ldr	r3, .L728+4	@ tmp540,
 8980 03bc 04F11E00 		add	r0, r4, #30	@ tmp411, ivtmp.726,
 8981 03c0 9B89     		ldrh	r3, [r3, #12]	@ ColCon, ColCon
 8982 03c2 9AF80010 		ldrb	r1, [r10]	@ zero_extendqisi2	@ yb, yb
 8983 03c6 80B2     		uxth	r0, r0	@, tmp411
 8984 03c8 CDF800C0 		str	ip, [sp]	@ tmp413,
 8985 03cc FFF7FEFF 		bl	TFT_dy	@
 8986 03d0 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2	@ prephitmp_27, yn
 8987 03d2 CAE7     		b	.L682	@
 8988              	.L723:
 8989 03d4 C846     		mov	r8, r9	@ cnt_dma, _152
 8990 03d6 28E7     		b	.L679	@
 8991              	.L721:
 8992              	@ main.c:3196: 				UART_getChar(&chr);
 8993 03d8 0DF11F00 		add	r0, sp, #31	@ tmp554,,
 8994 03dc FFF7FEFF 		bl	UART_getChar	@
 8995              	@ main.c:3197: 				if(chr=='q'){
 8996 03e0 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2	@ chr.220_74, chr
 8997 03e4 712B     		cmp	r3, #113	@ chr.220_74,
 8998 03e6 31D0     		beq	.L725	@,
 8999              	@ main.c:3211: 				if(chr=='b'){	
 9000 03e8 622B     		cmp	r3, #98	@ chr.220_74,
 9001 03ea 7FF42EAF 		bne	.L691	@,
 9002              	.L694:
 9003              	@ main.c:3213: 					TFT_Clear(BLACK);
 9004 03ee 0020     		movs	r0, #0	@,
 9005 03f0 FFF7FEFF 		bl	TFT_Clear	@
 9006              	@ main.c:3214: 					TFT_Fill(wXmin-1,wYmin-1,wXmin-1,wYmax+1,DGRAY);	// pionowa lewa
ARM GAS  /tmp/ccjvICQi.s 			page 159


 9007 03f4 47F6EF33 		movw	r3, #31727	@ tmp477,
 9008 03f8 1E22     		movs	r2, #30	@,
 9009 03fa 0093     		str	r3, [sp]	@ tmp477,
 9010 03fc 1046     		mov	r0, r2	@,
 9011 03fe E423     		movs	r3, #228	@,
 9012 0400 0021     		movs	r1, #0	@,
 9013 0402 FFF7FEFF 		bl	TFT_Fill	@
 9014 0406 20E7     		b	.L691	@
 9015              	.L720:
 9016              	@ main.c:3178: 				trg1 = SysTick->VAL;
 9017 0408 234B     		ldr	r3, .L728+8	@ tmp546,
 9018              	@ main.c:3188: 				TFT_txt(int2str(val[0],str,4,0),30,229-12*0,WHITE);
 9019 040a 2148     		ldr	r0, .L728	@ tmp548,
 9020              	@ main.c:3178: 				trg1 = SysTick->VAL;
 9021 040c 9C68     		ldr	r4, [r3, #8]	@ _63, MEM[(struct SysTick_Type *)3758153744B].VAL
 9022 040e 234F     		ldr	r7, .L728+12	@ tmp549,
 9023              	@ main.c:3188: 				TFT_txt(int2str(val[0],str,4,0),30,229-12*0,WHITE);
 9024 0410 08A9     		add	r1, sp, #32	@ tmp547,,
 9025 0412 0023     		movs	r3, #0	@,
 9026 0414 0422     		movs	r2, #4	@,
 9027 0416 0088     		ldrh	r0, [r0]	@, val
 9028              	@ main.c:3178: 				trg1 = SysTick->VAL;
 9029 0418 3C60     		str	r4, [r7]	@ _63, trg1
 9030              	@ main.c:3188: 				TFT_txt(int2str(val[0],str,4,0),30,229-12*0,WHITE);
 9031 041a FFF7FEFF 		bl	int2str	@
 9032 041e 4FF6FF73 		movw	r3, #65535	@,
 9033 0422 E522     		movs	r2, #229	@,
 9034 0424 1E21     		movs	r1, #30	@,
 9035 0426 FFF7FEFF 		bl	TFT_txt	@
 9036              	@ main.c:3190: 				TFT_txt(int2str(tim/TIM_MS,str,5,0),110,229-12*0,ColCon[6]);
 9037 042a 099A     		ldr	r2, [sp, #36]	@ tim, tim
 9038 042c 1C49     		ldr	r1, .L728+16	@ tmp550,
 9039 042e 0023     		movs	r3, #0	@,
 9040 0430 A1FB0220 		umull	r2, r0, r1, r2	@ tmp520, tmp448, tmp550, tim
 9041 0434 08A9     		add	r1, sp, #32	@ tmp551,,
 9042 0436 0522     		movs	r2, #5	@,
 9043 0438 400B     		lsrs	r0, r0, #13	@, tmp448,
 9044 043a FFF7FEFF 		bl	int2str	@
 9045 043e 154B     		ldr	r3, .L728+4	@ tmp552,
 9046 0440 E522     		movs	r2, #229	@,
 9047 0442 9B89     		ldrh	r3, [r3, #12]	@, ColCon
 9048 0444 6E21     		movs	r1, #110	@,
 9049 0446 FFF7FEFF 		bl	TFT_txt	@
 9050 044a F7E6     		b	.L689	@
 9051              	.L725:
 9052              	@ main.c:3198: 					UaPutS("\r\n TIM4->PSC/ARR="); 	sint2uart(TIM4->PSC);	UaPutC('/'); c_num=UART_g
 9053 044c 154C     		ldr	r4, .L728+20	@ tmp457,
 9054 044e 1648     		ldr	r0, .L728+24	@,
 9055 0450 FFF7FEFF 		bl	UaPutS	@
 9056 0454 208D     		ldrh	r0, [r4, #40]	@, MEM[(struct TIM_TypeDef *)1073743872B].PSC
 9057 0456 FFF7FEFF 		bl	sint2uart	@
 9058 045a 2F20     		movs	r0, #47	@,
 9059 045c FFF7FEFF 		bl	UaPutC	@
 9060 0460 FFF7FEFF 		bl	UART_getNum	@
 9061 0464 80B2     		uxth	r0, r0	@ c_num,
 9062              	@ main.c:3199: 					if(c_num){ 
 9063 0466 60B1     		cbz	r0, .L693	@ c_num,
ARM GAS  /tmp/ccjvICQi.s 			page 160


 9064              	@ main.c:3200: 						BKP->DR41=c_num; TIM4->PSC=BKP->DR41;
 9065 0468 104A     		ldr	r2, .L728+28	@ tmp555,
 9066 046a A2F8B800 		strh	r0, [r2, #184]	@ movhi	@ c_num, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 9067 046e B2F8B830 		ldrh	r3, [r2, #184]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 9068 0472 9BB2     		uxth	r3, r3	@ _78, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 9069 0474 2385     		strh	r3, [r4, #40]	@ movhi	@ _78, MEM[(struct TIM_TypeDef *)1073743872B].PSC
 9070              	@ main.c:3201: 						BKP->DR42=c_num; TIM4->ARR=BKP->DR42;
 9071 0476 A2F8BC00 		strh	r0, [r2, #188]	@ movhi	@ c_num, MEM[(struct BKP_TypeDef *)1073769472B].DR42
 9072 047a B2F8BC30 		ldrh	r3, [r2, #188]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR42
 9073 047e 9BB2     		uxth	r3, r3	@ _79, MEM[(struct BKP_TypeDef *)1073769472B].DR42
 9074 0480 A385     		strh	r3, [r4, #44]	@ movhi	@ _79, MEM[(struct TIM_TypeDef *)1073743872B].ARR
 9075              	.L693:
 9076              	@ main.c:3207: 					UaPutS("\r\n");
 9077 0482 0B48     		ldr	r0, .L728+32	@,
 9078 0484 FFF7FEFF 		bl	UaPutS	@
 9079              	@ main.c:3208: 					chr='b';
 9080 0488 6223     		movs	r3, #98	@ tmp475,
 9081 048a 8DF81F30 		strb	r3, [sp, #31]	@ tmp475, chr
 9082 048e AEE7     		b	.L694	@
 9083              	.L729:
 9084              		.align	2
 9085              	.L728:
 9086 0490 00000000 		.word	.LANCHOR34
 9087 0494 00000000 		.word	ColCon
 9088 0498 10E000E0 		.word	-536813552
 9089 049c 00000000 		.word	trg1
 9090 04a0 D55204E9 		.word	-385592619
 9091 04a4 00080040 		.word	1073743872
 9092 04a8 34000000 		.word	.LC163
 9093 04ac 006C0040 		.word	1073769472
 9094 04b0 04000000 		.word	.LC13
 9095              		.size	Intro2, .-Intro2
 9096              		.section	.text.CopyTime,"ax",%progbits
 9097              		.align	1
 9098              		.p2align 2,,3
 9099              		.global	CopyTime
 9100              		.syntax unified
 9101              		.thumb
 9102              		.thumb_func
 9103              		.fpu softvfp
 9104              		.type	CopyTime, %function
 9105              	CopyTime:
 9106              		@ args = 0, pretend = 0, frame = 8
 9107              		@ frame_needed = 0, uses_anonymous_args = 0
 9108 0000 30B5     		push	{r4, r5, lr}	@
 9109 0002 0D46     		mov	r5, r1	@ lrtc, lrtc
 9110 0004 83B0     		sub	sp, sp, #12	@,,
 9111              	@ main.c:5098: void CopyTime(char *dczas,  T_RTC *lrtc)	{
 9112 0006 0446     		mov	r4, r0	@ dczas, dczas
 9113              	@ main.c:5103: 		dczas += 0; memcpy(dczas,unt2str(lrtc->hor,tbuf,2) ,2);
 9114 0008 01A9     		add	r1, sp, #4	@ tmp139,,
 9115 000a A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2	@, lrtc_12(D)->hor
 9116 000c 0222     		movs	r2, #2	@,
 9117 000e FFF7FEFF 		bl	unt2str	@
 9118 0012 0388     		ldrh	r3, [r0]	@ unaligned	@ _14, MEM[(char * {ref-all})_3]
 9119              	@ main.c:5104: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 9120 0014 01A9     		add	r1, sp, #4	@ tmp140,,
ARM GAS  /tmp/ccjvICQi.s 			page 161


 9121              	@ main.c:5103: 		dczas += 0; memcpy(dczas,unt2str(lrtc->hor,tbuf,2) ,2);
 9122 0016 2380     		strh	r3, [r4]	@ unaligned	@ _14, MEM[(char * {ref-all})dczas_10(D)]
 9123              	@ main.c:5104: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 9124 0018 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2	@, lrtc_12(D)->min
 9125 001a 0222     		movs	r2, #2	@,
 9126 001c FFF7FEFF 		bl	unt2str	@
 9127 0020 0388     		ldrh	r3, [r0]	@ unaligned	@ _17, MEM[(char * {ref-all})_6]
 9128              	@ main.c:5105: 		dczas += 3; memcpy(dczas,unt2str(lrtc->sec,tbuf,2) ,2);
 9129 0022 01A9     		add	r1, sp, #4	@ tmp141,,
 9130              	@ main.c:5104: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 9131 0024 A4F80330 		strh	r3, [r4, #3]	@ unaligned	@ _17, MEM[(char * {ref-all})dczas_10(D) + 3B]
 9132              	@ main.c:5105: 		dczas += 3; memcpy(dczas,unt2str(lrtc->sec,tbuf,2) ,2);
 9133 0028 2878     		ldrb	r0, [r5]	@ zero_extendqisi2	@, lrtc_12(D)->sec
 9134 002a 0222     		movs	r2, #2	@,
 9135 002c FFF7FEFF 		bl	unt2str	@
 9136 0030 0388     		ldrh	r3, [r0]	@ unaligned	@ _20, MEM[(char * {ref-all})_9]
 9137 0032 E380     		strh	r3, [r4, #6]	@ unaligned	@ _20, MEM[(char * {ref-all})dczas_10(D) + 6B]
 9138              	@ main.c:5106: 	}
 9139 0034 03B0     		add	sp, sp, #12	@,,
 9140              		@ sp needed	@
 9141 0036 30BD     		pop	{r4, r5, pc}	@
 9142              		.size	CopyTime, .-CopyTime
 9143              		.section	.text.CopyDate,"ax",%progbits
 9144              		.align	1
 9145              		.p2align 2,,3
 9146              		.global	CopyDate
 9147              		.syntax unified
 9148              		.thumb
 9149              		.thumb_func
 9150              		.fpu softvfp
 9151              		.type	CopyDate, %function
 9152              	CopyDate:
 9153              		@ args = 0, pretend = 0, frame = 8
 9154              		@ frame_needed = 0, uses_anonymous_args = 0
 9155 0000 30B5     		push	{r4, r5, lr}	@
 9156 0002 0D46     		mov	r5, r1	@ lrtc, lrtc
 9157 0004 83B0     		sub	sp, sp, #12	@,,
 9158              	@ main.c:5107: void CopyDate(char *dczas,  T_RTC *lrtc)	{
 9159 0006 0446     		mov	r4, r0	@ dczas, dczas
 9160              	@ main.c:5110: 		dczas += 0;	memcpy(dczas,unt2str(lrtc->yer,tbuf,4) ,4);
 9161 0008 6946     		mov	r1, sp	@,
 9162 000a E888     		ldrh	r0, [r5, #6]	@, lrtc_12(D)->yer
 9163 000c 0422     		movs	r2, #4	@,
 9164 000e FFF7FEFF 		bl	unt2str	@
 9165 0012 0368     		ldr	r3, [r0]	@ unaligned	@ tmp126, MEM[(char * {ref-all})_3]
 9166              	@ main.c:5111: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 9167 0014 6946     		mov	r1, sp	@,
 9168              	@ main.c:5110: 		dczas += 0;	memcpy(dczas,unt2str(lrtc->yer,tbuf,4) ,4);
 9169 0016 2360     		str	r3, [r4]	@ unaligned	@ tmp126, MEM[(char * {ref-all})dczas_10(D)]
 9170              	@ main.c:5111: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 9171 0018 2879     		ldrb	r0, [r5, #4]	@ zero_extendqisi2	@, lrtc_12(D)->mon
 9172 001a 0222     		movs	r2, #2	@,
 9173 001c FFF7FEFF 		bl	unt2str	@
 9174 0020 0388     		ldrh	r3, [r0]	@ unaligned	@ _17, MEM[(char * {ref-all})_6]
 9175              	@ main.c:5112: 		dczas += 3; memcpy(dczas,unt2str(lrtc->mdy,tbuf,2) ,2);
 9176 0022 6946     		mov	r1, sp	@,
 9177              	@ main.c:5111: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
ARM GAS  /tmp/ccjvICQi.s 			page 162


 9178 0024 A4F80530 		strh	r3, [r4, #5]	@ unaligned	@ _17, MEM[(char * {ref-all})dczas_10(D) + 5B]
 9179              	@ main.c:5112: 		dczas += 3; memcpy(dczas,unt2str(lrtc->mdy,tbuf,2) ,2);
 9180 0028 E878     		ldrb	r0, [r5, #3]	@ zero_extendqisi2	@, lrtc_12(D)->mdy
 9181 002a 0222     		movs	r2, #2	@,
 9182 002c FFF7FEFF 		bl	unt2str	@
 9183 0030 0388     		ldrh	r3, [r0]	@ unaligned	@ _20, MEM[(char * {ref-all})_9]
 9184 0032 2381     		strh	r3, [r4, #8]	@ unaligned	@ _20, MEM[(char * {ref-all})dczas_10(D) + 8B]
 9185              	@ main.c:5113: 	}
 9186 0034 03B0     		add	sp, sp, #12	@,,
 9187              		@ sp needed	@
 9188 0036 30BD     		pop	{r4, r5, pc}	@
 9189              		.size	CopyDate, .-CopyDate
 9190              		.section	.text.Zegarek,"ax",%progbits
 9191              		.align	1
 9192              		.p2align 2,,3
 9193              		.global	Zegarek
 9194              		.syntax unified
 9195              		.thumb
 9196              		.thumb_func
 9197              		.fpu softvfp
 9198              		.type	Zegarek, %function
 9199              	Zegarek:
 9200              		@ args = 0, pretend = 0, frame = 24
 9201              		@ frame_needed = 0, uses_anonymous_args = 0
 9202 0000 F0B5     		push	{r4, r5, r6, r7, lr}	@
 9203 0002 87B0     		sub	sp, sp, #28	@,,
 9204              	@ main.c:995: 		char tbuf[9] ={"00-00-00"};
 9205 0004 6C46     		mov	r4, sp	@ tmp115,
 9206 0006 134A     		ldr	r2, .L739	@ tmp114,
 9207              	@ main.c:996: 		char dbuf[11]={"0000-00-00"}; // data
 9208 0008 03AB     		add	r3, sp, #12	@ tmp137,,
 9209              	@ main.c:995: 		char tbuf[9] ={"00-00-00"};
 9210 000a 07CA     		ldm	r2, {r0, r1, r2}	@ tmp114,,,
 9211 000c 03C4     		stmia	r4!, {r0, r1}	@ tmp115,,
 9212              	@ main.c:996: 		char dbuf[11]={"0000-00-00"}; // data
 9213 000e 1249     		ldr	r1, .L739+4	@ tmp117,
 9214              	@ main.c:995: 		char tbuf[9] ={"00-00-00"};
 9215 0010 2270     		strb	r2, [r4]	@, tbuf
 9216              	@ main.c:996: 		char dbuf[11]={"0000-00-00"}; // data
 9217 0012 07C9     		ldm	r1, {r0, r1, r2}	@ tmp117,,,
 9218 0014 03C3     		stmia	r3!, {r0, r1}	@ tmp118,,
 9219 0016 110C     		lsrs	r1, r2, #16	@ tmp120,,
 9220 0018 23F8022B 		strh	r2, [r3], #2	@ movhi	@, dbuf
 9221 001c 1970     		strb	r1, [r3]	@ tmp120, dbuf
 9222              	@ main.c:998: 		RtcInit();
 9223 001e FFF7FEFF 		bl	RtcInit	@
 9224 0022 0E4D     		ldr	r5, .L739+8	@ tmp133,
 9225              	@ main.c:1006: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 9226 0024 0E4C     		ldr	r4, .L739+12	@ tmp123,
 9227 0026 0F4E     		ldr	r6, .L739+16	@ tmp125,
 9228              	@ main.c:1008: 				rtc_GetTime(1,&Rtc);
 9229 0028 0F4F     		ldr	r7, .L739+20	@ tmp136,
 9230              	.L735:
 9231              	@ main.c:1006: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 9232 002a 2B68     		ldr	r3, [r5]	@ trg0.111_1, trg0
 9233 002c A268     		ldr	r2, [r4, #8]	@ _2, MEM[(struct SysTick_Type *)3758153744B].VAL
 9234 002e 9B1A     		subs	r3, r3, r2	@ tmp124, trg0.111_1, _2
ARM GAS  /tmp/ccjvICQi.s 			page 163


 9235 0030 B342     		cmp	r3, r6	@ tmp124, tmp125
 9236 0032 FAD9     		bls	.L735	@,
 9237              	@ main.c:1007: 				trg0  = SysTick->VAL;
 9238 0034 A368     		ldr	r3, [r4, #8]	@ _4, MEM[(struct SysTick_Type *)3758153744B].VAL
 9239              	@ main.c:1008: 				rtc_GetTime(1,&Rtc);
 9240 0036 3946     		mov	r1, r7	@, tmp136
 9241 0038 0120     		movs	r0, #1	@,
 9242              	@ main.c:1007: 				trg0  = SysTick->VAL;
 9243 003a 2B60     		str	r3, [r5]	@ _4, trg0
 9244              	@ main.c:1008: 				rtc_GetTime(1,&Rtc);
 9245 003c FFF7FEFF 		bl	rtc_GetTime	@
 9246              	@ main.c:1009: 				CopyTime(tbuf,&Rtc);
 9247 0040 3946     		mov	r1, r7	@, tmp136
 9248 0042 6846     		mov	r0, sp	@,
 9249 0044 FFF7FEFF 		bl	CopyTime	@
 9250              	@ main.c:1010: 				CopyDate(dbuf,&Rtc);
 9251 0048 3946     		mov	r1, r7	@, tmp136
 9252 004a 03A8     		add	r0, sp, #12	@ tmp138,,
 9253 004c FFF7FEFF 		bl	CopyDate	@
 9254 0050 EBE7     		b	.L735	@
 9255              	.L740:
 9256 0052 00BF     		.align	2
 9257              	.L739:
 9258 0054 00000000 		.word	.LC164
 9259 0058 0C000000 		.word	.LC165
 9260 005c 00000000 		.word	trg0
 9261 0060 10E000E0 		.word	-536813552
 9262 0064 40548900 		.word	9000000
 9263 0068 00000000 		.word	Rtc
 9264              		.size	Zegarek, .-Zegarek
 9265              		.section	.text.SysTick_Handler,"ax",%progbits
 9266              		.align	1
 9267              		.p2align 2,,3
 9268              		.global	SysTick_Handler
 9269              		.syntax unified
 9270              		.thumb
 9271              		.thumb_func
 9272              		.fpu softvfp
 9273              		.type	SysTick_Handler, %function
 9274              	SysTick_Handler:
 9275              		@ args = 0, pretend = 0, frame = 0
 9276              		@ frame_needed = 0, uses_anonymous_args = 0
 9277              		@ link register save eliminated.
 9278              	@ main.c:5155: 		N = Timt + STCLK_LD; Timt = N;
 9279 0000 1448     		ldr	r0, .L742	@ tmp130,
 9280 0002 154B     		ldr	r3, .L742+4	@ tmp131,
 9281 0004 0268     		ldr	r2, [r0]	@ Timt.264_1, Timt
 9282              	@ main.c:5157: 		n = delay_us + STCLK_LD; delay_us = n;
 9283 0006 1549     		ldr	r1, .L742+8	@ tmp133,
 9284              	@ main.c:5155: 		N = Timt + STCLK_LD; Timt = N;
 9285 0008 1A44     		add	r2, r2, r3	@ N, tmp131
 9286 000a 0260     		str	r2, [r0]	@ N, Timt
 9287              	@ main.c:5157: 		n = delay_us + STCLK_LD; delay_us = n;
 9288 000c 0A68     		ldr	r2, [r1]	@ delay_us.265_2, delay_us
 9289              	@ main.c:5161: 		n = (Tim0 + STCLK_LD); Tim0 = n;
 9290 000e 1448     		ldr	r0, .L742+12	@ tmp136,
 9291              	@ main.c:5157: 		n = delay_us + STCLK_LD; delay_us = n;
ARM GAS  /tmp/ccjvICQi.s 			page 164


 9292 0010 1A44     		add	r2, r2, r3	@ _3, tmp131
 9293 0012 0A60     		str	r2, [r1]	@ _3, delay_us
 9294              	@ main.c:5161: 		n = (Tim0 + STCLK_LD); Tim0 = n;
 9295 0014 0268     		ldr	r2, [r0]	@ Tim0.267_4, Tim0
 9296              	@ main.c:5162: 		n = (Tim1 + STCLK_LD); Tim1 = n;
 9297 0016 1349     		ldr	r1, .L742+16	@ tmp139,
 9298              	@ main.c:5161: 		n = (Tim0 + STCLK_LD); Tim0 = n;
 9299 0018 1A44     		add	r2, r2, r3	@ _5, tmp131
 9300 001a 0260     		str	r2, [r0]	@ _5, Tim0
 9301              	@ main.c:5162: 		n = (Tim1 + STCLK_LD); Tim1 = n;
 9302 001c 0A68     		ldr	r2, [r1]	@ Tim1.269_6, Tim1
 9303              	@ main.c:5164: 		n = (trg0 + STCLK_LD); trg0 = n;
 9304 001e 1248     		ldr	r0, .L742+20	@ tmp142,
 9305              	@ main.c:5162: 		n = (Tim1 + STCLK_LD); Tim1 = n;
 9306 0020 1A44     		add	r2, r2, r3	@ _7, tmp131
 9307 0022 0A60     		str	r2, [r1]	@ _7, Tim1
 9308              	@ main.c:5164: 		n = (trg0 + STCLK_LD); trg0 = n;
 9309 0024 0268     		ldr	r2, [r0]	@ trg0.271_8, trg0
 9310              	@ main.c:5165: 		n = (trg1 + STCLK_LD); trg1 = n;
 9311 0026 1149     		ldr	r1, .L742+24	@ tmp145,
 9312              	@ main.c:5164: 		n = (trg0 + STCLK_LD); trg0 = n;
 9313 0028 1A44     		add	r2, r2, r3	@ _9, tmp131
 9314 002a 0260     		str	r2, [r0]	@ _9, trg0
 9315              	@ main.c:5165: 		n = (trg1 + STCLK_LD); trg1 = n;
 9316 002c 0A68     		ldr	r2, [r1]	@ trg1.273_10, trg1
 9317              	@ main.c:5166: 		n = (trg2 + STCLK_LD); trg2 = n;
 9318 002e 1048     		ldr	r0, .L742+28	@ tmp148,
 9319              	@ main.c:5165: 		n = (trg1 + STCLK_LD); trg1 = n;
 9320 0030 1A44     		add	r2, r2, r3	@ _11, tmp131
 9321 0032 0A60     		str	r2, [r1]	@ _11, trg1
 9322              	@ main.c:5166: 		n = (trg2 + STCLK_LD); trg2 = n;
 9323 0034 0268     		ldr	r2, [r0]	@ trg2.275_12, trg2
 9324              	@ main.c:5167: 		n = (trg3 + STCLK_LD); trg3 = n;
 9325 0036 0F49     		ldr	r1, .L742+32	@ tmp151,
 9326              	@ main.c:5166: 		n = (trg2 + STCLK_LD); trg2 = n;
 9327 0038 1A44     		add	r2, r2, r3	@ _13, tmp131
 9328 003a 0260     		str	r2, [r0]	@ _13, trg2
 9329              	@ main.c:5167: 		n = (trg3 + STCLK_LD); trg3 = n;
 9330 003c 0A68     		ldr	r2, [r1]	@ trg3.277_14, trg3
 9331              	@ main.c:5168: 		n = (trg4 + STCLK_LD); trg4 = n;
 9332 003e 0E48     		ldr	r0, .L742+36	@ tmp154,
 9333              	@ main.c:5167: 		n = (trg3 + STCLK_LD); trg3 = n;
 9334 0040 1A44     		add	r2, r2, r3	@ _15, tmp131
 9335 0042 0A60     		str	r2, [r1]	@ _15, trg3
 9336              	@ main.c:5168: 		n = (trg4 + STCLK_LD); trg4 = n;
 9337 0044 0268     		ldr	r2, [r0]	@ trg4.279_16, trg4
 9338              	@ main.c:5169: 		n = (trg5 + STCLK_LD); trg5 = n;
 9339 0046 0D49     		ldr	r1, .L742+40	@ tmp157,
 9340              	@ main.c:5168: 		n = (trg4 + STCLK_LD); trg4 = n;
 9341 0048 1A44     		add	r2, r2, r3	@ _17, tmp131
 9342 004a 0260     		str	r2, [r0]	@ _17, trg4
 9343              	@ main.c:5169: 		n = (trg5 + STCLK_LD); trg5 = n;
 9344 004c 0A68     		ldr	r2, [r1]	@ trg5.281_18, trg5
 9345 004e 1344     		add	r3, r3, r2	@ _19, trg5.281_18
 9346 0050 0B60     		str	r3, [r1]	@ _19, trg5
 9347              	@ main.c:5172: 	}
 9348 0052 7047     		bx	lr	@
ARM GAS  /tmp/ccjvICQi.s 			page 165


 9349              	.L743:
 9350              		.align	2
 9351              	.L742:
 9352 0054 00000000 		.word	Timt
 9353 0058 40548900 		.word	9000000
 9354 005c 00000000 		.word	delay_us
 9355 0060 00000000 		.word	Tim0
 9356 0064 00000000 		.word	Tim1
 9357 0068 00000000 		.word	trg0
 9358 006c 00000000 		.word	trg1
 9359 0070 00000000 		.word	trg2
 9360 0074 00000000 		.word	trg3
 9361 0078 00000000 		.word	trg4
 9362 007c 00000000 		.word	trg5
 9363              		.size	SysTick_Handler, .-SysTick_Handler
 9364              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 9365              		.align	1
 9366              		.p2align 2,,3
 9367              		.global	TIM2_IRQHandler
 9368              		.syntax unified
 9369              		.thumb
 9370              		.thumb_func
 9371              		.fpu softvfp
 9372              		.type	TIM2_IRQHandler, %function
 9373              	TIM2_IRQHandler:
 9374              		@ Stack Align: May be called with mis-aligned SP.
 9375              		@ args = 0, pretend = 0, frame = 0
 9376              		@ frame_needed = 0, uses_anonymous_args = 0
 9377              		@ link register save eliminated.
 9378 0000 6846     		mov	r0, sp	@,
 9379 0002 20F00701 		bic	r1, r0, #7	@,,
 9380 0006 8D46     		mov	sp, r1	@,
 9381              	@ main.c:5174: 		bTIM2_SR_UIF = 0;
 9382 0008 0023     		movs	r3, #0	@ tmp111,
 9383              	@ main.c:5175: 		TIM2->SR = 0;
 9384 000a 4FF08042 		mov	r2, #1073741824	@ tmp112,
 9385              	@ main.c:5173: __attribute__((interrupt)) void TIM2_IRQHandler(void)				{
 9386 000e 01B4     		push	{r0}	@
 9387              	@ main.c:5174: 		bTIM2_SR_UIF = 0;
 9388 0010 0249     		ldr	r1, .L745	@ tmp110,
 9389              	@ main.c:5177: 	}
 9390 0012 01BC     		pop	{r0}	@
 9391              	@ main.c:5174: 		bTIM2_SR_UIF = 0;
 9392 0014 0B60     		str	r3, [r1]	@ tmp111, MEM[(volatile long unsigned int *)1107296768B]
 9393              	@ main.c:5177: 	}
 9394 0016 8546     		mov	sp, r0	@,
 9395              	@ main.c:5175: 		TIM2->SR = 0;
 9396 0018 1382     		strh	r3, [r2, #16]	@ movhi	@ tmp111, MEM[(struct TIM_TypeDef *)1073741824B].SR
 9397              	@ main.c:5177: 	}
 9398 001a 7047     		bx	lr	@
 9399              	.L746:
 9400              		.align	2
 9401              	.L745:
 9402 001c 00020042 		.word	1107296768
 9403              		.size	TIM2_IRQHandler, .-TIM2_IRQHandler
 9404              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 9405              		.align	1
ARM GAS  /tmp/ccjvICQi.s 			page 166


 9406              		.p2align 2,,3
 9407              		.global	TIM3_IRQHandler
 9408              		.syntax unified
 9409              		.thumb
 9410              		.thumb_func
 9411              		.fpu softvfp
 9412              		.type	TIM3_IRQHandler, %function
 9413              	TIM3_IRQHandler:
 9414              		@ Stack Align: May be called with mis-aligned SP.
 9415              		@ args = 0, pretend = 0, frame = 0
 9416              		@ frame_needed = 0, uses_anonymous_args = 0
 9417              		@ link register save eliminated.
 9418 0000 6846     		mov	r0, sp	@,
 9419 0002 20F00701 		bic	r1, r0, #7	@,,
 9420 0006 8D46     		mov	sp, r1	@,
 9421 0008 01B4     		push	{r0}	@
 9422              	@ main.c:5179: 		TIM3->SR = 0;
 9423 000a 0020     		movs	r0, #0	@ tmp122,
 9424              	@ main.c:5183: 		N = Timt3     + TIM3_ARR; Timt3 = N;
 9425 000c 4FF6FF73 		movw	r3, #65535	@ tmp124,
 9426              	@ main.c:5179: 		TIM3->SR = 0;
 9427 0010 0C4A     		ldr	r2, .L748	@ tmp120,
 9428              	@ main.c:5183: 		N = Timt3     + TIM3_ARR; Timt3 = N;
 9429 0012 0D49     		ldr	r1, .L748+4	@ tmp123,
 9430              	@ main.c:5179: 		TIM3->SR = 0;
 9431 0014 1082     		strh	r0, [r2, #16]	@ movhi	@ tmp122, MEM[(struct TIM_TypeDef *)1073742848B].SR
 9432              	@ main.c:5183: 		N = Timt3     + TIM3_ARR; Timt3 = N;
 9433 0016 0A68     		ldr	r2, [r1]	@ Timt3.283_1, Timt3
 9434              	@ main.c:5184: 		n = delay3_us + TIM3_ARR; delay3_us = n;
 9435 0018 0C48     		ldr	r0, .L748+8	@ tmp126,
 9436              	@ main.c:5183: 		N = Timt3     + TIM3_ARR; Timt3 = N;
 9437 001a 1A44     		add	r2, r2, r3	@ N, tmp124
 9438 001c 0A60     		str	r2, [r1]	@ N, Timt3
 9439              	@ main.c:5184: 		n = delay3_us + TIM3_ARR; delay3_us = n;
 9440 001e 0268     		ldr	r2, [r0]	@ delay3_us.284_2, delay3_us
 9441              	@ main.c:5188: 		n = (t3rg0 + TIM3_ARR); t3rg0 = n;
 9442 0020 0B49     		ldr	r1, .L748+12	@ tmp129,
 9443              	@ main.c:5184: 		n = delay3_us + TIM3_ARR; delay3_us = n;
 9444 0022 1A44     		add	r2, r2, r3	@ n, tmp124
 9445 0024 0260     		str	r2, [r0]	@ n, delay3_us
 9446              	@ main.c:5188: 		n = (t3rg0 + TIM3_ARR); t3rg0 = n;
 9447 0026 0A68     		ldr	r2, [r1]	@ t3rg0.285_3, t3rg0
 9448              	@ main.c:5189: 		n = (t3rg1 + TIM3_ARR); t3rg1 = n;
 9449 0028 0A48     		ldr	r0, .L748+16	@ tmp132,
 9450              	@ main.c:5188: 		n = (t3rg0 + TIM3_ARR); t3rg0 = n;
 9451 002a 1A44     		add	r2, r2, r3	@ n, tmp124
 9452 002c 0A60     		str	r2, [r1]	@ n, t3rg0
 9453              	@ main.c:5189: 		n = (t3rg1 + TIM3_ARR); t3rg1 = n;
 9454 002e 0268     		ldr	r2, [r0]	@ t3rg1.286_4, t3rg1
 9455              	@ main.c:5190: 		n = (t3rg2 + TIM3_ARR); t3rg2 = n;
 9456 0030 0949     		ldr	r1, .L748+20	@ tmp135,
 9457              	@ main.c:5189: 		n = (t3rg1 + TIM3_ARR); t3rg1 = n;
 9458 0032 1A44     		add	r2, r2, r3	@ n, tmp124
 9459 0034 0260     		str	r2, [r0]	@ n, t3rg1
 9460              	@ main.c:5190: 		n = (t3rg2 + TIM3_ARR); t3rg2 = n;
 9461 0036 0A68     		ldr	r2, [r1]	@ t3rg2.287_5, t3rg2
 9462              	@ main.c:5194: 	}
ARM GAS  /tmp/ccjvICQi.s 			page 167


 9463 0038 01BC     		pop	{r0}	@
 9464              	@ main.c:5190: 		n = (t3rg2 + TIM3_ARR); t3rg2 = n;
 9465 003a 1344     		add	r3, r3, r2	@ n, t3rg2.287_5
 9466 003c 0B60     		str	r3, [r1]	@ n, t3rg2
 9467              	@ main.c:5194: 	}
 9468 003e 8546     		mov	sp, r0	@,
 9469 0040 7047     		bx	lr	@
 9470              	.L749:
 9471 0042 00BF     		.align	2
 9472              	.L748:
 9473 0044 00040040 		.word	1073742848
 9474 0048 00000000 		.word	Timt3
 9475 004c 00000000 		.word	delay3_us
 9476 0050 00000000 		.word	t3rg0
 9477 0054 00000000 		.word	t3rg1
 9478 0058 00000000 		.word	t3rg2
 9479              		.size	TIM3_IRQHandler, .-TIM3_IRQHandler
 9480              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 9481              		.align	1
 9482              		.p2align 2,,3
 9483              		.global	EXTI0_IRQHandler
 9484              		.syntax unified
 9485              		.thumb
 9486              		.thumb_func
 9487              		.fpu softvfp
 9488              		.type	EXTI0_IRQHandler, %function
 9489              	EXTI0_IRQHandler:
 9490              		@ Stack Align: May be called with mis-aligned SP.
 9491              		@ args = 0, pretend = 0, frame = 0
 9492              		@ frame_needed = 0, uses_anonymous_args = 0
 9493              		@ link register save eliminated.
 9494 0000 6846     		mov	r0, sp	@,
 9495 0002 20F00701 		bic	r1, r0, #7	@,,
 9496 0006 8D46     		mov	sp, r1	@,
 9497              	@ main.c:5196: 		if(PB0_i){
 9498 0008 064B     		ldr	r3, .L755	@ tmp116,
 9499              	@ main.c:5195: __attribute__((interrupt)) void EXTI0_IRQHandler(void)			{
 9500 000a 01B4     		push	{r0}	@
 9501              	@ main.c:5196: 		if(PB0_i){
 9502 000c 1B68     		ldr	r3, [r3]	@ _1, MEM[(volatile long unsigned int *)1109491968B]
 9503 000e 1BB1     		cbz	r3, .L751	@ _1,
 9504              	@ main.c:5197: 			flag_9=1;
 9505 0010 0122     		movs	r2, #1	@ tmp120,
 9506 0012 054B     		ldr	r3, .L755+4	@ tmp118,
 9507 0014 5B01     		lsls	r3, r3, #5	@ tmp119, tmp118,
 9508 0016 5A62     		str	r2, [r3, #36]	@ tmp120, *_6
 9509              	.L751:
 9510              	@ main.c:5199: 		EXTI->PR   = EXTI_PR_PR0;				// Clear interupt request
 9511 0018 0122     		movs	r2, #1	@ tmp122,
 9512 001a 044B     		ldr	r3, .L755+8	@ tmp121,
 9513              	@ main.c:5200: 	}
 9514 001c 01BC     		pop	{r0}	@
 9515              	@ main.c:5199: 		EXTI->PR   = EXTI_PR_PR0;				// Clear interupt request
 9516 001e 5A61     		str	r2, [r3, #20]	@ tmp122, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9517              	@ main.c:5200: 	}
 9518 0020 8546     		mov	sp, r0	@,
 9519 0022 7047     		bx	lr	@
ARM GAS  /tmp/ccjvICQi.s 			page 168


 9520              	.L756:
 9521              		.align	2
 9522              	.L755:
 9523 0024 00812142 		.word	1109491968
 9524 0028 00001001 		.word	.LANCHOR18+17825792
 9525 002c 00040140 		.word	1073808384
 9526              		.size	EXTI0_IRQHandler, .-EXTI0_IRQHandler
 9527              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
 9528              		.align	1
 9529              		.p2align 2,,3
 9530              		.global	EXTI1_IRQHandler
 9531              		.syntax unified
 9532              		.thumb
 9533              		.thumb_func
 9534              		.fpu softvfp
 9535              		.type	EXTI1_IRQHandler, %function
 9536              	EXTI1_IRQHandler:
 9537              		@ Stack Align: May be called with mis-aligned SP.
 9538              		@ args = 0, pretend = 0, frame = 0
 9539              		@ frame_needed = 0, uses_anonymous_args = 0
 9540              		@ link register save eliminated.
 9541 0000 6846     		mov	r0, sp	@,
 9542 0002 20F00701 		bic	r1, r0, #7	@,,
 9543 0006 8D46     		mov	sp, r1	@,
 9544              	@ main.c:5203: 		EXTI->PR   = EXTI_PR_PR1;				// Clear interupt request
 9545 0008 0221     		movs	r1, #2	@ tmp113,
 9546 000a 054B     		ldr	r3, .L758	@ tmp112,
 9547              	@ main.c:5204: 		LED ^=1;
 9548 000c 054A     		ldr	r2, .L758+4	@ tmp114,
 9549              	@ main.c:5201: __attribute__((interrupt)) void EXTI1_IRQHandler(void)			{
 9550 000e 01B4     		push	{r0}	@
 9551              	@ main.c:5203: 		EXTI->PR   = EXTI_PR_PR1;				// Clear interupt request
 9552 0010 5961     		str	r1, [r3, #20]	@ tmp113, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9553              	@ main.c:5204: 		LED ^=1;
 9554 0012 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109524916B]
 9555              	@ main.c:5205: 	}
 9556 0014 01BC     		pop	{r0}	@
 9557              	@ main.c:5204: 		LED ^=1;
 9558 0016 83F00103 		eor	r3, r3, #1	@ _2, _1,
 9559 001a 1360     		str	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109524916B]
 9560              	@ main.c:5205: 	}
 9561 001c 8546     		mov	sp, r0	@,
 9562 001e 7047     		bx	lr	@
 9563              	.L759:
 9564              		.align	2
 9565              	.L758:
 9566 0020 00040140 		.word	1073808384
 9567 0024 B4012242 		.word	1109524916
 9568              		.size	EXTI1_IRQHandler, .-EXTI1_IRQHandler
 9569              		.section	.text.EXTI2_IRQHandler,"ax",%progbits
 9570              		.align	1
 9571              		.p2align 2,,3
 9572              		.global	EXTI2_IRQHandler
 9573              		.syntax unified
 9574              		.thumb
 9575              		.thumb_func
 9576              		.fpu softvfp
ARM GAS  /tmp/ccjvICQi.s 			page 169


 9577              		.type	EXTI2_IRQHandler, %function
 9578              	EXTI2_IRQHandler:
 9579              		@ Stack Align: May be called with mis-aligned SP.
 9580              		@ args = 0, pretend = 0, frame = 0
 9581              		@ frame_needed = 0, uses_anonymous_args = 0
 9582              		@ link register save eliminated.
 9583 0000 6846     		mov	r0, sp	@,
 9584 0002 20F00701 		bic	r1, r0, #7	@,,
 9585 0006 8D46     		mov	sp, r1	@,
 9586              	@ main.c:5207: 		bEXTI_PR_2 = 1;
 9587 0008 0121     		movs	r1, #1	@ tmp113,
 9588 000a 054B     		ldr	r3, .L761	@ tmp112,
 9589              	@ main.c:5208: 		LED ^= 1;
 9590 000c 054A     		ldr	r2, .L761+4	@ tmp114,
 9591              	@ main.c:5206: __attribute__((interrupt)) void EXTI2_IRQHandler(void)			{
 9592 000e 01B4     		push	{r0}	@
 9593              	@ main.c:5207: 		bEXTI_PR_2 = 1;
 9594 0010 1960     		str	r1, [r3]	@ tmp113, MEM[(volatile long unsigned int *)1109426824B]
 9595              	@ main.c:5208: 		LED ^= 1;
 9596 0012 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109524916B]
 9597              	@ main.c:5209: 	}
 9598 0014 01BC     		pop	{r0}	@
 9599              	@ main.c:5208: 		LED ^= 1;
 9600 0016 4B40     		eors	r3, r3, r1	@, _2, _1,
 9601 0018 1360     		str	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109524916B]
 9602              	@ main.c:5209: 	}
 9603 001a 8546     		mov	sp, r0	@,
 9604 001c 7047     		bx	lr	@
 9605              	.L762:
 9606 001e 00BF     		.align	2
 9607              	.L761:
 9608 0020 88822042 		.word	1109426824
 9609 0024 B4012242 		.word	1109524916
 9610              		.size	EXTI2_IRQHandler, .-EXTI2_IRQHandler
 9611              		.section	.text.EXTI3_IRQHandler,"ax",%progbits
 9612              		.align	1
 9613              		.p2align 2,,3
 9614              		.global	EXTI3_IRQHandler
 9615              		.syntax unified
 9616              		.thumb
 9617              		.thumb_func
 9618              		.fpu softvfp
 9619              		.type	EXTI3_IRQHandler, %function
 9620              	EXTI3_IRQHandler:
 9621              		@ Stack Align: May be called with mis-aligned SP.
 9622              		@ args = 0, pretend = 0, frame = 0
 9623              		@ frame_needed = 0, uses_anonymous_args = 0
 9624              		@ link register save eliminated.
 9625 0000 6846     		mov	r0, sp	@,
 9626 0002 20F00701 		bic	r1, r0, #7	@,,
 9627 0006 8D46     		mov	sp, r1	@,
 9628              	@ main.c:5211: 		EXTI->PR   = EXTI_PR_PR3;				// Clear interupt request
 9629 0008 0821     		movs	r1, #8	@ tmp113,
 9630 000a 054B     		ldr	r3, .L764	@ tmp112,
 9631              	@ main.c:5212: 		LED ^=1;
 9632 000c 054A     		ldr	r2, .L764+4	@ tmp114,
 9633              	@ main.c:5210: __attribute__((interrupt)) void EXTI3_IRQHandler(void)			{
ARM GAS  /tmp/ccjvICQi.s 			page 170


 9634 000e 01B4     		push	{r0}	@
 9635              	@ main.c:5211: 		EXTI->PR   = EXTI_PR_PR3;				// Clear interupt request
 9636 0010 5961     		str	r1, [r3, #20]	@ tmp113, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9637              	@ main.c:5212: 		LED ^=1;
 9638 0012 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109524916B]
 9639              	@ main.c:5213: 	}
 9640 0014 01BC     		pop	{r0}	@
 9641              	@ main.c:5212: 		LED ^=1;
 9642 0016 83F00103 		eor	r3, r3, #1	@ _2, _1,
 9643 001a 1360     		str	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109524916B]
 9644              	@ main.c:5213: 	}
 9645 001c 8546     		mov	sp, r0	@,
 9646 001e 7047     		bx	lr	@
 9647              	.L765:
 9648              		.align	2
 9649              	.L764:
 9650 0020 00040140 		.word	1073808384
 9651 0024 B4012242 		.word	1109524916
 9652              		.size	EXTI3_IRQHandler, .-EXTI3_IRQHandler
 9653              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
 9654              		.align	1
 9655              		.p2align 2,,3
 9656              		.global	EXTI4_IRQHandler
 9657              		.syntax unified
 9658              		.thumb
 9659              		.thumb_func
 9660              		.fpu softvfp
 9661              		.type	EXTI4_IRQHandler, %function
 9662              	EXTI4_IRQHandler:
 9663              		@ Stack Align: May be called with mis-aligned SP.
 9664              		@ args = 0, pretend = 0, frame = 0
 9665              		@ frame_needed = 0, uses_anonymous_args = 0
 9666              		@ link register save eliminated.
 9667 0000 6846     		mov	r0, sp	@,
 9668 0002 20F00701 		bic	r1, r0, #7	@,,
 9669 0006 8D46     		mov	sp, r1	@,
 9670              	@ main.c:5215: 		EXTI->PR   = EXTI_PR_PR4;			
 9671 0008 1021     		movs	r1, #16	@ tmp113,
 9672 000a 054B     		ldr	r3, .L767	@ tmp112,
 9673              	@ main.c:5216: 		LED ^= 1;
 9674 000c 054A     		ldr	r2, .L767+4	@ tmp114,
 9675              	@ main.c:5214: __attribute__((interrupt)) void EXTI4_IRQHandler(void)			{
 9676 000e 01B4     		push	{r0}	@
 9677              	@ main.c:5215: 		EXTI->PR   = EXTI_PR_PR4;			
 9678 0010 5961     		str	r1, [r3, #20]	@ tmp113, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9679              	@ main.c:5216: 		LED ^= 1;
 9680 0012 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109524916B]
 9681              	@ main.c:5217: 	}
 9682 0014 01BC     		pop	{r0}	@
 9683              	@ main.c:5216: 		LED ^= 1;
 9684 0016 83F00103 		eor	r3, r3, #1	@ _2, _1,
 9685 001a 1360     		str	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109524916B]
 9686              	@ main.c:5217: 	}
 9687 001c 8546     		mov	sp, r0	@,
 9688 001e 7047     		bx	lr	@
 9689              	.L768:
 9690              		.align	2
ARM GAS  /tmp/ccjvICQi.s 			page 171


 9691              	.L767:
 9692 0020 00040140 		.word	1073808384
 9693 0024 B4012242 		.word	1109524916
 9694              		.size	EXTI4_IRQHandler, .-EXTI4_IRQHandler
 9695              		.section	.text.EXTI15_10_IRQHandler,"ax",%progbits
 9696              		.align	1
 9697              		.p2align 2,,3
 9698              		.global	EXTI15_10_IRQHandler
 9699              		.syntax unified
 9700              		.thumb
 9701              		.thumb_func
 9702              		.fpu softvfp
 9703              		.type	EXTI15_10_IRQHandler, %function
 9704              	EXTI15_10_IRQHandler:
 9705              		@ Stack Align: May be called with mis-aligned SP.
 9706              		@ args = 0, pretend = 0, frame = 0
 9707              		@ frame_needed = 0, uses_anonymous_args = 0
 9708              		@ link register save eliminated.
 9709 0000 6846     		mov	r0, sp	@,
 9710 0002 20F00701 		bic	r1, r0, #7	@,,
 9711 0006 8D46     		mov	sp, r1	@,
 9712              	@ main.c:5219: 		if(bEXTI_PR_13) {
 9713 0008 044B     		ldr	r3, .L774	@ tmp111,
 9714              	@ main.c:5218: __attribute__((interrupt)) void EXTI15_10_IRQHandler(void)	{
 9715 000a 01B4     		push	{r0}	@
 9716              	@ main.c:5219: 		if(bEXTI_PR_13) {
 9717 000c 1A68     		ldr	r2, [r3]	@ _1, MEM[(volatile long unsigned int *)1109426868B]
 9718 000e 0AB1     		cbz	r2, .L769	@ _1,
 9719              	@ main.c:5220: 			bEXTI_PR_13 = 1;
 9720 0010 0122     		movs	r2, #1	@ tmp113,
 9721 0012 1A60     		str	r2, [r3]	@ tmp113, MEM[(volatile long unsigned int *)1109426868B]
 9722              	.L769:
 9723              	@ main.c:5224: 	}
 9724 0014 01BC     		pop	{r0}	@
 9725 0016 8546     		mov	sp, r0	@,
 9726 0018 7047     		bx	lr	@
 9727              	.L775:
 9728 001a 00BF     		.align	2
 9729              	.L774:
 9730 001c B4822042 		.word	1109426868
 9731              		.size	EXTI15_10_IRQHandler, .-EXTI15_10_IRQHandler
 9732              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 9733              		.align	1
 9734              		.p2align 2,,3
 9735              		.global	EXTI9_5_IRQHandler
 9736              		.syntax unified
 9737              		.thumb
 9738              		.thumb_func
 9739              		.fpu softvfp
 9740              		.type	EXTI9_5_IRQHandler, %function
 9741              	EXTI9_5_IRQHandler:
 9742              		@ Stack Align: May be called with mis-aligned SP.
 9743              		@ args = 0, pretend = 0, frame = 0
 9744              		@ frame_needed = 0, uses_anonymous_args = 0
 9745              		@ link register save eliminated.
 9746 0000 6846     		mov	r0, sp	@,
 9747 0002 20F00701 		bic	r1, r0, #7	@,,
ARM GAS  /tmp/ccjvICQi.s 			page 172


 9748 0006 8D46     		mov	sp, r1	@,
 9749              	@ main.c:5226: 		if((bPBI_6 == 0)&&(EXTI->PR & EXTI_PR_PR6)) {			// check request PB6 touchpad
 9750 0008 0B4B     		ldr	r3, .L781	@ tmp120,
 9751              	@ main.c:5225: __attribute__((interrupt)) void EXTI9_5_IRQHandler	 (void)	{
 9752 000a 01B4     		push	{r0}	@
 9753              	@ main.c:5226: 		if((bPBI_6 == 0)&&(EXTI->PR & EXTI_PR_PR6)) {			// check request PB6 touchpad
 9754 000c 1B68     		ldr	r3, [r3]	@ _1, MEM[(volatile long unsigned int *)1109491992B]
 9755 000e 83B9     		cbnz	r3, .L776	@ _1,
 9756              	@ main.c:5226: 		if((bPBI_6 == 0)&&(EXTI->PR & EXTI_PR_PR6)) {			// check request PB6 touchpad
 9757 0010 03F18043 		add	r3, r3, #1073741824	@ tmp121, tmp121,
 9758 0014 03F58233 		add	r3, r3, #66560	@ tmp121, tmp121,
 9759 0018 5A69     		ldr	r2, [r3, #20]	@ _2, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9760 001a 5206     		lsls	r2, r2, #25	@, _2,
 9761 001c 09D5     		bpl	.L776	@,
 9762              	@ main.c:5229: 			f1_tpirq   = 1;									// set IRQ_TP FLAG
 9763 001e 0120     		movs	r0, #1	@ tmp126,
 9764              	@ main.c:5230: 			EXTI->PR   = EXTI_PR_PR6;				// Clear interupt request
 9765 0020 4021     		movs	r1, #64	@ tmp128,
 9766              	@ main.c:5229: 			f1_tpirq   = 1;									// set IRQ_TP FLAG
 9767 0022 064A     		ldr	r2, .L781+4	@ tmp124,
 9768 0024 5201     		lsls	r2, r2, #5	@ tmp125, tmp124,
 9769 0026 5060     		str	r0, [r2, #4]	@ tmp126, *_8
 9770              	@ main.c:5230: 			EXTI->PR   = EXTI_PR_PR6;				// Clear interupt request
 9771 0028 5961     		str	r1, [r3, #20]	@ tmp128, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9772              	@ main.c:5233: 			EXTI->FTSR &= ~EXTI_FTSR_TR6;  	// Failing trigger disabled
 9773 002a DA68     		ldr	r2, [r3, #12]	@ _9, MEM[(struct EXTI_TypeDef *)1073808384B].FTSR
 9774 002c 22F04002 		bic	r2, r2, #64	@ _10, _9,
 9775 0030 DA60     		str	r2, [r3, #12]	@ _10, MEM[(struct EXTI_TypeDef *)1073808384B].FTSR
 9776              	.L776:
 9777              	@ main.c:5237: 	}
 9778 0032 01BC     		pop	{r0}	@
 9779 0034 8546     		mov	sp, r0	@,
 9780 0036 7047     		bx	lr	@
 9781              	.L782:
 9782              		.align	2
 9783              	.L781:
 9784 0038 18812142 		.word	1109491992
 9785 003c 00001001 		.word	.LANCHOR18+17825792
 9786              		.size	EXTI9_5_IRQHandler, .-EXTI9_5_IRQHandler
 9787              		.section	.text.RTC_IRQHandler,"ax",%progbits
 9788              		.align	1
 9789              		.p2align 2,,3
 9790              		.global	RTC_IRQHandler
 9791              		.syntax unified
 9792              		.thumb
 9793              		.thumb_func
 9794              		.fpu softvfp
 9795              		.type	RTC_IRQHandler, %function
 9796              	RTC_IRQHandler:
 9797              		@ Stack Align: May be called with mis-aligned SP.
 9798              		@ args = 0, pretend = 0, frame = 0
 9799              		@ frame_needed = 0, uses_anonymous_args = 0
 9800              		@ link register save eliminated.
 9801 0000 6846     		mov	r0, sp	@,
 9802 0002 20F00701 		bic	r1, r0, #7	@,,
 9803 0006 8D46     		mov	sp, r1	@,
 9804              	@ main.c:5242: 		f3_rtc_1sec = 1;
ARM GAS  /tmp/ccjvICQi.s 			page 173


 9805 0008 0121     		movs	r1, #1	@ tmp121,
 9806              	@ main.c:5238: __attribute__((interrupt)) void RTC_IRQHandler 	(void)			{
 9807 000a 11B4     		push	{r0, r4}	@
 9808              	@ main.c:5241: 		bRTC_CRL_SECF = 0;		//Clear Interrupt Flag bit
 9809 000c 0024     		movs	r4, #0	@ tmp117,
 9810              	@ main.c:5242: 		f3_rtc_1sec = 1;
 9811 000e 064B     		ldr	r3, .L787	@ tmp119,
 9812              	@ main.c:5241: 		bRTC_CRL_SECF = 0;		//Clear Interrupt Flag bit
 9813 0010 0648     		ldr	r0, .L787+4	@ tmp116,
 9814              	@ main.c:5242: 		f3_rtc_1sec = 1;
 9815 0012 5B01     		lsls	r3, r3, #5	@ tmp120, tmp119,
 9816              	@ main.c:5243: 		while( bRTC_CRL_RTOFF == 0 );
 9817 0014 064A     		ldr	r2, .L787+8	@ tmp122,
 9818              	@ main.c:5241: 		bRTC_CRL_SECF = 0;		//Clear Interrupt Flag bit
 9819 0016 0460     		str	r4, [r0]	@ tmp117, MEM[(volatile long unsigned int *)1107624064B]
 9820              	@ main.c:5242: 		f3_rtc_1sec = 1;
 9821 0018 D960     		str	r1, [r3, #12]	@ tmp121, *_5
 9822              	.L784:
 9823              	@ main.c:5243: 		while( bRTC_CRL_RTOFF == 0 );
 9824 001a 1368     		ldr	r3, [r2]	@ _6, MEM[(volatile long unsigned int *)1107624084B]
 9825 001c 002B     		cmp	r3, #0	@ _6
 9826 001e FCD0     		beq	.L784	@
 9827              	@ main.c:5244: 	}
 9828 0020 11BC     		pop	{r0, r4}	@
 9829 0022 8546     		mov	sp, r0	@,
 9830 0024 7047     		bx	lr	@
 9831              	.L788:
 9832 0026 00BF     		.align	2
 9833              	.L787:
 9834 0028 00001001 		.word	.LANCHOR18+17825792
 9835 002c 80000542 		.word	1107624064
 9836 0030 94000542 		.word	1107624084
 9837              		.size	RTC_IRQHandler, .-RTC_IRQHandler
 9838              		.section	.text.RTCAlarm_IRQHandler,"ax",%progbits
 9839              		.align	1
 9840              		.p2align 2,,3
 9841              		.global	RTCAlarm_IRQHandler
 9842              		.syntax unified
 9843              		.thumb
 9844              		.thumb_func
 9845              		.fpu softvfp
 9846              		.type	RTCAlarm_IRQHandler, %function
 9847              	RTCAlarm_IRQHandler:
 9848              		@ Stack Align: May be called with mis-aligned SP.
 9849              		@ args = 0, pretend = 0, frame = 0
 9850              		@ frame_needed = 0, uses_anonymous_args = 0
 9851              		@ link register save eliminated.
 9852 0000 6846     		mov	r0, sp	@,
 9853 0002 20F00701 		bic	r1, r0, #7	@,,
 9854 0006 8D46     		mov	sp, r1	@,
 9855              	@ main.c:5246: 		RTC->CRL &= ~(RTC_CRL_ALRF); // potrzebne do wakeup
 9856 0008 0749     		ldr	r1, .L790	@ tmp114,
 9857              	@ main.c:5247: 		EXTI->PR |= EXTI_PR_PR17;
 9858 000a 084A     		ldr	r2, .L790+4	@ tmp120,
 9859              	@ main.c:5246: 		RTC->CRL &= ~(RTC_CRL_ALRF); // potrzebne do wakeup
 9860 000c 8B88     		ldrh	r3, [r1, #4]	@, MEM[(struct RTC_TypeDef *)1073752064B].CRL
 9861              	@ main.c:5245: __attribute__((interrupt)) void RTCAlarm_IRQHandler(void){
ARM GAS  /tmp/ccjvICQi.s 			page 174


 9862 000e 01B4     		push	{r0}	@
 9863              	@ main.c:5246: 		RTC->CRL &= ~(RTC_CRL_ALRF); // potrzebne do wakeup
 9864 0010 23F00203 		bic	r3, r3, #2	@ _2, MEM[(struct RTC_TypeDef *)1073752064B].CRL,
 9865 0014 1B04     		lsls	r3, r3, #16	@ _2, _2,
 9866 0016 1B0C     		lsrs	r3, r3, #16	@ _2, _2,
 9867 0018 8B80     		strh	r3, [r1, #4]	@ movhi	@ _2, MEM[(struct RTC_TypeDef *)1073752064B].CRL
 9868              	@ main.c:5247: 		EXTI->PR |= EXTI_PR_PR17;
 9869 001a 5369     		ldr	r3, [r2, #20]	@ _3, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9870              	@ main.c:5250: 	}
 9871 001c 01BC     		pop	{r0}	@
 9872              	@ main.c:5247: 		EXTI->PR |= EXTI_PR_PR17;
 9873 001e 43F40033 		orr	r3, r3, #131072	@ _4, _3,
 9874 0022 5361     		str	r3, [r2, #20]	@ _4, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9875              	@ main.c:5250: 	}
 9876 0024 8546     		mov	sp, r0	@,
 9877 0026 7047     		bx	lr	@
 9878              	.L791:
 9879              		.align	2
 9880              	.L790:
 9881 0028 00280040 		.word	1073752064
 9882 002c 00040140 		.word	1073808384
 9883              		.size	RTCAlarm_IRQHandler, .-RTCAlarm_IRQHandler
 9884              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 9885              		.align	1
 9886              		.p2align 2,,3
 9887              		.global	DMA1_Channel1_IRQHandler
 9888              		.syntax unified
 9889              		.thumb
 9890              		.thumb_func
 9891              		.fpu softvfp
 9892              		.type	DMA1_Channel1_IRQHandler, %function
 9893              	DMA1_Channel1_IRQHandler:
 9894              		@ Stack Align: May be called with mis-aligned SP.
 9895              		@ args = 0, pretend = 0, frame = 0
 9896              		@ frame_needed = 0, uses_anonymous_args = 0
 9897              		@ link register save eliminated.
 9898 0000 6846     		mov	r0, sp	@,
 9899 0002 20F00701 		bic	r1, r0, #7	@,,
 9900 0006 8D46     		mov	sp, r1	@,
 9901              	@ main.c:5252: 		if(DMA1->ISR & DMA_ISR_GIF1){
 9902 0008 084B     		ldr	r3, .L797	@ tmp119,
 9903              	@ main.c:5251: __attribute__((interrupt)) void DMA1_Channel1_IRQHandler(void){
 9904 000a 11B4     		push	{r0, r4}	@
 9905              	@ main.c:5252: 		if(DMA1->ISR & DMA_ISR_GIF1){
 9906 000c 1A68     		ldr	r2, [r3]	@ _1, MEM[(struct DMA_TypeDef *)1073872896B].ISR
 9907 000e D207     		lsls	r2, r2, #31	@, _1,
 9908 0010 09D5     		bpl	.L792	@,
 9909              	@ main.c:5257: 			f7_dma1 = 1;
 9910 0012 0120     		movs	r0, #1	@ tmp126,
 9911              	@ main.c:5254: 			DMA1->IFCR =                  DMA_IFCR_CTCIF1;
 9912 0014 0224     		movs	r4, #2	@ tmp122,
 9913              	@ main.c:5257: 			f7_dma1 = 1;
 9914 0016 064A     		ldr	r2, .L797+4	@ tmp124,
 9915              	@ main.c:5258: 			LED1   ^= 1;
 9916 0018 0649     		ldr	r1, .L797+8	@ tmp127,
 9917              	@ main.c:5257: 			f7_dma1 = 1;
 9918 001a 5201     		lsls	r2, r2, #5	@ tmp125, tmp124,
ARM GAS  /tmp/ccjvICQi.s 			page 175


 9919              	@ main.c:5254: 			DMA1->IFCR =                  DMA_IFCR_CTCIF1;
 9920 001c 5C60     		str	r4, [r3, #4]	@ tmp122, MEM[(struct DMA_TypeDef *)1073872896B].IFCR
 9921              	@ main.c:5257: 			f7_dma1 = 1;
 9922 001e D061     		str	r0, [r2, #28]	@ tmp126, *_7
 9923              	@ main.c:5258: 			LED1   ^= 1;
 9924 0020 0B68     		ldr	r3, [r1]	@ _8, MEM[(volatile long unsigned int *)1109492096B]
 9925 0022 4340     		eors	r3, r3, r0	@, _9, _8,
 9926 0024 0B60     		str	r3, [r1]	@ _9, MEM[(volatile long unsigned int *)1109492096B]
 9927              	.L792:
 9928              	@ main.c:5262: 	}
 9929 0026 11BC     		pop	{r0, r4}	@
 9930 0028 8546     		mov	sp, r0	@,
 9931 002a 7047     		bx	lr	@
 9932              	.L798:
 9933              		.align	2
 9934              	.L797:
 9935 002c 00000240 		.word	1073872896
 9936 0030 00001001 		.word	.LANCHOR18+17825792
 9937 0034 80812142 		.word	1109492096
 9938              		.size	DMA1_Channel1_IRQHandler, .-DMA1_Channel1_IRQHandler
 9939              		.section	.text.FSMC_IRQHandler,"ax",%progbits
 9940              		.align	1
 9941              		.p2align 2,,3
 9942              		.global	FSMC_IRQHandler
 9943              		.syntax unified
 9944              		.thumb
 9945              		.thumb_func
 9946              		.fpu softvfp
 9947              		.type	FSMC_IRQHandler, %function
 9948              	FSMC_IRQHandler:
 9949              		@ Stack Align: May be called with mis-aligned SP.
 9950              		@ args = 0, pretend = 0, frame = 0
 9951              		@ frame_needed = 0, uses_anonymous_args = 0
 9952              		@ link register save eliminated.
 9953 0000 6846     		mov	r0, sp	@,
 9954 0002 20F00701 		bic	r1, r0, #7	@,,
 9955 0006 8D46     		mov	sp, r1	@,
 9956 0008 01B4     		push	{r0}	@
 9957              	@ main.c:5265: }
 9958 000a 01BC     		pop	{r0}	@
 9959 000c 8546     		mov	sp, r0	@,
 9960 000e 7047     		bx	lr	@
 9961              		.size	FSMC_IRQHandler, .-FSMC_IRQHandler
 9962              		.section	.text.DACDmaInit,"ax",%progbits
 9963              		.align	1
 9964              		.p2align 2,,3
 9965              		.global	DACDmaInit
 9966              		.syntax unified
 9967              		.thumb
 9968              		.thumb_func
 9969              		.fpu softvfp
 9970              		.type	DACDmaInit, %function
 9971              	DACDmaInit:
 9972              		@ args = 0, pretend = 0, frame = 0
 9973              		@ frame_needed = 0, uses_anonymous_args = 0
 9974              		@ link register save eliminated.
 9975 0000 10B4     		push	{r4}	@
ARM GAS  /tmp/ccjvICQi.s 			page 176


 9976              	@ main.c:5456: 	DAC->DHR12RD	= (0<<16) | 900;
 9977 0002 4FF46174 		mov	r4, #900	@ tmp125,
 9978              	@ main.c:5447: 	RCC->APB1ENR  |= RCC_APB1ENR_DACEN;
 9979 0006 0A48     		ldr	r0, .L802	@ tmp116,
 9980              	@ main.c:5448: 	GPIOA->CRL   	&= 0xff00ffff;
 9981 0008 0A4B     		ldr	r3, .L802+4	@ tmp118,
 9982              	@ main.c:5447: 	RCC->APB1ENR  |= RCC_APB1ENR_DACEN;
 9983 000a C269     		ldr	r2, [r0, #28]	@ _1, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 9984              	@ main.c:5452: 	DAC->CR				= DAC_CR_TEN1|DAC_CR_TEN2|DAC_CR_WAVE1|DAC_CR_WAVE2|DAC_CR_EN1|DAC_CR_EN
 9985 000c 0A49     		ldr	r1, .L802+8	@ tmp122,
 9986              	@ main.c:5447: 	RCC->APB1ENR  |= RCC_APB1ENR_DACEN;
 9987 000e 42F00052 		orr	r2, r2, #536870912	@ _2, _1,
 9988 0012 C261     		str	r2, [r0, #28]	@ _2, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 9989              	@ main.c:5448: 	GPIOA->CRL   	&= 0xff00ffff;
 9990 0014 1A68     		ldr	r2, [r3]	@ _3, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 9991              	@ main.c:5452: 	DAC->CR				= DAC_CR_TEN1|DAC_CR_TEN2|DAC_CR_WAVE1|DAC_CR_WAVE2|DAC_CR_EN1|DAC_CR_EN
 9992 0016 0948     		ldr	r0, .L802+12	@ tmp123,
 9993              	@ main.c:5448: 	GPIOA->CRL   	&= 0xff00ffff;
 9994 0018 22F47F02 		bic	r2, r2, #16711680	@ _4, _3,
 9995 001c 1A60     		str	r2, [r3]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 9996              	@ main.c:5449: 	GPIOA->CRL   	|= 0x00dd0000;
 9997 001e 1A68     		ldr	r2, [r3]	@ _5, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 9998 0020 42F45D02 		orr	r2, r2, #14483456	@ _6, _5,
 9999 0024 1A60     		str	r2, [r3]	@ _6, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 10000              	@ main.c:5452: 	DAC->CR				= DAC_CR_TEN1|DAC_CR_TEN2|DAC_CR_WAVE1|DAC_CR_WAVE2|DAC_CR_EN1|DAC_CR_EN
 10001 0026 0860     		str	r0, [r1]	@ tmp123, MEM[(struct DAC_TypeDef *)1073771520B].CR
 10002              	@ main.c:5456: 	DAC->DHR12RD	= (0<<16) | 900;
 10003 0028 0C62     		str	r4, [r1, #32]	@ tmp125, MEM[(struct DAC_TypeDef *)1073771520B].DHR12RD
 10004              	@ main.c:5458: }
 10005 002a 10BC     		pop	{r4}	@
 10006 002c 7047     		bx	lr	@
 10007              	.L803:
 10008 002e 00BF     		.align	2
 10009              	.L802:
 10010 0030 00100240 		.word	1073876992
 10011 0034 00080140 		.word	1073809408
 10012 0038 00740040 		.word	1073771520
 10013 003c D50AD50A 		.word	181734101
 10014              		.size	DACDmaInit, .-DACDmaInit
 10015              		.section	.text.TIM4_IRQHandler,"ax",%progbits
 10016              		.align	1
 10017              		.p2align 2,,3
 10018              		.global	TIM4_IRQHandler
 10019              		.syntax unified
 10020              		.thumb
 10021              		.thumb_func
 10022              		.fpu softvfp
 10023              		.type	TIM4_IRQHandler, %function
 10024              	TIM4_IRQHandler:
 10025              		@ args = 0, pretend = 0, frame = 0
 10026              		@ frame_needed = 0, uses_anonymous_args = 0
 10027              		@ link register save eliminated.
 10028              	@ main.c:5532: 		TIM4->SR = 0;
 10029 0000 0021     		movs	r1, #0	@ tmp114,
 10030 0002 034B     		ldr	r3, .L805	@ tmp112,
 10031              	@ main.c:5534: 		Tim4++;
 10032 0004 034A     		ldr	r2, .L805+4	@ tmp115,
ARM GAS  /tmp/ccjvICQi.s 			page 177


 10033              	@ main.c:5532: 		TIM4->SR = 0;
 10034 0006 1982     		strh	r1, [r3, #16]	@ movhi	@ tmp114, MEM[(struct TIM_TypeDef *)1073743872B].SR
 10035              	@ main.c:5534: 		Tim4++;
 10036 0008 1368     		ldr	r3, [r2]	@ Tim4.292_1, Tim4
 10037 000a 0133     		adds	r3, r3, #1	@ _2, Tim4.292_1,
 10038 000c 1360     		str	r3, [r2]	@ _2, Tim4
 10039              	@ main.c:5535: 	}
 10040 000e 7047     		bx	lr	@
 10041              	.L806:
 10042              		.align	2
 10043              	.L805:
 10044 0010 00080040 		.word	1073743872
 10045 0014 00000000 		.word	Tim4
 10046              		.size	TIM4_IRQHandler, .-TIM4_IRQHandler
 10047              		.section	.text.adc1_init_injected,"ax",%progbits
 10048              		.align	1
 10049              		.p2align 2,,3
 10050              		.global	adc1_init_injected
 10051              		.syntax unified
 10052              		.thumb
 10053              		.thumb_func
 10054              		.fpu softvfp
 10055              		.type	adc1_init_injected, %function
 10056              	adc1_init_injected:
 10057              		@ args = 0, pretend = 0, frame = 0
 10058              		@ frame_needed = 0, uses_anonymous_args = 0
 10059              		@ link register save eliminated.
 10060 0000 F0B4     		push	{r4, r5, r6, r7}	@
 10061              	@ main.c:5580: 	ADC1_CR1_SCAN_bb = 1;									// enable scan mode (multi channel mode)
 10062 0002 0124     		movs	r4, #1	@ tmp144,
 10063              	@ main.c:5570: 	ADC1->SMPR2 = (0<<channel*3);
 10064 0004 0026     		movs	r6, #0	@ tmp131,
 10065              	@ main.c:5578: 	ADC1->CR2 = ADC_CR2_JEXTSEL_JSWSTART | ADC_CR2_JEXTTRIG | ADC_CR2_CAL | ADC_CR2_ADO
 10066 0006 4FF20505 		movw	r5, #61445	@ tmp142,
 10067              	@ main.c:5567: 	RCC->CFGR |= RCC_CFGR_ADCPRE_DIV2;		// divide the ADC clock by 6 -> f_SAMP = 0.85MH
 10068 000a 114A     		ldr	r2, .L815	@ tmp126,
 10069              	@ main.c:5574: 			(channel << ADC_JSQR_JSQ3_bit) |
 10070 000c 8B02     		lsls	r3, r1, #10	@ tmp133, channel,
 10071              	@ main.c:5567: 	RCC->CFGR |= RCC_CFGR_ADCPRE_DIV2;		// divide the ADC clock by 6 -> f_SAMP = 0.85MH
 10072 000e 5768     		ldr	r7, [r2, #4]	@ _1, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 10073              	@ main.c:5575: 			(channel << ADC_JSQR_JSQ2_bit) |
 10074 0010 43EAC133 		orr	r3, r3, r1, lsl #15	@ tmp134, tmp133, channel,
 10075 0014 0B43     		orrs	r3, r3, r1	@, tmp135, tmp134, channel
 10076              	@ main.c:5567: 	RCC->CFGR |= RCC_CFGR_ADCPRE_DIV2;		// divide the ADC clock by 6 -> f_SAMP = 0.85MH
 10077 0016 5760     		str	r7, [r2, #4]	@ _1, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 10078              	@ main.c:5572: 	ADC1->JSQR = ((conversions - 1) << ADC_JSQR_JL_bit) |	// configure desired number o
 10079 0018 0138     		subs	r0, r0, #1	@ tmp138, conversions,
 10080              	@ main.c:5575: 			(channel << ADC_JSQR_JSQ2_bit) |
 10081 001a 43EA4113 		orr	r3, r3, r1, lsl #5	@ tmp137, tmp135, channel,
 10082 001e 43EA0053 		orr	r3, r3, r0, lsl #20	@ _12, tmp137, tmp138,
 10083              	@ main.c:5568: 	RCC->APB2ENR   |= RCC_APB2ENR_ADC1EN;	// enable clock for ADC1
 10084 0022 9069     		ldr	r0, [r2, #24]	@ _2, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 10085              	@ main.c:5570: 	ADC1->SMPR2 = (0<<channel*3);
 10086 0024 0B49     		ldr	r1, .L815+4	@ tmp130,
 10087              	@ main.c:5568: 	RCC->APB2ENR   |= RCC_APB2ENR_ADC1EN;	// enable clock for ADC1
 10088 0026 40F40070 		orr	r0, r0, #512	@ _3, _2,
 10089 002a 9061     		str	r0, [r2, #24]	@ _3, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
ARM GAS  /tmp/ccjvICQi.s 			page 178


 10090              	@ main.c:5580: 	ADC1_CR1_SCAN_bb = 1;									// enable scan mode (multi channel mode)
 10091 002c 0A4F     		ldr	r7, .L815+8	@ tmp143,
 10092              	@ main.c:5582: 	ADC1_CR2_JSWSTART_bb = 1;						// start Injected Group
 10093 002e 0B48     		ldr	r0, .L815+12	@ tmp145,
 10094              	@ main.c:5583: 	while (ADC1_SR_JSTRT_bb == 0);			// wait for conversion to start
 10095 0030 0B4A     		ldr	r2, .L815+16	@ tmp147,
 10096              	@ main.c:5570: 	ADC1->SMPR2 = (0<<channel*3);
 10097 0032 0E61     		str	r6, [r1, #16]	@ tmp131, MEM[(struct ADC_TypeDef *)1073816576B].SMPR2
 10098              	@ main.c:5572: 	ADC1->JSQR = ((conversions - 1) << ADC_JSQR_JL_bit) |	// configure desired number o
 10099 0034 8B63     		str	r3, [r1, #56]	@ _12, MEM[(struct ADC_TypeDef *)1073816576B].JSQR
 10100              	@ main.c:5578: 	ADC1->CR2 = ADC_CR2_JEXTSEL_JSWSTART | ADC_CR2_JEXTTRIG | ADC_CR2_CAL | ADC_CR2_ADO
 10101 0036 8D60     		str	r5, [r1, #8]	@ tmp142, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 10102              	@ main.c:5580: 	ADC1_CR1_SCAN_bb = 1;									// enable scan mode (multi channel mode)
 10103 0038 3C60     		str	r4, [r7]	@ tmp144, MEM[(volatile long unsigned int *)1109688480B]
 10104              	@ main.c:5582: 	ADC1_CR2_JSWSTART_bb = 1;						// start Injected Group
 10105 003a 0460     		str	r4, [r0]	@ tmp144, MEM[(volatile long unsigned int *)1109688660B]
 10106              	.L808:
 10107              	@ main.c:5583: 	while (ADC1_SR_JSTRT_bb == 0);			// wait for conversion to start
 10108 003c 1368     		ldr	r3, [r2]	@ _13, MEM[(volatile long unsigned int *)1109688332B]
 10109 003e 002B     		cmp	r3, #0	@ _13
 10110 0040 FCD0     		beq	.L808	@
 10111              	@ main.c:5589: 	while (ADC1_CR2_CAL_bb == 1);					// wait for calibration end
 10112 0042 084A     		ldr	r2, .L815+20	@ tmp148,
 10113              	.L809:
 10114              	@ main.c:5589: 	while (ADC1_CR2_CAL_bb == 1);					// wait for calibration end
 10115 0044 1368     		ldr	r3, [r2]	@ _14, MEM[(volatile long unsigned int *)1109688584B]
 10116 0046 012B     		cmp	r3, #1	@ _14,
 10117 0048 FCD0     		beq	.L809	@,
 10118              	@ main.c:5590: }
 10119 004a F0BC     		pop	{r4, r5, r6, r7}	@
 10120 004c 7047     		bx	lr	@
 10121              	.L816:
 10122 004e 00BF     		.align	2
 10123              	.L815:
 10124 0050 00100240 		.word	1073876992
 10125 0054 00240140 		.word	1073816576
 10126 0058 A0802442 		.word	1109688480
 10127 005c 54812442 		.word	1109688660
 10128 0060 0C802442 		.word	1109688332
 10129 0064 08812442 		.word	1109688584
 10130              		.size	adc1_init_injected, .-adc1_init_injected
 10131              		.section	.text.adc_get_internals,"ax",%progbits
 10132              		.align	1
 10133              		.p2align 2,,3
 10134              		.global	adc_get_internals
 10135              		.syntax unified
 10136              		.thumb
 10137              		.thumb_func
 10138              		.fpu softvfp
 10139              		.type	adc_get_internals, %function
 10140              	adc_get_internals:
 10141              		@ args = 0, pretend = 0, frame = 0
 10142              		@ frame_needed = 0, uses_anonymous_args = 0
 10143              		@ link register save eliminated.
 10144              	@ main.c:5596: 	ADC1_CR2_JSWSTART_bb = 1;						// start Injected Group
 10145 0000 0122     		movs	r2, #1	@ tmp122,
 10146              	@ main.c:5591: uint32_t adc_get_internals(uint32_t avg_cycles)		{
ARM GAS  /tmp/ccjvICQi.s 			page 179


 10147 0002 10B4     		push	{r4}	@
 10148              	@ main.c:5591: uint32_t adc_get_internals(uint32_t avg_cycles)		{
 10149 0004 0446     		mov	r4, r0	@ avg_cycles, avg_cycles
 10150              	@ main.c:5596: 	ADC1_CR2_JSWSTART_bb = 1;						// start Injected Group
 10151 0006 134B     		ldr	r3, .L831	@ tmp121,
 10152              	@ main.c:5597: 	while (ADC1_SR_JSTRT_bb == 0);			// wait for conversion to start
 10153 0008 1349     		ldr	r1, .L831+4	@ tmp123,
 10154              	@ main.c:5596: 	ADC1_CR2_JSWSTART_bb = 1;						// start Injected Group
 10155 000a 1A60     		str	r2, [r3]	@ tmp122, MEM[(volatile long unsigned int *)1109688660B]
 10156              	.L818:
 10157              	@ main.c:5597: 	while (ADC1_SR_JSTRT_bb == 0);			// wait for conversion to start
 10158 000c 0B68     		ldr	r3, [r1]	@ _1, MEM[(volatile long unsigned int *)1109688332B]
 10159 000e 002B     		cmp	r3, #0	@ _1
 10160 0010 FCD0     		beq	.L818	@
 10161              	@ main.c:5598: 	ADC1_SR_JSTRT_bb = 0;								// reset "Injected Group start of conversion" flag
 10162 0012 0023     		movs	r3, #0	@ tmp125,
 10163              	@ main.c:5599: 	while (ADC1_SR_JEOC_bb == 0);				// wait for conversions to end
 10164 0014 114A     		ldr	r2, .L831+8	@ tmp126,
 10165              	@ main.c:5598: 	ADC1_SR_JSTRT_bb = 0;								// reset "Injected Group start of conversion" flag
 10166 0016 0B60     		str	r3, [r1]	@ tmp125, MEM[(volatile long unsigned int *)1109688332B]
 10167              	.L819:
 10168              	@ main.c:5599: 	while (ADC1_SR_JEOC_bb == 0);				// wait for conversions to end
 10169 0018 1368     		ldr	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109688328B]
 10170 001a 002B     		cmp	r3, #0	@ _2
 10171 001c FCD0     		beq	.L819	@
 10172              	@ main.c:5600: 	ADC1_SR_JEOC_bb = 0;								// reset "end of conversion" flag
 10173 001e 0020     		movs	r0, #0	@ tmp128,
 10174 0020 1060     		str	r0, [r2]	@ tmp128, MEM[(volatile long unsigned int *)1109688328B]
 10175              	@ main.c:5602: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 10176 0022 A4B1     		cbz	r4, .L823	@ avg_cycles,
 10177 0024 0E49     		ldr	r1, .L831+12	@ tmp129,
 10178 0026 0F4A     		ldr	r2, .L831+16	@ pretmp_5,
 10179 0028 0B1D     		adds	r3, r1, #4	@ ivtmp.790, tmp129,
 10180              	@ main.c:5603: 		value += *jdrs[i];
 10181 002a 1268     		ldr	r2, [r2]	@ _14, *prephitmp_20
 10182 002c 01EB8401 		add	r1, r1, r4, lsl #2	@ _24, tmp129, avg_cycles,
 10183              	@ main.c:5602: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 10184 0030 8B42     		cmp	r3, r1	@ ivtmp.790, _24
 10185              	@ main.c:5603: 		value += *jdrs[i];
 10186 0032 1044     		add	r0, r0, r2	@ <retval>, _14
 10187              	@ main.c:5602: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 10188 0034 05D0     		beq	.L821	@,
 10189              	.L830:
 10190 0036 53F8042B 		ldr	r2, [r3], #4	@ pretmp_5, MEM[base: _25, offset: 0B]
 10191              	@ main.c:5603: 		value += *jdrs[i];
 10192 003a 1268     		ldr	r2, [r2]	@ _14, *prephitmp_20
 10193              	@ main.c:5602: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 10194 003c 8B42     		cmp	r3, r1	@ ivtmp.790, _24
 10195              	@ main.c:5603: 		value += *jdrs[i];
 10196 003e 1044     		add	r0, r0, r2	@ <retval>, _14
 10197              	@ main.c:5602: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 10198 0040 F9D1     		bne	.L830	@,
 10199              	.L821:
 10200              	@ main.c:5605: 	if (avg_cycles > 1)									// should the samples be averaged?
 10201 0042 012C     		cmp	r4, #1	@ avg_cycles,
 10202 0044 01D9     		bls	.L817	@,
 10203              	@ main.c:5608: 		value /= avg_cycles;
ARM GAS  /tmp/ccjvICQi.s 			page 180


 10204 0046 B0FBF4F0 		udiv	r0, r0, r4	@ <retval>, <retval>, avg_cycles
 10205              	.L817:
 10206              	@ main.c:5612: }
 10207 004a 10BC     		pop	{r4}	@
 10208 004c 7047     		bx	lr	@
 10209              	.L823:
 10210              	@ main.c:5594: 	uint32_t i, value = 0;
 10211 004e 2046     		mov	r0, r4	@ <retval>, avg_cycles
 10212              	@ main.c:5612: }
 10213 0050 10BC     		pop	{r4}	@
 10214 0052 7047     		bx	lr	@
 10215              	.L832:
 10216              		.align	2
 10217              	.L831:
 10218 0054 54812442 		.word	1109688660
 10219 0058 0C802442 		.word	1109688332
 10220 005c 08802442 		.word	1109688328
 10221 0060 00000000 		.word	.LANCHOR36
 10222 0064 3C240140 		.word	1073816636
 10223              		.size	adc_get_internals, .-adc_get_internals
 10224              		.section	.text.adc_get_injected,"ax",%progbits
 10225              		.align	1
 10226              		.p2align 2,,3
 10227              		.global	adc_get_injected
 10228              		.syntax unified
 10229              		.thumb
 10230              		.thumb_func
 10231              		.fpu softvfp
 10232              		.type	adc_get_injected, %function
 10233              	adc_get_injected:
 10234              		@ args = 0, pretend = 0, frame = 0
 10235              		@ frame_needed = 0, uses_anonymous_args = 0
 10236              		@ link register save eliminated.
 10237              	@ main.c:5618: 	ADC1_CR2_JSWSTART_bb = 1;
 10238 0000 0121     		movs	r1, #1	@ tmp121,
 10239              	@ main.c:5613: uint32_t adc_get_injected(uint32_t avg_cycles)		{
 10240 0002 10B4     		push	{r4}	@
 10241              	@ main.c:5613: uint32_t adc_get_injected(uint32_t avg_cycles)		{
 10242 0004 0446     		mov	r4, r0	@ avg_cycles, avg_cycles
 10243              	@ main.c:5618: 	ADC1_CR2_JSWSTART_bb = 1;
 10244 0006 104B     		ldr	r3, .L844	@ tmp120,
 10245              	@ main.c:5619: 	while (ADC1_SR_JEOC_bb == 0);				// wait for conversions to end
 10246 0008 104A     		ldr	r2, .L844+4	@ tmp122,
 10247              	@ main.c:5618: 	ADC1_CR2_JSWSTART_bb = 1;
 10248 000a 1960     		str	r1, [r3]	@ tmp121, MEM[(volatile long unsigned int *)1109688660B]
 10249              	.L834:
 10250              	@ main.c:5619: 	while (ADC1_SR_JEOC_bb == 0);				// wait for conversions to end
 10251 000c 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109688328B]
 10252 000e 002B     		cmp	r3, #0	@ _1
 10253 0010 FCD0     		beq	.L834	@
 10254              	@ main.c:5620: 	ADC1_SR_JEOC_bb = 0;								// reset "end of conversion" flag
 10255 0012 0020     		movs	r0, #0	@ tmp124,
 10256 0014 1060     		str	r0, [r2]	@ tmp124, MEM[(volatile long unsigned int *)1109688328B]
 10257              	@ main.c:5622: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 10258 0016 A4B1     		cbz	r4, .L838	@ avg_cycles,
 10259 0018 0D4B     		ldr	r3, .L844+8	@ ivtmp.804,
 10260 001a 0E4A     		ldr	r2, .L844+12	@ pretmp_4,
ARM GAS  /tmp/ccjvICQi.s 			page 181


 10261 001c 191F     		subs	r1, r3, #4	@ tmp126, ivtmp.804,
 10262 001e 01EB8401 		add	r1, r1, r4, lsl #2	@ _22, tmp126, avg_cycles,
 10263              	@ main.c:5623: 		value += *jdrs[i];
 10264 0022 1268     		ldr	r2, [r2]	@ _12, *prephitmp_18
 10265              	@ main.c:5622: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 10266 0024 8B42     		cmp	r3, r1	@ ivtmp.804, _22
 10267              	@ main.c:5623: 		value += *jdrs[i];
 10268 0026 1044     		add	r0, r0, r2	@ <retval>, _12
 10269              	@ main.c:5622: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 10270 0028 05D0     		beq	.L836	@,
 10271              	.L843:
 10272 002a 53F8042B 		ldr	r2, [r3], #4	@ pretmp_4, MEM[base: _23, offset: 0B]
 10273              	@ main.c:5623: 		value += *jdrs[i];
 10274 002e 1268     		ldr	r2, [r2]	@ _12, *prephitmp_18
 10275              	@ main.c:5622: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 10276 0030 8B42     		cmp	r3, r1	@ ivtmp.804, _22
 10277              	@ main.c:5623: 		value += *jdrs[i];
 10278 0032 1044     		add	r0, r0, r2	@ <retval>, _12
 10279              	@ main.c:5622: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 10280 0034 F9D1     		bne	.L843	@,
 10281              	.L836:
 10282              	@ main.c:5625: 	if (avg_cycles > 1)									// should the samples be averaged?
 10283 0036 012C     		cmp	r4, #1	@ avg_cycles,
 10284 0038 01D9     		bls	.L833	@,
 10285              	@ main.c:5628: 		value /= avg_cycles;
 10286 003a B0FBF4F0 		udiv	r0, r0, r4	@ <retval>, <retval>, avg_cycles
 10287              	.L833:
 10288              	@ main.c:5632: }
 10289 003e 10BC     		pop	{r4}	@
 10290 0040 7047     		bx	lr	@
 10291              	.L838:
 10292              	@ main.c:5616: 	uint32_t i, value = 0;
 10293 0042 2046     		mov	r0, r4	@ <retval>, avg_cycles
 10294              	@ main.c:5632: }
 10295 0044 10BC     		pop	{r4}	@
 10296 0046 7047     		bx	lr	@
 10297              	.L845:
 10298              		.align	2
 10299              	.L844:
 10300 0048 54812442 		.word	1109688660
 10301 004c 08802442 		.word	1109688328
 10302 0050 04000000 		.word	jdrs.9072+4
 10303 0054 3C240140 		.word	1073816636
 10304              		.size	adc_get_injected, .-adc_get_injected
 10305              		.section	.text.NVIC_conf,"ax",%progbits
 10306              		.align	1
 10307              		.p2align 2,,3
 10308              		.global	NVIC_conf
 10309              		.syntax unified
 10310              		.thumb
 10311              		.thumb_func
 10312              		.fpu softvfp
 10313              		.type	NVIC_conf, %function
 10314              	NVIC_conf:
 10315              		@ args = 0, pretend = 0, frame = 0
 10316              		@ frame_needed = 0, uses_anonymous_args = 0
 10317              		@ link register save eliminated.
ARM GAS  /tmp/ccjvICQi.s 			page 182


 10318 0000 70B4     		push	{r4, r5, r6}	@
 10319              	@ main.c:5641: 	NVIC->IP[TIM1_CC_IRQn] = (0<<4);           //Set the highest priority for TIMER1, s
 10320 0002 0020     		movs	r0, #0	@ tmp122,
 10321              	@ main.c:5639: 	NVIC->IP[ADC1_2_IRQn]  = (2<<4);
 10322 0004 2025     		movs	r5, #32	@ tmp116,
 10323              	@ main.c:5640: 	NVIC->IP[DMA1_Channel1_IRQn] = (1<<4);
 10324 0006 1024     		movs	r4, #16	@ tmp119,
 10325              	@ main.c:5636: 	SCB->AIRCR |= AIRCR_VECTKEY_MASK | (3<<8);      //[Optional] Define interrupt field
 10326 0008 0749     		ldr	r1, .L848	@ tmp112,
 10327 000a 084A     		ldr	r2, .L848+4	@ _2,
 10328 000c CE68     		ldr	r6, [r1, #12]	@ _1, MEM[(struct SCB_Type *)3758157056B].AIRCR
 10329              	@ main.c:5639: 	NVIC->IP[ADC1_2_IRQn]  = (2<<4);
 10330 000e 084B     		ldr	r3, .L848+8	@ tmp115,
 10331              	@ main.c:5636: 	SCB->AIRCR |= AIRCR_VECTKEY_MASK | (3<<8);      //[Optional] Define interrupt field
 10332 0010 3243     		orrs	r2, r2, r6	@, _2, _2, _1
 10333 0012 CA60     		str	r2, [r1, #12]	@ _2, MEM[(struct SCB_Type *)3758157056B].AIRCR
 10334              	@ main.c:5644: 	NVIC->ISER[0]= (1<<TIM1_CC_IRQn )|(1<<ADC1_2_IRQn)|(1<<DMA1_Channel1_IRQn);   //Ena
 10335 0014 074A     		ldr	r2, .L848+12	@ tmp125,
 10336              	@ main.c:5639: 	NVIC->IP[ADC1_2_IRQn]  = (2<<4);
 10337 0016 83F81253 		strb	r5, [r3, #786]	@ tmp116, MEM[(struct NVIC_Type *)3758153984B].IP
 10338              	@ main.c:5640: 	NVIC->IP[DMA1_Channel1_IRQn] = (1<<4);
 10339 001a 83F80B43 		strb	r4, [r3, #779]	@ tmp119, MEM[(struct NVIC_Type *)3758153984B].IP
 10340              	@ main.c:5641: 	NVIC->IP[TIM1_CC_IRQn] = (0<<4);           //Set the highest priority for TIMER1, s
 10341 001e 83F81B03 		strb	r0, [r3, #795]	@ tmp122, MEM[(struct NVIC_Type *)3758153984B].IP
 10342              	@ main.c:5645: }
 10343 0022 70BC     		pop	{r4, r5, r6}	@
 10344              	@ main.c:5644: 	NVIC->ISER[0]= (1<<TIM1_CC_IRQn )|(1<<ADC1_2_IRQn)|(1<<DMA1_Channel1_IRQn);   //Ena
 10345 0024 1A60     		str	r2, [r3]	@ tmp125, MEM[(struct NVIC_Type *)3758153984B].ISER
 10346              	@ main.c:5645: }
 10347 0026 7047     		bx	lr	@
 10348              	.L849:
 10349              		.align	2
 10350              	.L848:
 10351 0028 00ED00E0 		.word	-536810240
 10352 002c 0003FA05 		.word	100270848
 10353 0030 00E100E0 		.word	-536813312
 10354 0034 00080408 		.word	134481920
 10355              		.size	NVIC_conf, .-NVIC_conf
 10356              		.section	.text.SetDate,"ax",%progbits
 10357              		.align	1
 10358              		.p2align 2,,3
 10359              		.global	SetDate
 10360              		.syntax unified
 10361              		.thumb
 10362              		.thumb_func
 10363              		.fpu softvfp
 10364              		.type	SetDate, %function
 10365              	SetDate:
 10366              		@ args = 0, pretend = 0, frame = 40
 10367              		@ frame_needed = 0, uses_anonymous_args = 0
 10368 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 10369              	@ main.c:5652: 	UaPutS("\r\n rok = ");
 10370 0004 6548     		ldr	r0, .L866	@,
 10371              	@ main.c:5649: void SetDate(void)	{
 10372 0006 8BB0     		sub	sp, sp, #44	@,,
 10373              	@ main.c:5652: 	UaPutS("\r\n rok = ");
 10374 0008 FFF7FEFF 		bl	UaPutS	@
ARM GAS  /tmp/ccjvICQi.s 			page 183


 10375              	@ main.c:5653: 	u16 yer = str2int((char *)u1buf);
 10376 000c 06A8     		add	r0, sp, #24	@ tmp230,,
 10377 000e FFF7FEFF 		bl	str2int	@
 10378              	@ main.c:5654: 	memset((char *)u1buf,0,16);
 10379 0012 0027     		movs	r7, #0	@ tmp152,
 10380              	@ main.c:5653: 	u16 yer = str2int((char *)u1buf);
 10381 0014 0546     		mov	r5, r0	@ _1,
 10382              	@ main.c:5655: 	UaPutS("\r\n mies = ");
 10383 0016 6248     		ldr	r0, .L866+4	@,
 10384              	@ main.c:5654: 	memset((char *)u1buf,0,16);
 10385 0018 CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 10386 001c CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 10387              	@ main.c:5655: 	UaPutS("\r\n mies = ");
 10388 0020 FFF7FEFF 		bl	UaPutS	@
 10389              	@ main.c:5656: 	u08 mon = str2int((char *)u1buf);
 10390 0024 06A8     		add	r0, sp, #24	@ tmp231,,
 10391 0026 FFF7FEFF 		bl	str2int	@
 10392 002a 0646     		mov	r6, r0	@ _2,
 10393              	@ main.c:5658: 	UaPutS("\r\n dzien = ");
 10394 002c 5D48     		ldr	r0, .L866+8	@,
 10395              	@ main.c:5657: 	memset((char *)u1buf,0,16);
 10396 002e CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 10397 0032 CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 10398              	@ main.c:5658: 	UaPutS("\r\n dzien = ");
 10399 0036 FFF7FEFF 		bl	UaPutS	@
 10400              	@ main.c:5659: 	u08 day = str2int((char *)u1buf);
 10401 003a 06A8     		add	r0, sp, #24	@ tmp232,,
 10402 003c FFF7FEFF 		bl	str2int	@
 10403 0040 8246     		mov	r10, r0	@ _3,
 10404              	@ main.c:5661: 	UaPutS("\r\n gdz = ");
 10405 0042 5948     		ldr	r0, .L866+12	@,
 10406              	@ main.c:5660: 	memset((char *)u1buf,0,16);
 10407 0044 CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 10408 0048 CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 10409              	@ main.c:5661: 	UaPutS("\r\n gdz = ");
 10410 004c FFF7FEFF 		bl	UaPutS	@
 10411              	@ main.c:5662: 	u08 hor = str2int((char *)u1buf);
 10412 0050 06A8     		add	r0, sp, #24	@ tmp233,,
 10413 0052 FFF7FEFF 		bl	str2int	@
 10414 0056 8046     		mov	r8, r0	@ _4,
 10415              	@ main.c:5664: 	UaPutS("\r\n min = ");
 10416 0058 5448     		ldr	r0, .L866+16	@,
 10417              	@ main.c:5663: 	memset((char *)u1buf,0,16);
 10418 005a CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 10419 005e CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 10420              	@ main.c:5664: 	UaPutS("\r\n min = ");
 10421 0062 FFF7FEFF 		bl	UaPutS	@
 10422              	@ main.c:5665: 	u08 min = str2int((char *)u1buf);
 10423 0066 06A8     		add	r0, sp, #24	@ tmp234,,
 10424 0068 FFF7FEFF 		bl	str2int	@
 10425 006c 8146     		mov	r9, r0	@ _5,
 10426              	@ main.c:5667: 	UaPutS("\r\n sek = ");
 10427 006e 5048     		ldr	r0, .L866+20	@,
 10428              	@ main.c:5666: 	memset((char *)u1buf,0,16);
 10429 0070 CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 10430 0074 CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 10431              	@ main.c:5667: 	UaPutS("\r\n sek = ");
ARM GAS  /tmp/ccjvICQi.s 			page 184


 10432 0078 FFF7FEFF 		bl	UaPutS	@
 10433              	@ main.c:5668: 	u08 sec = str2int((char *)u1buf);
 10434 007c 06A8     		add	r0, sp, #24	@ tmp235,,
 10435 007e FFF7FEFF 		bl	str2int	@
 10436              	@ main.c:5669: 	memset((char *)u1buf,0,16);
 10437 0082 CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 10438 0086 CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 10439              	@ main.c:5670: 	u32 Uxt = 1924984799;
 10440 008a 4A4C     		ldr	r4, .L866+24	@ Uxt,
 10441 008c DFF830B1 		ldr	fp, .L866+36	@ tmp226,
 10442              	@ main.c:5668: 	u08 sec = str2int((char *)u1buf);
 10443 0090 0190     		str	r0, [sp, #4]	@, %sfp
 10444 0092 ADB2     		uxth	r5, r5	@ _92, _1
 10445              	@ main.c:5674: 			if(ptm.tm_mon == mon) 	{
 10446 0094 F6B2     		uxtb	r6, r6	@ _2, _2
 10447              	@ main.c:5675: 				if(ptm.tm_mday == day)  {
 10448 0096 5FFA8AFA 		uxtb	r10, r10	@ _3, _3
 10449              	@ main.c:5676: 					if(ptm.tm_hour == hor)  {
 10450 009a 5FFA88F8 		uxtb	r8, r8	@ _4, _4
 10451              	.L859:
 10452              	@ main.c:5672: 		gmtime_r (&Uxt, &ptm);
 10453 009e 2046     		mov	r0, r4	@, Uxt
 10454 00a0 FFF7FEFF 		bl	gmtime_r.isra.0.constprop.2	@
 10455              	@ main.c:5673: 		if(ptm.tm_year == yer) 	{
 10456 00a4 DBF81430 		ldr	r3, [fp, #20]	@ ptm.tm_year, ptm.tm_year
 10457 00a8 AB42     		cmp	r3, r5	@ ptm.tm_year, _92
 10458 00aa 08D0     		beq	.L862	@,
 10459              	.L851:
 10460              	@ main.c:5694: 		} else Uxt -= 86400;
 10461 00ac A4F5A834 		sub	r4, r4, #86016	@ Uxt, Uxt,
 10462 00b0 A4F5C074 		sub	r4, r4, #384	@ Uxt, Uxt,
 10463              	@ main.c:5696: 	while(Uxt);
 10464 00b4 002C     		cmp	r4, #0	@ Uxt
 10465 00b6 F2D1     		bne	.L859	@
 10466              	.L850:
 10467              	@ main.c:5697: }
 10468 00b8 0BB0     		add	sp, sp, #44	@,,
 10469              		@ sp needed	@
 10470 00ba BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 10471              	.L862:
 10472              	@ main.c:5674: 			if(ptm.tm_mon == mon) 	{
 10473 00be DBF81030 		ldr	r3, [fp, #16]	@ ptm.tm_mon, ptm.tm_mon
 10474 00c2 B342     		cmp	r3, r6	@ ptm.tm_mon, _2
 10475 00c4 F2D1     		bne	.L851	@,
 10476              	@ main.c:5675: 				if(ptm.tm_mday == day)  {
 10477 00c6 DBF80C30 		ldr	r3, [fp, #12]	@ ptm.tm_mday, ptm.tm_mday
 10478 00ca 5345     		cmp	r3, r10	@ ptm.tm_mday, _3
 10479 00cc EED1     		bne	.L851	@,
 10480              	@ main.c:5676: 					if(ptm.tm_hour == hor)  {
 10481 00ce DBF80830 		ldr	r3, [fp, #8]	@ ptm.tm_hour, ptm.tm_hour
 10482 00d2 4345     		cmp	r3, r8	@ ptm.tm_hour, _4
 10483 00d4 04D0     		beq	.L863	@,
 10484              	@ main.c:5691: 					}else Uxt -= 3600;
 10485 00d6 A4F56164 		sub	r4, r4, #3600	@ Uxt, Uxt,
 10486              	@ main.c:5696: 	while(Uxt);
 10487 00da 002C     		cmp	r4, #0	@ Uxt
 10488 00dc DFD1     		bne	.L859	@
ARM GAS  /tmp/ccjvICQi.s 			page 185


 10489 00de EBE7     		b	.L850	@
 10490              	.L863:
 10491              	@ main.c:5677: 						if(ptm.tm_min == min) 	{
 10492 00e0 DBF80420 		ldr	r2, [fp, #4]	@ ptm.tm_min, ptm.tm_min
 10493 00e4 5FFA89F3 		uxtb	r3, r9	@ _5, _5
 10494 00e8 9A42     		cmp	r2, r3	@ ptm.tm_min, _5
 10495 00ea 03D0     		beq	.L864	@,
 10496              	@ main.c:5690: 						}else Uxt -= 60;
 10497 00ec 3C3C     		subs	r4, r4, #60	@ Uxt, Uxt,
 10498              	@ main.c:5696: 	while(Uxt);
 10499 00ee 002C     		cmp	r4, #0	@ Uxt
 10500 00f0 D5D1     		bne	.L859	@
 10501 00f2 E1E7     		b	.L850	@
 10502              	.L864:
 10503              	@ main.c:5678: 							if(ptm.tm_sec == sec)		{
 10504 00f4 DBF80020 		ldr	r2, [fp]	@ ptm.tm_sec, ptm.tm_sec
 10505 00f8 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2	@ _6, %sfp
 10506 00fc 9A42     		cmp	r2, r3	@ ptm.tm_sec, _6
 10507 00fe 03D0     		beq	.L865	@,
 10508              	@ main.c:5689: 							} else Uxt --;
 10509 0100 013C     		subs	r4, r4, #1	@ Uxt, Uxt,
 10510              	@ main.c:5696: 	while(Uxt);
 10511 0102 002C     		cmp	r4, #0	@ Uxt
 10512 0104 CBD1     		bne	.L859	@
 10513 0106 D7E7     		b	.L850	@
 10514              	.L865:
 10515              	@ main.c:5679: 								gmtime_r (&Uxt, &ptm);
 10516 0108 2046     		mov	r0, r4	@, Uxt
 10517 010a FFF7FEFF 		bl	gmtime_r.isra.0.constprop.2	@
 10518              	@ main.c:5680: 								UaPutS("\r\n ");
 10519 010e 2A48     		ldr	r0, .L866+28	@,
 10520 0110 FFF7FEFF 		bl	UaPutS	@
 10521              	@ main.c:5681: 								UaPutS(uint2str(ptm.tm_year,tbuf));		UaPutC('-');
 10522 0114 02A9     		add	r1, sp, #8	@,,
 10523 0116 DBF81400 		ldr	r0, [fp, #20]	@, ptm.tm_year
 10524 011a FFF7FEFF 		bl	uint2str	@
 10525 011e FFF7FEFF 		bl	UaPutS	@
 10526 0122 2D20     		movs	r0, #45	@,
 10527 0124 FFF7FEFF 		bl	UaPutC	@
 10528              	@ main.c:5682: 								UaPutS(uint2str(ptm.tm_mon,tbuf));		UaPutC('-');
 10529 0128 02A9     		add	r1, sp, #8	@,,
 10530 012a DBF81000 		ldr	r0, [fp, #16]	@, ptm.tm_mon
 10531 012e FFF7FEFF 		bl	uint2str	@
 10532 0132 FFF7FEFF 		bl	UaPutS	@
 10533 0136 2D20     		movs	r0, #45	@,
 10534 0138 FFF7FEFF 		bl	UaPutC	@
 10535              	@ main.c:5683: 								UaPutS(uint2str(ptm.tm_mday,tbuf));		UaPutC(' ');
 10536 013c 02A9     		add	r1, sp, #8	@,,
 10537 013e DBF80C00 		ldr	r0, [fp, #12]	@, ptm.tm_mday
 10538 0142 FFF7FEFF 		bl	uint2str	@
 10539 0146 FFF7FEFF 		bl	UaPutS	@
 10540 014a 2020     		movs	r0, #32	@,
 10541 014c FFF7FEFF 		bl	UaPutC	@
 10542              	@ main.c:5684: 								UaPutS(uint2str(ptm.tm_hour,tbuf));		UaPutC(':');
 10543 0150 02A9     		add	r1, sp, #8	@,,
 10544 0152 DBF80800 		ldr	r0, [fp, #8]	@, ptm.tm_hour
 10545 0156 FFF7FEFF 		bl	uint2str	@
ARM GAS  /tmp/ccjvICQi.s 			page 186


 10546 015a FFF7FEFF 		bl	UaPutS	@
 10547 015e 3A20     		movs	r0, #58	@,
 10548 0160 FFF7FEFF 		bl	UaPutC	@
 10549              	@ main.c:5685: 								UaPutS(uint2str(ptm.tm_min,tbuf));		UaPutC(':');
 10550 0164 02A9     		add	r1, sp, #8	@,,
 10551 0166 DBF80400 		ldr	r0, [fp, #4]	@, ptm.tm_min
 10552 016a FFF7FEFF 		bl	uint2str	@
 10553 016e FFF7FEFF 		bl	UaPutS	@
 10554 0172 3A20     		movs	r0, #58	@,
 10555 0174 FFF7FEFF 		bl	UaPutC	@
 10556              	@ main.c:5686: 								UaPutS(uint2str(ptm.tm_sec,tbuf));		UaPutS("\r\n TimStmp = ");
 10557 0178 02A9     		add	r1, sp, #8	@,,
 10558 017a DBF80000 		ldr	r0, [fp]	@, ptm.tm_sec
 10559 017e FFF7FEFF 		bl	uint2str	@
 10560 0182 FFF7FEFF 		bl	UaPutS	@
 10561 0186 0D48     		ldr	r0, .L866+32	@,
 10562 0188 FFF7FEFF 		bl	UaPutS	@
 10563              	@ main.c:5687: 								UaPutS(uint2str(Uxt,tbuf));
 10564 018c 02A9     		add	r1, sp, #8	@,,
 10565 018e 2046     		mov	r0, r4	@, Uxt
 10566 0190 FFF7FEFF 		bl	uint2str	@
 10567 0194 FFF7FEFF 		bl	UaPutS	@
 10568              	@ main.c:5688: 								break;
 10569 0198 8EE7     		b	.L850	@
 10570              	.L867:
 10571 019a 00BF     		.align	2
 10572              	.L866:
 10573 019c 00000000 		.word	.LC166
 10574 01a0 0C000000 		.word	.LC167
 10575 01a4 18000000 		.word	.LC168
 10576 01a8 24000000 		.word	.LC169
 10577 01ac 30000000 		.word	.LC170
 10578 01b0 3C000000 		.word	.LC171
 10579 01b4 DFEFBC72 		.word	1924984799
 10580 01b8 30000000 		.word	.LC82
 10581 01bc 48000000 		.word	.LC172
 10582 01c0 00000000 		.word	ptm
 10583              		.size	SetDate, .-SetDate
 10584              		.section	.text.flash_latency,"ax",%progbits
 10585              		.align	1
 10586              		.p2align 2,,3
 10587              		.global	flash_latency
 10588              		.syntax unified
 10589              		.thumb
 10590              		.thumb_func
 10591              		.fpu softvfp
 10592              		.type	flash_latency, %function
 10593              	flash_latency:
 10594              		@ args = 0, pretend = 0, frame = 0
 10595              		@ frame_needed = 0, uses_anonymous_args = 0
 10596              		@ link register save eliminated.
 10597              	@ main.c:5733: 	if (frequency < 24000000ul)			// 0 wait states for core speed below 24MHz
 10598 0000 084B     		ldr	r3, .L872	@ tmp114,
 10599 0002 9842     		cmp	r0, r3	@ frequency, tmp114
 10600 0004 0CD9     		bls	.L870	@,
 10601              	@ main.c:5735: 	else if (frequency < 48000000ul)// 1 wait state for core 24MHz < speed >48MHz
 10602 0006 03F1B773 		add	r3, r3, #23986176	@ tmp115, tmp115,
ARM GAS  /tmp/ccjvICQi.s 			page 187


 10603 000a 03F55853 		add	r3, r3, #13824	@ tmp115, tmp115,
 10604              	@ main.c:5738: 		wait_states = 2;
 10605 000e 9842     		cmp	r0, r3	@ frequency, tmp115
 10606 0010 94BF     		ite	ls	@
 10607 0012 0120     		movls	r0, #1	@, wait_states,
 10608 0014 0220     		movhi	r0, #2	@, wait_states,
 10609              	.L869:
 10610              	@ main.c:5740: 	FLASH->ACR |= wait_states;				// set the latency
 10611 0016 044A     		ldr	r2, .L872+4	@ tmp116,
 10612 0018 1368     		ldr	r3, [r2]	@ _1, MEM[(struct FLASH_TypeDef *)1073881088B].ACR
 10613 001a 1843     		orrs	r0, r0, r3	@, _2, wait_states, _1
 10614 001c 1060     		str	r0, [r2]	@ _2, MEM[(struct FLASH_TypeDef *)1073881088B].ACR
 10615              	@ main.c:5741: }
 10616 001e 7047     		bx	lr	@
 10617              	.L870:
 10618              	@ main.c:5734: 		wait_states = 0;
 10619 0020 0020     		movs	r0, #0	@ wait_states,
 10620 0022 F8E7     		b	.L869	@
 10621              	.L873:
 10622              		.align	2
 10623              	.L872:
 10624 0024 FF356E01 		.word	23999999
 10625 0028 00200240 		.word	1073881088
 10626              		.size	flash_latency, .-flash_latency
 10627              		.set	jdrs.9072,jdrs.9057
 10628              		.global	p_TSpm
 10629              		.comm	Rtc,8,4
 10630              		.global	FLAG
 10631              		.global	_ytab
 10632              		.comm	Timt3,4,4
 10633              		.comm	Timt,4,4
 10634              		.comm	Time6,4,4
 10635              		.comm	Tim6,4,4
 10636              		.comm	Tim4,4,4
 10637              		.comm	delay_us,4,4
 10638              		.comm	Tim2,4,4
 10639              		.comm	Tim1,4,4
 10640              		.comm	Tim0,4,4
 10641              		.comm	delay3_us,4,4
 10642              		.comm	t3rg2,4,4
 10643              		.comm	t3rg1,4,4
 10644              		.comm	t3rg0,4,4
 10645              		.comm	trg5,4,4
 10646              		.comm	trg4,4,4
 10647              		.comm	trg3,4,4
 10648              		.comm	trg2,4,4
 10649              		.comm	trg1,4,4
 10650              		.comm	trg0,4,4
 10651              		.comm	PutChar,4,4
 10652              		.comm	ptm,36,4
 10653              		.section	.rodata
 10654              		.align	2
 10655              		.set	.LANCHOR1,. + 0
 10656              	.LC0:
 10657 0000 6D01     		.short	365
 10658 0002 6401     		.short	356
 10659 0004 0000     		.short	0
ARM GAS  /tmp/ccjvICQi.s 			page 188


 10660 0006 1E00     		.short	30
 10661 0008 0000     		.short	0
 10662 000a 0000     		.short	0
 10663 000c 0000     		.short	0
 10664 000e 0000     		.short	0
 10665              	.LC1:
 10666 0010 D007     		.short	2000
 10667 0012 0019     		.short	6400
 10668 0014 0000     		.short	0
 10669 0016 1E00     		.short	30
 10670 0018 0000     		.short	0
 10671 001a 0000     		.short	0
 10672 001c 0000     		.short	0
 10673 001e 0000     		.short	0
 10674              	.LC2:
 10675 0020 5601     		.short	342
 10676 0022 5001     		.short	336
 10677 0024 0000     		.short	0
 10678 0026 0200     		.short	2
 10679 0028 0000     		.short	0
 10680 002a 0000     		.short	0
 10681 002c 0000     		.short	0
 10682 002e 0000     		.short	0
 10683              	.LC3:
 10684 0030 7200     		.short	114
 10685 0032 0701     		.short	263
 10686 0034 0000     		.short	0
 10687 0036 0200     		.short	2
 10688 0038 0000     		.short	0
 10689 003a 0000     		.short	0
 10690 003c 0000     		.short	0
 10691 003e 0000     		.short	0
 10692              	.LC4:
 10693 0040 00       		.byte	0
 10694 0041 1E       		.byte	30
 10695 0042 67       		.byte	103
 10696 0043 00       		.space	1
 10697              	.LC5:
 10698 0044 204C6164 		.ascii	" LadPoj\000"
 10698      506F6A00 
 10699 004c 20526F7A 		.ascii	" RozPoj\000"
 10699      506F6A00 
 10700 0054 20437A65 		.ascii	" Czekaj\000"
 10700      6B616A00 
 10701 005c 204E6170 		.ascii	" Napiec\000"
 10701      69656300 
 10702 0064 204C6164 		.ascii	" LadKon\000"
 10702      4B6F6E00 
 10703 006c 20526F7A 		.ascii	" RozKon\000"
 10703      4B6F6E00 
 10704 0074 204C6164 		.ascii	" Laduj\000"
 10704      756A00
 10705 007b 00       		.space	1
 10706              		.section	.bss.CAh.8243,"aw",%nobits
 10707              		.align	2
 10708              		.set	.LANCHOR14,. + 0
 10709              		.type	CAh.8243, %object
ARM GAS  /tmp/ccjvICQi.s 			page 189


 10710              		.size	CAh.8243, 4
 10711              	CAh.8243:
 10712 0000 00000000 		.space	4
 10713              		.section	.bss.CWh.8245,"aw",%nobits
 10714              		.align	2
 10715              		.set	.LANCHOR15,. + 0
 10716              		.type	CWh.8245, %object
 10717              		.size	CWh.8245, 4
 10718              	CWh.8245:
 10719 0000 00000000 		.space	4
 10720              		.section	.bss.Cah.8242,"aw",%nobits
 10721              		.align	2
 10722              		.set	.LANCHOR11,. + 0
 10723              		.type	Cah.8242, %object
 10724              		.size	Cah.8242, 4
 10725              	Cah.8242:
 10726 0000 00000000 		.space	4
 10727              		.section	.bss.Cwh.8244,"aw",%nobits
 10728              		.align	2
 10729              		.set	.LANCHOR12,. + 0
 10730              		.type	Cwh.8244, %object
 10731              		.size	Cwh.8244, 4
 10732              	Cwh.8244:
 10733 0000 00000000 		.space	4
 10734              		.section	.bss.FLAG,"aw",%nobits
 10735              		.align	2
 10736              		.set	.LANCHOR18,. + 0
 10737              		.type	FLAG, %object
 10738              		.size	FLAG, 4
 10739              	FLAG:
 10740 0000 00000000 		.space	4
 10741              		.section	.bss.Rwa.8247,"aw",%nobits
 10742              		.align	2
 10743              		.set	.LANCHOR8,. + 0
 10744              		.type	Rwa.8247, %object
 10745              		.size	Rwa.8247, 4
 10746              	Rwa.8247:
 10747 0000 00000000 		.space	4
 10748              		.section	.bss.SX1278_1.8441,"aw",%nobits
 10749              		.align	2
 10750              		.set	.LANCHOR20,. + 0
 10751              		.type	SX1278_1.8441, %object
 10752              		.size	SX1278_1.8441, 76
 10753              	SX1278_1.8441:
 10754 0000 00000000 		.space	76
 10754      00000000 
 10754      00000000 
 10754      00000000 
 10754      00000000 
 10755              		.section	.bss.SX1278_1.8467,"aw",%nobits
 10756              		.align	2
 10757              		.set	.LANCHOR22,. + 0
 10758              		.type	SX1278_1.8467, %object
 10759              		.size	SX1278_1.8467, 76
 10760              	SX1278_1.8467:
 10761 0000 00000000 		.space	76
 10761      00000000 
ARM GAS  /tmp/ccjvICQi.s 			page 190


 10761      00000000 
 10761      00000000 
 10761      00000000 
 10762              		.section	.bss.SX1278_1.8492,"aw",%nobits
 10763              		.align	2
 10764              		.set	.LANCHOR25,. + 0
 10765              		.type	SX1278_1.8492, %object
 10766              		.size	SX1278_1.8492, 76
 10767              	SX1278_1.8492:
 10768 0000 00000000 		.space	76
 10768      00000000 
 10768      00000000 
 10768      00000000 
 10768      00000000 
 10769              		.section	.bss.SX1278_hw1.8440,"aw",%nobits
 10770              		.align	2
 10771              		.set	.LANCHOR19,. + 0
 10772              		.type	SX1278_hw1.8440, %object
 10773              		.size	SX1278_hw1.8440, 24
 10774              	SX1278_hw1.8440:
 10775 0000 00000000 		.space	24
 10775      00000000 
 10775      00000000 
 10775      00000000 
 10775      00000000 
 10776              		.section	.bss.SX1278_hw1.8466,"aw",%nobits
 10777              		.align	2
 10778              		.set	.LANCHOR21,. + 0
 10779              		.type	SX1278_hw1.8466, %object
 10780              		.size	SX1278_hw1.8466, 24
 10781              	SX1278_hw1.8466:
 10782 0000 00000000 		.space	24
 10782      00000000 
 10782      00000000 
 10782      00000000 
 10782      00000000 
 10783              		.section	.bss.SX1278_hw1.8491,"aw",%nobits
 10784              		.align	2
 10785              		.set	.LANCHOR24,. + 0
 10786              		.type	SX1278_hw1.8491, %object
 10787              		.size	SX1278_hw1.8491, 24
 10788              	SX1278_hw1.8491:
 10789 0000 00000000 		.space	24
 10789      00000000 
 10789      00000000 
 10789      00000000 
 10789      00000000 
 10790              		.section	.bss.TSpm,"aw",%nobits
 10791              		.align	2
 10792              		.type	TSpm, %object
 10793              		.size	TSpm, 4096
 10794              	TSpm:
 10795 0000 00000000 		.space	4096
 10795      00000000 
 10795      00000000 
 10795      00000000 
 10795      00000000 
ARM GAS  /tmp/ccjvICQi.s 			page 191


 10796              		.section	.bss.buf_rx.8470,"aw",%nobits
 10797              		.align	2
 10798              		.set	.LANCHOR23,. + 0
 10799              		.type	buf_rx.8470, %object
 10800              		.size	buf_rx.8470, 256
 10801              	buf_rx.8470:
 10802 0000 00000000 		.space	256
 10802      00000000 
 10802      00000000 
 10802      00000000 
 10802      00000000 
 10803              		.section	.bss.buf_tx.8494,"aw",%nobits
 10804              		.align	2
 10805              		.set	.LANCHOR26,. + 0
 10806              		.type	buf_tx.8494, %object
 10807              		.size	buf_tx.8494, 10
 10808              	buf_tx.8494:
 10809 0000 00000000 		.space	10
 10809      00000000 
 10809      0000
 10810              		.section	.bss.buffer.8846,"aw",%nobits
 10811              		.align	2
 10812              		.type	buffer.8846, %object
 10813              		.size	buffer.8846, 8192
 10814              	buffer.8846:
 10815 0000 00000000 		.space	8192
 10815      00000000 
 10815      00000000 
 10815      00000000 
 10815      00000000 
 10816              		.section	.bss.cah.8240,"aw",%nobits
 10817              		.align	2
 10818              		.set	.LANCHOR2,. + 0
 10819              		.type	cah.8240, %object
 10820              		.size	cah.8240, 4
 10821              	cah.8240:
 10822 0000 00000000 		.space	4
 10823              		.section	.bss.cnt.8236,"aw",%nobits
 10824              		.align	1
 10825              		.set	.LANCHOR6,. + 0
 10826              		.type	cnt.8236, %object
 10827              		.size	cnt.8236, 2
 10828              	cnt.8236:
 10829 0000 0000     		.space	2
 10830              		.section	.bss.cnt2.8246,"aw",%nobits
 10831              		.align	2
 10832              		.set	.LANCHOR7,. + 0
 10833              		.type	cnt2.8246, %object
 10834              		.size	cnt2.8246, 4
 10835              	cnt2.8246:
 10836 0000 00000000 		.space	4
 10837              		.section	.bss.coile.8261,"aw",%nobits
 10838              		.set	.LANCHOR13,. + 0
 10839              		.type	coile.8261, %object
 10840              		.size	coile.8261, 1
 10841              	coile.8261:
 10842 0000 00       		.space	1
ARM GAS  /tmp/ccjvICQi.s 			page 192


 10843              		.section	.bss.cur.8254,"aw",%nobits
 10844              		.align	1
 10845              		.set	.LANCHOR9,. + 0
 10846              		.type	cur.8254, %object
 10847              		.size	cur.8254, 2
 10848              	cur.8254:
 10849 0000 0000     		.space	2
 10850              		.section	.bss.cwh.8241,"aw",%nobits
 10851              		.align	2
 10852              		.set	.LANCHOR3,. + 0
 10853              		.type	cwh.8241, %object
 10854              		.size	cwh.8241, 4
 10855              	cwh.8241:
 10856 0000 00000000 		.space	4
 10857              		.section	.bss.datetime.8669,"aw",%nobits
 10858              		.align	2
 10859              		.set	.LANCHOR29,. + 0
 10860              		.type	datetime.8669, %object
 10861              		.size	datetime.8669, 8
 10862              	datetime.8669:
 10863 0000 00000000 		.space	8
 10863      00000000 
 10864              		.section	.bss.dcur.8255,"aw",%nobits
 10865              		.align	1
 10866              		.set	.LANCHOR5,. + 0
 10867              		.type	dcur.8255, %object
 10868              		.size	dcur.8255, 2
 10869              	dcur.8255:
 10870 0000 0000     		.space	2
 10871              		.section	.bss.dinit.8847,"aw",%nobits
 10872              		.set	.LANCHOR30,. + 0
 10873              		.type	dinit.8847, %object
 10874              		.size	dinit.8847, 1
 10875              	dinit.8847:
 10876 0000 00       		.space	1
 10877              		.section	.bss.dma_buf,"aw",%nobits
 10878              		.align	2
 10879              		.set	.LANCHOR28,. + 0
 10880              		.type	dma_buf, %object
 10881              		.size	dma_buf, 24
 10882              	dma_buf:
 10883 0000 00000000 		.space	24
 10883      00000000 
 10883      00000000 
 10883      00000000 
 10883      00000000 
 10884              		.section	.bss.dma_buf.8757,"aw",%nobits
 10885              		.align	2
 10886              		.set	.LANCHOR33,. + 0
 10887              		.type	dma_buf.8757, %object
 10888              		.size	dma_buf.8757, 578
 10889              	dma_buf.8757:
 10890 0000 00000000 		.space	578
 10890      00000000 
 10890      00000000 
 10890      00000000 
 10890      00000000 
ARM GAS  /tmp/ccjvICQi.s 			page 193


 10891              		.section	.bss.pow.8250,"aw",%nobits
 10892              		.align	1
 10893              		.set	.LANCHOR10,. + 0
 10894              		.type	pow.8250, %object
 10895              		.size	pow.8250, 2
 10896              	pow.8250:
 10897 0000 0000     		.space	2
 10898              		.section	.bss.str_num.8495,"aw",%nobits
 10899              		.align	2
 10900              		.set	.LANCHOR27,. + 0
 10901              		.type	str_num.8495, %object
 10902              		.size	str_num.8495, 5
 10903              	str_num.8495:
 10904 0000 00000000 		.space	5
 10904      00
 10905              		.section	.bss.val.8742,"aw",%nobits
 10906              		.align	2
 10907              		.set	.LANCHOR34,. + 0
 10908              		.type	val.8742, %object
 10909              		.size	val.8742, 20
 10910              	val.8742:
 10911 0000 00000000 		.space	20
 10911      00000000 
 10911      00000000 
 10911      00000000 
 10911      00000000 
 10912              		.section	.bss.vbus.8256,"aw",%nobits
 10913              		.align	1
 10914              		.set	.LANCHOR4,. + 0
 10915              		.type	vbus.8256, %object
 10916              		.size	vbus.8256, 2
 10917              	vbus.8256:
 10918 0000 0000     		.space	2
 10919              		.section	.bss.vr3.8248,"aw",%nobits
 10920              		.align	2
 10921              		.set	.LANCHOR16,. + 0
 10922              		.type	vr3.8248, %object
 10923              		.size	vr3.8248, 4
 10924              	vr3.8248:
 10925 0000 00000000 		.space	4
 10926              		.section	.bss.vr4.8249,"aw",%nobits
 10927              		.align	2
 10928              		.set	.LANCHOR17,. + 0
 10929              		.type	vr4.8249, %object
 10930              		.size	vr4.8249, 4
 10931              	vr4.8249:
 10932 0000 00000000 		.space	4
 10933              		.section	.bss.yb.8738,"aw",%nobits
 10934              		.align	2
 10935              		.set	.LANCHOR31,. + 0
 10936              		.type	yb.8738, %object
 10937              		.size	yb.8738, 1
 10938              	yb.8738:
 10939 0000 00       		.space	1
 10940              		.section	.bss.yn.8739,"aw",%nobits
 10941              		.align	2
 10942              		.set	.LANCHOR32,. + 0
ARM GAS  /tmp/ccjvICQi.s 			page 194


 10943              		.type	yn.8739, %object
 10944              		.size	yn.8739, 1
 10945              	yn.8739:
 10946 0000 00       		.space	1
 10947              		.section	.data.p_TSpm,"aw",%progbits
 10948              		.align	2
 10949              		.type	p_TSpm, %object
 10950              		.size	p_TSpm, 4
 10951              	p_TSpm:
 10952 0000 00000000 		.word	TSpm
 10953              		.section	.data.tbuf.8744,"aw",%progbits
 10954              		.align	2
 10955              		.set	.LANCHOR35,. + 0
 10956              		.type	tbuf.8744, %object
 10957              		.size	tbuf.8744, 20
 10958              	tbuf.8744:
 10959 0000 30303030 		.ascii	"0000-00-00 00:00:00\000"
 10959      2D30302D 
 10959      30302030 
 10959      303A3030 
 10959      3A303000 
 10960              		.section	.rodata.BMP280_i2c.str1.4,"aMS",%progbits,1
 10961              		.align	2
 10962              	.LC73:
 10963 0000 0D0A2069 		.ascii	"\015\012 i2c_BMP280 = 0x\000"
 10963      32635F42 
 10963      4D503238 
 10963      30203D20 
 10963      307800
 10964 0013 00       		.space	1
 10965              	.LC74:
 10966 0014 0D0A2042 		.ascii	"\015\012 BMP280 \000"
 10966      4D503238 
 10966      302000
 10967 001f 00       		.space	1
 10968              	.LC75:
 10969 0020 74743D00 		.ascii	"tt=\000"
 10970              	.LC76:
 10971 0024 20543D00 		.ascii	" T=\000"
 10972              	.LC77:
 10973 0028 20703D20 		.ascii	" p= \000"
 10973      00
 10974 002d 000000   		.space	3
 10975              	.LC78:
 10976 0030 2074703D 		.ascii	" tp=\000"
 10976      00
 10977              		.section	.rodata.BMP280_spi.str1.4,"aMS",%progbits,1
 10978              		.align	2
 10979              	.LC79:
 10980 0000 0D0A2042 		.ascii	"\015\012 BMP280T1 = 0x\000"
 10980      4D503238 
 10980      30543120 
 10980      3D203078 
 10980      00
 10981              		.section	.rodata.Intro2.str1.4,"aMS",%progbits,1
 10982              		.align	2
 10983              	.LC160:
ARM GAS  /tmp/ccjvICQi.s 			page 195


 10984 0000 0D0A2053 		.ascii	"\015\012 Start programu... \015\012\000"
 10984      74617274 
 10984      2070726F 
 10984      6772616D 
 10984      752E2E2E 
 10985              	.LC161:
 10986 0018 0D0A2044 		.ascii	"\015\012 Debug0...\000"
 10986      65627567 
 10986      302E2E2E 
 10986      00
 10987 0025 000000   		.space	3
 10988              	.LC162:
 10989 0028 0D0A2077 		.ascii	"\015\012 wXlen \000"
 10989      586C656E 
 10989      2000
 10990 0032 0000     		.space	2
 10991              	.LC163:
 10992 0034 0D0A2054 		.ascii	"\015\012 TIM4->PSC/ARR=\000"
 10992      494D342D 
 10992      3E505343 
 10992      2F415252 
 10992      3D00
 10993              		.section	.rodata.LoRaRX.str1.4,"aMS",%progbits,1
 10994              		.align	2
 10995              	.LC51:
 10996 0000 0A00     		.ascii	"\012\000"
 10997              		.section	.rodata.LoRaRX1.str1.4,"aMS",%progbits,1
 10998              		.align	2
 10999              	.LC52:
 11000 0000 2054696D 		.ascii	" Time=\000"
 11000      653D00
 11001 0007 00       		.space	1
 11002              	.LC53:
 11003 0008 0D0A2052 		.ascii	"\015\012 Read Reg1=0x\000"
 11003      65616420 
 11003      52656731 
 11003      3D307800 
 11004              	.LC54:
 11005 0018 20526567 		.ascii	" Reg1 0x\000"
 11005      31203078 
 11005      00
 11006 0021 000000   		.space	3
 11007              	.LC55:
 11008 0024 3D203078 		.ascii	"= 0x\000"
 11008      00
 11009 0029 000000   		.space	3
 11010              	.LC56:
 11011 002c 0D0A2030 		.ascii	"\015\012 0-3(\000"
 11011      2D332800 
 11012              	.LC57:
 11013 0034 2920504F 		.ascii	") POWER=\000"
 11013      5745523D 
 11013      00
 11014 003d 000000   		.space	3
 11015              	.LC58:
 11016 0040 0D0A2030 		.ascii	"\015\012 0-6(\000"
 11016      2D362800 
ARM GAS  /tmp/ccjvICQi.s 			page 196


 11017              	.LC59:
 11018 0048 29205346 		.ascii	") SF=\000"
 11018      3D00
 11019 004e 0000     		.space	2
 11020              	.LC60:
 11021 0050 0D0A2030 		.ascii	"\015\012 0-9(\000"
 11021      2D392800 
 11022              	.LC61:
 11023 0058 29204257 		.ascii	") BW=\000"
 11023      3D00
 11024 005e 0000     		.space	2
 11025              	.LC62:
 11026 0060 0D0A2073 		.ascii	"\015\012 sek(\000"
 11026      656B2800 
 11027              	.LC63:
 11028 0068 29204465 		.ascii	") Delay=\000"
 11028      6C61793D 
 11028      00
 11029 0071 000000   		.space	3
 11030              	.LC64:
 11031 0074 0D0A204D 		.ascii	"\015\012 Menu > \000"
 11031      656E7520 
 11031      3E2000
 11032 007f 00       		.space	1
 11033              	.LC65:
 11034 0080 0D0A2070 		.ascii	"\015\012 prssi->\000"
 11034      72737369 
 11034      2D3E00
 11035              		.section	.rodata.MAX44009_i2c.str1.4,"aMS",%progbits,1
 11036              		.align	2
 11037              	.LC72:
 11038 0000 0D0A2041 		.ascii	"\015\012 APDS9960_ID=0x\000"
 11038      50445339 
 11038      3936305F 
 11038      49443D30 
 11038      7800
 11039              		.section	.rodata.MemCard_Menu.str1.4,"aMS",%progbits,1
 11040              		.align	2
 11041              	.LC114:
 11042 0000 0D0A5344 		.ascii	"\015\012SD Card Init = \000"
 11042      20436172 
 11042      6420496E 
 11042      6974203D 
 11042      2000
 11043 0012 0000     		.space	2
 11044              	.LC115:
 11045 0014 0D0A5344 		.ascii	"\015\012SD Card Init ERROR \000"
 11045      20436172 
 11045      6420496E 
 11045      69742045 
 11045      52524F52 
 11046 002a 0000     		.space	2
 11047              	.LC116:
 11048 002c 0D0A5344 		.ascii	"\015\012SD Card ser_num    = \000"
 11048      20436172 
 11048      64207365 
 11048      725F6E75 
ARM GAS  /tmp/ccjvICQi.s 			page 197


 11048      6D202020 
 11049              	.LC117:
 11050 0044 0D0A5344 		.ascii	"\015\012SD Card block_num  = \000"
 11050      20436172 
 11050      6420626C 
 11050      6F636B5F 
 11050      6E756D20 
 11051              	.LC118:
 11052 005c 0D0A5344 		.ascii	"\015\012SD Card read_blen  = \000"
 11052      20436172 
 11052      64207265 
 11052      61645F62 
 11052      6C656E20 
 11053              	.LC119:
 11054 0074 0D0A5344 		.ascii	"\015\012SD Card write_blen = \000"
 11054      20436172 
 11054      64207772 
 11054      6974655F 
 11054      626C656E 
 11055              	.LC120:
 11056 008c 53746174 		.ascii	"Statistic Card  \000"
 11056      69737469 
 11056      63204361 
 11056      72642020 
 11056      00
 11057 009d 000000   		.space	3
 11058              	.LC121:
 11059 00a0 0D0A5344 		.ascii	"\015\012SD Card Not Init\000"
 11059      20436172 
 11059      64204E6F 
 11059      7420496E 
 11059      697400
 11060 00b3 00       		.space	1
 11061              	.LC122:
 11062 00b4 46696C6C 		.ascii	"Fill sector\000"
 11062      20736563 
 11062      746F7200 
 11063              	.LC123:
 11064 00c0 0D0A2053 		.ascii	"\015\012 Start Block  = 0x\000"
 11064      74617274 
 11064      20426C6F 
 11064      636B2020 
 11064      3D203078 
 11065 00d5 000000   		.space	3
 11066              	.LC124:
 11067 00d8 0D0A2045 		.ascii	"\015\012 End   Blocks = 0x\000"
 11067      6E642020 
 11067      20426C6F 
 11067      636B7320 
 11067      3D203078 
 11068 00ed 000000   		.space	3
 11069              	.LC125:
 11070 00f0 0D0A204E 		.ascii	"\015\012 Num Blocks   = \000"
 11070      756D2042 
 11070      6C6F636B 
 11070      73202020 
 11070      3D2000
ARM GAS  /tmp/ccjvICQi.s 			page 198


 11071 0103 00       		.space	1
 11072              	.LC126:
 11073 0104 0D0A2044 		.ascii	"\015\012 Data to fill = 0x\000"
 11073      61746120 
 11073      746F2066 
 11073      696C6C20 
 11073      3D203078 
 11074 0119 000000   		.space	3
 11075              	.LC127:
 11076 011c 0D0A2046 		.ascii	"\015\012 Fill error = 0x\000"
 11076      696C6C20 
 11076      6572726F 
 11076      72203D20 
 11076      307800
 11077 012f 00       		.space	1
 11078              	.LC128:
 11079 0130 0D0A2046 		.ascii	"\015\012 Fill OK \000"
 11079      696C6C20 
 11079      4F4B2000 
 11080              	.LC129:
 11081 013c 2054696D 		.ascii	" Time[us] = \000"
 11081      655B7573 
 11081      5D203D20 
 11081      00
 11082 0149 000000   		.space	3
 11083              	.LC130:
 11084 014c 4D6F6469 		.ascii	"Modify memory\000"
 11084      6679206D 
 11084      656D6F72 
 11084      7900
 11085 015a 0000     		.space	2
 11086              	.LC131:
 11087 015c 0D0A204D 		.ascii	"\015\012 Memory Addr = 0x\000"
 11087      656D6F72 
 11087      79204164 
 11087      6472203D 
 11087      20307800 
 11088              	.LC132:
 11089 0170 0D0A204D 		.ascii	"\015\012 Memory Data = 0x\000"
 11089      656D6F72 
 11089      79204461 
 11089      7461203D 
 11089      20307800 
 11090              	.LC133:
 11091 0184 0D0A204E 		.ascii	"\015\012 New Data    = 0x\000"
 11091      65772044 
 11091      61746120 
 11091      2020203D 
 11091      20307800 
 11092              	.LC134:
 11093 0198 0D0A204D 		.ascii	"\015\012 Modify OK\000"
 11093      6F646966 
 11093      79204F4B 
 11093      00
 11094 01a5 000000   		.space	3
 11095              	.LC135:
 11096 01a8 0D0A2052 		.ascii	"\015\012 ReadB 0x\000"
ARM GAS  /tmp/ccjvICQi.s 			page 199


 11096      65616442 
 11096      20307800 
 11097              	.LC136:
 11098 01b4 20204672 		.ascii	"  From 0x\000"
 11098      6F6D2030 
 11098      7800
 11099 01be 0000     		.space	2
 11100              	.LC137:
 11101 01c0 2D3E3078 		.ascii	"->0x\000"
 11101      00
 11102 01c5 000000   		.space	3
 11103              	.LC138:
 11104 01c8 20205772 		.ascii	"  WriteB 0x\000"
 11104      69746542 
 11104      20307800 
 11105              	.LC139:
 11106 01d4 20203078 		.ascii	"  0x\000"
 11106      00
 11107 01d9 000000   		.space	3
 11108              	.LC140:
 11109 01dc 0D0A2073 		.ascii	"\015\012 sectorNumber = 0x\000"
 11109      6563746F 
 11109      724E756D 
 11109      62657220 
 11109      3D203078 
 11110 01f1 000000   		.space	3
 11111              	.LC141:
 11112 01f4 20745F63 		.ascii	" t_crc = \000"
 11112      7263203D 
 11112      2000
 11113 01fe 0000     		.space	2
 11114              	.LC142:
 11115 0200 0D0A2052 		.ascii	"\015\012 Read Error = \000"
 11115      65616420 
 11115      4572726F 
 11115      72203D20 
 11115      00
 11116 0211 000000   		.space	3
 11117              	.LC143:
 11118 0214 52656164 		.ascii	"Read multi sector\000"
 11118      206D756C 
 11118      74692073 
 11118      6563746F 
 11118      7200
 11119 0226 0000     		.space	2
 11120              	.LC144:
 11121 0228 0D0A204E 		.ascii	"\015\012 Num Sectors  = \000"
 11121      756D2053 
 11121      6563746F 
 11121      72732020 
 11121      3D2000
 11122 023b 00       		.space	1
 11123              	.LC145:
 11124 023c 0D0A2052 		.ascii	"\015\012 Read error = 0x\000"
 11124      65616420 
 11124      6572726F 
 11124      72203D20 
ARM GAS  /tmp/ccjvICQi.s 			page 200


 11124      307800
 11125 024f 00       		.space	1
 11126              	.LC146:
 11127 0250 0D0A2052 		.ascii	"\015\012 Read OK \000"
 11127      65616420 
 11127      4F4B2000 
 11128              	.LC147:
 11129 025c 20793220 		.ascii	" y2 = \000"
 11129      3D2000
 11130 0263 00       		.space	1
 11131              	.LC148:
 11132 0264 0900     		.ascii	"\011\000"
 11133 0266 0000     		.space	2
 11134              	.LC149:
 11135 0268 56696577 		.ascii	"View last sector\000"
 11135      206C6173 
 11135      74207365 
 11135      63746F72 
 11135      00
 11136 0279 000000   		.space	3
 11137              	.LC150:
 11138 027c 0D0A2046 		.ascii	"\015\012 First Sector = 0x\000"
 11138      69727374 
 11138      20536563 
 11138      746F7220 
 11138      3D203078 
 11139 0291 000000   		.space	3
 11140              	.LC151:
 11141 0294 0D0A2053 		.ascii	"\015\012 Searching \000"
 11141      65617263 
 11141      68696E67 
 11141      2000
 11142 02a2 0000     		.space	2
 11143              	.LC152:
 11144 02a4 0D0A2045 		.ascii	"\015\012 Exit Read Error !!!\000"
 11144      78697420 
 11144      52656164 
 11144      20457272 
 11144      6F722021 
 11145 02bb 00       		.space	1
 11146              	.LC153:
 11147 02bc 0D0A2046 		.ascii	"\015\012 Find Sector = 0x\000"
 11147      696E6420 
 11147      53656374 
 11147      6F72203D 
 11147      20307800 
 11148              	.LC154:
 11149 02d0 0D0A2020 		.ascii	"\015\012     lenBlock= \000"
 11149      2020206C 
 11149      656E426C 
 11149      6F636B3D 
 11149      2000
 11150 02e2 0000     		.space	2
 11151              	.LC155:
 11152 02e4 0D0A2042 		.ascii	"\015\012 Block = \000"
 11152      6C6F636B 
 11152      203D2000 
ARM GAS  /tmp/ccjvICQi.s 			page 201


 11153              	.LC156:
 11154 02f0 0D0A2052 		.ascii	"\015\012 Read Error \000"
 11154      65616420 
 11154      4572726F 
 11154      722000
 11155 02ff 00       		.space	1
 11156              	.LC157:
 11157 0300 0D0A2053 		.ascii	"\015\012 SD_Status \015\012 \000"
 11157      445F5374 
 11157      61747573 
 11157      200D0A20 
 11157      00
 11158 0311 000000   		.space	3
 11159              	.LC158:
 11160 0314 54657374 		.ascii	"Testing ...\000"
 11160      696E6720 
 11160      2E2E2E00 
 11161              	.LC159:
 11162 0320 556E6B72 		.ascii	"Unkr_dma_buf Command !\000"
 11162      5F646D61 
 11162      5F627566 
 11162      20436F6D 
 11162      6D616E64 
 11163              		.section	.rodata.Menu1.str1.4,"aMS",%progbits,1
 11164              		.align	2
 11165              	.LC110:
 11166 0000 0A0D0A3D 		.ascii	"\012\015\012======= STM32F4 SD/MMC Card ==========="
 11166      3D3D3D3D 
 11166      3D3D2053 
 11166      544D3332 
 11166      46342053 
 11167 002a 3D3D3D3D 		.ascii	"===========\015\012\000"
 11167      3D3D3D3D 
 11167      3D3D3D0D 
 11167      0A00
 11168              	.LC111:
 11169 0038 2069202D 		.ascii	" i - Init      r - Read  sector  e - Erase sector  "
 11169      20496E69 
 11169      74202020 
 11169      20202072 
 11169      202D2052 
 11170 006b 200D0A00 		.ascii	" \015\012\000"
 11171 006f 00       		.space	1
 11172              	.LC112:
 11173 0070 2064202D 		.ascii	" d - Delete    f - Write sector  s - Statistic Card"
 11173      2044656C 
 11173      65746520 
 11173      20202066 
 11173      202D2057 
 11174 00a3 200D0A00 		.ascii	" \015\012\000"
 11175 00a7 00       		.space	1
 11176              	.LC113:
 11177 00a8 206D202D 		.ascii	" m - Modf mem  c - Copy  sector  n - Next Cluster  "
 11177      204D6F64 
 11177      66206D65 
 11177      6D202063 
 11177      202D2043 
ARM GAS  /tmp/ccjvICQi.s 			page 202


 11178 00db 0D0A00   		.ascii	"\015\012\000"
 11179              		.section	.rodata.SPI_Tool.str1.4,"aMS",%progbits,1
 11180              		.align	2
 11181              	.LC103:
 11182 0000 0D0A496E 		.ascii	"\015\012Init spi    = \000"
 11182      69742073 
 11182      70692020 
 11182      20203D20 
 11182      00
 11183 0011 000000   		.space	3
 11184              	.LC104:
 11185 0014 0D0A2052 		.ascii	"\015\012 Reg = \000"
 11185      6567203D 
 11185      2000
 11186 001e 0000     		.space	2
 11187              	.LC105:
 11188 0020 436F7079 		.ascii	"Copy memory\000"
 11188      206D656D 
 11188      6F727900 
 11189              	.LC106:
 11190 002c 0D0A2053 		.ascii	"\015\012 Src Mem adr = 0x\000"
 11190      7263204D 
 11190      656D2061 
 11190      6472203D 
 11190      20307800 
 11191              	.LC107:
 11192 0040 0D0A2048 		.ascii	"\015\012 How many byte = \000"
 11192      6F77206D 
 11192      616E7920 
 11192      62797465 
 11192      203D2000 
 11193              	.LC108:
 11194 0054 0D0A2044 		.ascii	"\015\012 Dst mem adr = 0x\000"
 11194      7374206D 
 11194      656D2061 
 11194      6472203D 
 11194      20307800 
 11195              	.LC109:
 11196 0068 4E69657A 		.ascii	"Nieznana Komenda\000"
 11196      6E616E61 
 11196      204B6F6D 
 11196      656E6461 
 11196      00
 11197              		.section	.rodata.SPI_Tool_Menu.str1.4,"aMS",%progbits,1
 11198              		.align	2
 11199              	.LC99:
 11200 0000 0A0D0A3D 		.ascii	"\012\015\012======= STM32F1 SPI TOOL =============="
 11200      3D3D3D3D 
 11200      3D3D2053 
 11200      544D3332 
 11200      46312053 
 11201 002a 3D3D3D3D 		.ascii	"===========\015\012\000"
 11201      3D3D3D3D 
 11201      3D3D3D0D 
 11201      0A00
 11202              	.LC100:
 11203 0038 2069202D 		.ascii	" i - Init      r - Read  sector  e -               "
ARM GAS  /tmp/ccjvICQi.s 			page 203


 11203      20496E69 
 11203      74202020 
 11203      20202072 
 11203      202D2052 
 11204 006b 200D0A00 		.ascii	" \015\012\000"
 11205 006f 00       		.space	1
 11206              	.LC101:
 11207 0070 2064202D 		.ascii	" d - Delete    f - Write sector  s -               "
 11207      2044656C 
 11207      65746520 
 11207      20202066 
 11207      202D2057 
 11208 00a3 200D0A00 		.ascii	" \015\012\000"
 11209 00a7 00       		.space	1
 11210              	.LC102:
 11211 00a8 206D202D 		.ascii	" m - Modf      c - Copy  sector  n -               "
 11211      204D6F64 
 11211      66202020 
 11211      20202063 
 11211      202D2043 
 11212 00db 0D0A00   		.ascii	"\015\012\000"
 11213              		.section	.rodata.SetDate.str1.4,"aMS",%progbits,1
 11214              		.align	2
 11215              	.LC166:
 11216 0000 0D0A2072 		.ascii	"\015\012 rok = \000"
 11216      6F6B203D 
 11216      2000
 11217 000a 0000     		.space	2
 11218              	.LC167:
 11219 000c 0D0A206D 		.ascii	"\015\012 mies = \000"
 11219      69657320 
 11219      3D2000
 11220 0017 00       		.space	1
 11221              	.LC168:
 11222 0018 0D0A2064 		.ascii	"\015\012 dzien = \000"
 11222      7A69656E 
 11222      203D2000 
 11223              	.LC169:
 11224 0024 0D0A2067 		.ascii	"\015\012 gdz = \000"
 11224      647A203D 
 11224      2000
 11225 002e 0000     		.space	2
 11226              	.LC170:
 11227 0030 0D0A206D 		.ascii	"\015\012 min = \000"
 11227      696E203D 
 11227      2000
 11228 003a 0000     		.space	2
 11229              	.LC171:
 11230 003c 0D0A2073 		.ascii	"\015\012 sek = \000"
 11230      656B203D 
 11230      2000
 11231 0046 0000     		.space	2
 11232              	.LC172:
 11233 0048 0D0A2054 		.ascii	"\015\012 TimStmp = \000"
 11233      696D5374 
 11233      6D70203D 
 11233      2000
ARM GAS  /tmp/ccjvICQi.s 			page 204


 11234              		.section	.rodata.TSL2561_i2c.str1.4,"aMS",%progbits,1
 11235              		.align	2
 11236              	.LC71:
 11237 0000 2C00     		.ascii	",\000"
 11238              		.section	.rodata.Zegarek.str1.4,"aMS",%progbits,1
 11239              		.align	2
 11240              	.LC164:
 11241 0000 30302D30 		.ascii	"00-00-00\000"
 11241      302D3030 
 11241      00
 11242 0009 000000   		.space	3
 11243              	.LC165:
 11244 000c 30303030 		.ascii	"0000-00-00\000"
 11244      2D30302D 
 11244      303000
 11245              		.section	.rodata._ytab,"a",%progbits
 11246              		.align	2
 11247              		.set	.LANCHOR0,. + 0
 11248              		.type	_ytab, %object
 11249              		.size	_ytab, 96
 11250              	_ytab:
 11251 0000 1F000000 		.word	31
 11252 0004 1C000000 		.word	28
 11253 0008 1F000000 		.word	31
 11254 000c 1E000000 		.word	30
 11255 0010 1F000000 		.word	31
 11256 0014 1E000000 		.word	30
 11257 0018 1F000000 		.word	31
 11258 001c 1F000000 		.word	31
 11259 0020 1E000000 		.word	30
 11260 0024 1F000000 		.word	31
 11261 0028 1E000000 		.word	30
 11262 002c 1F000000 		.word	31
 11263 0030 1F000000 		.word	31
 11264 0034 1D000000 		.word	29
 11265 0038 1F000000 		.word	31
 11266 003c 1E000000 		.word	30
 11267 0040 1F000000 		.word	31
 11268 0044 1E000000 		.word	30
 11269 0048 1F000000 		.word	31
 11270 004c 1F000000 		.word	31
 11271 0050 1E000000 		.word	30
 11272 0054 1F000000 		.word	31
 11273 0058 1E000000 		.word	30
 11274 005c 1F000000 		.word	31
 11275              		.section	.rodata.fun_tool.str1.4,"aMS",%progbits,1
 11276              		.align	2
 11277              	.LC80:
 11278 0000 0D0A2046 		.ascii	"\015\012 FLASH memory Read = \000"
 11278      4C415348 
 11278      206D656D 
 11278      6F727920 
 11278      52656164 
 11279              	.LC81:
 11280 0018 0D0A2046 		.ascii	"\015\012 Flash memory Page =\000"
 11280      6C617368 
 11280      206D656D 
ARM GAS  /tmp/ccjvICQi.s 			page 205


 11280      6F727920 
 11280      50616765 
 11281 002f 00       		.space	1
 11282              	.LC82:
 11283 0030 0D0A2000 		.ascii	"\015\012 \000"
 11284              	.LC83:
 11285 0034 0D0A0A20 		.ascii	"\015\012\012 \000"
 11285      00
 11286 0039 000000   		.space	3
 11287              	.LC84:
 11288 003c 202000   		.ascii	"  \000"
 11289 003f 00       		.space	1
 11290              	.LC85:
 11291 0040 20637263 		.ascii	" crc = \000"
 11291      203D2000 
 11292              	.LC86:
 11293 0048 0D0A2046 		.ascii	"\015\012 Flash memory Page = \000"
 11293      6C617368 
 11293      206D656D 
 11293      6F727920 
 11293      50616765 
 11294              	.LC87:
 11295 0060 0D0A204B 		.ascii	"\015\012 Kasowanie pamieci FLASH = \000"
 11295      61736F77 
 11295      616E6965 
 11295      2070616D 
 11295      69656369 
 11296 007e 0000     		.space	2
 11297              	.LC88:
 11298 0080 0D0A2047 		.ascii	"\015\012 Godzina = \000"
 11298      6F647A69 
 11298      6E61203D 
 11298      2000
 11299 008e 0000     		.space	2
 11300              	.LC89:
 11301 0090 0D0A204D 		.ascii	"\015\012 Minut   = \000"
 11301      696E7574 
 11301      2020203D 
 11301      2000
 11302 009e 0000     		.space	2
 11303              	.LC90:
 11304 00a0 0D0A2053 		.ascii	"\015\012 Sekunda = \000"
 11304      656B756E 
 11304      6461203D 
 11304      2000
 11305 00ae 0000     		.space	2
 11306              	.LC91:
 11307 00b0 0D0A2052 		.ascii	"\015\012 Read Start !\000"
 11307      65616420 
 11307      53746172 
 11307      74202100 
 11308              	.LC92:
 11309 00c0 0D0A2052 		.ascii	"\015\012 Read Done !\000"
 11309      65616420 
 11309      446F6E65 
 11309      202100
 11310 00cf 00       		.space	1
ARM GAS  /tmp/ccjvICQi.s 			page 206


 11311              	.LC93:
 11312 00d0 0D0A2043 		.ascii	"\015\012 Clear !\000"
 11312      6C656172 
 11312      202100
 11313 00db 00       		.space	1
 11314              	.LC94:
 11315 00dc 52656164 		.ascii	"Read sector\000"
 11315      20736563 
 11315      746F7200 
 11316              	.LC95:
 11317 00e8 0D0A2073 		.ascii	"\015\012 sectorNumber = \000"
 11317      6563746F 
 11317      724E756D 
 11317      62657220 
 11317      3D2000
 11318 00fb 00       		.space	1
 11319              	.LC96:
 11320 00fc 20745F72 		.ascii	" t_rsdio = \000"
 11320      7364696F 
 11320      203D2000 
 11321              	.LC97:
 11322 0108 0D0A2052 		.ascii	"\015\012 Read Error !!!\000"
 11322      65616420 
 11322      4572726F 
 11322      72202121 
 11322      2100
 11323              		.section	.rodata.head.str1.4,"aMS",%progbits,1
 11324              		.align	2
 11325              	.LC10:
 11326 0000 0C0D0A20 		.ascii	"\014\015\012 Mini STM32F103C8T6 RAM   \000"
 11326      4D696E69 
 11326      2053544D 
 11326      33324631 
 11326      30334338 
 11327 001e 0000     		.space	2
 11328              	.LC11:
 11329 0020 204D487A 		.ascii	" MHz\000"
 11329      00
 11330              		.section	.rodata.ili9486.str1.4,"aMS",%progbits,1
 11331              		.align	2
 11332              	.LC43:
 11333 0000 0D0A2072 		.ascii	"\015\012 reg = 0x\000"
 11333      6567203D 
 11333      20307800 
 11334              	.LC44:
 11335 000c 0D0A2064 		.ascii	"\015\012 dat = 0x\000"
 11335      6174203D 
 11335      20307800 
 11336              	.LC45:
 11337 0018 0C00     		.ascii	"\014\000"
 11338 001a 0000     		.space	2
 11339              	.LC46:
 11340 001c 0A0D0A3D 		.ascii	"\012\015\012======= ILI9486 ======================="
 11340      3D3D3D3D 
 11340      3D3D2049 
 11340      4C493934 
 11340      3836203D 
ARM GAS  /tmp/ccjvICQi.s 			page 207


 11341 0046 3D3D3D3D 		.ascii	"===========\015\012\000"
 11341      3D3D3D3D 
 11341      3D3D3D0D 
 11341      0A00
 11342              	.LC47:
 11343 0054 2072202D 		.ascii	" r - Read   c - Clear page  \015\012\000"
 11343      20526561 
 11343      64202020 
 11343      63202D20 
 11343      436C6561 
 11344 0073 00       		.space	1
 11345              	.LC48:
 11346 0074 2077202D 		.ascii	" w - Write  l - Loop read   \015\012\000"
 11346      20577269 
 11346      74652020 
 11346      6C202D20 
 11346      4C6F6F70 
 11347 0093 00       		.space	1
 11348              	.LC49:
 11349 0094 3D3D3D3D 		.ascii	"==================================================\015"
 11349      3D3D3D3D 
 11349      3D3D3D3D 
 11349      3D3D3D3D 
 11349      3D3D3D3D 
 11350 00c7 0A203E20 		.ascii	"\012 > \000"
 11350      00
 11351              	.LC50:
 11352 00cc 0D00     		.ascii	"\015\000"
 11353              		.section	.rodata.jdrs.9057,"a",%progbits
 11354              		.align	2
 11355              		.set	.LANCHOR36,. + 0
 11356              		.type	jdrs.9057, %object
 11357              		.size	jdrs.9057, 16
 11358              	jdrs.9057:
 11359 0000 3C240140 		.word	1073816636
 11360 0004 40240140 		.word	1073816640
 11361 0008 44240140 		.word	1073816644
 11362 000c 48240140 		.word	1073816648
 11363              		.section	.rodata.lexmark_lcd.str1.4,"aMS",%progbits,1
 11364              		.align	2
 11365              	.LC67:
 11366 0000 57697461 		.ascii	"Witaj szkolo         \000"
 11366      6A20737A 
 11366      6B6F6C6F 
 11366      20202020 
 11366      20202020 
 11367 0016 0000     		.space	2
 11368              	.LC68:
 11369 0018 5A617072 		.ascii	"Zapraszam do pracy        \000"
 11369      61737A61 
 11369      6D20646F 
 11369      20707261 
 11369      63792020 
 11370 0033 00       		.space	1
 11371              	.LC69:
 11372 0034 20202020 		.ascii	"                          \000"
 11372      20202020 
ARM GAS  /tmp/ccjvICQi.s 			page 208


 11372      20202020 
 11372      20202020 
 11372      20202020 
 11373 004f 00       		.space	1
 11374              	.LC70:
 11375 0050 20545B75 		.ascii	" T[us]=\000"
 11375      735D3D00 
 11376              		.section	.rodata.lion_updown.str1.4,"aMS",%progbits,1
 11377              		.align	2
 11378              	.LC17:
 11379 0000 2E00     		.ascii	".\000"
 11380 0002 0000     		.space	2
 11381              	.LC18:
 11382 0004 562000   		.ascii	"V \000"
 11383 0007 00       		.space	1
 11384              	.LC19:
 11385 0008 6D4100   		.ascii	"mA\000"
 11386 000b 00       		.space	1
 11387              	.LC20:
 11388 000c 6D416800 		.ascii	"mAh\000"
 11389              	.LC21:
 11390 0010 5700     		.ascii	"W\000"
 11391 0012 0000     		.space	2
 11392              	.LC22:
 11393 0014 6D576800 		.ascii	"mWh\000"
 11394              	.LC23:
 11395 0018 6F686D00 		.ascii	"ohm\000"
 11396              	.LC24:
 11397 001c 0D2000   		.ascii	"\015 \000"
 11398 001f 00       		.space	1
 11399              	.LC25:
 11400 0020 1B5B4B20 		.ascii	"\033[K sqlite3 lion.db \"update lion set mAh=\000"
 11400      73716C69 
 11400      74653320 
 11400      6C696F6E 
 11400      2E646220 
 11401 004a 0000     		.space	2
 11402              	.LC26:
 11403 004c 2C6D5768 		.ascii	",mWh=\000"
 11403      3D00
 11404 0052 0000     		.space	2
 11405              	.LC27:
 11406 0054 2C52773D 		.ascii	",Rw=\000"
 11406      00
 11407 0059 000000   		.space	3
 11408              	.LC28:
 11409 005c 2C6B6F6E 		.ascii	",kon=\000"
 11409      3D00
 11410 0062 0000     		.space	2
 11411              	.LC29:
 11412 0064 20776865 		.ascii	" where id=85\"\000"
 11412      72652069 
 11412      643D3835 
 11412      2200
 11413 0072 0000     		.space	2
 11414              	.LC30:
 11415 0074 1B5B4B00 		.ascii	"\033[K\000"
ARM GAS  /tmp/ccjvICQi.s 			page 209


 11416              	.LC31:
 11417 0078 30202020 		.ascii	"0        1         2         3         4         5\000"
 11417      20202020 
 11417      20312020 
 11417      20202020 
 11417      20202032 
 11418 00ab 00       		.space	1
 11419              	.LC32:
 11420 00ac 31323334 		.ascii	"123456789 123456789 123456789 123456789 123456789 1"
 11420      35363738 
 11420      39203132 
 11420      33343536 
 11420      37383920 
 11421 00df 32333435 		.ascii	"234567890\000"
 11421      36373839 
 11421      3000
 11422 00e9 000000   		.space	3
 11423              	.LC33:
 11424 00ec 506F6461 		.ascii	"Podaj wrtosc= \000"
 11424      6A207772 
 11424      746F7363 
 11424      3D2000
 11425 00fb 00       		.space	1
 11426              	.LC34:
 11427 00fc 1B5B4B57 		.ascii	"\033[KWartosc ileZnak= \000"
 11427      6172746F 
 11427      73632069 
 11427      6C655A6E 
 11427      616B3D20 
 11428 0111 000000   		.space	3
 11429              	.LC35:
 11430 0114 1B5B3131 		.ascii	"\033[11;36H\000"
 11430      3B333648 
 11430      00
 11431 011d 000000   		.space	3
 11432              	.LC36:
 11433 0120 5A65726F 		.ascii	"Zerowanie t/n=\000"
 11433      77616E69 
 11433      6520742F 
 11433      6E3D00
 11434 012f 00       		.space	1
 11435              	.LC37:
 11436 0130 20506F64 		.ascii	" Podaj wrtosc= \000"
 11436      616A2077 
 11436      72746F73 
 11436      633D2000 
 11437              	.LC38:
 11438 0140 1B5B4B69 		.ascii	"\033[KileZnak,Wartosc=\000"
 11438      6C655A6E 
 11438      616B2C57 
 11438      6172746F 
 11438      73633D00 
 11439              	.LC39:
 11440 0154 204C6164 		.ascii	" Laduj do 70% [mAh]=\000"
 11440      756A2064 
 11440      6F203730 
 11440      25205B6D 
ARM GAS  /tmp/ccjvICQi.s 			page 210


 11440      41685D3D 
 11441 0169 000000   		.space	3
 11442              	.LC40:
 11443 016c 2000     		.ascii	" \000"
 11444 016e 0000     		.space	2
 11445              	.LC41:
 11446 0170 1B5B4B20 		.ascii	"\033[K Zeruj [t]= \000"
 11446      5A657275 
 11446      6A205B74 
 11446      5D3D2000 
 11447              	.LC42:
 11448 0180 1B5B4B20 		.ascii	"\033[K Laduj do [mAh]=\000"
 11448      4C616475 
 11448      6A20646F 
 11448      205B6D41 
 11448      685D3D00 
 11449              		.section	.rodata.liontrend.str1.4,"aMS",%progbits,1
 11450              		.align	2
 11451              	.LC12:
 11452 0000 763D00   		.ascii	"v=\000"
 11453 0003 00       		.space	1
 11454              	.LC13:
 11455 0004 0D0A00   		.ascii	"\015\012\000"
 11456 0007 00       		.space	1
 11457              	.LC14:
 11458 0008 633D00   		.ascii	"c=\000"
 11459              		.section	.rodata.oblicz.str1.4,"aMS",%progbits,1
 11460              		.align	2
 11461              	.LC15:
 11462 0000 0C205541 		.ascii	"\014 UART1 \000"
 11462      52543120 
 11462      00
 11463 0009 000000   		.space	3
 11464              	.LC16:
 11465 000c 20622F73 		.ascii	" b/s \015\012\000"
 11465      200D0A00 
 11466              		.section	.rodata.qtouch.str1.4,"aMS",%progbits,1
 11467              		.align	2
 11468              	.LC98:
 11469 0000 0D0A2051 		.ascii	"\015\012 QT =\000"
 11469      54203D00 
 11470              		.section	.rodata.ws2812led.str1.4,"aMS",%progbits,1
 11471              		.align	2
 11472              	.LC66:
 11473 0000 0D0A2044 		.ascii	"\015\012 DMA start...\000"
 11473      4D412073 
 11473      74617274 
 11473      2E2E2E00 
 11474              		.ident	"GCC: (15:7-2018-q2-6) 7.3.1 20180622 (release) [ARM/embedded-7-branch revision 261907]"
ARM GAS  /tmp/ccjvICQi.s 			page 211


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccjvICQi.s:69     .text.gmtime_r.isra.0.constprop.2:00000000 $t
     /tmp/ccjvICQi.s:76     .text.gmtime_r.isra.0.constprop.2:00000000 gmtime_r.isra.0.constprop.2
     /tmp/ccjvICQi.s:264    .text.gmtime_r.isra.0.constprop.2:00000154 $d
                            *COM*:00000024 ptm
     /tmp/ccjvICQi.s:274    .text.head:00000000 $t
     /tmp/ccjvICQi.s:282    .text.head:00000000 head
     /tmp/ccjvICQi.s:305    .text.head:00000024 $d
     /tmp/ccjvICQi.s:309    .text.liontrend:00000000 $t
     /tmp/ccjvICQi.s:317    .text.liontrend:00000000 liontrend
     /tmp/ccjvICQi.s:446    .text.liontrend:00000124 $d
     /tmp/ccjvICQi.s:452    .text.oblicz:00000000 $t
     /tmp/ccjvICQi.s:460    .text.oblicz:00000000 oblicz
     /tmp/ccjvICQi.s:591    .text.oblicz:000000dc $d
                            *COM*:00000004 PutChar
     /tmp/ccjvICQi.s:606    .text.lion_updown:00000000 $t
     /tmp/ccjvICQi.s:614    .text.lion_updown:00000000 lion_updown
     /tmp/ccjvICQi.s:1001   .text.lion_updown:000002c0 $d
     /tmp/ccjvICQi.s:1031   .text.lion_updown:00000328 $d
                            *COM*:00000004 trg1
                            *COM*:00000004 trg0
                            *COM*:00000004 trg2
                            *COM*:00000004 trg4
                            *COM*:00000004 trg3
     /tmp/ccjvICQi.s:1070   .text.lion_updown:000003bc $t
     /tmp/ccjvICQi.s:1482   .text.lion_updown:00000648 $d
     /tmp/ccjvICQi.s:1516   .text.lion_updown:000006c8 $t
     /tmp/ccjvICQi.s:1927   .text.lion_updown:000009a0 $d
     /tmp/ccjvICQi.s:1961   .text.lion_updown:00000a20 $t
     /tmp/ccjvICQi.s:2258   .text.lion_updown:00000c30 $d
                            *COM*:00000004 delay_us
     /tmp/ccjvICQi.s:2288   .text.startup.main:00000000 $t
     /tmp/ccjvICQi.s:2296   .text.startup.main:00000000 main
     /tmp/ccjvICQi.s:2387   .text.startup.main:00000074 $d
     /tmp/ccjvICQi.s:2398   .text.uht:00000000 $t
     /tmp/ccjvICQi.s:2406   .text.uht:00000000 uht
     /tmp/ccjvICQi.s:2421   .text.uht:00000010 $d
     /tmp/ccjvICQi.s:2424   .text.rtc_calibrate:00000000 $t
     /tmp/ccjvICQi.s:2432   .text.rtc_calibrate:00000000 rtc_calibrate
     /tmp/ccjvICQi.s:2595   .text.rtc_calibrate:00000104 $d
                            *COM*:00000004 Timt
     /tmp/ccjvICQi.s:2610   .text.testwsk:00000000 $t
     /tmp/ccjvICQi.s:2618   .text.testwsk:00000000 testwsk
     /tmp/ccjvICQi.s:2626   .text.veml6075:00000000 $t
     /tmp/ccjvICQi.s:2634   .text.veml6075:00000000 veml6075
     /tmp/ccjvICQi.s:2739   .text.veml6075:000000a0 $d
     /tmp/ccjvICQi.s:2754   .text.softSPI_w:00000000 $t
     /tmp/ccjvICQi.s:2762   .text.softSPI_w:00000000 softSPI_w
     /tmp/ccjvICQi.s:2832   .text.softSPI_w:00000064 $d
     /tmp/ccjvICQi.s:2839   .text.softSPI_r:00000000 $t
     /tmp/ccjvICQi.s:2847   .text.softSPI_r:00000000 softSPI_r
     /tmp/ccjvICQi.s:2899   .text.softSPI_r:00000038 $d
     /tmp/ccjvICQi.s:2904   .text.ili9486:00000000 $t
     /tmp/ccjvICQi.s:2912   .text.ili9486:00000000 ili9486
     /tmp/ccjvICQi.s:3114   .text.ili9486:00000128 $d
     /tmp/ccjvICQi.s:3131   .text.wiznet5500:00000000 $t
ARM GAS  /tmp/ccjvICQi.s 			page 212


     /tmp/ccjvICQi.s:3139   .text.wiznet5500:00000000 wiznet5500
     /tmp/ccjvICQi.s:3213   .text.wiznet5500:00000074 $d
     /tmp/ccjvICQi.s:3223   .text.uv_meter:00000000 $t
     /tmp/ccjvICQi.s:3231   .text.uv_meter:00000000 uv_meter
     /tmp/ccjvICQi.s:3321   .text.uv_meter:00000078 $d
     /tmp/ccjvICQi.s:3329   .text.IRQLoraInit:00000000 $t
     /tmp/ccjvICQi.s:3337   .text.IRQLoraInit:00000000 IRQLoraInit
     /tmp/ccjvICQi.s:3370   .text.IRQLoraInit:0000001c $d
     /tmp/ccjvICQi.s:3375   .text.LoRaRX:00000000 $t
     /tmp/ccjvICQi.s:3383   .text.LoRaRX:00000000 LoRaRX
     /tmp/ccjvICQi.s:3592   .text.LoRaRX:00000144 $d
     /tmp/ccjvICQi.s:3610   .text.LoRaRX1:00000000 $t
     /tmp/ccjvICQi.s:3618   .text.LoRaRX1:00000000 LoRaRX1
     /tmp/ccjvICQi.s:3774   .text.LoRaRX1:00000100 $d
     /tmp/ccjvICQi.s:3792   .text.LoRaRX1:00000112 $t
     /tmp/ccjvICQi.s:3941   .text.LoRaRX1:00000238 $d
     /tmp/ccjvICQi.s:3973   .text.LoRaTX:00000000 $t
     /tmp/ccjvICQi.s:3981   .text.LoRaTX:00000000 LoRaTX
     /tmp/ccjvICQi.s:4223   .text.LoRaTX:00000198 $d
     /tmp/ccjvICQi.s:4243   .text.col1:00000000 $t
     /tmp/ccjvICQi.s:4251   .text.col1:00000000 col1
     /tmp/ccjvICQi.s:4271   .text.col1:00000018 $d
     /tmp/ccjvICQi.s:4275   .text.col2:00000000 $t
     /tmp/ccjvICQi.s:4283   .text.col2:00000000 col2
     /tmp/ccjvICQi.s:4299   .text.col2:00000014 $d
     /tmp/ccjvICQi.s:4302   .text.col0:00000000 $t
     /tmp/ccjvICQi.s:4310   .text.col0:00000000 col0
     /tmp/ccjvICQi.s:4326   .text.col0:00000014 $d
     /tmp/ccjvICQi.s:4329   .text.ws2812led:00000000 $t
     /tmp/ccjvICQi.s:4337   .text.ws2812led:00000000 ws2812led
     /tmp/ccjvICQi.s:4495   .text.ws2812led:000000e4 $d
     /tmp/ccjvICQi.s:4512   .text.lexmark_lcd:00000000 $t
     /tmp/ccjvICQi.s:4520   .text.lexmark_lcd:00000000 lexmark_lcd
     /tmp/ccjvICQi.s:4590   .text.lexmark_lcd:0000006c $d
     /tmp/ccjvICQi.s:4601   .text.softUTX_init:00000000 $t
     /tmp/ccjvICQi.s:4609   .text.softUTX_init:00000000 softUTX_init
     /tmp/ccjvICQi.s:4624   .text.softUTX_init:00000010 $d
     /tmp/ccjvICQi.s:4627   .text.sofUTX:00000000 $t
     /tmp/ccjvICQi.s:4635   .text.sofUTX:00000000 sofUTX
     /tmp/ccjvICQi.s:4726   .text.sofUTX:0000006c $d
     /tmp/ccjvICQi.s:4731   .text.ToLED:00000000 $t
     /tmp/ccjvICQi.s:4739   .text.ToLED:00000000 ToLED
     /tmp/ccjvICQi.s:4767   .text.cmd_LCD:00000000 $t
     /tmp/ccjvICQi.s:4775   .text.cmd_LCD:00000000 cmd_LCD
     /tmp/ccjvICQi.s:4837   .text.cmd_LCD:00000058 $d
     /tmp/ccjvICQi.s:4843   .text.CalculateLux:00000000 $t
     /tmp/ccjvICQi.s:4851   .text.CalculateLux:00000000 CalculateLux
     /tmp/ccjvICQi.s:5023   .text.TSL2561_i2c:00000000 $t
     /tmp/ccjvICQi.s:5031   .text.TSL2561_i2c:00000000 TSL2561_i2c
     /tmp/ccjvICQi.s:5168   .text.TSL2561_i2c:000000dc $d
     /tmp/ccjvICQi.s:5180   .text.set_mode:00000000 $t
     /tmp/ccjvICQi.s:5188   .text.set_mode:00000000 set_mode
     /tmp/ccjvICQi.s:5249   .text.MAX44009_i2c:00000000 $t
     /tmp/ccjvICQi.s:5257   .text.MAX44009_i2c:00000000 MAX44009_i2c
     /tmp/ccjvICQi.s:5528   .text.MAX44009_i2c:000001ec $d
     /tmp/ccjvICQi.s:5544   .text.BMP280_i2c:00000000 $t
     /tmp/ccjvICQi.s:5552   .text.BMP280_i2c:00000000 BMP280_i2c
ARM GAS  /tmp/ccjvICQi.s 			page 213


     /tmp/ccjvICQi.s:6022   .text.BMP280_i2c:00000334 $d
     /tmp/ccjvICQi.s:6043   .text.BMP280_spi:00000000 $t
     /tmp/ccjvICQi.s:6051   .text.BMP280_spi:00000000 BMP280_spi
     /tmp/ccjvICQi.s:6305   .text.BMP280_spi:000001bc $d
     /tmp/ccjvICQi.s:6321   .text.fun_tool:00000000 $t
     /tmp/ccjvICQi.s:6329   .text.fun_tool:00000000 fun_tool
     /tmp/ccjvICQi.s:6342   .text.fun_tool:00000014 $d
     /tmp/ccjvICQi.s:6363   .text.fun_tool:0000003e $t
     /tmp/ccjvICQi.s:6769   .text.fun_tool:00000318 $d
     /tmp/ccjvICQi.s:6796   .text.qtouch_mesaure:00000000 $t
     /tmp/ccjvICQi.s:6804   .text.qtouch_mesaure:00000000 qtouch_mesaure
     /tmp/ccjvICQi.s:6860   .text.qtouch_mesaure:0000003c $d
     /tmp/ccjvICQi.s:6866   .text.qtouch:00000000 $t
     /tmp/ccjvICQi.s:6874   .text.qtouch:00000000 qtouch
     /tmp/ccjvICQi.s:6917   .text.qtouch:00000048 $d
     /tmp/ccjvICQi.s:6924   .text.DHT_Tool:00000000 $t
     /tmp/ccjvICQi.s:6932   .text.DHT_Tool:00000000 DHT_Tool
     /tmp/ccjvICQi.s:6965   .text.DHT_Tool:0000002c $d
     /tmp/ccjvICQi.s:6971   .text.SPI_Tool_Menu:00000000 $t
     /tmp/ccjvICQi.s:6979   .text.SPI_Tool_Menu:00000000 SPI_Tool_Menu
     /tmp/ccjvICQi.s:7003   .text.SPI_Tool_Menu:00000024 $d
     /tmp/ccjvICQi.s:7010   .text.SPI_Tool:00000000 $t
     /tmp/ccjvICQi.s:7018   .text.SPI_Tool:00000000 SPI_Tool
     /tmp/ccjvICQi.s:7185   .text.SPI_Tool:00000114 $d
     /tmp/ccjvICQi.s:7206   .text.Menu1:00000000 $t
     /tmp/ccjvICQi.s:7214   .text.Menu1:00000000 Menu1
     /tmp/ccjvICQi.s:7238   .text.Menu1:00000024 $d
     /tmp/ccjvICQi.s:7245   .text.MemCard_Menu:00000000 $t
     /tmp/ccjvICQi.s:7253   .text.MemCard_Menu:00000000 MemCard_Menu
     /tmp/ccjvICQi.s:7326   .text.MemCard_Menu:00000082 $d
     /tmp/ccjvICQi.s:7365   .text.MemCard_Menu:000000d0 $t
     /tmp/ccjvICQi.s:7641   .text.MemCard_Menu:000002c0 $d
     /tmp/ccjvICQi.s:10814  .bss.buffer.8846:00000000 buffer.8846
     /tmp/ccjvICQi.s:7668   .text.MemCard_Menu:00000324 $t
     /tmp/ccjvICQi.s:8031   .text.MemCard_Menu:000005e8 $d
     /tmp/ccjvICQi.s:8070   .text.MemCard_Menu:0000067c $t
     /tmp/ccjvICQi.s:8329   .text.MemCard_Menu:00000854 $d
     /tmp/ccjvICQi.s:8354   .text.CopyClock:00000000 $t
     /tmp/ccjvICQi.s:8362   .text.CopyClock:00000000 CopyClock
     /tmp/ccjvICQi.s:8428   .text.Intro2:00000000 $t
     /tmp/ccjvICQi.s:8436   .text.Intro2:00000000 Intro2
     /tmp/ccjvICQi.s:8881   .text.Intro2:000002e0 $d
                            *COM*:00000008 Rtc
     /tmp/ccjvICQi.s:8909   .text.Intro2:00000348 $t
     /tmp/ccjvICQi.s:9086   .text.Intro2:00000490 $d
     /tmp/ccjvICQi.s:9097   .text.CopyTime:00000000 $t
     /tmp/ccjvICQi.s:9105   .text.CopyTime:00000000 CopyTime
     /tmp/ccjvICQi.s:9144   .text.CopyDate:00000000 $t
     /tmp/ccjvICQi.s:9152   .text.CopyDate:00000000 CopyDate
     /tmp/ccjvICQi.s:9191   .text.Zegarek:00000000 $t
     /tmp/ccjvICQi.s:9199   .text.Zegarek:00000000 Zegarek
     /tmp/ccjvICQi.s:9258   .text.Zegarek:00000054 $d
     /tmp/ccjvICQi.s:9266   .text.SysTick_Handler:00000000 $t
     /tmp/ccjvICQi.s:9274   .text.SysTick_Handler:00000000 SysTick_Handler
     /tmp/ccjvICQi.s:9352   .text.SysTick_Handler:00000054 $d
                            *COM*:00000004 Tim0
                            *COM*:00000004 Tim1
ARM GAS  /tmp/ccjvICQi.s 			page 214


                            *COM*:00000004 trg5
     /tmp/ccjvICQi.s:9365   .text.TIM2_IRQHandler:00000000 $t
     /tmp/ccjvICQi.s:9373   .text.TIM2_IRQHandler:00000000 TIM2_IRQHandler
     /tmp/ccjvICQi.s:9402   .text.TIM2_IRQHandler:0000001c $d
     /tmp/ccjvICQi.s:9405   .text.TIM3_IRQHandler:00000000 $t
     /tmp/ccjvICQi.s:9413   .text.TIM3_IRQHandler:00000000 TIM3_IRQHandler
     /tmp/ccjvICQi.s:9473   .text.TIM3_IRQHandler:00000044 $d
                            *COM*:00000004 Timt3
                            *COM*:00000004 delay3_us
                            *COM*:00000004 t3rg0
                            *COM*:00000004 t3rg1
                            *COM*:00000004 t3rg2
     /tmp/ccjvICQi.s:9481   .text.EXTI0_IRQHandler:00000000 $t
     /tmp/ccjvICQi.s:9489   .text.EXTI0_IRQHandler:00000000 EXTI0_IRQHandler
     /tmp/ccjvICQi.s:9523   .text.EXTI0_IRQHandler:00000024 $d
     /tmp/ccjvICQi.s:9528   .text.EXTI1_IRQHandler:00000000 $t
     /tmp/ccjvICQi.s:9536   .text.EXTI1_IRQHandler:00000000 EXTI1_IRQHandler
     /tmp/ccjvICQi.s:9566   .text.EXTI1_IRQHandler:00000020 $d
     /tmp/ccjvICQi.s:9570   .text.EXTI2_IRQHandler:00000000 $t
     /tmp/ccjvICQi.s:9578   .text.EXTI2_IRQHandler:00000000 EXTI2_IRQHandler
     /tmp/ccjvICQi.s:9608   .text.EXTI2_IRQHandler:00000020 $d
     /tmp/ccjvICQi.s:9612   .text.EXTI3_IRQHandler:00000000 $t
     /tmp/ccjvICQi.s:9620   .text.EXTI3_IRQHandler:00000000 EXTI3_IRQHandler
     /tmp/ccjvICQi.s:9650   .text.EXTI3_IRQHandler:00000020 $d
     /tmp/ccjvICQi.s:9654   .text.EXTI4_IRQHandler:00000000 $t
     /tmp/ccjvICQi.s:9662   .text.EXTI4_IRQHandler:00000000 EXTI4_IRQHandler
     /tmp/ccjvICQi.s:9692   .text.EXTI4_IRQHandler:00000020 $d
     /tmp/ccjvICQi.s:9696   .text.EXTI15_10_IRQHandler:00000000 $t
     /tmp/ccjvICQi.s:9704   .text.EXTI15_10_IRQHandler:00000000 EXTI15_10_IRQHandler
     /tmp/ccjvICQi.s:9730   .text.EXTI15_10_IRQHandler:0000001c $d
     /tmp/ccjvICQi.s:9733   .text.EXTI9_5_IRQHandler:00000000 $t
     /tmp/ccjvICQi.s:9741   .text.EXTI9_5_IRQHandler:00000000 EXTI9_5_IRQHandler
     /tmp/ccjvICQi.s:9784   .text.EXTI9_5_IRQHandler:00000038 $d
     /tmp/ccjvICQi.s:9788   .text.RTC_IRQHandler:00000000 $t
     /tmp/ccjvICQi.s:9796   .text.RTC_IRQHandler:00000000 RTC_IRQHandler
     /tmp/ccjvICQi.s:9834   .text.RTC_IRQHandler:00000028 $d
     /tmp/ccjvICQi.s:9839   .text.RTCAlarm_IRQHandler:00000000 $t
     /tmp/ccjvICQi.s:9847   .text.RTCAlarm_IRQHandler:00000000 RTCAlarm_IRQHandler
     /tmp/ccjvICQi.s:9881   .text.RTCAlarm_IRQHandler:00000028 $d
     /tmp/ccjvICQi.s:9885   .text.DMA1_Channel1_IRQHandler:00000000 $t
     /tmp/ccjvICQi.s:9893   .text.DMA1_Channel1_IRQHandler:00000000 DMA1_Channel1_IRQHandler
     /tmp/ccjvICQi.s:9935   .text.DMA1_Channel1_IRQHandler:0000002c $d
     /tmp/ccjvICQi.s:9940   .text.FSMC_IRQHandler:00000000 $t
     /tmp/ccjvICQi.s:9948   .text.FSMC_IRQHandler:00000000 FSMC_IRQHandler
     /tmp/ccjvICQi.s:9963   .text.DACDmaInit:00000000 $t
     /tmp/ccjvICQi.s:9971   .text.DACDmaInit:00000000 DACDmaInit
     /tmp/ccjvICQi.s:10010  .text.DACDmaInit:00000030 $d
     /tmp/ccjvICQi.s:10016  .text.TIM4_IRQHandler:00000000 $t
     /tmp/ccjvICQi.s:10024  .text.TIM4_IRQHandler:00000000 TIM4_IRQHandler
     /tmp/ccjvICQi.s:10044  .text.TIM4_IRQHandler:00000010 $d
                            *COM*:00000004 Tim4
     /tmp/ccjvICQi.s:10048  .text.adc1_init_injected:00000000 $t
     /tmp/ccjvICQi.s:10056  .text.adc1_init_injected:00000000 adc1_init_injected
     /tmp/ccjvICQi.s:10124  .text.adc1_init_injected:00000050 $d
     /tmp/ccjvICQi.s:10132  .text.adc_get_internals:00000000 $t
     /tmp/ccjvICQi.s:10140  .text.adc_get_internals:00000000 adc_get_internals
     /tmp/ccjvICQi.s:10218  .text.adc_get_internals:00000054 $d
ARM GAS  /tmp/ccjvICQi.s 			page 215


     /tmp/ccjvICQi.s:10225  .text.adc_get_injected:00000000 $t
     /tmp/ccjvICQi.s:10233  .text.adc_get_injected:00000000 adc_get_injected
     /tmp/ccjvICQi.s:10300  .text.adc_get_injected:00000048 $d
                .rodata.jdrs.9057:00000000 jdrs.9072
     /tmp/ccjvICQi.s:10306  .text.NVIC_conf:00000000 $t
     /tmp/ccjvICQi.s:10314  .text.NVIC_conf:00000000 NVIC_conf
     /tmp/ccjvICQi.s:10351  .text.NVIC_conf:00000028 $d
     /tmp/ccjvICQi.s:10357  .text.SetDate:00000000 $t
     /tmp/ccjvICQi.s:10365  .text.SetDate:00000000 SetDate
     /tmp/ccjvICQi.s:10573  .text.SetDate:0000019c $d
     /tmp/ccjvICQi.s:10585  .text.flash_latency:00000000 $t
     /tmp/ccjvICQi.s:10593  .text.flash_latency:00000000 flash_latency
     /tmp/ccjvICQi.s:10624  .text.flash_latency:00000024 $d
     /tmp/ccjvICQi.s:11358  .rodata.jdrs.9057:00000000 jdrs.9057
     /tmp/ccjvICQi.s:10951  .data.p_TSpm:00000000 p_TSpm
     /tmp/ccjvICQi.s:10739  .bss.FLAG:00000000 FLAG
     /tmp/ccjvICQi.s:11250  .rodata._ytab:00000000 _ytab
                            *COM*:00000004 Time6
                            *COM*:00000004 Tim6
                            *COM*:00000004 Tim2
     /tmp/ccjvICQi.s:10654  .rodata:00000000 $d
     /tmp/ccjvICQi.s:10707  .bss.CAh.8243:00000000 $d
     /tmp/ccjvICQi.s:10711  .bss.CAh.8243:00000000 CAh.8243
     /tmp/ccjvICQi.s:10714  .bss.CWh.8245:00000000 $d
     /tmp/ccjvICQi.s:10718  .bss.CWh.8245:00000000 CWh.8245
     /tmp/ccjvICQi.s:10721  .bss.Cah.8242:00000000 $d
     /tmp/ccjvICQi.s:10725  .bss.Cah.8242:00000000 Cah.8242
     /tmp/ccjvICQi.s:10728  .bss.Cwh.8244:00000000 $d
     /tmp/ccjvICQi.s:10732  .bss.Cwh.8244:00000000 Cwh.8244
     /tmp/ccjvICQi.s:10735  .bss.FLAG:00000000 $d
     /tmp/ccjvICQi.s:10742  .bss.Rwa.8247:00000000 $d
     /tmp/ccjvICQi.s:10746  .bss.Rwa.8247:00000000 Rwa.8247
     /tmp/ccjvICQi.s:10749  .bss.SX1278_1.8441:00000000 $d
     /tmp/ccjvICQi.s:10753  .bss.SX1278_1.8441:00000000 SX1278_1.8441
     /tmp/ccjvICQi.s:10756  .bss.SX1278_1.8467:00000000 $d
     /tmp/ccjvICQi.s:10760  .bss.SX1278_1.8467:00000000 SX1278_1.8467
     /tmp/ccjvICQi.s:10763  .bss.SX1278_1.8492:00000000 $d
     /tmp/ccjvICQi.s:10767  .bss.SX1278_1.8492:00000000 SX1278_1.8492
     /tmp/ccjvICQi.s:10770  .bss.SX1278_hw1.8440:00000000 $d
     /tmp/ccjvICQi.s:10774  .bss.SX1278_hw1.8440:00000000 SX1278_hw1.8440
     /tmp/ccjvICQi.s:10777  .bss.SX1278_hw1.8466:00000000 $d
     /tmp/ccjvICQi.s:10781  .bss.SX1278_hw1.8466:00000000 SX1278_hw1.8466
     /tmp/ccjvICQi.s:10784  .bss.SX1278_hw1.8491:00000000 $d
     /tmp/ccjvICQi.s:10788  .bss.SX1278_hw1.8491:00000000 SX1278_hw1.8491
     /tmp/ccjvICQi.s:10791  .bss.TSpm:00000000 $d
     /tmp/ccjvICQi.s:10794  .bss.TSpm:00000000 TSpm
     /tmp/ccjvICQi.s:10797  .bss.buf_rx.8470:00000000 $d
     /tmp/ccjvICQi.s:10801  .bss.buf_rx.8470:00000000 buf_rx.8470
     /tmp/ccjvICQi.s:10804  .bss.buf_tx.8494:00000000 $d
     /tmp/ccjvICQi.s:10808  .bss.buf_tx.8494:00000000 buf_tx.8494
     /tmp/ccjvICQi.s:10811  .bss.buffer.8846:00000000 $d
     /tmp/ccjvICQi.s:10817  .bss.cah.8240:00000000 $d
     /tmp/ccjvICQi.s:10821  .bss.cah.8240:00000000 cah.8240
     /tmp/ccjvICQi.s:10824  .bss.cnt.8236:00000000 $d
     /tmp/ccjvICQi.s:10828  .bss.cnt.8236:00000000 cnt.8236
     /tmp/ccjvICQi.s:10831  .bss.cnt2.8246:00000000 $d
     /tmp/ccjvICQi.s:10835  .bss.cnt2.8246:00000000 cnt2.8246
ARM GAS  /tmp/ccjvICQi.s 			page 216


     /tmp/ccjvICQi.s:10841  .bss.coile.8261:00000000 coile.8261
     /tmp/ccjvICQi.s:10842  .bss.coile.8261:00000000 $d
     /tmp/ccjvICQi.s:10844  .bss.cur.8254:00000000 $d
     /tmp/ccjvICQi.s:10848  .bss.cur.8254:00000000 cur.8254
     /tmp/ccjvICQi.s:10851  .bss.cwh.8241:00000000 $d
     /tmp/ccjvICQi.s:10855  .bss.cwh.8241:00000000 cwh.8241
     /tmp/ccjvICQi.s:10858  .bss.datetime.8669:00000000 $d
     /tmp/ccjvICQi.s:10862  .bss.datetime.8669:00000000 datetime.8669
     /tmp/ccjvICQi.s:10865  .bss.dcur.8255:00000000 $d
     /tmp/ccjvICQi.s:10869  .bss.dcur.8255:00000000 dcur.8255
     /tmp/ccjvICQi.s:10875  .bss.dinit.8847:00000000 dinit.8847
     /tmp/ccjvICQi.s:10876  .bss.dinit.8847:00000000 $d
     /tmp/ccjvICQi.s:10878  .bss.dma_buf:00000000 $d
     /tmp/ccjvICQi.s:10882  .bss.dma_buf:00000000 dma_buf
     /tmp/ccjvICQi.s:10885  .bss.dma_buf.8757:00000000 $d
     /tmp/ccjvICQi.s:10889  .bss.dma_buf.8757:00000000 dma_buf.8757
     /tmp/ccjvICQi.s:10892  .bss.pow.8250:00000000 $d
     /tmp/ccjvICQi.s:10896  .bss.pow.8250:00000000 pow.8250
     /tmp/ccjvICQi.s:10899  .bss.str_num.8495:00000000 $d
     /tmp/ccjvICQi.s:10903  .bss.str_num.8495:00000000 str_num.8495
     /tmp/ccjvICQi.s:10906  .bss.val.8742:00000000 $d
     /tmp/ccjvICQi.s:10910  .bss.val.8742:00000000 val.8742
     /tmp/ccjvICQi.s:10913  .bss.vbus.8256:00000000 $d
     /tmp/ccjvICQi.s:10917  .bss.vbus.8256:00000000 vbus.8256
     /tmp/ccjvICQi.s:10920  .bss.vr3.8248:00000000 $d
     /tmp/ccjvICQi.s:10924  .bss.vr3.8248:00000000 vr3.8248
     /tmp/ccjvICQi.s:10927  .bss.vr4.8249:00000000 $d
     /tmp/ccjvICQi.s:10931  .bss.vr4.8249:00000000 vr4.8249
     /tmp/ccjvICQi.s:10934  .bss.yb.8738:00000000 $d
     /tmp/ccjvICQi.s:10938  .bss.yb.8738:00000000 yb.8738
     /tmp/ccjvICQi.s:10941  .bss.yn.8739:00000000 $d
     /tmp/ccjvICQi.s:10945  .bss.yn.8739:00000000 yn.8739
     /tmp/ccjvICQi.s:10948  .data.p_TSpm:00000000 $d
     /tmp/ccjvICQi.s:10954  .data.tbuf.8744:00000000 $d
     /tmp/ccjvICQi.s:10958  .data.tbuf.8744:00000000 tbuf.8744
     /tmp/ccjvICQi.s:10961  .rodata.BMP280_i2c.str1.4:00000000 $d
     /tmp/ccjvICQi.s:10978  .rodata.BMP280_spi.str1.4:00000000 $d
     /tmp/ccjvICQi.s:10982  .rodata.Intro2.str1.4:00000000 $d
     /tmp/ccjvICQi.s:10994  .rodata.LoRaRX.str1.4:00000000 $d
     /tmp/ccjvICQi.s:10998  .rodata.LoRaRX1.str1.4:00000000 $d
     /tmp/ccjvICQi.s:11036  .rodata.MAX44009_i2c.str1.4:00000000 $d
     /tmp/ccjvICQi.s:11040  .rodata.MemCard_Menu.str1.4:00000000 $d
     /tmp/ccjvICQi.s:11164  .rodata.Menu1.str1.4:00000000 $d
     /tmp/ccjvICQi.s:11180  .rodata.SPI_Tool.str1.4:00000000 $d
     /tmp/ccjvICQi.s:11198  .rodata.SPI_Tool_Menu.str1.4:00000000 $d
     /tmp/ccjvICQi.s:11214  .rodata.SetDate.str1.4:00000000 $d
     /tmp/ccjvICQi.s:11235  .rodata.TSL2561_i2c.str1.4:00000000 $d
     /tmp/ccjvICQi.s:11239  .rodata.Zegarek.str1.4:00000000 $d
     /tmp/ccjvICQi.s:11246  .rodata._ytab:00000000 $d
     /tmp/ccjvICQi.s:11276  .rodata.fun_tool.str1.4:00000000 $d
     /tmp/ccjvICQi.s:11324  .rodata.head.str1.4:00000000 $d
     /tmp/ccjvICQi.s:11331  .rodata.ili9486.str1.4:00000000 $d
     /tmp/ccjvICQi.s:11354  .rodata.jdrs.9057:00000000 $d
     /tmp/ccjvICQi.s:11364  .rodata.lexmark_lcd.str1.4:00000000 $d
     /tmp/ccjvICQi.s:11377  .rodata.lion_updown.str1.4:00000000 $d
     /tmp/ccjvICQi.s:11450  .rodata.liontrend.str1.4:00000000 $d
     /tmp/ccjvICQi.s:11460  .rodata.oblicz.str1.4:00000000 $d
ARM GAS  /tmp/ccjvICQi.s 			page 217


     /tmp/ccjvICQi.s:11467  .rodata.qtouch.str1.4:00000000 $d
     /tmp/ccjvICQi.s:11471  .rodata.ws2812led.str1.4:00000000 $d

UNDEFINED SYMBOLS
tr_pen_color
UaPutK
uint2uart
UaPutS
sint2uart
BkpRegInit
uint2str
UART1_putc
i2c1r_init
i2c1_write
i2c1_read
UART_getChar
p_Fifo1
tr_locate
UART_getDec
UART_getStr
unt2uart
int2uart
int2uarz
UaPutC
UART2_putc
RtcInit
i2c1_init
ssd1306_init
num2uart
int2str
oled_str16
oled_refresh_gram
oled_hw
oled_num24
UART_getHex
hex2uart
SPI1_init_
DHT_Init
DHT_read
I2C2_init
i2c2_scan
SX1278_begin
SX1278_LoRaEntryRx
SX1278_LoRaRx
SX1278_SPIRead
UART_getNum
SX1278_LoRaRxPacket
SX1278_read
unt2str
strlen
stpcpy
SX1278_LoRaEntryTx
SX1278_LoRaTxPacketStart
SX1278_sleep
UC1608_Init
UC1608_Clr
UC1608_str
ARM GAS  /tmp/ccjvICQi.s 			page 218


UC1608_Refresh
i2c2_write
i2c2_read
spi1_rw
mmc_read_sect
crc16_spi2
EraseFlashPage
TFT_Clear
rtc_SetTime
SPI2_init
spi2_rw
TFT_Init
crc16_spi2_init
CardType
mmc_init
mmc_read_config
mmc_write_sect
TFT_dy
rtc_GetTime
TFT_Fill
TFT_txt
TFT_SetWindow
ColCon
str2int
