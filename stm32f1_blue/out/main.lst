ARM GAS  /tmp/cczkEFU1.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   3              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   4              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   5              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   6              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   7              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
   8              		.eabi_attribute 30, 2	@ Tag_ABI_optimization_goals
   9              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  10              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  11              		.file	"main.c"
  12              	@ GNU C99 (15:7-2018-q2-6) version 7.3.1 20180622 (release) [ARM/embedded-7-branch revision 261907]
  13              	@	compiled by GNU C version 8.2.0, GMP version 6.1.2, MPFR version 4.0.2, MPC version 1.1.0, isl ve
  14              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  15              	@ options passed:  -I . -imultilib thumb/v7-m -MD out/main.d -MF out/main.d
  16              	@ -MP -MQ out/main.o -D__USES_INITFINI__ -D RAMCODE -D STM32F10X_HD main.c
  17              	@ -mcpu=cortex-m3 -mthumb -auxbase-strip out/main.o -O2 -Wall
  18              	@ -Wstrict-prototypes -Wextra -Wno-uninitialized
  19              	@ -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable
  20              	@ -std=gnu99 -ffunction-sections -fdata-sections -fverbose-asm
  21              	@ options enabled:  -faggressive-loop-optimizations -falign-jumps
  22              	@ -falign-labels -falign-loops -fauto-inc-dec -fbranch-count-reg
  23              	@ -fcaller-saves -fchkp-check-incomplete-type -fchkp-check-read
  24              	@ -fchkp-check-write -fchkp-instrument-calls -fchkp-narrow-bounds
  25              	@ -fchkp-optimize -fchkp-store-bounds -fchkp-use-static-bounds
  26              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcode-hoisting
  27              	@ -fcombine-stack-adjustments -fcommon -fcompare-elim -fcprop-registers
  28              	@ -fcrossjumping -fcse-follow-jumps -fdata-sections -fdefer-pop
  29              	@ -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
  30              	@ -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-types
  31              	@ -fexpensive-optimizations -fforward-propagate -ffp-int-builtin-inexact
  32              	@ -ffunction-cse -ffunction-sections -fgcse -fgcse-lm -fgnu-runtime
  33              	@ -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  34              	@ -fif-conversion -fif-conversion2 -findirect-inlining -finline
  35              	@ -finline-atomics -finline-functions-called-once -finline-small-functions
  36              	@ -fipa-bit-cp -fipa-cp -fipa-icf -fipa-icf-functions -fipa-icf-variables
  37              	@ -fipa-profile -fipa-pure-const -fipa-ra -fipa-reference -fipa-sra
  38              	@ -fipa-vrp -fira-hoist-pressure -fira-share-save-slots
  39              	@ -fira-share-spill-slots -fisolate-erroneous-paths-dereference -fivopts
  40              	@ -fkeep-static-consts -fleading-underscore -flifetime-dse -flra-remat
  41              	@ -flto-odr-type-merging -fmath-errno -fmerge-constants
  42              	@ -fmerge-debug-strings -fmove-loop-invariants -fomit-frame-pointer
  43              	@ -foptimize-sibling-calls -foptimize-strlen -fpartial-inlining -fpeephole
  44              	@ -fpeephole2 -fplt -fprefetch-loop-arrays -freg-struct-return
  45              	@ -freorder-blocks -freorder-functions -frerun-cse-after-loop
  46              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  47              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  48              	@ -fsched-pressure -fsched-rank-heuristic -fsched-spec
  49              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-insns
  50              	@ -fschedule-insns2 -fsection-anchors -fsemantic-interposition
  51              	@ -fshow-column -fshrink-wrap -fshrink-wrap-separate -fsigned-zeros
  52              	@ -fsplit-ivs-in-unroller -fsplit-wide-types -fssa-backprop -fssa-phiopt
  53              	@ -fstdarg-opt -fstore-merging -fstrict-aliasing -fstrict-overflow
  54              	@ -fstrict-volatile-bitfields -fsync-libcalls -fthread-jumps
  55              	@ -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce
  56              	@ -ftree-ccp -ftree-ch -ftree-coalesce-vars -ftree-copy-prop -ftree-cselim
  57              	@ -ftree-dce -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
ARM GAS  /tmp/cczkEFU1.s 			page 2


  58              	@ -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  59              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pre
  60              	@ -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slsr
  61              	@ -ftree-sra -ftree-switch-conversion -ftree-tail-merge -ftree-ter
  62              	@ -ftree-vrp -funit-at-a-time -fverbose-asm -fzero-initialized-in-bss
  63              	@ -masm-syntax-unified -mfix-cortex-m3-ldrd -mlittle-endian
  64              	@ -mpic-data-is-text-relative -msched-prolog -mthumb -munaligned-access
  65              	@ -mvectorize-with-neon-quad
  66              	
  67              		.text
  68              		.section	.text.gmtime_r.isra.0.constprop.2,"ax",%progbits
  69              		.align	1
  70              		.p2align 2,,3
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu softvfp
  75              		.type	gmtime_r.isra.0.constprop.2, %function
  76              	gmtime_r.isra.0.constprop.2:
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}	@
  80              	@ main.c:5667: 	tmbuf->tm_min = (dayclock % 3600) / 60;
  81 0004 4FF46164 		mov	r4, #3600	@ tmp221,
  82              	@ main.c:5663: 	dayclock = (u32) time % SECS_DAY;
  83 0008 524B     		ldr	r3, .L35	@ tmp191,
  84 000a 534A     		ldr	r2, .L35+4	@ tmp193,
  85 000c A3FB0013 		umull	r1, r3, r3, r0	@ tmp372, tmp190, tmp191, ISRA.306
  86 0010 190C     		lsrs	r1, r3, #16	@ dayclock, tmp190,
  87 0012 02FB1101 		mls	r1, r2, r1, r0	@ dayclock, tmp193, dayclock, ISRA.306
  88              	@ main.c:5667: 	tmbuf->tm_min = (dayclock % 3600) / 60;
  89 0016 514A     		ldr	r2, .L35+8	@ tmp219,
  90              	@ main.c:5664: 	dayno = (u32) time / SECS_DAY;
  91 0018 1B0C     		lsrs	r3, r3, #16	@ dayno, tmp190,
  92              	@ main.c:5667: 	tmbuf->tm_min = (dayclock % 3600) / 60;
  93 001a A2FB012E 		umull	r2, lr, r2, r1	@ tmp373, tmp218, tmp219, dayclock
  94              	@ main.c:5669: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
  95 001e 504A     		ldr	r2, .L35+12	@ tmp252,
  96 0020 1D1D     		adds	r5, r3, #4	@ tmp250, dayno,
  97              	@ main.c:5667: 	tmbuf->tm_min = (dayclock % 3600) / 60;
  98 0022 4FEADE2E 		lsr	lr, lr, #11	@ tmp217, tmp218,
  99              	@ main.c:5669: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 100 0026 A2FB0502 		umull	r0, r2, r2, r5	@ tmp374, tmp251, tmp252, tmp250
 101              	@ main.c:5666: 	tmbuf->tm_sec = dayclock % 60;
 102 002a 4E4E     		ldr	r6, .L35+16	@ tmp198,
 103              	@ main.c:5667: 	tmbuf->tm_min = (dayclock % 3600) / 60;
 104 002c 04FB1E10 		mls	r0, r4, lr, r1	@ tmp222, tmp221, tmp217, dayclock
 105              	@ main.c:5666: 	tmbuf->tm_sec = dayclock % 60;
 106 0030 A6FB0174 		umull	r7, r4, r6, r1	@ tmp375, tmp197, tmp198, dayclock
 107              	@ main.c:5669: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 108 0034 AF1A     		subs	r7, r5, r2	@ tmp253, tmp250, tmp251
 109              	@ main.c:5667: 	tmbuf->tm_min = (dayclock % 3600) / 60;
 110 0036 A6FB0060 		umull	r6, r0, r6, r0	@ tmp376, tmp232, tmp198, tmp222
 111              	@ main.c:5669: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 112 003a 02EB5702 		add	r2, r2, r7, lsr #1	@ tmp255, tmp251, tmp253,
 113 003e 9208     		lsrs	r2, r2, #2	@ tmp256, tmp255,
 114              	@ main.c:5666: 	tmbuf->tm_sec = dayclock % 60;
ARM GAS  /tmp/cczkEFU1.s 			page 3


 115 0040 6409     		lsrs	r4, r4, #5	@ tmp199, tmp197,
 116 0042 DFF82CC1 		ldr	ip, .L35+28	@ tmp364,
 117              	@ main.c:5669: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 118 0046 C2EBC202 		rsb	r2, r2, r2, lsl #3	@ tmp259, tmp256, tmp256,
 119              	@ main.c:5666: 	tmbuf->tm_sec = dayclock % 60;
 120 004a C4EB0414 		rsb	r4, r4, r4, lsl #4	@ tmp202, tmp199, tmp199,
 121              	@ main.c:5669: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 122 004e AA1A     		subs	r2, r5, r2	@ tmp260, tmp250, tmp259
 123              	@ main.c:5667: 	tmbuf->tm_min = (dayclock % 3600) / 60;
 124 0050 4009     		lsrs	r0, r0, #5	@ tmp234, tmp232,
 125              	@ main.c:5666: 	tmbuf->tm_sec = dayclock % 60;
 126 0052 A1EB8401 		sub	r1, r1, r4, lsl #2	@ tmp204, dayclock, tmp202,
 127              	@ main.c:5669: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 128 0056 CCF81820 		str	r2, [ip, #24]	@ tmp260, ptm.tm_wday
 129              	@ main.c:5667: 	tmbuf->tm_min = (dayclock % 3600) / 60;
 130 005a CCE90010 		strd	r1, r0, [ip]	@ tmp204, tmp234, tmp364
 131              	@ main.c:5661: 	int year = EPOCH_YR;
 132 005e 40F2B272 		movw	r2, #1970	@ year,
 133              	@ main.c:5672: 		dayno -= YEARSIZE(year);
 134 0062 40F26D18 		movw	r8, #365	@ iftmp.283_20,
 135              	@ main.c:5670: 	while (dayno >= (u32) YEARSIZE(year))
 136 0066 404D     		ldr	r5, .L35+20	@ tmp368,
 137 0068 6420     		movs	r0, #100	@ tmp369,
 138 006a 4FF4C877 		mov	r7, #400	@ tmp371,
 139 006e 10E0     		b	.L2	@
 140              	.L31:
 141 0070 A5FB0241 		umull	r4, r1, r5, r2	@ tmp377, tmp285, tmp368, year
 142 0074 4C09     		lsrs	r4, r1, #5	@ _24, tmp285,
 143 0076 00FB1424 		mls	r4, r0, r4, r2	@ _24, tmp369, _24, year
 144 007a 9CB9     		cbnz	r4, .L5	@ _24,
 145 007c C909     		lsrs	r1, r1, #7	@ tmp365, tmp285,
 146 007e 07FB1121 		mls	r1, r7, r1, r2	@ _125, tmp371, tmp365, year
 147 0082 D9B9     		cbnz	r1, .L29	@ _125,
 148 0084 B3F5B77F 		cmp	r3, #366	@ dayno,
 149 0088 61D3     		bcc	.L30	@,
 150              	.L23:
 151              	@ main.c:5672: 		dayno -= YEARSIZE(year);
 152 008a 4FF4B771 		mov	r1, #366	@ iftmp.283_20,
 153              	.L3:
 154 008e 5B1A     		subs	r3, r3, r1	@ dayno, dayno, iftmp.283_20
 155              	@ main.c:5673: 		year++;
 156 0090 0132     		adds	r2, r2, #1	@ year, year,
 157              	.L2:
 158              	@ main.c:5670: 	while (dayno >= (u32) YEARSIZE(year))
 159 0092 12F00306 		ands	r6, r2, #3	@ _15, year,
 160 0096 EBD0     		beq	.L31	@,
 161 0098 B3F5B67F 		cmp	r3, #364	@ dayno,
 162 009c 13D9     		bls	.L32	@,
 163              	@ main.c:5672: 		dayno -= YEARSIZE(year);
 164 009e 40F26D11 		movw	r1, #365	@ iftmp.283_20,
 165 00a2 F4E7     		b	.L3	@
 166              	.L5:
 167              	@ main.c:5670: 	while (dayno >= (u32) YEARSIZE(year))
 168 00a4 B3F5B77F 		cmp	r3, #366	@ dayno,
 169 00a8 EFD2     		bcs	.L23	@,
 170              	.L17:
 171 00aa 4FF4C870 		mov	r0, #400	@ tmp355,
ARM GAS  /tmp/cczkEFU1.s 			page 4


 172 00ae 2E49     		ldr	r1, .L35+20	@ tmp353,
 173 00b0 A1FB0251 		umull	r5, r1, r1, r2	@ tmp379, tmp352, tmp353, year
 174 00b4 C909     		lsrs	r1, r1, #7	@ _125, tmp352,
 175 00b6 00FB1121 		mls	r1, r0, r1, r2	@ _125, tmp355, _125, year
 176 00ba 10E0     		b	.L14	@
 177              	.L29:
 178 00bc B3F5B67F 		cmp	r3, #364	@ dayno,
 179 00c0 F3D9     		bls	.L17	@,
 180              	@ main.c:5672: 		dayno -= YEARSIZE(year);
 181 00c2 4146     		mov	r1, r8	@ iftmp.283_20, iftmp.283_20
 182 00c4 E3E7     		b	.L3	@
 183              	.L32:
 184 00c6 6425     		movs	r5, #100	@ tmp335,
 185 00c8 4FF4C870 		mov	r0, #400	@ tmp345,
 186 00cc 2649     		ldr	r1, .L35+20	@ tmp333,
 187 00ce A1FB0241 		umull	r4, r1, r1, r2	@ tmp378, tmp332, tmp333, year
 188 00d2 4C09     		lsrs	r4, r1, #5	@ _24, tmp332,
 189 00d4 C909     		lsrs	r1, r1, #7	@ _125, tmp332,
 190 00d6 05FB1424 		mls	r4, r5, r4, r2	@ _24, tmp335, _24, year
 191 00da 00FB1121 		mls	r1, r0, r1, r2	@ _125, tmp345, _125, year
 192              	.L14:
 193              	@ main.c:5676: 	tmbuf->tm_yday = dayno;
 194 00de CCF81C30 		str	r3, [ip, #28]	@ dayno, ptm.tm_yday
 195 00e2 2248     		ldr	r0, .L35+24	@ ivtmp.411,
 196 00e4 002C     		cmp	r4, #0	@ _24,
 197 00e6 14BF     		ite	ne	@
 198 00e8 4FF03008 		movne	r8, #48	@, tmp315,
 199 00ec 4FF00008 		moveq	r8, #0	@, tmp315,
 200 00f0 0029     		cmp	r1, #0	@ _125,
 201 00f2 0CBF     		ite	eq	@
 202 00f4 4FF03009 		moveq	r9, #48	@, tmp321,
 203 00f8 4FF00009 		movne	r9, #0	@, tmp321,
 204              	@ main.c:5680: 		dayno -= _ytab[LEAPYEAR(year)][tmbuf->tm_mon];
 205 00fc 0025     		movs	r5, #0	@ ivtmp.409,
 206              	@ main.c:5678: 	while (dayno >= (u32) _ytab[LEAPYEAR(year)][tmbuf->tm_mon])
 207 00fe 5EB9     		cbnz	r6, .L10	@ _15,
 208              	.L34:
 209 0100 D4B9     		cbnz	r4, .L11	@ _24,
 210 0102 F9B9     		cbnz	r1, .L33	@ _125,
 211 0104 076B     		ldr	r7, [r0, #48]	@ MEM[base: _42, offset: 48B], MEM[base: _42, offset: 48B]
 212 0106 BB42     		cmp	r3, r7	@ dayno, MEM[base: _42, offset: 48B]
 213 0108 09D3     		bcc	.L16	@,
 214              	.L15:
 215 010a 50F80970 		ldr	r7, [r0, r9]	@ _73, MEM[base: _120, index: _18, offset: 0B]
 216              	.L9:
 217              	@ main.c:5680: 		dayno -= _ytab[LEAPYEAR(year)][tmbuf->tm_mon];
 218 010e DB1B     		subs	r3, r3, r7	@ dayno, dayno, _73
 219 0110 0135     		adds	r5, r5, #1	@ ivtmp.409, ivtmp.409,
 220 0112 0430     		adds	r0, r0, #4	@ ivtmp.411, ivtmp.411,
 221              	@ main.c:5678: 	while (dayno >= (u32) _ytab[LEAPYEAR(year)][tmbuf->tm_mon])
 222 0114 002E     		cmp	r6, #0	@ _15
 223 0116 F3D0     		beq	.L34	@
 224              	.L10:
 225 0118 0768     		ldr	r7, [r0]	@ _73, MEM[base: _121, offset: 0B]
 226 011a BB42     		cmp	r3, r7	@ dayno, _73
 227 011c F7D2     		bcs	.L9	@,
 228              	.L16:
ARM GAS  /tmp/cczkEFU1.s 			page 5


 229              	@ main.c:5684: 	tmbuf->tm_isdst = 1;
 230 011e 0121     		movs	r1, #1	@ tmp325,
 231              	@ main.c:5683: 	tmbuf->tm_mday = dayno + 1;
 232 0120 0B44     		add	r3, r3, r1	@ tmp323,
 233              	@ main.c:5685: 	tmbuf->tm_hour += TIMEZONE - tmbuf->tm_isdst;
 234 0122 0EEB0100 		add	r0, lr, r1	@ tmp327, tmp217,
 235              	@ main.c:5687: 	tmbuf->tm_mon  += 1;
 236 0126 0D44     		add	r5, r5, r1	@ tmp330,
 237              	@ main.c:5685: 	tmbuf->tm_hour += TIMEZONE - tmbuf->tm_isdst;
 238 0128 CCE90203 		strd	r0, r3, [ip, #8]	@ tmp327, tmp323, tmp364,
 239              	@ main.c:5686: 	tmbuf->tm_year += YEAR0;
 240 012c CCE90452 		strd	r5, r2, [ip, #16]	@ tmp330, year, tmp364,
 241              	@ main.c:5684: 	tmbuf->tm_isdst = 1;
 242 0130 CCF82010 		str	r1, [ip, #32]	@ tmp325, ptm.tm_isdst
 243              	@ main.c:5689: }
 244 0134 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}	@
 245              	.L11:
 246              	@ main.c:5678: 	while (dayno >= (u32) _ytab[LEAPYEAR(year)][tmbuf->tm_mon])
 247 0138 50F80870 		ldr	r7, [r0, r8]	@ MEM[base: _88, index: _74, offset: 0B], MEM[base: _88, index: _74, offset: 0B]
 248 013c BB42     		cmp	r3, r7	@ dayno, MEM[base: _88, index: _74, offset: 0B]
 249 013e EED3     		bcc	.L16	@,
 250 0140 076B     		ldr	r7, [r0, #48]	@ _73, MEM[base: _88, offset: 48B]
 251 0142 E4E7     		b	.L9	@
 252              	.L33:
 253 0144 50F80870 		ldr	r7, [r0, r8]	@ MEM[base: _32, index: _74, offset: 0B], MEM[base: _32, index: _74, offset: 0B]
 254 0148 BB42     		cmp	r3, r7	@ dayno, MEM[base: _32, index: _74, offset: 0B]
 255 014a DED2     		bcs	.L15	@,
 256 014c E7E7     		b	.L16	@
 257              	.L30:
 258              	@ main.c:5670: 	while (dayno >= (u32) YEARSIZE(year))
 259 014e 0C46     		mov	r4, r1	@ _24, _125
 260 0150 C5E7     		b	.L14	@
 261              	.L36:
 262 0152 00BF     		.align	2
 263              	.L35:
 264 0154 07452EC2 		.word	-1037155065
 265 0158 80510100 		.word	86400
 266 015c C5B3A291 		.word	-1851608123
 267 0160 25499224 		.word	613566757
 268 0164 89888888 		.word	-2004318071
 269 0168 1F85EB51 		.word	1374389535
 270 016c 00000000 		.word	.LANCHOR0
 271 0170 00000000 		.word	ptm
 272              		.size	gmtime_r.isra.0.constprop.2, .-gmtime_r.isra.0.constprop.2
 273              		.section	.text.head,"ax",%progbits
 274              		.align	1
 275              		.p2align 2,,3
 276              		.global	head
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 280              		.fpu softvfp
 281              		.type	head, %function
 282              	head:
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285 0000 08B5     		push	{r3, lr}	@
ARM GAS  /tmp/cczkEFU1.s 			page 6


 286              	@ main.c:216: 		tr_pen_color( TGREEN );
 287 0002 0220     		movs	r0, #2	@,
 288 0004 FFF7FEFF 		bl	tr_pen_color	@
 289              	@ main.c:218: 		UaPutK("\f\r\n Mini STM32F103C8T6 RAM   "); // Boot from RAM 	 = B0+ B1+
 290 0008 0648     		ldr	r0, .L39	@,
 291 000a FFF7FEFF 		bl	UaPutK	@
 292              	@ main.c:222: 		uint2uart(F_CPU/1e6);	UaPutK(" MHz");
 293 000e 4820     		movs	r0, #72	@,
 294 0010 FFF7FEFF 		bl	uint2uart	@
 295 0014 0448     		ldr	r0, .L39+4	@,
 296 0016 FFF7FEFF 		bl	UaPutK	@
 297              	@ main.c:224: 	}
 298 001a BDE80840 		pop	{r3, lr}	@
 299              	@ main.c:223: 		tr_pen_color( TYELLOW );
 300 001e 0320     		movs	r0, #3	@,
 301 0020 FFF7FEBF 		b	tr_pen_color	@
 302              	.L40:
 303              		.align	2
 304              	.L39:
 305 0024 00000000 		.word	.LC10
 306 0028 20000000 		.word	.LC11
 307              		.size	head, .-head
 308              		.section	.text.liontrend,"ax",%progbits
 309              		.align	1
 310              		.p2align 2,,3
 311              		.global	liontrend
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu softvfp
 316              		.type	liontrend, %function
 317              	liontrend:
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}	@
 321              	@ main.c:246: 		v[6] = (100*(v[0]-v[1]))/(v[2]-v[3]); //a=(y2-y1)/(x2-x1)
 322 0004 6423     		movs	r3, #100	@ tmp194,
 323 0006 B0F90060 		ldrsh	r6, [r0]	@ _1, *v_82(D)
 324 000a B0F902E0 		ldrsh	lr, [r0, #2]	@ _3, MEM[(s16 *)v_82(D) + 2B]
 325 000e B0F90440 		ldrsh	r4, [r0, #4]	@ _8, MEM[(s16 *)v_82(D) + 4B]
 326 0012 A6EB0E0C 		sub	ip, r6, lr	@ tmp192, _1, _3
 327 0016 03FB0CFC 		mul	ip, r3, ip	@ tmp193, tmp194, tmp192
 328 001a B0F90620 		ldrsh	r2, [r0, #6]	@ _10, MEM[(s16 *)v_82(D) + 6B]
 329              	@ main.c:244: void liontrend(s16 v[],s16 c[]){
 330 001e 0546     		mov	r5, r0	@ v, v
 331              	@ main.c:246: 		v[6] = (100*(v[0]-v[1]))/(v[2]-v[3]); //a=(y2-y1)/(x2-x1)
 332 0020 A01A     		subs	r0, r4, r2	@ tmp195, _8, _10
 333 0022 9CFBF0FC 		sdiv	ip, ip, r0	@ tmp197, tmp193, tmp195
 334 0026 0FFA8CFC 		sxth	ip, ip	@ _13, tmp197
 335              	@ main.c:247: 		v[5] = v[0]-v[6]*v[2]/100;  //b=y-ax
 336 002a 0CFB04F4 		mul	r4, ip, r4	@ tmp199, _13, _8
 337 002e 3D4F     		ldr	r7, .L43	@ tmp202,
 338              	@ main.c:248: 		v[4] = v[1]-v[6]*v[3]/100;  //b=y-ax;
 339 0030 0CFB02F2 		mul	r2, ip, r2	@ tmp209, _13, _10
 340              	@ main.c:247: 		v[5] = v[0]-v[6]*v[2]/100;  //b=y-ax
 341 0034 87FB0408 		smull	r0, r8, r7, r4	@ tmp275, tmp201, tmp202, tmp199
 342 0038 E017     		asrs	r0, r4, #31	@ tmp204, tmp199,
ARM GAS  /tmp/cczkEFU1.s 			page 7


 343 003a A0EB6810 		sub	r0, r0, r8, asr #5	@ tmp200, tmp204, tmp201,
 344 003e 3044     		add	r0, r0, r6	@ tmp207, _1
 345 0040 00B2     		sxth	r0, r0	@ _20, tmp207
 346              	@ main.c:249: 		v[7] = 100*(339-v[5])/v[6]; //x=(y-b)/a
 347 0042 C0F5A974 		rsb	r4, r0, #338	@ tmp220, _20,
 348 0046 0134     		adds	r4, r4, #1	@ tmp220, tmp220,
 349 0048 03FB04F4 		mul	r4, r3, r4	@ tmp221, tmp194, tmp220
 350 004c 94FBFCF4 		sdiv	r4, r4, ip	@ tmp224, tmp221, _13
 351              	@ main.c:244: void liontrend(s16 v[],s16 c[]){
 352 0050 0E46     		mov	r6, r1	@ c, c
 353              	@ main.c:248: 		v[4] = v[1]-v[6]*v[3]/100;  //b=y-ax;
 354 0052 87FB0281 		smull	r8, r1, r7, r2	@ tmp276, tmp211, tmp202, tmp209
 355 0056 D217     		asrs	r2, r2, #31	@ tmp214, tmp209,
 356 0058 A2EB6112 		sub	r2, r2, r1, asr #5	@ tmp210, tmp214, tmp211,
 357 005c 7244     		add	r2, r2, lr	@ tmp217, _3
 358 005e 2A81     		strh	r2, [r5, #8]	@ movhi	@ tmp217, MEM[(s16 *)v_82(D) + 8B]
 359              	@ main.c:247: 		v[5] = v[0]-v[6]*v[2]/100;  //b=y-ax
 360 0060 6881     		strh	r0, [r5, #10]	@ movhi	@ _20, MEM[(s16 *)v_82(D) + 10B]
 361              	@ main.c:249: 		v[7] = 100*(339-v[5])/v[6]; //x=(y-b)/a
 362 0062 EC81     		strh	r4, [r5, #14]	@ movhi	@ tmp224, MEM[(s16 *)v_82(D) + 14B]
 363              	@ main.c:246: 		v[6] = (100*(v[0]-v[1]))/(v[2]-v[3]); //a=(y2-y1)/(x2-x1)
 364 0064 A5F80CC0 		strh	ip, [r5, #12]	@ movhi	@ _13, MEM[(s16 *)v_82(D) + 12B]
 365              	@ main.c:251: 		c[6] = (100*(c[0]-c[1]))/(c[2]-c[3]);
 366 0068 B6F900E0 		ldrsh	lr, [r6]	@ _32, *c_87(D)
 367 006c B6F902C0 		ldrsh	ip, [r6, #2]	@ _34, MEM[(s16 *)c_87(D) + 2B]
 368 0070 B6F90440 		ldrsh	r4, [r6, #4]	@ _39, MEM[(s16 *)c_87(D) + 4B]
 369 0074 AEEB0C02 		sub	r2, lr, ip	@ tmp226, _32, _34
 370 0078 03FB02F3 		mul	r3, r3, r2	@ tmp227, tmp194, tmp226
 371 007c B6F90610 		ldrsh	r1, [r6, #6]	@ _41, MEM[(s16 *)c_87(D) + 6B]
 372              	@ main.c:256: 		UaPutS("v="); sint2uart(v[6]); sint2uart(v[5]); sint2uart(v[4]); sint2uart(v[7]); U
 373 0080 2948     		ldr	r0, .L43+4	@,
 374              	@ main.c:251: 		c[6] = (100*(c[0]-c[1]))/(c[2]-c[3]);
 375 0082 621A     		subs	r2, r4, r1	@ tmp229, _39, _41
 376 0084 93FBF2F3 		sdiv	r3, r3, r2	@ tmp231, tmp227, tmp229
 377 0088 1BB2     		sxth	r3, r3	@ _44, tmp231
 378              	@ main.c:252: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 379 008a 03FB04F4 		mul	r4, r3, r4	@ tmp233, _44, _39
 380              	@ main.c:253: 		c[4] = c[1]-c[6]*c[3]/100;//y-ax
 381 008e 03FB01F1 		mul	r1, r3, r1	@ tmp243, _44, _41
 382              	@ main.c:252: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 383 0092 87FB0429 		smull	r2, r9, r7, r4	@ tmp277, tmp235, tmp202, tmp233
 384              	@ main.c:253: 		c[4] = c[1]-c[6]*c[3]/100;//y-ax
 385 0096 87FB0128 		smull	r2, r8, r7, r1	@ tmp278, tmp245, tmp202, tmp243
 386              	@ main.c:252: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 387 009a E217     		asrs	r2, r4, #31	@ tmp238, tmp233,
 388 009c A2EB6912 		sub	r2, r2, r9, asr #5	@ tmp234, tmp238, tmp235,
 389              	@ main.c:253: 		c[4] = c[1]-c[6]*c[3]/100;//y-ax
 390 00a0 C917     		asrs	r1, r1, #31	@ tmp248, tmp243,
 391              	@ main.c:252: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 392 00a2 7244     		add	r2, r2, lr	@ tmp241, _32
 393              	@ main.c:253: 		c[4] = c[1]-c[6]*c[3]/100;//y-ax
 394 00a4 A1EB6811 		sub	r1, r1, r8, asr #5	@ tmp244, tmp248, tmp245,
 395 00a8 6144     		add	r1, r1, ip	@ tmp251, _34
 396              	@ main.c:252: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 397 00aa 92B2     		uxth	r2, r2	@ _50, tmp241
 398              	@ main.c:251: 		c[6] = (100*(c[0]-c[1]))/(c[2]-c[3]);
 399 00ac B381     		strh	r3, [r6, #12]	@ movhi	@ _44, MEM[(s16 *)c_87(D) + 12B]
ARM GAS  /tmp/cczkEFU1.s 			page 8


 400              	@ main.c:252: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 401 00ae 7281     		strh	r2, [r6, #10]	@ movhi	@ _50, MEM[(s16 *)c_87(D) + 10B]
 402              	@ main.c:253: 		c[4] = c[1]-c[6]*c[3]/100;//y-ax
 403 00b0 3181     		strh	r1, [r6, #8]	@ movhi	@ tmp251, MEM[(s16 *)c_87(D) + 8B]
 404              	@ main.c:254: 		c[7] = c[5]+c[6]*v[7]/100;// szukana pojemnosc
 405 00b2 B5F90E10 		ldrsh	r1, [r5, #14]	@ MEM[(s16 *)v_82(D) + 14B], MEM[(s16 *)v_82(D) + 14B]
 406              	@ main.c:256: 		UaPutS("v="); sint2uart(v[6]); sint2uart(v[5]); sint2uart(v[4]); sint2uart(v[7]); U
 407 00b6 1D4C     		ldr	r4, .L43+8	@ tmp268,
 408              	@ main.c:254: 		c[7] = c[5]+c[6]*v[7]/100;// szukana pojemnosc
 409 00b8 03FB01F3 		mul	r3, r3, r1	@ tmp254, _44, MEM[(s16 *)v_82(D) + 14B]
 410 00bc 87FB0317 		smull	r1, r7, r7, r3	@ tmp279, tmp256, tmp202, tmp254
 411 00c0 DB17     		asrs	r3, r3, #31	@ tmp259, tmp254,
 412 00c2 C3EB6713 		rsb	r3, r3, r7, asr #5	@ tmp255, tmp259, tmp256,
 413 00c6 1A44     		add	r2, r2, r3	@ tmp261, tmp255
 414 00c8 F281     		strh	r2, [r6, #14]	@ movhi	@ tmp261, MEM[(s16 *)c_87(D) + 14B]
 415              	@ main.c:256: 		UaPutS("v="); sint2uart(v[6]); sint2uart(v[5]); sint2uart(v[4]); sint2uart(v[7]); U
 416 00ca FFF7FEFF 		bl	UaPutS	@
 417 00ce B5F90C00 		ldrsh	r0, [r5, #12]	@, MEM[(s16 *)v_82(D) + 12B]
 418 00d2 FFF7FEFF 		bl	sint2uart	@
 419 00d6 B5F90A00 		ldrsh	r0, [r5, #10]	@, MEM[(s16 *)v_82(D) + 10B]
 420 00da FFF7FEFF 		bl	sint2uart	@
 421 00de B5F90800 		ldrsh	r0, [r5, #8]	@, MEM[(s16 *)v_82(D) + 8B]
 422 00e2 FFF7FEFF 		bl	sint2uart	@
 423 00e6 B5F90E00 		ldrsh	r0, [r5, #14]	@, MEM[(s16 *)v_82(D) + 14B]
 424 00ea FFF7FEFF 		bl	sint2uart	@
 425 00ee 2046     		mov	r0, r4	@, tmp268
 426 00f0 FFF7FEFF 		bl	UaPutS	@
 427              	@ main.c:257: 		UaPutS("c="); sint2uart(c[6]); sint2uart(c[5]); sint2uart(c[4]); sint2uart(c[7]); U
 428 00f4 0E48     		ldr	r0, .L43+12	@,
 429 00f6 FFF7FEFF 		bl	UaPutS	@
 430 00fa B6F90C00 		ldrsh	r0, [r6, #12]	@, MEM[(s16 *)c_87(D) + 12B]
 431 00fe FFF7FEFF 		bl	sint2uart	@
 432 0102 B6F90A00 		ldrsh	r0, [r6, #10]	@, MEM[(s16 *)c_87(D) + 10B]
 433 0106 FFF7FEFF 		bl	sint2uart	@
 434 010a B6F90800 		ldrsh	r0, [r6, #8]	@, MEM[(s16 *)c_87(D) + 8B]
 435 010e FFF7FEFF 		bl	sint2uart	@
 436 0112 B6F90E00 		ldrsh	r0, [r6, #14]	@, MEM[(s16 *)c_87(D) + 14B]
 437 0116 FFF7FEFF 		bl	sint2uart	@
 438 011a 2046     		mov	r0, r4	@, tmp268
 439              	@ main.c:258: 	}
 440 011c BDE8F843 		pop	{r3, r4, r5, r6, r7, r8, r9, lr}	@
 441              	@ main.c:257: 		UaPutS("c="); sint2uart(c[6]); sint2uart(c[5]); sint2uart(c[4]); sint2uart(c[7]); U
 442 0120 FFF7FEBF 		b	UaPutS	@
 443              	.L44:
 444              		.align	2
 445              	.L43:
 446 0124 1F85EB51 		.word	1374389535
 447 0128 00000000 		.word	.LC12
 448 012c 04000000 		.word	.LC13
 449 0130 08000000 		.word	.LC14
 450              		.size	liontrend, .-liontrend
 451              		.section	.text.oblicz,"ax",%progbits
 452              		.align	1
 453              		.p2align 2,,3
 454              		.global	oblicz
 455              		.syntax unified
 456              		.thumb
ARM GAS  /tmp/cczkEFU1.s 			page 9


 457              		.thumb_func
 458              		.fpu softvfp
 459              		.type	oblicz, %function
 460              	oblicz:
 461              		@ Volatile: function does not return.
 462              		@ args = 0, pretend = 0, frame = 80
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464              	@ main.c:5423: 	USART1->BRR = (F_CPU+UART1_SPEED/2)/UART1_SPEED;
 465 0000 40F27126 		movw	r6, #625	@ tmp141,
 466              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 467 0004 2025     		movs	r5, #32	@ tmp143,
 468              	@ main.c:259: void oblicz(void){
 469 0006 80B5     		push	{r7, lr}	@
 470 0008 94B0     		sub	sp, sp, #80	@,,
 471              	@ main.c:261: 		BkpRegInit();
 472 000a FFF7FEFF 		bl	BkpRegInit	@
 473              	@ main.c:267: 		PB12_o = 0;		// rozladowanie
 474 000e 0022     		movs	r2, #0	@ tmp150,
 475              	@ main.c:269: 		PB14_o = 1;   // dzwonek
 476 0010 0121     		movs	r1, #1	@ tmp154,
 477              	@ main.c:5420: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 478 0012 324F     		ldr	r7, .L48	@ tmp126,
 479              	@ main.c:5421: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 480 0014 3248     		ldr	r0, .L48+4	@ tmp128,
 481              	@ main.c:5420: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 482 0016 BB69     		ldr	r3, [r7, #24]	@ _28, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 483              	@ main.c:5422: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 484 0018 324C     		ldr	r4, .L48+8	@ tmp131,
 485              	@ main.c:5420: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 486 001a 43F48043 		orr	r3, r3, #16384	@ _29, _28,
 487 001e BB61     		str	r3, [r7, #24]	@ _29, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 488              	@ main.c:5421: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 489 0020 4368     		ldr	r3, [r0, #4]	@ _30, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 490              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 491 0022 314F     		ldr	r7, .L48+12	@ tmp142,
 492              	@ main.c:5421: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 493 0024 23F47F63 		bic	r3, r3, #4080	@ tmp129, _30,
 494 0028 43F49263 		orr	r3, r3, #1168	@ _32, tmp129,
 495 002c 4360     		str	r3, [r0, #4]	@ _32, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 496              	@ main.c:5422: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 497 002e A389     		ldrh	r3, [r4, #12]	@, MEM[(struct USART_TypeDef *)1073821696B].CR1
 498              	@ main.c:267: 		PB12_o = 0;		// rozladowanie
 499 0030 DFF8D8C0 		ldr	ip, .L48+48	@ tmp149,
 500              	@ main.c:5422: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 501 0034 43F40053 		orr	r3, r3, #8192	@ _34, MEM[(struct USART_TypeDef *)1073821696B].CR1,
 502 0038 43F02C03 		orr	r3, r3, #44	@ _34, _34,
 503 003c A381     		strh	r3, [r4, #12]	@ movhi	@ _34, MEM[(struct USART_TypeDef *)1073821696B].CR1
 504              	@ main.c:5423: 	USART1->BRR = (F_CPU+UART1_SPEED/2)/UART1_SPEED;
 505 003e 2681     		strh	r6, [r4, #8]	@ movhi	@ tmp141, MEM[(struct USART_TypeDef *)1073821696B].BRR
 506              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 507 0040 7D60     		str	r5, [r7, #4]	@ tmp143, MEM[(struct NVIC_Type *)3758153984B].ISER
 508              	@ main.c:265: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 509 0042 D0F80434 		ldr	r3, [r0, #1028]	@ _1, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 510              	@ main.c:268: 		PB13_o = 0;   // ladowanie
 511 0046 294F     		ldr	r7, .L48+16	@ tmp151,
 512              	@ main.c:265: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 513 0048 23F07F63 		bic	r3, r3, #267386880	@ tmp145, _1,
ARM GAS  /tmp/cczkEFU1.s 			page 10


 514 004c 23F47023 		bic	r3, r3, #983040	@ tmp145, tmp145,
 515 0050 43F0AA63 		orr	r3, r3, #89128960	@ _3, tmp145,
 516              	@ main.c:269: 		PB14_o = 1;   // dzwonek
 517 0054 264E     		ldr	r6, .L48+20	@ tmp153,
 518              	@ main.c:265: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 519 0056 43F4A023 		orr	r3, r3, #327680	@ _3, _3,
 520 005a C0F80434 		str	r3, [r0, #1028]	@ _3, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 521              	@ main.c:271: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 522 005e 254D     		ldr	r5, .L48+24	@ tmp155,
 523 0060 254B     		ldr	r3, .L48+28	@ tmp156,
 524              	@ main.c:267: 		PB12_o = 0;		// rozladowanie
 525 0062 CCF80020 		str	r2, [ip]	@ tmp150, MEM[(volatile long unsigned int *)1109492144B]
 526              	@ main.c:271: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 527 0066 0320     		movs	r0, #3	@,
 528              	@ main.c:268: 		PB13_o = 0;   // ladowanie
 529 0068 3A60     		str	r2, [r7]	@ tmp150, MEM[(volatile long unsigned int *)1109492148B]
 530              	@ main.c:269: 		PB14_o = 1;   // dzwonek
 531 006a 3160     		str	r1, [r6]	@ tmp154, MEM[(volatile long unsigned int *)1109492152B]
 532              	@ main.c:271: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 533 006c 2B60     		str	r3, [r5]	@ tmp156, PutChar
 534 006e FFF7FEFF 		bl	tr_pen_color	@
 535              	@ main.c:272: 		UaPutS("\f UART1 "); UaPutS (uint2str( (F_CPU/1)/(1*USART1->BRR-1),buf));	
 536 0072 2248     		ldr	r0, .L48+32	@,
 537 0074 FFF7FEFF 		bl	UaPutS	@
 538 0078 2389     		ldrh	r3, [r4, #8]	@, MEM[(struct USART_TypeDef *)1073821696B].BRR
 539 007a 2148     		ldr	r0, .L48+36	@ tmp165,
 540 007c 013B     		subs	r3, r3, #1	@ tmp162, MEM[(struct USART_TypeDef *)1073821696B].BRR,
 541 007e B0FBF3F0 		udiv	r0, r0, r3	@, tmp165, tmp162
 542 0082 01A9     		add	r1, sp, #4	@,,
 543 0084 FFF7FEFF 		bl	uint2str	@
 544              	@ main.c:276: 		s16 v[8]={365,356,0, 30,0,0,0,0};
 545 0088 1E4C     		ldr	r4, .L48+40	@ tmp167,
 546              	@ main.c:272: 		UaPutS("\f UART1 "); UaPutS (uint2str( (F_CPU/1)/(1*USART1->BRR-1),buf));	
 547 008a FFF7FEFF 		bl	UaPutS	@
 548              	@ main.c:273: 		UaPutS (" b/s \r\n");
 549 008e 1E48     		ldr	r0, .L48+44	@,
 550 0090 FFF7FEFF 		bl	UaPutS	@
 551              	@ main.c:276: 		s16 v[8]={365,356,0, 30,0,0,0,0};
 552 0094 94E80F00 		ldm	r4, {r0, r1, r2, r3}	@ tmp167,,,,
 553              	@ main.c:277: 		s16 c[8]={2000 ,6400 ,0, 30,0,0,0,0};
 554 0098 04F11005 		add	r5, r4, #16	@ tmp172, tmp167,
 555 009c 0DF1200C 		add	ip, sp, #32	@ tmp171,,
 556              	@ main.c:279: 		s16 a[8]={342,336,0,2,0,0,0,0};
 557 00a0 04F12006 		add	r6, r4, #32	@ tmp175, tmp167,
 558              	@ main.c:276: 		s16 v[8]={365,356,0, 30,0,0,0,0};
 559 00a4 04AF     		add	r7, sp, #16	@ tmp168,,
 560 00a6 87E80F00 		stm	r7, {r0, r1, r2, r3}	@ tmp168,,,,
 561              	@ main.c:277: 		s16 c[8]={2000 ,6400 ,0, 30,0,0,0,0};
 562 00aa 95E80F00 		ldm	r5, {r0, r1, r2, r3}	@ tmp172,,,,
 563              	@ main.c:280: 		s16 b[8]={114,263,0,2,0,0,0,0};
 564 00ae 3034     		adds	r4, r4, #48	@ tmp178, tmp167,
 565              	@ main.c:279: 		s16 a[8]={342,336,0,2,0,0,0,0};
 566 00b0 0CAD     		add	r5, sp, #48	@ tmp174,,
 567              	@ main.c:277: 		s16 c[8]={2000 ,6400 ,0, 30,0,0,0,0};
 568 00b2 8CE80F00 		stm	ip, {r0, r1, r2, r3}	@ tmp171,,,,
 569              	@ main.c:279: 		s16 a[8]={342,336,0,2,0,0,0,0};
 570 00b6 96E80F00 		ldm	r6, {r0, r1, r2, r3}	@ tmp175,,,,
ARM GAS  /tmp/cczkEFU1.s 			page 11


 571              	@ main.c:280: 		s16 b[8]={114,263,0,2,0,0,0,0};
 572 00ba 10AE     		add	r6, sp, #64	@ tmp177,,
 573              	@ main.c:279: 		s16 a[8]={342,336,0,2,0,0,0,0};
 574 00bc 85E80F00 		stm	r5, {r0, r1, r2, r3}	@ tmp174,,,,
 575              	@ main.c:280: 		s16 b[8]={114,263,0,2,0,0,0,0};
 576 00c0 94E80F00 		ldm	r4, {r0, r1, r2, r3}	@ tmp178,,,,
 577 00c4 86E80F00 		stm	r6, {r0, r1, r2, r3}	@ tmp177,,,,
 578              	@ main.c:282: 		liontrend(v,c);
 579 00c8 6146     		mov	r1, ip	@, tmp171
 580 00ca 3846     		mov	r0, r7	@, tmp168
 581 00cc FFF7FEFF 		bl	liontrend	@
 582              	@ main.c:283: 		liontrend(a,b);
 583 00d0 3146     		mov	r1, r6	@, tmp177
 584 00d2 2846     		mov	r0, r5	@, tmp174
 585 00d4 FFF7FEFF 		bl	liontrend	@
 586              	.L46:
 587 00d8 FEE7     		b	.L46	@
 588              	.L49:
 589 00da 00BF     		.align	2
 590              	.L48:
 591 00dc 00100240 		.word	1073876992
 592 00e0 00080140 		.word	1073809408
 593 00e4 00380140 		.word	1073821696
 594 00e8 00E100E0 		.word	-536813312
 595 00ec B4812142 		.word	1109492148
 596 00f0 B8812142 		.word	1109492152
 597 00f4 00000000 		.word	PutChar
 598 00f8 00000000 		.word	UART1_putc
 599 00fc 00000000 		.word	.LC15
 600 0100 00A24A04 		.word	72000000
 601 0104 00000000 		.word	.LANCHOR1
 602 0108 0C000000 		.word	.LC16
 603 010c B0812142 		.word	1109492144
 604              		.size	oblicz, .-oblicz
 605              		.section	.text.lion_updown,"ax",%progbits
 606              		.align	1
 607              		.p2align 2,,3
 608              		.global	lion_updown
 609              		.syntax unified
 610              		.thumb
 611              		.thumb_func
 612              		.fpu softvfp
 613              		.type	lion_updown, %function
 614              	lion_updown:
 615              		@ args = 0, pretend = 0, frame = 104
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 618 0004 9BB0     		sub	sp, sp, #108	@,,
 619              	@ main.c:297: 		BkpRegInit();
 620 0006 FFF7FEFF 		bl	BkpRegInit	@
 621              	@ main.c:5422: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 622 000a 42F22C02 		movw	r2, #8236	@ tmp350,
 623              	@ main.c:5423: 	USART1->BRR = (F_CPU+UART1_SPEED/2)/UART1_SPEED;
 624 000e 40F27126 		movw	r6, #625	@ tmp356,
 625              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 626 0012 2025     		movs	r5, #32	@ tmp358,
 627 0014 4FF0400C 		mov	ip, #64	@ tmp376,
ARM GAS  /tmp/cczkEFU1.s 			page 12


 628              	@ main.c:5430: 	USART2->BRR = ((F_CPU+UART2_SPEED/2)/UART2_SPEED)/2;
 629 0018 4FF49C77 		mov	r7, #312	@ tmp374,
 630              	@ main.c:5420: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 631 001c B74B     		ldr	r3, .L110	@ tmp341,
 632              	@ main.c:5421: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 633 001e DFF85CE3 		ldr	lr, .L110+128	@ tmp343,
 634              	@ main.c:5420: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 635 0022 9969     		ldr	r1, [r3, #24]	@ _443, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 636              	@ main.c:5422: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 637 0024 B64C     		ldr	r4, .L110+4	@ tmp346,
 638              	@ main.c:5420: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 639 0026 41F48041 		orr	r1, r1, #16384	@ _444, _443,
 640 002a 9961     		str	r1, [r3, #24]	@ _444, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 641              	@ main.c:5421: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 642 002c DEF80410 		ldr	r1, [lr, #4]	@ _445, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 643              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 644 0030 B448     		ldr	r0, .L110+8	@ tmp357,
 645              	@ main.c:5421: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 646 0032 21F47F61 		bic	r1, r1, #4080	@ tmp344, _445,
 647 0036 41F49261 		orr	r1, r1, #1168	@ _447, tmp344,
 648 003a CEF80410 		str	r1, [lr, #4]	@ _447, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 649              	@ main.c:5422: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 650 003e A189     		ldrh	r1, [r4, #12]	@, MEM[(struct USART_TypeDef *)1073821696B].CR1
 651              	@ main.c:5429: 	USART2->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 652 0040 DFF83C83 		ldr	r8, .L110+132	@ tmp364,
 653              	@ main.c:5422: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 654 0044 1143     		orrs	r1, r1, r2	@, _449, MEM[(struct USART_TypeDef *)1073821696B].CR1, tmp350
 655 0046 A181     		strh	r1, [r4, #12]	@ movhi	@ _449, MEM[(struct USART_TypeDef *)1073821696B].CR1
 656              	@ main.c:5423: 	USART1->BRR = (F_CPU+UART1_SPEED/2)/UART1_SPEED;
 657 0048 2681     		strh	r6, [r4, #8]	@ movhi	@ tmp356, MEM[(struct USART_TypeDef *)1073821696B].BRR
 658              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 659 004a 4560     		str	r5, [r0, #4]	@ tmp358, MEM[(struct NVIC_Type *)3758153984B].ISER
 660              	@ main.c:5427: 	RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 661 004c D969     		ldr	r1, [r3, #28]	@ _436, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 662              	@ main.c:5435: 	GPIOB->CRH  = (GPIOB->CRH & 0xffff00ff)| 0x00004900; //PB10=TX, PB11=RX zerowanie
 663 004e AE4E     		ldr	r6, .L110+12	@ tmp379,
 664              	@ main.c:5427: 	RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 665 0050 41F40031 		orr	r1, r1, #131072	@ _437, _436,
 666 0054 D961     		str	r1, [r3, #28]	@ _437, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 667              	@ main.c:5428: 	GPIOA->CRL = (GPIOA->CRL & 0xffff00ff) | 0x00004900; // PA2=TX, PA3=RX 
 668 0056 DEF80010 		ldr	r1, [lr]	@ _438, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 669              	@ main.c:5436: 	USART3->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 670 005a AC4D     		ldr	r5, .L110+16	@ tmp382,
 671              	@ main.c:5428: 	GPIOA->CRL = (GPIOA->CRL & 0xffff00ff) | 0x00004900; // PA2=TX, PA3=RX 
 672 005c 21F47F41 		bic	r1, r1, #65280	@ tmp362, _438,
 673 0060 41F49241 		orr	r1, r1, #18688	@ _440, tmp362,
 674 0064 CEF80010 		str	r1, [lr]	@ _440, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 675              	@ main.c:5429: 	USART2->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 676 0068 B8F80C10 		ldrh	r1, [r8, #12]	@, MEM[(struct USART_TypeDef *)1073759232B].CR1
 677 006c DFF81493 		ldr	r9, .L110+136	@ tmp933,
 678 0070 1143     		orrs	r1, r1, r2	@, _442, MEM[(struct USART_TypeDef *)1073759232B].CR1, tmp350
 679 0072 A8F80C10 		strh	r1, [r8, #12]	@ movhi	@ _442, MEM[(struct USART_TypeDef *)1073759232B].CR1
 680              	@ main.c:5430: 	USART2->BRR = ((F_CPU+UART2_SPEED/2)/UART2_SPEED)/2;
 681 0076 A8F80870 		strh	r7, [r8, #8]	@ movhi	@ tmp374, MEM[(struct USART_TypeDef *)1073759232B].BRR
 682              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 683 007a C0F804C0 		str	ip, [r0, #4]	@ tmp376, MEM[(struct NVIC_Type *)3758153984B].ISER
 684              	@ main.c:5434: 	RCC->APB1ENR |= RCC_APB1ENR_USART3EN;
ARM GAS  /tmp/cczkEFU1.s 			page 13


 685 007e D969     		ldr	r1, [r3, #28]	@ _429, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 686              	@ main.c:306: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 687 0080 0320     		movs	r0, #3	@,
 688              	@ main.c:5434: 	RCC->APB1ENR |= RCC_APB1ENR_USART3EN;
 689 0082 41F48021 		orr	r1, r1, #262144	@ _430, _429,
 690 0086 D961     		str	r1, [r3, #28]	@ _430, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 691              	@ main.c:5435: 	GPIOB->CRH  = (GPIOB->CRH & 0xffff00ff)| 0x00004900; //PB10=TX, PB11=RX zerowanie
 692 0088 7368     		ldr	r3, [r6, #4]	@ _431, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 693              	@ main.c:377: 		cwh = (BKP->DR4<<16) + BKP->DR3;
 694 008a DFF8FC82 		ldr	r8, .L110+140	@ tmp920,
 695              	@ main.c:5435: 	GPIOB->CRH  = (GPIOB->CRH & 0xffff00ff)| 0x00004900; //PB10=TX, PB11=RX zerowanie
 696 008e 23F47F43 		bic	r3, r3, #65280	@ tmp380, _431,
 697 0092 43F49243 		orr	r3, r3, #18688	@ _433, tmp380,
 698 0096 7360     		str	r3, [r6, #4]	@ _433, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 699              	@ main.c:5436: 	USART3->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 700 0098 AB89     		ldrh	r3, [r5, #12]	@, MEM[(struct USART_TypeDef *)1073760256B].CR1
 701 009a DFF8F0A2 		ldr	r10, .L110+144	@ tmp940,
 702 009e 1A43     		orrs	r2, r2, r3	@, _435, tmp350, MEM[(struct USART_TypeDef *)1073760256B].CR1
 703 00a0 AA81     		strh	r2, [r5, #12]	@ movhi	@ _435, MEM[(struct USART_TypeDef *)1073760256B].CR1
 704              	@ main.c:306: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 705 00a2 9B4B     		ldr	r3, .L110+20	@ tmp971,
 706 00a4 9B4A     		ldr	r2, .L110+24	@ tmp972,
 707              	@ main.c:5437: 	USART3->BRR = ((F_CPU+UART3_SPEED/2)/UART3_SPEED)/2;
 708 00a6 2F81     		strh	r7, [r5, #8]	@ movhi	@ tmp374, MEM[(struct USART_TypeDef *)1073760256B].BRR
 709              	@ main.c:306: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 710 00a8 1A60     		str	r2, [r3]	@ tmp972, PutChar
 711 00aa FFF7FEFF 		bl	tr_pen_color	@
 712              	@ main.c:307: 		UaPutS("\f UART1 "); UaPutS (uint2str( (F_CPU/1)/(1*USART1->BRR-1),buf));	
 713 00ae 9A48     		ldr	r0, .L110+28	@,
 714 00b0 FFF7FEFF 		bl	UaPutS	@
 715 00b4 2389     		ldrh	r3, [r4, #8]	@, MEM[(struct USART_TypeDef *)1073821696B].BRR
 716 00b6 9948     		ldr	r0, .L110+32	@ tmp403,
 717 00b8 013B     		subs	r3, r3, #1	@ tmp400, MEM[(struct USART_TypeDef *)1073821696B].BRR,
 718 00ba B0FBF3F0 		udiv	r0, r0, r3	@, tmp403, tmp400
 719 00be 08A9     		add	r1, sp, #32	@,,
 720              	@ main.c:332: 		const u08 i2cnf[3]={0,0x1e,0x67},i2trig_bus[3]={0,0x1e,0x67};
 721 00c0 974F     		ldr	r7, .L110+36	@ tmp405,
 722              	@ main.c:307: 		UaPutS("\f UART1 "); UaPutS (uint2str( (F_CPU/1)/(1*USART1->BRR-1),buf));	
 723 00c2 FFF7FEFF 		bl	uint2str	@
 724 00c6 FFF7FEFF 		bl	UaPutS	@
 725              	@ main.c:351: 		char tstat[6][8]={" Laduj"," Rozlad"," Czekaj"," Pomiar"," LadKon"," RozKon"};
 726 00ca 07F14405 		add	r5, r7, #68	@ tmp421, tmp405,
 727              	@ main.c:308: 		UaPutS (" b/s \r\n"); 
 728 00ce 9548     		ldr	r0, .L110+40	@,
 729              	@ main.c:351: 		char tstat[6][8]={" Laduj"," Rozlad"," Czekaj"," Pomiar"," LadKon"," RozKon"};
 730 00d0 0EAC     		add	r4, sp, #56	@ tmp973,,
 731              	@ main.c:308: 		UaPutS (" b/s \r\n"); 
 732 00d2 FFF7FEFF 		bl	UaPutS	@
 733              	@ main.c:351: 		char tstat[6][8]={" Laduj"," Rozlad"," Czekaj"," Pomiar"," LadKon"," RozKon"};
 734 00d6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}	@ tmp421,,,,
 735 00d8 0FC4     		stmia	r4!, {r0, r1, r2, r3}	@ tmp420,,,,
 736 00da 0FCD     		ldmia	r5!, {r0, r1, r2, r3}	@ tmp421,,,,
 737 00dc 0FC4     		stmia	r4!, {r0, r1, r2, r3}	@ tmp420,,,,
 738 00de 95E80F00 		ldm	r5, {r0, r1, r2, r3}	@ tmp421,,,,
 739              	@ main.c:332: 		const u08 i2cnf[3]={0,0x1e,0x67},i2trig_bus[3]={0,0x1e,0x67};
 740 00e2 3D6C     		ldr	r5, [r7, #64]	@ tmp408,
 741              	@ main.c:351: 		char tstat[6][8]={" Laduj"," Rozlad"," Czekaj"," Pomiar"," LadKon"," RozKon"};
ARM GAS  /tmp/cczkEFU1.s 			page 14


 742 00e4 84E80F00 		stm	r4, {r0, r1, r2, r3}	@ tmp420,,,,
 743              	@ main.c:332: 		const u08 i2cnf[3]={0,0x1e,0x67},i2trig_bus[3]={0,0x1e,0x67};
 744 00e8 2B0C     		lsrs	r3, r5, #16	@ tmp410, tmp408,
 745 00ea 8DF81630 		strb	r3, [sp, #22]	@ tmp410, i2cnf
 746 00ee 8DF81A30 		strb	r3, [sp, #26]	@ tmp410, i2trig_bus
 747 00f2 ADF81450 		strh	r5, [sp, #20]	@ movhi	@ tmp408, i2cnf
 748 00f6 ADF81850 		strh	r5, [sp, #24]	@ movhi	@ tmp408, i2trig_bus
 749              	@ main.c:353: 		i2c1r_init();
 750 00fa FFF7FEFF 		bl	i2c1r_init	@
 751              	@ main.c:358: 		i2c1_write(INA219_ADDR,(u08 *)i2cnf,3);
 752 00fe 05A9     		add	r1, sp, #20	@ tmp974,,
 753 0100 0322     		movs	r2, #3	@,
 754 0102 8020     		movs	r0, #128	@,
 755 0104 FFF7FEFF 		bl	i2c1_write	@
 756              	@ main.c:360: 		i2weg[0]=5;    // Calibration Register 0x1e63 continus
 757 0108 40F60574 		movw	r4, #3845	@ tmp424,
 758              	@ main.c:361: 		i2weg[1]=0x0f; // MSB Data
 759 010c DB23     		movs	r3, #219	@ tmp425,
 760              	@ main.c:363: 		i2c1_write(INA219_ADDR,i2weg,3);
 761 010e 0322     		movs	r2, #3	@,
 762 0110 04A9     		add	r1, sp, #16	@,,
 763 0112 8020     		movs	r0, #128	@,
 764              	@ main.c:360: 		i2weg[0]=5;    // Calibration Register 0x1e63 continus
 765 0114 ADF81040 		strh	r4, [sp, #16]	@ movhi	@ tmp424, MEM[(u08[3] *)&i2weg]
 766              	@ main.c:361: 		i2weg[1]=0x0f; // MSB Data
 767 0118 8DF81230 		strb	r3, [sp, #18]	@ tmp425, MEM[(u08[3] *)&i2weg + 2B]
 768              	@ main.c:363: 		i2c1_write(INA219_ADDR,i2weg,3);
 769 011c FFF7FEFF 		bl	i2c1_write	@
 770              	@ main.c:365: 		i2c1_read (INA219_ADDR,0,i2reg,2);
 771 0120 03AA     		add	r2, sp, #12	@ tmp975,,
 772 0122 0223     		movs	r3, #2	@,
 773 0124 0021     		movs	r1, #0	@,
 774 0126 8020     		movs	r0, #128	@,
 775 0128 FFF7FEFF 		bl	i2c1_read	@
 776              	@ main.c:379: 		LAD = 0; ROZ = 0;	BEP = 1; 
 777 012c 0022     		movs	r2, #0	@ tmp453,
 778 012e 4FF0010E 		mov	lr, #1	@ tmp457,
 779              	@ main.c:381: 		stat = czk;
 780 0132 0225     		movs	r5, #2	@ stat,
 781              	@ main.c:370: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 782 0134 7768     		ldr	r7, [r6, #4]	@ _7, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 783              	@ main.c:376: 		cah = (BKP->DR2<<16) + BKP->DR1;
 784 0136 7C49     		ldr	r1, .L110+44	@ tmp434,
 785              	@ main.c:370: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 786 0138 27F07F67 		bic	r7, r7, #267386880	@ tmp430, _7,
 787 013c 27F47027 		bic	r7, r7, #983040	@ tmp430, tmp430,
 788 0140 47F0AA67 		orr	r7, r7, #89128960	@ _9, tmp430,
 789 0144 47F4A027 		orr	r7, r7, #327680	@ _9, _9,
 790              	@ main.c:380: 		beep=0; 
 791 0148 0192     		str	r2, [sp, #4]	@ tmp453, %sfp
 792              	@ main.c:370: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 793 014a 7760     		str	r7, [r6, #4]	@ _9, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 794              	@ main.c:376: 		cah = (BKP->DR2<<16) + BKP->DR1;
 795 014c 0F89     		ldrh	r7, [r1, #8]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR2
 796 014e 8E88     		ldrh	r6, [r1, #4]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR1
 797              	@ main.c:379: 		LAD = 0; ROZ = 0;	BEP = 1; 
 798 0150 7648     		ldr	r0, .L110+48	@ tmp454,
ARM GAS  /tmp/cczkEFU1.s 			page 15


 799              	@ main.c:376: 		cah = (BKP->DR2<<16) + BKP->DR1;
 800 0152 06EB0746 		add	r6, r6, r7, lsl #16	@ tmp442, MEM[(struct BKP_TypeDef *)1073769472B].DR1, MEM[(struct BKP_Type
 801 0156 764F     		ldr	r7, .L110+52	@ tmp976,
 802              	@ main.c:379: 		LAD = 0; ROZ = 0;	BEP = 1; 
 803 0158 DFF800C2 		ldr	ip, .L110+96	@ tmp452,
 804              	@ main.c:376: 		cah = (BKP->DR2<<16) + BKP->DR1;
 805 015c 3E60     		str	r6, [r7]	@ tmp442, cah
 806              	@ main.c:377: 		cwh = (BKP->DR4<<16) + BKP->DR3;
 807 015e 0F8A     		ldrh	r7, [r1, #16]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR4
 808 0160 8989     		ldrh	r1, [r1, #12]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR3
 809              	@ main.c:379: 		LAD = 0; ROZ = 0;	BEP = 1; 
 810 0162 744E     		ldr	r6, .L110+56	@ tmp456,
 811              	@ main.c:382: 		trg1  = SysTick->VAL;	
 812 0164 744B     		ldr	r3, .L110+60	@ tmp458,
 813              	@ main.c:377: 		cwh = (BKP->DR4<<16) + BKP->DR3;
 814 0166 01EB0741 		add	r1, r1, r7, lsl #16	@ tmp451, MEM[(struct BKP_TypeDef *)1073769472B].DR3, MEM[(struct BKP_Type
 815 016a C8F80010 		str	r1, [r8]	@ tmp451, cwh
 816              	@ main.c:379: 		LAD = 0; ROZ = 0;	BEP = 1; 
 817 016e CCF80020 		str	r2, [ip]	@ tmp453, MEM[(volatile long unsigned int *)1109492148B]
 818 0172 0260     		str	r2, [r0]	@ tmp453, MEM[(volatile long unsigned int *)1109492144B]
 819 0174 C6F800E0 		str	lr, [r6]	@ tmp457, MEM[(volatile long unsigned int *)1109492152B]
 820              	@ main.c:382: 		trg1  = SysTick->VAL;	
 821 0178 9A68     		ldr	r2, [r3, #8]	@ _24, MEM[(struct SysTick_Type *)3758153744B].VAL
 822 017a 7049     		ldr	r1, .L110+64	@ tmp977,
 823              	@ main.c:387: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 824 017c 1C46     		mov	r4, r3	@ tmp463, tmp458
 825              	@ main.c:382: 		trg1  = SysTick->VAL;	
 826 017e 0A60     		str	r2, [r1]	@ _24, trg1
 827              	@ main.c:383: 		trg0  = SysTick->VAL;
 828 0180 9B68     		ldr	r3, [r3, #8]	@ _25, MEM[(struct SysTick_Type *)3758153744B].VAL
 829 0182 6F4A     		ldr	r2, .L110+68	@ tmp978,
 830 0184 6F4E     		ldr	r6, .L110+72	@ tmp923,
 831 0186 1360     		str	r3, [r2]	@ _25, trg0
 832              	.L83:
 833              	@ main.c:387: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 834 0188 6D4B     		ldr	r3, .L110+68	@ tmp979,
 835 018a 1B68     		ldr	r3, [r3]	@ trg0.1_26, trg0
 836 018c A268     		ldr	r2, [r4, #8]	@ _27, MEM[(struct SysTick_Type *)3758153744B].VAL
 837 018e 9B1A     		subs	r3, r3, r2	@ tmp464, trg0.1_26, _27
 838 0190 6D4A     		ldr	r2, .L110+76	@ tmp980,
 839 0192 9342     		cmp	r3, r2	@ tmp464, tmp980
 840 0194 00F23C82 		bhi	.L104	@,
 841              	.L51:
 842              	@ main.c:477: 			if( (STCLK_MS*2000 < (trg1 - SysTick->VAL)) ){	
 843 0198 684B     		ldr	r3, .L110+64	@ tmp1031,
 844 019a 6C4A     		ldr	r2, .L110+80	@ tmp711,
 845 019c 1F46     		mov	r7, r3	@ tmp1031, tmp1031
 846 019e 1B68     		ldr	r3, [r3]	@ trg1.43_153, trg1
 847 01a0 A168     		ldr	r1, [r4, #8]	@ _154, MEM[(struct SysTick_Type *)3758153744B].VAL
 848 01a2 5B1A     		subs	r3, r3, r1	@ tmp710, trg1.43_153, _154
 849 01a4 9342     		cmp	r3, r2	@ tmp710, tmp711
 850 01a6 33D9     		bls	.L57	@,
 851              	@ main.c:480: 				if(abs(cur) < 1000 && vbus > 4200 && stat == lad){ // start rozladowanie
 852 01a8 694A     		ldr	r2, .L110+84	@ tmp1032,
 853 01aa 4FF0460B 		mov	fp, #70	@ tmp720,
 854 01ae 1388     		ldrh	r3, [r2]	@ cur.45_158, cur
 855 01b0 684A     		ldr	r2, .L110+88	@ tmp1105,
ARM GAS  /tmp/cczkEFU1.s 			page 16


 856 01b2 40F2CE7E 		movw	lr, #1998	@ tmp723,
 857 01b6 B2F900C0 		ldrsh	ip, [r2]	@ pretmp_489, vbus
 858 01ba 674A     		ldr	r2, .L110+92	@ tmp1033,
 859 01bc 03F2E731 		addw	r1, r3, #999	@ tmp721, cur.45_158,
 860 01c0 1088     		ldrh	r0, [r2]	@ vr1, vr1
 861 01c2 6FF4FA62 		mvn	r2, #2000	@,
 862 01c6 89B2     		uxth	r1, r1	@ tmp722, tmp721
 863 01c8 0BFB00F0 		mul	r0, fp, r0	@ _600, tmp720, vr1
 864              	@ main.c:478: 				trg1  = SysTick->VAL;	
 865 01cc D4F808B0 		ldr	fp, [r4, #8]	@ _156, MEM[(struct SysTick_Type *)3758153744B].VAL
 866 01d0 6244     		add	r2, ip, r2	@ tmp717, pretmp_489,
 867              	@ main.c:480: 				if(abs(cur) < 1000 && vbus > 4200 && stat == lad){ // start rozladowanie
 868 01d2 7145     		cmp	r1, lr	@ tmp722, tmp723
 869 01d4 92B2     		uxth	r2, r2	@ _562, tmp717
 870              	@ main.c:478: 				trg1  = SysTick->VAL;	
 871 01d6 C7F800B0 		str	fp, [r7]	@ _156, trg1
 872              	@ main.c:480: 				if(abs(cur) < 1000 && vbus > 4200 && stat == lad){ // start rozladowanie
 873 01da 00F2B681 		bhi	.L58	@,
 874              	@ main.c:480: 				if(abs(cur) < 1000 && vbus > 4200 && stat == lad){ // start rozladowanie
 875 01de 41F26801 		movw	r1, #4200	@ tmp724,
 876 01e2 8C45     		cmp	ip, r1	@ pretmp_489, tmp724
 877 01e4 40F3B181 		ble	.L58	@,
 878              	@ main.c:480: 				if(abs(cur) < 1000 && vbus > 4200 && stat == lad){ // start rozladowanie
 879 01e8 002D     		cmp	r5, #0	@ stat
 880 01ea 40F0AE81 		bne	.L58	@
 881              	@ main.c:482: 					ROZ = 1;
 882 01ee 0123     		movs	r3, #1	@ tmp728,
 883              	@ main.c:489: 				if(vbus < 2600 && vbus > 2000 && stat==roz) { // koniec rozladowania
 884 01f0 40F25621 		movw	r1, #598	@ tmp736,
 885              	@ main.c:481: 					LAD = 0;
 886 01f4 5948     		ldr	r0, .L110+96	@ tmp725,
 887              	@ main.c:489: 				if(vbus < 2600 && vbus > 2000 && stat==roz) { // koniec rozladowania
 888 01f6 8A42     		cmp	r2, r1	@ _562, tmp736
 889              	@ main.c:481: 					LAD = 0;
 890 01f8 0560     		str	r5, [r0]	@ stat, MEM[(volatile long unsigned int *)1109492148B]
 891              	@ main.c:482: 					ROZ = 1;
 892 01fa 40F8043C 		str	r3, [r0, #-4]	@ tmp728, MEM[(volatile long unsigned int *)1109492144B]
 893              	@ main.c:483: 					cah = 0;
 894 01fe 4C48     		ldr	r0, .L110+52	@ tmp1036,
 895              	@ main.c:484: 					cwh = 0;
 896 0200 C8F80050 		str	r5, [r8]	@ stat, cwh
 897              	@ main.c:483: 					cah = 0;
 898 0204 0560     		str	r5, [r0]	@ stat, cah
 899              	@ main.c:486: 					rw = 0;
 900 0206 5648     		ldr	r0, .L110+100	@ tmp1037,
 901 0208 0580     		strh	r5, [r0]	@ movhi	@ stat, rw
 902              	@ main.c:489: 				if(vbus < 2600 && vbus > 2000 && stat==roz) { // koniec rozladowania
 903 020a 40F25183 		bls	.L61	@,
 904              	@ main.c:485: 					stat = roz;
 905 020e 1D46     		mov	r5, r3	@ stat, tmp728
 906              	.L57:
 907              	@ main.c:520: 			if( (STCLK_MS*500   < (trg2 - SysTick->VAL))) {
 908 0210 5448     		ldr	r0, .L110+104	@ tmp1051,
 909 0212 554A     		ldr	r2, .L110+108	@ tmp784,
 910 0214 0368     		ldr	r3, [r0]	@ trg2.57_170, trg2
 911 0216 A168     		ldr	r1, [r4, #8]	@ _171, MEM[(struct SysTick_Type *)3758153744B].VAL
 912 0218 5B1A     		subs	r3, r3, r1	@ tmp783, trg2.57_170, _171
ARM GAS  /tmp/cczkEFU1.s 			page 17


 913 021a 9342     		cmp	r3, r2	@ tmp783, tmp784
 914 021c 05D9     		bls	.L66	@,
 915              	@ main.c:521: 				trg2  = SysTick->VAL;	
 916 021e A368     		ldr	r3, [r4, #8]	@ _173, MEM[(struct SysTick_Type *)3758153744B].VAL
 917 0220 0360     		str	r3, [r0]	@ _173, trg2
 918              	@ main.c:522: 				if(beep){	BEP ^= 1; }
 919 0222 019B     		ldr	r3, [sp, #4]	@ beep, %sfp
 920 0224 002B     		cmp	r3, #0	@ beep
 921 0226 40F0E982 		bne	.L84	@
 922              	.L66:
 923              	@ main.c:525: 			if( (STCLK_MS*100   < (trg3 - SysTick->VAL))) {
 924 022a 5048     		ldr	r0, .L110+112	@ tmp1056,
 925 022c 504A     		ldr	r2, .L110+116	@ tmp792,
 926 022e 0368     		ldr	r3, [r0]	@ trg3.58_176, trg3
 927 0230 A168     		ldr	r1, [r4, #8]	@ _177, MEM[(struct SysTick_Type *)3758153744B].VAL
 928 0232 5B1A     		subs	r3, r3, r1	@ tmp791, trg3.58_176, _177
 929 0234 9342     		cmp	r3, r2	@ tmp791, tmp792
 930 0236 06D9     		bls	.L69	@,
 931              	@ main.c:526: 				trg3  = SysTick->VAL;	
 932 0238 A368     		ldr	r3, [r4, #8]	@ _179, MEM[(struct SysTick_Type *)3758153744B].VAL
 933              	@ main.c:527: 				LED ^= 1;	
 934 023a 4E4A     		ldr	r2, .L110+120	@ tmp795,
 935              	@ main.c:526: 				trg3  = SysTick->VAL;	
 936 023c 0360     		str	r3, [r0]	@ _179, trg3
 937              	@ main.c:527: 				LED ^= 1;	
 938 023e 1368     		ldr	r3, [r2]	@ _180, MEM[(volatile long unsigned int *)1109524916B]
 939 0240 83F00103 		eor	r3, r3, #1	@ _181, _180,
 940 0244 1360     		str	r3, [r2]	@ _181, MEM[(volatile long unsigned int *)1109524916B]
 941              	.L69:
 942              	@ main.c:530: 			if(p_Fifo1->rct){
 943 0246 DAF80030 		ldr	r3, [r10]	@ p_Fifo1.59_182, p_Fifo1
 944 024a 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.59_182->rct
 945 024c 9BB2     		uxth	r3, r3	@ _183, p_Fifo1.59_182->rct
 946 024e 002B     		cmp	r3, #0	@ _183
 947 0250 9AD0     		beq	.L83	@
 948              	@ main.c:531: 				UART_getChar( (char*)&swh);
 949 0252 0DF10B00 		add	r0, sp, #11	@ tmp1058,,
 950 0256 FFF7FEFF 		bl	UART_getChar	@
 951              	@ main.c:534: 				switch (swh)	{
 952 025a 9DF80B30 		ldrb	r3, [sp, #11]	@ zero_extendqisi2	@ swh, swh
 953 025e 613B     		subs	r3, r3, #97	@ tmp802, swh,
 954 0260 192B     		cmp	r3, #25	@ tmp802,
 955 0262 91D8     		bhi	.L83	@
 956 0264 01A2     		adr	r2, .L72	@ tmp969,
 957 0266 52F823F0 		ldr	pc, [r2, r3, lsl #2]	@ tmp969, tmp802
 958 026a 00BF     		.p2align 2
 959              	.L72:
 960 026c 31050000 		.word	.L71+1
 961 0270 25050000 		.word	.L73+1
 962 0274 89010000 		.word	.L83+1
 963 0278 0D050000 		.word	.L74+1
 964 027c 89010000 		.word	.L83+1
 965 0280 89010000 		.word	.L83+1
 966 0284 89010000 		.word	.L83+1
 967 0288 89010000 		.word	.L83+1
 968 028c 89010000 		.word	.L83+1
 969 0290 89010000 		.word	.L83+1
ARM GAS  /tmp/cczkEFU1.s 			page 18


 970 0294 7F040000 		.word	.L75+1
 971 0298 89010000 		.word	.L83+1
 972 029c 41040000 		.word	.L76+1
 973 02a0 89010000 		.word	.L83+1
 974 02a4 89010000 		.word	.L83+1
 975 02a8 89010000 		.word	.L83+1
 976 02ac 29040000 		.word	.L77+1
 977 02b0 89010000 		.word	.L83+1
 978 02b4 89010000 		.word	.L83+1
 979 02b8 91030000 		.word	.L78+1
 980 02bc 89010000 		.word	.L83+1
 981 02c0 E9020000 		.word	.L79+1
 982 02c4 89010000 		.word	.L83+1
 983 02c8 89010000 		.word	.L83+1
 984 02cc 89010000 		.word	.L83+1
 985 02d0 D5020000 		.word	.L80+1
 986              		.p2align 1
 987              	.L80:
 988              	@ main.c:598: 						cah = 0;
 989 02d4 0023     		movs	r3, #0	@ tmp871,
 990 02d6 164A     		ldr	r2, .L110+52	@ tmp1074,
 991              	@ main.c:599: 						cwh = 0;
 992 02d8 C8F80030 		str	r3, [r8]	@ tmp871, cwh
 993              	@ main.c:598: 						cah = 0;
 994 02dc 1360     		str	r3, [r2]	@ tmp871, cah
 995              	@ main.c:601: 						Rwa[0] = 0;
 996 02de 264A     		ldr	r2, .L110+124	@ tmp1075,
 997              	@ main.c:600: 						cnt = 0;
 998 02e0 3380     		strh	r3, [r6]	@ movhi	@ tmp871, cnt
 999              	@ main.c:602: 						Rwa[1] = 0;
 1000 02e2 C2E90033 		strd	r3, r3, [r2]	@ tmp871, tmp871, tmp1075
 1001              	@ main.c:607: 					break;
 1002 02e6 4FE7     		b	.L83	@
 1003              	.L79:
 1004              	@ main.c:639: 						ROZ = 0;
 1005 02e8 0023     		movs	r3, #0	@ tmp913,
 1006              	@ main.c:638: 						LAD = 1;
 1007 02ea 0121     		movs	r1, #1	@ tmp911,
 1008 02ec 1B4A     		ldr	r2, .L110+96	@ tmp910,
 1009              	@ main.c:640: 						stat = pom;
 1010 02ee 0325     		movs	r5, #3	@ stat,
 1011              	@ main.c:638: 						LAD = 1;
 1012 02f0 1160     		str	r1, [r2]	@ tmp911, MEM[(volatile long unsigned int *)1109492148B]
 1013              	@ main.c:639: 						ROZ = 0;
 1014 02f2 42F8043C 		str	r3, [r2, #-4]	@ tmp913, MEM[(volatile long unsigned int *)1109492144B]
 1015              	@ main.c:641: 						rw = 0;
 1016 02f6 1A4A     		ldr	r2, .L110+100	@ tmp1086,
 1017 02f8 1380     		strh	r3, [r2]	@ movhi	@ tmp913, rw
 1018              	@ main.c:386: 		while(1){
 1019 02fa 45E7     		b	.L83	@
 1020              	.L111:
 1021              		.align	2
 1022              	.L110:
 1023 02fc 00100240 		.word	1073876992
 1024 0300 00380140 		.word	1073821696
 1025 0304 00E100E0 		.word	-536813312
 1026 0308 000C0140 		.word	1073810432
ARM GAS  /tmp/cczkEFU1.s 			page 19


 1027 030c 00480040 		.word	1073760256
 1028 0310 00000000 		.word	PutChar
 1029 0314 00000000 		.word	UART1_putc
 1030 0318 00000000 		.word	.LC15
 1031 031c 00A24A04 		.word	72000000
 1032 0320 00000000 		.word	.LANCHOR1
 1033 0324 0C000000 		.word	.LC16
 1034 0328 006C0040 		.word	1073769472
 1035 032c B0812142 		.word	1109492144
 1036 0330 00000000 		.word	.LANCHOR2
 1037 0334 B8812142 		.word	1109492152
 1038 0338 10E000E0 		.word	-536813552
 1039 033c 00000000 		.word	trg1
 1040 0340 00000000 		.word	trg0
 1041 0344 00000000 		.word	.LANCHOR6
 1042 0348 40548900 		.word	9000000
 1043 034c 80A81201 		.word	18000000
 1044 0350 00000000 		.word	.LANCHOR8
 1045 0354 00000000 		.word	.LANCHOR4
 1046 0358 00000000 		.word	.LANCHOR15
 1047 035c B4812142 		.word	1109492148
 1048 0360 00000000 		.word	.LANCHOR9
 1049 0364 00000000 		.word	trg2
 1050 0368 20AA4400 		.word	4500000
 1051 036c 00000000 		.word	trg3
 1052 0370 A0BB0D00 		.word	900000
 1053 0374 B4012242 		.word	1109524916
 1054 0378 00000000 		.word	.LANCHOR10
 1055 037c 00080140 		.word	1073809408
 1056 0380 00440040 		.word	1073759232
 1057 0384 00000000 		.word	.LANCHOR12
 1058 0388 00000000 		.word	.LANCHOR3
 1059 038c 00000000 		.word	p_Fifo1
 1060              	.L78:
 1061              	@ main.c:536: 						UaPutS(TRCLS);
 1062 0390 8848     		ldr	r0, .L112	@,
 1063 0392 FFF7FEFF 		bl	UaPutS	@
 1064              	@ main.c:538: 						tr_locate(4,1);
 1065 0396 0121     		movs	r1, #1	@,
 1066 0398 0420     		movs	r0, #4	@,
 1067 039a FFF7FEFF 		bl	tr_locate	@
 1068              	@ main.c:539:   					UaPutS("0        1         2         3         4         5");
 1069 039e 8648     		ldr	r0, .L112+4	@,
 1070 03a0 FFF7FEFF 		bl	UaPutS	@
 1071              	@ main.c:540: 						tr_locate(5,1);
 1072 03a4 0121     		movs	r1, #1	@,
 1073 03a6 0520     		movs	r0, #5	@,
 1074 03a8 FFF7FEFF 		bl	tr_locate	@
 1075              	@ main.c:541:   					UaPutS("123456789 123456789 123456789 123456789 123456789 1234567890");
 1076 03ac 8348     		ldr	r0, .L112+8	@,
 1077 03ae FFF7FEFF 		bl	UaPutS	@
 1078              	@ main.c:542: 						tr_locate(10,20);
 1079 03b2 1421     		movs	r1, #20	@,
 1080 03b4 0A20     		movs	r0, #10	@,
 1081 03b6 FFF7FEFF 		bl	tr_locate	@
 1082              	@ main.c:543: 						UaPutS("Podaj wrtosc= ");
 1083 03ba 8148     		ldr	r0, .L112+12	@,
ARM GAS  /tmp/cczkEFU1.s 			page 20


 1084 03bc FFF7FEFF 		bl	UaPutS	@
 1085              	@ main.c:544: 						tr_locate(10,37);
 1086 03c0 2521     		movs	r1, #37	@,
 1087 03c2 0A20     		movs	r0, #10	@,
 1088 03c4 FFF7FEFF 		bl	tr_locate	@
 1089              	@ main.c:545: 						UaPutS(TRCLS);
 1090 03c8 7A48     		ldr	r0, .L112	@,
 1091 03ca FFF7FEFF 		bl	UaPutS	@
 1092              	@ main.c:546: 						vr4 = UART_getDec((s32*)&vr3) ;
 1093 03ce 7D48     		ldr	r0, .L112+16	@,
 1094 03d0 FFF7FEFF 		bl	UART_getDec	@
 1095 03d4 7C4F     		ldr	r7, .L112+20	@ tmp1059,
 1096              	@ main.c:548: 						tr_locate(11,20);
 1097 03d6 1421     		movs	r1, #20	@,
 1098              	@ main.c:546: 						vr4 = UART_getDec((s32*)&vr3) ;
 1099 03d8 3860     		str	r0, [r7]	@, vr4
 1100              	@ main.c:548: 						tr_locate(11,20);
 1101 03da 0B20     		movs	r0, #11	@,
 1102 03dc FFF7FEFF 		bl	tr_locate	@
 1103              	@ main.c:549: 					  UaPutS(TRCLS"Wartosc ileZnak= ");  
 1104 03e0 7A48     		ldr	r0, .L112+24	@,
 1105 03e2 FFF7FEFF 		bl	UaPutS	@
 1106              	@ main.c:550:  						UaPutS("\033[11;36H");
 1107 03e6 7A48     		ldr	r0, .L112+28	@,
 1108 03e8 FFF7FEFF 		bl	UaPutS	@
 1109              	@ main.c:551:  						sint2uart (vr3);
 1110 03ec 754B     		ldr	r3, .L112+16	@ tmp1060,
 1111 03ee 1868     		ldr	r0, [r3]	@, vr3
 1112 03f0 FFF7FEFF 		bl	sint2uart	@
 1113              	@ main.c:552: 					  sint2uart (vr4-1); 
 1114 03f4 3868     		ldr	r0, [r7]	@ vr4, vr4
 1115 03f6 0138     		subs	r0, r0, #1	@, vr4,
 1116 03f8 FFF7FEFF 		bl	sint2uart	@
 1117              	@ main.c:553:  						tr_locate(12,20);
 1118 03fc 1421     		movs	r1, #20	@,
 1119 03fe 0C20     		movs	r0, #12	@,
 1120 0400 FFF7FEFF 		bl	tr_locate	@
 1121              	@ main.c:554: 						UaPutS("Zerowanie t/n=");
 1122 0404 7348     		ldr	r0, .L112+32	@,
 1123 0406 FFF7FEFF 		bl	UaPutS	@
 1124              	@ main.c:555:  						tr_locate(12,37);
 1125 040a 2521     		movs	r1, #37	@,
 1126 040c 0C20     		movs	r0, #12	@,
 1127 040e FFF7FEFF 		bl	tr_locate	@
 1128              	@ main.c:556: 						UaPutS(TRCLS);
 1129 0412 6848     		ldr	r0, .L112	@,
 1130 0414 FFF7FEFF 		bl	UaPutS	@
 1131              	@ main.c:557: 						UART_getStr(znaki);
 1132 0418 0BA8     		add	r0, sp, #44	@ tmp1062,,
 1133 041a FFF7FEFF 		bl	UART_getStr	@
 1134              	@ main.c:560:  						tr_locate(2,2); 						
 1135 041e 0221     		movs	r1, #2	@,
 1136 0420 0846     		mov	r0, r1	@,
 1137 0422 FFF7FEFF 		bl	tr_locate	@
 1138              	@ main.c:561: 					break;
 1139 0426 AFE6     		b	.L83	@
 1140              	.L77:
ARM GAS  /tmp/cczkEFU1.s 			page 21


 1141              	@ main.c:625: 						LAD = 0;
 1142 0428 0023     		movs	r3, #0	@ tmp900,
 1143              	@ main.c:627: 						BEP = 1;
 1144 042a 0121     		movs	r1, #1	@ tmp904,
 1145              	@ main.c:625: 						LAD = 0;
 1146 042c 6A48     		ldr	r0, .L112+36	@ tmp899,
 1147              	@ main.c:627: 						BEP = 1;
 1148 042e 6B4A     		ldr	r2, .L112+40	@ tmp903,
 1149              	@ main.c:625: 						LAD = 0;
 1150 0430 0360     		str	r3, [r0]	@ tmp900, MEM[(volatile long unsigned int *)1109492148B]
 1151              	@ main.c:626: 						ROZ = 0;
 1152 0432 40F8043C 		str	r3, [r0, #-4]	@ tmp900, MEM[(volatile long unsigned int *)1109492144B]
 1153              	@ main.c:627: 						BEP = 1;
 1154 0436 1160     		str	r1, [r2]	@ tmp904, MEM[(volatile long unsigned int *)1109492152B]
 1155              	@ main.c:629: 						rw = 0;
 1156 0438 694A     		ldr	r2, .L112+44	@ tmp1082,
 1157              	@ main.c:628: 						stat = czk;
 1158 043a 0225     		movs	r5, #2	@ stat,
 1159              	@ main.c:629: 						rw = 0;
 1160 043c 1380     		strh	r3, [r2]	@ movhi	@ tmp900, rw
 1161              	@ main.c:630: 					break;
 1162 043e A3E6     		b	.L83	@
 1163              	.L76:
 1164              	@ main.c:563: 						UaPutS(TRCLS);
 1165 0440 5C48     		ldr	r0, .L112	@,
 1166 0442 FFF7FEFF 		bl	UaPutS	@
 1167              	@ main.c:565: 						UaPutS(" Podaj wrtosc= ");
 1168 0446 6748     		ldr	r0, .L112+48	@,
 1169 0448 FFF7FEFF 		bl	UaPutS	@
 1170              	@ main.c:566: 						vr4 = UART_getDec((s32*)&vr3) ;
 1171 044c 5D48     		ldr	r0, .L112+16	@,
 1172 044e FFF7FEFF 		bl	UART_getDec	@
 1173 0452 5D4B     		ldr	r3, .L112+20	@ tmp1063,
 1174              	@ main.c:567: 					  tr_locate(3,2);
 1175 0454 0221     		movs	r1, #2	@,
 1176              	@ main.c:566: 						vr4 = UART_getDec((s32*)&vr3) ;
 1177 0456 1F46     		mov	r7, r3	@ tmp1063, tmp1063
 1178 0458 1860     		str	r0, [r3]	@, vr4
 1179              	@ main.c:567: 					  tr_locate(3,2);
 1180 045a 0320     		movs	r0, #3	@,
 1181 045c FFF7FEFF 		bl	tr_locate	@
 1182              	@ main.c:568: 					  UaPutS(TRCLS"ileZnak,Wartosc=");
 1183 0460 6148     		ldr	r0, .L112+52	@,
 1184 0462 FFF7FEFF 		bl	UaPutS	@
 1185              	@ main.c:569:  						sint2uart (vr4);
 1186 0466 3868     		ldr	r0, [r7]	@, vr4
 1187 0468 FFF7FEFF 		bl	sint2uart	@
 1188              	@ main.c:570:  						sint2uart (vr3);
 1189 046c 554B     		ldr	r3, .L112+16	@ tmp1065,
 1190 046e 1868     		ldr	r0, [r3]	@, vr3
 1191 0470 FFF7FEFF 		bl	sint2uart	@
 1192              	@ main.c:571: 						tr_locate(2,1);
 1193 0474 0121     		movs	r1, #1	@,
 1194 0476 0220     		movs	r0, #2	@,
 1195 0478 FFF7FEFF 		bl	tr_locate	@
 1196              	@ main.c:573: 					break;
 1197 047c 84E6     		b	.L83	@
ARM GAS  /tmp/cczkEFU1.s 			page 22


 1198              	.L75:
 1199              	@ main.c:575: 						UaPutS(TRCLS);
 1200 047e 4D48     		ldr	r0, .L112	@,
 1201 0480 FFF7FEFF 		bl	UaPutS	@
 1202              	@ main.c:578: 						BEP = 1;
 1203 0484 0122     		movs	r2, #1	@ tmp833,
 1204 0486 554B     		ldr	r3, .L112+40	@ tmp832,
 1205              	@ main.c:580: 						sint2uart(vr1);
 1206 0488 584D     		ldr	r5, .L112+56	@ tmp1066,
 1207              	@ main.c:578: 						BEP = 1;
 1208 048a 1A60     		str	r2, [r3]	@ tmp833, MEM[(volatile long unsigned int *)1109492152B]
 1209              	@ main.c:579: 						UaPutS(" Laduj do 70% x [mAh]=");
 1210 048c 5848     		ldr	r0, .L112+60	@,
 1211 048e FFF7FEFF 		bl	UaPutS	@
 1212              	@ main.c:580: 						sint2uart(vr1);
 1213 0492 2888     		ldrh	r0, [r5]	@, vr1
 1214 0494 FFF7FEFF 		bl	sint2uart	@
 1215              	@ main.c:581: 						UaPutS(" ");
 1216 0498 5648     		ldr	r0, .L112+64	@,
 1217 049a FFF7FEFF 		bl	UaPutS	@
 1218              	@ main.c:582: 						vr4 = UART_getDec(&vr3) ;
 1219 049e 4948     		ldr	r0, .L112+16	@,
 1220 04a0 FFF7FEFF 		bl	UART_getDec	@
 1221 04a4 484B     		ldr	r3, .L112+20	@ tmp1067,
 1222              	@ main.c:583: 						if(vr4>1) vr1 = vr3;
 1223 04a6 0128     		cmp	r0, #1	@ tmp839,
 1224              	@ main.c:582: 						vr4 = UART_getDec(&vr3) ;
 1225 04a8 1860     		str	r0, [r3]	@ tmp839, vr4
 1226              	@ main.c:583: 						if(vr4>1) vr1 = vr3;
 1227 04aa 02DD     		ble	.L81	@,
 1228              	@ main.c:583: 						if(vr4>1) vr1 = vr3;
 1229 04ac 454B     		ldr	r3, .L112+16	@ tmp1068,
 1230 04ae 1B68     		ldr	r3, [r3]	@ vr3, vr3
 1231 04b0 2B80     		strh	r3, [r5]	@ movhi	@ vr3, vr1
 1232              	.L81:
 1233              	@ main.c:584: 						UaPutS(TRCLS" Rozladuj [t/n]=");
 1234 04b2 5148     		ldr	r0, .L112+68	@,
 1235 04b4 FFF7FEFF 		bl	UaPutS	@
 1236              	@ main.c:585: 						UART_getStr(str) ;
 1237 04b8 07A8     		add	r0, sp, #28	@ tmp1070,,
 1238 04ba FFF7FEFF 		bl	UART_getStr	@
 1239              	@ main.c:586: 						sint2uart (vr2);
 1240 04be 0020     		movs	r0, #0	@,
 1241 04c0 FFF7FEFF 		bl	sint2uart	@
 1242              	@ main.c:588: 					  tr_locate(3,1);
 1243 04c4 0121     		movs	r1, #1	@,
 1244 04c6 0320     		movs	r0, #3	@,
 1245 04c8 FFF7FEFF 		bl	tr_locate	@
 1246              	@ main.c:589: 					  UaPutS(TRCLS"Laduj do [mAh]=");
 1247 04cc 4B48     		ldr	r0, .L112+72	@,
 1248 04ce FFF7FEFF 		bl	UaPutS	@
 1249              	@ main.c:590:  						sint2uart (vr1*7/10);
 1250 04d2 464B     		ldr	r3, .L112+56	@ tmp1071,
 1251 04d4 1888     		ldrh	r0, [r3]	@ vr1, vr1
 1252 04d6 4A4B     		ldr	r3, .L112+76	@ tmp855,
 1253 04d8 C0EBC000 		rsb	r0, r0, r0, lsl #3	@ tmp852, vr1, vr1,
 1254 04dc A3FB0030 		umull	r3, r0, r3, r0	@ tmp970, tmp854, tmp855, tmp852
ARM GAS  /tmp/cczkEFU1.s 			page 23


 1255 04e0 C008     		lsrs	r0, r0, #3	@, tmp854,
 1256 04e2 FFF7FEFF 		bl	sint2uart	@
 1257              	@ main.c:591: 						tr_locate(2,1);
 1258 04e6 0121     		movs	r1, #1	@,
 1259 04e8 0220     		movs	r0, #2	@,
 1260 04ea FFF7FEFF 		bl	tr_locate	@
 1261              	@ main.c:592: 						if(str[0]=='t') { stat = rok; LAD = 0;	ROZ = 1; }
 1262 04ee 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2	@ str, str
 1263 04f2 742B     		cmp	r3, #116	@ str,
 1264 04f4 4FF00003 		mov	r3, #0	@ tmp863,
 1265 04f8 00F09782 		beq	.L105	@,
 1266              	@ main.c:593: 						else 			 { stat = kon; ROZ = 0;	LAD = 1; }
 1267 04fc 0121     		movs	r1, #1	@ tmp869,
 1268 04fe 364A     		ldr	r2, .L112+36	@ tmp868,
 1269 0500 4048     		ldr	r0, .L112+80	@ tmp1073,
 1270 0502 0425     		movs	r5, #4	@ stat,
 1271 0504 0360     		str	r3, [r0]	@ tmp867, MEM[(volatile long unsigned int *)1109492144B]
 1272              	@ main.c:577: 						beep= 0;
 1273 0506 0193     		str	r3, [sp, #4]	@ tmp867, %sfp
 1274              	@ main.c:593: 						else 			 { stat = kon; ROZ = 0;	LAD = 1; }
 1275 0508 1160     		str	r1, [r2]	@ tmp869, MEM[(volatile long unsigned int *)1109492148B]
 1276 050a 3DE6     		b	.L83	@
 1277              	.L74:
 1278              	@ main.c:617: 						LAD = 0;
 1279 050c 0023     		movs	r3, #0	@ tmp891,
 1280              	@ main.c:618: 						ROZ = 1;
 1281 050e 0125     		movs	r5, #1	@ tmp893,
 1282              	@ main.c:617: 						LAD = 0;
 1283 0510 3149     		ldr	r1, .L112+36	@ tmp890,
 1284              	@ main.c:619: 						BEP = 1;
 1285 0512 324A     		ldr	r2, .L112+40	@ tmp894,
 1286              	@ main.c:617: 						LAD = 0;
 1287 0514 0B60     		str	r3, [r1]	@ tmp891, MEM[(volatile long unsigned int *)1109492148B]
 1288              	@ main.c:618: 						ROZ = 1;
 1289 0516 41F8045C 		str	r5, [r1, #-4]	@ tmp893, MEM[(volatile long unsigned int *)1109492144B]
 1290              	@ main.c:619: 						BEP = 1;
 1291 051a 1560     		str	r5, [r2]	@ tmp893, MEM[(volatile long unsigned int *)1109492152B]
 1292              	@ main.c:622: 						rw = 0;
 1293 051c 304A     		ldr	r2, .L112+44	@ tmp1080,
 1294              	@ main.c:620: 						beep=0; 
 1295 051e 0193     		str	r3, [sp, #4]	@ tmp891, %sfp
 1296              	@ main.c:622: 						rw = 0;
 1297 0520 1380     		strh	r3, [r2]	@ movhi	@ tmp891, rw
 1298              	@ main.c:623: 					break;
 1299 0522 31E6     		b	.L83	@
 1300              	.L73:
 1301              	@ main.c:634: 						BEP = 1;
 1302 0524 0122     		movs	r2, #1	@ tmp909,
 1303              	@ main.c:633: 						beep   = 0;
 1304 0526 0021     		movs	r1, #0	@ beep,
 1305              	@ main.c:634: 						BEP = 1;
 1306 0528 2C4B     		ldr	r3, .L112+40	@ tmp908,
 1307              	@ main.c:633: 						beep   = 0;
 1308 052a 0191     		str	r1, [sp, #4]	@ beep, %sfp
 1309              	@ main.c:634: 						BEP = 1;
 1310 052c 1A60     		str	r2, [r3]	@ tmp909, MEM[(volatile long unsigned int *)1109492152B]
 1311              	@ main.c:635: 					break;
ARM GAS  /tmp/cczkEFU1.s 			page 24


 1312 052e 2BE6     		b	.L83	@
 1313              	.L71:
 1314              	@ main.c:609: 						ROZ = 0;
 1315 0530 0023     		movs	r3, #0	@ tmp882,
 1316              	@ main.c:610: 						LAD = 1;
 1317 0532 0122     		movs	r2, #1	@ tmp884,
 1318 0534 2848     		ldr	r0, .L112+36	@ tmp883,
 1319              	@ main.c:611: 						BEP = 1;
 1320 0536 2949     		ldr	r1, .L112+40	@ tmp885,
 1321              	@ main.c:609: 						ROZ = 0;
 1322 0538 324F     		ldr	r7, .L112+80	@ tmp1077,
 1323              	@ main.c:613: 						stat = lad;
 1324 053a 1D46     		mov	r5, r3	@ stat, tmp882
 1325              	@ main.c:609: 						ROZ = 0;
 1326 053c 3B60     		str	r3, [r7]	@ tmp882, MEM[(volatile long unsigned int *)1109492144B]
 1327              	@ main.c:610: 						LAD = 1;
 1328 053e 0260     		str	r2, [r0]	@ tmp884, MEM[(volatile long unsigned int *)1109492148B]
 1329              	@ main.c:611: 						BEP = 1;
 1330 0540 0A60     		str	r2, [r1]	@ tmp884, MEM[(volatile long unsigned int *)1109492152B]
 1331              	@ main.c:614: 						rw = 0;
 1332 0542 274A     		ldr	r2, .L112+44	@ tmp1078,
 1333              	@ main.c:612: 						beep = 0; 
 1334 0544 0193     		str	r3, [sp, #4]	@ stat, %sfp
 1335              	@ main.c:614: 						rw = 0;
 1336 0546 1380     		strh	r3, [r2]	@ movhi	@ tmp882, rw
 1337              	@ main.c:615: 					break;
 1338 0548 1EE6     		b	.L83	@
 1339              	.L58:
 1340              	@ main.c:489: 				if(vbus < 2600 && vbus > 2000 && stat==roz) { // koniec rozladowania
 1341 054a 40F25621 		movw	r1, #598	@ tmp741,
 1342 054e 8A42     		cmp	r2, r1	@ _562, tmp741
 1343 0550 02D8     		bhi	.L60	@,
 1344              	@ main.c:489: 				if(vbus < 2600 && vbus > 2000 && stat==roz) { // koniec rozladowania
 1345 0552 012D     		cmp	r5, #1	@ stat,
 1346 0554 00F0AC81 		beq	.L61	@,
 1347              	.L60:
 1348              	@ main.c:496: 				if( abs(cur) < 50 && vbus < 4200 && stat == lad ){ // zanikanie ladowania
 1349 0558 3133     		adds	r3, r3, #49	@ tmp742, cur.45_158,
 1350 055a 9BB2     		uxth	r3, r3	@ tmp743, tmp742
 1351 055c 622B     		cmp	r3, #98	@ tmp743,
 1352 055e 06D8     		bhi	.L62	@,
 1353              	@ main.c:496: 				if( abs(cur) < 50 && vbus < 4200 && stat == lad ){ // zanikanie ladowania
 1354 0560 41F26703 		movw	r3, #4199	@ tmp744,
 1355 0564 9C45     		cmp	ip, r3	@ pretmp_489, tmp744
 1356 0566 02DC     		bgt	.L62	@,
 1357              	@ main.c:496: 				if( abs(cur) < 50 && vbus < 4200 && stat == lad ){ // zanikanie ladowania
 1358 0568 002D     		cmp	r5, #0	@ stat
 1359 056a 00F0AA81 		beq	.L106	@
 1360              	.L62:
 1361              	@ main.c:504: 					if(vbus < 2800 && vbus > 2000 && stat==rok) { // koniec rozladowania konserwujac
 1362 056e 40F21E33 		movw	r3, #798	@ tmp759,
 1363 0572 9A42     		cmp	r2, r3	@ _562, tmp759
 1364 0574 40F24A81 		bls	.L107	@,
 1365              	.L64:
 1366              	@ main.c:512: 					if( (Cah > vr1*70 || vbus > 4200) && stat == kon ){ // koniec ladowania konserwu
 1367 0578 D9F80030 		ldr	r3, [r9]	@ Cah, Cah
 1368 057c 8342     		cmp	r3, r0	@ Cah, _600
ARM GAS  /tmp/cczkEFU1.s 			page 25


 1369 057e 04D8     		bhi	.L67	@,
 1370              	@ main.c:512: 					if( (Cah > vr1*70 || vbus > 4200) && stat == kon ){ // koniec ladowania konserwu
 1371 0580 41F26803 		movw	r3, #4200	@ tmp780,
 1372 0584 9C45     		cmp	ip, r3	@ pretmp_489, tmp780
 1373 0586 7FF743AE 		ble	.L57	@,
 1374              	.L67:
 1375              	@ main.c:512: 					if( (Cah > vr1*70 || vbus > 4200) && stat == kon ){ // koniec ladowania konserwu
 1376 058a 042D     		cmp	r5, #4	@ stat,
 1377 058c 7FF440AE 		bne	.L57	@,
 1378              	.L68:
 1379              	@ main.c:513: 					LAD = 0;
 1380 0590 0023     		movs	r3, #0	@ tmp771,
 1381 0592 1149     		ldr	r1, .L112+36	@ tmp770,
 1382              	@ main.c:520: 			if( (STCLK_MS*500   < (trg2 - SysTick->VAL))) {
 1383 0594 1C4A     		ldr	r2, .L112+84	@ tmp777,
 1384              	@ main.c:513: 					LAD = 0;
 1385 0596 0B60     		str	r3, [r1]	@ tmp771, MEM[(volatile long unsigned int *)1109492148B]
 1386              	@ main.c:514: 					ROZ = 0;
 1387 0598 41F8043C 		str	r3, [r1, #-4]	@ tmp771, MEM[(volatile long unsigned int *)1109492144B]
 1388              	@ main.c:520: 			if( (STCLK_MS*500   < (trg2 - SysTick->VAL))) {
 1389 059c 1B4B     		ldr	r3, .L112+88	@ tmp1048,
 1390 059e 1B68     		ldr	r3, [r3]	@ trg2.57_535, trg2
 1391 05a0 A168     		ldr	r1, [r4, #8]	@ _536, MEM[(struct SysTick_Type *)3758153744B].VAL
 1392 05a2 5B1A     		subs	r3, r3, r1	@ tmp776, trg2.57_535, _536
 1393 05a4 9342     		cmp	r3, r2	@ tmp776, tmp777
 1394 05a6 00F22581 		bhi	.L65	@,
 1395              	@ main.c:515: 					beep= 1;
 1396 05aa 0123     		movs	r3, #1	@ beep,
 1397              	@ main.c:516: 					stat = czk;
 1398 05ac 0225     		movs	r5, #2	@ stat,
 1399              	@ main.c:515: 					beep= 1;
 1400 05ae 0193     		str	r3, [sp, #4]	@ beep, %sfp
 1401 05b0 3BE6     		b	.L66	@
 1402              	.L113:
 1403 05b2 00BF     		.align	2
 1404              	.L112:
 1405 05b4 20000000 		.word	.LC25
 1406 05b8 24000000 		.word	.LC26
 1407 05bc 58000000 		.word	.LC27
 1408 05c0 98000000 		.word	.LC28
 1409 05c4 00000000 		.word	.LANCHOR16
 1410 05c8 00000000 		.word	.LANCHOR17
 1411 05cc A8000000 		.word	.LC29
 1412 05d0 C0000000 		.word	.LC30
 1413 05d4 CC000000 		.word	.LC31
 1414 05d8 B4812142 		.word	1109492148
 1415 05dc B8812142 		.word	1109492152
 1416 05e0 00000000 		.word	.LANCHOR9
 1417 05e4 DC000000 		.word	.LC32
 1418 05e8 EC000000 		.word	.LC33
 1419 05ec 00000000 		.word	.LANCHOR15
 1420 05f0 00010000 		.word	.LC34
 1421 05f4 18010000 		.word	.LC35
 1422 05f8 1C010000 		.word	.LC36
 1423 05fc 30010000 		.word	.LC37
 1424 0600 CDCCCCCC 		.word	-858993459
 1425 0604 B0812142 		.word	1109492144
ARM GAS  /tmp/cczkEFU1.s 			page 26


 1426 0608 20AA4400 		.word	4500000
 1427 060c 00000000 		.word	trg2
 1428              	.L104:
 1429              	@ main.c:388: 				trg0  = SysTick->VAL;
 1430 0610 D4F808C0 		ldr	ip, [r4, #8]	@ _29, MEM[(struct SysTick_Type *)3758153744B].VAL
 1431 0614 B64F     		ldr	r7, .L114	@ tmp982,
 1432              	@ main.c:391: 				i2c1_read(INA219_ADDR,1,i2reg,2);
 1433 0616 0223     		movs	r3, #2	@,
 1434 0618 03AA     		add	r2, sp, #12	@ tmp981,,
 1435 061a 0121     		movs	r1, #1	@,
 1436 061c 8020     		movs	r0, #128	@,
 1437              	@ main.c:388: 				trg0  = SysTick->VAL;
 1438 061e C7F800C0 		str	ip, [r7]	@ _29, trg0
 1439              	@ main.c:391: 				i2c1_read(INA219_ADDR,1,i2reg,2);
 1440 0622 FFF7FEFF 		bl	i2c1_read	@
 1441              	@ main.c:394: 				i2c1_read( INA219_ADDR,2,i2reg,2);
 1442 0626 0223     		movs	r3, #2	@,
 1443 0628 03AA     		add	r2, sp, #12	@ tmp983,,
 1444 062a 1946     		mov	r1, r3	@,
 1445 062c 8020     		movs	r0, #128	@,
 1446 062e FFF7FEFF 		bl	i2c1_read	@
 1447              	@ main.c:398: 				i2c1_read( INA219_ADDR,4,i2reg,2);
 1448 0632 0223     		movs	r3, #2	@,
 1449              	@ main.c:395: 				vbus = ((i2reg[1] | (i2reg[0]<<8))>>3)*4 ; //512/128
 1450 0634 BDF80CC0 		ldrh	ip, [sp, #12]	@, MEM[(u08[2] *)&i2reg]
 1451 0638 AE4F     		ldr	r7, .L114+4	@ tmp1110,
 1452 063a 9CFA9CFC 		rev16	ip, ip	@ tmp471, MEM[(u08[2] *)&i2reg]
 1453 063e CCF3CC0C 		ubfx	ip, ip, #3, #13	@ tmp474, tmp471,,
 1454 0642 0CFA03FC 		lsl	ip, ip, r3	@ tmp476, tmp474,
 1455              	@ main.c:398: 				i2c1_read( INA219_ADDR,4,i2reg,2);
 1456 0646 03AA     		add	r2, sp, #12	@ tmp984,,
 1457 0648 0421     		movs	r1, #4	@,
 1458 064a 8020     		movs	r0, #128	@,
 1459              	@ main.c:395: 				vbus = ((i2reg[1] | (i2reg[0]<<8))>>3)*4 ; //512/128
 1460 064c A7F800C0 		strh	ip, [r7]	@ movhi	@ tmp476, vbus
 1461              	@ main.c:398: 				i2c1_read( INA219_ADDR,4,i2reg,2);
 1462 0650 FFF7FEFF 		bl	i2c1_read	@
 1463              	@ main.c:401: 				if( (cnt+1)%300==0 && stat == roz){  // pomiar rezystancji wewnetrznej
 1464 0654 4FF49670 		mov	r0, #300	@ tmp494,
 1465 0658 3388     		ldrh	r3, [r6]	@ cnt, cnt
 1466              	@ main.c:399: 				dcur = (i2reg[0]<<8) | i2reg[1] ;
 1467 065a 9DF80C10 		ldrb	r1, [sp, #12]	@ zero_extendqisi2	@ i2reg, i2reg
 1468              	@ main.c:401: 				if( (cnt+1)%300==0 && stat == roz){  // pomiar rezystancji wewnetrznej
 1469 065e 5A1C     		adds	r2, r3, #1	@ tmp489, cnt,
 1470 0660 A54B     		ldr	r3, .L114+8	@ tmp985,
 1471 0662 A3FB0273 		umull	r7, r3, r3, r2	@ tmp961, tmp491, tmp985, tmp489
 1472 0666 5B09     		lsrs	r3, r3, #5	@ tmp490, tmp491,
 1473 0668 00FB1323 		mls	r3, r0, r3, r2	@ tmp495, tmp494, tmp490, tmp489
 1474              	@ main.c:399: 				dcur = (i2reg[0]<<8) | i2reg[1] ;
 1475 066c 9DF80D20 		ldrb	r2, [sp, #13]	@ zero_extendqisi2	@ i2reg, i2reg
 1476 0670 42EA0122 		orr	r2, r2, r1, lsl #8	@ tmp485, i2reg, i2reg,
 1477 0674 A149     		ldr	r1, .L114+12	@ tmp986,
 1478 0676 0A80     		strh	r2, [r1]	@ movhi	@ tmp485, dcur
 1479              	@ main.c:401: 				if( (cnt+1)%300==0 && stat == roz){  // pomiar rezystancji wewnetrznej
 1480 0678 13B9     		cbnz	r3, .L52	@ tmp495,
 1481              	@ main.c:401: 				if( (cnt+1)%300==0 && stat == roz){  // pomiar rezystancji wewnetrznej
 1482 067a 012D     		cmp	r5, #1	@ stat,
ARM GAS  /tmp/cczkEFU1.s 			page 27


 1483 067c 00F07A81 		beq	.L108	@,
 1484              	.L52:
 1485              	@ main.c:420: 				cur = dcur/10;
 1486 0680 9E4F     		ldr	r7, .L114+12	@ tmp1006,
 1487              	@ main.c:418: 				i2c1_write(INA219_ADDR,(u08 *)i2cnf,3);		//star conversion
 1488 0682 0322     		movs	r2, #3	@,
 1489 0684 05A9     		add	r1, sp, #20	@ tmp1005,,
 1490 0686 8020     		movs	r0, #128	@,
 1491 0688 FFF7FEFF 		bl	i2c1_write	@
 1492              	@ main.c:420: 				cur = dcur/10;
 1493 068c B7F90030 		ldrsh	r3, [r7]	@ dcur, dcur
 1494 0690 9B4A     		ldr	r2, .L114+16	@ tmp567,
 1495 0692 D817     		asrs	r0, r3, #31	@ tmp569, dcur,
 1496 0694 82FB0323 		smull	r2, r3, r2, r3	@ tmp962, tmp566, tmp567, dcur
 1497              	@ main.c:422: 				pow = abs(vbus*cur)/1000;
 1498 0698 964A     		ldr	r2, .L114+4	@ tmp1108,
 1499              	@ main.c:420: 				cur = dcur/10;
 1500 069a C0EBA303 		rsb	r3, r0, r3, asr #2	@ tmp564, tmp569, tmp566,
 1501              	@ main.c:422: 				pow = abs(vbus*cur)/1000;
 1502 069e B2F90010 		ldrsh	r1, [r2]	@ vbus, vbus
 1503              	@ main.c:420: 				cur = dcur/10;
 1504 06a2 18B2     		sxth	r0, r3	@ _86, tmp564
 1505              	@ main.c:422: 				pow = abs(vbus*cur)/1000;
 1506 06a4 00FB01F1 		mul	r1, r0, r1	@ tmp574, _86, vbus
 1507 06a8 964B     		ldr	r3, .L114+20	@ tmp1007,
 1508 06aa 0029     		cmp	r1, #0	@ tmp575,
 1509 06ac B8BF     		it	lt
 1510 06ae 4942     		rsblt	r1, r1, #0	@ tmp575, tmp574,
 1511 06b0 A3FB0131 		umull	r3, r1, r3, r1	@ tmp963, tmp577, tmp1007, tmp575
 1512              	@ main.c:420: 				cur = dcur/10;
 1513 06b4 944F     		ldr	r7, .L114+24	@ tmp1009,
 1514              	@ main.c:423: 				cah += abs(cur);
 1515 06b6 954B     		ldr	r3, .L114+28	@ tmp1008,
 1516              	@ main.c:420: 				cur = dcur/10;
 1517 06b8 3880     		strh	r0, [r7]	@ movhi	@ _86, cur
 1518              	@ main.c:423: 				cah += abs(cur);
 1519 06ba 1B68     		ldr	r3, [r3]	@ cah, cah
 1520 06bc 80EAE07C 		eor	ip, r0, r0, asr #31	@ tmp586, _86, _86,
 1521              	@ main.c:422: 				pow = abs(vbus*cur)/1000;
 1522 06c0 934F     		ldr	r7, .L114+32	@ tmp1010,
 1523 06c2 41F38F11 		sbfx	r1, r1, #6, #16	@ _93, tmp577,,
 1524              	@ main.c:423: 				cah += abs(cur);
 1525 06c6 ACEBE07C 		sub	ip, ip, r0, asr #31	@ tmp586, tmp586, _86,
 1526              	@ main.c:422: 				pow = abs(vbus*cur)/1000;
 1527 06ca 3980     		strh	r1, [r7]	@ movhi	@ _93, pow
 1528              	@ main.c:424: 				BKP->DR1 = cah & 0x00ff;	BKP->DR2 = cah>>16;
 1529 06cc 9148     		ldr	r0, .L114+36	@ tmp593,
 1530              	@ main.c:423: 				cah += abs(cur);
 1531 06ce 6344     		add	r3, r3, ip	@ _97, tmp586
 1532              	@ main.c:425: 				cwh += abs(pow);
 1533 06d0 81EAE172 		eor	r2, r1, r1, asr #31	@ tmp598, _93, _93,
 1534              	@ main.c:423: 				cah += abs(cur);
 1535 06d4 8D4F     		ldr	r7, .L114+28	@ tmp1011,
 1536              	@ main.c:424: 				BKP->DR1 = cah & 0x00ff;	BKP->DR2 = cah>>16;
 1537 06d6 5FFA83FC 		uxtb	ip, r3	@ _99, _97
 1538              	@ main.c:425: 				cwh += abs(pow);
 1539 06da A2EBE172 		sub	r2, r2, r1, asr #31	@ tmp598, tmp598, _93,
ARM GAS  /tmp/cczkEFU1.s 			page 28


 1540              	@ main.c:424: 				BKP->DR1 = cah & 0x00ff;	BKP->DR2 = cah>>16;
 1541 06de 190C     		lsrs	r1, r3, #16	@ _101, _97,
 1542              	@ main.c:423: 				cah += abs(cur);
 1543 06e0 3B60     		str	r3, [r7]	@ _97, cah
 1544              	@ main.c:424: 				BKP->DR1 = cah & 0x00ff;	BKP->DR2 = cah>>16;
 1545 06e2 A0F804C0 		strh	ip, [r0, #4]	@ movhi	@ _99, MEM[(struct BKP_TypeDef *)1073769472B].DR1
 1546 06e6 0181     		strh	r1, [r0, #8]	@ movhi	@ _101, MEM[(struct BKP_TypeDef *)1073769472B].DR2
 1547              	@ main.c:425: 				cwh += abs(pow);
 1548 06e8 D8F80010 		ldr	r1, [r8]	@ cwh, cwh
 1549              	@ main.c:427: 				Cah = cah/36;
 1550 06ec 8A4F     		ldr	r7, .L114+40	@ tmp1012,
 1551              	@ main.c:425: 				cwh += abs(pow);
 1552 06ee 0A44     		add	r2, r2, r1	@ _106, cwh
 1553              	@ main.c:427: 				Cah = cah/36;
 1554 06f0 A7FB03C3 		umull	ip, r3, r7, r3	@ tmp964, tmp611, tmp1012, _97
 1555              	@ main.c:426: 				BKP->DR3 = cwh & 0x00ff;	BKP->DR4 = cwh>>16;
 1556 06f4 110C     		lsrs	r1, r2, #16	@ _110, _106,
 1557 06f6 5FFA82FC 		uxtb	ip, r2	@ _108, _106
 1558              	@ main.c:425: 				cwh += abs(pow);
 1559 06fa C8F80020 		str	r2, [r8]	@ _106, cwh
 1560              	@ main.c:426: 				BKP->DR3 = cwh & 0x00ff;	BKP->DR4 = cwh>>16;
 1561 06fe A0F80CC0 		strh	ip, [r0, #12]	@ movhi	@ _108, MEM[(struct BKP_TypeDef *)1073769472B].DR3
 1562 0702 0182     		strh	r1, [r0, #16]	@ movhi	@ _110, MEM[(struct BKP_TypeDef *)1073769472B].DR4
 1563              	@ main.c:428: 				Cwh = cwh/36;
 1564 0704 3946     		mov	r1, r7	@ tmp1013, tmp1012
 1565              	@ main.c:433: 					unt2uart ((cnt/60)%60,2);UaPutS(".");unt2uart (cnt%60,2);
 1566 0706 DFF868B2 		ldr	fp, .L114+128	@ tmp624,
 1567 070a 3088     		ldrh	r0, [r6]	@ cnt, cnt
 1568              	@ main.c:428: 				Cwh = cwh/36;
 1569 070c A1FB0212 		umull	r1, r2, r1, r2	@ tmp965, tmp615, tmp1013, _106
 1570              	@ main.c:433: 					unt2uart ((cnt/60)%60,2);UaPutS(".");unt2uart (cnt%60,2);
 1571 0710 ABFB0010 		umull	r1, r0, fp, r0	@ tmp966, tmp623, tmp624, cnt
 1572 0714 4009     		lsrs	r0, r0, #5	@ tmp626, tmp623,
 1573 0716 ABFB00C1 		umull	ip, r1, fp, r0	@ tmp967, tmp627, tmp624, tmp626
 1574              	@ main.c:428: 				Cwh = cwh/36;
 1575 071a 804F     		ldr	r7, .L114+44	@ tmp1014,
 1576              	@ main.c:433: 					unt2uart ((cnt/60)%60,2);UaPutS(".");unt2uart (cnt%60,2);
 1577 071c 4909     		lsrs	r1, r1, #5	@ tmp625, tmp627,
 1578 071e C1EB0111 		rsb	r1, r1, r1, lsl #4	@ tmp631, tmp625, tmp625,
 1579              	@ main.c:427: 				Cah = cah/36;
 1580 0722 DB08     		lsrs	r3, r3, #3	@ tmp613, tmp611,
 1581              	@ main.c:428: 				Cwh = cwh/36;
 1582 0724 D208     		lsrs	r2, r2, #3	@ tmp617, tmp615,
 1583 0726 3A60     		str	r2, [r7]	@ tmp617, Cwh
 1584              	@ main.c:433: 					unt2uart ((cnt/60)%60,2);UaPutS(".");unt2uart (cnt%60,2);
 1585 0728 A0EB8100 		sub	r0, r0, r1, lsl #2	@ tmp633, tmp626, tmp631,
 1586              	@ main.c:432: 					PutChar = UART1_putc;
 1587 072c 7C4A     		ldr	r2, .L114+48	@ tmp1016,
 1588              	@ main.c:427: 				Cah = cah/36;
 1589 072e C9F80030 		str	r3, [r9]	@ tmp613, Cah
 1590              	@ main.c:432: 					PutChar = UART1_putc;
 1591 0732 7C4B     		ldr	r3, .L114+52	@ tmp1015,
 1592              	@ main.c:433: 					unt2uart ((cnt/60)%60,2);UaPutS(".");unt2uart (cnt%60,2);
 1593 0734 0221     		movs	r1, #2	@,
 1594 0736 80B2     		uxth	r0, r0	@, tmp633
 1595              	@ main.c:432: 					PutChar = UART1_putc;
 1596 0738 1A60     		str	r2, [r3]	@ tmp1016, PutChar
ARM GAS  /tmp/cczkEFU1.s 			page 29


 1597              	@ main.c:433: 					unt2uart ((cnt/60)%60,2);UaPutS(".");unt2uart (cnt%60,2);
 1598 073a FFF7FEFF 		bl	unt2uart	@
 1599 073e 7A48     		ldr	r0, .L114+56	@,
 1600 0740 FFF7FEFF 		bl	UaPutS	@
 1601 0744 3088     		ldrh	r0, [r6]	@ cnt, cnt
 1602 0746 0221     		movs	r1, #2	@,
 1603 0748 ABFB003B 		umull	r3, fp, fp, r0	@ tmp968, tmp651, tmp624, cnt
 1604 074c 4FEA5B1B 		lsr	fp, fp, #5	@ tmp649, tmp651,
 1605 0750 CBEB0B1B 		rsb	fp, fp, fp, lsl #4	@ tmp655, tmp649, tmp649,
 1606 0754 A0EB8B00 		sub	r0, r0, fp, lsl #2	@ tmp657, cnt, tmp655,
 1607 0758 80B2     		uxth	r0, r0	@, tmp657
 1608 075a FFF7FEFF 		bl	unt2uart	@
 1609              	@ main.c:434: 					UaPutS((char*)tstat[stat]);
 1610 075e 0EAB     		add	r3, sp, #56	@ tmp1017,,
 1611 0760 03EBC500 		add	r0, r3, r5, lsl #3	@, tmp1017, stat,
 1612 0764 FFF7FEFF 		bl	UaPutS	@
 1613              	@ main.c:436: 					int2uart (vbus  ,4,3);	UaPutS("V");
 1614 0768 624B     		ldr	r3, .L114+4	@ tmp1107,
 1615 076a 0322     		movs	r2, #3	@,
 1616 076c B3F90000 		ldrsh	r0, [r3]	@, vbus
 1617 0770 0421     		movs	r1, #4	@,
 1618              	@ main.c:437: 					int2uart (dcur  ,5,1);	UaPutS("mA");
 1619 0772 624F     		ldr	r7, .L114+12	@ tmp1018,
 1620              	@ main.c:436: 					int2uart (vbus  ,4,3);	UaPutS("V");
 1621 0774 FFF7FEFF 		bl	int2uart	@
 1622 0778 6C48     		ldr	r0, .L114+60	@,
 1623 077a FFF7FEFF 		bl	UaPutS	@
 1624              	@ main.c:437: 					int2uart (dcur  ,5,1);	UaPutS("mA");
 1625 077e 0122     		movs	r2, #1	@,
 1626 0780 0521     		movs	r1, #5	@,
 1627 0782 B7F90000 		ldrsh	r0, [r7]	@, dcur
 1628 0786 FFF7FEFF 		bl	int2uart	@
 1629 078a 6948     		ldr	r0, .L114+64	@,
 1630 078c FFF7FEFF 		bl	UaPutS	@
 1631              	@ main.c:439: 					int2uart (pow   ,4,3);	UaPutS("W"); // (pow  ,4,3);
 1632 0790 5F4F     		ldr	r7, .L114+32	@ tmp1019,
 1633              	@ main.c:438: 					int2uart (Cah   ,6,2);	UaPutS("mAh");
 1634 0792 0222     		movs	r2, #2	@,
 1635 0794 0621     		movs	r1, #6	@,
 1636 0796 D9F80000 		ldr	r0, [r9]	@, Cah
 1637 079a FFF7FEFF 		bl	int2uart	@
 1638 079e 6548     		ldr	r0, .L114+68	@,
 1639 07a0 FFF7FEFF 		bl	UaPutS	@
 1640              	@ main.c:439: 					int2uart (pow   ,4,3);	UaPutS("W"); // (pow  ,4,3);
 1641 07a4 0322     		movs	r2, #3	@,
 1642 07a6 0421     		movs	r1, #4	@,
 1643 07a8 B7F90000 		ldrsh	r0, [r7]	@, pow
 1644              	@ main.c:440: 					int2uart (Cwh   ,7,2);	UaPutS("mWh");
 1645 07ac 5B4F     		ldr	r7, .L114+44	@ tmp1020,
 1646              	@ main.c:439: 					int2uart (pow   ,4,3);	UaPutS("W"); // (pow  ,4,3);
 1647 07ae FFF7FEFF 		bl	int2uart	@
 1648 07b2 6148     		ldr	r0, .L114+72	@,
 1649 07b4 FFF7FEFF 		bl	UaPutS	@
 1650              	@ main.c:440: 					int2uart (Cwh   ,7,2);	UaPutS("mWh");
 1651 07b8 0222     		movs	r2, #2	@,
 1652 07ba 0721     		movs	r1, #7	@,
 1653 07bc 3868     		ldr	r0, [r7]	@, Cwh
ARM GAS  /tmp/cczkEFU1.s 			page 30


 1654 07be FFF7FEFF 		bl	int2uart	@
 1655 07c2 5E48     		ldr	r0, .L114+76	@,
 1656 07c4 FFF7FEFF 		bl	UaPutS	@
 1657              	@ main.c:441: 					int2uart (Rwa[1],4,3);	UaPutS("ohm");
 1658 07c8 5D4B     		ldr	r3, .L114+80	@ tmp1021,
 1659 07ca 0322     		movs	r2, #3	@,
 1660 07cc 5868     		ldr	r0, [r3, #4]	@, Rwa
 1661 07ce 0421     		movs	r1, #4	@,
 1662 07d0 FFF7FEFF 		bl	int2uart	@
 1663 07d4 5B48     		ldr	r0, .L114+84	@,
 1664 07d6 FFF7FEFF 		bl	UaPutS	@
 1665              	@ main.c:443: 					UaPutS("\r ");
 1666 07da 5B48     		ldr	r0, .L114+88	@,
 1667 07dc FFF7FEFF 		bl	UaPutS	@
 1668              	@ main.c:460: 					else coile = 2;
 1669 07e0 0222     		movs	r2, #2	@ tmp682,
 1670              	@ main.c:461: 					if( (cnt)%coile==0 ){  // pomiar rezystancji wewnetrznej
 1671 07e2 3388     		ldrh	r3, [r6]	@ cnt.31_134, cnt
 1672              	@ main.c:460: 					else coile = 2;
 1673 07e4 5949     		ldr	r1, .L114+92	@ tmp1022,
 1674              	@ main.c:461: 					if( (cnt)%coile==0 ){  // pomiar rezystancji wewnetrznej
 1675 07e6 13F0010B 		ands	fp, r3, #1	@ tmp687, cnt.31_134,
 1676              	@ main.c:460: 					else coile = 2;
 1677 07ea 0A70     		strb	r2, [r1]	@ tmp682, coile
 1678              	@ main.c:461: 					if( (cnt)%coile==0 ){  // pomiar rezystancji wewnetrznej
 1679 07ec 22D0     		beq	.L109	@,
 1680              	.L56:
 1681              	@ main.c:473: 					cnt++;
 1682 07ee 0133     		adds	r3, r3, #1	@ tmp706, cnt.31_134,
 1683 07f0 3380     		strh	r3, [r6]	@ movhi	@ tmp706, cnt
 1684 07f2 D1E4     		b	.L51	@
 1685              	.L65:
 1686              	@ main.c:516: 					stat = czk;
 1687 07f4 0225     		movs	r5, #2	@ stat,
 1688              	@ main.c:521: 				trg2  = SysTick->VAL;	
 1689 07f6 A368     		ldr	r3, [r4, #8]	@ _530, MEM[(struct SysTick_Type *)3758153744B].VAL
 1690 07f8 554A     		ldr	r2, .L114+96	@ tmp1087,
 1691 07fa 1360     		str	r3, [r2]	@ _530, trg2
 1692              	.L84:
 1693              	@ main.c:522: 				if(beep){	BEP ^= 1; }
 1694 07fc 0123     		movs	r3, #1	@ beep,
 1695 07fe 554A     		ldr	r2, .L114+100	@ tmp787,
 1696 0800 0193     		str	r3, [sp, #4]	@ beep, %sfp
 1697 0802 1368     		ldr	r3, [r2]	@ _174, MEM[(volatile long unsigned int *)1109492152B]
 1698 0804 83F00103 		eor	r3, r3, #1	@ _175, _174,
 1699 0808 1360     		str	r3, [r2]	@ _175, MEM[(volatile long unsigned int *)1109492152B]
 1700 080a 0EE5     		b	.L66	@
 1701              	.L107:
 1702              	@ main.c:504: 					if(vbus < 2800 && vbus > 2000 && stat==rok) { // koniec rozladowania konserwujac
 1703 080c 052D     		cmp	r5, #5	@ stat,
 1704 080e 7FF4B3AE 		bne	.L64	@,
 1705              	@ main.c:505:           ROZ = 0;
 1706 0812 0023     		movs	r3, #0	@ tmp761,
 1707              	@ main.c:506: 					LAD = 1;
 1708 0814 0121     		movs	r1, #1	@ tmp763,
 1709 0816 504A     		ldr	r2, .L114+104	@ tmp762,
 1710              	@ main.c:505:           ROZ = 0;
ARM GAS  /tmp/cczkEFU1.s 			page 31


 1711 0818 504D     		ldr	r5, .L114+108	@ tmp1045,
 1712 081a 2B60     		str	r3, [r5]	@ tmp761, MEM[(volatile long unsigned int *)1109492144B]
 1713              	@ main.c:506: 					LAD = 1;
 1714 081c 1160     		str	r1, [r2]	@ tmp763, MEM[(volatile long unsigned int *)1109492148B]
 1715              	@ main.c:512: 					if( (Cah > vr1*70 || vbus > 4200) && stat == kon ){ // koniec ladowania konserwu
 1716 081e D9F80020 		ldr	r2, [r9]	@ Cah, Cah
 1717              	@ main.c:508: 					cah = 0;
 1718 0822 3A49     		ldr	r1, .L114+28	@ tmp1046,
 1719              	@ main.c:512: 					if( (Cah > vr1*70 || vbus > 4200) && stat == kon ){ // koniec ladowania konserwu
 1720 0824 8242     		cmp	r2, r0	@ Cah, _600
 1721              	@ main.c:508: 					cah = 0;
 1722 0826 0B60     		str	r3, [r1]	@ tmp761, cah
 1723              	@ main.c:509: 					cwh = 0;
 1724 0828 C8F80030 		str	r3, [r8]	@ tmp761, cwh
 1725              	@ main.c:512: 					if( (Cah > vr1*70 || vbus > 4200) && stat == kon ){ // koniec ladowania konserwu
 1726 082c 3FF6B0AE 		bhi	.L68	@,
 1727              	@ main.c:507: 					stat = kon;
 1728 0830 0425     		movs	r5, #4	@ stat,
 1729 0832 EDE4     		b	.L57	@
 1730              	.L109:
 1731              	@ main.c:463: 						int2uarz (vbus  ,4,0); UaPutC(',');
 1732 0834 2F4B     		ldr	r3, .L114+4	@ tmp1106,
 1733              	@ main.c:462: 						PutChar = UART2_putc; //przypisanie callback 
 1734 0836 3B4F     		ldr	r7, .L114+52	@ tmp1023,
 1735              	@ main.c:463: 						int2uarz (vbus  ,4,0); UaPutC(',');
 1736 0838 B3F90000 		ldrsh	r0, [r3]	@, vbus
 1737              	@ main.c:462: 						PutChar = UART2_putc; //przypisanie callback 
 1738 083c 484B     		ldr	r3, .L114+112	@ tmp1024,
 1739              	@ main.c:463: 						int2uarz (vbus  ,4,0); UaPutC(',');
 1740 083e 5A46     		mov	r2, fp	@, tmp687
 1741 0840 0421     		movs	r1, #4	@,
 1742              	@ main.c:462: 						PutChar = UART2_putc; //przypisanie callback 
 1743 0842 3B60     		str	r3, [r7]	@ tmp1024, PutChar
 1744              	@ main.c:463: 						int2uarz (vbus  ,4,0); UaPutC(',');
 1745 0844 FFF7FEFF 		bl	int2uarz	@
 1746 0848 2C20     		movs	r0, #44	@,
 1747 084a FFF7FEFF 		bl	UaPutC	@
 1748              	@ main.c:464: 						int2uarz (cur   ,4,0); UaPutC(',');
 1749 084e 2E48     		ldr	r0, .L114+24	@ tmp1025,
 1750 0850 5A46     		mov	r2, fp	@, tmp687
 1751 0852 0421     		movs	r1, #4	@,
 1752 0854 B0F90000 		ldrsh	r0, [r0]	@, cur
 1753 0858 FFF7FEFF 		bl	int2uarz	@
 1754 085c 2C20     		movs	r0, #44	@,
 1755 085e FFF7FEFF 		bl	UaPutC	@
 1756              	@ main.c:465: 						int2uarz (Cah   ,6,0); UaPutC(',');
 1757 0862 5A46     		mov	r2, fp	@, tmp687
 1758 0864 0621     		movs	r1, #6	@,
 1759 0866 D9F80000 		ldr	r0, [r9]	@, Cah
 1760 086a FFF7FEFF 		bl	int2uarz	@
 1761 086e 2C20     		movs	r0, #44	@,
 1762 0870 FFF7FEFF 		bl	UaPutC	@
 1763              	@ main.c:466: 						int2uarz (pow   ,4,0); UaPutC(',');
 1764 0874 2648     		ldr	r0, .L114+32	@ tmp1026,
 1765 0876 5A46     		mov	r2, fp	@, tmp687
 1766 0878 0421     		movs	r1, #4	@,
 1767 087a B0F90000 		ldrsh	r0, [r0]	@, pow
ARM GAS  /tmp/cczkEFU1.s 			page 32


 1768 087e FFF7FEFF 		bl	int2uarz	@
 1769 0882 2C20     		movs	r0, #44	@,
 1770 0884 FFF7FEFF 		bl	UaPutC	@
 1771              	@ main.c:467: 						int2uarz (Cwh   ,7,0); UaPutC(',');
 1772 0888 2448     		ldr	r0, .L114+44	@ tmp1027,
 1773 088a 5A46     		mov	r2, fp	@, tmp687
 1774 088c 0721     		movs	r1, #7	@,
 1775 088e 0068     		ldr	r0, [r0]	@, Cwh
 1776 0890 FFF7FEFF 		bl	int2uarz	@
 1777 0894 2C20     		movs	r0, #44	@,
 1778 0896 FFF7FEFF 		bl	UaPutC	@
 1779              	@ main.c:468: 						int2uarz (rw 		,4,0);	
 1780 089a 3248     		ldr	r0, .L114+116	@ tmp1028,
 1781 089c 5A46     		mov	r2, fp	@, tmp687
 1782 089e 0421     		movs	r1, #4	@,
 1783 08a0 B0F90000 		ldrsh	r0, [r0]	@, rw
 1784 08a4 FFF7FEFF 		bl	int2uarz	@
 1785              	@ main.c:470: 						PutChar = UART2_putc;
 1786 08a8 2D4A     		ldr	r2, .L114+112	@ tmp1030,
 1787 08aa 3388     		ldrh	r3, [r6]	@ cnt.31_134, cnt
 1788 08ac 3A60     		str	r2, [r7]	@ tmp1030, PutChar
 1789 08ae 9EE7     		b	.L56	@
 1790              	.L61:
 1791              	@ main.c:490: 					LAD = 0;
 1792 08b0 0023     		movs	r3, #0	@ tmp738,
 1793              	@ main.c:492: 					beep= 1;
 1794 08b2 0121     		movs	r1, #1	@ beep,
 1795              	@ main.c:490: 					LAD = 0;
 1796 08b4 284A     		ldr	r2, .L114+104	@ tmp737,
 1797              	@ main.c:492: 					beep= 1;
 1798 08b6 0191     		str	r1, [sp, #4]	@ beep, %sfp
 1799              	@ main.c:493: 					stat = czk;
 1800 08b8 0225     		movs	r5, #2	@ stat,
 1801              	@ main.c:490: 					LAD = 0;
 1802 08ba 1360     		str	r3, [r2]	@ tmp738, MEM[(volatile long unsigned int *)1109492148B]
 1803              	@ main.c:491: 					ROZ = 0;
 1804 08bc 42F8043C 		str	r3, [r2, #-4]	@ tmp738, MEM[(volatile long unsigned int *)1109492144B]
 1805 08c0 A6E4     		b	.L57	@
 1806              	.L106:
 1807              	@ main.c:498: 					ROZ = 1;
 1808 08c2 0123     		movs	r3, #1	@ tmp748,
 1809              	@ main.c:497: 					LAD = 0;
 1810 08c4 244A     		ldr	r2, .L114+104	@ tmp745,
 1811              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 1812 08c6 2849     		ldr	r1, .L114+120	@ tmp754,
 1813              	@ main.c:497: 					LAD = 0;
 1814 08c8 1560     		str	r5, [r2]	@ stat, MEM[(volatile long unsigned int *)1109492148B]
 1815              	@ main.c:498: 					ROZ = 1;
 1816 08ca 42F8043C 		str	r3, [r2, #-4]	@ tmp748, MEM[(volatile long unsigned int *)1109492144B]
 1817              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 1818 08ce A368     		ldr	r3, [r4, #8]	@ _425, MEM[(struct SysTick_Type *)3758153744B].VAL
 1819 08d0 264A     		ldr	r2, .L114+124	@ tmp1042,
 1820 08d2 1360     		str	r3, [r2]	@ _425, delay_us
 1821              	.L63:
 1822              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 1823 08d4 254B     		ldr	r3, .L114+124	@ tmp1043,
 1824 08d6 1B68     		ldr	r3, [r3]	@ delay_us.70_426, delay_us
ARM GAS  /tmp/cczkEFU1.s 			page 33


 1825 08d8 A268     		ldr	r2, [r4, #8]	@ _427, MEM[(struct SysTick_Type *)3758153744B].VAL
 1826 08da 9B1A     		subs	r3, r3, r2	@ tmp753, delay_us.70_426, _427
 1827 08dc 8B42     		cmp	r3, r1	@ tmp753, tmp754
 1828 08de F9D9     		bls	.L63	@,
 1829              	@ main.c:500: 					ROZ = 0;
 1830 08e0 0021     		movs	r1, #0	@ tmp756,
 1831              	@ main.c:501: 					LAD = 1;
 1832 08e2 0122     		movs	r2, #1	@ tmp758,
 1833 08e4 1C4B     		ldr	r3, .L114+104	@ tmp757,
 1834              	@ main.c:500: 					ROZ = 0;
 1835 08e6 1D48     		ldr	r0, .L114+108	@ tmp1044,
 1836 08e8 0160     		str	r1, [r0]	@ tmp756, MEM[(volatile long unsigned int *)1109492144B]
 1837              	@ main.c:501: 					LAD = 1;
 1838 08ea 1A60     		str	r2, [r3]	@ tmp758, MEM[(volatile long unsigned int *)1109492148B]
 1839 08ec 90E4     		b	.L57	@
 1840              	.L115:
 1841 08ee 00BF     		.align	2
 1842              	.L114:
 1843 08f0 00000000 		.word	trg0
 1844 08f4 00000000 		.word	.LANCHOR4
 1845 08f8 B5814E1B 		.word	458129845
 1846 08fc 00000000 		.word	.LANCHOR5
 1847 0900 67666666 		.word	1717986919
 1848 0904 D34D6210 		.word	274877907
 1849 0908 00000000 		.word	.LANCHOR8
 1850 090c 00000000 		.word	.LANCHOR2
 1851 0910 00000000 		.word	.LANCHOR11
 1852 0914 006C0040 		.word	1073769472
 1853 0918 398EE338 		.word	954437177
 1854 091c 00000000 		.word	.LANCHOR13
 1855 0920 00000000 		.word	UART1_putc
 1856 0924 00000000 		.word	PutChar
 1857 0928 00000000 		.word	.LC17
 1858 092c 04000000 		.word	.LC18
 1859 0930 08000000 		.word	.LC19
 1860 0934 0C000000 		.word	.LC20
 1861 0938 10000000 		.word	.LC21
 1862 093c 14000000 		.word	.LC22
 1863 0940 00000000 		.word	.LANCHOR10
 1864 0944 18000000 		.word	.LC23
 1865 0948 1C000000 		.word	.LC24
 1866 094c 00000000 		.word	.LANCHOR14
 1867 0950 00000000 		.word	trg2
 1868 0954 B8812142 		.word	1109492152
 1869 0958 B4812142 		.word	1109492148
 1870 095c B0812142 		.word	1109492144
 1871 0960 00000000 		.word	UART2_putc
 1872 0964 00000000 		.word	.LANCHOR9
 1873 0968 CFDD0600 		.word	449999
 1874 096c 00000000 		.word	delay_us
 1875 0970 89888888 		.word	-2004318071
 1876              	.L108:
 1877              	@ main.c:402: 					cnt2++;
 1878 0974 3148     		ldr	r0, .L116	@ tmp987,
 1879              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 1880 0976 3249     		ldr	r1, .L116+4	@ tmp515,
 1881              	@ main.c:402: 					cnt2++;
ARM GAS  /tmp/cczkEFU1.s 			page 34


 1882 0978 0268     		ldr	r2, [r0]	@ cnt2, cnt2
 1883 097a 0132     		adds	r2, r2, #1	@ tmp506, cnt2,
 1884 097c 0260     		str	r2, [r0]	@ tmp506, cnt2
 1885              	@ main.c:403: 					ROZ = 0;
 1886 097e 314A     		ldr	r2, .L116+8	@ tmp989,
 1887 0980 1360     		str	r3, [r2]	@ tmp495, MEM[(volatile long unsigned int *)1109492144B]
 1888              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 1889 0982 A368     		ldr	r3, [r4, #8]	@ _421, MEM[(struct SysTick_Type *)3758153744B].VAL
 1890 0984 304A     		ldr	r2, .L116+12	@ tmp990,
 1891 0986 1360     		str	r3, [r2]	@ _421, delay_us
 1892              	.L53:
 1893              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 1894 0988 2F4B     		ldr	r3, .L116+12	@ tmp991,
 1895 098a 1B68     		ldr	r3, [r3]	@ delay_us.70_422, delay_us
 1896 098c A268     		ldr	r2, [r4, #8]	@ _423, MEM[(struct SysTick_Type *)3758153744B].VAL
 1897 098e 9B1A     		subs	r3, r3, r2	@ tmp514, delay_us.70_422, _423
 1898 0990 8B42     		cmp	r3, r1	@ tmp514, tmp515
 1899 0992 F9D9     		bls	.L53	@,
 1900              	@ main.c:405: 					i2c1_write(INA219_ADDR,(u08 *)i2trig_bus,3);		//star conversion
 1901 0994 0322     		movs	r2, #3	@,
 1902 0996 06A9     		add	r1, sp, #24	@ tmp992,,
 1903 0998 8020     		movs	r0, #128	@,
 1904 099a FFF7FEFF 		bl	i2c1_write	@
 1905              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 1906 099e A368     		ldr	r3, [r4, #8]	@ _417, MEM[(struct SysTick_Type *)3758153744B].VAL
 1907 09a0 294A     		ldr	r2, .L116+12	@ tmp993,
 1908              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 1909 09a2 2A49     		ldr	r1, .L116+16	@ tmp522,
 1910              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 1911 09a4 1360     		str	r3, [r2]	@ _417, delay_us
 1912              	.L54:
 1913              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 1914 09a6 284B     		ldr	r3, .L116+12	@ tmp994,
 1915 09a8 1B68     		ldr	r3, [r3]	@ delay_us.70_418, delay_us
 1916 09aa A268     		ldr	r2, [r4, #8]	@ _419, MEM[(struct SysTick_Type *)3758153744B].VAL
 1917 09ac 9B1A     		subs	r3, r3, r2	@ tmp521, delay_us.70_418, _419
 1918 09ae 8B42     		cmp	r3, r1	@ tmp521, tmp522
 1919 09b0 F9D9     		bls	.L54	@,
 1920              	@ main.c:407: 					i2c1_read( INA219_ADDR,2,i2reg,2);
 1921 09b2 0223     		movs	r3, #2	@,
 1922 09b4 03AA     		add	r2, sp, #12	@ tmp995,,
 1923 09b6 1946     		mov	r1, r3	@,
 1924 09b8 8020     		movs	r0, #128	@,
 1925 09ba FFF7FEFF 		bl	i2c1_read	@
 1926              	@ main.c:410: 					ROZ = 1;
 1927 09be 0122     		movs	r2, #1	@ tmp535,
 1928              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 1929 09c0 42F22731 		movw	r1, #8999	@ tmp541,
 1930              	@ main.c:408: 					ve = (((i2reg[0]<<8) | i2reg[1])>>3)*515/128 ;
 1931 09c4 BDF80C30 		ldrh	r3, [sp, #12]	@, MEM[(u08[2] *)&i2reg]
 1932              	@ main.c:410: 					ROZ = 1;
 1933 09c8 1E48     		ldr	r0, .L116+8	@ tmp996,
 1934              	@ main.c:408: 					ve = (((i2reg[0]<<8) | i2reg[1])>>3)*515/128 ;
 1935 09ca 5BBA     		rev16	r3, r3	@ tmp524, MEM[(u08[2] *)&i2reg]
 1936 09cc C3F3CC03 		ubfx	r3, r3, #3, #13	@ tmp527, tmp524,,
 1937              	@ main.c:410: 					ROZ = 1;
 1938 09d0 0260     		str	r2, [r0]	@ tmp535, MEM[(volatile long unsigned int *)1109492144B]
ARM GAS  /tmp/cczkEFU1.s 			page 35


 1939              	@ main.c:408: 					ve = (((i2reg[0]<<8) | i2reg[1])>>3)*515/128 ;
 1940 09d2 03EB0320 		add	r0, r3, r3, lsl #8	@ tmp530, tmp527, tmp527,
 1941 09d6 03EB4003 		add	r3, r3, r0, lsl #1	@ tmp532, tmp527, tmp530,
 1942              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 1943 09da A268     		ldr	r2, [r4, #8]	@ _413, MEM[(struct SysTick_Type *)3758153744B].VAL
 1944              	@ main.c:408: 					ve = (((i2reg[0]<<8) | i2reg[1])>>3)*515/128 ;
 1945 09dc 43F3CF10 		sbfx	r0, r3, #7, #16	@ _69, tmp532,,
 1946              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 1947 09e0 194B     		ldr	r3, .L116+12	@ tmp997,
 1948 09e2 1A60     		str	r2, [r3]	@ _413, delay_us
 1949              	.L55:
 1950              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 1951 09e4 184B     		ldr	r3, .L116+12	@ tmp998,
 1952 09e6 1B68     		ldr	r3, [r3]	@ delay_us.70_414, delay_us
 1953 09e8 A268     		ldr	r2, [r4, #8]	@ _415, MEM[(struct SysTick_Type *)3758153744B].VAL
 1954 09ea 9B1A     		subs	r3, r3, r2	@ tmp540, delay_us.70_414, _415
 1955 09ec 8B42     		cmp	r3, r1	@ tmp540, tmp541
 1956 09ee F9D9     		bls	.L55	@,
 1957              	@ main.c:412: 					rw = abs(1000*(ve-vbus)/cur);
 1958 09f0 4FF47A73 		mov	r3, #1000	@ tmp546,
 1959 09f4 164A     		ldr	r2, .L116+20	@ tmp1109,
 1960 09f6 174F     		ldr	r7, .L116+24	@ tmp1002,
 1961 09f8 B2F90020 		ldrsh	r2, [r2]	@ vbus, vbus
 1962 09fc 821A     		subs	r2, r0, r2	@ tmp544, _69, vbus
 1963 09fe 03FB02F3 		mul	r3, r3, r2	@ tmp545, tmp546, tmp544
 1964 0a02 154A     		ldr	r2, .L116+28	@ tmp999,
 1965              	@ main.c:413: 					Rwa[0] += rw;
 1966 0a04 1548     		ldr	r0, .L116+32	@ tmp1000,
 1967              	@ main.c:412: 					rw = abs(1000*(ve-vbus)/cur);
 1968 0a06 B2F90010 		ldrsh	r1, [r2]	@ cur, cur
 1969              	@ main.c:413: 					Rwa[0] += rw;
 1970 0a0a 0268     		ldr	r2, [r0]	@ Rwa, Rwa
 1971              	@ main.c:412: 					rw = abs(1000*(ve-vbus)/cur);
 1972 0a0c 93FBF1F3 		sdiv	r3, r3, r1	@ tmp550, tmp545, cur
 1973              	@ main.c:414: 					Rwa[1] = Rwa[0]/cnt2;
 1974 0a10 0A49     		ldr	r1, .L116	@ tmp1001,
 1975              	@ main.c:412: 					rw = abs(1000*(ve-vbus)/cur);
 1976 0a12 002B     		cmp	r3, #0	@ tmp551,
 1977 0a14 B8BF     		it	lt
 1978 0a16 5B42     		rsblt	r3, r3, #0	@ tmp551, tmp550,
 1979 0a18 1BB2     		sxth	r3, r3	@ _79, tmp551
 1980              	@ main.c:414: 					Rwa[1] = Rwa[0]/cnt2;
 1981 0a1a 0968     		ldr	r1, [r1]	@ cnt2, cnt2
 1982              	@ main.c:413: 					Rwa[0] += rw;
 1983 0a1c 1A44     		add	r2, r2, r3	@ _82, _79
 1984              	@ main.c:414: 					Rwa[1] = Rwa[0]/cnt2;
 1985 0a1e B2FBF1F1 		udiv	r1, r2, r1	@ tmp560, _82, cnt2
 1986              	@ main.c:412: 					rw = abs(1000*(ve-vbus)/cur);
 1987 0a22 3B80     		strh	r3, [r7]	@ movhi	@ _79, rw
 1988              	@ main.c:414: 					Rwa[1] = Rwa[0]/cnt2;
 1989 0a24 C0E90021 		strd	r2, r1, [r0]	@ _82, tmp560, tmp1003
 1990 0a28 2AE6     		b	.L52	@
 1991              	.L105:
 1992              	@ main.c:592: 						if(str[0]=='t') { stat = rok; LAD = 0;	ROZ = 1; }
 1993 0a2a 0122     		movs	r2, #1	@ tmp865,
 1994 0a2c 0C49     		ldr	r1, .L116+36	@ tmp862,
 1995 0a2e 0525     		movs	r5, #5	@ stat,
ARM GAS  /tmp/cczkEFU1.s 			page 36


 1996 0a30 0B60     		str	r3, [r1]	@ tmp863, MEM[(volatile long unsigned int *)1109492148B]
 1997              	@ main.c:577: 						beep= 0;
 1998 0a32 0193     		str	r3, [sp, #4]	@ tmp863, %sfp
 1999              	@ main.c:592: 						if(str[0]=='t') { stat = rok; LAD = 0;	ROZ = 1; }
 2000 0a34 034B     		ldr	r3, .L116+8	@ tmp1072,
 2001 0a36 1A60     		str	r2, [r3]	@ tmp865, MEM[(volatile long unsigned int *)1109492144B]
 2002 0a38 FFF7A6BB 		b	.L83	@
 2003              	.L117:
 2004              		.align	2
 2005              	.L116:
 2006 0a3c 00000000 		.word	.LANCHOR7
 2007 0a40 1FAA4400 		.word	4499999
 2008 0a44 B0812142 		.word	1109492144
 2009 0a48 00000000 		.word	delay_us
 2010 0a4c 1FBF0200 		.word	179999
 2011 0a50 00000000 		.word	.LANCHOR4
 2012 0a54 00000000 		.word	.LANCHOR9
 2013 0a58 00000000 		.word	.LANCHOR8
 2014 0a5c 00000000 		.word	.LANCHOR10
 2015 0a60 B4812142 		.word	1109492148
 2016              		.size	lion_updown, .-lion_updown
 2017              		.section	.text.startup.main,"ax",%progbits
 2018              		.align	1
 2019              		.p2align 2,,3
 2020              		.global	main
 2021              		.syntax unified
 2022              		.thumb
 2023              		.thumb_func
 2024              		.fpu softvfp
 2025              		.type	main, %function
 2026              	main:
 2027              		@ Volatile: function does not return.
 2028              		@ args = 0, pretend = 0, frame = 0
 2029              		@ frame_needed = 0, uses_anonymous_args = 0
 2030              	@ main.c:5710: 	RCC_CR_HSEON_bb = 1;						// enable HSE clock
 2031 0000 0121     		movs	r1, #1	@ tmp123,
 2032              	@ main.c:227: int main(void){
 2033 0002 08B5     		push	{r3, lr}	@
 2034              	@ main.c:5710: 	RCC_CR_HSEON_bb = 1;						// enable HSE clock
 2035 0004 1B4B     		ldr	r3, .L128	@ tmp122,
 2036              	@ main.c:5711: 	while (!RCC_CR_HSERDY_bb);			// wait for stable clock
 2037 0006 1C4A     		ldr	r2, .L128+4	@ tmp124,
 2038              	@ main.c:5710: 	RCC_CR_HSEON_bb = 1;						// enable HSE clock
 2039 0008 1960     		str	r1, [r3]	@ tmp123, MEM[(volatile long unsigned int *)1111621696B]
 2040              	.L119:
 2041              	@ main.c:5711: 	while (!RCC_CR_HSERDY_bb);			// wait for stable clock
 2042 000a 1368     		ldr	r3, [r2]	@ _14, MEM[(volatile long unsigned int *)1111621700B]
 2043 000c 002B     		cmp	r3, #0	@ _14
 2044 000e FCD0     		beq	.L119	@
 2045              	@ main.c:5715: 	RCC_CR_PLLON_bb = 1;						// enable PLL
 2046 0010 0124     		movs	r4, #1	@ tmp129,
 2047              	@ main.c:5713: 	RCC->CFGR |= ((mul - 2)<<RCC_CFGR_PLLMUL_bit)|RCC_CFGR_PLLSRC|RCC_CFGR_PPRE1_DIV2;	
 2048 0012 1A49     		ldr	r1, .L128+8	@ tmp125,
 2049              	@ main.c:5715: 	RCC_CR_PLLON_bb = 1;						// enable PLL
 2050 0014 1A48     		ldr	r0, .L128+12	@ tmp128,
 2051              	@ main.c:5713: 	RCC->CFGR |= ((mul - 2)<<RCC_CFGR_PLLMUL_bit)|RCC_CFGR_PLLSRC|RCC_CFGR_PPRE1_DIV2;	
 2052 0016 4B68     		ldr	r3, [r1, #4]	@ _15, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
ARM GAS  /tmp/cczkEFU1.s 			page 37


 2053              	@ main.c:5716: 	while (!RCC_CR_PLLRDY_bb);			// wait for PLL lock
 2054 0018 1A4A     		ldr	r2, .L128+16	@ tmp130,
 2055              	@ main.c:5713: 	RCC->CFGR |= ((mul - 2)<<RCC_CFGR_PLLMUL_bit)|RCC_CFGR_PLLSRC|RCC_CFGR_PPRE1_DIV2;	
 2056 001a 43F4E813 		orr	r3, r3, #1900544	@ _20, _15,
 2057 001e 43F48063 		orr	r3, r3, #1024	@ _20, _20,
 2058 0022 4B60     		str	r3, [r1, #4]	@ _20, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 2059              	@ main.c:5715: 	RCC_CR_PLLON_bb = 1;						// enable PLL
 2060 0024 0460     		str	r4, [r0]	@ tmp129, MEM[(volatile long unsigned int *)1111621728B]
 2061              	.L120:
 2062              	@ main.c:5716: 	while (!RCC_CR_PLLRDY_bb);			// wait for PLL lock
 2063 0026 1368     		ldr	r3, [r2]	@ _21, MEM[(volatile long unsigned int *)1111621732B]
 2064 0028 002B     		cmp	r3, #0	@ _21
 2065 002a FCD0     		beq	.L120	@
 2066              	@ main.c:5718: 	RCC->CFGR |= RCC_CFGR_SW_PLL;		// change SYSCLK to PLL
 2067 002c 134B     		ldr	r3, .L128+8	@ tmp131,
 2068              	@ main.c:5719: 	while (((RCC->CFGR) & RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);	// wait for switch
 2069 002e 1A46     		mov	r2, r3	@ tmp133, tmp131
 2070              	@ main.c:5718: 	RCC->CFGR |= RCC_CFGR_SW_PLL;		// change SYSCLK to PLL
 2071 0030 5968     		ldr	r1, [r3, #4]	@ _22, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 2072 0032 41F00201 		orr	r1, r1, #2	@ _23, _22,
 2073 0036 5960     		str	r1, [r3, #4]	@ _23, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 2074              	.L121:
 2075              	@ main.c:5719: 	while (((RCC->CFGR) & RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);	// wait for switch
 2076 0038 5368     		ldr	r3, [r2, #4]	@ _24, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 2077 003a 03F00C03 		and	r3, r3, #12	@ tmp134, _24,
 2078 003e 082B     		cmp	r3, #8	@ tmp134,
 2079 0040 FAD1     		bne	.L121	@,
 2080              	@ main.c:5722: 	RCC->APB2ENR = RCC_APB2ENR_IOPAEN | RCC_APB2ENR_IOPBEN | RCC_APB2ENR_IOPCEN | RCC_A
 2081 0042 1D20     		movs	r0, #29	@ tmp138,
 2082              	@ main.c:186: 	SCB->VTOR = NVIC_VectTab_RAM;
 2083 0044 4FF00056 		mov	r6, #536870912	@ tmp136,
 2084              	@ main.c:194: 	AFIO->MAPR = AFIO_MAPR_SWJ_CFG_1; // enable pin PA15=JTDI,PB3=JTDO,PB4=JNTRST,
 2085 0048 4FF00075 		mov	r5, #33554432	@ tmp140,
 2086              	@ main.c:5516: 	SysTick->CTRL = SysTick_CTRL_TICKINT|SysTick_CTRL_ENABLE; // enable SysTick
 2087 004c 0321     		movs	r1, #3	@ tmp144,
 2088              	@ main.c:186: 	SCB->VTOR = NVIC_VectTab_RAM;
 2089 004e 0E4B     		ldr	r3, .L128+20	@ tmp135,
 2090              	@ main.c:194: 	AFIO->MAPR = AFIO_MAPR_SWJ_CFG_1; // enable pin PA15=JTDI,PB3=JTDO,PB4=JNTRST,
 2091 0050 0E4C     		ldr	r4, .L128+24	@ tmp139,
 2092              	@ main.c:186: 	SCB->VTOR = NVIC_VectTab_RAM;
 2093 0052 9E60     		str	r6, [r3, #8]	@ tmp136, MEM[(struct SCB_Type *)3758157056B].VTOR
 2094              	@ main.c:5722: 	RCC->APB2ENR = RCC_APB2ENR_IOPAEN | RCC_APB2ENR_IOPBEN | RCC_APB2ENR_IOPCEN | RCC_A
 2095 0054 9061     		str	r0, [r2, #24]	@ tmp138, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 2096              	@ main.c:5515: 	SysTick->LOAD = STCLK_LD - 1;    // 72/8/SysTick_LOAD interrupt every x s
 2097 0056 0E48     		ldr	r0, .L128+28	@ tmp142,
 2098 0058 A3F54F63 		sub	r3, r3, #3312	@ tmp141, tmp141,
 2099              	@ main.c:231: 		 GPIOC->CRH = (GPIOC->CRH & 0xff0fffff) | 0x00100000;	// LED Blue  PC13		
 2100 005c 0D4A     		ldr	r2, .L128+32	@ tmp145,
 2101              	@ main.c:194: 	AFIO->MAPR = AFIO_MAPR_SWJ_CFG_1; // enable pin PA15=JTDI,PB3=JTDO,PB4=JNTRST,
 2102 005e 6560     		str	r5, [r4, #4]	@ tmp140, MEM[(struct AFIO_TypeDef *)1073807360B].MAPR
 2103              	@ main.c:5515: 	SysTick->LOAD = STCLK_LD - 1;    // 72/8/SysTick_LOAD interrupt every x s
 2104 0060 5860     		str	r0, [r3, #4]	@ tmp142, MEM[(struct SysTick_Type *)3758153744B].LOAD
 2105              	@ main.c:5516: 	SysTick->CTRL = SysTick_CTRL_TICKINT|SysTick_CTRL_ENABLE; // enable SysTick
 2106 0062 1960     		str	r1, [r3]	@ tmp144, MEM[(struct SysTick_Type *)3758153744B].CTRL
 2107              	@ main.c:231: 		 GPIOC->CRH = (GPIOC->CRH & 0xff0fffff) | 0x00100000;	// LED Blue  PC13		
 2108 0064 5368     		ldr	r3, [r2, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 2109 0066 23F47003 		bic	r3, r3, #15728640	@ tmp146, _1,
ARM GAS  /tmp/cczkEFU1.s 			page 38


 2110 006a 43F48013 		orr	r3, r3, #1048576	@ _3, tmp146,
 2111 006e 5360     		str	r3, [r2, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 2112              	@ main.c:240: 		lion_updown();
 2113 0070 FFF7FEFF 		bl	lion_updown	@
 2114              	.L129:
 2115              		.align	2
 2116              	.L128:
 2117 0074 40004242 		.word	1111621696
 2118 0078 44004242 		.word	1111621700
 2119 007c 00100240 		.word	1073876992
 2120 0080 60004242 		.word	1111621728
 2121 0084 64004242 		.word	1111621732
 2122 0088 00ED00E0 		.word	-536810240
 2123 008c 00000140 		.word	1073807360
 2124 0090 3F548900 		.word	8999999
 2125 0094 00100140 		.word	1073811456
 2126              		.size	main, .-main
 2127              		.section	.text.uht,"ax",%progbits
 2128              		.align	1
 2129              		.p2align 2,,3
 2130              		.global	uht
 2131              		.syntax unified
 2132              		.thumb
 2133              		.thumb_func
 2134              		.fpu softvfp
 2135              		.type	uht, %function
 2136              	uht:
 2137              		@ args = 0, pretend = 0, frame = 0
 2138              		@ frame_needed = 0, uses_anonymous_args = 0
 2139              		@ link register save eliminated.
 2140              	@ main.c:652: 		GPIOB->CRL = (GPIOB->CRL & 0xffffff0f) | 0x00000060;
 2141 0000 034A     		ldr	r2, .L131	@ tmp113,
 2142 0002 1368     		ldr	r3, [r2]	@ _1, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2143 0004 23F0F003 		bic	r3, r3, #240	@ tmp114, _1,
 2144 0008 43F06003 		orr	r3, r3, #96	@ _3, tmp114,
 2145 000c 1360     		str	r3, [r2]	@ _3, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2146              	@ main.c:721: 	} 
 2147 000e 7047     		bx	lr	@
 2148              	.L132:
 2149              		.align	2
 2150              	.L131:
 2151 0010 000C0140 		.word	1073810432
 2152              		.size	uht, .-uht
 2153              		.section	.text.rtc_calibrate,"ax",%progbits
 2154              		.align	1
 2155              		.p2align 2,,3
 2156              		.global	rtc_calibrate
 2157              		.syntax unified
 2158              		.thumb
 2159              		.thumb_func
 2160              		.fpu softvfp
 2161              		.type	rtc_calibrate, %function
 2162              	rtc_calibrate:
 2163              		@ args = 0, pretend = 0, frame = 24
 2164              		@ frame_needed = 0, uses_anonymous_args = 0
 2165 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}	@
 2166 0004 87B0     		sub	sp, sp, #28	@,,
ARM GAS  /tmp/cczkEFU1.s 			page 39


 2167              	@ main.c:727: 		RtcInit();
 2168 0006 FFF7FEFF 		bl	RtcInit	@
 2169              	@ main.c:728: 		i2c1_init();
 2170 000a FFF7FEFF 		bl	i2c1_init	@
 2171              	@ main.c:729: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 2172 000e 3D48     		ldr	r0, .L156	@ tmp140,
 2173              	@ main.c:730: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2174 0010 3D49     		ldr	r1, .L156+4	@ tmp145,
 2175              	@ main.c:729: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 2176 0012 4368     		ldr	r3, [r0, #4]	@ _2, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 2177              	@ main.c:732: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 2178 0014 3D4A     		ldr	r2, .L156+8	@ tmp148,
 2179              	@ main.c:729: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 2180 0016 23F0F023 		bic	r3, r3, #-268374016	@ tmp141, _2,
 2181 001a 23F47023 		bic	r3, r3, #983040	@ tmp141, tmp141,
 2182 001e 43F01023 		orr	r3, r3, #268439552	@ _4, tmp141,
 2183 0022 43F48033 		orr	r3, r3, #65536	@ _4, _4,
 2184 0026 4360     		str	r3, [r0, #4]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 2185              	@ main.c:730: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2186 0028 0B68     		ldr	r3, [r1]	@ _5, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2187              	@ main.c:736: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 2188 002a 3948     		ldr	r0, .L156+12	@ tmp157,
 2189              	@ main.c:730: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2190 002c 23F47F23 		bic	r3, r3, #1044480	@ tmp146, _5,
 2191 0030 43F48833 		orr	r3, r3, #69632	@ _7, tmp146,
 2192              	@ main.c:732: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 2193 0034 374F     		ldr	r7, .L156+16	@ tmp149,
 2194              	@ main.c:733: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 2195 0036 384E     		ldr	r6, .L156+20	@ tmp151,
 2196              	@ main.c:734: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 2197 0038 384D     		ldr	r5, .L156+24	@ tmp153,
 2198              	@ main.c:735: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 2199 003a 394C     		ldr	r4, .L156+28	@ tmp155,
 2200              	@ main.c:730: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2201 003c 0B60     		str	r3, [r1]	@ _7, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2202              	@ main.c:732: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 2203 003e 5760     		str	r7, [r2, #4]	@ tmp149, oled_hw.sck
 2204              	@ main.c:733: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 2205 0040 1660     		str	r6, [r2]	@ tmp151, oled_hw.mosi
 2206              	@ main.c:734: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 2207 0042 9560     		str	r5, [r2, #8]	@ tmp153, oled_hw.dc
 2208              	@ main.c:735: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 2209 0044 D460     		str	r4, [r2, #12]	@ tmp155, oled_hw.cs
 2210              	@ main.c:736: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 2211 0046 1061     		str	r0, [r2, #16]	@ tmp157, oled_hw.rst
 2212              	@ main.c:739: 		ssd1306_init();
 2213 0048 FFF7FEFF 		bl	ssd1306_init	@
 2214              	@ main.c:756: 		num2uart (tim/TIM_US,7,0);	
 2215 004c 0022     		movs	r2, #0	@,
 2216 004e 0721     		movs	r1, #7	@,
 2217 0050 1046     		mov	r0, r2	@,
 2218 0052 FFF7FEFF 		bl	num2uart	@
 2219              	@ main.c:759: 		num2uart (tim4,8,1);	
 2220 0056 0122     		movs	r2, #1	@,
 2221 0058 0821     		movs	r1, #8	@,
 2222 005a 0298     		ldr	r0, [sp, #8]	@, tim4
 2223 005c FFF7FEFF 		bl	num2uart	@
ARM GAS  /tmp/cczkEFU1.s 			page 40


 2224              	@ main.c:777: 				while(!iPB5)
 2225 0060 04F5FE44 		add	r4, r4, #32512	@ tmp173, tmp173,
 2226 0064 DFF8C880 		ldr	r8, .L156+44	@ tmp194,
 2227 0068 2E4E     		ldr	r6, .L156+32	@ tmp195,
 2228 006a 2F4F     		ldr	r7, .L156+36	@ tmp197,
 2229              	@ main.c:764: 			if( TIM_MS*500 < (trg0 - SysTick->VAL) ){
 2230 006c 2F4D     		ldr	r5, .L156+40	@ tmp163,
 2231 006e DFF8C490 		ldr	r9, .L156+48	@ tmp165,
 2232              	@ main.c:777: 				while(!iPB5)
 2233 0072 6834     		adds	r4, r4, #104	@ tmp173, tmp173,
 2234              	.L134:
 2235              	@ main.c:764: 			if( TIM_MS*500 < (trg0 - SysTick->VAL) ){
 2236 0074 D8F80030 		ldr	r3, [r8]	@ trg0.79_10, trg0
 2237 0078 AA68     		ldr	r2, [r5, #8]	@ _11, MEM[(struct SysTick_Type *)3758153744B].VAL
 2238 007a 9B1A     		subs	r3, r3, r2	@ tmp164, trg0.79_10, _11
 2239 007c 4B45     		cmp	r3, r9	@ tmp164, tmp165
 2240 007e F9D9     		bls	.L134	@,
 2241              	@ main.c:765: 				trg0 = SysTick->VAL; 
 2242 0080 D5F808C0 		ldr	ip, [r5, #8]	@ _13, MEM[(struct SysTick_Type *)3758153744B].VAL
 2243              	@ main.c:767: 				i2c1_read( DS3231_ADDR,0,tm,3);
 2244 0084 0323     		movs	r3, #3	@,
 2245 0086 01AA     		add	r2, sp, #4	@ tmp203,,
 2246 0088 0021     		movs	r1, #0	@,
 2247 008a D020     		movs	r0, #208	@,
 2248              	@ main.c:765: 				trg0 = SysTick->VAL; 
 2249 008c C8F800C0 		str	ip, [r8]	@ _13, trg0
 2250              	@ main.c:767: 				i2c1_read( DS3231_ADDR,0,tm,3);
 2251 0090 FFF7FEFF 		bl	i2c1_read	@
 2252              	@ main.c:772: 				i2c1_read( DS3231_ADDR,0x0e,&ContReg,1);
 2253 0094 0123     		movs	r3, #1	@,
 2254 0096 0DF10302 		add	r2, sp, #3	@ tmp204,,
 2255 009a 0E21     		movs	r1, #14	@,
 2256 009c D020     		movs	r0, #208	@,
 2257 009e FFF7FEFF 		bl	i2c1_read	@
 2258              	.L135:
 2259              	@ main.c:777: 				while(!iPB5)
 2260 00a2 2368     		ldr	r3, [r4]	@ _15, MEM[(volatile long unsigned int *)1109491988B]
 2261 00a4 2BB9     		cbnz	r3, .L137	@ _15,
 2262              	.L153:
 2263              	@ main.c:778: 				while(iPB5) 	TIM_start();
 2264 00a6 2368     		ldr	r3, [r4]	@ _14,
 2265 00a8 002B     		cmp	r3, #0	@ _14
 2266 00aa FAD0     		beq	.L135	@
 2267              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 2268 00ac AB68     		ldr	r3, [r5, #8]	@ _46, MEM[(struct SysTick_Type *)3758153744B].VAL
 2269 00ae 3360     		str	r3, [r6]	@ _46, Timt
 2270 00b0 F9E7     		b	.L153	@
 2271              	.L137:
 2272              	@ main.c:779: 				while(!iPB5)
 2273 00b2 2368     		ldr	r3, [r4]	@ _17, MEM[(volatile long unsigned int *)1109491988B]
 2274 00b4 3BB9     		cbnz	r3, .L140	@ _17,
 2275              	.L155:
 2276              	@ main.c:780: 				while(iPB5)	TIM_stop(&tim4);
 2277 00b6 2368     		ldr	r3, [r4]	@ _16,
 2278 00b8 002B     		cmp	r3, #0	@ _16
 2279 00ba FAD0     		beq	.L137	@
 2280              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
ARM GAS  /tmp/cczkEFU1.s 			page 41


 2281 00bc 3368     		ldr	r3, [r6]	@ Timt.82_47, Timt
 2282 00be AA68     		ldr	r2, [r5, #8]	@ _48, MEM[(struct SysTick_Type *)3758153744B].VAL
 2283 00c0 9B1A     		subs	r3, r3, r2	@ _49, Timt.82_47, _48
 2284 00c2 0293     		str	r3, [sp, #8]	@ _49, MEM[(volatile u32 *)&tim4]
 2285 00c4 F7E7     		b	.L155	@
 2286              	.L140:
 2287              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 2288 00c6 40F25241 		movw	r1, #1106	@ tmp187,
 2289              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 2290 00ca AB68     		ldr	r3, [r5, #8]	@ _54, MEM[(struct SysTick_Type *)3758153744B].VAL
 2291 00cc 3360     		str	r3, [r6]	@ _54, Timt
 2292              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 2293 00ce AB68     		ldr	r3, [r5, #8]	@ _50, MEM[(struct SysTick_Type *)3758153744B].VAL
 2294 00d0 3B60     		str	r3, [r7]	@ _50, delay_us
 2295              	.L142:
 2296              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 2297 00d2 3B68     		ldr	r3, [r7]	@ delay_us.83_51, delay_us
 2298 00d4 AA68     		ldr	r2, [r5, #8]	@ _52, MEM[(struct SysTick_Type *)3758153744B].VAL
 2299 00d6 9B1A     		subs	r3, r3, r2	@ tmp186, delay_us.83_51, _52
 2300 00d8 8B42     		cmp	r3, r1	@ tmp186, tmp187
 2301 00da FAD9     		bls	.L142	@,
 2302              	@ main.c:785: 				int2str(tim4,tbuf,6,0); 
 2303 00dc 03A9     		add	r1, sp, #12	@ tmp205,,
 2304 00de 0023     		movs	r3, #0	@,
 2305 00e0 0622     		movs	r2, #6	@,
 2306 00e2 0298     		ldr	r0, [sp, #8]	@, tim4
 2307 00e4 FFF7FEFF 		bl	int2str	@
 2308              	@ main.c:786: 				int2str(123,tbuf,6,0); 
 2309 00e8 0023     		movs	r3, #0	@,
 2310 00ea 03A9     		add	r1, sp, #12	@ tmp206,,
 2311 00ec 0622     		movs	r2, #6	@,
 2312 00ee 7B20     		movs	r0, #123	@,
 2313 00f0 FFF7FEFF 		bl	int2str	@
 2314              	@ main.c:788: 				oled_str16(0,0,tbuf);
 2315 00f4 0021     		movs	r1, #0	@,
 2316 00f6 03AA     		add	r2, sp, #12	@ tmp207,,
 2317 00f8 0846     		mov	r0, r1	@,
 2318 00fa FFF7FEFF 		bl	oled_str16	@
 2319              	@ main.c:792: 				oled_refresh_gram();
 2320 00fe FFF7FEFF 		bl	oled_refresh_gram	@
 2321 0102 B7E7     		b	.L134	@
 2322              	.L157:
 2323              		.align	2
 2324              	.L156:
 2325 0104 00080140 		.word	1073809408
 2326 0108 000C0140 		.word	1073810432
 2327 010c 00000000 		.word	oled_hw
 2328 0110 BC012142 		.word	1109459388
 2329 0114 90812142 		.word	1109492112
 2330 0118 8C812142 		.word	1109492108
 2331 011c B0012142 		.word	1109459376
 2332 0120 AC012142 		.word	1109459372
 2333 0124 00000000 		.word	Timt
 2334 0128 00000000 		.word	delay_us
 2335 012c 10E000E0 		.word	-536813552
 2336 0130 00000000 		.word	trg0
 2337 0134 20AA4400 		.word	4500000
ARM GAS  /tmp/cczkEFU1.s 			page 42


 2338              		.size	rtc_calibrate, .-rtc_calibrate
 2339              		.section	.text.testwsk,"ax",%progbits
 2340              		.align	1
 2341              		.p2align 2,,3
 2342              		.global	testwsk
 2343              		.syntax unified
 2344              		.thumb
 2345              		.thumb_func
 2346              		.fpu softvfp
 2347              		.type	testwsk, %function
 2348              	testwsk:
 2349              		@ args = 0, pretend = 0, frame = 0
 2350              		@ frame_needed = 0, uses_anonymous_args = 0
 2351              		@ link register save eliminated.
 2352              	@ main.c:810: 	}
 2353 0000 7047     		bx	lr	@
 2354              		.size	testwsk, .-testwsk
 2355 0002 00BF     		.section	.text.veml6075,"ax",%progbits
 2356              		.align	1
 2357              		.p2align 2,,3
 2358              		.global	veml6075
 2359              		.syntax unified
 2360              		.thumb
 2361              		.thumb_func
 2362              		.fpu softvfp
 2363              		.type	veml6075, %function
 2364              	veml6075:
 2365              		@ args = 0, pretend = 0, frame = 16
 2366              		@ frame_needed = 0, uses_anonymous_args = 0
 2367              	@ main.c:814: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='l';
 2368 0000 0123     		movs	r3, #1	@ tmp128,
 2369 0002 6C20     		movs	r0, #108	@ tmp131,
 2370 0004 264A     		ldr	r2, .L164	@ tmp126,
 2371              	@ main.c:831: 		LED=1;
 2372 0006 2749     		ldr	r1, .L164+4	@ tmp133,
 2373              	@ main.c:814: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='l';
 2374 0008 1268     		ldr	r2, [r2]	@ p_Fifo1.84_1, p_Fifo1
 2375              	@ main.c:811: void veml6075(void){
 2376 000a 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 2377              	@ main.c:833: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 2378 000e 264C     		ldr	r4, .L164+8	@ tmp135,
 2379              	@ main.c:814: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='l';
 2380 0010 9380     		strh	r3, [r2, #4]	@ movhi	@ tmp128, p_Fifo1.84_1->rct
 2381 0012 5380     		strh	r3, [r2, #2]	@ movhi	@ tmp128, p_Fifo1.84_1->rwi
 2382 0014 9071     		strb	r0, [r2, #6]	@ tmp131, p_Fifo1.84_1->rbuf
 2383              	@ main.c:831: 		LED=1;
 2384 0016 0B60     		str	r3, [r1]	@ tmp128, MEM[(volatile long unsigned int *)1109524916B]
 2385              	@ main.c:833: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 2386 0018 6368     		ldr	r3, [r4, #4]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 2387              	@ main.c:834: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2388 001a 2448     		ldr	r0, .L164+12	@ tmp140,
 2389              	@ main.c:833: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 2390 001c 23F0F023 		bic	r3, r3, #-268374016	@ tmp136, _4,
 2391 0020 23F47023 		bic	r3, r3, #983040	@ tmp136, tmp136,
 2392 0024 43F01023 		orr	r3, r3, #268439552	@ _6, tmp136,
 2393 0028 43F48033 		orr	r3, r3, #65536	@ _6, _6,
 2394 002c 6360     		str	r3, [r4, #4]	@ _6, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
ARM GAS  /tmp/cczkEFU1.s 			page 43


 2395              	@ main.c:834: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2396 002e 0268     		ldr	r2, [r0]	@ _7, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2397              	@ main.c:836: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 2398 0030 1F4B     		ldr	r3, .L164+16	@ tmp143,
 2399              	@ main.c:834: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2400 0032 22F47F22 		bic	r2, r2, #1044480	@ tmp141, _7,
 2401 0036 42F48832 		orr	r2, r2, #69632	@ _9, tmp141,
 2402 003a 0260     		str	r2, [r0]	@ _9, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2403              	@ main.c:836: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 2404 003c 1D4E     		ldr	r6, .L164+20	@ tmp144,
 2405              	@ main.c:839: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 2406 003e 1E48     		ldr	r0, .L164+24	@ tmp150,
 2407              	@ main.c:840: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 2408 0040 1E4A     		ldr	r2, .L164+28	@ tmp152,
 2409              	@ main.c:837: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 2410 0042 1F4D     		ldr	r5, .L164+32	@ tmp146,
 2411              	@ main.c:838: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 2412 0044 1F4C     		ldr	r4, .L164+36	@ tmp148,
 2413              	@ main.c:811: void veml6075(void){
 2414 0046 84B0     		sub	sp, sp, #16	@,,
 2415              	@ main.c:836: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 2416 0048 5E60     		str	r6, [r3, #4]	@ tmp144, oled_hw.sck
 2417              	@ main.c:866: 				LED^=1;
 2418 004a 8846     		mov	r8, r1	@ tmp163, tmp133
 2419              	@ main.c:837: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 2420 004c 1D60     		str	r5, [r3]	@ tmp146, oled_hw.mosi
 2421              	@ main.c:858: 		oled_refresh_gram();
 2422 004e 0027     		movs	r7, #0	@ ivtmp.438,
 2423              	@ main.c:838: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 2424 0050 9C60     		str	r4, [r3, #8]	@ tmp148, oled_hw.dc
 2425              	@ main.c:839: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 2426 0052 D860     		str	r0, [r3, #12]	@ tmp150, oled_hw.cs
 2427              	@ main.c:840: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 2428 0054 1A61     		str	r2, [r3, #16]	@ tmp152, oled_hw.rst
 2429              	@ main.c:843: 		ssd1306_init();
 2430 0056 FFF7FEFF 		bl	ssd1306_init	@
 2431              	@ main.c:858: 		oled_refresh_gram();
 2432 005a FFF7FEFF 		bl	oled_refresh_gram	@
 2433 005e 1A4D     		ldr	r5, .L164+40	@ tmp166,
 2434              	@ main.c:861: 			if(STCLK_MS*20 < (trg0 - SysTick->VAL)){	
 2435 0060 1A4C     		ldr	r4, .L164+44	@ tmp154,
 2436 0062 1B4E     		ldr	r6, .L164+48	@ tmp156,
 2437              	.L160:
 2438 0064 2B68     		ldr	r3, [r5]	@ trg0.87_10, trg0
 2439 0066 A268     		ldr	r2, [r4, #8]	@ _11, MEM[(struct SysTick_Type *)3758153744B].VAL
 2440 0068 9B1A     		subs	r3, r3, r2	@ tmp155, trg0.87_10, _11
 2441 006a B342     		cmp	r3, r6	@ tmp155, tmp156
 2442 006c FAD9     		bls	.L160	@,
 2443              	@ main.c:862: 				trg0  = SysTick->VAL;	
 2444 006e D4F808C0 		ldr	ip, [r4, #8]	@ _13, MEM[(struct SysTick_Type *)3758153744B].VAL
 2445              	@ main.c:863: 				int2str(cnt++ ,tbuf,5,0);		oled_num24(0,0,tbuf);
 2446 0072 0023     		movs	r3, #0	@,
 2447 0074 0522     		movs	r2, #5	@,
 2448 0076 01A9     		add	r1, sp, #4	@ tmp167,,
 2449 0078 B8B2     		uxth	r0, r7	@, ivtmp.438
 2450              	@ main.c:862: 				trg0  = SysTick->VAL;	
 2451 007a C5F800C0 		str	ip, [r5]	@ _13, trg0
ARM GAS  /tmp/cczkEFU1.s 			page 44


 2452              	@ main.c:863: 				int2str(cnt++ ,tbuf,5,0);		oled_num24(0,0,tbuf);
 2453 007e FFF7FEFF 		bl	int2str	@
 2454 0082 0021     		movs	r1, #0	@,
 2455 0084 01AA     		add	r2, sp, #4	@ tmp168,,
 2456 0086 0846     		mov	r0, r1	@,
 2457 0088 FFF7FEFF 		bl	oled_num24	@
 2458              	@ main.c:864: 				oled_refresh_gram();	
 2459 008c FFF7FEFF 		bl	oled_refresh_gram	@
 2460              	@ main.c:866: 				LED^=1;
 2461 0090 D8F80030 		ldr	r3, [r8]	@ _16, MEM[(volatile long unsigned int *)1109524916B]
 2462 0094 0137     		adds	r7, r7, #1	@ ivtmp.438, ivtmp.438,
 2463 0096 83F00103 		eor	r3, r3, #1	@ _17, _16,
 2464 009a C8F80030 		str	r3, [r8]	@ _17, MEM[(volatile long unsigned int *)1109524916B]
 2465 009e E1E7     		b	.L160	@
 2466              	.L165:
 2467              		.align	2
 2468              	.L164:
 2469 00a0 00000000 		.word	p_Fifo1
 2470 00a4 B4012242 		.word	1109524916
 2471 00a8 00080140 		.word	1073809408
 2472 00ac 000C0140 		.word	1073810432
 2473 00b0 00000000 		.word	oled_hw
 2474 00b4 90812142 		.word	1109492112
 2475 00b8 AC012142 		.word	1109459372
 2476 00bc BC012142 		.word	1109459388
 2477 00c0 8C812142 		.word	1109492108
 2478 00c4 B0012142 		.word	1109459376
 2479 00c8 00000000 		.word	trg0
 2480 00cc 10E000E0 		.word	-536813552
 2481 00d0 20BF0200 		.word	180000
 2482              		.size	veml6075, .-veml6075
 2483              		.section	.text.softSPI_w,"ax",%progbits
 2484              		.align	1
 2485              		.p2align 2,,3
 2486              		.global	softSPI_w
 2487              		.syntax unified
 2488              		.thumb
 2489              		.thumb_func
 2490              		.fpu softvfp
 2491              		.type	softSPI_w, %function
 2492              	softSPI_w:
 2493              		@ args = 0, pretend = 0, frame = 0
 2494              		@ frame_needed = 0, uses_anonymous_args = 0
 2495 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}	@
 2496              	@ main.c:986: 			if (byte & 0x80)			wMOSI = 1;
 2497 0004 4FF0010E 		mov	lr, #1	@ tmp152,
 2498              	@ main.c:982: uint8_t softSPI_w(uint8_t byte)	{
 2499 0008 0824     		movs	r4, #8	@ ivtmp_5,
 2500              	@ main.c:990: 			wSCK = 1; /* a slave latches input data bit */
 2501 000a F046     		mov	r8, lr	@ MEM[(volatile long unsigned int *)1109459348B], tmp152
 2502              	@ main.c:987: 			else			wMOSI = 0;
 2503 000c 0026     		movs	r6, #0	@ tmp151,
 2504 000e 1549     		ldr	r1, .L180	@ tmp149,
 2505 0010 DFF85CC0 		ldr	ip, .L180+12	@ tmp150,
 2506              	@ main.c:990: 			wSCK = 1; /* a slave latches input data bit */
 2507 0014 144D     		ldr	r5, .L180+4	@ tmp131,
 2508              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
ARM GAS  /tmp/cczkEFU1.s 			page 45


 2509 0016 154A     		ldr	r2, .L180+8	@ tmp133,
 2510              	@ main.c:992: 			if (wMISO)			byte |= 0x01;
 2511 0018 DFF85890 		ldr	r9, .L180+16	@ tmp138,
 2512              	.L172:
 2513              	@ main.c:986: 			if (byte & 0x80)			wMOSI = 1;
 2514 001c 0306     		lsls	r3, r0, #24	@, byte,
 2515 001e 4CBF     		ite	mi
 2516 0020 CCF800E0 		strmi	lr, [ip]	@ tmp152, MEM[(volatile long unsigned int *)1109459356B]
 2517              	@ main.c:987: 			else			wMOSI = 0;
 2518 0024 CCF80060 		strpl	r6, [ip]	@ tmp151, MEM[(volatile long unsigned int *)1109459356B]
 2519              	@ main.c:990: 			wSCK = 1; /* a slave latches input data bit */
 2520 0028 C5F80080 		str	r8, [r5]	@ MEM[(volatile long unsigned int *)1109459348B], MEM[(volatile long unsigned int *)1
 2521              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 2522 002c 9368     		ldr	r3, [r2, #8]	@ _18, MEM[(struct SysTick_Type *)3758153744B].VAL
 2523              	@ main.c:989: 			byte <<= 1;
 2524 002e 4000     		lsls	r0, r0, #1	@ tmp130, byte,
 2525 0030 C0B2     		uxtb	r0, r0	@ byte, tmp130
 2526              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 2527 0032 0B60     		str	r3, [r1]	@ _18, delay_us
 2528              	.L169:
 2529              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 2530 0034 0B68     		ldr	r3, [r1]	@ delay_us.83_19, delay_us
 2531 0036 9768     		ldr	r7, [r2, #8]	@ _20, MEM[(struct SysTick_Type *)3758153744B].VAL
 2532 0038 DB1B     		subs	r3, r3, r7	@ tmp137, delay_us.83_19, _20
 2533 003a 592B     		cmp	r3, #89	@ tmp137,
 2534 003c FAD9     		bls	.L169	@,
 2535              	@ main.c:992: 			if (wMISO)			byte |= 0x01;
 2536 003e D9F80030 		ldr	r3, [r9]	@ _2, MEM[(volatile long unsigned int *)1109459224B]
 2537 0042 0BB1     		cbz	r3, .L170	@ _2,
 2538              	@ main.c:992: 			if (wMISO)			byte |= 0x01;
 2539 0044 40F00100 		orr	r0, r0, #1	@ byte, byte,
 2540              	.L170:
 2541              	@ main.c:994: 			wSCK = 0; /* a slave shifts out next output data bit */
 2542 0048 2E60     		str	r6, [r5]	@ tmp151, MEM[(volatile long unsigned int *)1109459348B]
 2543              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 2544 004a 9368     		ldr	r3, [r2, #8]	@ _22, MEM[(struct SysTick_Type *)3758153744B].VAL
 2545 004c 0B60     		str	r3, [r1]	@ _22, delay_us
 2546              	.L171:
 2547              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 2548 004e 0B68     		ldr	r3, [r1]	@ delay_us.83_23, delay_us
 2549 0050 9768     		ldr	r7, [r2, #8]	@ _24, MEM[(struct SysTick_Type *)3758153744B].VAL
 2550 0052 DB1B     		subs	r3, r3, r7	@ tmp146, delay_us.83_23, _24
 2551 0054 592B     		cmp	r3, #89	@ tmp146,
 2552 0056 FAD9     		bls	.L171	@,
 2553 0058 013C     		subs	r4, r4, #1	@ tmp147, ivtmp_5,
 2554              	@ main.c:984: 		for(counter = 8; counter; counter--)
 2555 005a 14F0FF04 		ands	r4, r4, #255	@ ivtmp_5, tmp147,
 2556 005e DDD1     		bne	.L172	@,
 2557              	@ main.c:998: 	}
 2558 0060 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}	@
 2559              	.L181:
 2560              		.align	2
 2561              	.L180:
 2562 0064 00000000 		.word	delay_us
 2563 0068 94012142 		.word	1109459348
 2564 006c 10E000E0 		.word	-536813552
 2565 0070 9C012142 		.word	1109459356
ARM GAS  /tmp/cczkEFU1.s 			page 46


 2566 0074 18012142 		.word	1109459224
 2567              		.size	softSPI_w, .-softSPI_w
 2568              		.section	.text.softSPI_r,"ax",%progbits
 2569              		.align	1
 2570              		.p2align 2,,3
 2571              		.global	softSPI_r
 2572              		.syntax unified
 2573              		.thumb
 2574              		.thumb_func
 2575              		.fpu softvfp
 2576              		.type	softSPI_r, %function
 2577              	softSPI_r:
 2578              		@ args = 0, pretend = 0, frame = 0
 2579              		@ frame_needed = 0, uses_anonymous_args = 0
 2580              		@ link register save eliminated.
 2581              	@ main.c:1005: 			else				wMOSI = 0;
 2582 0000 4FF0000C 		mov	ip, #0	@ tmp132,
 2583              	@ main.c:1000: uint8_t softSPI_r(uint8_t byte)	{
 2584 0004 F0B4     		push	{r4, r5, r6, r7}	@
 2585              	@ main.c:1000: uint8_t softSPI_r(uint8_t byte)	{
 2586 0006 0823     		movs	r3, #8	@ ivtmp_5,
 2587              	@ main.c:1007: 			wSCK = 0; /* a slave shifts out output data bit */
 2588 0008 6746     		mov	r7, ip	@ MEM[(volatile long unsigned int *)1109459348B], tmp132
 2589              	@ main.c:1004: 			if (byte & 0x80)			wMOSI = 1;
 2590 000a 0124     		movs	r4, #1	@ tmp133,
 2591              	@ main.c:1005: 			else				wMOSI = 0;
 2592 000c 0A4E     		ldr	r6, .L192	@ tmp131,
 2593              	@ main.c:1007: 			wSCK = 0; /* a slave shifts out output data bit */
 2594 000e 0B4A     		ldr	r2, .L192+4	@ tmp122,
 2595              	@ main.c:1010: 			if (wMISO)		byte |= 0x01;
 2596 0010 0B4D     		ldr	r5, .L192+8	@ tmp125,
 2597              	.L186:
 2598              	@ main.c:1004: 			if (byte & 0x80)			wMOSI = 1;
 2599 0012 0106     		lsls	r1, r0, #24	@, byte,
 2600 0014 4CBF     		ite	mi
 2601 0016 3460     		strmi	r4, [r6]	@ tmp133, MEM[(volatile long unsigned int *)1109459356B]
 2602              	@ main.c:1005: 			else				wMOSI = 0;
 2603 0018 C6F800C0 		strpl	ip, [r6]	@ tmp132, MEM[(volatile long unsigned int *)1109459356B]
 2604              	@ main.c:1007: 			wSCK = 0; /* a slave shifts out output data bit */
 2605 001c 1760     		str	r7, [r2]	@ MEM[(volatile long unsigned int *)1109459348B], MEM[(volatile long unsigned int *)1
 2606              	@ main.c:1010: 			if (wMISO)		byte |= 0x01;
 2607 001e 2968     		ldr	r1, [r5]	@ _2, MEM[(volatile long unsigned int *)1109459224B]
 2608              	@ main.c:1008: 			byte <<= 1;
 2609 0020 4000     		lsls	r0, r0, #1	@ tmp124, byte,
 2610 0022 013B     		subs	r3, r3, #1	@ tmp129, ivtmp_5,
 2611 0024 C0B2     		uxtb	r0, r0	@ byte, tmp124
 2612              	@ main.c:1010: 			if (wMISO)		byte |= 0x01;
 2613 0026 09B1     		cbz	r1, .L185	@ _2,
 2614              	@ main.c:1010: 			if (wMISO)		byte |= 0x01;
 2615 0028 40F00100 		orr	r0, r0, #1	@ byte, byte,
 2616              	.L185:
 2617              	@ main.c:1002: 		for(counter = 8; counter; counter--)
 2618 002c 13F0FF03 		ands	r3, r3, #255	@ ivtmp_5, tmp129,
 2619              	@ main.c:1011: 			wSCK = 1; /* a slave latches input data bit */
 2620 0030 1460     		str	r4, [r2]	@ tmp133, MEM[(volatile long unsigned int *)1109459348B]
 2621              	@ main.c:1002: 		for(counter = 8; counter; counter--)
 2622 0032 EED1     		bne	.L186	@,
ARM GAS  /tmp/cczkEFU1.s 			page 47


 2623              	@ main.c:1014: 	}
 2624 0034 F0BC     		pop	{r4, r5, r6, r7}	@
 2625 0036 7047     		bx	lr	@
 2626              	.L193:
 2627              		.align	2
 2628              	.L192:
 2629 0038 9C012142 		.word	1109459356
 2630 003c 94012142 		.word	1109459348
 2631 0040 18012142 		.word	1109459224
 2632              		.size	softSPI_r, .-softSPI_r
 2633              		.section	.text.ili9486,"ax",%progbits
 2634              		.align	1
 2635              		.p2align 2,,3
 2636              		.global	ili9486
 2637              		.syntax unified
 2638              		.thumb
 2639              		.thumb_func
 2640              		.fpu softvfp
 2641              		.type	ili9486, %function
 2642              	ili9486:
 2643              		@ args = 0, pretend = 0, frame = 8
 2644              		@ frame_needed = 0, uses_anonymous_args = 0
 2645              	@ main.c:1018: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='c';
 2646 0000 0123     		movs	r3, #1	@ tmp136,
 2647 0002 6320     		movs	r0, #99	@ tmp139,
 2648              	@ main.c:1015: void ili9486(void){
 2649 0004 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 2650              	@ main.c:1018: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='c';
 2651 0008 DFF85491 		ldr	r9, .L225+56	@ tmp196,
 2652              	@ main.c:1020: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0x34330000;	//   PA7=MOSI, PA6=MISO, PA5=
 2653 000c 4649     		ldr	r1, .L225	@ tmp141,
 2654              	@ main.c:1018: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='c';
 2655 000e D9F80020 		ldr	r2, [r9]	@ pretmp_14, p_Fifo1
 2656              	@ main.c:1005: 			else				wMOSI = 0;
 2657 0012 464E     		ldr	r6, .L225+4	@ tmp207,
 2658              	@ main.c:1018: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='c';
 2659 0014 9380     		strh	r3, [r2, #4]	@ movhi	@ tmp136, p_Fifo1.98_1->rct
 2660 0016 5380     		strh	r3, [r2, #2]	@ movhi	@ tmp136, p_Fifo1.98_1->rwi
 2661 0018 9071     		strb	r0, [r2, #6]	@ tmp139, p_Fifo1.98_1->rbuf
 2662              	@ main.c:1020: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0x34330000;	//   PA7=MOSI, PA6=MISO, PA5=
 2663 001a 0B68     		ldr	r3, [r1]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 2664              	@ main.c:1007: 			wSCK = 0; /* a slave shifts out output data bit */
 2665 001c 444C     		ldr	r4, .L225+8	@ tmp208,
 2666              	@ main.c:1020: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0x34330000;	//   PA7=MOSI, PA6=MISO, PA5=
 2667 001e 9BB2     		uxth	r3, r3	@ tmp142, _4
 2668 0020 43F05053 		orr	r3, r3, #872415232	@ _6, tmp142,
 2669 0024 43F44C13 		orr	r3, r3, #3342336	@ _6, _6,
 2670              	@ main.c:1015: void ili9486(void){
 2671 0028 83B0     		sub	sp, sp, #12	@,,
 2672              	@ main.c:1020: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0x34330000;	//   PA7=MOSI, PA6=MISO, PA5=
 2673 002a 0B60     		str	r3, [r1]	@ _6, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 2674              	.L196:
 2675              	@ main.c:1024: 			if(p_Fifo1->rct){
 2676 002c 9388     		ldrh	r3, [r2, #4]	@, prephitmp_55->rct
 2677 002e 9BB2     		uxth	r3, r3	@ _8, prephitmp_55->rct
 2678 0030 002B     		cmp	r3, #0	@ _8
 2679 0032 FBD0     		beq	.L196	@
ARM GAS  /tmp/cczkEFU1.s 			page 48


 2680              	@ main.c:1025: 				UART_getChar( (char*)&swh);
 2681 0034 0DF10700 		add	r0, sp, #7	@ tmp214,,
 2682 0038 FFF7FEFF 		bl	UART_getChar	@
 2683              	@ main.c:1027: 				switch (swh)	{
 2684 003c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2	@ swh, swh
 2685 0040 722B     		cmp	r3, #114	@ swh,
 2686 0042 09D0     		beq	.L198	@,
 2687 0044 772B     		cmp	r3, #119	@ swh,
 2688 0046 42D0     		beq	.L199	@,
 2689 0048 632B     		cmp	r3, #99	@ swh,
 2690 004a 30D0     		beq	.L224	@,
 2691              	@ main.c:1053: 					UaPutK("\r");
 2692 004c 3948     		ldr	r0, .L225+12	@,
 2693 004e FFF7FEFF 		bl	UaPutK	@
 2694              	.L205:
 2695 0052 D9F80020 		ldr	r2, [r9]	@ pretmp_14, p_Fifo1
 2696 0056 E9E7     		b	.L196	@
 2697              	.L198:
 2698              	@ main.c:1030: 					UaPutK("\r\n reg = 0x");	reg=UART_getHex();
 2699 0058 3748     		ldr	r0, .L225+16	@,
 2700 005a FFF7FEFF 		bl	UaPutK	@
 2701 005e FFF7FEFF 		bl	UART_getHex	@
 2702 0062 C5B2     		uxtb	r5, r0	@ reg,
 2703              	@ main.c:1031: 					UaPutK("\r\n dat = 0x");
 2704 0064 3548     		ldr	r0, .L225+20	@,
 2705 0066 FFF7FEFF 		bl	UaPutK	@
 2706              	@ main.c:1032: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 2707 006a 0022     		movs	r2, #0	@ tmp154,
 2708 006c 0823     		movs	r3, #8	@ ivtmp_53,
 2709              	@ main.c:1005: 			else				wMOSI = 0;
 2710 006e 9446     		mov	ip, r2	@ tmp198, tmp154
 2711              	@ main.c:1007: 			wSCK = 0; /* a slave shifts out output data bit */
 2712 0070 1746     		mov	r7, r2	@ MEM[(volatile long unsigned int *)1109459348B], tmp198
 2713              	@ main.c:1004: 			if (byte & 0x80)			wMOSI = 1;
 2714 0072 0121     		movs	r1, #1	@ tmp199,
 2715              	@ main.c:1032: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 2716 0074 3248     		ldr	r0, .L225+24	@ tmp215,
 2717              	@ main.c:1010: 			if (wMISO)		byte |= 0x01;
 2718 0076 DFF8E0E0 		ldr	lr, .L225+48	@ tmp163,
 2719              	@ main.c:1032: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 2720 007a 0260     		str	r2, [r0]	@ tmp154, MEM[(volatile long unsigned int *)1109459344B]
 2721              	.L204:
 2722              	@ main.c:1004: 			if (byte & 0x80)			wMOSI = 1;
 2723 007c 2A06     		lsls	r2, r5, #24	@, reg,
 2724 007e 4CBF     		ite	mi
 2725 0080 3160     		strmi	r1, [r6]	@ tmp199, MEM[(volatile long unsigned int *)1109459356B]
 2726              	@ main.c:1005: 			else				wMOSI = 0;
 2727 0082 C6F800C0 		strpl	ip, [r6]	@ tmp198, MEM[(volatile long unsigned int *)1109459356B]
 2728              	@ main.c:1007: 			wSCK = 0; /* a slave shifts out output data bit */
 2729 0086 2760     		str	r7, [r4]	@ MEM[(volatile long unsigned int *)1109459348B], MEM[(volatile long unsigned int *)1
 2730              	@ main.c:1010: 			if (wMISO)		byte |= 0x01;
 2731 0088 DEF80020 		ldr	r2, [lr]	@ _43, MEM[(volatile long unsigned int *)1109459224B]
 2732              	@ main.c:1008: 			byte <<= 1;
 2733 008c 6D00     		lsls	r5, r5, #1	@ tmp162, reg,
 2734 008e 013B     		subs	r3, r3, #1	@ tmp167, ivtmp_53,
 2735 0090 EDB2     		uxtb	r5, r5	@ reg, tmp162
 2736              	@ main.c:1010: 			if (wMISO)		byte |= 0x01;
ARM GAS  /tmp/cczkEFU1.s 			page 49


 2737 0092 0AB1     		cbz	r2, .L203	@ _43,
 2738 0094 45F00105 		orr	r5, r5, #1	@ reg, reg,
 2739              	.L203:
 2740              	@ main.c:1002: 		for(counter = 8; counter; counter--)
 2741 0098 13F0FF03 		ands	r3, r3, #255	@ ivtmp_53, tmp167,
 2742              	@ main.c:1011: 			wSCK = 1; /* a slave latches input data bit */
 2743 009c 2160     		str	r1, [r4]	@ tmp199, MEM[(volatile long unsigned int *)1109459348B]
 2744              	@ main.c:1002: 		for(counter = 8; counter; counter--)
 2745 009e EDD1     		bne	.L204	@,
 2746              	@ main.c:1032: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 2747 00a0 274B     		ldr	r3, .L225+24	@ tmp216,
 2748              	@ main.c:1033: 					hex2uart(dat,2);
 2749 00a2 2846     		mov	r0, r5	@, reg
 2750              	@ main.c:1032: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 2751 00a4 1960     		str	r1, [r3]	@ tmp199, MEM[(volatile long unsigned int *)1109459344B]
 2752              	@ main.c:1033: 					hex2uart(dat,2);
 2753 00a6 0221     		movs	r1, #2	@,
 2754 00a8 FFF7FEFF 		bl	hex2uart	@
 2755              	@ main.c:1035: 					break;
 2756 00ac D1E7     		b	.L205	@
 2757              	.L224:
 2758              	@ main.c:1046: 					UaPutK("\f");
 2759 00ae 2548     		ldr	r0, .L225+28	@,
 2760 00b0 FFF7FEFF 		bl	UaPutK	@
 2761              	@ main.c:1047: 					UaPutK("\n\r\n======= ILI9486 ==================================\r\n");
 2762 00b4 2448     		ldr	r0, .L225+32	@,
 2763 00b6 FFF7FEFF 		bl	UaPutK	@
 2764              	@ main.c:1048: 					UaPutK(" r - Read   c - Clear page  \r\n");
 2765 00ba 2448     		ldr	r0, .L225+36	@,
 2766 00bc FFF7FEFF 		bl	UaPutK	@
 2767              	@ main.c:1049: 					UaPutK(" w - Write  l - Loop read   \r\n");
 2768 00c0 2348     		ldr	r0, .L225+40	@,
 2769 00c2 FFF7FEFF 		bl	UaPutK	@
 2770              	@ main.c:1050: 					UaPutK("==================================================\r\n > ");
 2771 00c6 2348     		ldr	r0, .L225+44	@,
 2772 00c8 FFF7FEFF 		bl	UaPutK	@
 2773              	@ main.c:1051: 					break;
 2774 00cc C1E7     		b	.L205	@
 2775              	.L199:
 2776              	@ main.c:1037: 					wCS = 0;
 2777 00ce 0023     		movs	r3, #0	@ tmp171,
 2778              	@ main.c:1038: 					for(u08 i=0;i<64;i++){
 2779 00d0 9B46     		mov	fp, r3	@ i, tmp171
 2780              	@ main.c:1005: 			else				wMOSI = 0;
 2781 00d2 9A46     		mov	r10, r3	@ tmp202, i
 2782              	@ main.c:1007: 			wSCK = 0; /* a slave shifts out output data bit */
 2783 00d4 9846     		mov	r8, r3	@ MEM[(volatile long unsigned int *)1109459348B], i
 2784              	@ main.c:1037: 					wCS = 0;
 2785 00d6 1A4A     		ldr	r2, .L225+24	@ tmp217,
 2786              	@ main.c:1010: 			if (wMISO)		byte |= 0x01;
 2787 00d8 1F4F     		ldr	r7, .L225+48	@ tmp180,
 2788              	@ main.c:1037: 					wCS = 0;
 2789 00da 1360     		str	r3, [r2]	@ tmp171, MEM[(volatile long unsigned int *)1109459344B]
 2790              	.L206:
 2791              	@ main.c:1032: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 2792 00dc 5846     		mov	r0, fp	@ byte, i
 2793 00de 0822     		movs	r2, #8	@ ivtmp_7,
ARM GAS  /tmp/cczkEFU1.s 			page 50


 2794              	@ main.c:1004: 			if (byte & 0x80)			wMOSI = 1;
 2795 00e0 0125     		movs	r5, #1	@ tmp203,
 2796              	.L210:
 2797 00e2 0306     		lsls	r3, r0, #24	@, byte,
 2798 00e4 4CBF     		ite	mi
 2799 00e6 3560     		strmi	r5, [r6]	@ tmp203, MEM[(volatile long unsigned int *)1109459356B]
 2800              	@ main.c:1005: 			else				wMOSI = 0;
 2801 00e8 C6F800A0 		strpl	r10, [r6]	@ tmp202, MEM[(volatile long unsigned int *)1109459356B]
 2802              	@ main.c:1007: 			wSCK = 0; /* a slave shifts out output data bit */
 2803 00ec C4F80080 		str	r8, [r4]	@ MEM[(volatile long unsigned int *)1109459348B], MEM[(volatile long unsigned int *)1
 2804              	@ main.c:1010: 			if (wMISO)		byte |= 0x01;
 2805 00f0 3968     		ldr	r1, [r7]	@ _51, MEM[(volatile long unsigned int *)1109459224B]
 2806              	@ main.c:1008: 			byte <<= 1;
 2807 00f2 4000     		lsls	r0, r0, #1	@ tmp179, byte,
 2808 00f4 013A     		subs	r2, r2, #1	@ tmp184, ivtmp_7,
 2809 00f6 C0B2     		uxtb	r0, r0	@ byte, tmp179
 2810              	@ main.c:1010: 			if (wMISO)		byte |= 0x01;
 2811 00f8 09B1     		cbz	r1, .L209	@ _51,
 2812 00fa 40F00100 		orr	r0, r0, #1	@ byte, byte,
 2813              	.L209:
 2814              	@ main.c:1002: 		for(counter = 8; counter; counter--)
 2815 00fe 12F0FF02 		ands	r2, r2, #255	@ ivtmp_7, tmp184,
 2816              	@ main.c:1011: 			wSCK = 1; /* a slave latches input data bit */
 2817 0102 2560     		str	r5, [r4]	@ tmp203, MEM[(volatile long unsigned int *)1109459348B]
 2818              	@ main.c:1002: 		for(counter = 8; counter; counter--)
 2819 0104 EDD1     		bne	.L210	@,
 2820              	@ main.c:1038: 					for(u08 i=0;i<64;i++){
 2821 0106 0BF1010B 		add	fp, fp, #1	@ tmp185, i,
 2822              	@ main.c:1039: 						hex2uart(softSPI_r(i),2);
 2823 010a 0221     		movs	r1, #2	@,
 2824              	@ main.c:1038: 					for(u08 i=0;i<64;i++){
 2825 010c 5FFA8BFB 		uxtb	fp, fp	@ i, tmp185
 2826              	@ main.c:1039: 						hex2uart(softSPI_r(i),2);
 2827 0110 FFF7FEFF 		bl	hex2uart	@
 2828              	@ main.c:1038: 					for(u08 i=0;i<64;i++){
 2829 0114 BBF1400F 		cmp	fp, #64	@ i,
 2830 0118 E0D1     		bne	.L206	@,
 2831              	@ main.c:1041: 					wCS = 1;
 2832 011a 094B     		ldr	r3, .L225+24	@ tmp218,
 2833              	@ main.c:1042: 					UaPutK("\r\n");
 2834 011c 0F48     		ldr	r0, .L225+52	@,
 2835              	@ main.c:1041: 					wCS = 1;
 2836 011e 1D60     		str	r5, [r3]	@ tmp203, MEM[(volatile long unsigned int *)1109459344B]
 2837              	@ main.c:1042: 					UaPutK("\r\n");
 2838 0120 FFF7FEFF 		bl	UaPutK	@
 2839              	@ main.c:1044: 					break;
 2840 0124 95E7     		b	.L205	@
 2841              	.L226:
 2842 0126 00BF     		.align	2
 2843              	.L225:
 2844 0128 00080140 		.word	1073809408
 2845 012c 9C012142 		.word	1109459356
 2846 0130 94012142 		.word	1109459348
 2847 0134 CC000000 		.word	.LC45
 2848 0138 00000000 		.word	.LC38
 2849 013c 0C000000 		.word	.LC39
 2850 0140 90012142 		.word	1109459344
ARM GAS  /tmp/cczkEFU1.s 			page 51


 2851 0144 18000000 		.word	.LC40
 2852 0148 1C000000 		.word	.LC41
 2853 014c 54000000 		.word	.LC42
 2854 0150 74000000 		.word	.LC43
 2855 0154 94000000 		.word	.LC44
 2856 0158 18012142 		.word	1109459224
 2857 015c 04000000 		.word	.LC13
 2858 0160 00000000 		.word	p_Fifo1
 2859              		.size	ili9486, .-ili9486
 2860              		.section	.text.wiznet5500,"ax",%progbits
 2861              		.align	1
 2862              		.p2align 2,,3
 2863              		.global	wiznet5500
 2864              		.syntax unified
 2865              		.thumb
 2866              		.thumb_func
 2867              		.fpu softvfp
 2868              		.type	wiznet5500, %function
 2869              	wiznet5500:
 2870              		@ args = 0, pretend = 0, frame = 8
 2871              		@ frame_needed = 0, uses_anonymous_args = 0
 2872 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 2873 0004 82B0     		sub	sp, sp, #8	@,,
 2874              	@ main.c:1065: 	SPI1_init_();
 2875 0006 FFF7FEFF 		bl	SPI1_init_	@
 2876              	@ main.c:1067: 	GPIOB->CRL = (GPIOB->CRL & 0xffffff0f) | 0x00000010;	
 2877 000a 1A49     		ldr	r1, .L234	@ tmp130,
 2878              	@ main.c:1068: 	GPIOC->CRH = (GPIOC->CRH & 0xf0ffffff) | 0x01000000;	// LED Blue  PC14
 2879 000c 1A4A     		ldr	r2, .L234+4	@ tmp133,
 2880              	@ main.c:1067: 	GPIOB->CRL = (GPIOB->CRL & 0xffffff0f) | 0x00000010;	
 2881 000e 0B68     		ldr	r3, [r1]	@ _2, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2882              	@ main.c:1141: 			if(flag_9);
 2883 0010 1A4F     		ldr	r7, .L234+8	@ tmp137,
 2884              	@ main.c:1067: 	GPIOB->CRL = (GPIOB->CRL & 0xffffff0f) | 0x00000010;	
 2885 0012 23F0F003 		bic	r3, r3, #240	@ tmp131, _2,
 2886 0016 43F01003 		orr	r3, r3, #16	@ _5, tmp131,
 2887 001a 0B60     		str	r3, [r1]	@ _5, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2888              	@ main.c:1068: 	GPIOC->CRH = (GPIOC->CRH & 0xf0ffffff) | 0x01000000;	// LED Blue  PC14
 2889 001c 5368     		ldr	r3, [r2, #4]	@ _7, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 2890              	@ main.c:1141: 			if(flag_9);
 2891 001e 7F01     		lsls	r7, r7, #5	@ tmp138, tmp137,
 2892              	@ main.c:1068: 	GPIOC->CRH = (GPIOC->CRH & 0xf0ffffff) | 0x01000000;	// LED Blue  PC14
 2893 0020 23F07063 		bic	r3, r3, #251658240	@ tmp134, _7,
 2894 0024 43F08073 		orr	r3, r3, #16777216	@ _9, tmp134,
 2895 0028 5360     		str	r3, [r2, #4]	@ _9, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 2896              	@ main.c:1070: 	DHT_Init();
 2897 002a FFF7FEFF 		bl	DHT_Init	@
 2898 002e 144C     		ldr	r4, .L234+12	@ tmp150,
 2899              	@ main.c:1125: 		if(STCLK_MS*1000  < (trg0 - SysTick->VAL)){
 2900 0030 144D     		ldr	r5, .L234+16	@ tmp142,
 2901              	@ main.c:1128: 			if (!(DHT_read( &AMh, &AMt,1,&AM2302_pin)) ){		// AM2302 read T & H
 2902 0032 DFF85C80 		ldr	r8, .L234+28	@ tmp153,
 2903              	@ main.c:1131: 			LED^=1;
 2904 0036 144E     		ldr	r6, .L234+20	@ tmp148,
 2905              	@ main.c:1141: 			if(flag_9);
 2906 0038 2437     		adds	r7, r7, #36	@ _20, tmp138,
 2907              	.L229:
ARM GAS  /tmp/cczkEFU1.s 			page 52


 2908              	@ main.c:1125: 		if(STCLK_MS*1000  < (trg0 - SysTick->VAL)){
 2909 003a 1449     		ldr	r1, .L234+24	@ tmp140,
 2910              	.L228:
 2911 003c 2368     		ldr	r3, [r4]	@ trg0.105_10, trg0
 2912 003e 8A68     		ldr	r2, [r1, #8]	@ _11, MEM[(struct SysTick_Type *)3758153744B].VAL
 2913 0040 9B1A     		subs	r3, r3, r2	@ tmp141, trg0.105_10, _11
 2914 0042 AB42     		cmp	r3, r5	@ tmp141, tmp142
 2915 0044 FAD9     		bls	.L228	@,
 2916              	@ main.c:1126: 			trg0 = SysTick->VAL;
 2917 0046 D1F808C0 		ldr	ip, [r1, #8]	@ _13, MEM[(struct SysTick_Type *)3758153744B].VAL
 2918              	@ main.c:1128: 			if (!(DHT_read( &AMh, &AMt,1,&AM2302_pin)) ){		// AM2302 read T & H
 2919 004a 4346     		mov	r3, r8	@, tmp153
 2920 004c 0122     		movs	r2, #1	@,
 2921 004e 0DF10601 		add	r1, sp, #6	@ tmp154,,
 2922 0052 01A8     		add	r0, sp, #4	@ tmp155,,
 2923              	@ main.c:1126: 			trg0 = SysTick->VAL;
 2924 0054 C4F800C0 		str	ip, [r4]	@ _13, trg0
 2925              	@ main.c:1128: 			if (!(DHT_read( &AMh, &AMt,1,&AM2302_pin)) ){		// AM2302 read T & H
 2926 0058 FFF7FEFF 		bl	DHT_read	@
 2927              	@ main.c:1131: 			LED^=1;
 2928 005c 3368     		ldr	r3, [r6]	@ _14, MEM[(volatile long unsigned int *)1109524916B]
 2929 005e 83F00103 		eor	r3, r3, #1	@ _15, _14,
 2930 0062 3360     		str	r3, [r6]	@ _15, MEM[(volatile long unsigned int *)1109524916B]
 2931              	@ main.c:1141: 			if(flag_9);
 2932 0064 3B68     		ldr	r3, [r7]	@ _21, *_20
 2933 0066 002B     		cmp	r3, #0	@ _21
 2934 0068 E7D1     		bne	.L229	@
 2935              	@ main.c:1145: 			flag_9 ^=1;
 2936 006a 3B68     		ldr	r3, [r7]	@ _22, *_20
 2937 006c 83F00103 		eor	r3, r3, #1	@ _23, _22,
 2938 0070 3B60     		str	r3, [r7]	@ _23, *_20
 2939 0072 E2E7     		b	.L229	@
 2940              	.L235:
 2941              		.align	2
 2942              	.L234:
 2943 0074 000C0140 		.word	1073810432
 2944 0078 00100140 		.word	1073811456
 2945 007c 00001001 		.word	.LANCHOR18+17825792
 2946 0080 00000000 		.word	trg0
 2947 0084 40548900 		.word	9000000
 2948 0088 B4012242 		.word	1109524916
 2949 008c 10E000E0 		.word	-536813552
 2950 0090 3C012142 		.word	1109459260
 2951              		.size	wiznet5500, .-wiznet5500
 2952              		.section	.text.uv_meter,"ax",%progbits
 2953              		.align	1
 2954              		.p2align 2,,3
 2955              		.global	uv_meter
 2956              		.syntax unified
 2957              		.thumb
 2958              		.thumb_func
 2959              		.fpu softvfp
 2960              		.type	uv_meter, %function
 2961              	uv_meter:
 2962              		@ args = 0, pretend = 0, frame = 264
 2963              		@ frame_needed = 0, uses_anonymous_args = 0
 2964 0000 F0B5     		push	{r4, r5, r6, r7, lr}	@
ARM GAS  /tmp/cczkEFU1.s 			page 53


 2965              	@ main.c:1159: 		PB10_o = 1;
 2966 0002 0124     		movs	r4, #1	@ tmp126,
 2967              	@ main.c:1157: 		GPIOA->CRL = (GPIOA->CRL & 0x000fffff) | 0xaa000000; // ADC12_IN5		
 2968 0004 1C4A     		ldr	r2, .L245	@ tmp121,
 2969              	@ main.c:1159: 		PB10_o = 1;
 2970 0006 1D48     		ldr	r0, .L245+4	@ tmp125,
 2971              	@ main.c:1157: 		GPIOA->CRL = (GPIOA->CRL & 0x000fffff) | 0xaa000000; // ADC12_IN5		
 2972 0008 1368     		ldr	r3, [r2]	@ _2, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 2973              	@ main.c:1160: 		LED = 1;
 2974 000a 1D49     		ldr	r1, .L245+8	@ tmp127,
 2975              	@ main.c:1157: 		GPIOA->CRL = (GPIOA->CRL & 0x000fffff) | 0xaa000000; // ADC12_IN5		
 2976 000c C3F31303 		ubfx	r3, r3, #0, #20	@ tmp122, _2,,
 2977 0010 43F02A43 		orr	r3, r3, #-1442840576	@ _4, tmp122,
 2978 0014 1360     		str	r3, [r2]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 2979              	@ main.c:1152: void uv_meter(void)			{
 2980 0016 C3B0     		sub	sp, sp, #268	@,,
 2981              	@ main.c:1159: 		PB10_o = 1;
 2982 0018 0460     		str	r4, [r0]	@ tmp126, MEM[(volatile long unsigned int *)1109492136B]
 2983              	@ main.c:1160: 		LED = 1;
 2984 001a 0C60     		str	r4, [r1]	@ tmp126, MEM[(volatile long unsigned int *)1109524916B]
 2985              	@ main.c:1161: 		I2C2_init();
 2986 001c FFF7FEFF 		bl	I2C2_init	@
 2987              	@ main.c:1168: 		ADC1->SQR3 = ( 5<<0*5 );		//(channel<<sequence*5) sequence=0..5   
 2988 0020 0527     		movs	r7, #5	@ tmp140,
 2989              	@ main.c:5297: 		RCC_APB2RSTR_ADC1RST_bb = 0;
 2990 0022 0022     		movs	r2, #0	@ tmp136,
 2991              	@ main.c:1169: 		ADC1->SMPR2 = (4<<5*3 );
 2992 0024 4FF40036 		mov	r6, #131072	@ tmp142,
 2993              	@ main.c:1170: 		ADC1->CR1 = ADC_CR1_SCAN;			// multi channel mode		
 2994 0028 4FF48070 		mov	r0, #256	@ tmp144,
 2995              	@ main.c:5294: 		RCC->APB2ENR   |= RCC_APB2ENR_ADC1EN;	// enable clock for ADC1
 2996 002c 154B     		ldr	r3, .L245+12	@ tmp129,
 2997              	@ main.c:1188: 			b=0;
 2998 002e 1546     		mov	r5, r2	@ tmp153, tmp136
 2999              	@ main.c:5294: 		RCC->APB2ENR   |= RCC_APB2ENR_ADC1EN;	// enable clock for ADC1
 3000 0030 9969     		ldr	r1, [r3, #24]	@ _22, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 3001 0032 41F40071 		orr	r1, r1, #512	@ _23, _22,
 3002 0036 9961     		str	r1, [r3, #24]	@ _23, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 3003              	@ main.c:5295: 		RCC->CFGR 		 |= RCC_CFGR_ADCPRE_DIV4;  // 2/4/6/8 str98
 3004 0038 5968     		ldr	r1, [r3, #4]	@ _24, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 3005 003a 41F48041 		orr	r1, r1, #16384	@ _25, _24,
 3006 003e 5960     		str	r1, [r3, #4]	@ _25, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 3007              	@ main.c:5296: 		RCC_APB2RSTR_ADC1RST_bb = 1;		// Reset ADC1
 3008 0040 1149     		ldr	r1, .L245+16	@ tmp133,
 3009              	@ main.c:1167: 		ADC1->SQR1 = ( 0<<20 	); 		//length and sequence 12..15 conversion 13-16 on channe
 3010 0042 A3F56C43 		sub	r3, r3, #60416	@ tmp137, tmp137,
 3011              	@ main.c:5296: 		RCC_APB2RSTR_ADC1RST_bb = 1;		// Reset ADC1
 3012 0046 0C60     		str	r4, [r1]	@ tmp126, MEM[(volatile long unsigned int *)1111622052B]
 3013              	@ main.c:5297: 		RCC_APB2RSTR_ADC1RST_bb = 0;
 3014 0048 0A60     		str	r2, [r1]	@ tmp136, MEM[(volatile long unsigned int *)1111622052B]
 3015              	@ main.c:1167: 		ADC1->SQR1 = ( 0<<20 	); 		//length and sequence 12..15 conversion 13-16 on channe
 3016 004a DA62     		str	r2, [r3, #44]	@ tmp136, MEM[(struct ADC_TypeDef *)1073816576B].SQR1
 3017              	@ main.c:1168: 		ADC1->SQR3 = ( 5<<0*5 );		//(channel<<sequence*5) sequence=0..5   
 3018 004c 5F63     		str	r7, [r3, #52]	@ tmp140, MEM[(struct ADC_TypeDef *)1073816576B].SQR3
 3019              	@ main.c:1169: 		ADC1->SMPR2 = (4<<5*3 );
 3020 004e 1E61     		str	r6, [r3, #16]	@ tmp142, MEM[(struct ADC_TypeDef *)1073816576B].SMPR2
 3021              	@ main.c:1170: 		ADC1->CR1 = ADC_CR1_SCAN;			// multi channel mode		
ARM GAS  /tmp/cczkEFU1.s 			page 54


 3022 0050 5860     		str	r0, [r3, #4]	@ tmp144, MEM[(struct ADC_TypeDef *)1073816576B].CR1
 3023              	@ main.c:1171: 		ADC1->CR2 |= ADC_CR2_ADON ;		// On ADC
 3024 0052 9A68     		ldr	r2, [r3, #8]	@ _5, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 3025              	@ main.c:1179: 			while(PB0_i==0);
 3026 0054 0D4C     		ldr	r4, .L245+20	@ tmp147,
 3027              	@ main.c:1171: 		ADC1->CR2 |= ADC_CR2_ADON ;		// On ADC
 3028 0056 42F00102 		orr	r2, r2, #1	@ _6, _5,
 3029 005a 9A60     		str	r2, [r3, #8]	@ _6, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 3030              	.L237:
 3031              	@ main.c:1179: 			while(PB0_i==0);
 3032 005c 2368     		ldr	r3, [r4]	@ _7, MEM[(volatile long unsigned int *)1109491968B]
 3033 005e 002B     		cmp	r3, #0	@ _7
 3034 0060 FCD0     		beq	.L237	@
 3035              	@ main.c:1183: 			i2c2_scan(a,&b);
 3036 0062 0DF10701 		add	r1, sp, #7	@ tmp157,,
 3037 0066 02A8     		add	r0, sp, #8	@ tmp158,,
 3038 0068 FFF7FEFF 		bl	i2c2_scan	@
 3039              	.L238:
 3040              	@ main.c:1187: 			while(PB0_i==1);
 3041 006c 2368     		ldr	r3, [r4]	@ _8, MEM[(volatile long unsigned int *)1109491968B]
 3042 006e 012B     		cmp	r3, #1	@ _8,
 3043 0070 FCD0     		beq	.L238	@,
 3044              	@ main.c:1188: 			b=0;
 3045 0072 8DF80750 		strb	r5, [sp, #7]	@ tmp153, b
 3046              	@ main.c:1179: 			while(PB0_i==0);
 3047 0076 F1E7     		b	.L237	@
 3048              	.L246:
 3049              		.align	2
 3050              	.L245:
 3051 0078 00080140 		.word	1073809408
 3052 007c A8812142 		.word	1109492136
 3053 0080 B4012242 		.word	1109524916
 3054 0084 00100240 		.word	1073876992
 3055 0088 A4014242 		.word	1111622052
 3056 008c 00812142 		.word	1109491968
 3057              		.size	uv_meter, .-uv_meter
 3058              		.section	.text.IRQLoraInit,"ax",%progbits
 3059              		.align	1
 3060              		.p2align 2,,3
 3061              		.global	IRQLoraInit
 3062              		.syntax unified
 3063              		.thumb
 3064              		.thumb_func
 3065              		.fpu softvfp
 3066              		.type	IRQLoraInit, %function
 3067              	IRQLoraInit:
 3068              		@ args = 0, pretend = 0, frame = 0
 3069              		@ frame_needed = 0, uses_anonymous_args = 0
 3070              		@ link register save eliminated.
 3071              	@ main.c:1228: 		AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI0_PB;		// Enable interrupt port PA0
 3072 0000 0123     		movs	r3, #1	@ tmp111,
 3073              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 3074 0002 4020     		movs	r0, #64	@ tmp119,
 3075              	@ main.c:1219: void IRQLoraInit(void)	{
 3076 0004 10B4     		push	{r4}	@
 3077              	@ main.c:1229: 		EXTI->PR   = EXTI_PR_PR0;			// Clear interupt request EXTI0
 3078 0006 054A     		ldr	r2, .L249	@ tmp112,
ARM GAS  /tmp/cczkEFU1.s 			page 55


 3079              	@ main.c:1228: 		AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI0_PB;		// Enable interrupt port PA0
 3080 0008 054C     		ldr	r4, .L249+4	@ tmp110,
 3081              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 3082 000a 0649     		ldr	r1, .L249+8	@ tmp118,
 3083              	@ main.c:1228: 		AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI0_PB;		// Enable interrupt port PA0
 3084 000c A360     		str	r3, [r4, #8]	@ tmp111, MEM[(struct AFIO_TypeDef *)1073807360B].EXTICR
 3085              	@ main.c:1229: 		EXTI->PR   = EXTI_PR_PR0;			// Clear interupt request EXTI0
 3086 000e 5361     		str	r3, [r2, #20]	@ tmp111, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 3087              	@ main.c:1234: 	}
 3088 0010 10BC     		pop	{r4}	@
 3089              	@ main.c:1230: 		EXTI->RTSR 	 = EXTI_RTSR_TR0;
 3090 0012 9360     		str	r3, [r2, #8]	@ tmp111, MEM[(struct EXTI_TypeDef *)1073808384B].RTSR
 3091              	@ main.c:1232: 		EXTI->IMR  =  EXTI_IMR_MR0;		// Interrupt mask register EXTI_IMR
 3092 0014 1360     		str	r3, [r2]	@ tmp111, MEM[(struct EXTI_TypeDef *)1073808384B].IMR
 3093              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 3094 0016 0860     		str	r0, [r1]	@ tmp119, MEM[(struct NVIC_Type *)3758153984B].ISER
 3095              	@ main.c:1234: 	}
 3096 0018 7047     		bx	lr	@
 3097              	.L250:
 3098 001a 00BF     		.align	2
 3099              	.L249:
 3100 001c 00040140 		.word	1073808384
 3101 0020 00000140 		.word	1073807360
 3102 0024 00E100E0 		.word	-536813312
 3103              		.size	IRQLoraInit, .-IRQLoraInit
 3104              		.section	.text.LoRaRX,"ax",%progbits
 3105              		.align	1
 3106              		.p2align 2,,3
 3107              		.global	LoRaRX
 3108              		.syntax unified
 3109              		.thumb
 3110              		.thumb_func
 3111              		.fpu softvfp
 3112              		.type	LoRaRX, %function
 3113              	LoRaRX:
 3114              		@ args = 0, pretend = 0, frame = 80
 3115              		@ frame_needed = 0, uses_anonymous_args = 0
 3116 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 3117              	@ main.c:1264: 		SX1278_begin(&SX1278_1, SX1278_433MHZ, SX1278_POWER_11DBM, SX1278_LORA_SF_7,SX1278
 3118 0004 0926     		movs	r6, #9	@ tmp180,
 3119 0006 0022     		movs	r2, #0	@,
 3120              	@ main.c:1254: 		GPIOA->CRL = (GPIOA->CRL & 0xfff00000) | 0x00044343;	//   PA2=MOSI, PA1=MISO, PA0=
 3121 0008 4E4C     		ldr	r4, .L261	@ tmp157,
 3122 000a 4F49     		ldr	r1, .L261+4	@ _3,
 3123 000c 2368     		ldr	r3, [r4]	@ _1, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 3124              	@ main.c:1255: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 3125 000e 4F48     		ldr	r0, .L261+8	@ tmp162,
 3126              	@ main.c:1254: 		GPIOA->CRL = (GPIOA->CRL & 0xfff00000) | 0x00044343;	//   PA2=MOSI, PA1=MISO, PA0=
 3127 0010 1B0D     		lsrs	r3, r3, #20	@ tmp158, _1,
 3128 0012 1B05     		lsls	r3, r3, #20	@ tmp158, tmp158,
 3129 0014 1943     		orrs	r1, r1, r3	@, _3, _3, tmp158
 3130 0016 2160     		str	r1, [r4]	@ _3, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 3131              	@ main.c:1255: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 3132 0018 4368     		ldr	r3, [r0, #4]	@ _4, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 3133              	@ main.c:1256: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 2); 
 3134 001a 4D4F     		ldr	r7, .L261+12	@ tmp244,
 3135              	@ main.c:1255: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
ARM GAS  /tmp/cczkEFU1.s 			page 56


 3136 001c 23F0FF03 		bic	r3, r3, #255	@ tmp163, _4,
 3137              	@ main.c:1235: void LoRaRX(void)				{
 3138 0020 97B0     		sub	sp, sp, #92	@,,
 3139              	@ main.c:1255: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 3140 0022 43F03303 		orr	r3, r3, #51	@ _6, tmp163,
 3141              	@ main.c:1257: 		SX1278_hw1.miso = (u32 *)m_BITBAND_PERIPH(&GPIOA->IDR, 1); 
 3142 0026 4B4C     		ldr	r4, .L261+16	@ tmp168,
 3143              	@ main.c:1255: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 3144 0028 4360     		str	r3, [r0, #4]	@ _6, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 3145              	@ main.c:1263: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 3146 002a 4B4D     		ldr	r5, .L261+20	@ tmp177,
 3147              	@ main.c:1264: 		SX1278_begin(&SX1278_1, SX1278_433MHZ, SX1278_POWER_11DBM, SX1278_LORA_SF_7,SX1278
 3148 002c 0096     		str	r6, [sp]	@ tmp180,
 3149              	@ main.c:1258: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 0); 
 3150 002e DFF844E1 		ldr	lr, .L261+48	@ tmp170,
 3151              	@ main.c:1259: 		SX1278_hw1.nss  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 8); 
 3152 0032 DFF844C1 		ldr	ip, .L261+52	@ tmp172,
 3153              	@ main.c:1256: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 2); 
 3154 0036 DFF84481 		ldr	r8, .L261+56	@ tmp166,
 3155              	@ main.c:1260: 		SX1278_hw1.rst  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 9); 
 3156 003a 484E     		ldr	r6, .L261+24	@ tmp174,
 3157              	@ main.c:1257: 		SX1278_hw1.miso = (u32 *)m_BITBAND_PERIPH(&GPIOA->IDR, 1); 
 3158 003c 7C60     		str	r4, [r7, #4]	@ tmp168, SX1278_hw1.miso
 3159              	@ main.c:1261: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 1); 
 3160 003e 04F50044 		add	r4, r4, #32768	@ tmp176, tmp176,
 3161              	@ main.c:1264: 		SX1278_begin(&SX1278_1, SX1278_433MHZ, SX1278_POWER_11DBM, SX1278_LORA_SF_7,SX1278
 3162 0042 1146     		mov	r1, r2	@,
 3163 0044 0123     		movs	r3, #1	@,
 3164              	@ main.c:1260: 		SX1278_hw1.rst  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 9); 
 3165 0046 C7E903C6 		strd	ip, r6, [r7, #12]	@ tmp172, tmp174, tmp244,
 3166              	@ main.c:1264: 		SX1278_begin(&SX1278_1, SX1278_433MHZ, SX1278_POWER_11DBM, SX1278_LORA_SF_7,SX1278
 3167 004a 2846     		mov	r0, r5	@, tmp177
 3168              	@ main.c:1256: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 2); 
 3169 004c C7F80080 		str	r8, [r7]	@ tmp166, SX1278_hw1.mosi
 3170              	@ main.c:1258: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 0); 
 3171 0050 C7F808E0 		str	lr, [r7, #8]	@ tmp170, SX1278_hw1.sck
 3172              	@ main.c:1261: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 1); 
 3173 0054 7C61     		str	r4, [r7, #20]	@ tmp176, SX1278_hw1.dio0
 3174              	@ main.c:1263: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 3175 0056 2F60     		str	r7, [r5]	@ tmp244, SX1278_1.hw
 3176              	@ main.c:1264: 		SX1278_begin(&SX1278_1, SX1278_433MHZ, SX1278_POWER_11DBM, SX1278_LORA_SF_7,SX1278
 3177 0058 FFF7FEFF 		bl	SX1278_begin	@
 3178              	@ main.c:1271: 		ret = SX1278_LoRaEntryRx(&SX1278_1, 7, 2000);
 3179 005c 4FF4FA62 		mov	r2, #2000	@,
 3180 0060 2846     		mov	r0, r5	@, tmp177
 3181 0062 0721     		movs	r1, #7	@,
 3182 0064 FFF7FEFF 		bl	SX1278_LoRaEntryRx	@
 3183              	@ main.c:1295: 		flag_10=0;
 3184 0068 0022     		movs	r2, #0	@ tmp187,
 3185              	@ main.c:1327: 				SX1278_LoRaRx(&SX1278_1);  // Odczyt danych do buforów
 3186 006a A946     		mov	r9, r5	@ tmp245, tmp177
 3187              	@ main.c:1288: 		trg1  = SysTick->VAL;
 3188 006c 3C4B     		ldr	r3, .L261+28	@ tmp182,
 3189              	@ main.c:1295: 		flag_10=0;
 3190 006e 3D4C     		ldr	r4, .L261+32	@ tmp185,
 3191              	@ main.c:1385: 					trg1  = SysTick->VAL;
 3192 0070 9A46     		mov	r10, r3	@ tmp247, tmp182
ARM GAS  /tmp/cczkEFU1.s 			page 57


 3193              	@ main.c:1288: 		trg1  = SysTick->VAL;
 3194 0072 3D4E     		ldr	r6, .L261+36	@ tmp243,
 3195 0074 9B68     		ldr	r3, [r3, #8]	@ _7, MEM[(struct SysTick_Type *)3758153744B].VAL
 3196              	@ main.c:1295: 		flag_10=0;
 3197 0076 6401     		lsls	r4, r4, #5	@ tmp186, tmp185,
 3198              	@ main.c:1384: 					LED = 0;
 3199 0078 DFF804B1 		ldr	fp, .L261+60	@ tmp246,
 3200              	@ main.c:1288: 		trg1  = SysTick->VAL;
 3201 007c 3360     		str	r3, [r6]	@ _7, trg1
 3202 007e 05F10A08 		add	r8, r5, #10	@ tmp242, tmp177,
 3203              	@ main.c:1295: 		flag_10=0;
 3204 0082 A262     		str	r2, [r4, #40]	@ tmp187, *_12
 3205 0084 2834     		adds	r4, r4, #40	@ _12, tmp186,
 3206              	.L252:
 3207              	@ main.c:1319: 			if( (flag_10==0) && *SX1278_hw1.dio0==1 )  {
 3208 0086 2568     		ldr	r5, [r4]	@ _25, *_12
 3209 0088 1DB9     		cbnz	r5, .L253	@ _25,
 3210              	@ main.c:1319: 			if( (flag_10==0) && *SX1278_hw1.dio0==1 )  {
 3211 008a 7B69     		ldr	r3, [r7, #20]	@ _26, SX1278_hw1.dio0
 3212 008c 1B68     		ldr	r3, [r3]	@ _27, *_26
 3213 008e 012B     		cmp	r3, #1	@ _27,
 3214 0090 1DD0     		beq	.L260	@,
 3215              	.L253:
 3216              	@ main.c:1390: 			if(flag_10 && (*SX1278_hw1.dio0)==0 ) { flag_10=0; }
 3217 0092 2368     		ldr	r3, [r4]	@ _49, *_12
 3218              	@ main.c:1392: 			if((STCLK_MS*300 < (trg1 - SysTick->VAL)) && LED==0){	
 3219 0094 354A     		ldr	r2, .L261+40	@ tmp235,
 3220              	@ main.c:1390: 			if(flag_10 && (*SX1278_hw1.dio0)==0 ) { flag_10=0; }
 3221 0096 1BB1     		cbz	r3, .L254	@ _49,
 3222              	@ main.c:1390: 			if(flag_10 && (*SX1278_hw1.dio0)==0 ) { flag_10=0; }
 3223 0098 7B69     		ldr	r3, [r7, #20]	@ _50, SX1278_hw1.dio0
 3224 009a 1B68     		ldr	r3, [r3]	@ _51, *_50
 3225 009c 03B9     		cbnz	r3, .L254	@ _51,
 3226              	@ main.c:1390: 			if(flag_10 && (*SX1278_hw1.dio0)==0 ) { flag_10=0; }
 3227 009e 2360     		str	r3, [r4]	@ _51, *_12
 3228              	.L254:
 3229              	@ main.c:1392: 			if((STCLK_MS*300 < (trg1 - SysTick->VAL)) && LED==0){	
 3230 00a0 3368     		ldr	r3, [r6]	@ trg1.117_52, trg1
 3231 00a2 DAF80810 		ldr	r1, [r10, #8]	@ _53, MEM[(struct SysTick_Type *)3758153744B].VAL
 3232 00a6 5B1A     		subs	r3, r3, r1	@ tmp234, trg1.117_52, _53
 3233 00a8 9342     		cmp	r3, r2	@ tmp234, tmp235
 3234 00aa ECD9     		bls	.L252	@,
 3235              	@ main.c:1392: 			if((STCLK_MS*300 < (trg1 - SysTick->VAL)) && LED==0){	
 3236 00ac DBF80030 		ldr	r3, [fp]	@ _55, MEM[(volatile long unsigned int *)1109524916B]
 3237 00b0 002B     		cmp	r3, #0	@ _55
 3238 00b2 E8D1     		bne	.L252	@
 3239              	@ main.c:1395: 				LED = 1;
 3240 00b4 0123     		movs	r3, #1	@ tmp240,
 3241              	@ main.c:1393: 					trg1  = SysTick->VAL;
 3242 00b6 DAF80820 		ldr	r2, [r10, #8]	@ _56, MEM[(struct SysTick_Type *)3758153744B].VAL
 3243 00ba 3260     		str	r2, [r6]	@ _56, trg1
 3244              	@ main.c:1395: 				LED = 1;
 3245 00bc CBF80030 		str	r3, [fp]	@ tmp240, MEM[(volatile long unsigned int *)1109524916B]
 3246              	@ main.c:1319: 			if( (flag_10==0) && *SX1278_hw1.dio0==1 )  {
 3247 00c0 2568     		ldr	r5, [r4]	@ _25, *_12
 3248 00c2 002D     		cmp	r5, #0	@ _25
 3249 00c4 E5D1     		bne	.L253	@
ARM GAS  /tmp/cczkEFU1.s 			page 58


 3250 00c6 7B69     		ldr	r3, [r7, #20]	@ _26, SX1278_hw1.dio0
 3251 00c8 1B68     		ldr	r3, [r3]	@ _27, *_26
 3252 00ca 012B     		cmp	r3, #1	@ _27,
 3253 00cc E1D1     		bne	.L253	@,
 3254              	.L260:
 3255              	@ main.c:1327: 				SX1278_LoRaRx(&SX1278_1);  // Odczyt danych do buforów
 3256 00ce 4846     		mov	r0, r9	@, tmp245
 3257 00d0 0593     		str	r3, [sp, #20]	@ _27, %sfp
 3258 00d2 FFF7FEFF 		bl	SX1278_LoRaRx	@
 3259              	@ main.c:1337: 				prssi = SX1278_SPIRead(&SX1278_1, LR_RegPktRssiValue)-164;
 3260 00d6 1A21     		movs	r1, #26	@,
 3261 00d8 4846     		mov	r0, r9	@, tmp245
 3262 00da FFF7FEFF 		bl	SX1278_SPIRead	@
 3263              	@ main.c:1344: 				memcpy(buf_rx, SX1278_1.rxBuffer, 7);
 3264 00de B8F80420 		ldrh	r2, [r8, #4]	@ unaligned	@ tmp198, MEM[(void *)&SX1278_1 + 10B]
 3265 00e2 D8F80000 		ldr	r0, [r8]	@ unaligned	@, MEM[(void *)&SX1278_1 + 10B]
 3266 00e6 ADF81C20 		strh	r2, [sp, #28]	@ unaligned	@ tmp198, MEM[(void *)&buf_rx]
 3267              	@ main.c:1351: 				Cnt= (s16)(buf_rx[4]+(buf_rx[5]<<8));
 3268 00ea 9DF81D10 		ldrb	r1, [sp, #29]	@ zero_extendqisi2	@ buf_rx, buf_rx
 3269 00ee 9DF81C20 		ldrb	r2, [sp, #28]	@ zero_extendqisi2	@ buf_rx, buf_rx
 3270              	@ main.c:1344: 				memcpy(buf_rx, SX1278_1.rxBuffer, 7);
 3271 00f2 98F806C0 		ldrb	ip, [r8, #6]	@ zero_extendqisi2	@ MEM[(void *)&SX1278_1 + 10B], MEM[(void *)&SX1278_1 + 10B]
 3272              	@ main.c:1351: 				Cnt= (s16)(buf_rx[4]+(buf_rx[5]<<8));
 3273 00f6 02EB0122 		add	r2, r2, r1, lsl #8	@ tmp215, buf_rx, buf_rx,
 3274 00fa 92B2     		uxth	r2, r2	@ Cnt, tmp215
 3275              	@ main.c:1350: 				t2 = (s16)(buf_rx[2]+(buf_rx[3]<<8));
 3276 00fc 0114     		asrs	r1, r0, #16	@ t2,,
 3277              	@ main.c:1344: 				memcpy(buf_rx, SX1278_1.rxBuffer, 7);
 3278 00fe 0690     		str	r0, [sp, #24]	@, MEM[(void *)&buf_rx]
 3279              	@ main.c:1358: 					sint2uart(t1);	//UaPutK("  ");
 3280 0100 00B2     		sxth	r0, r0	@,
 3281              	@ main.c:1344: 				memcpy(buf_rx, SX1278_1.rxBuffer, 7);
 3282 0102 8DF81EC0 		strb	ip, [sp, #30]	@ MEM[(void *)&SX1278_1 + 10B], MEM[(void *)&buf_rx]
 3283              	@ main.c:1351: 				Cnt= (s16)(buf_rx[4]+(buf_rx[5]<<8));
 3284 0106 0392     		str	r2, [sp, #12]	@ Cnt, %sfp
 3285              	@ main.c:1350: 				t2 = (s16)(buf_rx[2]+(buf_rx[3]<<8));
 3286 0108 0491     		str	r1, [sp, #16]	@ t2, %sfp
 3287              	@ main.c:1343: 				buf_rx[7] = 0;
 3288 010a 8DF81F50 		strb	r5, [sp, #31]	@ _25, buf_rx
 3289              	@ main.c:1358: 					sint2uart(t1);	//UaPutK("  ");
 3290 010e FFF7FEFF 		bl	sint2uart	@
 3291              	@ main.c:1359: 					UaPutC(',');					
 3292 0112 2C20     		movs	r0, #44	@,
 3293 0114 FFF7FEFF 		bl	UaPutC	@
 3294              	@ main.c:1360: 					sint2uart(t2);	//UaPutK("  ");
 3295 0118 0499     		ldr	r1, [sp, #16]	@ t2, %sfp
 3296 011a 0846     		mov	r0, r1	@, t2
 3297 011c FFF7FEFF 		bl	sint2uart	@
 3298              	@ main.c:1361: 					UaPutC(',');					
 3299 0120 2C20     		movs	r0, #44	@,
 3300 0122 FFF7FEFF 		bl	UaPutC	@
 3301              	@ main.c:1362: 					sint2uart(Cnt);	//UaPutK("  ");
 3302 0126 039A     		ldr	r2, [sp, #12]	@ Cnt, %sfp
 3303 0128 1046     		mov	r0, r2	@, Cnt
 3304 012a FFF7FEFF 		bl	sint2uart	@
 3305              	@ main.c:1363: 					UaPutS("\n");					
 3306 012e 1048     		ldr	r0, .L261+44	@,
ARM GAS  /tmp/cczkEFU1.s 			page 59


 3307 0130 FFF7FEFF 		bl	UaPutS	@
 3308              	@ main.c:1384: 					LED = 0;
 3309 0134 CBF80050 		str	r5, [fp]	@ _25, MEM[(volatile long unsigned int *)1109524916B]
 3310              	@ main.c:1385: 					trg1  = SysTick->VAL;
 3311 0138 DAF80820 		ldr	r2, [r10, #8]	@ _48, MEM[(struct SysTick_Type *)3758153744B].VAL
 3312              	@ main.c:1387: 				flag_10 = 1;
 3313 013c 059B     		ldr	r3, [sp, #20]	@ _27, %sfp
 3314              	@ main.c:1385: 					trg1  = SysTick->VAL;
 3315 013e 3260     		str	r2, [r6]	@ _48, trg1
 3316              	@ main.c:1387: 				flag_10 = 1;
 3317 0140 2360     		str	r3, [r4]	@ _27, *_12
 3318 0142 A6E7     		b	.L253	@
 3319              	.L262:
 3320              		.align	2
 3321              	.L261:
 3322 0144 00080140 		.word	1073809408
 3323 0148 43430400 		.word	279363
 3324 014c 000C0140 		.word	1073810432
 3325 0150 00000000 		.word	.LANCHOR19
 3326 0154 04012142 		.word	1109459204
 3327 0158 00000000 		.word	.LANCHOR20
 3328 015c A4812142 		.word	1109492132
 3329 0160 10E000E0 		.word	-536813552
 3330 0164 00001001 		.word	.LANCHOR18+17825792
 3331 0168 00000000 		.word	trg1
 3332 016c E0322900 		.word	2700000
 3333 0170 00000000 		.word	.LC46
 3334 0174 80012142 		.word	1109459328
 3335 0178 A0812142 		.word	1109492128
 3336 017c 88012142 		.word	1109459336
 3337 0180 B4012242 		.word	1109524916
 3338              		.size	LoRaRX, .-LoRaRX
 3339              		.section	.text.LoRaRX1,"ax",%progbits
 3340              		.align	1
 3341              		.p2align 2,,3
 3342              		.global	LoRaRX1
 3343              		.syntax unified
 3344              		.thumb
 3345              		.thumb_func
 3346              		.fpu softvfp
 3347              		.type	LoRaRX1, %function
 3348              	LoRaRX1:
 3349              		@ args = 0, pretend = 0, frame = 24
 3350              		@ frame_needed = 0, uses_anonymous_args = 0
 3351              	@ main.c:1429: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3352 0000 0022     		movs	r2, #0	@,
 3353              	@ main.c:1400: void LoRaRX1(void)	{
 3354 0002 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 3355              	@ main.c:1410: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3356 0006 3021     		movs	r1, #48	@ tmp169,
 3357 0008 4FF00109 		mov	r9, #1	@ tmp166,
 3358              	@ main.c:1429: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3359 000c 4FF0090A 		mov	r10, #9	@ tmp192,
 3360              	@ main.c:1437: 		flag_9=0;
 3361 0010 1746     		mov	r7, r2	@ tmp197,
 3362              	@ main.c:1410: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3363 0012 DFF89082 		ldr	r8, .L289+108	@ tmp257,
ARM GAS  /tmp/cczkEFU1.s 			page 60


 3364              	@ main.c:1411: 		LED=1;
 3365 0016 884D     		ldr	r5, .L289	@ tmp171,
 3366              	@ main.c:1410: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3367 0018 D8F80030 		ldr	r3, [r8]	@ p_Fifo1.118_1, p_Fifo1
 3368              	@ main.c:1414: 		GPIOB->CRH = (GPIOB->CRH & 0x0000ff00) | 0x43430033;	//   
 3369 001c 8748     		ldr	r0, .L289+4	@ tmp173,
 3370              	@ main.c:1410: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3371 001e A3F80490 		strh	r9, [r3, #4]	@ movhi	@ tmp166, p_Fifo1.118_1->rct
 3372 0022 A3F80290 		strh	r9, [r3, #2]	@ movhi	@ tmp166, p_Fifo1.118_1->rwi
 3373 0026 9971     		strb	r1, [r3, #6]	@ tmp169, p_Fifo1.118_1->rbuf
 3374              	@ main.c:1411: 		LED=1;
 3375 0028 C5F80090 		str	r9, [r5]	@ tmp166, MEM[(volatile long unsigned int *)1109524916B]
 3376              	@ main.c:1414: 		GPIOB->CRH = (GPIOB->CRH & 0x0000ff00) | 0x43430033;	//   
 3377 002c 4168     		ldr	r1, [r0, #4]	@ _6, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 3378 002e 844B     		ldr	r3, .L289+8	@ _9,
 3379              	@ main.c:1415: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 12); 
 3380 0030 844E     		ldr	r6, .L289+12	@ tmp254,
 3381              	@ main.c:1414: 		GPIOB->CRH = (GPIOB->CRH & 0x0000ff00) | 0x43430033;	//   
 3382 0032 01F47F41 		and	r1, r1, #65280	@ tmp174, _6,
 3383              	@ main.c:1415: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 12); 
 3384 0036 DFF870C2 		ldr	ip, .L289+112	@ tmp178,
 3385              	@ main.c:1414: 		GPIOB->CRH = (GPIOB->CRH & 0x0000ff00) | 0x43430033;	//   
 3386 003a 0B43     		orrs	r3, r3, r1	@, _9, _9, tmp174
 3387              	@ main.c:1416: 		SX1278_hw1.miso = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 13); 
 3388 003c DFF86CE2 		ldr	lr, .L289+116	@ tmp180,
 3389              	@ main.c:1414: 		GPIOB->CRH = (GPIOB->CRH & 0x0000ff00) | 0x43430033;	//   
 3390 0040 4360     		str	r3, [r0, #4]	@ _9, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 3391              	@ main.c:1428: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 3392 0042 814C     		ldr	r4, .L289+16	@ tmp255,
 3393              	@ main.c:1415: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 12); 
 3394 0044 C6F800C0 		str	ip, [r6]	@ tmp178, SX1278_hw1.mosi
 3395              	@ main.c:1417: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 14); 
 3396 0048 0CF1080C 		add	ip, ip, #8	@ tmp182, tmp182,
 3397              	@ main.c:1400: void LoRaRX1(void)	{
 3398 004c 89B0     		sub	sp, sp, #36	@,,
 3399              	@ main.c:1417: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 14); 
 3400 004e C6E901EC 		strd	lr, ip, [r6, #4]	@ tmp180, tmp182, tmp254,
 3401              	@ main.c:1418: 		SX1278_hw1.nss  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 8); 
 3402 0052 0EF16C0E 		add	lr, lr, #108	@ tmp184, tmp184,
 3403              	@ main.c:1419: 		SX1278_hw1.rst  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 9); 
 3404 0056 ACF1140C 		sub	ip, ip, #20	@ tmp186, tmp186,
 3405 005a C6E903EC 		strd	lr, ip, [r6, #12]	@ tmp184, tmp186, tmp254,
 3406              	@ main.c:1429: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3407 005e 4B46     		mov	r3, r9	@, tmp166
 3408              	@ main.c:1420: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 15); 
 3409 0060 ACF1680C 		sub	ip, ip, #104	@ tmp188, tmp188,
 3410              	@ main.c:1429: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3411 0064 1146     		mov	r1, r2	@,
 3412 0066 CDF800A0 		str	r10, [sp]	@ tmp192,
 3413 006a 2046     		mov	r0, r4	@, tmp255
 3414              	@ main.c:1420: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 15); 
 3415 006c C6F814C0 		str	ip, [r6, #20]	@ tmp188, SX1278_hw1.dio0
 3416              	@ main.c:1529: 					LED ^= 1;
 3417 0070 0495     		str	r5, [sp, #16]	@ tmp171, %sfp
 3418              	@ main.c:1428: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 3419 0072 2660     		str	r6, [r4]	@ tmp254, SX1278_1.hw
 3420              	@ main.c:1429: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
ARM GAS  /tmp/cczkEFU1.s 			page 61


 3421 0074 FFF7FEFF 		bl	SX1278_begin	@
 3422              	@ main.c:1430: 		SX1278_LoRaEntryRx(&SX1278_1, 64, 2000);
 3423 0078 4FF4FA62 		mov	r2, #2000	@,
 3424 007c 4021     		movs	r1, #64	@,
 3425 007e 2046     		mov	r0, r4	@, tmp255
 3426 0080 FFF7FEFF 		bl	SX1278_LoRaEntryRx	@
 3427              	@ main.c:1437: 		flag_9=0;
 3428 0084 714B     		ldr	r3, .L289+20	@ tmp195,
 3429              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 3430 0086 724A     		ldr	r2, .L289+24	@ tmp198,
 3431              	@ main.c:1437: 		flag_9=0;
 3432 0088 5B01     		lsls	r3, r3, #5	@ tmp196, tmp195,
 3433 008a 5F62     		str	r7, [r3, #36]	@ tmp197, *_14
 3434              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 3435 008c 9168     		ldr	r1, [r2, #8]	@ _126, MEM[(struct SysTick_Type *)3758153744B].VAL
 3436 008e 714B     		ldr	r3, .L289+28	@ tmp199,
 3437              	@ main.c:1441: 		UaPutK(" Time=");		uint2uart(tim/TIM_US);			
 3438 0090 7148     		ldr	r0, .L289+32	@,
 3439              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 3440 0092 1960     		str	r1, [r3]	@ _126, Timt
 3441              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 3442 0094 1D68     		ldr	r5, [r3]	@ Timt.82_123, Timt
 3443 0096 9368     		ldr	r3, [r2, #8]	@ _124, MEM[(struct SysTick_Type *)3758153744B].VAL
 3444 0098 ED1A     		subs	r5, r5, r3	@ _125, Timt.82_123, _124
 3445 009a 0795     		str	r5, [sp, #28]	@ _125, MEM[(volatile u32 *)&tim]
 3446              	@ main.c:1441: 		UaPutK(" Time=");		uint2uart(tim/TIM_US);			
 3447 009c FFF7FEFF 		bl	UaPutK	@
 3448 00a0 6E48     		ldr	r0, .L289+36	@ tmp205,
 3449              	@ main.c:1425: 		sx[3]=SX1278_LORA_BW_500KHZ;
 3450 00a2 CDF80CA0 		str	r10, [sp, #12]	@ tmp192, %sfp
 3451              	@ main.c:1441: 		UaPutK(" Time=");		uint2uart(tim/TIM_US);			
 3452 00a6 A0FB0530 		umull	r3, r0, r0, r5	@ tmp267, tmp204, tmp205, _125
 3453 00aa 20FA09F0 		lsr	r0, r0, r9	@, tmp204,
 3454 00ae FFF7FEFF 		bl	uint2uart	@
 3455              	@ main.c:1426: 		sx[4]=10;
 3456 00b2 0A23     		movs	r3, #10	@ sx$4,
 3457              	@ main.c:1423: 		sx[1]=SX1278_POWER_11DBM;
 3458 00b4 BA46     		mov	r10, r7	@ sx$1, tmp197
 3459 00b6 6A4D     		ldr	r5, .L289+40	@ tmp253,
 3460              	@ main.c:1534: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){	
 3461 00b8 6A4F     		ldr	r7, .L289+44	@ tmp250,
 3462              	@ main.c:1426: 		sx[4]=10;
 3463 00ba 0593     		str	r3, [sp, #20]	@ sx$4, %sfp
 3464              	.L264:
 3465              	@ main.c:1449: 			if(p_Fifo1->rct){
 3466 00bc D8F80030 		ldr	r3, [r8]	@ p_Fifo1.124_16, p_Fifo1
 3467 00c0 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.124_16->rct
 3468 00c2 9BB2     		uxth	r3, r3	@ _17, p_Fifo1.124_16->rct
 3469 00c4 8BB9     		cbnz	r3, .L287	@ _17,
 3470              	.L265:
 3471              	@ main.c:1505: 			if( *SX1278_hw1.dio0 ){
 3472 00c6 7369     		ldr	r3, [r6, #20]	@ _34, SX1278_hw1.dio0
 3473 00c8 1B68     		ldr	r3, [r3]	@ _35, *_34
 3474 00ca 002B     		cmp	r3, #0	@ _35
 3475 00cc 43D1     		bne	.L288	@
 3476              	.L276:
 3477              	@ main.c:1534: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){	
ARM GAS  /tmp/cczkEFU1.s 			page 62


 3478 00ce 604A     		ldr	r2, .L289+24	@ tmp248,
 3479 00d0 2B68     		ldr	r3, [r5]	@ trg0.127_45, trg0
 3480 00d2 9168     		ldr	r1, [r2, #8]	@ _47, MEM[(struct SysTick_Type *)3758153744B].VAL
 3481 00d4 5B1A     		subs	r3, r3, r1	@ tmp249, trg0.127_45, _47
 3482 00d6 BB42     		cmp	r3, r7	@ tmp249, tmp250
 3483 00d8 F0D9     		bls	.L264	@,
 3484              	@ main.c:1535: 				trg0  = SysTick->VAL;	
 3485 00da 9368     		ldr	r3, [r2, #8]	@ _50, MEM[(struct SysTick_Type *)3758153744B].VAL
 3486 00dc 2B60     		str	r3, [r5]	@ _50, trg0
 3487              	@ main.c:1449: 			if(p_Fifo1->rct){
 3488 00de D8F80030 		ldr	r3, [r8]	@ p_Fifo1.124_16, p_Fifo1
 3489 00e2 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.124_16->rct
 3490 00e4 9BB2     		uxth	r3, r3	@ _17, p_Fifo1.124_16->rct
 3491 00e6 002B     		cmp	r3, #0	@ _17
 3492 00e8 EDD0     		beq	.L265	@
 3493              	.L287:
 3494              	@ main.c:1450: 				UART_getChar( (char*)&swh);
 3495 00ea 0DF11B00 		add	r0, sp, #27	@ tmp271,,
 3496 00ee FFF7FEFF 		bl	UART_getChar	@
 3497              	@ main.c:1452: 				switch (swh)	{
 3498 00f2 9DF81B30 		ldrb	r3, [sp, #27]	@ zero_extendqisi2	@ swh, swh
 3499 00f6 623B     		subs	r3, r3, #98	@ tmp211, swh,
 3500 00f8 112B     		cmp	r3, #17	@ tmp211,
 3501 00fa 17D8     		bhi	.L266	@
 3502 00fc DFE803F0 		tbb	[pc, r3]	@ tmp211
 3503              	.L268:
 3504 0100 53       		.byte	(.L267-.L268)/2
 3505 0101 16       		.byte	(.L266-.L268)/2
 3506 0102 45       		.byte	(.L269-.L268)/2
 3507 0103 16       		.byte	(.L266-.L268)/2
 3508 0104 16       		.byte	(.L266-.L268)/2
 3509 0105 16       		.byte	(.L266-.L268)/2
 3510 0106 16       		.byte	(.L266-.L268)/2
 3511 0107 16       		.byte	(.L266-.L268)/2
 3512 0108 16       		.byte	(.L266-.L268)/2
 3513 0109 16       		.byte	(.L266-.L268)/2
 3514 010a 16       		.byte	(.L266-.L268)/2
 3515 010b 16       		.byte	(.L266-.L268)/2
 3516 010c 16       		.byte	(.L266-.L268)/2
 3517 010d 16       		.byte	(.L266-.L268)/2
 3518 010e 74       		.byte	(.L270-.L268)/2
 3519 010f 61       		.byte	(.L271-.L268)/2
 3520 0110 82       		.byte	(.L272-.L268)/2
 3521 0111 09       		.byte	(.L273-.L268)/2
 3522              		.p2align 1
 3523              	.L273:
 3524              	@ main.c:1476: 					UaPutK("\r\n 0-6("); uint2uart(sx[2]);UaPutK(") SF=");					
 3525 0112 5548     		ldr	r0, .L289+48	@,
 3526 0114 FFF7FEFF 		bl	UaPutK	@
 3527 0118 4846     		mov	r0, r9	@, sx$2
 3528 011a FFF7FEFF 		bl	uint2uart	@
 3529 011e 5348     		ldr	r0, .L289+52	@,
 3530 0120 FFF7FEFF 		bl	UaPutK	@
 3531              	@ main.c:1477: 					sx[2] = UART_getNum();					
 3532 0124 FFF7FEFF 		bl	UART_getNum	@
 3533 0128 5FFA80F9 		uxtb	r9, r0	@ sx$2,
 3534              	.L266:
ARM GAS  /tmp/cczkEFU1.s 			page 63


 3535              	@ main.c:1492: 				SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3536 012c 039B     		ldr	r3, [sp, #12]	@ sx$3, %sfp
 3537 012e 5246     		mov	r2, r10	@, sx$1
 3538 0130 0093     		str	r3, [sp]	@ sx$3,
 3539 0132 0021     		movs	r1, #0	@,
 3540 0134 4B46     		mov	r3, r9	@, sx$2
 3541 0136 2046     		mov	r0, r4	@, tmp260
 3542 0138 FFF7FEFF 		bl	SX1278_begin	@
 3543              	@ main.c:1493: 				SX1278_LoRaEntryRx(&SX1278_1, 64, 2000);
 3544 013c 4FF4FA62 		mov	r2, #2000	@,
 3545 0140 4021     		movs	r1, #64	@,
 3546 0142 2046     		mov	r0, r4	@, tmp260
 3547 0144 FFF7FEFF 		bl	SX1278_LoRaEntryRx	@
 3548              	@ main.c:1495: 				UaPutK("\r\n Menu > ");
 3549 0148 4948     		ldr	r0, .L289+56	@,
 3550 014a FFF7FEFF 		bl	UaPutK	@
 3551              	@ main.c:1505: 			if( *SX1278_hw1.dio0 ){
 3552 014e 7369     		ldr	r3, [r6, #20]	@ _34, SX1278_hw1.dio0
 3553 0150 1B68     		ldr	r3, [r3]	@ _35, *_34
 3554 0152 002B     		cmp	r3, #0	@ _35
 3555 0154 BBD0     		beq	.L276	@
 3556              	.L288:
 3557              	@ main.c:1506: 				 message_length = SX1278_LoRaRxPacket(&SX1278_1);
 3558 0156 2046     		mov	r0, r4	@, tmp260
 3559 0158 FFF7FEFF 		bl	SX1278_LoRaRxPacket	@
 3560              	@ main.c:1507: 				if(message_length){
 3561 015c 0028     		cmp	r0, #0	@
 3562 015e B6D0     		beq	.L276	@
 3563              	@ main.c:1509: 					SX1278_read(&SX1278_1, (uint8_t *) buf_rx);
 3564 0160 4449     		ldr	r1, .L289+60	@,
 3565 0162 2046     		mov	r0, r4	@, tmp260
 3566 0164 FFF7FEFF 		bl	SX1278_read	@
 3567              	@ main.c:1510: 					UaPutK("\r\n prssi->");	
 3568 0168 4348     		ldr	r0, .L289+64	@,
 3569 016a FFF7FEFF 		bl	UaPutK	@
 3570              	@ main.c:1511: 					prssi = SX1278_SPIRead(&SX1278_1, LR_RegPktRssiValue)-164;
 3571 016e 1A21     		movs	r1, #26	@,
 3572 0170 2046     		mov	r0, r4	@, tmp260
 3573 0172 FFF7FEFF 		bl	SX1278_SPIRead	@
 3574 0176 A438     		subs	r0, r0, #164	@ tmp243,,
 3575              	@ main.c:1512: 					sint2uart(prssi);
 3576 0178 00B2     		sxth	r0, r0	@, tmp243
 3577 017a FFF7FEFF 		bl	sint2uart	@
 3578              	@ main.c:1529: 					LED ^= 1;
 3579 017e 049A     		ldr	r2, [sp, #16]	@ tmp261, %sfp
 3580 0180 1368     		ldr	r3, [r2]	@ _42, MEM[(volatile long unsigned int *)1109524916B]
 3581 0182 83F00103 		eor	r3, r3, #1	@ _44, _42,
 3582 0186 1360     		str	r3, [r2]	@ _44, MEM[(volatile long unsigned int *)1109524916B]
 3583 0188 A1E7     		b	.L276	@
 3584              	.L269:
 3585              	@ main.c:1484: 					UaPutK("\r\n sek("); uint2uart(sx[4]);UaPutK(") Delay=");					
 3586 018a 3C48     		ldr	r0, .L289+68	@,
 3587 018c FFF7FEFF 		bl	UaPutK	@
 3588 0190 0598     		ldr	r0, [sp, #20]	@, %sfp
 3589 0192 FFF7FEFF 		bl	uint2uart	@
 3590 0196 3A48     		ldr	r0, .L289+72	@,
 3591 0198 FFF7FEFF 		bl	UaPutK	@
ARM GAS  /tmp/cczkEFU1.s 			page 64


 3592              	@ main.c:1485: 					sx[4] = UART_getNum();					
 3593 019c FFF7FEFF 		bl	UART_getNum	@
 3594 01a0 C3B2     		uxtb	r3, r0	@ sx$4,
 3595 01a2 0593     		str	r3, [sp, #20]	@ sx$4, %sfp
 3596              	@ main.c:1486: 					break;
 3597 01a4 C2E7     		b	.L266	@
 3598              	.L267:
 3599              	@ main.c:1480: 					UaPutK("\r\n 0-9("); uint2uart(sx[3]);UaPutK(") BW=");					
 3600 01a6 3748     		ldr	r0, .L289+76	@,
 3601 01a8 FFF7FEFF 		bl	UaPutK	@
 3602 01ac 0398     		ldr	r0, [sp, #12]	@, %sfp
 3603 01ae FFF7FEFF 		bl	uint2uart	@
 3604 01b2 3548     		ldr	r0, .L289+80	@,
 3605 01b4 FFF7FEFF 		bl	UaPutK	@
 3606              	@ main.c:1481: 					sx[3] = UART_getNum();					
 3607 01b8 FFF7FEFF 		bl	UART_getNum	@
 3608 01bc C3B2     		uxtb	r3, r0	@ sx$3,
 3609 01be 0393     		str	r3, [sp, #12]	@ sx$3, %sfp
 3610              	@ main.c:1482: 					break;
 3611 01c0 B4E7     		b	.L266	@
 3612              	.L271:
 3613              	@ main.c:1457: 					UaPutK("\r\n");
 3614 01c2 3248     		ldr	r0, .L289+84	@,
 3615 01c4 FFF7FEFF 		bl	UaPutK	@
 3616 01c8 4FF0000B 		mov	fp, #0	@ ivtmp.479,
 3617              	.L274:
 3618              	@ main.c:1459: 						dat = SX1278_SPIRead(&SX1278_1, n);
 3619 01cc 5FFA8BF1 		uxtb	r1, fp	@, ivtmp.479
 3620 01d0 2046     		mov	r0, r4	@, tmp260
 3621 01d2 FFF7FEFF 		bl	SX1278_SPIRead	@
 3622 01d6 0BF1010B 		add	fp, fp, #1	@ ivtmp.479, ivtmp.479,
 3623              	@ main.c:1460: 						hex2uart(dat,2);
 3624 01da 0221     		movs	r1, #2	@,
 3625 01dc FFF7FEFF 		bl	hex2uart	@
 3626              	@ main.c:1458: 					for (u08 n=0;n<0x14;n++){
 3627 01e0 BBF1140F 		cmp	fp, #20	@ ivtmp.479,
 3628 01e4 F2D1     		bne	.L274	@,
 3629 01e6 A1E7     		b	.L266	@
 3630              	.L270:
 3631              	@ main.c:1472: 					UaPutK("\r\n 0-3("); uint2uart(sx[1]);UaPutK(") POWER=");					
 3632 01e8 2948     		ldr	r0, .L289+88	@,
 3633 01ea FFF7FEFF 		bl	UaPutK	@
 3634 01ee 5046     		mov	r0, r10	@, sx$1
 3635 01f0 FFF7FEFF 		bl	uint2uart	@
 3636 01f4 2748     		ldr	r0, .L289+92	@,
 3637 01f6 FFF7FEFF 		bl	UaPutK	@
 3638              	@ main.c:1473: 					sx[1] = UART_getNum();					
 3639 01fa FFF7FEFF 		bl	UART_getNum	@
 3640 01fe 5FFA80FA 		uxtb	r10, r0	@ sx$1,
 3641              	@ main.c:1474: 					break;
 3642 0202 93E7     		b	.L266	@
 3643              	.L272:
 3644              	@ main.c:1465: 					UaPutK("\r\n Read Reg1=0x");	reg=UART_getHex();
 3645 0204 2448     		ldr	r0, .L289+96	@,
 3646 0206 FFF7FEFF 		bl	UaPutK	@
 3647 020a FFF7FEFF 		bl	UART_getHex	@
 3648 020e 8346     		mov	fp, r0	@ _20,
ARM GAS  /tmp/cczkEFU1.s 			page 65


 3649              	@ main.c:1466: 					UaPutK(" Reg1 0x");						hex2uart(reg,2);
 3650 0210 2248     		ldr	r0, .L289+100	@,
 3651 0212 5FFA8BFB 		uxtb	fp, fp	@ _20, _20
 3652 0216 FFF7FEFF 		bl	UaPutK	@
 3653 021a 5846     		mov	r0, fp	@, _20
 3654 021c 0221     		movs	r1, #2	@,
 3655 021e FFF7FEFF 		bl	hex2uart	@
 3656              	@ main.c:1467: 					UaPutK("= 0x");						
 3657 0222 1F48     		ldr	r0, .L289+104	@,
 3658 0224 FFF7FEFF 		bl	UaPutK	@
 3659              	@ main.c:1468: 					dat = SX1278_SPIRead(&SX1278_1, reg);
 3660 0228 5946     		mov	r1, fp	@, _20
 3661 022a 2046     		mov	r0, r4	@, tmp260
 3662 022c FFF7FEFF 		bl	SX1278_SPIRead	@
 3663              	@ main.c:1469: 					hex2uart(dat,2);
 3664 0230 0221     		movs	r1, #2	@,
 3665 0232 FFF7FEFF 		bl	hex2uart	@
 3666              	@ main.c:1470: 					break;
 3667 0236 79E7     		b	.L266	@
 3668              	.L290:
 3669              		.align	2
 3670              	.L289:
 3671 0238 B4012242 		.word	1109524916
 3672 023c 000C0140 		.word	1073810432
 3673 0240 33004343 		.word	1128464435
 3674 0244 00000000 		.word	.LANCHOR21
 3675 0248 00000000 		.word	.LANCHOR22
 3676 024c 00001001 		.word	.LANCHOR18+17825792
 3677 0250 10E000E0 		.word	-536813552
 3678 0254 00000000 		.word	Timt
 3679 0258 00000000 		.word	.LC47
 3680 025c 398EE338 		.word	954437177
 3681 0260 00000000 		.word	trg0
 3682 0264 40548900 		.word	9000000
 3683 0268 40000000 		.word	.LC53
 3684 026c 48000000 		.word	.LC54
 3685 0270 74000000 		.word	.LC59
 3686 0274 00000000 		.word	.LANCHOR23
 3687 0278 80000000 		.word	.LC60
 3688 027c 60000000 		.word	.LC57
 3689 0280 68000000 		.word	.LC58
 3690 0284 50000000 		.word	.LC55
 3691 0288 58000000 		.word	.LC56
 3692 028c 04000000 		.word	.LC13
 3693 0290 2C000000 		.word	.LC51
 3694 0294 34000000 		.word	.LC52
 3695 0298 08000000 		.word	.LC48
 3696 029c 18000000 		.word	.LC49
 3697 02a0 24000000 		.word	.LC50
 3698 02a4 00000000 		.word	p_Fifo1
 3699 02a8 B0812142 		.word	1109492144
 3700 02ac 34812142 		.word	1109492020
 3701              		.size	LoRaRX1, .-LoRaRX1
 3702              		.section	.text.LoRaTX,"ax",%progbits
 3703              		.align	1
 3704              		.p2align 2,,3
 3705              		.global	LoRaTX
ARM GAS  /tmp/cczkEFU1.s 			page 66


 3706              		.syntax unified
 3707              		.thumb
 3708              		.thumb_func
 3709              		.fpu softvfp
 3710              		.type	LoRaTX, %function
 3711              	LoRaTX:
 3712              		@ args = 0, pretend = 0, frame = 8
 3713              		@ frame_needed = 0, uses_anonymous_args = 0
 3714 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 3715              	@ main.c:5504: 		TIM3->CR1 = 0;
 3716 0004 0024     		movs	r4, #0	@ tmp160,
 3717              	@ main.c:5505: 		TIM3->PSC = (F_CPU/(1000000)) - 1;
 3718 0006 4FF04708 		mov	r8, #71	@ tmp163,
 3719              	@ main.c:5499: 		RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
 3720 000a 634F     		ldr	r7, .L296	@ tmp156,
 3721              	@ main.c:1543: void LoRaTX(void)		{
 3722 000c 85B0     		sub	sp, sp, #20	@,,
 3723              	@ main.c:1562: 		RtcInit();
 3724 000e FFF7FEFF 		bl	RtcInit	@
 3725              	@ main.c:5499: 		RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
 3726 0012 FA69     		ldr	r2, [r7, #28]	@ _71, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 3727              	@ main.c:5504: 		TIM3->CR1 = 0;
 3728 0014 614B     		ldr	r3, .L296+4	@ tmp158,
 3729              	@ main.c:5499: 		RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
 3730 0016 42F00202 		orr	r2, r2, #2	@ _72, _71,
 3731 001a FA61     		str	r2, [r7, #28]	@ _72, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 3732              	@ main.c:5506: 		TIM3->ARR = TIM3_ARR - 1;
 3733 001c 4FF6FE7E 		movw	lr, #65534	@ tmp166,
 3734              	@ main.c:5504: 		TIM3->CR1 = 0;
 3735 0020 1C80     		strh	r4, [r3]	@ movhi	@ tmp160, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 3736              	@ main.c:5505: 		TIM3->PSC = (F_CPU/(1000000)) - 1;
 3737 0022 A3F82880 		strh	r8, [r3, #40]	@ movhi	@ tmp163, MEM[(struct TIM_TypeDef *)1073742848B].PSC
 3738              	@ main.c:5508: 		TIM3->DIER = TIM_DIER_UIE;
 3739 0026 4FF00108 		mov	r8, #1	@ movhi	@ tmp269,
 3740              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 3741 002a 4FF0005C 		mov	ip, #536870912	@ tmp181,
 3742              	@ main.c:1564: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3743 002e 3025     		movs	r5, #48	@ tmp187,
 3744              	@ main.c:1583: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3745 0030 0920     		movs	r0, #9	@ tmp212,
 3746              	@ main.c:5506: 		TIM3->ARR = TIM3_ARR - 1;
 3747 0032 A3F82CE0 		strh	lr, [r3, #44]	@ movhi	@ tmp166, MEM[(struct TIM_TypeDef *)1073742848B].ARR
 3748              	@ main.c:5508: 		TIM3->DIER = TIM_DIER_UIE;
 3749 0036 A3F80C80 		strh	r8, [r3, #12]	@ movhi	@ tmp269, MEM[(struct TIM_TypeDef *)1073742848B].DIER
 3750              	@ main.c:5509: 		TIM3->CR1  |= TIM_CR1_DIR;
 3751 003a 1A88     		ldrh	r2, [r3]	@, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 3752              	@ main.c:1564: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3753 003c DFF88CE1 		ldr	lr, .L296+52	@ tmp182,
 3754              	@ main.c:5509: 		TIM3->CR1  |= TIM_CR1_DIR;
 3755 0040 42F01002 		orr	r2, r2, #16	@ _74, MEM[(struct TIM_TypeDef *)1073742848B].CR1,
 3756 0044 1A80     		strh	r2, [r3]	@ movhi	@ _74, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 3757              	@ main.c:5510: 		TIM3->CR1  |= TIM_CR1_CEN;
 3758 0046 1A88     		ldrh	r2, [r3]	@, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 3759              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 3760 0048 5549     		ldr	r1, .L296+8	@ tmp180,
 3761              	@ main.c:5510: 		TIM3->CR1  |= TIM_CR1_CEN;
 3762 004a 42F00102 		orr	r2, r2, #1	@ _76, MEM[(struct TIM_TypeDef *)1073742848B].CR1,
ARM GAS  /tmp/cczkEFU1.s 			page 67


 3763 004e 1A80     		strh	r2, [r3]	@ movhi	@ _76, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 3764              	@ main.c:1564: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3765 0050 DEF80030 		ldr	r3, [lr]	@ p_Fifo1.129_2, p_Fifo1
 3766              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 3767 0054 C1F800C0 		str	ip, [r1]	@ tmp181, MEM[(struct NVIC_Type *)3758153984B].ISER
 3768              	@ main.c:1567: 		GPIOA->CRL = (GPIOA->CRL & 0xfff00000) | 0x00044343;	//   PA2=MOSI, PA1=MISO, PA0=
 3769 0058 A7F58437 		sub	r7, r7, #67584	@ tmp189, tmp189,
 3770              	@ main.c:1564: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3771 005c A3F80480 		strh	r8, [r3, #4]	@ movhi	@ tmp270, p_Fifo1.129_2->rct
 3772 0060 A3F80280 		strh	r8, [r3, #2]	@ movhi	@ tmp271, p_Fifo1.129_2->rwi
 3773 0064 9D71     		strb	r5, [r3, #6]	@ tmp187, p_Fifo1.129_2->rbuf
 3774              	@ main.c:1567: 		GPIOA->CRL = (GPIOA->CRL & 0xfff00000) | 0x00044343;	//   PA2=MOSI, PA1=MISO, PA0=
 3775 0066 3B68     		ldr	r3, [r7]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 3776 0068 4E49     		ldr	r1, .L296+12	@ _6,
 3777 006a 1B0D     		lsrs	r3, r3, #20	@ tmp190, _4,
 3778 006c 1B05     		lsls	r3, r3, #20	@ tmp190, tmp190,
 3779              	@ main.c:1568: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 3780 006e 4E4A     		ldr	r2, .L296+16	@ tmp194,
 3781              	@ main.c:1567: 		GPIOA->CRL = (GPIOA->CRL & 0xfff00000) | 0x00044343;	//   PA2=MOSI, PA1=MISO, PA0=
 3782 0070 1943     		orrs	r1, r1, r3	@, _6, _6, tmp190
 3783 0072 3960     		str	r1, [r7]	@ _6, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 3784              	@ main.c:1568: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 3785 0074 5368     		ldr	r3, [r2, #4]	@ _7, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 3786              	@ main.c:1569: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 2); 
 3787 0076 4D4D     		ldr	r5, .L296+20	@ tmp197,
 3788 0078 DFF854E1 		ldr	lr, .L296+56	@ tmp198,
 3789              	@ main.c:1570: 		SX1278_hw1.miso = (u32 *)m_BITBAND_PERIPH(&GPIOA->IDR, 1); 
 3790 007c DFF854C1 		ldr	ip, .L296+60	@ tmp200,
 3791              	@ main.c:1568: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 3792 0080 23F0FF03 		bic	r3, r3, #255	@ tmp195, _7,
 3793 0084 43F03303 		orr	r3, r3, #51	@ _9, tmp195,
 3794 0088 5360     		str	r3, [r2, #4]	@ _9, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 3795              	@ main.c:1583: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3796 008a 0090     		str	r0, [sp]	@ tmp212,
 3797              	@ main.c:1569: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 2); 
 3798 008c C5F800E0 		str	lr, [r5]	@ tmp198, SX1278_hw1.mosi
 3799              	@ main.c:1570: 		SX1278_hw1.miso = (u32 *)m_BITBAND_PERIPH(&GPIOA->IDR, 1); 
 3800 0090 C5F804C0 		str	ip, [r5, #4]	@ tmp200, SX1278_hw1.miso
 3801              	@ main.c:1571: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 0); 
 3802 0094 AEF1080E 		sub	lr, lr, #8	@ tmp202, tmp202,
 3803              	@ main.c:1572: 		SX1278_hw1.nss  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 8); 
 3804 0098 0CF5004C 		add	ip, ip, #32768	@ tmp204, tmp204,
 3805              	@ main.c:1571: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 0); 
 3806 009c C5F808E0 		str	lr, [r5, #8]	@ tmp202, SX1278_hw1.sck
 3807              	@ main.c:1582: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 3808 00a0 DFF83481 		ldr	r8, .L296+64	@ tmp209,
 3809              	@ main.c:1572: 		SX1278_hw1.nss  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 8); 
 3810 00a4 0CF19C0C 		add	ip, ip, #156	@ tmp204, tmp204,
 3811              	@ main.c:1573: 		SX1278_hw1.rst  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 9); 
 3812 00a8 0EF5004E 		add	lr, lr, #32768	@ tmp206, tmp206,
 3813              	@ main.c:1572: 		SX1278_hw1.nss  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 8); 
 3814 00ac C5F80CC0 		str	ip, [r5, #12]	@ tmp204, SX1278_hw1.nss
 3815              	@ main.c:1573: 		SX1278_hw1.rst  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 9); 
 3816 00b0 0EF1240E 		add	lr, lr, #36	@ tmp206, tmp206,
 3817              	@ main.c:1574: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 1); 
 3818 00b4 ACF19C0C 		sub	ip, ip, #156	@ tmp208, tmp208,
 3819              	@ main.c:1583: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
ARM GAS  /tmp/cczkEFU1.s 			page 68


 3820 00b8 2246     		mov	r2, r4	@, tmp160
 3821 00ba 2146     		mov	r1, r4	@, tmp160
 3822 00bc 0123     		movs	r3, #1	@,
 3823 00be 4046     		mov	r0, r8	@, tmp209
 3824              	@ main.c:1582: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 3825 00c0 C8F80050 		str	r5, [r8]	@ tmp197, SX1278_1.hw
 3826              	@ main.c:1574: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 1); 
 3827 00c4 C5E904EC 		strd	lr, ip, [r5, #16]	@ tmp206, tmp208, tmp197,
 3828              	@ main.c:1583: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3829 00c8 FFF7FEFF 		bl	SX1278_begin	@
 3830              	@ main.c:1587: 		GPIOA->CRH = (GPIOA->CRH & 0x0fffffff) | 0x60000000;
 3831 00cc 7B68     		ldr	r3, [r7, #4]	@ _10, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 3832              	@ main.c:1597: 		GPIOA->ODR = 0b0001010000000000;
 3833 00ce 4FF4A051 		mov	r1, #5120	@ tmp228,
 3834              	@ main.c:1587: 		GPIOA->CRH = (GPIOA->CRH & 0x0fffffff) | 0x60000000;
 3835 00d2 23F07043 		bic	r3, r3, #-268435456	@ tmp214, _10,
 3836 00d6 43F0C043 		orr	r3, r3, #1610612736	@ _12, tmp214,
 3837 00da 7B60     		str	r3, [r7, #4]	@ _12, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 3838              	@ main.c:1593: 		LED	   = 1;		
 3839 00dc 0123     		movs	r3, #1	@ tmp272,
 3840              	@ main.c:1592: 		flag_9 = 0;		
 3841 00de 344A     		ldr	r2, .L296+24	@ tmp217,
 3842              	@ main.c:1593: 		LED	   = 1;		
 3843 00e0 3448     		ldr	r0, .L296+28	@ tmp220,
 3844              	@ main.c:1592: 		flag_9 = 0;		
 3845 00e2 5201     		lsls	r2, r2, #5	@ tmp218, tmp217,
 3846 00e4 5462     		str	r4, [r2, #36]	@ tmp160, *_17
 3847              	@ main.c:1593: 		LED	   = 1;		
 3848 00e6 0360     		str	r3, [r0]	@ tmp272, MEM[(volatile long unsigned int *)1109524916B]
 3849              	@ main.c:1595: 		GPIOA->CRH = (GPIOA->CRH & 0xfff0f0ff)|0x00020200 ; //low power
 3850 00e8 7B68     		ldr	r3, [r7, #4]	@ _18, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 3851 00ea DFF8F090 		ldr	r9, .L296+68	@ tmp263,
 3852 00ee 23F47023 		bic	r3, r3, #983040	@ tmp223, _18,
 3853 00f2 23F47063 		bic	r3, r3, #3840	@ tmp223, tmp223,
 3854 00f6 43F40033 		orr	r3, r3, #131072	@ _20, tmp223,
 3855 00fa 43F40073 		orr	r3, r3, #512	@ _20, _20,
 3856 00fe 7B60     		str	r3, [r7, #4]	@ _20, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 3857              	@ main.c:1597: 		GPIOA->ODR = 0b0001010000000000;
 3858 0100 F960     		str	r1, [r7, #12]	@ tmp228, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
 3859              	@ main.c:1598: 		GPIOA->ODR |= (1<<10)|(1<<12); 
 3860 0102 FB68     		ldr	r3, [r7, #12]	@ _21, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
 3861              	@ main.c:1633: 				LED ^= 1;
 3862 0104 8346     		mov	fp, r0	@ tmp238, tmp220
 3863              	@ main.c:1598: 		GPIOA->ODR |= (1<<10)|(1<<12); 
 3864 0106 0B43     		orrs	r3, r3, r1	@, _22, _21,
 3865 0108 FB60     		str	r3, [r7, #12]	@ _22, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
 3866              	@ main.c:1628: 		flag_9=1;	
 3867 010a 0123     		movs	r3, #1	@ tmp274,
 3868 010c CA46     		mov	r10, r9	@ tmp265, tmp263
 3869              	@ main.c:1592: 		flag_9 = 0;		
 3870 010e 3046     		mov	r0, r6	@ n, n
 3871              	@ main.c:1628: 		flag_9=1;	
 3872 0110 5362     		str	r3, [r2, #36]	@ tmp274, *_17
 3873 0112 294D     		ldr	r5, .L296+32	@ tmp262,
 3874              	@ main.c:1592: 		flag_9 = 0;		
 3875 0114 02F12403 		add	r3, r2, #36	@ _17, tmp218,
 3876              	@ main.c:1631: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
ARM GAS  /tmp/cczkEFU1.s 			page 69


 3877 0118 284C     		ldr	r4, .L296+36	@ tmp233,
 3878 011a 294F     		ldr	r7, .L296+40	@ tmp235,
 3879              	@ main.c:1592: 		flag_9 = 0;		
 3880 011c 0393     		str	r3, [sp, #12]	@ _17, %sfp
 3881              	.L292:
 3882              	@ main.c:1631: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 3883 011e 2B68     		ldr	r3, [r5]	@ trg0.134_23, trg0
 3884 0120 A268     		ldr	r2, [r4, #8]	@ _24, MEM[(struct SysTick_Type *)3758153744B].VAL
 3885 0122 9B1A     		subs	r3, r3, r2	@ tmp234, trg0.134_23, _24
 3886 0124 BB42     		cmp	r3, r7	@ tmp234, tmp235
 3887 0126 FAD9     		bls	.L292	@,
 3888              	@ main.c:1635: 				strcpy (buf_tx," ");		
 3889 0128 4FF0200E 		mov	lr, #32	@ tmp242,
 3890              	@ main.c:1632: 				trg0 = SysTick->VAL; 
 3891 012c A368     		ldr	r3, [r4, #8]	@ _26, MEM[(struct SysTick_Type *)3758153744B].VAL
 3892              	@ main.c:1637: 				strcat (buf_tx,unt2str(n++,str_num,5));
 3893 012e 00F1010C 		add	ip, r0, #1	@ tmp243, n,
 3894              	@ main.c:1632: 				trg0 = SysTick->VAL; 
 3895 0132 2B60     		str	r3, [r5]	@ _26, trg0
 3896              	@ main.c:1633: 				LED ^= 1;
 3897 0134 DBF80020 		ldr	r2, [fp]	@ _27, MEM[(volatile long unsigned int *)1109524916B]
 3898              	@ main.c:1637: 				strcat (buf_tx,unt2str(n++,str_num,5));
 3899 0138 1FFA8CF3 		uxth	r3, ip	@ n, tmp243
 3900              	@ main.c:1633: 				LED ^= 1;
 3901 013c 82F00102 		eor	r2, r2, #1	@ _28, _27,
 3902 0140 CBF80020 		str	r2, [fp]	@ _28, MEM[(volatile long unsigned int *)1109524916B]
 3903              	@ main.c:1637: 				strcat (buf_tx,unt2str(n++,str_num,5));
 3904 0144 1F49     		ldr	r1, .L296+44	@,
 3905 0146 0522     		movs	r2, #5	@,
 3906              	@ main.c:1635: 				strcpy (buf_tx," ");		
 3907 0148 A9F800E0 		strh	lr, [r9]	@ movhi	@ tmp242, MEM[(void *)&buf_tx]
 3908              	@ main.c:1637: 				strcat (buf_tx,unt2str(n++,str_num,5));
 3909 014c 0293     		str	r3, [sp, #8]	@ n, %sfp
 3910 014e FFF7FEFF 		bl	unt2str	@
 3911 0152 0646     		mov	r6, r0	@ _30,
 3912 0154 5046     		mov	r0, r10	@, tmp265
 3913 0156 FFF7FEFF 		bl	strlen	@
 3914 015a 3146     		mov	r1, r6	@, _30
 3915 015c 4844     		add	r0, r0, r9	@, tmp263
 3916 015e FFF7FEFF 		bl	stpcpy	@
 3917              	@ main.c:1638: 				strcat (buf_tx," ");
 3918 0162 194B     		ldr	r3, .L296+48	@ tmp278,
 3919 0164 A0EB0906 		sub	r6, r0, r9	@ _64, tmp249, tmp263
 3920 0168 1A88     		ldrh	r2, [r3]	@ unaligned	@ tmp254, MEM[(void *)" "]
 3921              	@ main.c:1639: 				message_length = strlen(buf_tx); 
 3922 016a 0136     		adds	r6, r6, #1	@ tmp255, _64,
 3923              	@ main.c:1641: 				SX1278_LoRaEntryTx (&SX1278_1, message_length, 2000);
 3924 016c F6B2     		uxtb	r6, r6	@ _32, tmp255
 3925              	@ main.c:1638: 				strcat (buf_tx," ");
 3926 016e 0280     		strh	r2, [r0]	@ unaligned	@ tmp254, MEM[(void *)_65]
 3927              	@ main.c:1641: 				SX1278_LoRaEntryTx (&SX1278_1, message_length, 2000);
 3928 0170 3146     		mov	r1, r6	@, _32
 3929 0172 4FF4FA62 		mov	r2, #2000	@,
 3930 0176 4046     		mov	r0, r8	@, tmp266
 3931 0178 FFF7FEFF 		bl	SX1278_LoRaEntryTx	@
 3932              	@ main.c:1645: 				SX1278_LoRaTxPacketStart(&SX1278_1, (uint8_t *) buf_tx, message_length);  // Sta
 3933 017c 3246     		mov	r2, r6	@, _32
ARM GAS  /tmp/cczkEFU1.s 			page 70


 3934 017e 5146     		mov	r1, r10	@, tmp265
 3935 0180 4046     		mov	r0, r8	@, tmp266
 3936 0182 FFF7FEFF 		bl	SX1278_LoRaTxPacketStart	@
 3937              	@ main.c:1646: 				flag_9=1;	
 3938 0186 0122     		movs	r2, #1	@ tmp259,
 3939 0188 039B     		ldr	r3, [sp, #12]	@ _17, %sfp
 3940              	@ main.c:1647: 				SX1278_sleep(&SX1278_1);
 3941 018a 4046     		mov	r0, r8	@, tmp266
 3942              	@ main.c:1646: 				flag_9=1;	
 3943 018c 1A60     		str	r2, [r3]	@ tmp259, *_17
 3944              	@ main.c:1647: 				SX1278_sleep(&SX1278_1);
 3945 018e FFF7FEFF 		bl	SX1278_sleep	@
 3946              	@ main.c:1637: 				strcat (buf_tx,unt2str(n++,str_num,5));
 3947 0192 029B     		ldr	r3, [sp, #8]	@ n, %sfp
 3948 0194 1846     		mov	r0, r3	@ n, n
 3949 0196 C2E7     		b	.L292	@
 3950              	.L297:
 3951              		.align	2
 3952              	.L296:
 3953 0198 00100240 		.word	1073876992
 3954 019c 00040040 		.word	1073742848
 3955 01a0 00E100E0 		.word	-536813312
 3956 01a4 43430400 		.word	279363
 3957 01a8 000C0140 		.word	1073810432
 3958 01ac 00000000 		.word	.LANCHOR24
 3959 01b0 00001001 		.word	.LANCHOR18+17825792
 3960 01b4 B4012242 		.word	1109524916
 3961 01b8 00000000 		.word	trg0
 3962 01bc 10E000E0 		.word	-536813552
 3963 01c0 40548900 		.word	9000000
 3964 01c4 00000000 		.word	.LANCHOR27
 3965 01c8 18010000 		.word	.LC35
 3966 01cc 00000000 		.word	p_Fifo1
 3967 01d0 88012142 		.word	1109459336
 3968 01d4 04012142 		.word	1109459204
 3969 01d8 00000000 		.word	.LANCHOR25
 3970 01dc 00000000 		.word	.LANCHOR26
 3971              		.size	LoRaTX, .-LoRaTX
 3972              		.section	.text.col1,"ax",%progbits
 3973              		.align	1
 3974              		.p2align 2,,3
 3975              		.global	col1
 3976              		.syntax unified
 3977              		.thumb
 3978              		.thumb_func
 3979              		.fpu softvfp
 3980              		.type	col1, %function
 3981              	col1:
 3982              		@ args = 0, pretend = 0, frame = 0
 3983              		@ frame_needed = 0, uses_anonymous_args = 0
 3984              		@ link register save eliminated.
 3985              	@ main.c:1765: 			dma_buf[0]=0xe0;	dma_buf[8]  =0xe0;	dma_buf[16]=0xe0;
 3986 0000 4FF0E032 		mov	r2, #-522133280	@ tmp111,
 3987 0004 044B     		ldr	r3, .L299	@ tmp110,
 3988              	@ main.c:1768: 			dma_buf[3]=0xe0;	dma_buf[11] =0xe0;	dma_buf[19]=0xe0;
 3989 0006 0549     		ldr	r1, .L299+4	@ tmp113,
 3990              	@ main.c:1765: 			dma_buf[0]=0xe0;	dma_buf[8]  =0xe0;	dma_buf[16]=0xe0;
ARM GAS  /tmp/cczkEFU1.s 			page 71


 3991 0008 1A60     		str	r2, [r3]	@ tmp111, MEM[(u08[24] *)&dma_buf]
 3992              	@ main.c:1768: 			dma_buf[3]=0xe0;	dma_buf[11] =0xe0;	dma_buf[19]=0xe0;
 3993 000a C3E90222 		strd	r2, r2, [r3, #8]	@ tmp111, tmp111, tmp110,
 3994 000e C3E90422 		strd	r2, r2, [r3, #16]	@ tmp111, tmp111, tmp110,
 3995 0012 5960     		str	r1, [r3, #4]	@ tmp113, MEM[(u08[24] *)&dma_buf + 4B]
 3996              	@ main.c:1773: 		}
 3997 0014 7047     		bx	lr	@
 3998              	.L300:
 3999 0016 00BF     		.align	2
 4000              	.L299:
 4001 0018 00000000 		.word	.LANCHOR28
 4002 001c E0F8F8F8 		.word	-117901088
 4003              		.size	col1, .-col1
 4004              		.section	.text.col2,"ax",%progbits
 4005              		.align	1
 4006              		.p2align 2,,3
 4007              		.global	col2
 4008              		.syntax unified
 4009              		.thumb
 4010              		.thumb_func
 4011              		.fpu softvfp
 4012              		.type	col2, %function
 4013              	col2:
 4014              		@ args = 0, pretend = 0, frame = 0
 4015              		@ frame_needed = 0, uses_anonymous_args = 0
 4016              		@ link register save eliminated.
 4017              	@ main.c:1775: 			dma_buf[0]=0xe0;	dma_buf[8]  =0xe0;	dma_buf[16]=0xe0;
 4018 0000 4FF0E032 		mov	r2, #-522133280	@ tmp111,
 4019 0004 034B     		ldr	r3, .L302	@ tmp110,
 4020              	@ main.c:1778: 			dma_buf[3]=0xe0;	dma_buf[11] =0xe0;	dma_buf[19]=0xe0;
 4021 0006 C3E90022 		strd	r2, r2, [r3]	@ tmp111, tmp111, tmp110
 4022 000a C3E90222 		strd	r2, r2, [r3, #8]	@ tmp111, tmp111, tmp110,
 4023 000e C3E90422 		strd	r2, r2, [r3, #16]	@ tmp111, tmp111, tmp110,
 4024              	@ main.c:1783: 	}	
 4025 0012 7047     		bx	lr	@
 4026              	.L303:
 4027              		.align	2
 4028              	.L302:
 4029 0014 00000000 		.word	.LANCHOR28
 4030              		.size	col2, .-col2
 4031              		.section	.text.col0,"ax",%progbits
 4032              		.align	1
 4033              		.p2align 2,,3
 4034              		.global	col0
 4035              		.syntax unified
 4036              		.thumb
 4037              		.thumb_func
 4038              		.fpu softvfp
 4039              		.type	col0, %function
 4040              	col0:
 4041              		@ args = 0, pretend = 0, frame = 0
 4042              		@ frame_needed = 0, uses_anonymous_args = 0
 4043              		@ link register save eliminated.
 4044              	@ main.c:1785: 			dma_buf[0]=0;	dma_buf[8]  =0x0;	dma_buf[16]=0x0;
 4045 0000 0022     		movs	r2, #0	@ tmp111,
 4046 0002 044B     		ldr	r3, .L305	@ tmp110,
 4047              	@ main.c:1788: 			dma_buf[3]=0;	dma_buf[11] =0x0;	dma_buf[19]=0x0;
ARM GAS  /tmp/cczkEFU1.s 			page 72


 4048 0004 C3E90022 		strd	r2, r2, [r3]	@ tmp111, tmp111, tmp110
 4049 0008 C3E90222 		strd	r2, r2, [r3, #8]	@ tmp111, tmp111, tmp110,
 4050 000c C3E90422 		strd	r2, r2, [r3, #16]	@ tmp111, tmp111, tmp110,
 4051              	@ main.c:1793: 	}
 4052 0010 7047     		bx	lr	@
 4053              	.L306:
 4054 0012 00BF     		.align	2
 4055              	.L305:
 4056 0014 00000000 		.word	.LANCHOR28
 4057              		.size	col0, .-col0
 4058              		.section	.text.ws2812led,"ax",%progbits
 4059              		.align	1
 4060              		.p2align 2,,3
 4061              		.global	ws2812led
 4062              		.syntax unified
 4063              		.thumb
 4064              		.thumb_func
 4065              		.fpu softvfp
 4066              		.type	ws2812led, %function
 4067              	ws2812led:
 4068              		@ args = 0, pretend = 0, frame = 0
 4069              		@ frame_needed = 0, uses_anonymous_args = 0
 4070 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 4071              	@ main.c:1805: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|SPI_CR1_MSTR|SPI_CR1_BR_0|SPI_CR1_BR_1;	// 0x0
 4072 0004 4FF44774 		mov	r4, #796	@ tmp152,
 4073              	@ main.c:1799: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0xBBB30000;	// PA5~7
 4074 0008 3648     		ldr	r0, .L319	@ tmp143,
 4075              	@ main.c:1803: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 4076 000a 3749     		ldr	r1, .L319+4	@ tmp148,
 4077              	@ main.c:1799: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0xBBB30000;	// PA5~7
 4078 000c 0368     		ldr	r3, [r0]	@ _2, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 4079              	@ main.c:1805: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|SPI_CR1_MSTR|SPI_CR1_BR_0|SPI_CR1_BR_1;	// 0x0
 4080 000e 374A     		ldr	r2, .L319+8	@ tmp150,
 4081              	@ main.c:1799: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0xBBB30000;	// PA5~7
 4082 0010 9BB2     		uxth	r3, r3	@ tmp144, _2
 4083 0012 43F03B43 		orr	r3, r3, #-1157627904	@ _5, tmp144,
 4084 0016 43F43303 		orr	r3, r3, #11730944	@ _5, _5,
 4085 001a 0360     		str	r3, [r0]	@ _5, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 4086              	@ main.c:1818: 		DMA1_Channel3->CCR 	= 0;										//Disable channel
 4087 001c 0020     		movs	r0, #0	@ tmp167,
 4088              	@ main.c:1803: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 4089 001e 8B69     		ldr	r3, [r1, #24]	@ _7, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 4090              	@ main.c:1833: 		DMA1_Channel3->CCR =  CCR_reg;	
 4091 0020 B026     		movs	r6, #176	@ tmp175,
 4092              	@ main.c:1803: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 4093 0022 43F48053 		orr	r3, r3, #4096	@ _8, _7,
 4094 0026 8B61     		str	r3, [r1, #24]	@ _8, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 4095              	@ main.c:1805: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|SPI_CR1_MSTR|SPI_CR1_BR_0|SPI_CR1_BR_1;	// 0x0
 4096 0028 1480     		strh	r4, [r2]	@ movhi	@ tmp152, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 4097              	@ main.c:1806: 		SPI1->CR2 |= SPI_CR2_TXDMAEN;
 4098 002a 9388     		ldrh	r3, [r2, #4]	@, MEM[(struct SPI_TypeDef *)1073819648B].CR2
 4099              	@ main.c:1840: 		u08 fl=0;
 4100 002c 0446     		mov	r4, r0	@ fl, tmp167
 4101              	@ main.c:1806: 		SPI1->CR2 |= SPI_CR2_TXDMAEN;
 4102 002e 43F00203 		orr	r3, r3, #2	@ _10, MEM[(struct SPI_TypeDef *)1073819648B].CR2,
 4103 0032 9380     		strh	r3, [r2, #4]	@ movhi	@ _10, MEM[(struct SPI_TypeDef *)1073819648B].CR2
 4104              	@ main.c:1807: 		SPI1->CR1 |= SPI_CR1_SPE;		
ARM GAS  /tmp/cczkEFU1.s 			page 73


 4105 0034 1388     		ldrh	r3, [r2]	@, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 4106              	@ main.c:1835: 		DMA1->IFCR = DMA_IFCR_CGIF3 | DMA_IFCR_CTCIF3;
 4107 0036 4FF44075 		mov	r5, #768	@ tmp177,
 4108              	@ main.c:1807: 		SPI1->CR1 |= SPI_CR1_SPE;		
 4109 003a 43F04003 		orr	r3, r3, #64	@ _12, MEM[(struct SPI_TypeDef *)1073819648B].CR1,
 4110 003e 1380     		strh	r3, [r2]	@ movhi	@ _12, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 4111              	@ main.c:1815: 		col0();
 4112 0040 FFF7FEFF 		bl	col0	@
 4113              	@ main.c:1822: 		DMA1_Channel3->CNDTR = 24;		//Buffor size :
 4114 0044 4FF0180C 		mov	ip, #24	@ tmp173,
 4115              	@ main.c:1817: 		RCC->AHBENR   			|= RCC_AHBENR_DMA1EN;		// enable clock for DMA1
 4116 0048 4A69     		ldr	r2, [r1, #20]	@ _13, MEM[(struct RCC_TypeDef *)1073876992B].AHBENR
 4117              	@ main.c:1818: 		DMA1_Channel3->CCR 	= 0;										//Disable channel
 4118 004a 294B     		ldr	r3, .L319+12	@ tmp166,
 4119              	@ main.c:1817: 		RCC->AHBENR   			|= RCC_AHBENR_DMA1EN;		// enable clock for DMA1
 4120 004c 42F00102 		orr	r2, r2, #1	@ _14, _13,
 4121 0050 4A61     		str	r2, [r1, #20]	@ _14, MEM[(struct RCC_TypeDef *)1073876992B].AHBENR
 4122              	@ main.c:1819: 		DMA1_Channel3->CMAR = (uint32_t)dma_buf;	 	//Destination address:
 4123 0052 2849     		ldr	r1, .L319+16	@ tmp168,
 4124              	@ main.c:1820: 		DMA1_Channel3->CPAR = (uint32_t)&SPI1->DR;	//Source PERIPHERAL address:
 4125 0054 284A     		ldr	r2, .L319+20	@ tmp171,
 4126              	@ main.c:1818: 		DMA1_Channel3->CCR 	= 0;										//Disable channel
 4127 0056 1860     		str	r0, [r3]	@ tmp167, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CCR
 4128              	@ main.c:1819: 		DMA1_Channel3->CMAR = (uint32_t)dma_buf;	 	//Destination address:
 4129 0058 D960     		str	r1, [r3, #12]	@ tmp168, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CMAR
 4130              	@ main.c:1820: 		DMA1_Channel3->CPAR = (uint32_t)&SPI1->DR;	//Source PERIPHERAL address:
 4131 005a 9A60     		str	r2, [r3, #8]	@ tmp171, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CPAR
 4132              	@ main.c:1835: 		DMA1->IFCR = DMA_IFCR_CGIF3 | DMA_IFCR_CTCIF3;
 4133 005c 274A     		ldr	r2, .L319+24	@ tmp176,
 4134              	@ main.c:1822: 		DMA1_Channel3->CNDTR = 24;		//Buffor size :
 4135 005e C3F804C0 		str	ip, [r3, #4]	@ tmp173, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CNDTR
 4136              	@ main.c:1833: 		DMA1_Channel3->CCR =  CCR_reg;	
 4137 0062 1E60     		str	r6, [r3]	@ tmp175, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CCR
 4138              	@ main.c:1835: 		DMA1->IFCR = DMA_IFCR_CGIF3 | DMA_IFCR_CTCIF3;
 4139 0064 5560     		str	r5, [r2, #4]	@ tmp177, MEM[(struct DMA_TypeDef *)1073872896B].IFCR
 4140              	@ main.c:1836: 		DMA1_Channel3->CCR |= DMA_CCR1_EN;
 4141 0066 1A68     		ldr	r2, [r3]	@ _16, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CCR
 4142              	@ main.c:1839: 		UaPutK("\r\n DMA start...");
 4143 0068 2548     		ldr	r0, .L319+28	@,
 4144              	@ main.c:1836: 		DMA1_Channel3->CCR |= DMA_CCR1_EN;
 4145 006a 42F00102 		orr	r2, r2, #1	@ _17, _16,
 4146 006e 1A60     		str	r2, [r3]	@ _17, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CCR
 4147              	@ main.c:1839: 		UaPutK("\r\n DMA start...");
 4148 0070 FFF7FEFF 		bl	UaPutK	@
 4149 0074 234F     		ldr	r7, .L319+32	@ tmp206,
 4150 0076 DFF8A080 		ldr	r8, .L319+52	@ tmp208,
 4151 007a 234E     		ldr	r6, .L319+36	@ tmp207,
 4152              	@ main.c:1844: 			if(STCLK_MS*100 < (trg0 - SysTick->VAL)){
 4153 007c 2348     		ldr	r0, .L319+40	@ tmp182,
 4154              	@ main.c:1871: 					LED ^= 1;
 4155 007e 244D     		ldr	r5, .L319+44	@ tmp209,
 4156              	.L314:
 4157              	@ main.c:1844: 			if(STCLK_MS*100 < (trg0 - SysTick->VAL)){
 4158 0080 DFF898C0 		ldr	ip, .L319+56	@ tmp184,
 4159              	@ main.c:1848: 			if(STCLK_MS*200 < (trg1 - SysTick->VAL)){
 4160 0084 2349     		ldr	r1, .L319+48	@ tmp190,
 4161              	.L309:
ARM GAS  /tmp/cczkEFU1.s 			page 74


 4162              	@ main.c:1844: 			if(STCLK_MS*100 < (trg0 - SysTick->VAL)){
 4163 0086 3B68     		ldr	r3, [r7]	@ trg0.143_18, trg0
 4164 0088 8268     		ldr	r2, [r0, #8]	@ _19, MEM[(struct SysTick_Type *)3758153744B].VAL
 4165 008a 9B1A     		subs	r3, r3, r2	@ tmp183, trg0.143_18, _19
 4166 008c 6345     		cmp	r3, ip	@ tmp183, tmp184
 4167              	@ main.c:1845: 				trg0 = SysTick->VAL;
 4168 008e 84BF     		itt	hi
 4169 0090 8368     		ldrhi	r3, [r0, #8]	@ _21, MEM[(struct SysTick_Type *)3758153744B].VAL
 4170 0092 3B60     		strhi	r3, [r7]	@ _21, trg0
 4171              	@ main.c:1848: 			if(STCLK_MS*200 < (trg1 - SysTick->VAL)){
 4172 0094 D8F80030 		ldr	r3, [r8]	@ trg1.144_22, trg1
 4173 0098 8268     		ldr	r2, [r0, #8]	@ _23, MEM[(struct SysTick_Type *)3758153744B].VAL
 4174 009a 9B1A     		subs	r3, r3, r2	@ tmp189, trg1.144_22, _23
 4175 009c 8B42     		cmp	r3, r1	@ tmp189, tmp190
 4176 009e F2D9     		bls	.L309	@,
 4177              	@ main.c:1849: 				trg1 = SysTick->VAL;
 4178 00a0 8368     		ldr	r3, [r0, #8]	@ _25, MEM[(struct SysTick_Type *)3758153744B].VAL
 4179 00a2 C8F80030 		str	r3, [r8]	@ _25, trg1
 4180              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4181 00a6 8368     		ldr	r3, [r0, #8]	@ _55, MEM[(struct SysTick_Type *)3758153744B].VAL
 4182 00a8 3360     		str	r3, [r6]	@ _55, delay_us
 4183              	.L310:
 4184              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4185 00aa 3368     		ldr	r3, [r6]	@ delay_us.83_56, delay_us
 4186 00ac 8268     		ldr	r2, [r0, #8]	@ _57, MEM[(struct SysTick_Type *)3758153744B].VAL
 4187 00ae 9B1A     		subs	r3, r3, r2	@ tmp197, delay_us.83_56, _57
 4188 00b0 B3F5E17F 		cmp	r3, #450	@ tmp197,
 4189 00b4 F9D3     		bcc	.L310	@,
 4190              	@ main.c:1865: 				if(fl){
 4191 00b6 74B1     		cbz	r4, .L311	@ fl,
 4192              	@ main.c:1866: 					col1();
 4193 00b8 FFF7FEFF 		bl	col1	@
 4194              	@ main.c:1867: 					fl=0;
 4195 00bc 0024     		movs	r4, #0	@ fl,
 4196              	.L312:
 4197              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4198 00be 40F62311 		movw	r1, #2339	@ tmp205,
 4199              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4200 00c2 8368     		ldr	r3, [r0, #8]	@ _59, MEM[(struct SysTick_Type *)3758153744B].VAL
 4201 00c4 3360     		str	r3, [r6]	@ _59, delay_us
 4202              	.L313:
 4203              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4204 00c6 3368     		ldr	r3, [r6]	@ delay_us.83_60, delay_us
 4205 00c8 8268     		ldr	r2, [r0, #8]	@ _61, MEM[(struct SysTick_Type *)3758153744B].VAL
 4206 00ca 9B1A     		subs	r3, r3, r2	@ tmp204, delay_us.83_60, _61
 4207 00cc 8B42     		cmp	r3, r1	@ tmp204, tmp205
 4208 00ce FAD9     		bls	.L313	@,
 4209              	@ main.c:1875: 				col0();
 4210 00d0 FFF7FEFF 		bl	col0	@
 4211 00d4 D4E7     		b	.L314	@
 4212              	.L311:
 4213              	@ main.c:1870: 					fl=1;
 4214 00d6 0124     		movs	r4, #1	@ fl,
 4215              	@ main.c:1869: 					col1();
 4216 00d8 FFF7FEFF 		bl	col1	@
 4217              	@ main.c:1871: 					LED ^= 1;
 4218 00dc 2B68     		ldr	r3, [r5]	@ _26, MEM[(volatile long unsigned int *)1109524916B]
ARM GAS  /tmp/cczkEFU1.s 			page 75


 4219 00de 6340     		eors	r3, r3, r4	@, _27, _26,
 4220 00e0 2B60     		str	r3, [r5]	@ _27, MEM[(volatile long unsigned int *)1109524916B]
 4221 00e2 ECE7     		b	.L312	@
 4222              	.L320:
 4223              		.align	2
 4224              	.L319:
 4225 00e4 00080140 		.word	1073809408
 4226 00e8 00100240 		.word	1073876992
 4227 00ec 00300140 		.word	1073819648
 4228 00f0 30000240 		.word	1073872944
 4229 00f4 00000000 		.word	.LANCHOR28
 4230 00f8 0C300140 		.word	1073819660
 4231 00fc 00000240 		.word	1073872896
 4232 0100 00000000 		.word	.LC61
 4233 0104 00000000 		.word	trg0
 4234 0108 00000000 		.word	delay_us
 4235 010c 10E000E0 		.word	-536813552
 4236 0110 B4012242 		.word	1109524916
 4237 0114 40771B00 		.word	1800000
 4238 0118 00000000 		.word	trg1
 4239 011c A0BB0D00 		.word	900000
 4240              		.size	ws2812led, .-ws2812led
 4241              		.section	.text.lexmark_lcd,"ax",%progbits
 4242              		.align	1
 4243              		.p2align 2,,3
 4244              		.global	lexmark_lcd
 4245              		.syntax unified
 4246              		.thumb
 4247              		.thumb_func
 4248              		.fpu softvfp
 4249              		.type	lexmark_lcd, %function
 4250              	lexmark_lcd:
 4251              		@ Volatile: function does not return.
 4252              		@ args = 0, pretend = 0, frame = 8
 4253              		@ frame_needed = 0, uses_anonymous_args = 0
 4254 0000 00B5     		push	{lr}	@
 4255 0002 83B0     		sub	sp, sp, #12	@,,
 4256              	@ main.c:1956: 		UC1608_Init();
 4257 0004 FFF7FEFF 		bl	UC1608_Init	@
 4258              	@ main.c:1962: 		UC1608_Clr();
 4259 0008 FFF7FEFF 		bl	UC1608_Clr	@
 4260              	@ main.c:1964: 		UC1608_str (0, 0,"Witaj szkolo         ");
 4261 000c 0021     		movs	r1, #0	@,
 4262 000e 174A     		ldr	r2, .L326	@,
 4263 0010 0846     		mov	r0, r1	@,
 4264 0012 FFF7FEFF 		bl	UC1608_str	@
 4265              	@ main.c:1965: 		UC1608_str (1, 0,"Zapraszam do pracy        ");
 4266 0016 164A     		ldr	r2, .L326+4	@,
 4267 0018 0021     		movs	r1, #0	@,
 4268 001a 0120     		movs	r0, #1	@,
 4269 001c FFF7FEFF 		bl	UC1608_str	@
 4270              	@ main.c:1966: 		UC1608_Refresh();
 4271 0020 FFF7FEFF 		bl	UC1608_Refresh	@
 4272              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 4273 0024 134B     		ldr	r3, .L326+8	@ tmp122,
 4274 0026 144A     		ldr	r2, .L326+12	@ tmp137,
 4275              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
ARM GAS  /tmp/cczkEFU1.s 			page 76


 4276 0028 1D46     		mov	r5, r3	@ tmp125, tmp122
 4277              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 4278 002a 9B68     		ldr	r3, [r3, #8]	@ _17, MEM[(struct SysTick_Type *)3758153744B].VAL
 4279              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 4280 002c 1349     		ldr	r1, .L326+16	@ tmp127,
 4281              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 4282 002e 1360     		str	r3, [r2]	@ _17, delay_us
 4283              	.L322:
 4284              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 4285 0030 1368     		ldr	r3, [r2]	@ delay_us.70_18, delay_us
 4286 0032 A868     		ldr	r0, [r5, #8]	@ _19, MEM[(struct SysTick_Type *)3758153744B].VAL
 4287 0034 1B1A     		subs	r3, r3, r0	@ tmp126, delay_us.70_18, _19
 4288 0036 8B42     		cmp	r3, r1	@ tmp126, tmp127
 4289 0038 FAD9     		bls	.L322	@,
 4290              	@ main.c:1969: 		UC1608_str (1, 0,"                          ");
 4291 003a 114A     		ldr	r2, .L326+20	@,
 4292 003c 0021     		movs	r1, #0	@,
 4293 003e 0120     		movs	r0, #1	@,
 4294 0040 FFF7FEFF 		bl	UC1608_str	@
 4295              	@ main.c:1970: 		UC1608_Refresh();
 4296 0044 FFF7FEFF 		bl	UC1608_Refresh	@
 4297              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 4298 0048 AA68     		ldr	r2, [r5, #8]	@ _16, MEM[(struct SysTick_Type *)3758153744B].VAL
 4299 004a 0E4B     		ldr	r3, .L326+24	@ tmp130,
 4300              	@ main.c:1975: 		UaPutS(" T[us]="); sint2uart(tim/TIM_US);
 4301 004c 0E48     		ldr	r0, .L326+28	@,
 4302              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 4303 004e 1A60     		str	r2, [r3]	@ _16, Timt
 4304              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 4305 0050 1C68     		ldr	r4, [r3]	@ Timt.82_13, Timt
 4306 0052 AB68     		ldr	r3, [r5, #8]	@ _14, MEM[(struct SysTick_Type *)3758153744B].VAL
 4307 0054 E41A     		subs	r4, r4, r3	@ _15, Timt.82_13, _14
 4308 0056 0194     		str	r4, [sp, #4]	@ _15, MEM[(volatile u32 *)&tim]
 4309              	@ main.c:1975: 		UaPutS(" T[us]="); sint2uart(tim/TIM_US);
 4310 0058 FFF7FEFF 		bl	UaPutS	@
 4311 005c 0B48     		ldr	r0, .L326+32	@ tmp136,
 4312 005e A0FB0430 		umull	r3, r0, r0, r4	@ tmp138, tmp135, tmp136, _15
 4313 0062 4008     		lsrs	r0, r0, #1	@, tmp135,
 4314 0064 FFF7FEFF 		bl	sint2uart	@
 4315              	.L323:
 4316 0068 FEE7     		b	.L323	@
 4317              	.L327:
 4318 006a 00BF     		.align	2
 4319              	.L326:
 4320 006c 00000000 		.word	.LC62
 4321 0070 18000000 		.word	.LC63
 4322 0074 10E000E0 		.word	-536813552
 4323 0078 00000000 		.word	delay_us
 4324 007c 3F548900 		.word	8999999
 4325 0080 34000000 		.word	.LC64
 4326 0084 00000000 		.word	Timt
 4327 0088 50000000 		.word	.LC65
 4328 008c 398EE338 		.word	954437177
 4329              		.size	lexmark_lcd, .-lexmark_lcd
 4330              		.section	.text.softUTX_init,"ax",%progbits
 4331              		.align	1
 4332              		.p2align 2,,3
ARM GAS  /tmp/cczkEFU1.s 			page 77


 4333              		.global	softUTX_init
 4334              		.syntax unified
 4335              		.thumb
 4336              		.thumb_func
 4337              		.fpu softvfp
 4338              		.type	softUTX_init, %function
 4339              	softUTX_init:
 4340              		@ args = 0, pretend = 0, frame = 0
 4341              		@ frame_needed = 0, uses_anonymous_args = 0
 4342              		@ link register save eliminated.
 4343              	@ main.c:2045: 		GPIOC->CRH = (GPIOC->CRH & 0xf0ffffff) | 0x01000000;  				// PC14 = softUART
 4344 0000 034A     		ldr	r2, .L329	@ tmp113,
 4345 0002 5368     		ldr	r3, [r2, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 4346 0004 23F07063 		bic	r3, r3, #251658240	@ tmp114, _1,
 4347 0008 43F08073 		orr	r3, r3, #16777216	@ _3, tmp114,
 4348 000c 5360     		str	r3, [r2, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 4349              	@ main.c:2046: 	}
 4350 000e 7047     		bx	lr	@
 4351              	.L330:
 4352              		.align	2
 4353              	.L329:
 4354 0010 00100140 		.word	1073811456
 4355              		.size	softUTX_init, .-softUTX_init
 4356              		.section	.text.sofUTX,"ax",%progbits
 4357              		.align	1
 4358              		.p2align 2,,3
 4359              		.global	sofUTX
 4360              		.syntax unified
 4361              		.thumb
 4362              		.thumb_func
 4363              		.fpu softvfp
 4364              		.type	sofUTX, %function
 4365              	sofUTX:
 4366              		@ args = 0, pretend = 0, frame = 8
 4367              		@ frame_needed = 0, uses_anonymous_args = 0
 4368              		@ link register save eliminated.
 4369              	@ main.c:2050: 		p_SofTX=0;				  //START Bit
 4370 0000 0021     		movs	r1, #0	@ tmp129,
 4371              	@ main.c:2047: void sofUTX(volatile u08 bTX)	{  /// Sotware Transmit USART Frame [8N1] with TIMER P
 4372 0002 F0B4     		push	{r4, r5, r6, r7}	@
 4373              	@ main.c:2050: 		p_SofTX=0;				  //START Bit
 4374 0004 194A     		ldr	r2, .L343	@ tmp128,
 4375              	@ inc/tool/delay.h:99: 		delay_us = SysTick->VAL; 
 4376 0006 1A4B     		ldr	r3, .L343+4	@ tmp130,
 4377              	@ main.c:2047: void sofUTX(volatile u08 bTX)	{  /// Sotware Transmit USART Frame [8N1] with TIMER P
 4378 0008 82B0     		sub	sp, sp, #8	@,,
 4379              	@ main.c:2047: void sofUTX(volatile u08 bTX)	{  /// Sotware Transmit USART Frame [8N1] with TIMER P
 4380 000a 8DF80700 		strb	r0, [sp, #7]	@ bTX, bTX
 4381              	@ main.c:2050: 		p_SofTX=0;				  //START Bit
 4382 000e 1160     		str	r1, [r2]	@ tmp129, MEM[(volatile long unsigned int *)1109524920B]
 4383              	@ inc/tool/delay.h:100: 		while( STCLK_DN*ns > (delay_us - SysTick->VAL) );
 4384 0010 1C46     		mov	r4, r3	@ tmp133, tmp130
 4385              	@ inc/tool/delay.h:99: 		delay_us = SysTick->VAL; 
 4386 0012 1849     		ldr	r1, .L343+8	@ tmp158,
 4387 0014 9B68     		ldr	r3, [r3, #8]	@ _16, MEM[(struct SysTick_Type *)3758153744B].VAL
 4388 0016 0B60     		str	r3, [r1]	@ _16, delay_us
 4389              	.L332:
ARM GAS  /tmp/cczkEFU1.s 			page 78


 4390              	@ inc/tool/delay.h:100: 		while( STCLK_DN*ns > (delay_us - SysTick->VAL) );
 4391 0018 0B68     		ldr	r3, [r1]	@ delay_us.152_17, delay_us
 4392 001a A268     		ldr	r2, [r4, #8]	@ _18, MEM[(struct SysTick_Type *)3758153744B].VAL
 4393 001c 9B1A     		subs	r3, r3, r2	@ tmp134, delay_us.152_17, _18
 4394 001e 112B     		cmp	r3, #17	@ tmp134,
 4395 0020 FAD9     		bls	.L332	@,
 4396              	@ main.c:2048: 		u08  cTX = 1 ;
 4397 0022 0124     		movs	r4, #1	@ cTX,
 4398              	@ inc/tool/delay.h:100: 		while( STCLK_DN*ns > (delay_us - SysTick->VAL) );
 4399 0024 0825     		movs	r5, #8	@ ivtmp_3,
 4400              	@ main.c:2053: 		 if(bTX & cTX)  p_SofTX=1;
 4401 0026 2746     		mov	r7, r4	@ tmp160, cTX
 4402              	@ main.c:2054: 		 else 					p_SofTX=0;
 4403 0028 104E     		ldr	r6, .L343	@ tmp159,
 4404              	@ inc/tool/delay.h:99: 		delay_us = SysTick->VAL; 
 4405 002a 1148     		ldr	r0, .L343+4	@ tmp146,
 4406              	.L336:
 4407              	@ main.c:2053: 		 if(bTX & cTX)  p_SofTX=1;
 4408 002c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2	@ bTX, bTX
 4409 0030 2340     		ands	r3, r3, r4	@ tmp140, bTX, cTX
 4410 0032 14BF     		ite	ne
 4411 0034 3760     		strne	r7, [r6]	@ tmp160, MEM[(volatile long unsigned int *)1109524920B]
 4412              	@ main.c:2054: 		 else 					p_SofTX=0;
 4413 0036 3360     		streq	r3, [r6]	@ tmp140, MEM[(volatile long unsigned int *)1109524920B]
 4414              	@ inc/tool/delay.h:99: 		delay_us = SysTick->VAL; 
 4415 0038 8368     		ldr	r3, [r0, #8]	@ _20, MEM[(struct SysTick_Type *)3758153744B].VAL
 4416              	@ main.c:2055: 		 cTX <<= 1;
 4417 003a 6400     		lsls	r4, r4, #1	@ tmp145, cTX,
 4418 003c E4B2     		uxtb	r4, r4	@ cTX, tmp145
 4419              	@ inc/tool/delay.h:99: 		delay_us = SysTick->VAL; 
 4420 003e 0B60     		str	r3, [r1]	@ _20, delay_us
 4421              	.L335:
 4422              	@ inc/tool/delay.h:100: 		while( STCLK_DN*ns > (delay_us - SysTick->VAL) );
 4423 0040 0B68     		ldr	r3, [r1]	@ delay_us.152_21, delay_us
 4424 0042 8268     		ldr	r2, [r0, #8]	@ _22, MEM[(struct SysTick_Type *)3758153744B].VAL
 4425 0044 9B1A     		subs	r3, r3, r2	@ tmp150, delay_us.152_21, _22
 4426 0046 112B     		cmp	r3, #17	@ tmp150,
 4427 0048 FAD9     		bls	.L335	@,
 4428              	@ main.c:2052: 		while(cTX != 0){		//Wait to send Data
 4429 004a 013D     		subs	r5, r5, #1	@ ivtmp_3, ivtmp_3,
 4430 004c EED1     		bne	.L336	@,
 4431              	@ main.c:2058: 		p_SofTX=1;				//STOP Bit		
 4432 004e 0122     		movs	r2, #1	@ tmp152,
 4433 0050 064B     		ldr	r3, .L343	@ tmp151,
 4434              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4435 0052 074C     		ldr	r4, .L343+4	@ tmp156,
 4436              	@ main.c:2058: 		p_SofTX=1;				//STOP Bit		
 4437 0054 1A60     		str	r2, [r3]	@ tmp152, MEM[(volatile long unsigned int *)1109524920B]
 4438              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4439 0056 8368     		ldr	r3, [r0, #8]	@ _12, MEM[(struct SysTick_Type *)3758153744B].VAL
 4440 0058 0B60     		str	r3, [r1]	@ _12, delay_us
 4441              	.L337:
 4442              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4443 005a 0B68     		ldr	r3, [r1]	@ delay_us.83_13, delay_us
 4444 005c A268     		ldr	r2, [r4, #8]	@ _14, MEM[(struct SysTick_Type *)3758153744B].VAL
 4445 005e 9B1A     		subs	r3, r3, r2	@ tmp157, delay_us.83_13, _14
 4446 0060 592B     		cmp	r3, #89	@ tmp157,
ARM GAS  /tmp/cczkEFU1.s 			page 79


 4447 0062 FAD9     		bls	.L337	@,
 4448              	@ main.c:2060: 	}
 4449 0064 02B0     		add	sp, sp, #8	@,,
 4450              		@ sp needed	@
 4451 0066 F0BC     		pop	{r4, r5, r6, r7}	@
 4452 0068 7047     		bx	lr	@
 4453              	.L344:
 4454 006a 00BF     		.align	2
 4455              	.L343:
 4456 006c B8012242 		.word	1109524920
 4457 0070 10E000E0 		.word	-536813552
 4458 0074 00000000 		.word	delay_us
 4459              		.size	sofUTX, .-sofUTX
 4460              		.section	.text.ToLED,"ax",%progbits
 4461              		.align	1
 4462              		.p2align 2,,3
 4463              		.global	ToLED
 4464              		.syntax unified
 4465              		.thumb
 4466              		.thumb_func
 4467              		.fpu softvfp
 4468              		.type	ToLED, %function
 4469              	ToLED:
 4470              		@ args = 0, pretend = 0, frame = 0
 4471              		@ frame_needed = 0, uses_anonymous_args = 0
 4472 0000 70B5     		push	{r4, r5, r6, lr}	@
 4473              	@ main.c:2061: void ToLED(u16 B,u16 A,u08 dot)	{
 4474 0002 0546     		mov	r5, r0	@ B, B
 4475 0004 0C46     		mov	r4, r1	@ A, A
 4476 0006 1646     		mov	r6, r2	@ dot, dot
 4477              	@ main.c:2062: 		sofUTX(B&0x00ff);	// segment LO
 4478 0008 C0B2     		uxtb	r0, r0	@, B
 4479 000a FFF7FEFF 		bl	sofUTX	@
 4480              	@ main.c:2063: 		sofUTX(B>>8);			// segment HI
 4481 000e 280A     		lsrs	r0, r5, #8	@, B,
 4482 0010 FFF7FEFF 		bl	sofUTX	@
 4483              	@ main.c:2064: 		sofUTX(A&0x00ff);	// segment LO
 4484 0014 E0B2     		uxtb	r0, r4	@, A
 4485 0016 FFF7FEFF 		bl	sofUTX	@
 4486              	@ main.c:2065: 		sofUTX(A>>8);			// segment HI
 4487 001a 200A     		lsrs	r0, r4, #8	@, A,
 4488 001c FFF7FEFF 		bl	sofUTX	@
 4489              	@ main.c:2066: 		sofUTX(dot);
 4490 0020 3046     		mov	r0, r6	@, dot
 4491              	@ main.c:2067: 	}
 4492 0022 BDE87040 		pop	{r4, r5, r6, lr}	@
 4493              	@ main.c:2066: 		sofUTX(dot);
 4494 0026 FFF7FEBF 		b	sofUTX	@
 4495              		.size	ToLED, .-ToLED
 4496 002a 00BF     		.section	.text.cmd_LCD,"ax",%progbits
 4497              		.align	1
 4498              		.p2align 2,,3
 4499              		.global	cmd_LCD
 4500              		.syntax unified
 4501              		.thumb
 4502              		.thumb_func
 4503              		.fpu softvfp
ARM GAS  /tmp/cczkEFU1.s 			page 80


 4504              		.type	cmd_LCD, %function
 4505              	cmd_LCD:
 4506              		@ args = 0, pretend = 0, frame = 0
 4507              		@ frame_needed = 0, uses_anonymous_args = 0
 4508 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 4509              	@ main.c:2072: 			if (byte & 0x80)	sMOSI = 1;
 4510 0004 4FF0010E 		mov	lr, #1	@ tmp147,
 4511              	@ main.c:2068: void cmd_LCD(uint8_t byte)	{
 4512 0008 0825     		movs	r5, #8	@ ivtmp_2,
 4513              	@ main.c:2075: 			sSCK = 1; /* a slave latches input data bit */
 4514 000a F046     		mov	r8, lr	@ MEM[(volatile long unsigned int *)1109459348B], tmp147
 4515              	@ main.c:2073: 			else							sMOSI = 0;
 4516 000c 0027     		movs	r7, #0	@ tmp146,
 4517 000e 1249     		ldr	r1, .L357	@ tmp144,
 4518 0010 DFF850C0 		ldr	ip, .L357+12	@ tmp145,
 4519              	@ main.c:2075: 			sSCK = 1; /* a slave latches input data bit */
 4520 0014 114E     		ldr	r6, .L357+4	@ tmp129,
 4521              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4522 0016 124A     		ldr	r2, .L357+8	@ tmp131,
 4523              	.L352:
 4524              	@ main.c:2072: 			if (byte & 0x80)	sMOSI = 1;
 4525 0018 0306     		lsls	r3, r0, #24	@, byte,
 4526 001a 4CBF     		ite	mi
 4527 001c CCF800E0 		strmi	lr, [ip]	@ tmp147, MEM[(volatile long unsigned int *)1109459356B]
 4528              	@ main.c:2073: 			else							sMOSI = 0;
 4529 0020 CCF80070 		strpl	r7, [ip]	@ tmp146, MEM[(volatile long unsigned int *)1109459356B]
 4530              	@ main.c:2075: 			sSCK = 1; /* a slave latches input data bit */
 4531 0024 C6F80080 		str	r8, [r6]	@ MEM[(volatile long unsigned int *)1109459348B], MEM[(volatile long unsigned int *)1
 4532              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4533 0028 9368     		ldr	r3, [r2, #8]	@ _18, MEM[(struct SysTick_Type *)3758153744B].VAL
 4534              	@ main.c:2074: 			byte <<= 1;
 4535 002a 4000     		lsls	r0, r0, #1	@ tmp128, byte,
 4536 002c C0B2     		uxtb	r0, r0	@ byte, tmp128
 4537              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4538 002e 0B60     		str	r3, [r1]	@ _18, delay_us
 4539              	.L350:
 4540              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4541 0030 0B68     		ldr	r3, [r1]	@ delay_us.83_19, delay_us
 4542 0032 9468     		ldr	r4, [r2, #8]	@ _20, MEM[(struct SysTick_Type *)3758153744B].VAL
 4543 0034 1B1B     		subs	r3, r3, r4	@ tmp135, delay_us.83_19, _20
 4544 0036 112B     		cmp	r3, #17	@ tmp135,
 4545 0038 FAD9     		bls	.L350	@,
 4546              	@ main.c:2077: 			sSCK = 0; /* a slave shifts out next output data bit */
 4547 003a 3760     		str	r7, [r6]	@ tmp146, MEM[(volatile long unsigned int *)1109459348B]
 4548              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4549 003c 9368     		ldr	r3, [r2, #8]	@ _14, MEM[(struct SysTick_Type *)3758153744B].VAL
 4550 003e 0B60     		str	r3, [r1]	@ _14, delay_us
 4551              	.L351:
 4552              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4553 0040 0B68     		ldr	r3, [r1]	@ delay_us.83_15, delay_us
 4554 0042 9468     		ldr	r4, [r2, #8]	@ _16, MEM[(struct SysTick_Type *)3758153744B].VAL
 4555 0044 1B1B     		subs	r3, r3, r4	@ tmp142, delay_us.83_15, _16
 4556 0046 112B     		cmp	r3, #17	@ tmp142,
 4557 0048 FAD9     		bls	.L351	@,
 4558 004a 013D     		subs	r5, r5, #1	@ tmp143, ivtmp_2,
 4559              	@ main.c:2070: 		for(counter = 8; counter; counter--)
 4560 004c 15F0FF05 		ands	r5, r5, #255	@ ivtmp_2, tmp143,
ARM GAS  /tmp/cczkEFU1.s 			page 81


 4561 0050 E2D1     		bne	.L352	@,
 4562              	@ main.c:2081: 	}
 4563 0052 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}	@
 4564              	.L358:
 4565 0056 00BF     		.align	2
 4566              	.L357:
 4567 0058 00000000 		.word	delay_us
 4568 005c 94012142 		.word	1109459348
 4569 0060 10E000E0 		.word	-536813552
 4570 0064 9C012142 		.word	1109459356
 4571              		.size	cmd_LCD, .-cmd_LCD
 4572              		.section	.text.CalculateLux,"ax",%progbits
 4573              		.align	1
 4574              		.p2align 2,,3
 4575              		.global	CalculateLux
 4576              		.syntax unified
 4577              		.thumb
 4578              		.thumb_func
 4579              		.fpu softvfp
 4580              		.type	CalculateLux, %function
 4581              	CalculateLux:
 4582              		@ args = 4, pretend = 0, frame = 0
 4583              		@ frame_needed = 0, uses_anonymous_args = 0
 4584              		@ link register save eliminated.
 4585 0000 30B4     		push	{r4, r5}	@
 4586              	@ main.c:2082: u16  CalculateLux(u16 iGain, u16 tInt, u16 ch0, u16 ch1, int iType)	{
 4587 0002 029D     		ldr	r5, [sp, #8]	@ iType, iType
 4588              	@ main.c:2100:     switch (tInt)
 4589 0004 0029     		cmp	r1, #0	@ tInt
 4590 0006 47D0     		beq	.L361	@
 4591              	@ main.c:2111:        chScale = (1 << CH_SCALE);
 4592 0008 40F6E774 		movw	r4, #4071	@ tmp153,
 4593 000c 0129     		cmp	r1, #1	@ tInt,
 4594 000e 0CBF     		ite	eq
 4595 0010 2146     		moveq	r1, r4	@ chScale, tmp153
 4596 0012 4FF48061 		movne	r1, #1024	@ chScale,
 4597              	.L362:
 4598              	@ main.c:2116:     if (!iGain) chScale = chScale << 4; // scale 1X to 16X
 4599 0016 00B9     		cbnz	r0, .L363	@ iGain,
 4600              	@ main.c:2116:     if (!iGain) chScale = chScale << 4; // scale 1X to 16X
 4601 0018 0901     		lsls	r1, r1, #4	@ chScale, chScale,
 4602              	.L363:
 4603              	@ main.c:2120:     channel1 = (ch1 * chScale) >> CH_SCALE;
 4604 001a 01FB03F3 		mul	r3, r1, r3	@ _4, chScale, ch1
 4605              	@ main.c:2119:     channel0 = (ch0 * chScale) >> CH_SCALE;
 4606 001e 01FB02F1 		mul	r1, r1, r2	@ tmp139, chScale, ch0
 4607              	@ main.c:2126:     if (channel0 != 0) ratio1 = (channel1 << (RATIO_SCALE+1)) / channel0;
 4608 0022 890A     		lsrs	r1, r1, #10	@ channel0, tmp139,
 4609              	@ main.c:2120:     channel1 = (ch1 * chScale) >> CH_SCALE;
 4610 0024 4FEA9320 		lsr	r0, r3, #10	@ channel1, _4,
 4611              	@ main.c:2126:     if (channel0 != 0) ratio1 = (channel1 << (RATIO_SCALE+1)) / channel0;
 4612 0028 18D0     		beq	.L364	@,
 4613              	@ main.c:2126:     if (channel0 != 0) ratio1 = (channel1 << (RATIO_SCALE+1)) / channel0;
 4614 002a 23F47F73 		bic	r3, r3, #1020	@ tmp140, _4,
 4615 002e 23F00303 		bic	r3, r3, #3	@ tmp140, tmp140,
 4616 0032 B3FBF1F3 		udiv	r3, r3, r1	@ ratio1, tmp140, channel0
 4617 0036 0133     		adds	r3, r3, #1	@ tmp144, ratio1,
ARM GAS  /tmp/cczkEFU1.s 			page 82


 4618 0038 5B08     		lsrs	r3, r3, #1	@ prephitmp_18, tmp144,
 4619              	@ main.c:2134:     switch (iType)
 4620 003a ADB3     		cbz	r5, .L366	@ iType,
 4621 003c 012D     		cmp	r5, #1	@ iType,
 4622 003e 15D0     		beq	.L367	@,
 4623              	.L365:
 4624 0040 0022     		movs	r2, #0	@ _164,
 4625 0042 1346     		mov	r3, r2	@ _166, _164
 4626              	.L368:
 4627              	@ main.c:2177:     temp = (u32)((channel0 * b) - (channel1 * m));
 4628 0044 02FB01F1 		mul	r1, r2, r1	@ tmp148, _164, channel0
 4629 0048 03FB1011 		mls	r1, r3, r0, r1	@ temp, _166, channel1, tmp148
 4630 004c 21EAE171 		bic	r1, r1, r1, asr #31	@ temp, temp
 4631 0050 01F50051 		add	r1, r1, #8192	@ tmp150, temp,
 4632 0054 C1F38F30 		ubfx	r0, r1, #14, #16	@ <retval>, tmp150,,
 4633              	.L389:
 4634              	@ main.c:2189: 	}
 4635 0058 30BC     		pop	{r4, r5}	@
 4636 005a 7047     		bx	lr	@
 4637              	.L364:
 4638              	@ main.c:2134:     switch (iType)
 4639 005c FDB1     		cbz	r5, .L385	@ iType,
 4640 005e 012D     		cmp	r5, #1	@ iType,
 4641 0060 EED1     		bne	.L365	@,
 4642              	.L378:
 4643 0062 40F2AD13 		movw	r3, #429	@ _166,
 4644 0066 4FF40172 		mov	r2, #516	@ _164,
 4645 006a EBE7     		b	.L368	@
 4646              	.L367:
 4647              	@ main.c:2156:             if ((ratio >= 0) && (ratio <= K1C))
 4648 006c 432B     		cmp	r3, #67	@ prephitmp_18,
 4649 006e F8D9     		bls	.L378	@,
 4650              	@ main.c:2158:             else if (ratio <= K2C)
 4651 0070 852B     		cmp	r3, #133	@ prephitmp_18,
 4652 0072 34D9     		bls	.L379	@,
 4653              	@ main.c:2160:             else if (ratio <= K3C)
 4654 0074 C82B     		cmp	r3, #200	@ prephitmp_18,
 4655 0076 37DD     		ble	.L380	@,
 4656              	@ main.c:2162:             else if (ratio <= K4C)
 4657 0078 B3F5857F 		cmp	r3, #266	@ prephitmp_18,
 4658 007c 43DD     		ble	.L381	@,
 4659              	@ main.c:2164:             else if (ratio <= K5C)
 4660 007e B3F5A77F 		cmp	r3, #334	@ prephitmp_18,
 4661 0082 45DB     		blt	.L382	@,
 4662              	@ main.c:2166:             else if (ratio <= K6C)
 4663 0084 B3F5CD7F 		cmp	r3, #410	@ prephitmp_18,
 4664 0088 51DD     		ble	.L383	@,
 4665              	@ main.c:2168:             else if (ratio <= K7C)
 4666 008a 40F29A22 		movw	r2, #666	@ tmp146,
 4667 008e 9342     		cmp	r3, r2	@ prephitmp_18, tmp146
 4668 0090 4BDC     		bgt	.L384	@,
 4669 0092 2B23     		movs	r3, #43	@ _166,
 4670 0094 3722     		movs	r2, #55	@ _164,
 4671 0096 D5E7     		b	.L368	@
 4672              	.L361:
 4673              	@ main.c:2103:        chScale = CHSCALE_TINT0;
 4674 0098 47F21751 		movw	r1, #29975	@ chScale,
ARM GAS  /tmp/cczkEFU1.s 			page 83


 4675 009c BBE7     		b	.L362	@
 4676              	.L385:
 4677              	@ main.c:2134:     switch (iType)
 4678 009e 4FF4DF73 		mov	r3, #446	@ _166,
 4679 00a2 4FF4F972 		mov	r2, #498	@ _164,
 4680 00a6 CDE7     		b	.L368	@
 4681              	.L366:
 4682              	@ main.c:2137:         if ((ratio >= 0) && (ratio <= K1T))
 4683 00a8 402B     		cmp	r3, #64	@ prephitmp_18,
 4684 00aa F8D9     		bls	.L385	@,
 4685              	@ main.c:2139:             else if (ratio <= K2T)
 4686 00ac 802B     		cmp	r3, #128	@ prephitmp_18,
 4687 00ae 11D9     		bls	.L372	@,
 4688              	@ main.c:2141:             else if (ratio <= K3T)
 4689 00b0 C02B     		cmp	r3, #192	@ prephitmp_18,
 4690 00b2 1EDD     		ble	.L373	@,
 4691              	@ main.c:2143:             else if (ratio <= K4T)
 4692 00b4 B3F5807F 		cmp	r3, #256	@ prephitmp_18,
 4693 00b8 20DD     		ble	.L374	@,
 4694              	@ main.c:2145:             else if (ratio <= K5T)
 4695 00ba B3F59C7F 		cmp	r3, #312	@ prephitmp_18,
 4696 00be 2CDD     		ble	.L375	@,
 4697              	@ main.c:2147:             else if (ratio <= K6T)
 4698 00c0 B3F5CD7F 		cmp	r3, #410	@ prephitmp_18,
 4699 00c4 2EDD     		ble	.L376	@,
 4700              	@ main.c:2149:             else if (ratio <= K7T)
 4701 00c6 40F29A22 		movw	r2, #666	@ tmp145,
 4702 00ca 9342     		cmp	r3, r2	@ prephitmp_18, tmp145
 4703 00cc 2DDC     		bgt	.L384	@,
 4704 00ce 1223     		movs	r3, #18	@ _166,
 4705 00d0 1822     		movs	r2, #24	@ _164,
 4706 00d2 B7E7     		b	.L368	@
 4707              	.L372:
 4708 00d4 40F2D123 		movw	r3, #721	@ _166,
 4709 00d8 4FF40572 		mov	r2, #532	@ _164,
 4710 00dc B2E7     		b	.L368	@
 4711              	.L379:
 4712 00de 40F2C123 		movw	r3, #705	@ _166,
 4713 00e2 4FF40A72 		mov	r2, #552	@ _164,
 4714 00e6 ADE7     		b	.L368	@
 4715              	.L380:
 4716 00e8 40F26333 		movw	r3, #867	@ _166,
 4717 00ec 40F25322 		movw	r2, #595	@ _164,
 4718 00f0 A8E7     		b	.L368	@
 4719              	.L373:
 4720 00f2 40F27B33 		movw	r3, #891	@ _166,
 4721 00f6 40F23F22 		movw	r2, #575	@ _164,
 4722 00fa A3E7     		b	.L368	@
 4723              	.L374:
 4724 00fc 40F2FE33 		movw	r3, #1022	@ _166,
 4725 0100 4FF41C72 		mov	r2, #624	@ _164,
 4726 0104 9EE7     		b	.L368	@
 4727              	.L381:
 4728 0106 40F2DF33 		movw	r3, #991	@ _166,
 4729 010a 40F28222 		movw	r2, #642	@ _164,
 4730 010e 99E7     		b	.L368	@
 4731              	.L382:
ARM GAS  /tmp/cczkEFU1.s 			page 84


 4732 0110 40F2DD13 		movw	r3, #477	@ _166,
 4733 0114 40F27712 		movw	r2, #375	@ _164,
 4734 0118 94E7     		b	.L368	@
 4735              	.L375:
 4736 011a 4FF4FE73 		mov	r3, #508	@ _166,
 4737 011e 40F26F12 		movw	r2, #367	@ _164,
 4738 0122 8FE7     		b	.L368	@
 4739              	.L376:
 4740 0124 FB23     		movs	r3, #251	@ _166,
 4741 0126 D222     		movs	r2, #210	@ _164,
 4742 0128 8CE7     		b	.L368	@
 4743              	.L384:
 4744 012a 0020     		movs	r0, #0	@ <retval>,
 4745              	@ main.c:2188:     return(lux);
 4746 012c 94E7     		b	.L389	@
 4747              	.L383:
 4748 012e 40F22713 		movw	r3, #295	@ _166,
 4749 0132 40F20112 		movw	r2, #257	@ _164,
 4750 0136 85E7     		b	.L368	@
 4751              		.size	CalculateLux, .-CalculateLux
 4752              		.section	.text.TSL2561_i2c,"ax",%progbits
 4753              		.align	1
 4754              		.p2align 2,,3
 4755              		.global	TSL2561_i2c
 4756              		.syntax unified
 4757              		.thumb
 4758              		.thumb_func
 4759              		.fpu softvfp
 4760              		.type	TSL2561_i2c, %function
 4761              	TSL2561_i2c:
 4762              		@ args = 0, pretend = 0, frame = 8
 4763              		@ frame_needed = 0, uses_anonymous_args = 0
 4764              	@ main.c:2204: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 4765 0000 0122     		movs	r2, #1	@ tmp142,
 4766              	@ main.c:2190: void TSL2561_i2c(void){
 4767 0002 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}	@
 4768              	@ main.c:2224: 		buf[0]=0x80;
 4769 0006 4FF46070 		mov	r0, #896	@ tmp159,
 4770              	@ main.c:2206: 		I2C2_CR1_SWRST_bb = 0;
 4771 000a 0027     		movs	r7, #0	@ tmp146,
 4772              	@ main.c:2207: 		I2C2->TRISE = 37;               		// limit slope
 4773 000c 2526     		movs	r6, #37	@ tmp149,
 4774              	@ main.c:2209: 		I2C2->CCR = (F_CPU/(4*400000));             // setup speed (100kHz)
 4775 000e 2D25     		movs	r5, #45	@ tmp152,
 4776              	@ main.c:2212: 		I2C2->CR2 = I2C_CR2_FREQ_36MHz;     // config I2C2 module
 4777 0010 2424     		movs	r4, #36	@ tmp155,
 4778              	@ main.c:2202: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// ...009900 PB11=SDA (Open-d
 4779 0012 3249     		ldr	r1, .L396	@ tmp138,
 4780              	@ main.c:2190: void TSL2561_i2c(void){
 4781 0014 82B0     		sub	sp, sp, #8	@,,
 4782              	@ main.c:2202: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// ...009900 PB11=SDA (Open-d
 4783 0016 4B68     		ldr	r3, [r1, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 4784              	@ main.c:2224: 		buf[0]=0x80;
 4785 0018 0DF10808 		add	r8, sp, #8	@ tmp195,,
 4786              	@ main.c:2202: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// ...009900 PB11=SDA (Open-d
 4787 001c 23F47F43 		bic	r3, r3, #65280	@ tmp139, _1,
 4788 0020 43F45D43 		orr	r3, r3, #56576	@ _3, tmp139,
ARM GAS  /tmp/cczkEFU1.s 			page 85


 4789 0024 4B60     		str	r3, [r1, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 4790              	@ main.c:2204: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 4791 0026 2E4B     		ldr	r3, .L396+4	@ tmp141,
 4792              	@ main.c:2205: 		I2C2_CR1_SWRST_bb = 1;            	// force software reset of I2C peripheral
 4793 0028 2E49     		ldr	r1, .L396+8	@ tmp143,
 4794              	@ main.c:2204: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 4795 002a 1A60     		str	r2, [r3]	@ tmp142, MEM[(volatile long unsigned int *)1111622616B]
 4796              	@ main.c:2207: 		I2C2->TRISE = 37;               		// limit slope
 4797 002c 2E4B     		ldr	r3, .L396+12	@ tmp147,
 4798              	@ main.c:2205: 		I2C2_CR1_SWRST_bb = 1;            	// force software reset of I2C peripheral
 4799 002e 0A60     		str	r2, [r1]	@ tmp142, MEM[(volatile long unsigned int *)1108017212B]
 4800              	@ main.c:2206: 		I2C2_CR1_SWRST_bb = 0;
 4801 0030 0F60     		str	r7, [r1]	@ tmp146, MEM[(volatile long unsigned int *)1108017212B]
 4802              	@ main.c:2207: 		I2C2->TRISE = 37;               		// limit slope
 4803 0032 1E84     		strh	r6, [r3, #32]	@ movhi	@ tmp149, MEM[(struct I2C_TypeDef *)1073764352B].TRISE
 4804              	@ main.c:2209: 		I2C2->CCR = (F_CPU/(4*400000));             // setup speed (100kHz)
 4805 0034 9D83     		strh	r5, [r3, #28]	@ movhi	@ tmp152, MEM[(struct I2C_TypeDef *)1073764352B].CCR
 4806              	@ main.c:2212: 		I2C2->CR2 = I2C_CR2_FREQ_36MHz;     // config I2C2 module
 4807 0036 9C80     		strh	r4, [r3, #4]	@ movhi	@ tmp155, MEM[(struct I2C_TypeDef *)1073764352B].CR2
 4808              	@ main.c:2213: 		I2C2_CR1_PE_bb = 1;               	// enable peripheral
 4809 0038 41F83C2C 		str	r2, [r1, #-60]	@ tmp142, MEM[(volatile long unsigned int *)1108017152B]
 4810              	@ main.c:2224: 		buf[0]=0x80;
 4811 003c 28F8080D 		strh	r0, [r8, #-8]!	@ movhi	@ tmp159, MEM[(u08[3] *)&buf]
 4812              	@ main.c:2226: 		i2c2_write(TSL2561_ADR,buf,2); // init control Power UP
 4813 0040 4146     		mov	r1, r8	@, tmp195
 4814 0042 0222     		movs	r2, #2	@,
 4815 0044 7220     		movs	r0, #114	@,
 4816 0046 FFF7FEFF 		bl	i2c2_write	@
 4817              	@ main.c:2227: 		buf[0]=0x81;
 4818 004a 40F28123 		movw	r3, #641	@ tmp162,
 4819              	@ main.c:2229: 		i2c2_write(TSL2561_ADR,buf,2); // init Timing 
 4820 004e 4146     		mov	r1, r8	@, tmp195
 4821 0050 0222     		movs	r2, #2	@,
 4822 0052 7220     		movs	r0, #114	@,
 4823              	@ main.c:2227: 		buf[0]=0x81;
 4824 0054 ADF80030 		strh	r3, [sp]	@ movhi	@ tmp162, MEM[(u08[3] *)&buf]
 4825              	@ main.c:2229: 		i2c2_write(TSL2561_ADR,buf,2); // init Timing 
 4826 0058 FFF7FEFF 		bl	i2c2_write	@
 4827 005c 234D     		ldr	r5, .L396+16	@ tmp196,
 4828 005e 244F     		ldr	r7, .L396+20	@ tmp194,
 4829              	@ main.c:2234: 			if(STCLK_MS*300 < (trg0 - SysTick->VAL)){
 4830 0060 244C     		ldr	r4, .L396+24	@ tmp165,
 4831 0062 254E     		ldr	r6, .L396+28	@ tmp167,
 4832              	.L392:
 4833 0064 2B68     		ldr	r3, [r5]	@ trg0.157_4, trg0
 4834 0066 A268     		ldr	r2, [r4, #8]	@ _5, MEM[(struct SysTick_Type *)3758153744B].VAL
 4835 0068 9B1A     		subs	r3, r3, r2	@ tmp166, trg0.157_4, _5
 4836 006a B342     		cmp	r3, r6	@ tmp166, tmp167
 4837 006c FAD9     		bls	.L392	@,
 4838              	@ main.c:2235: 				trg0 = SysTick->VAL;
 4839 006e D4F808C0 		ldr	ip, [r4, #8]	@ _7, MEM[(struct SysTick_Type *)3758153744B].VAL
 4840              	@ main.c:2241: 				i2c2_read(TSL2561_ADR, DATA0LOW, buf,2 );
 4841 0072 0223     		movs	r3, #2	@,
 4842 0074 4246     		mov	r2, r8	@, tmp195
 4843 0076 8C21     		movs	r1, #140	@,
 4844 0078 7220     		movs	r0, #114	@,
 4845              	@ main.c:2235: 				trg0 = SysTick->VAL;
ARM GAS  /tmp/cczkEFU1.s 			page 86


 4846 007a C5F800C0 		str	ip, [r5]	@ _7, trg0
 4847              	@ main.c:2241: 				i2c2_read(TSL2561_ADR, DATA0LOW, buf,2 );
 4848 007e FFF7FEFF 		bl	i2c2_read	@
 4849              	@ main.c:2242: 				ch0 = (buf[1]<<8)+buf[0];
 4850 0082 9DF80120 		ldrb	r2, [sp, #1]	@ zero_extendqisi2	@ buf, buf
 4851 0086 9DF800A0 		ldrb	r10, [sp]	@ zero_extendqisi2	@ buf, buf
 4852              	@ main.c:2243: 				i2c2_read(TSL2561_ADR, DATA1LOW, buf,2 );
 4853 008a 8E21     		movs	r1, #142	@,
 4854 008c 0223     		movs	r3, #2	@,
 4855              	@ main.c:2242: 				ch0 = (buf[1]<<8)+buf[0];
 4856 008e 0AEB022A 		add	r10, r10, r2, lsl #8	@ tmp177, buf, buf,
 4857              	@ main.c:2243: 				i2c2_read(TSL2561_ADR, DATA1LOW, buf,2 );
 4858 0092 7220     		movs	r0, #114	@,
 4859 0094 4246     		mov	r2, r8	@, tmp195
 4860 0096 FFF7FEFF 		bl	i2c2_read	@
 4861              	@ main.c:2244: 				ch1	= (buf[1]<<8)+buf[0];
 4862 009a 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2	@ buf, buf
 4863 009e 9DF80090 		ldrb	r9, [sp]	@ zero_extendqisi2	@ buf, buf
 4864              	@ main.c:2242: 				ch0 = (buf[1]<<8)+buf[0];
 4865 00a2 1FFA8AFA 		uxth	r10, r10	@ ch0, tmp177
 4866              	@ main.c:2244: 				ch1	= (buf[1]<<8)+buf[0];
 4867 00a6 09EB0329 		add	r9, r9, r3, lsl #8	@ tmp185, buf, buf,
 4868              	@ main.c:2254: 				sint2uart(ch0);
 4869 00aa 5046     		mov	r0, r10	@, ch0
 4870 00ac FFF7FEFF 		bl	sint2uart	@
 4871              	@ main.c:2244: 				ch1	= (buf[1]<<8)+buf[0];
 4872 00b0 1FFA89F9 		uxth	r9, r9	@ ch1, tmp185
 4873              	@ main.c:2255: 				UaPutK(",");	
 4874 00b4 1148     		ldr	r0, .L396+32	@,
 4875 00b6 FFF7FEFF 		bl	UaPutK	@
 4876              	@ main.c:2256: 				sint2uart(ch1);
 4877 00ba 4846     		mov	r0, r9	@, ch1
 4878 00bc FFF7FEFF 		bl	sint2uart	@
 4879              	@ main.c:2257: 				UaPutK("\r\n");	
 4880 00c0 0F48     		ldr	r0, .L396+36	@,
 4881 00c2 FFF7FEFF 		bl	UaPutK	@
 4882              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 4883 00c6 A368     		ldr	r3, [r4, #8]	@ _52, MEM[(struct SysTick_Type *)3758153744B].VAL
 4884 00c8 3B60     		str	r3, [r7]	@ _52, Timt
 4885              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 4886 00ca 3B68     		ldr	r3, [r7]	@ Timt.82_49, Timt
 4887 00cc A268     		ldr	r2, [r4, #8]	@ _50, MEM[(struct SysTick_Type *)3758153744B].VAL
 4888 00ce 9B1A     		subs	r3, r3, r2	@ _51, Timt.82_49, _50
 4889 00d0 0193     		str	r3, [sp, #4]	@ _51, MEM[(volatile u32 *)&tim]
 4890 00d2 3B68     		ldr	r3, [r7]	@ Timt.82_42, Timt
 4891 00d4 A268     		ldr	r2, [r4, #8]	@ _47, MEM[(struct SysTick_Type *)3758153744B].VAL
 4892 00d6 9B1A     		subs	r3, r3, r2	@ _48, Timt.82_42, _47
 4893 00d8 0193     		str	r3, [sp, #4]	@ _48, MEM[(volatile u32 *)&tim]
 4894 00da C3E7     		b	.L392	@
 4895              	.L397:
 4896              		.align	2
 4897              	.L396:
 4898 00dc 000C0140 		.word	1073810432
 4899 00e0 D8034242 		.word	1111622616
 4900 00e4 3C000B42 		.word	1108017212
 4901 00e8 00580040 		.word	1073764352
 4902 00ec 00000000 		.word	trg0
ARM GAS  /tmp/cczkEFU1.s 			page 87


 4903 00f0 00000000 		.word	Timt
 4904 00f4 10E000E0 		.word	-536813552
 4905 00f8 E0322900 		.word	2700000
 4906 00fc 00000000 		.word	.LC66
 4907 0100 04000000 		.word	.LC13
 4908              		.size	TSL2561_i2c, .-TSL2561_i2c
 4909              		.section	.text.set_mode,"ax",%progbits
 4910              		.align	1
 4911              		.p2align 2,,3
 4912              		.global	set_mode
 4913              		.syntax unified
 4914              		.thumb
 4915              		.thumb_func
 4916              		.fpu softvfp
 4917              		.type	set_mode, %function
 4918              	set_mode:
 4919              		@ args = 0, pretend = 0, frame = 8
 4920              		@ frame_needed = 0, uses_anonymous_args = 0
 4921 0000 30B5     		push	{r4, r5, lr}	@
 4922 0002 83B0     		sub	sp, sp, #12	@,,
 4923              	@ main.c:2290: 		i2c1_read(APDS9960_ADR, APDS9960_ENABLE, buf,1 );
 4924 0004 0123     		movs	r3, #1	@,
 4925              	@ main.c:2287: void set_mode( u08 mode, bool enable )	{
 4926 0006 0446     		mov	r4, r0	@ mode, mode
 4927 0008 0D46     		mov	r5, r1	@ enable, enable
 4928              	@ main.c:2290: 		i2c1_read(APDS9960_ADR, APDS9960_ENABLE, buf,1 );
 4929 000a 01AA     		add	r2, sp, #4	@ tmp134,,
 4930 000c 8021     		movs	r1, #128	@,
 4931 000e 7220     		movs	r0, #114	@,
 4932 0010 FFF7FEFF 		bl	i2c1_read	@
 4933              	@ main.c:2291: 		uint8_t reg_val = buf[0];
 4934 0014 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2	@ reg_val, buf
 4935              	@ main.c:2293:     if( reg_val == ERROR )
 4936 0018 FF2B     		cmp	r3, #255	@ reg_val,
 4937 001a 0FD0     		beq	.L398	@,
 4938              	@ main.c:2298:     if( mode == ALL )
 4939 001c 062C     		cmp	r4, #6	@ mode,
 4940 001e 0FD9     		bls	.L400	@,
 4941              	@ main.c:2302:       reg_val = 0x7F;
 4942 0020 002D     		cmp	r5, #0	@ enable,
 4943 0022 0CBF     		ite	eq
 4944 0024 0023     		moveq	r3, #0	@ reg_val,
 4945 0026 7F23     		movne	r3, #127	@ reg_val,
 4946              	.L401:
 4947              	@ main.c:2311: 		buf[0]=APDS9960_ENABLE;			buf[1]=reg_val; 			i2c1_write(APDS9960_ADR,buf,2); 
 4948 0028 8024     		movs	r4, #128	@ tmp129,
 4949 002a 01A9     		add	r1, sp, #4	@ tmp135,,
 4950 002c 0222     		movs	r2, #2	@,
 4951 002e 7220     		movs	r0, #114	@,
 4952 0030 8DF80530 		strb	r3, [sp, #5]	@ reg_val, buf
 4953 0034 8DF80440 		strb	r4, [sp, #4]	@ tmp129, buf
 4954 0038 FFF7FEFF 		bl	i2c1_write	@
 4955              	.L398:
 4956              	@ main.c:2312: 	}
 4957 003c 03B0     		add	sp, sp, #12	@,,
 4958              		@ sp needed	@
 4959 003e 30BD     		pop	{r4, r5, pc}	@
ARM GAS  /tmp/cczkEFU1.s 			page 88


 4960              	.L400:
 4961              	@ main.c:2304:       reg_val &= ~( 1 << mode );
 4962 0040 0120     		movs	r0, #1	@ tmp123,
 4963 0042 A040     		lsls	r0, r0, r4	@ tmp122, tmp123, mode
 4964 0044 5BB2     		sxtb	r3, r3	@ reg_val.158_5, reg_val
 4965 0046 40B2     		sxtb	r0, r0	@ _3, tmp122
 4966              	@ main.c:2305:       if( enable )
 4967 0048 15B1     		cbz	r5, .L409	@ enable,
 4968              	@ main.c:2306:       reg_val |= ( 1 << mode );
 4969 004a 1843     		orrs	r0, r0, r3	@, tmp128, _3, reg_val.158_5
 4970 004c C3B2     		uxtb	r3, r0	@ reg_val, tmp128
 4971 004e EBE7     		b	.L401	@
 4972              	.L409:
 4973              	@ main.c:2304:       reg_val &= ~( 1 << mode );
 4974 0050 23EA0003 		bic	r3, r3, r0	@ tmp127, reg_val.158_5, _3
 4975 0054 DBB2     		uxtb	r3, r3	@ reg_val, tmp127
 4976 0056 E7E7     		b	.L401	@
 4977              		.size	set_mode, .-set_mode
 4978              		.section	.text.MAX44009_i2c,"ax",%progbits
 4979              		.align	1
 4980              		.p2align 2,,3
 4981              		.global	MAX44009_i2c
 4982              		.syntax unified
 4983              		.thumb
 4984              		.thumb_func
 4985              		.fpu softvfp
 4986              		.type	MAX44009_i2c, %function
 4987              	MAX44009_i2c:
 4988              		@ args = 0, pretend = 0, frame = 16
 4989              		@ frame_needed = 0, uses_anonymous_args = 0
 4990 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 4991              	@ main.c:2329: 		I2C2->CR2     = 0;
 4992 0004 0020     		movs	r0, #0	@ tmp203,
 4993              	@ main.c:2330: 		I2C2->CCR     = (F_CPU/(4*400000));             	// setup speed (100kHz)
 4994 0006 2D21     		movs	r1, #45	@ tmp206,
 4995              	@ main.c:2327: 		I2C2->TRISE   = 37;               								// limit slope
 4996 0008 2525     		movs	r5, #37	@ tmp200,
 4997              	@ main.c:2324: 		GPIOB->CRH    = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// PB11=SDA (Open-drain) P
 4998 000a 784F     		ldr	r7, .L417	@ tmp193,
 4999              	@ main.c:2363: 		buf[0]=0x02;
 5000 000c 44F20204 		movw	r4, #16386	@ tmp234,
 5001              	@ main.c:2324: 		GPIOB->CRH    = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// PB11=SDA (Open-drain) P
 5002 0010 7B68     		ldr	r3, [r7, #4]	@ _2, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 5003              	@ main.c:2325: 		RCC->APB1ENR |= RCC_APB1ENR_I2C2EN;
 5004 0012 774A     		ldr	r2, .L417+4	@ tmp196,
 5005              	@ main.c:2324: 		GPIOB->CRH    = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// PB11=SDA (Open-drain) P
 5006 0014 23F47F43 		bic	r3, r3, #65280	@ tmp194, _2,
 5007 0018 43F45D43 		orr	r3, r3, #56576	@ _4, tmp194,
 5008 001c 7B60     		str	r3, [r7, #4]	@ _4, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 5009              	@ main.c:2325: 		RCC->APB1ENR |= RCC_APB1ENR_I2C2EN;
 5010 001e D2F81CC0 		ldr	ip, [r2, #28]	@ _5, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 5011              	@ main.c:2327: 		I2C2->TRISE   = 37;               								// limit slope
 5012 0022 744B     		ldr	r3, .L417+8	@ tmp198,
 5013              	@ main.c:2325: 		RCC->APB1ENR |= RCC_APB1ENR_I2C2EN;
 5014 0024 4CF4800C 		orr	ip, ip, #4194304	@ _6, _5,
 5015 0028 C2F81CC0 		str	ip, [r2, #28]	@ _6, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 5016              	@ main.c:2327: 		I2C2->TRISE   = 37;               								// limit slope
ARM GAS  /tmp/cczkEFU1.s 			page 89


 5017 002c 1D84     		strh	r5, [r3, #32]	@ movhi	@ tmp200, MEM[(struct I2C_TypeDef *)1073764352B].TRISE
 5018              	@ main.c:2329: 		I2C2->CR2     = 0;
 5019 002e 9880     		strh	r0, [r3, #4]	@ movhi	@ tmp203, MEM[(struct I2C_TypeDef *)1073764352B].CR2
 5020              	@ main.c:2330: 		I2C2->CCR     = (F_CPU/(4*400000));             	// setup speed (100kHz)
 5021 0030 9983     		strh	r1, [r3, #28]	@ movhi	@ tmp206, MEM[(struct I2C_TypeDef *)1073764352B].CCR
 5022              	@ main.c:2332: 		I2C2->CR1    |= I2C_CR1_PE;											  // I2C2 Pheripherial enable
 5023 0032 B3F800C0 		ldrh	ip, [r3]	@, MEM[(struct I2C_TypeDef *)1073764352B].CR1
 5024              	@ main.c:2313: void MAX44009_i2c(void){
 5025 0036 87B0     		sub	sp, sp, #28	@,,
 5026              	@ main.c:2332: 		I2C2->CR1    |= I2C_CR1_PE;											  // I2C2 Pheripherial enable
 5027 0038 4CF0010C 		orr	ip, ip, #1	@ _8, MEM[(struct I2C_TypeDef *)1073764352B].CR1,
 5028 003c A3F800C0 		strh	ip, [r3]	@ movhi	@ _8, MEM[(struct I2C_TypeDef *)1073764352B].CR1
 5029              	@ main.c:2334: 		AFIO->MAPR   |= AFIO_MAPR_I2C1_REMAP;		// Remap TIM3 CH2->PB5
 5030 0040 DFF8D8C1 		ldr	ip, .L417+48	@ tmp212,
 5031              	@ main.c:2363: 		buf[0]=0x02;
 5032 0044 06AE     		add	r6, sp, #24	@ tmp332,,
 5033              	@ main.c:2334: 		AFIO->MAPR   |= AFIO_MAPR_I2C1_REMAP;		// Remap TIM3 CH2->PB5
 5034 0046 DCF80430 		ldr	r3, [ip, #4]	@ _9, MEM[(struct AFIO_TypeDef *)1073807360B].MAPR
 5035 004a 43F00203 		orr	r3, r3, #2	@ _10, _9,
 5036 004e CCF80430 		str	r3, [ip, #4]	@ _10, MEM[(struct AFIO_TypeDef *)1073807360B].MAPR
 5037              	@ main.c:2335: 		GPIOB->CRH    = (GPIOB->CRH & 0xffffff00) | 0x000000dd;	// PB9=SDA (Alternate Open
 5038 0052 7B68     		ldr	r3, [r7, #4]	@ _11, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 5039 0054 23F0FF03 		bic	r3, r3, #255	@ tmp215, _11,
 5040 0058 43F0DD03 		orr	r3, r3, #221	@ _13, tmp215,
 5041 005c 7B60     		str	r3, [r7, #4]	@ _13, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 5042              	@ main.c:2336: 		RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;
 5043 005e D769     		ldr	r7, [r2, #28]	@ _14, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 5044              	@ main.c:2337: 		I2C1->TRISE   = 37;               		// limit slope
 5045 0060 654B     		ldr	r3, .L417+12	@ tmp219,
 5046              	@ main.c:2336: 		RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;
 5047 0062 47F40017 		orr	r7, r7, #2097152	@ _15, _14,
 5048 0066 D761     		str	r7, [r2, #28]	@ _15, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 5049              	@ main.c:2337: 		I2C1->TRISE   = 37;               		// limit slope
 5050 0068 1D84     		strh	r5, [r3, #32]	@ movhi	@ tmp200, MEM[(struct I2C_TypeDef *)1073763328B].TRISE
 5051              	@ main.c:2338: 		I2C1->CR2     = 0;
 5052 006a 9880     		strh	r0, [r3, #4]	@ movhi	@ tmp203, MEM[(struct I2C_TypeDef *)1073763328B].CR2
 5053              	@ main.c:2339: 		I2C1->CCR     = (F_CPU/(4*400000));   // setup speed (400kHz)
 5054 006c 9983     		strh	r1, [r3, #28]	@ movhi	@ tmp206, MEM[(struct I2C_TypeDef *)1073763328B].CCR
 5055              	@ main.c:2340: 		I2C1->CR1    |= I2C_CR1_PE;						// I2C2 Pheripherial enable
 5056 006e 1988     		ldrh	r1, [r3]	@, MEM[(struct I2C_TypeDef *)1073763328B].CR1
 5057              	@ main.c:2365: 		i2c2_write(MAX44009_ADR,buf,2); // init control Power UP
 5058 0070 0222     		movs	r2, #2	@,
 5059              	@ main.c:2340: 		I2C1->CR1    |= I2C_CR1_PE;						// I2C2 Pheripherial enable
 5060 0072 41F00101 		orr	r1, r1, #1	@ _17, MEM[(struct I2C_TypeDef *)1073763328B].CR1,
 5061 0076 1980     		strh	r1, [r3]	@ movhi	@ _17, MEM[(struct I2C_TypeDef *)1073763328B].CR1
 5062              	@ main.c:2363: 		buf[0]=0x02;
 5063 0078 26F80C4D 		strh	r4, [r6, #-12]!	@ movhi	@ tmp234, MEM[(u08[10] *)&buf]
 5064              	@ main.c:2365: 		i2c2_write(MAX44009_ADR,buf,2); // init control Power UP
 5065 007c 3146     		mov	r1, r6	@, tmp332
 5066 007e 9420     		movs	r0, #148	@,
 5067 0080 FFF7FEFF 		bl	i2c2_write	@
 5068              	@ main.c:2383: 		set_mode( AMBIENT_LIGHT, true );
 5069 0084 0121     		movs	r1, #1	@,
 5070 0086 0846     		mov	r0, r1	@,
 5071 0088 FFF7FEFF 		bl	set_mode	@
 5072              	@ main.c:2386: 		i2c1_read(APDS9960_ADR, APDS9960_ID, buf,1 );
 5073 008c 3246     		mov	r2, r6	@, tmp332
ARM GAS  /tmp/cczkEFU1.s 			page 90


 5074 008e 0123     		movs	r3, #1	@,
 5075 0090 9221     		movs	r1, #146	@,
 5076 0092 7220     		movs	r0, #114	@,
 5077 0094 FFF7FEFF 		bl	i2c1_read	@
 5078              	@ main.c:2387: 		UaPutK("\r\n APDS9960_ID=0x");	
 5079 0098 5848     		ldr	r0, .L417+16	@,
 5080 009a FFF7FEFF 		bl	UaPutK	@
 5081              	@ main.c:2388: 		hex2uart(buf[0],2);
 5082 009e 0221     		movs	r1, #2	@,
 5083 00a0 9DF80C00 		ldrb	r0, [sp, #12]	@ zero_extendqisi2	@, buf
 5084 00a4 FFF7FEFF 		bl	hex2uart	@
 5085              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 5086 00a8 554B     		ldr	r3, .L417+20	@ tmp239,
 5087 00aa 564A     		ldr	r2, .L417+24	@ tmp330,
 5088              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 5089 00ac 1846     		mov	r0, r3	@ tmp242, tmp239
 5090              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 5091 00ae 9B68     		ldr	r3, [r3, #8]	@ _106, MEM[(struct SysTick_Type *)3758153744B].VAL
 5092              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 5093 00b0 5549     		ldr	r1, .L417+28	@ tmp244,
 5094              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 5095 00b2 1360     		str	r3, [r2]	@ _106, delay_us
 5096              	.L411:
 5097              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 5098 00b4 1368     		ldr	r3, [r2]	@ delay_us.70_123, delay_us
 5099 00b6 8468     		ldr	r4, [r0, #8]	@ _124, MEM[(struct SysTick_Type *)3758153744B].VAL
 5100 00b8 1B1B     		subs	r3, r3, r4	@ tmp243, delay_us.70_123, _124
 5101 00ba 8B42     		cmp	r3, r1	@ tmp243, tmp244
 5102 00bc FAD9     		bls	.L411	@,
 5103 00be 534D     		ldr	r5, .L417+32	@ tmp331,
 5104              	@ main.c:2394: 			if(STCLK_MS*100 < (trg0 - SysTick->VAL)){
 5105 00c0 4F4C     		ldr	r4, .L417+20	@ tmp246,
 5106 00c2 534F     		ldr	r7, .L417+36	@ tmp248,
 5107              	@ main.c:2406: 				lux = ((1<<exponent) * mantissa * 45 ) /1000 ;
 5108 00c4 DFF85881 		ldr	r8, .L417+52	@ tmp270,
 5109              	.L412:
 5110              	@ main.c:2394: 			if(STCLK_MS*100 < (trg0 - SysTick->VAL)){
 5111 00c8 2B68     		ldr	r3, [r5]	@ trg0.160_20, trg0
 5112 00ca A268     		ldr	r2, [r4, #8]	@ _21, MEM[(struct SysTick_Type *)3758153744B].VAL
 5113 00cc 9B1A     		subs	r3, r3, r2	@ tmp247, trg0.160_20, _21
 5114 00ce BB42     		cmp	r3, r7	@ tmp247, tmp248
 5115 00d0 FAD9     		bls	.L412	@,
 5116              	@ main.c:2395: 				trg0 = SysTick->VAL;
 5117 00d2 A368     		ldr	r3, [r4, #8]	@ _23, MEM[(struct SysTick_Type *)3758153744B].VAL
 5118              	@ main.c:2397: 				UaPutK("\r\n");	
 5119 00d4 4F48     		ldr	r0, .L417+40	@,
 5120              	@ main.c:2395: 				trg0 = SysTick->VAL;
 5121 00d6 2B60     		str	r3, [r5]	@ _23, trg0
 5122              	@ main.c:2397: 				UaPutK("\r\n");	
 5123 00d8 FFF7FEFF 		bl	UaPutK	@
 5124              	@ main.c:2401: 				i2c2_read(MAX44009_ADR, 0x03, buf,2 );
 5125 00dc 0321     		movs	r1, #3	@,
 5126 00de 3246     		mov	r2, r6	@, tmp332
 5127 00e0 0223     		movs	r3, #2	@,
 5128 00e2 9420     		movs	r0, #148	@,
 5129 00e4 FFF7FEFF 		bl	i2c2_read	@
 5130              	@ main.c:2403: 				exponent = (buf[0] & 0xF0) >> 4;
ARM GAS  /tmp/cczkEFU1.s 			page 91


 5131 00e8 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2	@ _24, buf
 5132              	@ main.c:2404: 				mantissa = ((buf[0] & 0x0F) << 4) | (buf[1] & 0x0F);
 5133 00ec 9DF80D20 		ldrb	r2, [sp, #13]	@ zero_extendqisi2	@ buf, buf
 5134 00f0 1801     		lsls	r0, r3, #4	@ tmp253, _24,
 5135 00f2 02F00F02 		and	r2, r2, #15	@ tmp258, buf,
 5136 00f6 C0B2     		uxtb	r0, r0	@ tmp254, tmp253
 5137              	@ main.c:2403: 				exponent = (buf[0] & 0xF0) >> 4;
 5138 00f8 1B09     		lsrs	r3, r3, #4	@ exponent, _24,
 5139              	@ main.c:2404: 				mantissa = ((buf[0] & 0x0F) << 4) | (buf[1] & 0x0F);
 5140 00fa 1043     		orrs	r0, r0, r2	@, mantissa, tmp254, tmp258
 5141              	@ main.c:2406: 				lux = ((1<<exponent) * mantissa * 45 ) /1000 ;
 5142 00fc 9840     		lsls	r0, r0, r3	@ tmp262, mantissa, exponent
 5143 00fe 00EB4000 		add	r0, r0, r0, lsl #1	@ tmp265, tmp262, tmp262,
 5144 0102 C0EB0010 		rsb	r0, r0, r0, lsl #4	@ tmp267, tmp265, tmp265,
 5145 0106 A8FB0030 		umull	r3, r0, r8, r0	@ tmp336, tmp269, tmp270, tmp267
 5146              	@ main.c:2409: 				sint2uart(lux);
 5147 010a 8009     		lsrs	r0, r0, #6	@, tmp269,
 5148 010c FFF7FEFF 		bl	sint2uart	@
 5149              	@ main.c:2410: 				UaPutK(",");	
 5150 0110 4148     		ldr	r0, .L417+44	@,
 5151 0112 FFF7FEFF 		bl	UaPutK	@
 5152              	@ main.c:2412: 				i2c2_read(TSL2561_ADR, DATA0LOW, buf,2 );
 5153 0116 3246     		mov	r2, r6	@, tmp332
 5154 0118 0223     		movs	r3, #2	@,
 5155 011a 8C21     		movs	r1, #140	@,
 5156 011c 7220     		movs	r0, #114	@,
 5157 011e FFF7FEFF 		bl	i2c2_read	@
 5158              	@ main.c:2413: 				ch0 = (buf[1]<<8)+buf[0];
 5159 0122 9DF80D20 		ldrb	r2, [sp, #13]	@ zero_extendqisi2	@ buf, buf
 5160 0126 9DF80C90 		ldrb	r9, [sp, #12]	@ zero_extendqisi2	@ buf, buf
 5161              	@ main.c:2414: 				i2c2_read(TSL2561_ADR, DATA1LOW, buf,2 );
 5162 012a 0223     		movs	r3, #2	@,
 5163              	@ main.c:2413: 				ch0 = (buf[1]<<8)+buf[0];
 5164 012c 09EB0229 		add	r9, r9, r2, lsl #8	@ tmp284, buf, buf,
 5165              	@ main.c:2414: 				i2c2_read(TSL2561_ADR, DATA1LOW, buf,2 );
 5166 0130 8E21     		movs	r1, #142	@,
 5167 0132 3246     		mov	r2, r6	@, tmp332
 5168 0134 7220     		movs	r0, #114	@,
 5169 0136 FFF7FEFF 		bl	i2c2_read	@
 5170              	@ main.c:2417: 				lux=CalculateLux(1,2,ch0,ch1,0);
 5171 013a 0021     		movs	r1, #0	@ tmp294,
 5172              	@ main.c:2415: 				ch1	= (buf[1]<<8)+buf[0];
 5173 013c 9DF80D00 		ldrb	r0, [sp, #13]	@ zero_extendqisi2	@ buf, buf
 5174 0140 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2	@ buf, buf
 5175              	@ main.c:2413: 				ch0 = (buf[1]<<8)+buf[0];
 5176 0144 1FFA89F9 		uxth	r9, r9	@ ch0, tmp284
 5177              	@ main.c:2415: 				ch1	= (buf[1]<<8)+buf[0];
 5178 0148 03EB0023 		add	r3, r3, r0, lsl #8	@ tmp292, buf, buf,
 5179              	@ main.c:2417: 				lux=CalculateLux(1,2,ch0,ch1,0);
 5180 014c 4A46     		mov	r2, r9	@, ch0
 5181 014e 9BB2     		uxth	r3, r3	@, tmp292
 5182 0150 0091     		str	r1, [sp]	@ tmp294,
 5183 0152 0120     		movs	r0, #1	@,
 5184 0154 0221     		movs	r1, #2	@,
 5185 0156 FFF7FEFF 		bl	CalculateLux	@
 5186              	@ main.c:2418: 				sint2uart(lux);
 5187 015a FFF7FEFF 		bl	sint2uart	@
ARM GAS  /tmp/cczkEFU1.s 			page 92


 5188              	@ main.c:2420: 				UaPutC(',');
 5189 015e 2C20     		movs	r0, #44	@,
 5190 0160 FFF7FEFF 		bl	UaPutC	@
 5191              	@ main.c:2423: 				memset ( buf, 1, 10);
 5192 0164 4FF0013C 		mov	ip, #16843009	@ tmp298,
 5193              	@ main.c:2424: 				i2c1_read(APDS9960_ADR, 0x94, buf,8 );
 5194 0168 3246     		mov	r2, r6	@, tmp332
 5195 016a 0823     		movs	r3, #8	@,
 5196 016c 9421     		movs	r1, #148	@,
 5197 016e 7220     		movs	r0, #114	@,
 5198              	@ main.c:2423: 				memset ( buf, 1, 10);
 5199 0170 C6E900CC 		strd	ip, ip, [r6]	@ tmp298, tmp298, tmp332
 5200 0174 A6F808C0 		strh	ip, [r6, #8]	@ movhi	@ tmp298, MEM[(void *)&buf]
 5201              	@ main.c:2424: 				i2c1_read(APDS9960_ADR, 0x94, buf,8 );
 5202 0178 FFF7FEFF 		bl	i2c1_read	@
 5203              	@ main.c:2425: 				aC = (buf[1]<<8)+buf[0];
 5204 017c 9DF80DC0 		ldrb	ip, [sp, #13]	@ zero_extendqisi2	@ buf, buf
 5205 0180 9DF80C00 		ldrb	r0, [sp, #12]	@ zero_extendqisi2	@ buf, buf
 5206              	@ main.c:2426: 				aR = (buf[3]<<8)+buf[2];
 5207 0184 9DF80F10 		ldrb	r1, [sp, #15]	@ zero_extendqisi2	@ buf, buf
 5208 0188 9DF80EB0 		ldrb	fp, [sp, #14]	@ zero_extendqisi2	@ buf, buf
 5209              	@ main.c:2427: 				aG = (buf[5]<<8)+buf[4];
 5210 018c 9DF81120 		ldrb	r2, [sp, #17]	@ zero_extendqisi2	@ buf, buf
 5211              	@ main.c:2428: 				aB = (buf[7]<<8)+buf[6];
 5212 0190 9DF81330 		ldrb	r3, [sp, #19]	@ zero_extendqisi2	@ buf, buf
 5213              	@ main.c:2425: 				aC = (buf[1]<<8)+buf[0];
 5214 0194 00EB0C20 		add	r0, r0, ip, lsl #8	@ tmp328, buf, buf,
 5215              	@ main.c:2427: 				aG = (buf[5]<<8)+buf[4];
 5216 0198 9DF810A0 		ldrb	r10, [sp, #16]	@ zero_extendqisi2	@ buf, buf
 5217              	@ main.c:2428: 				aB = (buf[7]<<8)+buf[6];
 5218 019c 9DF81290 		ldrb	r9, [sp, #18]	@ zero_extendqisi2	@ buf, buf
 5219              	@ main.c:2426: 				aR = (buf[3]<<8)+buf[2];
 5220 01a0 0BEB012B 		add	fp, fp, r1, lsl #8	@ tmp307, buf, buf,
 5221              	@ main.c:2430: 				sint2uart(aC); UaPutC(','); //hex2uart((buf[1]<<8)+buf[0],4);
 5222 01a4 80B2     		uxth	r0, r0	@, tmp328
 5223              	@ main.c:2427: 				aG = (buf[5]<<8)+buf[4];
 5224 01a6 0AEB022A 		add	r10, r10, r2, lsl #8	@ tmp314, buf, buf,
 5225              	@ main.c:2428: 				aB = (buf[7]<<8)+buf[6];
 5226 01aa 09EB0329 		add	r9, r9, r3, lsl #8	@ tmp321, buf, buf,
 5227              	@ main.c:2426: 				aR = (buf[3]<<8)+buf[2];
 5228 01ae 1FFA8BFB 		uxth	fp, fp	@ aR, tmp307
 5229              	@ main.c:2430: 				sint2uart(aC); UaPutC(','); //hex2uart((buf[1]<<8)+buf[0],4);
 5230 01b2 FFF7FEFF 		bl	sint2uart	@
 5231 01b6 2C20     		movs	r0, #44	@,
 5232 01b8 FFF7FEFF 		bl	UaPutC	@
 5233              	@ main.c:2431: 				sint2uart(aR); UaPutC(','); //hex2uart((buf[3]<<8)+buf[2],4);
 5234 01bc 5846     		mov	r0, fp	@, aR
 5235 01be FFF7FEFF 		bl	sint2uart	@
 5236              	@ main.c:2427: 				aG = (buf[5]<<8)+buf[4];
 5237 01c2 1FFA8AFA 		uxth	r10, r10	@ aG, tmp314
 5238              	@ main.c:2431: 				sint2uart(aR); UaPutC(','); //hex2uart((buf[3]<<8)+buf[2],4);
 5239 01c6 2C20     		movs	r0, #44	@,
 5240 01c8 FFF7FEFF 		bl	UaPutC	@
 5241              	@ main.c:2432: 				sint2uart(aG); UaPutC(','); //hex2uart((buf[5]<<8)+buf[4],4);
 5242 01cc 5046     		mov	r0, r10	@, aG
 5243 01ce FFF7FEFF 		bl	sint2uart	@
 5244              	@ main.c:2428: 				aB = (buf[7]<<8)+buf[6];
ARM GAS  /tmp/cczkEFU1.s 			page 93


 5245 01d2 1FFA89F9 		uxth	r9, r9	@ aB, tmp321
 5246              	@ main.c:2432: 				sint2uart(aG); UaPutC(','); //hex2uart((buf[5]<<8)+buf[4],4);
 5247 01d6 2C20     		movs	r0, #44	@,
 5248 01d8 FFF7FEFF 		bl	UaPutC	@
 5249              	@ main.c:2433: 				sint2uart(aB); UaPutC(',');//hex2uart((buf[7]<<8)+buf[6],4);
 5250 01dc 4846     		mov	r0, r9	@, aB
 5251 01de FFF7FEFF 		bl	sint2uart	@
 5252 01e2 2C20     		movs	r0, #44	@,
 5253 01e4 FFF7FEFF 		bl	UaPutC	@
 5254 01e8 6EE7     		b	.L412	@
 5255              	.L418:
 5256 01ea 00BF     		.align	2
 5257              	.L417:
 5258 01ec 000C0140 		.word	1073810432
 5259 01f0 00100240 		.word	1073876992
 5260 01f4 00580040 		.word	1073764352
 5261 01f8 00540040 		.word	1073763328
 5262 01fc 00000000 		.word	.LC67
 5263 0200 10E000E0 		.word	-536813552
 5264 0204 00000000 		.word	delay_us
 5265 0208 3F771B00 		.word	1799999
 5266 020c 00000000 		.word	trg0
 5267 0210 A0BB0D00 		.word	900000
 5268 0214 04000000 		.word	.LC13
 5269 0218 00000000 		.word	.LC66
 5270 021c 00000140 		.word	1073807360
 5271 0220 D34D6210 		.word	274877907
 5272              		.size	MAX44009_i2c, .-MAX44009_i2c
 5273              		.section	.text.BMP280_i2c,"ax",%progbits
 5274              		.align	1
 5275              		.p2align 2,,3
 5276              		.global	BMP280_i2c
 5277              		.syntax unified
 5278              		.thumb
 5279              		.thumb_func
 5280              		.fpu softvfp
 5281              		.type	BMP280_i2c, %function
 5282              	BMP280_i2c:
 5283              		@ args = 0, pretend = 0, frame = 80
 5284              		@ frame_needed = 0, uses_anonymous_args = 0
 5285 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 5286              	@ main.c:2461: 		I2C2->CCR = (1<<15) | 25;               			// setup speed (800kHz)
 5287 0004 48F2190C 		movw	ip, #32793	@ tmp322,
 5288              	@ main.c:2458: 		I2C2->TRISE = 37;               		// limit slope
 5289 0008 4FF0250E 		mov	lr, #37	@ tmp319,
 5290              	@ main.c:2455: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 5291 000c 0125     		movs	r5, #1	@ tmp312,
 5292              	@ main.c:2457: 		I2C2_CR1_SWRST_bb = 0;
 5293 000e 4FF00008 		mov	r8, #0	@ tmp316,
 5294              	@ main.c:2462: 		I2C2->CR2 = I2C_CR2_FREQ_36MHz;     // config I2C2 module
 5295 0012 2427     		movs	r7, #36	@ tmp325,
 5296              	@ main.c:2453: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000bf00;	// ...009d00 PB10=SCL(Push-pu
 5297 0014 C74A     		ldr	r2, .L428	@ tmp308,
 5298              	@ main.c:2458: 		I2C2->TRISE = 37;               		// limit slope
 5299 0016 C84C     		ldr	r4, .L428+4	@ tmp317,
 5300              	@ main.c:2453: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000bf00;	// ...009d00 PB10=SCL(Push-pu
 5301 0018 5368     		ldr	r3, [r2, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
ARM GAS  /tmp/cczkEFU1.s 			page 94


 5302              	@ main.c:2456: 		I2C2_CR1_SWRST_bb = 1;            	// force software reset of I2C peripheral
 5303 001a C848     		ldr	r0, .L428+8	@ tmp313,
 5304              	@ main.c:2455: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 5305 001c C849     		ldr	r1, .L428+12	@ tmp311,
 5306              	@ main.c:2463: 		I2C2_CR1_PE_bb = 1;               	// enable peripheral
 5307 001e C94E     		ldr	r6, .L428+16	@ tmp326,
 5308              	@ main.c:2453: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000bf00;	// ...009d00 PB10=SCL(Push-pu
 5309 0020 23F47F43 		bic	r3, r3, #65280	@ tmp309, _1,
 5310              	@ main.c:2446: void BMP280_i2c(void){
 5311 0024 95B0     		sub	sp, sp, #84	@,,
 5312              	@ main.c:2453: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000bf00;	// ...009d00 PB10=SCL(Push-pu
 5313 0026 43F43F43 		orr	r3, r3, #48896	@ _3, tmp309,
 5314 002a 5360     		str	r3, [r2, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 5315              	@ main.c:2455: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 5316 002c 0D60     		str	r5, [r1]	@ tmp312, MEM[(volatile long unsigned int *)1111622616B]
 5317              	@ main.c:2465: 		i2c2_read(BMP280_ADR,  0xD0, buf,1 );
 5318 002e 2B46     		mov	r3, r5	@, tmp312
 5319              	@ main.c:2456: 		I2C2_CR1_SWRST_bb = 1;            	// force software reset of I2C peripheral
 5320 0030 0560     		str	r5, [r0]	@ tmp312, MEM[(volatile long unsigned int *)1108017212B]
 5321              	@ main.c:2465: 		i2c2_read(BMP280_ADR,  0xD0, buf,1 );
 5322 0032 0EAA     		add	r2, sp, #56	@ tmp503,,
 5323              	@ main.c:2457: 		I2C2_CR1_SWRST_bb = 0;
 5324 0034 C0F80080 		str	r8, [r0]	@ tmp316, MEM[(volatile long unsigned int *)1108017212B]
 5325              	@ main.c:2465: 		i2c2_read(BMP280_ADR,  0xD0, buf,1 );
 5326 0038 D021     		movs	r1, #208	@,
 5327              	@ main.c:2458: 		I2C2->TRISE = 37;               		// limit slope
 5328 003a A4F820E0 		strh	lr, [r4, #32]	@ movhi	@ tmp319, MEM[(struct I2C_TypeDef *)1073764352B].TRISE
 5329              	@ main.c:2465: 		i2c2_read(BMP280_ADR,  0xD0, buf,1 );
 5330 003e EC20     		movs	r0, #236	@,
 5331              	@ main.c:2461: 		I2C2->CCR = (1<<15) | 25;               			// setup speed (800kHz)
 5332 0040 A4F81CC0 		strh	ip, [r4, #28]	@ movhi	@ tmp322, MEM[(struct I2C_TypeDef *)1073764352B].CCR
 5333              	@ main.c:2462: 		I2C2->CR2 = I2C_CR2_FREQ_36MHz;     // config I2C2 module
 5334 0044 A780     		strh	r7, [r4, #4]	@ movhi	@ tmp325, MEM[(struct I2C_TypeDef *)1073764352B].CR2
 5335              	@ main.c:2463: 		I2C2_CR1_PE_bb = 1;               	// enable peripheral
 5336 0046 3560     		str	r5, [r6]	@ tmp312, MEM[(volatile long unsigned int *)1108017152B]
 5337              	@ main.c:2465: 		i2c2_read(BMP280_ADR,  0xD0, buf,1 );
 5338 0048 FFF7FEFF 		bl	i2c2_read	@
 5339              	@ main.c:2466: 		UaPutK("\r\n i2c_BMP280 = 0x");	
 5340 004c BE48     		ldr	r0, .L428+20	@,
 5341 004e FFF7FEFF 		bl	UaPutK	@
 5342              	@ main.c:2467: 		hex2uart(buf[0],2);
 5343 0052 0221     		movs	r1, #2	@,
 5344 0054 9DF83800 		ldrb	r0, [sp, #56]	@ zero_extendqisi2	@, buf
 5345 0058 FFF7FEFF 		bl	hex2uart	@
 5346              	@ main.c:2470: 		buf[0]=0xf4;
 5347 005c 4BF2F473 		movw	r3, #47092	@ tmp332,
 5348              	@ main.c:2472: 		i2c2_write(BMP280_ADR,buf,2); // set mode
 5349 0060 0EA9     		add	r1, sp, #56	@ tmp504,,
 5350 0062 0222     		movs	r2, #2	@,
 5351 0064 EC20     		movs	r0, #236	@,
 5352              	@ main.c:2470: 		buf[0]=0xf4;
 5353 0066 ADF83830 		strh	r3, [sp, #56]	@ movhi	@ tmp332, MEM[(u08[24] *)&buf]
 5354              	@ main.c:2472: 		i2c2_write(BMP280_ADR,buf,2); // set mode
 5355 006a FFF7FEFF 		bl	i2c2_write	@
 5356              	@ main.c:2474: 		buf[0]=0xf5;
 5357 006e 41F2F503 		movw	r3, #4341	@ tmp335,
 5358              	@ main.c:2476: 		i2c2_write(BMP280_ADR,buf,2); // set mode
ARM GAS  /tmp/cczkEFU1.s 			page 95


 5359 0072 0EA9     		add	r1, sp, #56	@ tmp505,,
 5360 0074 0222     		movs	r2, #2	@,
 5361 0076 EC20     		movs	r0, #236	@,
 5362              	@ main.c:2474: 		buf[0]=0xf5;
 5363 0078 ADF83830 		strh	r3, [sp, #56]	@ movhi	@ tmp335, MEM[(u08[24] *)&buf]
 5364              	@ main.c:2476: 		i2c2_write(BMP280_ADR,buf,2); // set mode
 5365 007c FFF7FEFF 		bl	i2c2_write	@
 5366              	@ main.c:2478: 		i2c2_read(BMP280_ADR,  0x88, buf,6+16 );
 5367 0080 0EAA     		add	r2, sp, #56	@ tmp506,,
 5368 0082 1623     		movs	r3, #22	@,
 5369 0084 8821     		movs	r1, #136	@,
 5370 0086 EC20     		movs	r0, #236	@,
 5371 0088 FFF7FEFF 		bl	i2c2_read	@
 5372              	@ main.c:2481: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5373 008c 9DF83D20 		ldrb	r2, [sp, #61]	@ zero_extendqisi2	@ buf, buf
 5374              	@ main.c:2484: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5375 0090 9DF84110 		ldrb	r1, [sp, #65]	@ zero_extendqisi2	@ buf, buf
 5376              	@ main.c:2481: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5377 0094 0692     		str	r2, [sp, #24]	@ buf, %sfp
 5378              	@ main.c:2491: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5379 0096 9DF84F20 		ldrb	r2, [sp, #79]	@ zero_extendqisi2	@ buf, buf
 5380              	@ main.c:2481: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5381 009a 9DF83CA0 		ldrb	r10, [sp, #60]	@ zero_extendqisi2	@ buf, buf
 5382              	@ main.c:2491: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5383 009e 0592     		str	r2, [sp, #20]	@ buf, %sfp
 5384              	@ main.c:2481: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5385 00a0 069A     		ldr	r2, [sp, #24]	@ buf, %sfp
 5386              	@ main.c:2484: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5387 00a2 0091     		str	r1, [sp]	@ buf, %sfp
 5388              	@ main.c:2485: 		dig_P3 = (s16)((buf[11]<<8) | buf[10]);
 5389 00a4 9DF84300 		ldrb	r0, [sp, #67]	@ zero_extendqisi2	@ buf, buf
 5390              	@ main.c:2481: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5391 00a8 4AEA022A 		orr	r10, r10, r2, lsl #8	@ tmp349, buf, buf,
 5392              	@ main.c:2484: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5393 00ac 9DF84090 		ldrb	r9, [sp, #64]	@ zero_extendqisi2	@ buf, buf
 5394 00b0 009A     		ldr	r2, [sp]	@ buf, %sfp
 5395              	@ main.c:2485: 		dig_P3 = (s16)((buf[11]<<8) | buf[10]);
 5396 00b2 0190     		str	r0, [sp, #4]	@ buf, %sfp
 5397              	@ main.c:2487: 		dig_P5 = (s16)((buf[15]<<8) | buf[14]);
 5398 00b4 9DF84760 		ldrb	r6, [sp, #71]	@ zero_extendqisi2	@ buf, buf
 5399              	@ main.c:2484: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5400 00b8 49EA0229 		orr	r9, r9, r2, lsl #8	@ tmp355, buf, buf,
 5401              	@ main.c:2485: 		dig_P3 = (s16)((buf[11]<<8) | buf[10]);
 5402 00bc 9DF84280 		ldrb	r8, [sp, #66]	@ zero_extendqisi2	@ buf, buf
 5403 00c0 019A     		ldr	r2, [sp, #4]	@ buf, %sfp
 5404              	@ main.c:2487: 		dig_P5 = (s16)((buf[15]<<8) | buf[14]);
 5405 00c2 0296     		str	r6, [sp, #8]	@ buf, %sfp
 5406              	@ main.c:2488: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5407 00c4 9DF84970 		ldrb	r7, [sp, #73]	@ zero_extendqisi2	@ buf, buf
 5408              	@ main.c:2489: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5409 00c8 9DF84B10 		ldrb	r1, [sp, #75]	@ zero_extendqisi2	@ buf, buf
 5410              	@ main.c:2480: 		dig_T2 = (s16)((buf[3]<<8) | buf[2]);
 5411 00cc 9DF83B30 		ldrb	r3, [sp, #59]	@ zero_extendqisi2	@ buf, buf
 5412              	@ main.c:2485: 		dig_P3 = (s16)((buf[11]<<8) | buf[10]);
 5413 00d0 48EA0228 		orr	r8, r8, r2, lsl #8	@ tmp361, buf, buf,
 5414              	@ main.c:2480: 		dig_T2 = (s16)((buf[3]<<8) | buf[2]);
 5415 00d4 9DF83AB0 		ldrb	fp, [sp, #58]	@ zero_extendqisi2	@ buf, buf
ARM GAS  /tmp/cczkEFU1.s 			page 96


 5416              	@ main.c:2487: 		dig_P5 = (s16)((buf[15]<<8) | buf[14]);
 5417 00d8 029A     		ldr	r2, [sp, #8]	@ buf, %sfp
 5418 00da 9DF846E0 		ldrb	lr, [sp, #70]	@ zero_extendqisi2	@ buf, buf
 5419              	@ main.c:2488: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5420 00de 0397     		str	r7, [sp, #12]	@ buf, %sfp
 5421              	@ main.c:2490: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5422 00e0 9DF84C60 		ldrb	r6, [sp, #76]	@ zero_extendqisi2	@ buf, buf
 5423              	@ main.c:2489: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5424 00e4 0491     		str	r1, [sp, #16]	@ buf, %sfp
 5425              	@ main.c:2490: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5426 00e6 9DF84D10 		ldrb	r1, [sp, #77]	@ zero_extendqisi2	@ buf, buf
 5427              	@ main.c:2487: 		dig_P5 = (s16)((buf[15]<<8) | buf[14]);
 5428 00ea 4EEA022E 		orr	lr, lr, r2, lsl #8	@ tmp373, buf, buf,
 5429              	@ main.c:2480: 		dig_T2 = (s16)((buf[3]<<8) | buf[2]);
 5430 00ee 4BEA032B 		orr	fp, fp, r3, lsl #8	@ tmp343, buf, buf,
 5431              	@ main.c:2488: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5432 00f2 9DF848C0 		ldrb	ip, [sp, #72]	@ zero_extendqisi2	@ buf, buf
 5433 00f6 039A     		ldr	r2, [sp, #12]	@ buf, %sfp
 5434              	@ main.c:2490: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5435 00f8 46EA0121 		orr	r1, r6, r1, lsl #8	@ tmp391, buf, buf,
 5436              	@ main.c:2480: 		dig_T2 = (s16)((buf[3]<<8) | buf[2]);
 5437 00fc 0FFA8BF6 		sxth	r6, fp	@ dig_T2, tmp343
 5438              	@ main.c:2488: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5439 0100 4CEA022C 		orr	ip, ip, r2, lsl #8	@ tmp379, buf, buf,
 5440              	@ main.c:2486: 		dig_P4 = (s16)((buf[13]<<8) | buf[12]);
 5441 0104 9DF84500 		ldrb	r0, [sp, #69]	@ zero_extendqisi2	@ buf, buf
 5442 0108 9DF84440 		ldrb	r4, [sp, #68]	@ zero_extendqisi2	@ buf, buf
 5443              	@ main.c:2489: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5444 010c 9DF84A70 		ldrb	r7, [sp, #74]	@ zero_extendqisi2	@ buf, buf
 5445              	@ main.c:2491: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5446 0110 9DF84E30 		ldrb	r3, [sp, #78]	@ zero_extendqisi2	@ buf, buf
 5447              	@ main.c:2489: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5448 0114 049A     		ldr	r2, [sp, #16]	@ buf, %sfp
 5449              	@ main.c:2480: 		dig_T2 = (s16)((buf[3]<<8) | buf[2]);
 5450 0116 0296     		str	r6, [sp, #8]	@ dig_T2, %sfp
 5451              	@ main.c:2481: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5452 0118 0FFA8AF6 		sxth	r6, r10	@ dig_T3, tmp349
 5453 011c 0396     		str	r6, [sp, #12]	@ dig_T3, %sfp
 5454              	@ main.c:2484: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5455 011e 0FFA89F6 		sxth	r6, r9	@ dig_P2, tmp355
 5456              	@ main.c:2489: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5457 0122 47EA0227 		orr	r7, r7, r2, lsl #8	@ tmp385, buf, buf,
 5458              	@ main.c:2491: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5459 0126 059A     		ldr	r2, [sp, #20]	@ buf, %sfp
 5460              	@ main.c:2484: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5461 0128 0596     		str	r6, [sp, #20]	@ dig_P2, %sfp
 5462              	@ main.c:2485: 		dig_P3 = (s16)((buf[11]<<8) | buf[10]);
 5463 012a 0FFA88F6 		sxth	r6, r8	@ dig_P3, tmp361
 5464 012e 0696     		str	r6, [sp, #24]	@ dig_P3, %sfp
 5465              	@ main.c:2487: 		dig_P5 = (s16)((buf[15]<<8) | buf[14]);
 5466 0130 0FFA8EF6 		sxth	r6, lr	@ dig_P5, tmp373
 5467 0134 0796     		str	r6, [sp, #28]	@ dig_P5, %sfp
 5468              	@ main.c:2488: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5469 0136 0FFA8CF6 		sxth	r6, ip	@ dig_P6, tmp379
 5470              	@ main.c:2490: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5471 013a 0091     		str	r1, [sp]	@ tmp391, %sfp
 5472              	@ main.c:2488: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
ARM GAS  /tmp/cczkEFU1.s 			page 97


 5473 013c 0896     		str	r6, [sp, #32]	@ dig_P6, %sfp
 5474              	@ main.c:2489: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5475 013e 3EB2     		sxth	r6, r7	@ dig_P7, tmp385
 5476              	@ main.c:2491: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5477 0140 43EA0223 		orr	r3, r3, r2, lsl #8	@ tmp397, buf, buf,
 5478              	@ main.c:2489: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5479 0144 0996     		str	r6, [sp, #36]	@ dig_P7, %sfp
 5480              	@ main.c:2490: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5481 0146 BDF90060 		ldrsh	r6, [sp]	@ dig_P8, %sfp
 5482              	@ main.c:2491: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5483 014a 0193     		str	r3, [sp, #4]	@ tmp397, %sfp
 5484              	@ main.c:2490: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5485 014c 0A96     		str	r6, [sp, #40]	@ dig_P8, %sfp
 5486              	@ main.c:2491: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5487 014e BDF90460 		ldrsh	r6, [sp, #4]	@ dig_P9, %sfp
 5488              	@ main.c:2493: 		i2c2_read(BMP280_ADR,  0xf4, buf,1 ); hex2uart(buf[0],2);
 5489 0152 2B46     		mov	r3, r5	@, tmp312
 5490              	@ main.c:2491: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5491 0154 0B96     		str	r6, [sp, #44]	@ dig_P9, %sfp
 5492              	@ main.c:2483: 		dig_P1 = (u16)(((u16)(buf[7]<<8)) | buf[6]);
 5493 0156 BDF83E60 		ldrh	r6, [sp, #62]	@ dig_P1, MEM[(u08[24] *)&buf + 6B]
 5494              	@ main.c:2493: 		i2c2_read(BMP280_ADR,  0xf4, buf,1 ); hex2uart(buf[0],2);
 5495 015a 0EAA     		add	r2, sp, #56	@ tmp533,,
 5496              	@ main.c:2486: 		dig_P4 = (s16)((buf[13]<<8) | buf[12]);
 5497 015c 44EA0024 		orr	r4, r4, r0, lsl #8	@ tmp367, buf, buf,
 5498              	@ main.c:2493: 		i2c2_read(BMP280_ADR,  0xf4, buf,1 ); hex2uart(buf[0],2);
 5499 0160 F421     		movs	r1, #244	@,
 5500 0162 EC20     		movs	r0, #236	@,
 5501              	@ main.c:2479: 		dig_T1 = (u16)(((u16)(buf[1]<<8)) | buf[0]);
 5502 0164 BDF838A0 		ldrh	r10, [sp, #56]	@ dig_T1, MEM[(u08[24] *)&buf]
 5503              	@ main.c:2483: 		dig_P1 = (u16)(((u16)(buf[7]<<8)) | buf[6]);
 5504 0168 0496     		str	r6, [sp, #16]	@ dig_P1, %sfp
 5505              	@ main.c:2493: 		i2c2_read(BMP280_ADR,  0xf4, buf,1 ); hex2uart(buf[0],2);
 5506 016a FFF7FEFF 		bl	i2c2_read	@
 5507 016e 0221     		movs	r1, #2	@,
 5508 0170 9DF83800 		ldrb	r0, [sp, #56]	@ zero_extendqisi2	@, buf
 5509 0174 FFF7FEFF 		bl	hex2uart	@
 5510              	@ main.c:2494: 		i2c2_read(BMP280_ADR,  0xf5, buf,1 ); hex2uart(buf[0],2);
 5511 0178 2B46     		mov	r3, r5	@, tmp312
 5512 017a 0EAA     		add	r2, sp, #56	@ tmp554,,
 5513 017c F521     		movs	r1, #245	@,
 5514 017e EC20     		movs	r0, #236	@,
 5515 0180 FFF7FEFF 		bl	i2c2_read	@
 5516              	@ main.c:2486: 		dig_P4 = (s16)((buf[13]<<8) | buf[12]);
 5517 0184 24B2     		sxth	r4, r4	@ dig_P4, tmp367
 5518              	@ main.c:2494: 		i2c2_read(BMP280_ADR,  0xf5, buf,1 ); hex2uart(buf[0],2);
 5519 0186 0221     		movs	r1, #2	@,
 5520 0188 9DF83800 		ldrb	r0, [sp, #56]	@ zero_extendqisi2	@, buf
 5521 018c FFF7FEFF 		bl	hex2uart	@
 5522              	@ main.c:2546: 				var2 = (var2>>2)+(((s32)dig_P4)<<16); 
 5523 0190 2304     		lsls	r3, r4, #16	@ _139, dig_P4,
 5524 0192 0193     		str	r3, [sp, #4]	@ _139, %sfp
 5525 0194 DFF8DC81 		ldr	r8, .L428+64	@ tmp494,
 5526              	@ main.c:2520: 				var1 = ((((adc_T>>3)  - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5527 0198 0AFA05F3 		lsl	r3, r10, r5	@ _99, dig_T1,
 5528 019c 6B4F     		ldr	r7, .L428+24	@ tmp496,
 5529              	@ main.c:2505: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL)){
ARM GAS  /tmp/cczkEFU1.s 			page 98


 5530 019e DFF8D891 		ldr	r9, .L428+68	@ tmp405,
 5531              	@ main.c:2572: 			if( STCLK_MS*1000 < (trg1 - SysTick->VAL)){
 5532 01a2 DFF8D8B1 		ldr	fp, .L428+72	@ tmp498,
 5533              	@ main.c:2505: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL)){
 5534 01a6 6A4E     		ldr	r6, .L428+28	@ tmp403,
 5535              	@ main.c:2520: 				var1 = ((((adc_T>>3)  - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5536 01a8 0093     		str	r3, [sp]	@ _99, %sfp
 5537              	.L424:
 5538              	@ main.c:2505: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL)){
 5539 01aa D8F80030 		ldr	r3, [r8]	@ trg0.163_80, trg0
 5540 01ae B268     		ldr	r2, [r6, #8]	@ _81, MEM[(struct SysTick_Type *)3758153744B].VAL
 5541 01b0 9B1A     		subs	r3, r3, r2	@ tmp404, trg0.163_80, _81
 5542 01b2 4B45     		cmp	r3, r9	@ tmp404, tmp405
 5543 01b4 40F2B080 		bls	.L420	@,
 5544              	@ main.c:2506: 				trg0 = SysTick->VAL;
 5545 01b8 B368     		ldr	r3, [r6, #8]	@ _83, MEM[(struct SysTick_Type *)3758153744B].VAL
 5546              	@ main.c:2508: 				UaPutK("\r\n BMP280 ");	
 5547 01ba 6648     		ldr	r0, .L428+32	@,
 5548              	@ main.c:2506: 				trg0 = SysTick->VAL;
 5549 01bc C8F80030 		str	r3, [r8]	@ _83, trg0
 5550              	@ main.c:2508: 				UaPutK("\r\n BMP280 ");	
 5551 01c0 FFF7FEFF 		bl	UaPutK	@
 5552              	@ main.c:2515: 				i2c2_read(BMP280_ADR,  0xFA, buf,3 );
 5553 01c4 0323     		movs	r3, #3	@,
 5554 01c6 0EAA     		add	r2, sp, #56	@ tmp558,,
 5555 01c8 FA21     		movs	r1, #250	@,
 5556 01ca EC20     		movs	r0, #236	@,
 5557 01cc FFF7FEFF 		bl	i2c2_read	@
 5558              	@ main.c:2519: 				adc_T = ( (u32)((u16)((buf[0]) << 8) | buf[1] ) << 4) | ( (buf[2]) >> 4);
 5559 01d0 BDF83830 		ldrh	r3, [sp, #56]	@, MEM[(u08[24] *)&buf]
 5560 01d4 9DF83A20 		ldrb	r2, [sp, #58]	@ zero_extendqisi2	@ buf, buf
 5561 01d8 5BBA     		rev16	r3, r3	@ tmp412, MEM[(u08[24] *)&buf]
 5562 01da 9BB2     		uxth	r3, r3	@ tmp414, tmp412
 5563 01dc 1209     		lsrs	r2, r2, #4	@ tmp418, buf,
 5564 01de 42EA0312 		orr	r2, r2, r3, lsl #4	@ adc_T, tmp418, tmp414,
 5565              	@ main.c:2521:         var2 = (((((adc_T>>4) - ((s32)dig_T1)) * ((adc_T>>4) - ((s32)dig_T1))) >> 12
 5566 01e2 CAEB1213 		rsb	r3, r10, r2, lsr #4	@ _105, dig_T1, adc_T,
 5567 01e6 03FB03F3 		mul	r3, r3, r3	@ tmp424, _105, _105
 5568              	@ main.c:2522: 				* ((s32)dig_T3))>>14;
 5569 01ea 0398     		ldr	r0, [sp, #12]	@ dig_T3, %sfp
 5570              	@ main.c:2521:         var2 = (((((adc_T>>4) - ((s32)dig_T1)) * ((adc_T>>4) - ((s32)dig_T1))) >> 12
 5571 01ec 1B0B     		lsrs	r3, r3, #12	@ tmp425, tmp424,
 5572              	@ main.c:2522: 				* ((s32)dig_T3))>>14;
 5573 01ee 00FB03F3 		mul	r3, r0, r3	@ tmp426, dig_T3, tmp425
 5574              	@ main.c:2520: 				var1 = ((((adc_T>>3)  - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5575 01f2 0098     		ldr	r0, [sp]	@ _99, %sfp
 5576              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5577 01f4 B168     		ldr	r1, [r6, #8]	@ _259, MEM[(struct SysTick_Type *)3758153744B].VAL
 5578              	@ main.c:2520: 				var1 = ((((adc_T>>3)  - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5579 01f6 C0EBD202 		rsb	r2, r0, r2, lsr #3	@ tmp421, _99, adc_T,
 5580 01fa 0298     		ldr	r0, [sp, #8]	@ dig_T2, %sfp
 5581              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5582 01fc 3960     		str	r1, [r7]	@ _259, Timt
 5583              	@ main.c:2520: 				var1 = ((((adc_T>>3)  - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5584 01fe 00FB02F2 		mul	r2, r0, r2	@ tmp422, dig_T2, tmp421
 5585              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5586 0202 3D68     		ldr	r5, [r7]	@ Timt.82_256, Timt
ARM GAS  /tmp/cczkEFU1.s 			page 99


 5587 0204 B168     		ldr	r1, [r6, #8]	@ _257, MEM[(struct SysTick_Type *)3758153744B].VAL
 5588              	@ main.c:2521:         var2 = (((((adc_T>>4) - ((s32)dig_T1)) * ((adc_T>>4) - ((s32)dig_T1))) >> 12
 5589 0206 9B0B     		lsrs	r3, r3, #14	@ var2, tmp426,
 5590              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5591 0208 6D1A     		subs	r5, r5, r1	@ _258, Timt.82_256, _257
 5592              	@ main.c:2531: 				UaPutS("tt="); sint2uart(tim);
 5593 020a 5348     		ldr	r0, .L428+36	@,
 5594              	@ main.c:2524:         t_fine = var1 + var2;
 5595 020c 03EBD224 		add	r4, r3, r2, lsr #11	@ t_fine, var2, tmp422,
 5596              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5597 0210 0D95     		str	r5, [sp, #52]	@ _258, MEM[(volatile u32 *)&tim]
 5598              	@ main.c:2531: 				UaPutS("tt="); sint2uart(tim);
 5599 0212 FFF7FEFF 		bl	UaPutS	@
 5600 0216 2846     		mov	r0, r5	@, _258
 5601 0218 FFF7FEFF 		bl	sint2uart	@
 5602              	@ main.c:2534: 				UaPutK(" T=");	
 5603 021c 4F48     		ldr	r0, .L428+40	@,
 5604 021e FFF7FEFF 		bl	UaPutK	@
 5605              	@ main.c:2527: 				T     = (t_fine * 50 + 1280) >> 8; // resolution 0.001 C
 5606 0222 3220     		movs	r0, #50	@ tmp433,
 5607 0224 00FB04F0 		mul	r0, r0, r4	@ tmp432, tmp433, t_fine
 5608 0228 00F5A060 		add	r0, r0, #1280	@ tmp434, tmp432,
 5609              	@ main.c:2535: 				num2uart(T,5,3);
 5610 022c 000A     		lsrs	r0, r0, #8	@, tmp434,
 5611 022e 0322     		movs	r2, #3	@,
 5612 0230 0521     		movs	r1, #5	@,
 5613 0232 FFF7FEFF 		bl	num2uart	@
 5614              	@ main.c:2539: 				i2c2_read(BMP280_ADR,  0xF7, buf,3 );				
 5615 0236 0323     		movs	r3, #3	@,
 5616 0238 0EAA     		add	r2, sp, #56	@ tmp563,,
 5617 023a F721     		movs	r1, #247	@,
 5618 023c EC20     		movs	r0, #236	@,
 5619 023e FFF7FEFF 		bl	i2c2_read	@
 5620              	@ main.c:2543: 				var1 = (((s32)t_fine)>>1) - 64000UL; 
 5621 0242 6210     		asrs	r2, r4, #1	@ tmp446, t_fine,
 5622 0244 A2F57A42 		sub	r2, r2, #64000	@ var1, tmp446,
 5623              	@ main.c:2544: 				var2 = (((var1>>2) * (var1>>2)) >> 11 ) * ((s32)dig_P6); 
 5624 0248 9308     		lsrs	r3, r2, #2	@ _129, var1,
 5625 024a 03FB03F3 		mul	r3, r3, r3	@ _130, _129, _129
 5626              	@ main.c:2547: 				var1 = (((dig_P3 * (((var1>>2) * (var1>>2)) >> 13 )) >> 3) + ((((s32)dig_P2) * v
 5627 024e 0599     		ldr	r1, [sp, #20]	@ dig_P2, %sfp
 5628 0250 069C     		ldr	r4, [sp, #24]	@ dig_P3, %sfp
 5629 0252 01FB02F0 		mul	r0, r1, r2	@ tmp454, dig_P2, var1
 5630 0256 590B     		lsrs	r1, r3, #13	@ tmp451, _130,
 5631 0258 04FB01F1 		mul	r1, r4, r1	@ tmp452, dig_P3, tmp451
 5632              	@ main.c:2545: 				var2 = var2 + ((var1*((s32)dig_P5))<<1); 
 5633 025c 079C     		ldr	r4, [sp, #28]	@ dig_P5, %sfp
 5634              	@ main.c:2547: 				var1 = (((dig_P3 * (((var1>>2) * (var1>>2)) >> 13 )) >> 3) + ((((s32)dig_P2) * v
 5635 025e 4008     		lsrs	r0, r0, #1	@ tmp455, tmp454,
 5636              	@ main.c:2545: 				var2 = var2 + ((var1*((s32)dig_P5))<<1); 
 5637 0260 04FB02F2 		mul	r2, r4, r2	@ tmp448, dig_P5, var1
 5638              	@ main.c:2547: 				var1 = (((dig_P3 * (((var1>>2) * (var1>>2)) >> 13 )) >> 3) + ((((s32)dig_P2) * v
 5639 0264 00EBD100 		add	r0, r0, r1, lsr #3	@ _147, tmp455, tmp452,
 5640 0268 800C     		lsrs	r0, r0, #18	@ var1, _147,
 5641              	@ main.c:2548: 				var1 =((((32768+var1))*((s32)dig_P1))>>15); 
 5642 026a 0499     		ldr	r1, [sp, #16]	@ dig_P1, %sfp
 5643 026c 00F50040 		add	r0, r0, #32768	@ tmp457, var1,
ARM GAS  /tmp/cczkEFU1.s 			page 100


 5644 0270 01FB00F0 		mul	r0, r1, r0	@ _150, dig_P1, tmp457
 5645              	@ main.c:2545: 				var2 = var2 + ((var1*((s32)dig_P5))<<1); 
 5646 0274 0899     		ldr	r1, [sp, #32]	@ dig_P6, %sfp
 5647 0276 5200     		lsls	r2, r2, #1	@ tmp449, tmp448,
 5648              	@ main.c:2544: 				var2 = (((var1>>2) * (var1>>2)) >> 11 ) * ((s32)dig_P6); 
 5649 0278 DB0A     		lsrs	r3, r3, #11	@ tmp447, _130,
 5650              	@ main.c:2545: 				var2 = var2 + ((var1*((s32)dig_P5))<<1); 
 5651 027a 01FB0323 		mla	r3, r1, r3, r2	@ var2, dig_P6, tmp447, tmp449
 5652              	@ main.c:2540: 				adc_P   = ((u32)((u16)(buf[0] << 8) | buf[1])<<4) | (buf[2]>>4);
 5653 027e BDF83810 		ldrh	r1, [sp, #56]	@, MEM[(u08[24] *)&buf]
 5654 0282 9DF83A20 		ldrb	r2, [sp, #58]	@ zero_extendqisi2	@ buf, buf
 5655 0286 49BA     		rev16	r1, r1	@ tmp437, MEM[(u08[24] *)&buf]
 5656 0288 89B2     		uxth	r1, r1	@ tmp439, tmp437
 5657              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5658 028a B468     		ldr	r4, [r6, #8]	@ _255, MEM[(struct SysTick_Type *)3758153744B].VAL
 5659              	@ main.c:2540: 				adc_P   = ((u32)((u16)(buf[0] << 8) | buf[1])<<4) | (buf[2]>>4);
 5660 028c 1209     		lsrs	r2, r2, #4	@ tmp443, buf,
 5661              	@ main.c:2546: 				var2 = (var2>>2)+(((s32)dig_P4)<<16); 
 5662 028e 019D     		ldr	r5, [sp, #4]	@ _139, %sfp
 5663              	@ main.c:2540: 				adc_P   = ((u32)((u16)(buf[0] << 8) | buf[1])<<4) | (buf[2]>>4);
 5664 0290 42EA0112 		orr	r2, r2, r1, lsl #4	@ adc_P, tmp443, tmp439,
 5665              	@ main.c:2549: 				if (var1 == 0) 
 5666 0294 C10B     		lsrs	r1, r0, #15	@ var1, _150,
 5667              	@ main.c:2546: 				var2 = (var2>>2)+(((s32)dig_P4)<<16); 
 5668 0296 05EB9303 		add	r3, r5, r3, lsr #2	@ var2, _139, var2,
 5669              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5670 029a 3C60     		str	r4, [r7]	@ _255, Timt
 5671              	@ main.c:2549: 				if (var1 == 0) 
 5672 029c 46D0     		beq	.L419	@,
 5673              	@ main.c:2554: 					p = (((u32)(((s32)1048576)-adc_P)-(var2>>12)))*3125; 
 5674 029e 3048     		ldr	r0, .L428+44	@ tmp461,
 5675 02a0 02EB1333 		add	r3, r2, r3, lsr #12	@ tmp459, adc_P, var2,
 5676 02a4 00FB03F0 		mul	r0, r0, r3	@ tmp460, tmp461, tmp459
 5677 02a8 00F14340 		add	r0, r0, #-1023410176	@ p, tmp460,
 5678 02ac 00F5A000 		add	r0, r0, #5242880	@ p, p,
 5679              	@ main.c:2555: 					if (p < 0x80000000) { p = (p << 1) / ((u32)var1); 	}  
 5680 02b0 0028     		cmp	r0, #0	@ p,
 5681              	@ main.c:2556: 					else  							{ p = (p 			 /  (u32)var1)*2; } 
 5682 02b2 B3BF     		iteet	lt
 5683 02b4 B0FBF1F0 		udivlt	r0, r0, r1	@ _157, p, var1
 5684              	@ main.c:2555: 					if (p < 0x80000000) { p = (p << 1) / ((u32)var1); 	}  
 5685 02b8 4000     		lslge	r0, r0, #1	@ _156, p,
 5686 02ba B0FBF1F0 		udivge	r0, r0, r1	@ p, _156, var1
 5687              	@ main.c:2556: 					else  							{ p = (p 			 /  (u32)var1)*2; } 
 5688 02be 4000     		lsllt	r0, r0, #1	@ p, _157,
 5689              	@ main.c:2557: 					var1 = (((s32)dig_P9) * ((s32)(((p>>3) * (p>>3))>>13)))>>12; 
 5690 02c0 C308     		lsrs	r3, r0, #3	@ _159, p,
 5691 02c2 03FB03F3 		mul	r3, r3, r3	@ tmp463, _159, _159
 5692              	@ main.c:2558: 					var2 = (((s32)(p>>2)) * ((s32)dig_P8))>>13; 
 5693 02c6 0A99     		ldr	r1, [sp, #40]	@ dig_P8, %sfp
 5694 02c8 8208     		lsrs	r2, r0, #2	@ tmp467, p,
 5695 02ca 01FB02F2 		mul	r2, r1, r2	@ tmp468, dig_P8, tmp467
 5696              	@ main.c:2557: 					var1 = (((s32)dig_P9) * ((s32)(((p>>3) * (p>>3))>>13)))>>12; 
 5697 02ce 0B99     		ldr	r1, [sp, #44]	@ dig_P9, %sfp
 5698 02d0 5B0B     		lsrs	r3, r3, #13	@ tmp464, tmp463,
 5699 02d2 01FB03F3 		mul	r3, r1, r3	@ tmp465, dig_P9, tmp464
 5700              	@ main.c:2559: 					p = (u32)((s32)p + ((var1 + var2 + dig_P7) >> 4)); 
ARM GAS  /tmp/cczkEFU1.s 			page 101


 5701 02d6 0999     		ldr	r1, [sp, #36]	@ dig_P7, %sfp
 5702 02d8 01EB6232 		add	r2, r1, r2, asr #13	@ tmp470, dig_P7, tmp468,
 5703 02dc 02EB2333 		add	r3, r2, r3, asr #12	@ tmp471, tmp470, tmp465,
 5704 02e0 00EB1310 		add	r0, r0, r3, lsr #4	@ p, p, tmp471,
 5705              	@ main.c:2560: 					p = (p*5)/8;
 5706 02e4 00EB8000 		add	r0, r0, r0, lsl #2	@ tmp475, p, p,
 5707 02e8 C008     		lsrs	r0, r0, #3	@ p, tmp475,
 5708              	@ main.c:2561: 					p = (p*5)/8;
 5709 02ea 00EB8004 		add	r4, r0, r0, lsl #2	@ tmp479, p, p,
 5710              	@ main.c:2562: 					UaPutK(" p= ");	
 5711 02ee 1D48     		ldr	r0, .L428+48	@,
 5712 02f0 FFF7FEFF 		bl	UaPutK	@
 5713              	@ main.c:2563: 					num2uart(p,9,3);
 5714 02f4 E008     		lsrs	r0, r4, #3	@, tmp479,
 5715 02f6 0322     		movs	r2, #3	@,
 5716 02f8 0921     		movs	r1, #9	@,
 5717 02fa FFF7FEFF 		bl	num2uart	@
 5718              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5719 02fe 3C68     		ldr	r4, [r7]	@ Timt.82_260, Timt
 5720 0300 B368     		ldr	r3, [r6, #8]	@ _261, MEM[(struct SysTick_Type *)3758153744B].VAL
 5721              	@ main.c:2567: 				UaPutS(" tp="); sint2uart(tim/TIM_US);
 5722 0302 1948     		ldr	r0, .L428+52	@,
 5723              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5724 0304 E41A     		subs	r4, r4, r3	@ _262, Timt.82_260, _261
 5725 0306 0D94     		str	r4, [sp, #52]	@ _262, MEM[(volatile u32 *)&tim]
 5726              	@ main.c:2567: 				UaPutS(" tp="); sint2uart(tim/TIM_US);
 5727 0308 FFF7FEFF 		bl	UaPutS	@
 5728 030c 174B     		ldr	r3, .L428+56	@ tmp577,
 5729 030e A3FB0430 		umull	r3, r0, r3, r4	@ tmp502, tmp486, tmp577, _262
 5730 0312 4008     		lsrs	r0, r0, #1	@, tmp486,
 5731 0314 FFF7FEFF 		bl	sint2uart	@
 5732              	.L420:
 5733              	@ main.c:2572: 			if( STCLK_MS*1000 < (trg1 - SysTick->VAL)){
 5734 0318 154A     		ldr	r2, .L428+60	@ tmp488,
 5735 031a 1368     		ldr	r3, [r2]	@ trg1.169_178, trg1
 5736 031c B168     		ldr	r1, [r6, #8]	@ _179, MEM[(struct SysTick_Type *)3758153744B].VAL
 5737 031e 5B1A     		subs	r3, r3, r1	@ tmp490, trg1.169_178, _179
 5738 0320 5B45     		cmp	r3, fp	@ tmp490, tmp498
 5739 0322 7FF642AF 		bls	.L424	@,
 5740              	@ main.c:2573: 				trg1 = SysTick->VAL;
 5741 0326 B368     		ldr	r3, [r6, #8]	@ _181, MEM[(struct SysTick_Type *)3758153744B].VAL
 5742 0328 1360     		str	r3, [r2]	@ _181, trg1
 5743 032a 3EE7     		b	.L424	@
 5744              	.L419:
 5745              	@ main.c:2577: 	}
 5746 032c 15B0     		add	sp, sp, #84	@,,
 5747              		@ sp needed	@
 5748 032e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 5749              	.L429:
 5750 0332 00BF     		.align	2
 5751              	.L428:
 5752 0334 000C0140 		.word	1073810432
 5753 0338 00580040 		.word	1073764352
 5754 033c 3C000B42 		.word	1108017212
 5755 0340 D8034242 		.word	1111622616
 5756 0344 00000B42 		.word	1108017152
 5757 0348 00000000 		.word	.LC68
ARM GAS  /tmp/cczkEFU1.s 			page 102


 5758 034c 00000000 		.word	Timt
 5759 0350 10E000E0 		.word	-536813552
 5760 0354 14000000 		.word	.LC69
 5761 0358 20000000 		.word	.LC70
 5762 035c 24000000 		.word	.LC71
 5763 0360 CBF3FFFF 		.word	-3125
 5764 0364 28000000 		.word	.LC72
 5765 0368 30000000 		.word	.LC73
 5766 036c 398EE338 		.word	954437177
 5767 0370 00000000 		.word	trg1
 5768 0374 00000000 		.word	trg0
 5769 0378 20AA4400 		.word	4500000
 5770 037c 40548900 		.word	9000000
 5771              		.size	BMP280_i2c, .-BMP280_i2c
 5772              		.section	.text.BMP280_spi,"ax",%progbits
 5773              		.align	1
 5774              		.p2align 2,,3
 5775              		.global	BMP280_spi
 5776              		.syntax unified
 5777              		.thumb
 5778              		.thumb_func
 5779              		.fpu softvfp
 5780              		.type	BMP280_spi, %function
 5781              	BMP280_spi:
 5782              		@ args = 0, pretend = 0, frame = 16
 5783              		@ frame_needed = 0, uses_anonymous_args = 0
 5784 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 5785              	@ main.c:2591: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|7<<3|SPI_CR1_MSTR|SPI_CR1_CPOL|SPI_CR1_CPHA;		
 5786 0004 40F23F36 		movw	r6, #831	@ tmp198,
 5787              	@ main.c:2607: 		RX1276_CS1 = 0;
 5788 0008 0025     		movs	r5, #0	@ tmp211,
 5789              	@ main.c:2587: 		GPIOA->CRL = (GPIOA->CRL&0x0000ffff)|0xB4B30000;	// PA4~7
 5790 000a 6C48     		ldr	r0, .L437	@ tmp189,
 5791              	@ main.c:2588: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 5792 000c 6C49     		ldr	r1, .L437+4	@ tmp194,
 5793              	@ main.c:2587: 		GPIOA->CRL = (GPIOA->CRL&0x0000ffff)|0xB4B30000;	// PA4~7
 5794 000e 0368     		ldr	r3, [r0]	@ _1, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 5795              	@ main.c:2591: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|7<<3|SPI_CR1_MSTR|SPI_CR1_CPOL|SPI_CR1_CPHA;		
 5796 0010 6C4A     		ldr	r2, .L437+8	@ tmp196,
 5797              	@ main.c:2587: 		GPIOA->CRL = (GPIOA->CRL&0x0000ffff)|0xB4B30000;	// PA4~7
 5798 0012 9BB2     		uxth	r3, r3	@ tmp190, _1
 5799 0014 43F03443 		orr	r3, r3, #-1275068416	@ _4, tmp190,
 5800 0018 43F43303 		orr	r3, r3, #11730944	@ _4, _4,
 5801 001c 0360     		str	r3, [r0]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 5802              	@ main.c:2588: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 5803 001e 8B69     		ldr	r3, [r1, #24]	@ _6, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 5804              	@ main.c:2597: 		trg0 = SysTick->VAL;		trg1 = SysTick->VAL;		trg2 = SysTick->VAL;
 5805 0020 694C     		ldr	r4, .L437+12	@ tmp204,
 5806              	@ main.c:2588: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 5807 0022 43F48053 		orr	r3, r3, #4096	@ _8, _6,
 5808 0026 8B61     		str	r3, [r1, #24]	@ _8, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 5809              	@ main.c:2591: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|7<<3|SPI_CR1_MSTR|SPI_CR1_CPOL|SPI_CR1_CPHA;		
 5810 0028 1680     		strh	r6, [r2]	@ movhi	@ tmp198, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 5811              	@ main.c:2595: 		SPI1->CR1 |= SPI_CR1_SPE;		
 5812 002a 1388     		ldrh	r3, [r2]	@, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 5813              	@ main.c:2597: 		trg0 = SysTick->VAL;		trg1 = SysTick->VAL;		trg2 = SysTick->VAL;
 5814 002c 6749     		ldr	r1, .L437+16	@ tmp205,
ARM GAS  /tmp/cczkEFU1.s 			page 103


 5815              	@ main.c:2595: 		SPI1->CR1 |= SPI_CR1_SPE;		
 5816 002e 43F04003 		orr	r3, r3, #64	@ _11, MEM[(struct SPI_TypeDef *)1073819648B].CR1,
 5817 0032 1380     		strh	r3, [r2]	@ movhi	@ _11, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 5818              	@ main.c:2597: 		trg0 = SysTick->VAL;		trg1 = SysTick->VAL;		trg2 = SysTick->VAL;
 5819 0034 A268     		ldr	r2, [r4, #8]	@ _12, MEM[(struct SysTick_Type *)3758153744B].VAL
 5820 0036 664B     		ldr	r3, .L437+20	@ tmp207,
 5821 0038 0A60     		str	r2, [r1]	@ _12, trg0
 5822 003a A268     		ldr	r2, [r4, #8]	@ _13, MEM[(struct SysTick_Type *)3758153744B].VAL
 5823 003c DFF8B091 		ldr	r9, .L437+52	@ tmp285,
 5824 0040 1A60     		str	r2, [r3]	@ _13, trg1
 5825 0042 A268     		ldr	r2, [r4, #8]	@ _14, MEM[(struct SysTick_Type *)3758153744B].VAL
 5826              	@ main.c:2607: 		RX1276_CS1 = 0;
 5827 0044 634B     		ldr	r3, .L437+24	@ tmp210,
 5828              	@ main.c:2597: 		trg0 = SysTick->VAL;		trg1 = SysTick->VAL;		trg2 = SysTick->VAL;
 5829 0046 C9F80020 		str	r2, [r9]	@ _14, trg2
 5830              	@ main.c:2607: 		RX1276_CS1 = 0;
 5831 004a 1D60     		str	r5, [r3]	@ tmp211, MEM[(volatile long unsigned int *)1109459344B]
 5832              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 5833 004c 2546     		mov	r5, r4	@ tmp215, tmp204
 5834              	@ main.c:2578: void BMP280_spi(void){
 5835 004e 85B0     		sub	sp, sp, #20	@,,
 5836              	@ main.c:2609: 		spi1_rw(0xE0 & 0x7f);   // reset write
 5837 0050 6020     		movs	r0, #96	@,
 5838 0052 FFF7FEFF 		bl	spi1_rw	@
 5839              	@ main.c:2610: 		spi1_rw(0xB6); 			    // reset value
 5840 0056 B620     		movs	r0, #182	@,
 5841 0058 FFF7FEFF 		bl	spi1_rw	@
 5842              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 5843 005c A368     		ldr	r3, [r4, #8]	@ _123, MEM[(struct SysTick_Type *)3758153744B].VAL
 5844 005e 5E49     		ldr	r1, .L437+28	@ tmp286,
 5845              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 5846 0060 5E48     		ldr	r0, .L437+32	@ tmp217,
 5847              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 5848 0062 0B60     		str	r3, [r1]	@ _123, delay_us
 5849              	.L431:
 5850              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 5851 0064 0B68     		ldr	r3, [r1]	@ delay_us.70_124, delay_us
 5852 0066 AA68     		ldr	r2, [r5, #8]	@ _125, MEM[(struct SysTick_Type *)3758153744B].VAL
 5853 0068 9B1A     		subs	r3, r3, r2	@ tmp216, delay_us.70_124, _125
 5854 006a 8342     		cmp	r3, r0	@ tmp216, tmp217
 5855 006c FAD9     		bls	.L431	@,
 5856              	@ main.c:2614: 		spi1_rw(0xf4 & 0x7f); 	// Select Control register 
 5857 006e 7420     		movs	r0, #116	@,
 5858 0070 FFF7FEFF 		bl	spi1_rw	@
 5859              	@ main.c:2615: 		spi1_rw(0x27); 					// Write  Control register 
 5860 0074 2720     		movs	r0, #39	@,
 5861 0076 FFF7FEFF 		bl	spi1_rw	@
 5862              	@ main.c:2619: 		RX1276_CS1 = 1;
 5863 007a 564A     		ldr	r2, .L437+24	@ tmp218,
 5864 007c 0121     		movs	r1, #1	@ tmp219,
 5865              	@ main.c:2629: 				RX1276_CS1 = 0;
 5866 007e 9346     		mov	fp, r2	@ tmp226, tmp218
 5867              	@ main.c:2625: 			if( STCLK_MS*2000 < (trg2 - SysTick->VAL)){
 5868 0080 DFF844A1 		ldr	r10, .L437+12	@ tmp221,
 5869 0084 564B     		ldr	r3, .L437+36	@ tmp223,
 5870              	@ main.c:2619: 		RX1276_CS1 = 1;
 5871 0086 1160     		str	r1, [r2]	@ tmp219, MEM[(volatile long unsigned int *)1109459344B]
ARM GAS  /tmp/cczkEFU1.s 			page 104


 5872              	.L432:
 5873              	@ main.c:2625: 			if( STCLK_MS*2000 < (trg2 - SysTick->VAL)){
 5874 0088 D9F80020 		ldr	r2, [r9]	@ trg2.170_15, trg2
 5875 008c DAF80810 		ldr	r1, [r10, #8]	@ _16, MEM[(struct SysTick_Type *)3758153744B].VAL
 5876 0090 521A     		subs	r2, r2, r1	@ tmp222, trg2.170_15, _16
 5877 0092 9A42     		cmp	r2, r3	@ tmp222, tmp223
 5878 0094 F8D9     		bls	.L432	@,
 5879              	@ main.c:2629: 				RX1276_CS1 = 0;
 5880 0096 0022     		movs	r2, #0	@ tmp227,
 5881              	@ main.c:2626: 				trg2 = SysTick->VAL;
 5882 0098 DAF80810 		ldr	r1, [r10, #8]	@ _18, MEM[(struct SysTick_Type *)3758153744B].VAL
 5883 009c 0393     		str	r3, [sp, #12]	@ tmp223, %sfp
 5884 009e C9F80010 		str	r1, [r9]	@ _18, trg2
 5885              	@ main.c:2631: 				spi1_rw(0xF4 & 0x7f); 	// Select Control register 
 5886 00a2 7420     		movs	r0, #116	@,
 5887              	@ main.c:2629: 				RX1276_CS1 = 0;
 5888 00a4 CBF80020 		str	r2, [fp]	@ tmp227, MEM[(volatile long unsigned int *)1109459344B]
 5889              	@ main.c:2631: 				spi1_rw(0xF4 & 0x7f); 	// Select Control register 
 5890 00a8 FFF7FEFF 		bl	spi1_rw	@
 5891              	@ main.c:2632: 				spi1_rw(0x27); 					// Write  Control register 
 5892 00ac 2720     		movs	r0, #39	@,
 5893 00ae FFF7FEFF 		bl	spi1_rw	@
 5894              	@ main.c:2634: 				spi1_rw(0xF4);
 5895 00b2 F420     		movs	r0, #244	@,
 5896 00b4 FFF7FEFF 		bl	spi1_rw	@
 5897              	@ main.c:2635: 				ctrl_meas = spi1_rw(0xff);
 5898 00b8 FF20     		movs	r0, #255	@,
 5899 00ba FFF7FEFF 		bl	spi1_rw	@
 5900 00be 0190     		str	r0, [sp, #4]	@, %sfp
 5901              	@ main.c:2637: 				spi1_rw(0x88);
 5902 00c0 8820     		movs	r0, #136	@,
 5903 00c2 FFF7FEFF 		bl	spi1_rw	@
 5904              	@ main.c:2638: 				v0 = spi1_rw(0xff);
 5905 00c6 FF20     		movs	r0, #255	@,
 5906 00c8 FFF7FEFF 		bl	spi1_rw	@
 5907 00cc 0546     		mov	r5, r0	@ tmp229,
 5908              	@ main.c:2639: 				v1 = spi1_rw(0xff);
 5909 00ce FF20     		movs	r0, #255	@,
 5910 00d0 FFF7FEFF 		bl	spi1_rw	@
 5911              	@ main.c:2640: 				dig_T1 = (u16)(((u16)(v1<<8)) | v0);
 5912 00d4 EDB2     		uxtb	r5, r5	@ _20, tmp229
 5913 00d6 45EA0025 		orr	r5, r5, r0, lsl #8	@ tmp235, _20,,
 5914              	@ main.c:2642: 				spi1_rw(0x8A);
 5915 00da 8A20     		movs	r0, #138	@,
 5916 00dc FFF7FEFF 		bl	spi1_rw	@
 5917              	@ main.c:2643: 				v0 = spi1_rw(0xff);
 5918 00e0 FF20     		movs	r0, #255	@,
 5919 00e2 FFF7FEFF 		bl	spi1_rw	@
 5920 00e6 0646     		mov	r6, r0	@ tmp236,
 5921              	@ main.c:2644: 				v1 = spi1_rw(0xff);
 5922 00e8 FF20     		movs	r0, #255	@,
 5923 00ea FFF7FEFF 		bl	spi1_rw	@
 5924              	@ main.c:2645: 				dig_T2 = (s16)((v1<<8) | v0);
 5925 00ee F6B2     		uxtb	r6, r6	@ _24, tmp236
 5926 00f0 C0B2     		uxtb	r0, r0	@ _25,
 5927 00f2 46EA0026 		orr	r6, r6, r0, lsl #8	@ tmp243, _24, _25,
 5928              	@ main.c:2647: 				spi1_rw(0x8C);
ARM GAS  /tmp/cczkEFU1.s 			page 105


 5929 00f6 8C20     		movs	r0, #140	@,
 5930 00f8 FFF7FEFF 		bl	spi1_rw	@
 5931              	@ main.c:2648: 				v0 = spi1_rw(0xff);
 5932 00fc FF20     		movs	r0, #255	@,
 5933 00fe FFF7FEFF 		bl	spi1_rw	@
 5934 0102 0446     		mov	r4, r0	@ tmp244,
 5935              	@ main.c:2649: 				v1 = spi1_rw(0xff);
 5936 0104 FF20     		movs	r0, #255	@,
 5937 0106 FFF7FEFF 		bl	spi1_rw	@
 5938              	@ main.c:2650: 				dig_T3 = (s16)((v1<<8) | v0);
 5939 010a E4B2     		uxtb	r4, r4	@ _30, tmp244
 5940 010c C0B2     		uxtb	r0, r0	@ _31,
 5941 010e 44EA0024 		orr	r4, r4, r0, lsl #8	@ tmp251, _30, _31,
 5942              	@ main.c:2652: 				spi1_rw(0xFA);
 5943 0112 FA20     		movs	r0, #250	@,
 5944 0114 FFF7FEFF 		bl	spi1_rw	@
 5945              	@ main.c:2653: 				value[0] = spi1_rw(0xff);
 5946 0118 FF20     		movs	r0, #255	@,
 5947 011a FFF7FEFF 		bl	spi1_rw	@
 5948 011e 0746     		mov	r7, r0	@ tmp252,
 5949              	@ main.c:2654: 				value[1] = spi1_rw(0xff);
 5950 0120 FF20     		movs	r0, #255	@,
 5951 0122 FFF7FEFF 		bl	spi1_rw	@
 5952 0126 0290     		str	r0, [sp, #8]	@ tmp253, %sfp
 5953              	@ main.c:2655: 				value[2] = spi1_rw(0xff);
 5954 0128 FF20     		movs	r0, #255	@,
 5955 012a FFF7FEFF 		bl	spi1_rw	@
 5956              	@ main.c:2661: 				RX1276_CS1 = 1;
 5957 012e 0121     		movs	r1, #1	@ tmp256,
 5958              	@ main.c:2655: 				value[2] = spi1_rw(0xff);
 5959 0130 8046     		mov	r8, r0	@ tmp254,
 5960              	@ main.c:2661: 				RX1276_CS1 = 1;
 5961 0132 CBF80010 		str	r1, [fp]	@ tmp256, MEM[(volatile long unsigned int *)1109459344B]
 5962              	@ main.c:2663: 				UaPutK("\r\n BMP280T1 = 0x");	
 5963 0136 2B48     		ldr	r0, .L437+40	@,
 5964 0138 FFF7FEFF 		bl	UaPutK	@
 5965              	@ main.c:2640: 				dig_T1 = (u16)(((u16)(v1<<8)) | v0);
 5966 013c ADB2     		uxth	r5, r5	@ dig_T1, tmp235
 5967              	@ main.c:2664: 				hex2uart(ctrl_meas,2);
 5968 013e 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2	@, %sfp
 5969 0142 0221     		movs	r1, #2	@,
 5970 0144 FFF7FEFF 		bl	hex2uart	@
 5971              	@ main.c:2645: 				dig_T2 = (s16)((v1<<8) | v0);
 5972 0148 36B2     		sxth	r6, r6	@ dig_T2, tmp243
 5973              	@ main.c:2666: 				hex2uart(dig_T1,4);
 5974 014a 2846     		mov	r0, r5	@, dig_T1
 5975 014c 0421     		movs	r1, #4	@,
 5976 014e FFF7FEFF 		bl	hex2uart	@
 5977              	@ main.c:2650: 				dig_T3 = (s16)((v1<<8) | v0);
 5978 0152 24B2     		sxth	r4, r4	@ dig_T3, tmp251
 5979              	@ main.c:2667: 				hex2uart(dig_T2,4);
 5980 0154 3046     		mov	r0, r6	@, dig_T2
 5981 0156 0421     		movs	r1, #4	@,
 5982 0158 FFF7FEFF 		bl	hex2uart	@
 5983              	@ main.c:2668: 				hex2uart(dig_T3,4);
 5984 015c 0421     		movs	r1, #4	@,
 5985 015e 2046     		mov	r0, r4	@, dig_T3
ARM GAS  /tmp/cczkEFU1.s 			page 106


 5986 0160 FFF7FEFF 		bl	hex2uart	@
 5987              	@ main.c:2675: 				adc = ( (u32)((u16)((value[0]) << 8) | value[1] ) << 4) | ( (value[2]) >> 4);
 5988 0164 029A     		ldr	r2, [sp, #8]	@ tmp253, %sfp
 5989 0166 3F02     		lsls	r7, r7, #8	@ tmp259, tmp252,
 5990 0168 BFB2     		uxth	r7, r7	@ tmp260, tmp259
 5991 016a D2B2     		uxtb	r2, r2	@ _37, tmp253
 5992 016c 3A43     		orrs	r2, r2, r7	@, tmp262, _37, tmp260
 5993 016e C8F30317 		ubfx	r7, r8, #4, #4	@ tmp266, tmp254,,
 5994 0172 47EA0217 		orr	r7, r7, r2, lsl #4	@ adc, tmp266, tmp262,
 5995              	@ main.c:2686: 				UaPutK(" T=");	
 5996 0176 1C48     		ldr	r0, .L437+44	@,
 5997 0178 FFF7FEFF 		bl	UaPutK	@
 5998              	@ main.c:2687: 				sint2uart(adc);
 5999 017c 3846     		mov	r0, r7	@, adc
 6000 017e FFF7FEFF 		bl	sint2uart	@
 6001              	@ main.c:2679:         var2 = (((((adc>>4) - ((s32)dig_T1)) * ((adc>>4) - ((s32)dig_T1))) >> 12)
 6002 0182 C5EB1718 		rsb	r8, r5, r7, lsr #4	@ _61, dig_T1, adc,
 6003              	@ main.c:2688: 				UaPutK(" ");	
 6004 0186 1948     		ldr	r0, .L437+48	@,
 6005 0188 FFF7FEFF 		bl	UaPutK	@
 6006              	@ main.c:2679:         var2 = (((((adc>>4) - ((s32)dig_T1)) * ((adc>>4) - ((s32)dig_T1))) >> 12)
 6007 018c 08FB08F0 		mul	r0, r8, r8	@ tmp275, _61, _61
 6008              	@ main.c:2678: 				var1 = ((((adc>>3) - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 6009 0190 6D00     		lsls	r5, r5, #1	@ tmp271, dig_T1,
 6010              	@ main.c:2679:         var2 = (((((adc>>4) - ((s32)dig_T1)) * ((adc>>4) - ((s32)dig_T1))) >> 12)
 6011 0192 000B     		lsrs	r0, r0, #12	@ tmp276, tmp275,
 6012              	@ main.c:2678: 				var1 = ((((adc>>3) - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 6013 0194 C5EBD705 		rsb	r5, r5, r7, lsr #3	@ tmp272, tmp271, adc,
 6014              	@ main.c:2680: 				* ((s32)dig_T3))>>14;
 6015 0198 04FB00F0 		mul	r0, r4, r0	@ tmp277, dig_T3, tmp276
 6016              	@ main.c:2678: 				var1 = ((((adc>>3) - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 6017 019c 06FB05F5 		mul	r5, r6, r5	@ tmp273, dig_T2, tmp272
 6018              	@ main.c:2679:         var2 = (((((adc>>4) - ((s32)dig_T1)) * ((adc>>4) - ((s32)dig_T1))) >> 12)
 6019 01a0 800B     		lsrs	r0, r0, #14	@ var2, tmp277,
 6020              	@ main.c:2683:         tFine = var1 + var2;
 6021 01a2 00EBD520 		add	r0, r0, r5, lsr #11	@ tFine, var2, tmp273,
 6022              	@ main.c:2684: 				T     = (tFine * 5 + 128) >> 8;
 6023 01a6 00EB8000 		add	r0, r0, r0, lsl #2	@ tmp282, tFine, tFine,
 6024 01aa 8030     		adds	r0, r0, #128	@ tmp283, tmp282,
 6025              	@ main.c:2689: 				num2uart(T,5,3);
 6026 01ac 000A     		lsrs	r0, r0, #8	@, tmp283,
 6027 01ae 0322     		movs	r2, #3	@,
 6028 01b0 0521     		movs	r1, #5	@,
 6029 01b2 FFF7FEFF 		bl	num2uart	@
 6030 01b6 039B     		ldr	r3, [sp, #12]	@ tmp223, %sfp
 6031 01b8 66E7     		b	.L432	@
 6032              	.L438:
 6033 01ba 00BF     		.align	2
 6034              	.L437:
 6035 01bc 00080140 		.word	1073809408
 6036 01c0 00100240 		.word	1073876992
 6037 01c4 00300140 		.word	1073819648
 6038 01c8 10E000E0 		.word	-536813552
 6039 01cc 00000000 		.word	trg0
 6040 01d0 00000000 		.word	trg1
 6041 01d4 90012142 		.word	1109459344
 6042 01d8 00000000 		.word	delay_us
ARM GAS  /tmp/cczkEFU1.s 			page 107


 6043 01dc 8F5F0100 		.word	89999
 6044 01e0 80A81201 		.word	18000000
 6045 01e4 00000000 		.word	.LC74
 6046 01e8 24000000 		.word	.LC71
 6047 01ec 18010000 		.word	.LC35
 6048 01f0 00000000 		.word	trg2
 6049              		.size	BMP280_spi, .-BMP280_spi
 6050              		.section	.text.fun_tool,"ax",%progbits
 6051              		.align	1
 6052              		.p2align 2,,3
 6053              		.global	fun_tool
 6054              		.syntax unified
 6055              		.thumb
 6056              		.thumb_func
 6057              		.fpu softvfp
 6058              		.type	fun_tool, %function
 6059              	fun_tool:
 6060              		@ args = 0, pretend = 0, frame = 528
 6061              		@ frame_needed = 0, uses_anonymous_args = 0
 6062 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 6063              	@ main.c:2706: 	switch(znak){
 6064 0004 6338     		subs	r0, r0, #99	@ tmp279, znak,
 6065              	@ main.c:2697: void fun_tool(u08 znak,T_SD1 * sda){
 6066 0006 ADF5057D 		sub	sp, sp, #532	@,,
 6067              	@ main.c:2706: 	switch(znak){
 6068 000a 1428     		cmp	r0, #20	@ tmp279,
 6069 000c 00F28880 		bhi	.L440	@
 6070 0010 DFE810F0 		tbh	[pc, r0, lsl #1]	@ tmp279
 6071              	.L442:
 6072 0014 B200     		.2byte	(.L441-.L442)/2
 6073 0016 8600     		.2byte	(.L440-.L442)/2
 6074 0018 8600     		.2byte	(.L440-.L442)/2
 6075 001a 8600     		.2byte	(.L440-.L442)/2
 6076 001c 8600     		.2byte	(.L440-.L442)/2
 6077 001e 8600     		.2byte	(.L440-.L442)/2
 6078 0020 8600     		.2byte	(.L440-.L442)/2
 6079 0022 8600     		.2byte	(.L440-.L442)/2
 6080 0024 8600     		.2byte	(.L440-.L442)/2
 6081 0026 8600     		.2byte	(.L440-.L442)/2
 6082 0028 BF00     		.2byte	(.L443-.L442)/2
 6083 002a 8600     		.2byte	(.L440-.L442)/2
 6084 002c 1500     		.2byte	(.L444-.L442)/2
 6085 002e 8600     		.2byte	(.L440-.L442)/2
 6086 0030 8600     		.2byte	(.L440-.L442)/2
 6087 0032 FF00     		.2byte	(.L445-.L442)/2
 6088 0034 8600     		.2byte	(.L440-.L442)/2
 6089 0036 8600     		.2byte	(.L440-.L442)/2
 6090 0038 5401     		.2byte	(.L446-.L442)/2
 6091 003a 8600     		.2byte	(.L440-.L442)/2
 6092 003c 8D00     		.2byte	(.L447-.L442)/2
 6093              		.p2align 1
 6094              	.L444:
 6095              	@ main.c:2818: 		UaPutK("Read sector");
 6096 003e B648     		ldr	r0, .L479	@,
 6097 0040 FFF7FEFF 		bl	UaPutK	@
 6098              	@ main.c:2819: 		UaPutK("\r\n sectorNumber = ");
 6099 0044 B548     		ldr	r0, .L479+4	@,
ARM GAS  /tmp/cczkEFU1.s 			page 108


 6100 0046 FFF7FEFF 		bl	UaPutK	@
 6101              	@ main.c:2822: 		strBlock=UART_getNum();
 6102 004a FFF7FEFF 		bl	UART_getNum	@
 6103              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6104 004e B44C     		ldr	r4, .L479+8	@ tmp341,
 6105 0050 B44D     		ldr	r5, .L479+12	@ tmp342,
 6106 0052 A368     		ldr	r3, [r4, #8]	@ _169, MEM[(struct SysTick_Type *)3758153744B].VAL
 6107              	@ main.c:2825: 		sd_status=mci_read_sect (strBlock,buffer,1);
 6108 0054 0122     		movs	r2, #1	@,
 6109 0056 04A9     		add	r1, sp, #16	@ tmp393,,
 6110              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6111 0058 2B60     		str	r3, [r5]	@ _169, Timt
 6112              	@ main.c:2822: 		strBlock=UART_getNum();
 6113 005a 0746     		mov	r7, r0	@ strBlock,
 6114              	@ main.c:2825: 		sd_status=mci_read_sect (strBlock,buffer,1);
 6115 005c FFF7FEFF 		bl	mmc_read_sect	@
 6116              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 6117 0060 2A68     		ldr	r2, [r5]	@ Timt.82_166, Timt
 6118 0062 A368     		ldr	r3, [r4, #8]	@ _167, MEM[(struct SysTick_Type *)3758153744B].VAL
 6119 0064 D31A     		subs	r3, r2, r3	@ _168, Timt.82_166, _167
 6120 0066 0193     		str	r3, [sp, #4]	@ _168, %sfp
 6121 0068 0393     		str	r3, [sp, #12]	@ _168, MEM[(volatile u32 *)&tim]
 6122              	@ main.c:2828: 		if(sd_status){
 6123 006a 0028     		cmp	r0, #0	@
 6124 006c 00F04F81 		beq	.L458	@
 6125              	@ main.c:2829: 			UaPutS("\r\n ");
 6126 0070 AD48     		ldr	r0, .L479+16	@,
 6127 0072 FFF7FEFF 		bl	UaPutS	@
 6128              	@ main.c:2831: 			hex2uart(strBlock, 8);
 6129 0076 0821     		movs	r1, #8	@,
 6130 0078 3846     		mov	r0, r7	@, strBlock
 6131 007a FFF7FEFF 		bl	hex2uart	@
 6132 007e 0024     		movs	r4, #0	@ ivtmp.560,
 6133              	.L459:
 6134              	@ main.c:2833: 				hex2uart(k, 2);
 6135 0080 2046     		mov	r0, r4	@, ivtmp.560
 6136 0082 0221     		movs	r1, #2	@,
 6137 0084 0134     		adds	r4, r4, #1	@ ivtmp.560, ivtmp.560,
 6138 0086 FFF7FEFF 		bl	hex2uart	@
 6139              	@ main.c:2832: 			for(u08 k=0;k<16;k++){
 6140 008a 102C     		cmp	r4, #16	@ ivtmp.560,
 6141 008c F8D1     		bne	.L459	@,
 6142              	@ main.c:2836: 			UaPutS("\r\n\n ");
 6143 008e A748     		ldr	r0, .L479+20	@,
 6144 0090 FFF7FEFF 		bl	UaPutS	@
 6145              	@ main.c:2838: 				hex2uart(strBlock*512 + i, 8);
 6146 0094 04AE     		add	r6, sp, #16	@ tmp396,,
 6147              	@ main.c:2842: 				UaPutS("  ");
 6148 0096 DFF8DC92 		ldr	r9, .L479+92	@ tmp378,
 6149              	@ main.c:2847: 				UaPutS("\r\n ");
 6150 009a DFF88C82 		ldr	r8, .L479+16	@ tmp379,
 6151 009e 0DF5047A 		add	r10, sp, #528	@ _54,,
 6152 00a2 C6EB4727 		rsb	r7, r6, r7, lsl #9	@ tmp371, tmp397, strBlock,
 6153 00a6 08AD     		add	r5, sp, #32	@ ivtmp.558,,
 6154              	.L464:
 6155              	@ main.c:2838: 				hex2uart(strBlock*512 + i, 8);
 6156 00a8 0821     		movs	r1, #8	@,
ARM GAS  /tmp/cczkEFU1.s 			page 109


 6157 00aa B819     		adds	r0, r7, r6	@, tmp371, ivtmp.559
 6158 00ac FFF7FEFF 		bl	hex2uart	@
 6159 00b0 3446     		mov	r4, r6	@ ivtmp.550, ivtmp.559
 6160              	.L460:
 6161              	@ main.c:2840: 					hex2uart(buffer[k+i], 2);
 6162 00b2 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2	@, MEM[base: _181, offset: 0B]
 6163 00b6 0221     		movs	r1, #2	@,
 6164 00b8 FFF7FEFF 		bl	hex2uart	@
 6165              	@ main.c:2839: 				for(u08 k=0;k<16;k++){
 6166 00bc A542     		cmp	r5, r4	@ ivtmp.558, ivtmp.550
 6167 00be F8D1     		bne	.L460	@,
 6168              	@ main.c:2842: 				UaPutS("  ");
 6169 00c0 4846     		mov	r0, r9	@, tmp378
 6170 00c2 FFF7FEFF 		bl	UaPutS	@
 6171 00c6 B346     		mov	fp, r6	@ ivtmp.541, ivtmp.559
 6172              	.L463:
 6173              	@ main.c:2844: 					if ( buffer[k+i]<0x20 || buffer[k+i]>127 ) UaPutC('.');
 6174 00c8 1BF8010B 		ldrb	r0, [fp], #1	@ zero_extendqisi2	@ _39, MEM[base: _195, offset: 0B]
 6175 00cc A0F12002 		sub	r2, r0, #32	@ tmp355, _39,
 6176 00d0 5F2A     		cmp	r2, #95	@ tmp355,
 6177 00d2 88BF     		it	hi
 6178 00d4 2E20     		movhi	r0, #46	@,
 6179              	@ main.c:2845: 					else UaPutC(buffer[k+i]);
 6180 00d6 FFF7FEFF 		bl	UaPutC	@
 6181              	@ main.c:2843: 				for(u08 k=0;k<16;k++){
 6182 00da 5C45     		cmp	r4, fp	@ ivtmp.550, ivtmp.541
 6183 00dc F4D1     		bne	.L463	@,
 6184 00de 1036     		adds	r6, r6, #16	@ ivtmp.559, ivtmp.559,
 6185              	@ main.c:2847: 				UaPutS("\r\n ");
 6186 00e0 4046     		mov	r0, r8	@, tmp379
 6187 00e2 FFF7FEFF 		bl	UaPutS	@
 6188              	@ main.c:2837: 			for(u32 i=0;i<512;i+=16){
 6189 00e6 B245     		cmp	r10, r6	@ _54, ivtmp.559
 6190 00e8 05F11005 		add	r5, r5, #16	@ ivtmp.558, ivtmp.558,
 6191 00ec DCD1     		bne	.L464	@,
 6192              	@ main.c:2849: 			UaPutK(" t_rsdio = ");	uint2uart(tim/TIM_US);
 6193 00ee 9048     		ldr	r0, .L479+24	@,
 6194 00f0 FFF7FEFF 		bl	UaPutK	@
 6195 00f4 019B     		ldr	r3, [sp, #4]	@ _168, %sfp
 6196 00f6 8F48     		ldr	r0, .L479+28	@ tmp360,
 6197 00f8 A0FB0330 		umull	r3, r0, r0, r3	@ tmp390, tmp359, tmp360, _168
 6198 00fc 4008     		lsrs	r0, r0, #1	@, tmp359,
 6199 00fe FFF7FEFF 		bl	uint2uart	@
 6200              	@ main.c:2851: 			crc16_spi2( (u16*) buffer,256, &crc16 );
 6201 0102 4FF48071 		mov	r1, #256	@,
 6202 0106 04A8     		add	r0, sp, #16	@ tmp400,,
 6203 0108 0DF10A02 		add	r2, sp, #10	@ tmp401,,
 6204              	.L477:
 6205 010c FFF7FEFF 		bl	crc16_spi2	@
 6206              	@ main.c:2853: 			UaPutK(" crc = ");	hex2uart(crc16,4);
 6207 0110 8948     		ldr	r0, .L479+32	@,
 6208 0112 FFF7FEFF 		bl	UaPutK	@
 6209 0116 BDF80A00 		ldrh	r0, [sp, #10]	@, crc16
 6210 011a 0421     		movs	r1, #4	@,
 6211 011c FFF7FEFF 		bl	hex2uart	@
 6212              	.L440:
 6213              	@ main.c:2862: 	UaPutS("\r\n ");
ARM GAS  /tmp/cczkEFU1.s 			page 110


 6214 0120 8148     		ldr	r0, .L479+16	@,
 6215 0122 FFF7FEFF 		bl	UaPutS	@
 6216              	@ main.c:2863: }
 6217 0126 0DF5057D 		add	sp, sp, #532	@,,
 6218              		@ sp needed	@
 6219 012a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 6220              	.L447:
 6221              	@ main.c:2757: 		UaPutK("\r\n Flash memory Page = ");
 6222 012e 8348     		ldr	r0, .L479+36	@,
 6223 0130 FFF7FEFF 		bl	UaPutK	@
 6224              	@ main.c:2758: 		strBlock = UART_getNum();
 6225 0134 FFF7FEFF 		bl	UART_getNum	@
 6226              	@ main.c:2759: 		strBlock = strBlock > 254 ? 254 : strBlock;
 6227 0138 FE28     		cmp	r0, #254	@,
 6228 013a 28BF     		it	cs
 6229 013c FE20     		movcs	r0, #254	@ strBlock,
 6230              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6231 013e 784D     		ldr	r5, .L479+8	@ tmp297,
 6232 0140 784C     		ldr	r4, .L479+12	@ tmp298,
 6233 0142 AB68     		ldr	r3, [r5, #8]	@ _161, MEM[(struct SysTick_Type *)3758153744B].VAL
 6234              	@ main.c:2760: 		strBlock = (u32)(0x800*strBlock + 0x08000000);
 6235 0144 00F58030 		add	r0, r0, #65536	@ _17, strBlock,
 6236              	@ main.c:2763: 		EraseFlashPage(strBlock);
 6237 0148 C002     		lsls	r0, r0, #11	@, _17,
 6238              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6239 014a 2360     		str	r3, [r4]	@ _161, Timt
 6240              	@ main.c:2763: 		EraseFlashPage(strBlock);
 6241 014c FFF7FEFF 		bl	EraseFlashPage	@
 6242              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 6243 0150 2468     		ldr	r4, [r4]	@ Timt.82_158, Timt
 6244 0152 AB68     		ldr	r3, [r5, #8]	@ _159, MEM[(struct SysTick_Type *)3758153744B].VAL
 6245              	@ main.c:2765: 		UaPutS("\r\n Kasowanie pamieci FLASH = "); sint2uart(tim/TIM_US);
 6246 0154 7A48     		ldr	r0, .L479+40	@,
 6247              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 6248 0156 E41A     		subs	r4, r4, r3	@ _160, Timt.82_158, _159
 6249 0158 0394     		str	r4, [sp, #12]	@ _160, MEM[(volatile u32 *)&tim]
 6250              	@ main.c:2765: 		UaPutS("\r\n Kasowanie pamieci FLASH = "); sint2uart(tim/TIM_US);
 6251 015a FFF7FEFF 		bl	UaPutS	@
 6252 015e 7548     		ldr	r0, .L479+28	@ tmp307,
 6253 0160 A0FB0430 		umull	r3, r0, r0, r4	@ tmp388, tmp306, tmp307, _160
 6254 0164 4008     		lsrs	r0, r0, #1	@, tmp306,
 6255 0166 FFF7FEFF 		bl	sint2uart	@
 6256              	@ main.c:2862: 	UaPutS("\r\n ");
 6257 016a 6F48     		ldr	r0, .L479+16	@,
 6258 016c FFF7FEFF 		bl	UaPutS	@
 6259              	@ main.c:2863: }
 6260 0170 0DF5057D 		add	sp, sp, #532	@,,
 6261              		@ sp needed	@
 6262 0174 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 6263              	.L441:
 6264              	@ main.c:2812: 		TFT_Clear(BLACK);
 6265 0178 0020     		movs	r0, #0	@,
 6266 017a FFF7FEFF 		bl	TFT_Clear	@
 6267              	@ main.c:2814: 		UaPutS("\r\n Clear !");
 6268 017e 7148     		ldr	r0, .L479+44	@,
 6269 0180 FFF7FEFF 		bl	UaPutS	@
 6270              	@ main.c:2862: 	UaPutS("\r\n ");
ARM GAS  /tmp/cczkEFU1.s 			page 111


 6271 0184 6848     		ldr	r0, .L479+16	@,
 6272 0186 FFF7FEFF 		bl	UaPutS	@
 6273              	@ main.c:2863: }
 6274 018a 0DF5057D 		add	sp, sp, #532	@,,
 6275              		@ sp needed	@
 6276 018e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 6277              	.L443:
 6278              	@ main.c:2798: 		UaPutS("\r\n Read Start !");
 6279 0192 6D48     		ldr	r0, .L479+48	@,
 6280 0194 FFF7FEFF 		bl	UaPutS	@
 6281 0198 0025     		movs	r5, #0	@ ivtmp.531,
 6282 019a DFF88891 		ldr	r9, .L479+12	@ tmp370,
 6283              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6284 019e 604E     		ldr	r6, .L479+8	@ tmp325,
 6285              	@ main.c:2803: 			tim = tim/TIM_US;
 6286 01a0 644F     		ldr	r7, .L479+28	@ tmp332,
 6287              	@ main.c:2806: 			if(tim>1000 || tim<700){ UaPutK("\r\n"); int2uart(n,7,0); int2uart(tim,6,3); }
 6288 01a2 DFF8D481 		ldr	r8, .L479+96	@ tmp374,
 6289 01a6 05E0     		b	.L465	@
 6290              	.L454:
 6291 01a8 BAF5967F 		cmp	r10, #300	@ _56,
 6292 01ac 18D8     		bhi	.L457	@,
 6293              	@ main.c:2799: 		for(u32 n=0;n<125;n++){
 6294 01ae 7C2D     		cmp	r5, #124	@ ivtmp.531,
 6295 01b0 25D0     		beq	.L478	@,
 6296              	.L455:
 6297 01b2 0135     		adds	r5, r5, #1	@ ivtmp.531, ivtmp.531,
 6298              	.L465:
 6299              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6300 01b4 B368     		ldr	r3, [r6, #8]	@ _165, MEM[(struct SysTick_Type *)3758153744B].VAL
 6301 01b6 C9F80030 		str	r3, [r9]	@ _165, Timt
 6302              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 6303 01ba D9F80030 		ldr	r3, [r9]	@ Timt.82_162, Timt
 6304 01be B268     		ldr	r2, [r6, #8]	@ _163, MEM[(struct SysTick_Type *)3758153744B].VAL
 6305 01c0 9B1A     		subs	r3, r3, r2	@ _164, Timt.82_162, _163
 6306              	@ main.c:2803: 			tim = tim/TIM_US;
 6307 01c2 A7FB0324 		umull	r2, r4, r7, r3	@ tmp389, tmp331, tmp332, _164
 6308 01c6 6408     		lsrs	r4, r4, #1	@ _24, tmp331,
 6309              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 6310 01c8 0393     		str	r3, [sp, #12]	@ _164, MEM[(volatile u32 *)&tim]
 6311 01ca A4F52F7A 		sub	r10, r4, #700	@ _56, _24,
 6312              	@ main.c:2803: 			tim = tim/TIM_US;
 6313 01ce 0394     		str	r4, [sp, #12]	@ _24, tim
 6314              	@ main.c:2805: 			if(n%1000==0) UaPutK(".");
 6315 01d0 002D     		cmp	r5, #0	@ ivtmp.531
 6316 01d2 E9D1     		bne	.L454	@
 6317              	@ main.c:2805: 			if(n%1000==0) UaPutK(".");
 6318 01d4 5D48     		ldr	r0, .L479+52	@,
 6319 01d6 FFF7FEFF 		bl	UaPutK	@
 6320              	@ main.c:2806: 			if(tim>1000 || tim<700){ UaPutK("\r\n"); int2uart(n,7,0); int2uart(tim,6,3); }
 6321 01da BAF5967F 		cmp	r10, #300	@ _56,
 6322 01de E8D9     		bls	.L455	@,
 6323              	.L457:
 6324              	@ main.c:2806: 			if(tim>1000 || tim<700){ UaPutK("\r\n"); int2uart(n,7,0); int2uart(tim,6,3); }
 6325 01e0 4046     		mov	r0, r8	@, tmp374
 6326 01e2 FFF7FEFF 		bl	UaPutK	@
 6327 01e6 0022     		movs	r2, #0	@,
ARM GAS  /tmp/cczkEFU1.s 			page 112


 6328 01e8 0721     		movs	r1, #7	@,
 6329 01ea 2846     		mov	r0, r5	@, ivtmp.531
 6330 01ec FFF7FEFF 		bl	int2uart	@
 6331 01f0 2046     		mov	r0, r4	@, _24
 6332 01f2 0322     		movs	r2, #3	@,
 6333 01f4 0621     		movs	r1, #6	@,
 6334 01f6 FFF7FEFF 		bl	int2uart	@
 6335              	@ main.c:2799: 		for(u32 n=0;n<125;n++){
 6336 01fa 7C2D     		cmp	r5, #124	@ ivtmp.531,
 6337 01fc D9D1     		bne	.L455	@,
 6338              	.L478:
 6339              	@ main.c:2808: 		UaPutS("\r\n Read Done !");
 6340 01fe 5448     		ldr	r0, .L479+56	@,
 6341 0200 FFF7FEFF 		bl	UaPutS	@
 6342              	@ main.c:2862: 	UaPutS("\r\n ");
 6343 0204 4848     		ldr	r0, .L479+16	@,
 6344 0206 FFF7FEFF 		bl	UaPutS	@
 6345              	@ main.c:2863: }
 6346 020a 0DF5057D 		add	sp, sp, #532	@,,
 6347              		@ sp needed	@
 6348 020e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 6349              	.L445:
 6350              	@ main.c:2709: 		UaPutK("\r\n FLASH memory Read = ");
 6351 0212 5048     		ldr	r0, .L479+60	@,
 6352 0214 FFF7FEFF 		bl	UaPutK	@
 6353              	@ main.c:2710: 		UaPutK("\r\n FLASH memory Read = ");
 6354 0218 4E48     		ldr	r0, .L479+60	@,
 6355 021a FFF7FEFF 		bl	UaPutK	@
 6356              	@ main.c:2712: 		strBlock = UART_getNum();
 6357 021e FFF7FEFF 		bl	UART_getNum	@
 6358              	@ main.c:2715: 		strBlock = strBlock > 254 ? 254 : strBlock;
 6359 0222 FE28     		cmp	r0, #254	@ tmp391,
 6360 0224 28BF     		it	cs
 6361 0226 FE20     		movcs	r0, #254	@ tmp391,
 6362 0228 0446     		mov	r4, r0	@ strBlock, tmp391
 6363              	@ main.c:2716: 		UaPutK("\r\n Flash memory Page ="); sint2uart(strBlock);
 6364 022a 4B48     		ldr	r0, .L479+64	@,
 6365 022c FFF7FEFF 		bl	UaPutK	@
 6366 0230 2046     		mov	r0, r4	@, strBlock
 6367              	@ main.c:2717: 		strBlock = 0x800*strBlock + 0x08000000;
 6368 0232 04F58034 		add	r4, r4, #65536	@ _2, strBlock,
 6369              	@ main.c:2716: 		UaPutK("\r\n Flash memory Page ="); sint2uart(strBlock);
 6370 0236 FFF7FEFF 		bl	sint2uart	@
 6371              	@ main.c:2717: 		strBlock = 0x800*strBlock + 0x08000000;
 6372 023a E402     		lsls	r4, r4, #11	@ ivtmp.586, _2,
 6373              	@ main.c:2725: 			UaPutS("\r\n ");
 6374 023c 3A48     		ldr	r0, .L479+16	@,
 6375 023e FFF7FEFF 		bl	UaPutS	@
 6376              	@ main.c:2727: 			hex2uart(strBlock, 8);
 6377 0242 2046     		mov	r0, r4	@, ivtmp.586
 6378 0244 0821     		movs	r1, #8	@,
 6379 0246 FFF7FEFF 		bl	hex2uart	@
 6380              	@ main.c:2722: 		p_buf = (u08 *) strBlock;
 6381 024a A346     		mov	fp, r4	@ p_buf, ivtmp.586
 6382              	@ main.c:2727: 			hex2uart(strBlock, 8);
 6383 024c 0025     		movs	r5, #0	@ ivtmp.588,
 6384              	.L448:
ARM GAS  /tmp/cczkEFU1.s 			page 113


 6385              	@ main.c:2729: 				hex2uart(k, 2);
 6386 024e 2846     		mov	r0, r5	@, ivtmp.588
 6387 0250 0221     		movs	r1, #2	@,
 6388 0252 0135     		adds	r5, r5, #1	@ ivtmp.588, ivtmp.588,
 6389 0254 FFF7FEFF 		bl	hex2uart	@
 6390              	@ main.c:2728: 			for(u08 k=0;k<16;k++){
 6391 0258 102D     		cmp	r5, #16	@ ivtmp.588,
 6392 025a F8D1     		bne	.L448	@,
 6393              	@ main.c:2732: 			UaPutS("\r\n\n ");
 6394 025c 3348     		ldr	r0, .L479+20	@,
 6395 025e 04F12007 		add	r7, r4, #32	@ ivtmp.586, ivtmp.586,
 6396 0262 FFF7FEFF 		bl	UaPutS	@
 6397 0266 3E46     		mov	r6, r7	@ ivtmp.587, ivtmp.586
 6398              	@ main.c:2739: 				UaPutS("  ");
 6399 0268 DFF808A1 		ldr	r10, .L479+92	@ tmp384,
 6400              	@ main.c:2744: 				UaPutS("\r\n ");
 6401 026c DFF8B890 		ldr	r9, .L479+16	@ tmp385,
 6402 0270 04F50068 		add	r8, r4, #2048	@ _241, ivtmp.586,
 6403              	.L453:
 6404              	@ main.c:2735: 				hex2uart(strBlock + i, 8);	// memory
 6405 0274 0821     		movs	r1, #8	@,
 6406 0276 2046     		mov	r0, r4	@, ivtmp.586
 6407 0278 FFF7FEFF 		bl	hex2uart	@
 6408 027c 2546     		mov	r5, r4	@ ivtmp.579, ivtmp.586
 6409              	.L449:
 6410              	@ main.c:2737: 					hex2uart(p_buf[k+i], 2);
 6411 027e 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2	@, *_7
 6412 0282 0221     		movs	r1, #2	@,
 6413 0284 FFF7FEFF 		bl	hex2uart	@
 6414              	@ main.c:2736: 				for(u08 k=0;k<32;k++){
 6415 0288 B542     		cmp	r5, r6	@ ivtmp.579, ivtmp.587
 6416 028a F8D1     		bne	.L449	@,
 6417              	@ main.c:2739: 				UaPutS("  ");
 6418 028c 5046     		mov	r0, r10	@, tmp384
 6419 028e FFF7FEFF 		bl	UaPutS	@
 6420              	.L452:
 6421              	@ main.c:2741: 					if ( p_buf[k+i]<0x20 || p_buf[k+i]>127 ) UaPutC('.');
 6422 0292 2078     		ldrb	r0, [r4]	@ zero_extendqisi2	@ _13, *_12
 6423 0294 0134     		adds	r4, r4, #1	@ ivtmp.572, ivtmp.572,
 6424 0296 A0F12003 		sub	r3, r0, #32	@ tmp288, _13,
 6425 029a 5F2B     		cmp	r3, #95	@ tmp288,
 6426 029c 88BF     		it	hi
 6427 029e 2E20     		movhi	r0, #46	@,
 6428              	@ main.c:2742: 					else UaPutC(p_buf[k+i]);
 6429 02a0 FFF7FEFF 		bl	UaPutC	@
 6430              	@ main.c:2740: 				for(u08 k=0;k<32;k++){
 6431 02a4 AC42     		cmp	r4, r5	@ ivtmp.572, ivtmp.579
 6432 02a6 F4D1     		bne	.L452	@,
 6433              	@ main.c:2744: 				UaPutS("\r\n ");
 6434 02a8 4846     		mov	r0, r9	@, tmp385
 6435 02aa FFF7FEFF 		bl	UaPutS	@
 6436              	@ main.c:2733: 			for(u32 i=0;i<2048;i+=32){
 6437 02ae 4745     		cmp	r7, r8	@ ivtmp.586, _241
 6438 02b0 06F12006 		add	r6, r6, #32	@ ivtmp.587, ivtmp.587,
 6439 02b4 3C46     		mov	r4, r7	@ ivtmp.586, ivtmp.586
 6440 02b6 24D0     		beq	.L474	@,
 6441 02b8 2037     		adds	r7, r7, #32	@ ivtmp.586, ivtmp.586,
ARM GAS  /tmp/cczkEFU1.s 			page 114


 6442 02ba DBE7     		b	.L453	@
 6443              	.L446:
 6444              	@ main.c:2776: 		UaPutK("\r\n Godzina = ");
 6445 02bc 2748     		ldr	r0, .L479+68	@,
 6446 02be FFF7FEFF 		bl	UaPutK	@
 6447              	@ main.c:2777: 		datetime.hor = UART_getNum();
 6448 02c2 FFF7FEFF 		bl	UART_getNum	@
 6449 02c6 264C     		ldr	r4, .L479+72	@ tmp309,
 6450 02c8 A070     		strb	r0, [r4, #2]	@, datetime.hor
 6451              	@ main.c:2778: 		UaPutK("\r\n Minut   = ");
 6452 02ca 2648     		ldr	r0, .L479+76	@,
 6453 02cc FFF7FEFF 		bl	UaPutK	@
 6454              	@ main.c:2779: 		datetime.min = UART_getNum();
 6455 02d0 FFF7FEFF 		bl	UART_getNum	@
 6456 02d4 6070     		strb	r0, [r4, #1]	@, datetime.min
 6457              	@ main.c:2780: 		UaPutK("\r\n Sekunda = ");
 6458 02d6 2448     		ldr	r0, .L479+80	@,
 6459 02d8 FFF7FEFF 		bl	UaPutK	@
 6460              	@ main.c:2781: 		datetime.sec = UART_getNum();
 6461 02dc FFF7FEFF 		bl	UART_getNum	@
 6462              	@ main.c:2785: 		datetime.mdy=18;		// 1..31	dzien miesiaca
 6463 02e0 0B23     		movs	r3, #11	@ tmp321,
 6464              	@ main.c:2783: 		datetime.yer=2016;	// 1970..2106
 6465 02e2 4FF4FC61 		mov	r1, #2016	@ tmp317,
 6466              	@ main.c:2788: 		datetime.sec=30;		// 0..59	sekunda
 6467 02e6 214A     		ldr	r2, .L479+84	@ tmp319,
 6468              	@ main.c:2789: 		rtc_SetTime(&datetime );
 6469 02e8 2046     		mov	r0, r4	@, tmp309
 6470              	@ main.c:2788: 		datetime.sec=30;		// 0..59	sekunda
 6471 02ea 2260     		str	r2, [r4]	@ tmp319, MEM[(unsigned char *)&datetime]
 6472              	@ main.c:2785: 		datetime.mdy=18;		// 1..31	dzien miesiaca
 6473 02ec 2371     		strb	r3, [r4, #4]	@ tmp321, MEM[(unsigned char *)&datetime + 4B]
 6474              	@ main.c:2783: 		datetime.yer=2016;	// 1970..2106
 6475 02ee E180     		strh	r1, [r4, #6]	@ movhi	@ tmp317, datetime.yer
 6476              	@ main.c:2789: 		rtc_SetTime(&datetime );
 6477 02f0 FFF7FEFF 		bl	rtc_SetTime	@
 6478              	@ main.c:2862: 	UaPutS("\r\n ");
 6479 02f4 0C48     		ldr	r0, .L479+16	@,
 6480 02f6 FFF7FEFF 		bl	UaPutS	@
 6481              	@ main.c:2863: }
 6482 02fa 0DF5057D 		add	sp, sp, #532	@,,
 6483              		@ sp needed	@
 6484 02fe BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 6485              	.L474:
 6486              	@ main.c:2749: 			crc16_spi2((u16*)p_buf,2048, &crc16 );
 6487 0302 5846     		mov	r0, fp	@, p_buf
 6488 0304 0DF10A02 		add	r2, sp, #10	@ tmp392,,
 6489 0308 4FF40061 		mov	r1, #2048	@,
 6490 030c FEE6     		b	.L477	@
 6491              	.L458:
 6492              	@ main.c:2856: 		} else UaPutK("\r\n Read Error !!!");
 6493 030e 1848     		ldr	r0, .L479+88	@,
 6494 0310 FFF7FEFF 		bl	UaPutK	@
 6495 0314 04E7     		b	.L440	@
 6496              	.L480:
 6497 0316 00BF     		.align	2
 6498              	.L479:
ARM GAS  /tmp/cczkEFU1.s 			page 115


 6499 0318 DC000000 		.word	.LC89
 6500 031c E8000000 		.word	.LC90
 6501 0320 10E000E0 		.word	-536813552
 6502 0324 00000000 		.word	Timt
 6503 0328 30000000 		.word	.LC77
 6504 032c 34000000 		.word	.LC78
 6505 0330 FC000000 		.word	.LC91
 6506 0334 398EE338 		.word	954437177
 6507 0338 40000000 		.word	.LC80
 6508 033c 48000000 		.word	.LC81
 6509 0340 60000000 		.word	.LC82
 6510 0344 D0000000 		.word	.LC88
 6511 0348 B0000000 		.word	.LC86
 6512 034c 00000000 		.word	.LC17
 6513 0350 C0000000 		.word	.LC87
 6514 0354 00000000 		.word	.LC75
 6515 0358 18000000 		.word	.LC76
 6516 035c 80000000 		.word	.LC83
 6517 0360 00000000 		.word	.LANCHOR29
 6518 0364 90000000 		.word	.LC84
 6519 0368 A0000000 		.word	.LC85
 6520 036c 1E320A12 		.word	302658078
 6521 0370 08010000 		.word	.LC92
 6522 0374 3C000000 		.word	.LC79
 6523 0378 04000000 		.word	.LC13
 6524              		.size	fun_tool, .-fun_tool
 6525              		.section	.text.qtouch_mesaure,"ax",%progbits
 6526              		.align	1
 6527              		.p2align 2,,3
 6528              		.global	qtouch_mesaure
 6529              		.syntax unified
 6530              		.thumb
 6531              		.thumb_func
 6532              		.fpu softvfp
 6533              		.type	qtouch_mesaure, %function
 6534              	qtouch_mesaure:
 6535              		@ args = 0, pretend = 0, frame = 0
 6536              		@ frame_needed = 0, uses_anonymous_args = 0
 6537              		@ link register save eliminated.
 6538              	@ main.c:3207: 		PE2_o = 0;
 6539 0000 0021     		movs	r1, #0	@ tmp118,
 6540 0002 0E4B     		ldr	r3, .L490	@ tmp117,
 6541              	@ main.c:3208: 		while(PE4_i == 1);
 6542 0004 0E4A     		ldr	r2, .L490+4	@ tmp119,
 6543              	@ main.c:3207: 		PE2_o = 0;
 6544 0006 1960     		str	r1, [r3]	@ tmp118, MEM[(volatile long unsigned int *)1109590408B]
 6545              	.L482:
 6546              	@ main.c:3208: 		while(PE4_i == 1);
 6547 0008 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109590288B]
 6548 000a 012B     		cmp	r3, #1	@ _1,
 6549 000c FCD0     		beq	.L482	@,
 6550              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 6551 000e 0D4B     		ldr	r3, .L490+8	@ tmp120,
 6552 0010 0D49     		ldr	r1, .L490+12	@ tmp131,
 6553              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 6554 0012 1846     		mov	r0, r3	@ tmp123, tmp120
 6555              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
ARM GAS  /tmp/cczkEFU1.s 			page 116


 6556 0014 9B68     		ldr	r3, [r3, #8]	@ _10, MEM[(struct SysTick_Type *)3758153744B].VAL
 6557 0016 0B60     		str	r3, [r1]	@ _10, delay_us
 6558              	.L483:
 6559              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 6560 0018 0B68     		ldr	r3, [r1]	@ delay_us.83_11, delay_us
 6561 001a 8268     		ldr	r2, [r0, #8]	@ _12, MEM[(struct SysTick_Type *)3758153744B].VAL
 6562 001c 9B1A     		subs	r3, r3, r2	@ tmp124, delay_us.83_11, _12
 6563 001e 112B     		cmp	r3, #17	@ tmp124,
 6564 0020 FAD9     		bls	.L483	@,
 6565              	@ main.c:3210: 		PE2_o = 1;
 6566 0022 0121     		movs	r1, #1	@ tmp126,
 6567              	@ main.c:3206: 		u32 i=0;
 6568 0024 0020     		movs	r0, #0	@ <retval>,
 6569              	@ main.c:3210: 		PE2_o = 1;
 6570 0026 054B     		ldr	r3, .L490	@ tmp125,
 6571              	@ main.c:3211: 		do{i++;} while (PE4_i == 0);
 6572 0028 054A     		ldr	r2, .L490+4	@ tmp127,
 6573              	@ main.c:3210: 		PE2_o = 1;
 6574 002a 1960     		str	r1, [r3]	@ tmp126, MEM[(volatile long unsigned int *)1109590408B]
 6575              	.L484:
 6576              	@ main.c:3211: 		do{i++;} while (PE4_i == 0);
 6577 002c 1368     		ldr	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109590288B]
 6578 002e 0130     		adds	r0, r0, #1	@ <retval>, <retval>,
 6579 0030 002B     		cmp	r3, #0	@ _2
 6580 0032 FBD0     		beq	.L484	@
 6581              	@ main.c:3212: 		PE2_o = 0;
 6582 0034 0022     		movs	r2, #0	@ tmp129,
 6583 0036 014B     		ldr	r3, .L490	@ tmp128,
 6584 0038 1A60     		str	r2, [r3]	@ tmp129, MEM[(volatile long unsigned int *)1109590408B]
 6585              	@ main.c:3214: 	}
 6586 003a 7047     		bx	lr	@
 6587              	.L491:
 6588              		.align	2
 6589              	.L490:
 6590 003c 88012342 		.word	1109590408
 6591 0040 10012342 		.word	1109590288
 6592 0044 10E000E0 		.word	-536813552
 6593 0048 00000000 		.word	delay_us
 6594              		.size	qtouch_mesaure, .-qtouch_mesaure
 6595              		.section	.text.qtouch,"ax",%progbits
 6596              		.align	1
 6597              		.p2align 2,,3
 6598              		.global	qtouch
 6599              		.syntax unified
 6600              		.thumb
 6601              		.thumb_func
 6602              		.fpu softvfp
 6603              		.type	qtouch, %function
 6604              	qtouch:
 6605              		@ args = 0, pretend = 0, frame = 0
 6606              		@ frame_needed = 0, uses_anonymous_args = 0
 6607              	@ main.c:3217: 		GPIOE->CRL = (GPIOE->CRL & 0xfff0f0ff) | 0x00040300;	
 6608 0000 114A     		ldr	r2, .L497	@ tmp119,
 6609              	@ main.c:3215: void qtouch(void)					{
 6610 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 6611              	@ main.c:3217: 		GPIOE->CRL = (GPIOE->CRL & 0xfff0f0ff) | 0x00040300;	
 6612 0006 1368     		ldr	r3, [r2]	@ _1, MEM[(struct GPIO_TypeDef *)1073813504B].CRL
ARM GAS  /tmp/cczkEFU1.s 			page 117


 6613 0008 104D     		ldr	r5, .L497+4	@ tmp131,
 6614 000a 23F47023 		bic	r3, r3, #983040	@ tmp120, _1,
 6615 000e 23F47063 		bic	r3, r3, #3840	@ tmp120, tmp120,
 6616 0012 43F48023 		orr	r3, r3, #262144	@ _3, tmp120,
 6617 0016 43F44073 		orr	r3, r3, #768	@ _3, _3,
 6618              	@ main.c:3219: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL) ){
 6619 001a 0D4C     		ldr	r4, .L497+8	@ tmp125,
 6620 001c 0D4E     		ldr	r6, .L497+12	@ tmp127,
 6621              	@ main.c:3222: 				UaPutS("\r\n QT =");		sint2uart(qt);
 6622 001e DFF83880 		ldr	r8, .L497+16	@ tmp132,
 6623              	@ main.c:3217: 		GPIOE->CRL = (GPIOE->CRL & 0xfff0f0ff) | 0x00040300;	
 6624 0022 1360     		str	r3, [r2]	@ _3, MEM[(struct GPIO_TypeDef *)1073813504B].CRL
 6625              	.L493:
 6626              	@ main.c:3219: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL) ){
 6627 0024 2B68     		ldr	r3, [r5]	@ trg0.206_4, trg0
 6628 0026 A268     		ldr	r2, [r4, #8]	@ _5, MEM[(struct SysTick_Type *)3758153744B].VAL
 6629 0028 9B1A     		subs	r3, r3, r2	@ tmp126, trg0.206_4, _5
 6630 002a B342     		cmp	r3, r6	@ tmp126, tmp127
 6631 002c FAD9     		bls	.L493	@,
 6632              	@ main.c:3220: 				trg0 = SysTick->VAL;
 6633 002e A368     		ldr	r3, [r4, #8]	@ _7, MEM[(struct SysTick_Type *)3758153744B].VAL
 6634 0030 2B60     		str	r3, [r5]	@ _7, trg0
 6635              	@ main.c:3221: 				qt = qtouch_mesaure();
 6636 0032 FFF7FEFF 		bl	qtouch_mesaure	@
 6637 0036 0746     		mov	r7, r0	@ qt,
 6638              	@ main.c:3222: 				UaPutS("\r\n QT =");		sint2uart(qt);
 6639 0038 4046     		mov	r0, r8	@, tmp132
 6640 003a FFF7FEFF 		bl	UaPutS	@
 6641 003e 3846     		mov	r0, r7	@, qt
 6642 0040 FFF7FEFF 		bl	sint2uart	@
 6643 0044 EEE7     		b	.L493	@
 6644              	.L498:
 6645 0046 00BF     		.align	2
 6646              	.L497:
 6647 0048 00180140 		.word	1073813504
 6648 004c 00000000 		.word	trg0
 6649 0050 10E000E0 		.word	-536813552
 6650 0054 20AA4400 		.word	4500000
 6651 0058 00000000 		.word	.LC93
 6652              		.size	qtouch, .-qtouch
 6653              		.section	.text.DHT_Tool,"ax",%progbits
 6654              		.align	1
 6655              		.p2align 2,,3
 6656              		.global	DHT_Tool
 6657              		.syntax unified
 6658              		.thumb
 6659              		.thumb_func
 6660              		.fpu softvfp
 6661              		.type	DHT_Tool, %function
 6662              	DHT_Tool:
 6663              		@ args = 0, pretend = 0, frame = 0
 6664              		@ frame_needed = 0, uses_anonymous_args = 0
 6665              		@ link register save eliminated.
 6666              	@ main.c:3416: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6667 0000 0A49     		ldr	r1, .L500	@ tmp116,
 6668              	@ main.c:3417: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 6669 0002 0B4A     		ldr	r2, .L500+4	@ tmp121,
ARM GAS  /tmp/cczkEFU1.s 			page 118


 6670              	@ main.c:3416: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6671 0004 4B68     		ldr	r3, [r1, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 6672              	@ main.c:3420: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 6673 0006 0B48     		ldr	r0, .L500+8	@ tmp124,
 6674              	@ main.c:3416: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6675 0008 23F0F023 		bic	r3, r3, #-268374016	@ tmp117, _1,
 6676 000c 23F47023 		bic	r3, r3, #983040	@ tmp117, tmp117,
 6677 0010 43F01023 		orr	r3, r3, #268439552	@ _3, tmp117,
 6678 0014 43F48033 		orr	r3, r3, #65536	@ _3, _3,
 6679 0018 4B60     		str	r3, [r1, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 6680              	@ main.c:3417: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 6681 001a 1368     		ldr	r3, [r2]	@ _4, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 6682              	@ main.c:3420: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 6683 001c 0649     		ldr	r1, .L500+12	@ tmp125,
 6684              	@ main.c:3417: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 6685 001e 23F47F23 		bic	r3, r3, #1044480	@ tmp122, _4,
 6686 0022 43F48833 		orr	r3, r3, #69632	@ _6, tmp122,
 6687 0026 1360     		str	r3, [r2]	@ _6, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 6688              	@ main.c:3420: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 6689 0028 0160     		str	r1, [r0]	@ tmp125, oled_hw.mosi
 6690              	@ main.c:3422: }
 6691 002a 7047     		bx	lr	@
 6692              	.L501:
 6693              		.align	2
 6694              	.L500:
 6695 002c 00080140 		.word	1073809408
 6696 0030 000C0140 		.word	1073810432
 6697 0034 00000000 		.word	oled_hw
 6698 0038 8C812142 		.word	1109492108
 6699              		.size	DHT_Tool, .-DHT_Tool
 6700              		.section	.text.SPI_Tool_Menu,"ax",%progbits
 6701              		.align	1
 6702              		.p2align 2,,3
 6703              		.global	SPI_Tool_Menu
 6704              		.syntax unified
 6705              		.thumb
 6706              		.thumb_func
 6707              		.fpu softvfp
 6708              		.type	SPI_Tool_Menu, %function
 6709              	SPI_Tool_Menu:
 6710              		@ args = 0, pretend = 0, frame = 0
 6711              		@ frame_needed = 0, uses_anonymous_args = 0
 6712 0000 08B5     		push	{r3, lr}	@
 6713              	@ main.c:3424: 	UaPutK("\n\r\n======= STM32F1 SPI TOOL =========================\r\n");
 6714 0002 0848     		ldr	r0, .L504	@,
 6715 0004 FFF7FEFF 		bl	UaPutK	@
 6716              	@ main.c:3425: 	UaPutK(" i - Init      r - Read  sector  e -                \r\n");
 6717 0008 0748     		ldr	r0, .L504+4	@,
 6718 000a FFF7FEFF 		bl	UaPutK	@
 6719              	@ main.c:3426: 	UaPutK(" d - Delete    f - Write sector  s -                \r\n");
 6720 000e 0748     		ldr	r0, .L504+8	@,
 6721 0010 FFF7FEFF 		bl	UaPutK	@
 6722              	@ main.c:3427: 	UaPutK(" m - Modf      c - Copy  sector  n -               \r\n");
 6723 0014 0648     		ldr	r0, .L504+12	@,
 6724 0016 FFF7FEFF 		bl	UaPutK	@
 6725              	@ main.c:3429: }
 6726 001a BDE80840 		pop	{r3, lr}	@
ARM GAS  /tmp/cczkEFU1.s 			page 119


 6727              	@ main.c:3428: 	UaPutK("==================================================\r\n > ");
 6728 001e 0548     		ldr	r0, .L504+16	@,
 6729 0020 FFF7FEBF 		b	UaPutK	@
 6730              	.L505:
 6731              		.align	2
 6732              	.L504:
 6733 0024 00000000 		.word	.LC94
 6734 0028 38000000 		.word	.LC95
 6735 002c 70000000 		.word	.LC96
 6736 0030 A8000000 		.word	.LC97
 6737 0034 94000000 		.word	.LC44
 6738              		.size	SPI_Tool_Menu, .-SPI_Tool_Menu
 6739              		.section	.text.SPI_Tool,"ax",%progbits
 6740              		.align	1
 6741              		.p2align 2,,3
 6742              		.global	SPI_Tool
 6743              		.syntax unified
 6744              		.thumb
 6745              		.thumb_func
 6746              		.fpu softvfp
 6747              		.type	SPI_Tool, %function
 6748              	SPI_Tool:
 6749              		@ args = 0, pretend = 0, frame = 16
 6750              		@ frame_needed = 0, uses_anonymous_args = 0
 6751              	@ main.c:3437: 	LED=1;
 6752 0000 0122     		movs	r2, #1	@ tmp125,
 6753 0002 444B     		ldr	r3, .L519	@ tmp124,
 6754              	@ main.c:3439: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6755 0004 4449     		ldr	r1, .L519+4	@ tmp126,
 6756              	@ main.c:3430: void SPI_Tool(void)				{
 6757 0006 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 6758              	@ main.c:3437: 	LED=1;
 6759 000a 1A60     		str	r2, [r3]	@ tmp125, MEM[(volatile long unsigned int *)1109524916B]
 6760              	@ main.c:3439: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6761 000c 4B68     		ldr	r3, [r1, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 6762              	@ main.c:3440: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 6763 000e 434A     		ldr	r2, .L519+8	@ tmp131,
 6764              	@ main.c:3439: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6765 0010 23F0F023 		bic	r3, r3, #-268374016	@ tmp127, _1,
 6766 0014 23F47023 		bic	r3, r3, #983040	@ tmp127, tmp127,
 6767 0018 43F01023 		orr	r3, r3, #268439552	@ _3, tmp127,
 6768 001c 43F48033 		orr	r3, r3, #65536	@ _3, _3,
 6769 0020 4B60     		str	r3, [r1, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 6770              	@ main.c:3440: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 6771 0022 1368     		ldr	r3, [r2]	@ _4, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 6772              	@ main.c:3442: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 6773 0024 3E48     		ldr	r0, .L519+12	@ tmp134,
 6774              	@ main.c:3440: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 6775 0026 23F47F23 		bic	r3, r3, #1044480	@ tmp132, _4,
 6776 002a 43F48833 		orr	r3, r3, #69632	@ _6, tmp132,
 6777 002e 1360     		str	r3, [r2]	@ _6, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 6778              	@ main.c:3442: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 6779 0030 3C4E     		ldr	r6, .L519+16	@ tmp135,
 6780              	@ main.c:3443: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 6781 0032 3D49     		ldr	r1, .L519+20	@ tmp137,
 6782              	@ main.c:3444: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 6783 0034 3D4D     		ldr	r5, .L519+24	@ tmp139,
ARM GAS  /tmp/cczkEFU1.s 			page 120


 6784              	@ main.c:3445: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 6785 0036 3E4A     		ldr	r2, .L519+28	@ tmp141,
 6786              	@ main.c:3446: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 6787 0038 3E4C     		ldr	r4, .L519+32	@ tmp143,
 6788              	@ main.c:3430: void SPI_Tool(void)				{
 6789 003a 84B0     		sub	sp, sp, #16	@,,
 6790              	@ main.c:3442: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 6791 003c 4660     		str	r6, [r0, #4]	@ tmp135, oled_hw.sck
 6792              	@ main.c:3450: 	int2str(12345678 ,tbuf,8,0);		
 6793 003e 0023     		movs	r3, #0	@,
 6794              	@ main.c:3443: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 6795 0040 0160     		str	r1, [r0]	@ tmp137, oled_hw.mosi
 6796              	@ main.c:3444: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 6797 0042 8560     		str	r5, [r0, #8]	@ tmp139, oled_hw.dc
 6798              	@ main.c:3450: 	int2str(12345678 ,tbuf,8,0);		
 6799 0044 01A9     		add	r1, sp, #4	@ tmp175,,
 6800              	@ main.c:3445: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 6801 0046 C260     		str	r2, [r0, #12]	@ tmp141, oled_hw.cs
 6802              	@ main.c:3446: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 6803 0048 0461     		str	r4, [r0, #16]	@ tmp143, oled_hw.rst
 6804              	@ main.c:3450: 	int2str(12345678 ,tbuf,8,0);		
 6805 004a 0822     		movs	r2, #8	@,
 6806 004c 3A48     		ldr	r0, .L519+36	@,
 6807 004e FFF7FEFF 		bl	int2str	@
 6808              	@ main.c:3451: 	oled_num24(0, 4,tbuf);
 6809 0052 01AA     		add	r2, sp, #4	@ tmp176,,
 6810 0054 0421     		movs	r1, #4	@,
 6811 0056 0020     		movs	r0, #0	@,
 6812 0058 FFF7FEFF 		bl	oled_num24	@
 6813              	@ main.c:3452: 	oled_num24(0, 0,tbuf);
 6814 005c 0021     		movs	r1, #0	@,
 6815 005e 01AA     		add	r2, sp, #4	@ tmp177,,
 6816 0060 0846     		mov	r0, r1	@,
 6817 0062 FFF7FEFF 		bl	oled_num24	@
 6818              	@ main.c:3453: 	oled_refresh_gram();	
 6819 0066 FFF7FEFF 		bl	oled_refresh_gram	@
 6820              	@ main.c:3456: 	SPI2_init();
 6821 006a FFF7FEFF 		bl	SPI2_init	@
 6822 006e 334D     		ldr	r5, .L519+40	@ tmp171,
 6823              	@ main.c:3469: 		UaPutK("\r\n ");
 6824 0070 334C     		ldr	r4, .L519+44	@ tmp172,
 6825              	@ main.c:3475: 			UaPutK("\r\nInit spi    = "); uint2uart(1);
 6826 0072 344F     		ldr	r7, .L519+48	@ tmp173,
 6827              	@ main.c:3480: 			SPI2_CS = 0; 
 6828 0074 2036     		adds	r6, r6, #32	@ tmp174, tmp174,
 6829              	.L507:
 6830              	@ main.c:3463: 		SPI_Tool_Menu();
 6831 0076 FFF7FEFF 		bl	SPI_Tool_Menu	@
 6832              	@ main.c:3464: 		while(!p_Fifo1->rct);
 6833 007a 2A68     		ldr	r2, [r5]	@ p_Fifo1.208_7, p_Fifo1
 6834              	.L508:
 6835              	@ main.c:3464: 		while(!p_Fifo1->rct);
 6836 007c 9388     		ldrh	r3, [r2, #4]	@, p_Fifo1.208_7->rct
 6837 007e 9BB2     		uxth	r3, r3	@ _8, p_Fifo1.208_7->rct
 6838 0080 002B     		cmp	r3, #0	@ _8
 6839 0082 FBD0     		beq	.L508	@
 6840              	@ main.c:3467: 		UART_getChar((char*)&switcH);
ARM GAS  /tmp/cczkEFU1.s 			page 121


 6841 0084 0DF10300 		add	r0, sp, #3	@ tmp178,,
 6842 0088 FFF7FEFF 		bl	UART_getChar	@
 6843              	@ main.c:3469: 		UaPutK("\r\n ");
 6844 008c 2046     		mov	r0, r4	@, tmp172
 6845 008e FFF7FEFF 		bl	UaPutK	@
 6846              	@ main.c:3470: 		switch (switcH)	{
 6847 0092 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2	@ switcH, switcH
 6848 0096 692B     		cmp	r3, #105	@ switcH,
 6849 0098 07D0     		beq	.L510	@,
 6850 009a 722B     		cmp	r3, #114	@ switcH,
 6851 009c 21D0     		beq	.L511	@,
 6852 009e 632B     		cmp	r3, #99	@ switcH,
 6853 00a0 0CD0     		beq	.L518	@,
 6854              	@ main.c:3498: 			UaPutK("Nieznana Komenda");
 6855 00a2 2948     		ldr	r0, .L519+52	@,
 6856 00a4 FFF7FEFF 		bl	UaPutK	@
 6857              	@ main.c:3499: 			break;
 6858 00a8 E5E7     		b	.L507	@
 6859              	.L510:
 6860              	@ main.c:3474: 			SPI2_init();
 6861 00aa FFF7FEFF 		bl	SPI2_init	@
 6862              	@ main.c:3475: 			UaPutK("\r\nInit spi    = "); uint2uart(1);
 6863 00ae 3846     		mov	r0, r7	@, tmp173
 6864 00b0 FFF7FEFF 		bl	UaPutK	@
 6865 00b4 0120     		movs	r0, #1	@,
 6866 00b6 FFF7FEFF 		bl	uint2uart	@
 6867              	@ main.c:3477: 			break;
 6868 00ba DCE7     		b	.L507	@
 6869              	.L518:
 6870              	@ main.c:3489: 			UaPutK("Copy memory");
 6871 00bc 2348     		ldr	r0, .L519+56	@,
 6872 00be FFF7FEFF 		bl	UaPutK	@
 6873              	@ main.c:3490: 			UaPutK("\r\n Src Mem adr = 0x");	reg=UART_getHex();
 6874 00c2 2348     		ldr	r0, .L519+60	@,
 6875 00c4 FFF7FEFF 		bl	UaPutK	@
 6876 00c8 FFF7FEFF 		bl	UART_getHex	@
 6877              	@ main.c:3491: 			UaPutK("\r\n How many byte = ");	reg=UART_getNum();
 6878 00cc 2148     		ldr	r0, .L519+64	@,
 6879 00ce FFF7FEFF 		bl	UaPutK	@
 6880 00d2 FFF7FEFF 		bl	UART_getNum	@
 6881              	@ main.c:3492: 			UaPutK("\r\n Dst mem adr = 0x");	reg=UART_getHex();
 6882 00d6 2048     		ldr	r0, .L519+68	@,
 6883 00d8 FFF7FEFF 		bl	UaPutK	@
 6884 00dc FFF7FEFF 		bl	UART_getHex	@
 6885              	@ main.c:3495: 			break;
 6886 00e0 C9E7     		b	.L507	@
 6887              	.L511:
 6888              	@ main.c:3480: 			SPI2_CS = 0; 
 6889 00e2 4FF00008 		mov	r8, #0	@ tmp156,
 6890              	@ main.c:3481: 			UaPutK("\r\n Reg = ");	reg=UART_getNum();
 6891 00e6 1D48     		ldr	r0, .L519+72	@,
 6892              	@ main.c:3480: 			SPI2_CS = 0; 
 6893 00e8 C6F80080 		str	r8, [r6]	@ tmp156, MEM[(volatile long unsigned int *)1109492144B]
 6894              	@ main.c:3481: 			UaPutK("\r\n Reg = ");	reg=UART_getNum();
 6895 00ec FFF7FEFF 		bl	UaPutK	@
 6896 00f0 FFF7FEFF 		bl	UART_getNum	@
 6897              	@ main.c:3482: 			spi2_rw(reg);						// Read status register
ARM GAS  /tmp/cczkEFU1.s 			page 122


 6898 00f4 C0B2     		uxtb	r0, r0	@,
 6899 00f6 FFF7FEFF 		bl	spi2_rw	@
 6900              	@ main.c:3483: 			UaPutK("\r\n Reg = ");	hex2uart(spi2_rw(0x00),2);
 6901 00fa 1848     		ldr	r0, .L519+72	@,
 6902 00fc FFF7FEFF 		bl	UaPutK	@
 6903 0100 4046     		mov	r0, r8	@, tmp156
 6904 0102 FFF7FEFF 		bl	spi2_rw	@
 6905 0106 0221     		movs	r1, #2	@,
 6906 0108 FFF7FEFF 		bl	hex2uart	@
 6907              	@ main.c:3484: 			SPI2_CS = 1;			
 6908 010c 0123     		movs	r3, #1	@ tmp164,
 6909 010e 3360     		str	r3, [r6]	@ tmp164, MEM[(volatile long unsigned int *)1109492144B]
 6910              	@ main.c:3486: 			break;
 6911 0110 B1E7     		b	.L507	@
 6912              	.L520:
 6913 0112 00BF     		.align	2
 6914              	.L519:
 6915 0114 B4012242 		.word	1109524916
 6916 0118 00080140 		.word	1073809408
 6917 011c 000C0140 		.word	1073810432
 6918 0120 00000000 		.word	oled_hw
 6919 0124 90812142 		.word	1109492112
 6920 0128 8C812142 		.word	1109492108
 6921 012c B0012142 		.word	1109459376
 6922 0130 AC012142 		.word	1109459372
 6923 0134 BC012142 		.word	1109459388
 6924 0138 4E61BC00 		.word	12345678
 6925 013c 00000000 		.word	p_Fifo1
 6926 0140 30000000 		.word	.LC77
 6927 0144 00000000 		.word	.LC98
 6928 0148 68000000 		.word	.LC104
 6929 014c 20000000 		.word	.LC100
 6930 0150 2C000000 		.word	.LC101
 6931 0154 40000000 		.word	.LC102
 6932 0158 54000000 		.word	.LC103
 6933 015c 14000000 		.word	.LC99
 6934              		.size	SPI_Tool, .-SPI_Tool
 6935              		.section	.text.Menu1,"ax",%progbits
 6936              		.align	1
 6937              		.p2align 2,,3
 6938              		.global	Menu1
 6939              		.syntax unified
 6940              		.thumb
 6941              		.thumb_func
 6942              		.fpu softvfp
 6943              		.type	Menu1, %function
 6944              	Menu1:
 6945              		@ args = 0, pretend = 0, frame = 0
 6946              		@ frame_needed = 0, uses_anonymous_args = 0
 6947 0000 08B5     		push	{r3, lr}	@
 6948              	@ main.c:3949: 	UaPutK("\n\r\n======= STM32F4 SD/MMC Card ======================\r\n");
 6949 0002 0848     		ldr	r0, .L523	@,
 6950 0004 FFF7FEFF 		bl	UaPutK	@
 6951              	@ main.c:3950: 	UaPutK(" i - Init      r - Read  sector  e - Erase sector   \r\n");
 6952 0008 0748     		ldr	r0, .L523+4	@,
 6953 000a FFF7FEFF 		bl	UaPutK	@
 6954              	@ main.c:3951: 	UaPutK(" d - Delete    f - Write sector  s - Statistic Card \r\n");
ARM GAS  /tmp/cczkEFU1.s 			page 123


 6955 000e 0748     		ldr	r0, .L523+8	@,
 6956 0010 FFF7FEFF 		bl	UaPutK	@
 6957              	@ main.c:3952: 	UaPutK(" m - Modf mem  c - Copy  sector  n - Next Cluster  \r\n");
 6958 0014 0648     		ldr	r0, .L523+12	@,
 6959 0016 FFF7FEFF 		bl	UaPutK	@
 6960              	@ main.c:3954: }
 6961 001a BDE80840 		pop	{r3, lr}	@
 6962              	@ main.c:3953: 	UaPutK("==================================================\r\n > ");
 6963 001e 0548     		ldr	r0, .L523+16	@,
 6964 0020 FFF7FEBF 		b	UaPutK	@
 6965              	.L524:
 6966              		.align	2
 6967              	.L523:
 6968 0024 00000000 		.word	.LC105
 6969 0028 38000000 		.word	.LC106
 6970 002c 70000000 		.word	.LC107
 6971 0030 A8000000 		.word	.LC108
 6972 0034 94000000 		.word	.LC44
 6973              		.size	Menu1, .-Menu1
 6974              		.section	.text.MemCard_Menu,"ax",%progbits
 6975              		.align	1
 6976              		.p2align 2,,3
 6977              		.global	MemCard_Menu
 6978              		.syntax unified
 6979              		.thumb
 6980              		.thumb_func
 6981              		.fpu softvfp
 6982              		.type	MemCard_Menu, %function
 6983              	MemCard_Menu:
 6984              		@ args = 0, pretend = 0, frame = 40
 6985              		@ frame_needed = 0, uses_anonymous_args = 0
 6986              	@ main.c:3959: 	u16 crc=1,x=0,y1=0,y2=0;
 6987 0000 0123     		movs	r3, #1	@ tmp371,
 6988              	@ main.c:3955: void MemCard_Menu(void)		{
 6989 0002 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 6990 0006 8DB0     		sub	sp, sp, #52	@,,
 6991              	@ main.c:3959: 	u16 crc=1,x=0,y1=0,y2=0;
 6992 0008 ADF81E30 		strh	r3, [sp, #30]	@ movhi	@ tmp371, crc
 6993              	@ main.c:3961: 	TFT_Init();
 6994 000c FFF7FEFF 		bl	TFT_Init	@
 6995              	@ main.c:3962: 	TFT_Clear(BLACK);
 6996 0010 0020     		movs	r0, #0	@,
 6997 0012 FFF7FEFF 		bl	TFT_Clear	@
 6998              	@ main.c:3971: 	crc16_spi2_init();
 6999 0016 FFF7FEFF 		bl	crc16_spi2_init	@
 7000              	@ main.c:3973: 	if(dinit){
 7001 001a A94B     		ldr	r3, .L639	@ tmp701,
 7002 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2	@ dinit, dinit
 7003 001e 002B     		cmp	r3, #0	@ dinit
 7004 0020 00F01084 		beq	.L526	@
 7005              	@ main.c:3974: 		UaPutK("\r\nSD Card Init = "); sint2uart(CardType);
 7006 0024 A74B     		ldr	r3, .L639+4	@ tmp612,
 7007 0026 A848     		ldr	r0, .L639+8	@,
 7008 0028 1C46     		mov	r4, r3	@ tmp612, tmp612
 7009 002a 0393     		str	r3, [sp, #12]	@ tmp612, %sfp
 7010 002c FFF7FEFF 		bl	UaPutK	@
 7011 0030 2078     		ldrb	r0, [r4]	@ zero_extendqisi2	@, CardType
ARM GAS  /tmp/cczkEFU1.s 			page 124


 7012 0032 FFF7FEFF 		bl	sint2uart	@
 7013              	.L527:
 7014              	@ main.c:3959: 	u16 crc=1,x=0,y1=0,y2=0;
 7015 0036 0023     		movs	r3, #0	@ y1,
 7016 0038 6FF4FF70 		mvn	r0, #510	@,
 7017              	@ main.c:3977: 	p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='i';
 7018 003c 0122     		movs	r2, #1	@ tmp380,
 7019 003e 6921     		movs	r1, #105	@ tmp383,
 7020              	@ main.c:3959: 	u16 crc=1,x=0,y1=0,y2=0;
 7021 0040 0493     		str	r3, [sp, #16]	@ y1, %sfp
 7022              	@ main.c:3977: 	p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='i';
 7023 0042 A24B     		ldr	r3, .L639+12	@ tmp708,
 7024 0044 DFF8D492 		ldr	r9, .L639+92	@ _443,
 7025 0048 1B68     		ldr	r3, [r3]	@ p_Fifo1.212_4, p_Fifo1
 7026 004a 4844     		add	r0, r9, r0	@ ivtmp.659, _443,
 7027 004c 9A80     		strh	r2, [r3, #4]	@ movhi	@ tmp380, p_Fifo1.212_4->rct
 7028 004e 0590     		str	r0, [sp, #20]	@ ivtmp.659, %sfp
 7029 0050 5A80     		strh	r2, [r3, #2]	@ movhi	@ tmp380, p_Fifo1.212_4->rwi
 7030 0052 9971     		strb	r1, [r3, #6]	@ tmp383, p_Fifo1.212_4->rbuf
 7031              	.L528:
 7032              	@ main.c:3980: 		Menu1();
 7033 0054 FFF7FEFF 		bl	Menu1	@
 7034              	@ main.c:3981: 		while(!p_Fifo1->rct);
 7035 0058 9C4B     		ldr	r3, .L639+12	@ tmp711,
 7036 005a 1A68     		ldr	r2, [r3]	@ p_Fifo1.215_7, p_Fifo1
 7037              	.L529:
 7038              	@ main.c:3981: 		while(!p_Fifo1->rct);
 7039 005c 9388     		ldrh	r3, [r2, #4]	@, p_Fifo1.215_7->rct
 7040 005e 9BB2     		uxth	r3, r3	@ _8, p_Fifo1.215_7->rct
 7041 0060 002B     		cmp	r3, #0	@ _8
 7042 0062 FBD0     		beq	.L529	@
 7043              	@ main.c:3984: 		UART_getChar((char*)&switcH);
 7044 0064 0DF11D00 		add	r0, sp, #29	@ tmp712,,
 7045 0068 FFF7FEFF 		bl	UART_getChar	@
 7046              	@ main.c:3986: 		UaPutK("\r\n ");
 7047 006c 9848     		ldr	r0, .L639+16	@,
 7048 006e FFF7FEFF 		bl	UaPutK	@
 7049              	@ main.c:3987: 		switch (switcH)	{
 7050 0072 9DF81D30 		ldrb	r3, [sp, #29]	@ zero_extendqisi2	@ switcH, switcH
 7051 0076 523B     		subs	r3, r3, #82	@ tmp391, switcH,
 7052 0078 262B     		cmp	r3, #38	@ tmp391,
 7053 007a 00F27B82 		bhi	.L530	@
 7054 007e DFE813F0 		tbh	[pc, r3, lsl #1]	@ tmp391
 7055              	.L532:
 7056 0082 4202     		.2byte	(.L531-.L532)/2
 7057 0084 7902     		.2byte	(.L530-.L532)/2
 7058 0086 7902     		.2byte	(.L530-.L532)/2
 7059 0088 7902     		.2byte	(.L530-.L532)/2
 7060 008a 7902     		.2byte	(.L530-.L532)/2
 7061 008c 7902     		.2byte	(.L530-.L532)/2
 7062 008e 7902     		.2byte	(.L530-.L532)/2
 7063 0090 7902     		.2byte	(.L530-.L532)/2
 7064 0092 7902     		.2byte	(.L530-.L532)/2
 7065 0094 7902     		.2byte	(.L530-.L532)/2
 7066 0096 7902     		.2byte	(.L530-.L532)/2
 7067 0098 7902     		.2byte	(.L530-.L532)/2
 7068 009a 7902     		.2byte	(.L530-.L532)/2
ARM GAS  /tmp/cczkEFU1.s 			page 125


 7069 009c 7902     		.2byte	(.L530-.L532)/2
 7070 009e 7902     		.2byte	(.L530-.L532)/2
 7071 00a0 7902     		.2byte	(.L530-.L532)/2
 7072 00a2 7902     		.2byte	(.L530-.L532)/2
 7073 00a4 CB01     		.2byte	(.L533-.L532)/2
 7074 00a6 7902     		.2byte	(.L530-.L532)/2
 7075 00a8 7902     		.2byte	(.L530-.L532)/2
 7076 00aa 7901     		.2byte	(.L534-.L532)/2
 7077 00ac 7902     		.2byte	(.L530-.L532)/2
 7078 00ae 7902     		.2byte	(.L530-.L532)/2
 7079 00b0 5101     		.2byte	(.L535-.L532)/2
 7080 00b2 7902     		.2byte	(.L530-.L532)/2
 7081 00b4 7902     		.2byte	(.L530-.L532)/2
 7082 00b6 7902     		.2byte	(.L530-.L532)/2
 7083 00b8 4B02     		.2byte	(.L536-.L532)/2
 7084 00ba 7902     		.2byte	(.L530-.L532)/2
 7085 00bc 7902     		.2byte	(.L530-.L532)/2
 7086 00be 7902     		.2byte	(.L530-.L532)/2
 7087 00c0 D800     		.2byte	(.L537-.L532)/2
 7088 00c2 7000     		.2byte	(.L538-.L532)/2
 7089 00c4 6400     		.2byte	(.L539-.L532)/2
 7090 00c6 9100     		.2byte	(.L540-.L532)/2
 7091 00c8 2B00     		.2byte	(.L541-.L532)/2
 7092 00ca 7902     		.2byte	(.L530-.L532)/2
 7093 00cc 7902     		.2byte	(.L530-.L532)/2
 7094 00ce 2700     		.2byte	(.L542-.L532)/2
 7095              		.p2align 1
 7096              	.L542:
 7097              	@ main.c:4298: 			UaPutK("Testing ...");
 7098 00d0 8048     		ldr	r0, .L639+20	@,
 7099 00d2 FFF7FEFF 		bl	UaPutK	@
 7100              	@ main.c:4300: 			break;
 7101 00d6 BDE7     		b	.L528	@
 7102              	.L541:
 7103              	@ main.c:4196: 			UaPutK("View last sector");
 7104 00d8 7F48     		ldr	r0, .L639+24	@,
 7105 00da FFF7FEFF 		bl	UaPutK	@
 7106              	@ main.c:4197: 			UaPutK("\r\n First Sector = 0x");
 7107 00de 7F48     		ldr	r0, .L639+28	@,
 7108 00e0 FFF7FEFF 		bl	UaPutK	@
 7109              	@ main.c:4198: 			strBlock=UART_getHex();
 7110 00e4 FFF7FEFF 		bl	UART_getHex	@
 7111 00e8 0546     		mov	r5, r0	@ strBlock,
 7112              	@ main.c:4199: 			UaPutK("\r\n Searching ");
 7113 00ea 7D48     		ldr	r0, .L639+32	@,
 7114 00ec FFF7FEFF 		bl	UaPutK	@
 7115              	@ main.c:4208: 				if( mci_read_sect (strBlock++,buffer,1) ) {
 7116 00f0 7C4E     		ldr	r6, .L639+36	@ tmp637,
 7117 00f2 05E0     		b	.L571	@
 7118              	.L570:
 7119              	@ main.c:4218: 			while(crc != 0x822d );
 7120 00f4 48F22D23 		movw	r3, #33325	@ tmp561,
 7121 00f8 BDF81E20 		ldrh	r2, [sp, #30]	@ crc, crc
 7122 00fc 9A42     		cmp	r2, r3	@ crc, tmp561
 7123 00fe 16D0     		beq	.L569	@,
 7124              	.L571:
 7125              	@ main.c:4208: 				if( mci_read_sect (strBlock++,buffer,1) ) {
ARM GAS  /tmp/cczkEFU1.s 			page 126


 7126 0100 0122     		movs	r2, #1	@,
 7127 0102 3146     		mov	r1, r6	@, tmp637
 7128 0104 2846     		mov	r0, r5	@, strBlock
 7129 0106 AC18     		adds	r4, r5, r2	@ strBlock, strBlock,
 7130 0108 FFF7FEFF 		bl	mmc_read_sect	@
 7131              	@ main.c:4215: 					if(!(strBlock%1024)) UaPutC('.');
 7132 010c C4F30903 		ubfx	r3, r4, #0, #10	@ tmp558, strBlock,,
 7133              	@ main.c:4208: 				if( mci_read_sect (strBlock++,buffer,1) ) {
 7134 0110 0028     		cmp	r0, #0	@
 7135 0112 40F06182 		bne	.L632	@
 7136 0116 2546     		mov	r5, r4	@ strBlock, strBlock
 7137              	@ main.c:4215: 					if(!(strBlock%1024)) UaPutC('.');
 7138 0118 002B     		cmp	r3, #0	@ tmp558
 7139 011a EBD1     		bne	.L570	@
 7140              	@ main.c:4215: 					if(!(strBlock%1024)) UaPutC('.');
 7141 011c 2E20     		movs	r0, #46	@,
 7142 011e FFF7FEFF 		bl	UaPutC	@
 7143              	@ main.c:4218: 			while(crc != 0x822d );
 7144 0122 48F22D23 		movw	r3, #33325	@ tmp561,
 7145 0126 BDF81E20 		ldrh	r2, [sp, #30]	@ crc, crc
 7146 012a 9A42     		cmp	r2, r3	@ crc, tmp561
 7147 012c E8D1     		bne	.L571	@,
 7148              	.L569:
 7149              	@ main.c:4248: 			UaPutK("\r\n Find Sector = 0x");	hex2uart(strBlock, 8);
 7150 012e 6E48     		ldr	r0, .L639+40	@,
 7151 0130 FFF7FEFF 		bl	UaPutK	@
 7152 0134 2046     		mov	r0, r4	@, strBlock
 7153 0136 0821     		movs	r1, #8	@,
 7154 0138 FFF7FEFF 		bl	hex2uart	@
 7155              	@ main.c:4249: 			UaPutK("\r\n     lenBlock= ");		sint2uart(lenBlock);
 7156 013c 6B48     		ldr	r0, .L639+44	@,
 7157 013e FFF7FEFF 		bl	UaPutK	@
 7158 0142 0120     		movs	r0, #1	@,
 7159 0144 FFF7FEFF 		bl	sint2uart	@
 7160              	@ main.c:4250: 			break;
 7161 0148 84E7     		b	.L528	@
 7162              	.L539:
 7163              	@ main.c:4009: 			UaPutK("Statistic Card  ");
 7164 014a 6948     		ldr	r0, .L639+48	@,
 7165 014c FFF7FEFF 		bl	UaPutK	@
 7166              	@ main.c:4010: 			if(dinit){
 7167 0150 5B4B     		ldr	r3, .L639	@ tmp715,
 7168 0152 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2	@ dinit, dinit
 7169 0154 002B     		cmp	r3, #0	@ dinit
 7170 0156 40F0EC80 		bne	.L631	@
 7171              	@ main.c:4021: 			}else UaPutK("\r\nSD Card Not Init");
 7172 015a 6648     		ldr	r0, .L639+52	@,
 7173 015c FFF7FEFF 		bl	UaPutK	@
 7174 0160 78E7     		b	.L528	@
 7175              	.L538:
 7176              	@ main.c:4108: 			UaPutK("Read sector");
 7177 0162 6548     		ldr	r0, .L639+56	@,
 7178 0164 FFF7FEFF 		bl	UaPutK	@
 7179              	@ main.c:4109: 			UaPutK("\r\n sectorNumber = 0x");
 7180 0168 6448     		ldr	r0, .L639+60	@,
 7181 016a FFF7FEFF 		bl	UaPutK	@
 7182              	@ main.c:4111: 			strBlock=UART_getHex();
ARM GAS  /tmp/cczkEFU1.s 			page 127


 7183 016e FFF7FEFF 		bl	UART_getHex	@
 7184              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7185 0172 634C     		ldr	r4, .L639+64	@ tmp475,
 7186 0174 634D     		ldr	r5, .L639+68	@ tmp727,
 7187 0176 A368     		ldr	r3, [r4, #8]	@ _373, MEM[(struct SysTick_Type *)3758153744B].VAL
 7188              	@ main.c:4114: 			d=mci_read_sect (strBlock,buffer,1);
 7189 0178 0122     		movs	r2, #1	@,
 7190 017a 5A49     		ldr	r1, .L639+36	@,
 7191              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7192 017c 2B60     		str	r3, [r5]	@ _373, Timt
 7193              	@ main.c:4111: 			strBlock=UART_getHex();
 7194 017e 0746     		mov	r7, r0	@ strBlock,
 7195              	@ main.c:4114: 			d=mci_read_sect (strBlock,buffer,1);
 7196 0180 FFF7FEFF 		bl	mmc_read_sect	@
 7197              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7198 0184 2A68     		ldr	r2, [r5]	@ Timt.82_370, Timt
 7199 0186 A368     		ldr	r3, [r4, #8]	@ _371, MEM[(struct SysTick_Type *)3758153744B].VAL
 7200              	@ main.c:4116: 			if(d){
 7201 0188 0446     		mov	r4, r0	@ tmp478,
 7202              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7203 018a D31A     		subs	r3, r2, r3	@ _372, Timt.82_370, _371
 7204 018c 0293     		str	r3, [sp, #8]	@ _372, %sfp
 7205 018e 0893     		str	r3, [sp, #32]	@ _372, MEM[(volatile u32 *)&tim]
 7206              	@ main.c:4116: 			if(d){
 7207 0190 0028     		cmp	r0, #0	@ tmp478
 7208 0192 40F07382 		bne	.L633	@
 7209              	@ main.c:4143: 				UaPutK("\r\n Read Error = ");
 7210 0196 5C48     		ldr	r0, .L639+72	@,
 7211 0198 FFF7FEFF 		bl	UaPutK	@
 7212              	@ main.c:4144: 				uint2uart(d);
 7213 019c 2046     		mov	r0, r4	@, tmp478
 7214 019e FFF7FEFF 		bl	uint2uart	@
 7215 01a2 57E7     		b	.L528	@
 7216              	.L540:
 7217              	@ main.c:4253: 			UaPutK("Read sector");
 7218 01a4 5448     		ldr	r0, .L639+56	@,
 7219 01a6 FFF7FEFF 		bl	UaPutK	@
 7220              	@ main.c:4254: 			UaPutK("\r\n sectorNumber = 0x");
 7221 01aa 5448     		ldr	r0, .L639+60	@,
 7222 01ac FFF7FEFF 		bl	UaPutK	@
 7223              	@ main.c:4256: 			strBlock=UART_getHex();
 7224 01b0 FFF7FEFF 		bl	UART_getHex	@
 7225 01b4 0446     		mov	r4, r0	@ strBlock,
 7226              	@ main.c:4257: 			UaPutK("\r\n sectorNumber = 0x");		hex2uart(strBlock, 8);
 7227 01b6 5148     		ldr	r0, .L639+60	@,
 7228 01b8 FFF7FEFF 		bl	UaPutK	@
 7229 01bc 2046     		mov	r0, r4	@, strBlock
 7230 01be 0821     		movs	r1, #8	@,
 7231 01c0 FFF7FEFF 		bl	hex2uart	@
 7232              	@ main.c:4258: 			while(strBlock <  31116288 ){
 7233 01c4 514B     		ldr	r3, .L639+76	@ tmp748,
 7234 01c6 9C42     		cmp	r4, r3	@ strBlock, tmp748
 7235 01c8 26D8     		bhi	.L573	@,
 7236              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7237 01ca 4D4E     		ldr	r6, .L639+64	@ tmp570,
 7238              	@ main.c:4261: 				if( mci_read_sect (strBlock,buffer,1*16)) {
 7239 01cc 454D     		ldr	r5, .L639+36	@ tmp634,
ARM GAS  /tmp/cczkEFU1.s 			page 128


 7240              	.L572:
 7241              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7242 01ce B368     		ldr	r3, [r6, #8]	@ _382, MEM[(struct SysTick_Type *)3758153744B].VAL
 7243 01d0 4C4F     		ldr	r7, .L639+68	@ tmp749,
 7244              	@ main.c:4261: 				if( mci_read_sect (strBlock,buffer,1*16)) {
 7245 01d2 1022     		movs	r2, #16	@,
 7246 01d4 2946     		mov	r1, r5	@, tmp634
 7247 01d6 2046     		mov	r0, r4	@, strBlock
 7248              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7249 01d8 3B60     		str	r3, [r7]	@ _382, Timt
 7250              	@ main.c:4261: 				if( mci_read_sect (strBlock,buffer,1*16)) {
 7251 01da FFF7FEFF 		bl	mmc_read_sect	@
 7252 01de 0028     		cmp	r0, #0	@
 7253 01e0 00F0CC81 		beq	.L574	@
 7254              	@ main.c:4262: 					crc16_spi2((u16*)buffer,256*16, &crc );
 7255 01e4 0DF11E02 		add	r2, sp, #30	@ tmp750,,
 7256 01e8 4FF48051 		mov	r1, #4096	@,
 7257 01ec 2846     		mov	r0, r5	@, tmp634
 7258 01ee FFF7FEFF 		bl	crc16_spi2	@
 7259              	@ main.c:4263: 					if( crc ) {
 7260 01f2 BDF81E30 		ldrh	r3, [sp, #30]	@ crc, crc
 7261 01f6 002B     		cmp	r3, #0	@ crc
 7262 01f8 40F0E181 		bne	.L634	@
 7263              	.L575:
 7264              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7265 01fc 414B     		ldr	r3, .L639+68	@ tmp751,
 7266              	@ main.c:4269: 				if(p_Fifo1->rct) break;
 7267 01fe 334A     		ldr	r2, .L639+12	@ tmp752,
 7268              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7269 0200 1B68     		ldr	r3, [r3]	@ Timt.82_383, Timt
 7270 0202 B168     		ldr	r1, [r6, #8]	@ _384, MEM[(struct SysTick_Type *)3758153744B].VAL
 7271              	@ main.c:4269: 				if(p_Fifo1->rct) break;
 7272 0204 1268     		ldr	r2, [r2]	@ p_Fifo1.241_87, p_Fifo1
 7273              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7274 0206 5B1A     		subs	r3, r3, r1	@ _385, Timt.82_383, _384
 7275 0208 0893     		str	r3, [sp, #32]	@ _385, MEM[(volatile u32 *)&tim]
 7276              	@ main.c:4269: 				if(p_Fifo1->rct) break;
 7277 020a 9388     		ldrh	r3, [r2, #4]	@, p_Fifo1.241_87->rct
 7278              	@ main.c:4266: 					strBlock+=1*16;
 7279 020c 1034     		adds	r4, r4, #16	@ strBlock, strBlock,
 7280              	@ main.c:4269: 				if(p_Fifo1->rct) break;
 7281 020e 9BB2     		uxth	r3, r3	@ _88, p_Fifo1.241_87->rct
 7282 0210 13B9     		cbnz	r3, .L573	@ _88,
 7283              	@ main.c:4258: 			while(strBlock <  31116288 ){
 7284 0212 3E4B     		ldr	r3, .L639+76	@ tmp754,
 7285 0214 9C42     		cmp	r4, r3	@ strBlock, tmp754
 7286 0216 DAD9     		bls	.L572	@,
 7287              	.L573:
 7288              	@ main.c:4272: 			UaPutK("\r\n Block = ");	hex2uart(strBlock,8); hex2uart(crc,4);
 7289 0218 3D48     		ldr	r0, .L639+80	@,
 7290 021a FFF7FEFF 		bl	UaPutK	@
 7291 021e 2046     		mov	r0, r4	@, strBlock
 7292 0220 0821     		movs	r1, #8	@,
 7293 0222 FFF7FEFF 		bl	hex2uart	@
 7294 0226 0421     		movs	r1, #4	@,
 7295 0228 BDF81E00 		ldrh	r0, [sp, #30]	@, crc
 7296 022c FFF7FEFF 		bl	hex2uart	@
ARM GAS  /tmp/cczkEFU1.s 			page 129


 7297              	@ main.c:4273: 			break;
 7298 0230 10E7     		b	.L528	@
 7299              	.L537:
 7300              	@ main.c:4279: 				UaPutK("\r\n SD_Status \r\n ");
 7301 0232 3848     		ldr	r0, .L639+84	@,
 7302 0234 FFF7FEFF 		bl	UaPutK	@
 7303              	@ main.c:4280: 				hex2uart(0,4);
 7304 0238 0421     		movs	r1, #4	@,
 7305 023a 0020     		movs	r0, #0	@,
 7306 023c FFF7FEFF 		bl	hex2uart	@
 7307 0240 0024     		movs	r4, #0	@ ivtmp.660,
 7308              	.L579:
 7309              	@ main.c:4281: 				for(u08 k=0;k<8;k++){ hex2uart(k, 2);	}
 7310 0242 2046     		mov	r0, r4	@, ivtmp.660
 7311 0244 0221     		movs	r1, #2	@,
 7312 0246 0134     		adds	r4, r4, #1	@ ivtmp.660, ivtmp.660,
 7313 0248 FFF7FEFF 		bl	hex2uart	@
 7314 024c 082C     		cmp	r4, #8	@ ivtmp.660,
 7315 024e F8D1     		bne	.L579	@,
 7316              	@ main.c:4282: 				UaPutK("\r\n\n ");
 7317 0250 3148     		ldr	r0, .L639+88	@,
 7318 0252 FFF7FEFF 		bl	UaPutK	@
 7319 0256 4FF00008 		mov	r8, #0	@ ivtmp.657,
 7320 025a 224F     		ldr	r7, .L639+36	@ ivtmp.659,
 7321              	@ main.c:4288: 					UaPutS("  ");
 7322 025c DFF8C0B0 		ldr	fp, .L639+96	@ tmp625,
 7323              	@ main.c:4293: 					UaPutS("\r\n ");
 7324 0260 DFF86CA0 		ldr	r10, .L639+16	@ tmp626,
 7325 0264 07F10806 		add	r6, r7, #8	@ ivtmp.658, ivtmp.659,
 7326              	.L584:
 7327              	@ main.c:4284: 					unt2uart(i*8,4);	UaPutC(' ');
 7328 0268 0421     		movs	r1, #4	@,
 7329 026a 4046     		mov	r0, r8	@, ivtmp.657
 7330 026c FFF7FEFF 		bl	unt2uart	@
 7331 0270 2020     		movs	r0, #32	@,
 7332 0272 FFF7FEFF 		bl	UaPutC	@
 7333 0276 3C46     		mov	r4, r7	@ ivtmp.650, ivtmp.659
 7334              	.L580:
 7335              	@ main.c:4286: 						hex2uart(buffer[k+i], 2);
 7336 0278 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2	@, MEM[base: _425, offset: 0B]
 7337 027c 0221     		movs	r1, #2	@,
 7338 027e FFF7FEFF 		bl	hex2uart	@
 7339              	@ main.c:4285: 					for(u08 k=0;k<8;k++){
 7340 0282 A642     		cmp	r6, r4	@ ivtmp.658, ivtmp.650
 7341 0284 F8D1     		bne	.L580	@,
 7342              	@ main.c:4288: 					UaPutS("  ");
 7343 0286 5846     		mov	r0, fp	@, tmp625
 7344 0288 FFF7FEFF 		bl	UaPutS	@
 7345 028c 3D46     		mov	r5, r7	@ ivtmp.641, ivtmp.659
 7346              	.L583:
 7347              	@ main.c:4290: 						if ( buffer[k+i]<0x20 || buffer[k+i]>127 ) UaPutC('.');
 7348 028e 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2	@ _99, MEM[base: _423, offset: 0B]
 7349 0292 A0F12003 		sub	r3, r0, #32	@ tmp595, _99,
 7350 0296 5F2B     		cmp	r3, #95	@ tmp595,
 7351 0298 88BF     		it	hi
 7352 029a 2E20     		movhi	r0, #46	@,
 7353              	@ main.c:4291: 						else UaPutC(buffer[k+i]);
ARM GAS  /tmp/cczkEFU1.s 			page 130


 7354 029c FFF7FEFF 		bl	UaPutC	@
 7355              	@ main.c:4289: 					for(u08 k=0;k<8;k++){
 7356 02a0 A542     		cmp	r5, r4	@ ivtmp.641, ivtmp.650
 7357 02a2 F4D1     		bne	.L583	@,
 7358 02a4 08F14008 		add	r8, r8, #64	@ ivtmp.657, ivtmp.657,
 7359              	@ main.c:4293: 					UaPutS("\r\n ");
 7360 02a8 5046     		mov	r0, r10	@, tmp626
 7361 02aa FFF7FEFF 		bl	UaPutS	@
 7362              	@ main.c:4283: 				for(u32 i=0;i<64;i+=8){
 7363 02ae B8F5007F 		cmp	r8, #512	@ ivtmp.657,
 7364 02b2 06F10806 		add	r6, r6, #8	@ ivtmp.658, ivtmp.658,
 7365 02b6 07F10807 		add	r7, r7, #8	@ ivtmp.659, ivtmp.659,
 7366 02ba D5D1     		bne	.L584	@,
 7367 02bc CAE6     		b	.L528	@
 7368              	.L640:
 7369 02be 00BF     		.align	2
 7370              	.L639:
 7371 02c0 00000000 		.word	.LANCHOR30
 7372 02c4 00000000 		.word	CardType
 7373 02c8 00000000 		.word	.LC109
 7374 02cc 00000000 		.word	p_Fifo1
 7375 02d0 30000000 		.word	.LC77
 7376 02d4 14030000 		.word	.LC153
 7377 02d8 68020000 		.word	.LC144
 7378 02dc 7C020000 		.word	.LC145
 7379 02e0 94020000 		.word	.LC146
 7380 02e4 00000000 		.word	buffer.8846
 7381 02e8 BC020000 		.word	.LC148
 7382 02ec D0020000 		.word	.LC149
 7383 02f0 8C000000 		.word	.LC115
 7384 02f4 A0000000 		.word	.LC116
 7385 02f8 DC000000 		.word	.LC89
 7386 02fc DC010000 		.word	.LC135
 7387 0300 10E000E0 		.word	-536813552
 7388 0304 00000000 		.word	Timt
 7389 0308 00020000 		.word	.LC137
 7390 030c FFCBDA01 		.word	31116287
 7391 0310 E4020000 		.word	.LC150
 7392 0314 00030000 		.word	.LC152
 7393 0318 34000000 		.word	.LC78
 7394 031c FF010000 		.word	buffer.8846+511
 7395 0320 3C000000 		.word	.LC79
 7396              	.L535:
 7397              	@ main.c:3991: 			dinit=mci_init();
 7398 0324 FFF7FEFF 		bl	mmc_init	@
 7399 0328 AF4B     		ldr	r3, .L641	@ tmp713,
 7400 032a 1870     		strb	r0, [r3]	@ tmp392, dinit
 7401              	@ main.c:3992: 			if(dinit){
 7402 032c 0028     		cmp	r0, #0	@ tmp392
 7403 032e 00F0EF80 		beq	.L561	@
 7404              	.L631:
 7405              	@ main.c:4015: 				if(	mci_read_config (&mmcfg)){
 7406 0332 09A8     		add	r0, sp, #36	@ tmp716,,
 7407 0334 FFF7FEFF 		bl	mmc_read_config	@
 7408 0338 0028     		cmp	r0, #0	@
 7409 033a 3FF48BAE 		beq	.L528	@
 7410              	@ main.c:4016: 					UaPutK("\r\nSD Card ser_num    = "); uint2uart(mmcfg.sernum);
ARM GAS  /tmp/cczkEFU1.s 			page 131


 7411 033e AB48     		ldr	r0, .L641+4	@,
 7412 0340 FFF7FEFF 		bl	UaPutK	@
 7413 0344 0998     		ldr	r0, [sp, #36]	@, mmcfg.sernum
 7414 0346 FFF7FEFF 		bl	uint2uart	@
 7415              	@ main.c:4017: 					UaPutK("\r\nSD Card block_num  = "); uint2uart(mmcfg.blocknr);
 7416 034a A948     		ldr	r0, .L641+8	@,
 7417 034c FFF7FEFF 		bl	UaPutK	@
 7418 0350 0A98     		ldr	r0, [sp, #40]	@, mmcfg.blocknr
 7419 0352 FFF7FEFF 		bl	uint2uart	@
 7420              	@ main.c:4018: 					UaPutK("\r\nSD Card read_blen  = "); uint2uart(mmcfg.read_blen);
 7421 0356 A748     		ldr	r0, .L641+12	@,
 7422 0358 FFF7FEFF 		bl	UaPutK	@
 7423 035c BDF82C00 		ldrh	r0, [sp, #44]	@, mmcfg.read_blen
 7424 0360 FFF7FEFF 		bl	uint2uart	@
 7425              	@ main.c:4019: 					UaPutK("\r\nSD Card write_blen = "); uint2uart(mmcfg.write_blen);
 7426 0364 A448     		ldr	r0, .L641+16	@,
 7427 0366 FFF7FEFF 		bl	UaPutK	@
 7428 036a BDF82E00 		ldrh	r0, [sp, #46]	@, mmcfg.write_blen
 7429 036e FFF7FEFF 		bl	uint2uart	@
 7430 0372 6FE6     		b	.L528	@
 7431              	.L534:
 7432              	@ main.c:4025: 			UaPutK("Fill sector");
 7433 0374 A148     		ldr	r0, .L641+20	@,
 7434 0376 FFF7FEFF 		bl	UaPutK	@
 7435              	@ main.c:4026: 			UaPutK("\r\n Start Block  = 0x");		strBlock=UART_getHex();
 7436 037a A148     		ldr	r0, .L641+24	@,
 7437 037c FFF7FEFF 		bl	UaPutK	@
 7438 0380 FFF7FEFF 		bl	UART_getHex	@
 7439 0384 0446     		mov	r4, r0	@ strBlock,
 7440              	@ main.c:4028: 			UaPutK("\r\n End   Blocks = 0x");		dstBlock=UART_getHex();
 7441 0386 9F48     		ldr	r0, .L641+28	@,
 7442 0388 FFF7FEFF 		bl	UaPutK	@
 7443 038c FFF7FEFF 		bl	UART_getHex	@
 7444              	@ main.c:4029: 			dstBlock = dstBlock > strBlock ? dstBlock - strBlock + 1 : 1;
 7445 0390 8442     		cmp	r4, r0	@ strBlock, dstBlock
 7446 0392 80F02581 		bcs	.L585	@,
 7447              	@ main.c:4029: 			dstBlock = dstBlock > strBlock ? dstBlock - strBlock + 1 : 1;
 7448 0396 0130     		adds	r0, r0, #1	@ tmp423, dstBlock,
 7449 0398 051B     		subs	r5, r0, r4	@ iftmp.219_131, tmp423, strBlock
 7450 039a 05F1FF3B 		add	fp, r5, #-1	@ prephitmp_139, iftmp.219_131,
 7451              	.L546:
 7452              	@ main.c:4031: 			UaPutK("\r\n Num Blocks   = ");				uint2uart(dstBlock);
 7453 039e 9A48     		ldr	r0, .L641+32	@,
 7454 03a0 FFF7FEFF 		bl	UaPutK	@
 7455 03a4 2846     		mov	r0, r5	@, iftmp.219_131
 7456 03a6 FFF7FEFF 		bl	uint2uart	@
 7457              	@ main.c:4032: 			UaPutK("\r\n Data to fill = 0x");
 7458 03aa 9848     		ldr	r0, .L641+36	@,
 7459 03ac FFF7FEFF 		bl	UaPutK	@
 7460              	@ main.c:4033: 			znak=UART_getHex();
 7461 03b0 FFF7FEFF 		bl	UART_getHex	@
 7462 03b4 964B     		ldr	r3, .L641+40	@ ivtmp.631,
 7463 03b6 C0B2     		uxtb	r0, r0	@ znak,
 7464              	.L547:
 7465              	@ main.c:4035: 				buffer[i] = znak;
 7466 03b8 03F8010F 		strb	r0, [r3, #1]!	@ znak, MEM[base: _101, offset: 0B]
 7467              	@ main.c:4034: 			for(u32 i=0;i<512;i++){
ARM GAS  /tmp/cczkEFU1.s 			page 132


 7468 03bc 4B45     		cmp	r3, r9	@ ivtmp.631, _443
 7469 03be FBD1     		bne	.L547	@,
 7470              	@ main.c:4037: 			while(dstBlock--){
 7471 03c0 002D     		cmp	r5, #0	@ iftmp.219_131
 7472 03c2 3FF447AE 		beq	.L528	@
 7473 03c6 651C     		adds	r5, r4, #1	@ strBlock, strBlock,
 7474              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7475 03c8 924F     		ldr	r7, .L641+44	@ tmp429,
 7476              	@ main.c:4040: 				d = mci_write_sect(strBlock, buffer, 1);
 7477 03ca DFF88482 		ldr	r8, .L641+104	@ tmp620,
 7478              	@ main.c:4048: 						UaPutS("\r\n Fill OK ");
 7479 03ce DFF8A8A2 		ldr	r10, .L641+144	@ tmp621,
 7480 03d2 AB44     		add	fp, fp, r5	@ _134, strBlock
 7481 03d4 07E0     		b	.L550	@
 7482              	.L548:
 7483              	@ main.c:4046: 					if(!(strBlock%1024)){
 7484 03d6 002A     		cmp	r2, #0	@ tmp434
 7485 03d8 00F0DB80 		beq	.L635	@
 7486              	.L549:
 7487              	@ main.c:4037: 			while(dstBlock--){
 7488 03dc AB45     		cmp	fp, r5	@ _134, strBlock
 7489              	@ main.c:4054: 				strBlock++;
 7490 03de 2C46     		mov	r4, r5	@ strBlock, strBlock
 7491              	@ main.c:4037: 			while(dstBlock--){
 7492 03e0 3FF438AE 		beq	.L528	@,
 7493 03e4 0135     		adds	r5, r5, #1	@ strBlock, strBlock,
 7494              	.L550:
 7495              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7496 03e6 BB68     		ldr	r3, [r7, #8]	@ _366, MEM[(struct SysTick_Type *)3758153744B].VAL
 7497 03e8 8B4E     		ldr	r6, .L641+48	@ tmp717,
 7498              	@ main.c:4040: 				d = mci_write_sect(strBlock, buffer, 1);
 7499 03ea 0122     		movs	r2, #1	@,
 7500 03ec 4146     		mov	r1, r8	@, tmp620
 7501 03ee 2046     		mov	r0, r4	@, strBlock
 7502              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7503 03f0 3360     		str	r3, [r6]	@ _366, Timt
 7504              	@ main.c:4040: 				d = mci_write_sect(strBlock, buffer, 1);
 7505 03f2 FFF7FEFF 		bl	mmc_write_sect	@
 7506              	@ main.c:4046: 					if(!(strBlock%1024)){
 7507 03f6 C4F30902 		ubfx	r2, r4, #0, #10	@ tmp434, strBlock,,
 7508              	@ main.c:4041: 				if(d==0) {
 7509 03fa 0646     		mov	r6, r0	@ tmp432,
 7510 03fc 0028     		cmp	r0, #0	@ tmp432
 7511 03fe EAD1     		bne	.L548	@
 7512              	@ main.c:4042: 					UaPutS("\r\n Fill error = 0x");
 7513 0400 8648     		ldr	r0, .L641+52	@,
 7514 0402 FFF7FEFF 		bl	UaPutS	@
 7515              	@ main.c:4043: 					hex2uart(strBlock,8); hex2uart(d,2);
 7516 0406 2046     		mov	r0, r4	@, strBlock
 7517 0408 0821     		movs	r1, #8	@,
 7518 040a FFF7FEFF 		bl	hex2uart	@
 7519 040e 3046     		mov	r0, r6	@, tmp432
 7520 0410 0221     		movs	r1, #2	@,
 7521 0412 FFF7FEFF 		bl	hex2uart	@
 7522 0416 E1E7     		b	.L549	@
 7523              	.L533:
 7524              	@ main.c:4077: 			UaPutK("Copy memory");
ARM GAS  /tmp/cczkEFU1.s 			page 133


 7525 0418 8148     		ldr	r0, .L641+56	@,
 7526 041a FFF7FEFF 		bl	UaPutK	@
 7527              	@ main.c:4078: 			UaPutK("\r\n Src Mem adr = 0x");	strBlock=UART_getHex();
 7528 041e 8148     		ldr	r0, .L641+60	@,
 7529 0420 FFF7FEFF 		bl	UaPutK	@
 7530 0424 FFF7FEFF 		bl	UART_getHex	@
 7531 0428 0446     		mov	r4, r0	@ strBlock,
 7532              	@ main.c:4079: 			UaPutK("\r\n How many byte = ");	lenBlock=UART_getNum();
 7533 042a 7F48     		ldr	r0, .L641+64	@,
 7534 042c FFF7FEFF 		bl	UaPutK	@
 7535 0430 FFF7FEFF 		bl	UART_getNum	@
 7536 0434 8246     		mov	r10, r0	@ _38,
 7537              	@ main.c:4080: 			UaPutK("\r\n Dst mem adr = 0x");	dstBlock=UART_getHex();
 7538 0436 7D48     		ldr	r0, .L641+68	@,
 7539 0438 FFF7FEFF 		bl	UaPutK	@
 7540 043c FFF7FEFF 		bl	UART_getHex	@
 7541              	@ main.c:4083: 			for(u32 bl=(dstBlock/512);bl <= ((dstBlock+lenBlock-1)/512); bl++){
 7542 0440 8244     		add	r10, r10, r0	@ _130, dstBlock
 7543 0442 0AF1FF37 		add	r7, r10, #-1	@ tmp460, _130,
 7544 0446 7F0A     		lsrs	r7, r7, #9	@ _129, tmp460,
 7545 0448 4FEA502B 		lsr	fp, r0, #9	@ bl, dstBlock,
 7546 044c 5F45     		cmp	r7, fp	@ _129, bl
 7547              	@ main.c:4082: 			u32 dbl = dstBlock%512, sBlk=strBlock/512, sMem=strBlock%512;
 7548 044e 4FEA5426 		lsr	r6, r4, #9	@ sBlk, strBlock,
 7549 0452 C0F30805 		ubfx	r5, r0, #0, #9	@ dbl, dstBlock,,
 7550 0456 C4F30804 		ubfx	r4, r4, #0, #9	@ sMem, strBlock,,
 7551              	@ main.c:4083: 			for(u32 bl=(dstBlock/512);bl <= ((dstBlock+lenBlock-1)/512); bl++){
 7552 045a FFF4FBAD 		bcc	.L528	@,
 7553              	@ main.c:4093: 					if (bl == ((dstBlock+lenBlock)/512))	hex2uart((dstBlock+lenBlock)%512, 3);		//L
 7554 045e 4FEA5A23 		lsr	r3, r10, #9	@ _43, _130,
 7555 0462 0293     		str	r3, [sp, #8]	@ _43, %sfp
 7556 0464 5346     		mov	r3, r10	@ _130, _130
 7557              	@ main.c:4084: 				if (mci_read_sect(bl,buffer,1)){
 7558 0466 DFF8E881 		ldr	r8, .L641+104	@ tmp617,
 7559              	@ main.c:4093: 					if (bl == ((dstBlock+lenBlock)/512))	hex2uart((dstBlock+lenBlock)%512, 3);		//L
 7560 046a DA46     		mov	r10, fp	@ bl, bl
 7561 046c 9B46     		mov	fp, r3	@ _130, _130
 7562 046e 04E0     		b	.L553	@
 7563              	.L551:
 7564              	@ main.c:4083: 			for(u32 bl=(dstBlock/512);bl <= ((dstBlock+lenBlock-1)/512); bl++){
 7565 0470 0AF1010A 		add	r10, r10, #1	@ bl, bl,
 7566 0474 5745     		cmp	r7, r10	@ _129, bl
 7567 0476 FFF4EDAD 		bcc	.L528	@,
 7568              	.L553:
 7569              	@ main.c:4084: 				if (mci_read_sect(bl,buffer,1)){
 7570 047a 0122     		movs	r2, #1	@,
 7571 047c 4146     		mov	r1, r8	@, tmp617
 7572 047e 5046     		mov	r0, r10	@, bl
 7573 0480 FFF7FEFF 		bl	mmc_read_sect	@
 7574 0484 0028     		cmp	r0, #0	@
 7575 0486 F3D0     		beq	.L551	@
 7576              	@ main.c:4085: 					UaPutK("\r\n ReadB 0x");							hex2uart(sBlk++,3);
 7577 0488 6948     		ldr	r0, .L641+72	@,
 7578 048a FFF7FEFF 		bl	UaPutK	@
 7579 048e 0321     		movs	r1, #3	@,
 7580 0490 3046     		mov	r0, r6	@, sBlk
 7581 0492 FFF7FEFF 		bl	hex2uart	@
ARM GAS  /tmp/cczkEFU1.s 			page 134


 7582 0496 0136     		adds	r6, r6, #1	@ sBlk, sBlk,
 7583              	@ main.c:4086: 					UaPutC(',');													hex2uart(sBlk, 	3);
 7584 0498 2C20     		movs	r0, #44	@,
 7585 049a FFF7FEFF 		bl	UaPutC	@
 7586 049e 0321     		movs	r1, #3	@,
 7587 04a0 3046     		mov	r0, r6	@, sBlk
 7588 04a2 FFF7FEFF 		bl	hex2uart	@
 7589              	@ main.c:4087: 					UaPutK("  From 0x");							    hex2uart(sMem, 	3);
 7590 04a6 6348     		ldr	r0, .L641+76	@,
 7591 04a8 FFF7FEFF 		bl	UaPutK	@
 7592 04ac 0321     		movs	r1, #3	@,
 7593 04ae 2046     		mov	r0, r4	@, sMem
 7594 04b0 FFF7FEFF 		bl	hex2uart	@
 7595 04b4 04F50074 		add	r4, r4, #512	@ _445, sMem,
 7596              	@ main.c:4089: 					UaPutK("->0x");											  hex2uart(sMem + (0x200-dbl), 3);
 7597 04b8 5F48     		ldr	r0, .L641+80	@,
 7598 04ba FFF7FEFF 		bl	UaPutK	@
 7599              	@ main.c:4088: 					sMem = sMem + (0x200-dbl);
 7600 04be 641B     		subs	r4, r4, r5	@ sMem, _445, dbl
 7601              	@ main.c:4089: 					UaPutK("->0x");											  hex2uart(sMem + (0x200-dbl), 3);
 7602 04c0 C5F50070 		rsb	r0, r5, #512	@ tmp466, dbl,
 7603 04c4 0321     		movs	r1, #3	@,
 7604 04c6 2044     		add	r0, r0, r4	@, sMem
 7605 04c8 FFF7FEFF 		bl	hex2uart	@
 7606              	@ main.c:4090: 					UaPutK("  WriteB 0x");								hex2uart(bl, 		3);
 7607 04cc 5B48     		ldr	r0, .L641+84	@,
 7608 04ce FFF7FEFF 		bl	UaPutK	@
 7609 04d2 0321     		movs	r1, #3	@,
 7610 04d4 5046     		mov	r0, r10	@, bl
 7611 04d6 FFF7FEFF 		bl	hex2uart	@
 7612              	@ main.c:4091: 					UaPutK("  0x");					  						hex2uart(dbl, 	3);
 7613 04da 5948     		ldr	r0, .L641+88	@,
 7614 04dc FFF7FEFF 		bl	UaPutK	@
 7615 04e0 2846     		mov	r0, r5	@, dbl
 7616 04e2 0321     		movs	r1, #3	@,
 7617 04e4 FFF7FEFF 		bl	hex2uart	@
 7618              	@ main.c:4092: 					UaPutK("->0x");
 7619 04e8 5348     		ldr	r0, .L641+80	@,
 7620 04ea FFF7FEFF 		bl	UaPutK	@
 7621              	@ main.c:4093: 					if (bl == ((dstBlock+lenBlock)/512))	hex2uart((dstBlock+lenBlock)%512, 3);		//L
 7622 04ee 029B     		ldr	r3, [sp, #8]	@ _43, %sfp
 7623 04f0 0321     		movs	r1, #3	@,
 7624 04f2 5345     		cmp	r3, r10	@ _43, bl
 7625 04f4 0CBF     		ite	eq
 7626 04f6 CBF30800 		ubfxeq	r0, fp, #0, #9	@, _130,,
 7627              	@ main.c:4094: 					else																	hex2uart(0x200, 3);
 7628 04fa 4FF40070 		movne	r0, #512	@,
 7629 04fe FFF7FEFF 		bl	hex2uart	@
 7630              	@ main.c:4095: 					dbl = 0;
 7631 0502 0025     		movs	r5, #0	@ dbl,
 7632 0504 B4E7     		b	.L551	@
 7633              	.L531:
 7634              	@ main.c:4149: 			if(CardType){
 7635 0506 039B     		ldr	r3, [sp, #12]	@ tmp612, %sfp
 7636 0508 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2	@ CardType, CardType
 7637 050a 002B     		cmp	r3, #0	@ CardType
 7638 050c 40F02081 		bne	.L636	@
ARM GAS  /tmp/cczkEFU1.s 			page 135


 7639              	.L561:
 7640              	@ main.c:4192: 			} else UaPutK("\r\nSD Card Init ERROR ");
 7641 0510 4C48     		ldr	r0, .L641+92	@,
 7642 0512 FFF7FEFF 		bl	UaPutK	@
 7643 0516 9DE5     		b	.L528	@
 7644              	.L536:
 7645              	@ main.c:4060: 			UaPutS("Modify memory");
 7646 0518 4B48     		ldr	r0, .L641+96	@,
 7647 051a FFF7FEFF 		bl	UaPutS	@
 7648              	@ main.c:4061: 			UaPutS("\r\n Memory Addr = 0x");
 7649 051e 4B48     		ldr	r0, .L641+100	@,
 7650 0520 FFF7FEFF 		bl	UaPutS	@
 7651              	@ main.c:4063: 			strBlock=UART_getHex();
 7652 0524 FFF7FEFF 		bl	UART_getHex	@
 7653              	@ main.c:4065: 			if (mci_read_sect	(strBlock/512, buffer, 1)){
 7654 0528 450A     		lsrs	r5, r0, #9	@ _31, strBlock,
 7655              	@ main.c:4063: 			strBlock=UART_getHex();
 7656 052a 0446     		mov	r4, r0	@ strBlock,
 7657              	@ main.c:4065: 			if (mci_read_sect	(strBlock/512, buffer, 1)){
 7658 052c 0122     		movs	r2, #1	@,
 7659 052e 2846     		mov	r0, r5	@, _31
 7660 0530 4749     		ldr	r1, .L641+104	@,
 7661 0532 FFF7FEFF 		bl	mmc_read_sect	@
 7662 0536 0028     		cmp	r0, #0	@
 7663 0538 3FF48CAD 		beq	.L528	@
 7664              	@ main.c:4066: 				UaPutS("\r\n Memory Data = 0x");
 7665 053c 4548     		ldr	r0, .L641+108	@,
 7666 053e FFF7FEFF 		bl	UaPutS	@
 7667              	@ main.c:4067: 				hex2uart(buffer[strBlock%512], 2);
 7668 0542 059E     		ldr	r6, [sp, #20]	@ ivtmp.659, %sfp
 7669 0544 C4F30804 		ubfx	r4, r4, #0, #9	@ _33, strBlock,,
 7670 0548 0221     		movs	r1, #2	@,
 7671 054a 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2	@, buffer
 7672 054c FFF7FEFF 		bl	hex2uart	@
 7673              	@ main.c:4068: 				UaPutS("\r\n New Data    = 0x");
 7674 0550 4148     		ldr	r0, .L641+112	@,
 7675 0552 FFF7FEFF 		bl	UaPutS	@
 7676              	@ main.c:4069: 				StrBlock=UART_getHex();
 7677 0556 FFF7FEFF 		bl	UART_getHex	@
 7678              	@ main.c:4072: 				if (mci_write_sect		(strBlock/512, buffer,1))  UaPutS("\r\n Modify OK");
 7679 055a 0122     		movs	r2, #1	@,
 7680              	@ main.c:4070: 				buffer[strBlock%512] = StrBlock;
 7681 055c 3055     		strb	r0, [r6, r4]	@, buffer
 7682              	@ main.c:4072: 				if (mci_write_sect		(strBlock/512, buffer,1))  UaPutS("\r\n Modify OK");
 7683 055e 3C49     		ldr	r1, .L641+104	@,
 7684 0560 2846     		mov	r0, r5	@, _31
 7685 0562 FFF7FEFF 		bl	mmc_write_sect	@
 7686 0566 0028     		cmp	r0, #0	@
 7687 0568 3FF474AD 		beq	.L528	@
 7688              	@ main.c:4072: 				if (mci_write_sect		(strBlock/512, buffer,1))  UaPutS("\r\n Modify OK");
 7689 056c 3B48     		ldr	r0, .L641+116	@,
 7690 056e FFF7FEFF 		bl	UaPutS	@
 7691 0572 6FE5     		b	.L528	@
 7692              	.L530:
 7693              	@ main.c:4303: 			UaPutK("Unkr_dma_buf Command !");
 7694 0574 3A48     		ldr	r0, .L641+120	@,
 7695 0576 FFF7FEFF 		bl	UaPutK	@
ARM GAS  /tmp/cczkEFU1.s 			page 136


 7696              	@ main.c:4304: 			break;
 7697 057a 6BE5     		b	.L528	@
 7698              	.L574:
 7699              	@ main.c:4268: 				} else UaPutK("\r\n Read Error ");
 7700 057c 3948     		ldr	r0, .L641+124	@,
 7701 057e FFF7FEFF 		bl	UaPutK	@
 7702              	@ main.c:4269: 				if(p_Fifo1->rct) break;
 7703 0582 394B     		ldr	r3, .L641+128	@ tmp753,
 7704 0584 1B68     		ldr	r3, [r3]	@ p_Fifo1.241_492, p_Fifo1
 7705 0586 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.241_492->rct
 7706 0588 9BB2     		uxth	r3, r3	@ _493, p_Fifo1.241_492->rct
 7707 058a 002B     		cmp	r3, #0	@ _493
 7708 058c 3FF41FAE 		beq	.L572	@
 7709 0590 42E6     		b	.L573	@
 7710              	.L635:
 7711              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7712 0592 214B     		ldr	r3, .L641+48	@ tmp718,
 7713              	@ main.c:4048: 						UaPutS("\r\n Fill OK ");
 7714 0594 5046     		mov	r0, r10	@, tmp621
 7715              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7716 0596 1E68     		ldr	r6, [r3]	@ Timt.82_367, Timt
 7717 0598 BB68     		ldr	r3, [r7, #8]	@ _368, MEM[(struct SysTick_Type *)3758153744B].VAL
 7718 059a 0292     		str	r2, [sp, #8]	@ tmp434, %sfp
 7719 059c F61A     		subs	r6, r6, r3	@ _369, Timt.82_367, _368
 7720 059e 0896     		str	r6, [sp, #32]	@ _369, MEM[(volatile u32 *)&tim]
 7721              	@ main.c:4048: 						UaPutS("\r\n Fill OK ");
 7722 05a0 FFF7FEFF 		bl	UaPutS	@
 7723              	@ main.c:4049: 						hex2uart(strBlock,  8);
 7724 05a4 2046     		mov	r0, r4	@, strBlock
 7725 05a6 0821     		movs	r1, #8	@,
 7726 05a8 FFF7FEFF 		bl	hex2uart	@
 7727              	@ main.c:4050: 						UaPutS(" Time[us] = " );
 7728 05ac 2F48     		ldr	r0, .L641+132	@,
 7729 05ae FFF7FEFF 		bl	UaPutS	@
 7730              	@ main.c:4051: 						num2uart(tim, 8,0);
 7731 05b2 029A     		ldr	r2, [sp, #8]	@ tmp434, %sfp
 7732 05b4 3046     		mov	r0, r6	@, _369
 7733 05b6 0821     		movs	r1, #8	@,
 7734 05b8 FFF7FEFF 		bl	num2uart	@
 7735 05bc 0EE7     		b	.L549	@
 7736              	.L634:
 7737              	@ main.c:4264: 						UaPutK("\r\n Block = ");	hex2uart(strBlock,8); hex2uart(crc,4);
 7738 05be 2C48     		ldr	r0, .L641+136	@,
 7739 05c0 FFF7FEFF 		bl	UaPutK	@
 7740 05c4 2046     		mov	r0, r4	@, strBlock
 7741 05c6 0821     		movs	r1, #8	@,
 7742 05c8 FFF7FEFF 		bl	hex2uart	@
 7743 05cc 0421     		movs	r1, #4	@,
 7744 05ce BDF81E00 		ldrh	r0, [sp, #30]	@, crc
 7745 05d2 FFF7FEFF 		bl	hex2uart	@
 7746 05d6 11E6     		b	.L575	@
 7747              	.L632:
 7748              	@ main.c:4209: 					UaPutK("\r\n Exit Read Error !!!");
 7749 05d8 2648     		ldr	r0, .L641+140	@,
 7750 05da FFF7FEFF 		bl	UaPutK	@
 7751              	@ main.c:4210: 					break;
 7752 05de A6E5     		b	.L569	@
ARM GAS  /tmp/cczkEFU1.s 			page 137


 7753              	.L585:
 7754 05e0 4FF0000B 		mov	fp, #0	@ prephitmp_139,
 7755              	@ main.c:4029: 			dstBlock = dstBlock > strBlock ? dstBlock - strBlock + 1 : 1;
 7756 05e4 0125     		movs	r5, #1	@ iftmp.219_131,
 7757 05e6 DAE6     		b	.L546	@
 7758              	.L642:
 7759              		.align	2
 7760              	.L641:
 7761 05e8 00000000 		.word	.LANCHOR30
 7762 05ec 2C000000 		.word	.LC111
 7763 05f0 44000000 		.word	.LC112
 7764 05f4 5C000000 		.word	.LC113
 7765 05f8 74000000 		.word	.LC114
 7766 05fc B4000000 		.word	.LC117
 7767 0600 C0000000 		.word	.LC118
 7768 0604 D8000000 		.word	.LC119
 7769 0608 F0000000 		.word	.LC120
 7770 060c 04010000 		.word	.LC121
 7771 0610 FFFFFFFF 		.word	buffer.8846-1
 7772 0614 10E000E0 		.word	-536813552
 7773 0618 00000000 		.word	Timt
 7774 061c 1C010000 		.word	.LC122
 7775 0620 20000000 		.word	.LC100
 7776 0624 2C000000 		.word	.LC101
 7777 0628 40000000 		.word	.LC102
 7778 062c 54000000 		.word	.LC103
 7779 0630 A8010000 		.word	.LC130
 7780 0634 B4010000 		.word	.LC131
 7781 0638 C0010000 		.word	.LC132
 7782 063c C8010000 		.word	.LC133
 7783 0640 D4010000 		.word	.LC134
 7784 0644 14000000 		.word	.LC110
 7785 0648 4C010000 		.word	.LC125
 7786 064c 5C010000 		.word	.LC126
 7787 0650 00000000 		.word	buffer.8846
 7788 0654 70010000 		.word	.LC127
 7789 0658 84010000 		.word	.LC128
 7790 065c 98010000 		.word	.LC129
 7791 0660 20030000 		.word	.LC154
 7792 0664 F0020000 		.word	.LC151
 7793 0668 00000000 		.word	p_Fifo1
 7794 066c 3C010000 		.word	.LC124
 7795 0670 E4020000 		.word	.LC150
 7796 0674 A4020000 		.word	.LC147
 7797 0678 30010000 		.word	.LC123
 7798              	.L633:
 7799              	@ main.c:4117: 				UaPutS("\r\n ");
 7800 067c 7548     		ldr	r0, .L643	@,
 7801 067e FFF7FEFF 		bl	UaPutS	@
 7802              	@ main.c:4118: 				hex2uart(strBlock, 8);
 7803 0682 0821     		movs	r1, #8	@,
 7804 0684 3846     		mov	r0, r7	@, strBlock
 7805 0686 FFF7FEFF 		bl	hex2uart	@
 7806 068a 0024     		movs	r4, #0	@ ivtmp.693,
 7807              	.L555:
 7808              	@ main.c:4120: 					hex2uart(k, 2);
 7809 068c 2046     		mov	r0, r4	@, ivtmp.693
ARM GAS  /tmp/cczkEFU1.s 			page 138


 7810 068e 0221     		movs	r1, #2	@,
 7811 0690 0134     		adds	r4, r4, #1	@ ivtmp.693, ivtmp.693,
 7812 0692 FFF7FEFF 		bl	hex2uart	@
 7813              	@ main.c:4119: 				for(u08 k=0;k<16;k++){
 7814 0696 102C     		cmp	r4, #16	@ ivtmp.693,
 7815 0698 F8D1     		bne	.L555	@,
 7816 069a 6F4D     		ldr	r5, .L643+4	@ _474,
 7817              	@ main.c:4122: 				UaPutS("\r\n\n ");
 7818 069c 6F48     		ldr	r0, .L643+8	@,
 7819              	@ main.c:4128: 					UaPutS("  ");
 7820 069e DFF80CA2 		ldr	r10, .L643+88	@ tmp631,
 7821              	@ main.c:4133: 					UaPutS("\r\n ");
 7822 06a2 DFF8B081 		ldr	r8, .L643	@ tmp632,
 7823              	@ main.c:4122: 				UaPutS("\r\n\n ");
 7824 06a6 FFF7FEFF 		bl	UaPutS	@
 7825              	@ main.c:4124: 					hex2uart(strBlock*512 + i, 8);
 7826 06aa 2E46     		mov	r6, r5	@ ivtmp.692, ivtmp.659
 7827 06ac 0595     		str	r5, [sp, #20]	@ ivtmp.659, %sfp
 7828 06ae C5EB4727 		rsb	r7, r5, r7, lsl #9	@ tmp603, ivtmp.659, strBlock,
 7829 06b2 1035     		adds	r5, r5, #16	@ ivtmp.691, _474,
 7830              	.L560:
 7831 06b4 0821     		movs	r1, #8	@,
 7832 06b6 B819     		adds	r0, r7, r6	@, tmp603, ivtmp.692
 7833 06b8 FFF7FEFF 		bl	hex2uart	@
 7834 06bc 3446     		mov	r4, r6	@ ivtmp.683, ivtmp.692
 7835              	.L556:
 7836              	@ main.c:4126: 						hex2uart(buffer[k+i], 2);
 7837 06be 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2	@, MEM[base: _428, offset: 0B]
 7838 06c2 0221     		movs	r1, #2	@,
 7839 06c4 FFF7FEFF 		bl	hex2uart	@
 7840              	@ main.c:4125: 					for(u08 k=0;k<16;k++){
 7841 06c8 AC42     		cmp	r4, r5	@ ivtmp.683, ivtmp.691
 7842 06ca F8D1     		bne	.L556	@,
 7843              	@ main.c:4128: 					UaPutS("  ");
 7844 06cc 5046     		mov	r0, r10	@, tmp631
 7845 06ce FFF7FEFF 		bl	UaPutS	@
 7846 06d2 B346     		mov	fp, r6	@ ivtmp.674, ivtmp.692
 7847              	.L559:
 7848              	@ main.c:4130: 						if ( buffer[k+i]<0x20 || buffer[k+i]>126 ) UaPutC('.');
 7849 06d4 1BF8010B 		ldrb	r0, [fp], #1	@ zero_extendqisi2	@ _58, MEM[base: _413, offset: 0B]
 7850 06d8 A0F12003 		sub	r3, r0, #32	@ tmp487, _58,
 7851 06dc 5E2B     		cmp	r3, #94	@ tmp487,
 7852 06de 88BF     		it	hi
 7853 06e0 2E20     		movhi	r0, #46	@,
 7854              	@ main.c:4131: 						else UaPutC(buffer[k+i]);
 7855 06e2 FFF7FEFF 		bl	UaPutC	@
 7856              	@ main.c:4129: 					for(u08 k=0;k<16;k++){
 7857 06e6 A345     		cmp	fp, r4	@ ivtmp.674, ivtmp.683
 7858 06e8 F4D1     		bne	.L559	@,
 7859              	@ main.c:4133: 					UaPutS("\r\n ");
 7860 06ea 4046     		mov	r0, r8	@, tmp632
 7861 06ec FFF7FEFF 		bl	UaPutS	@
 7862              	@ main.c:4123: 				for(u32 i=0;i<512;i+=16){
 7863 06f0 5B4B     		ldr	r3, .L643+12	@ tmp733,
 7864 06f2 1036     		adds	r6, r6, #16	@ ivtmp.692, ivtmp.692,
 7865 06f4 9E42     		cmp	r6, r3	@ ivtmp.692, tmp733
 7866 06f6 05F11005 		add	r5, r5, #16	@ ivtmp.691, ivtmp.691,
ARM GAS  /tmp/cczkEFU1.s 			page 139


 7867 06fa DBD1     		bne	.L560	@,
 7868              	@ main.c:4135: 				UaPutK(" t_rsdio = ");	uint2uart(tim/TIM_US);
 7869 06fc 5948     		ldr	r0, .L643+16	@,
 7870 06fe FFF7FEFF 		bl	UaPutK	@
 7871 0702 594E     		ldr	r6, .L643+20	@ tmp735,
 7872 0704 029B     		ldr	r3, [sp, #8]	@ _372, %sfp
 7873              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7874 0706 594D     		ldr	r5, .L643+24	@ tmp493,
 7875              	@ main.c:4135: 				UaPutK(" t_rsdio = ");	uint2uart(tim/TIM_US);
 7876 0708 A6FB0330 		umull	r3, r0, r6, r3	@ tmp697, tmp491, tmp735, _372
 7877 070c 4008     		lsrs	r0, r0, #1	@, tmp491,
 7878 070e FFF7FEFF 		bl	uint2uart	@
 7879              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7880 0712 574C     		ldr	r4, .L643+28	@ tmp738,
 7881 0714 AB68     		ldr	r3, [r5, #8]	@ _377, MEM[(struct SysTick_Type *)3758153744B].VAL
 7882              	@ main.c:4137: 				crc16_spi2( (u16*) buffer,256, &crc );
 7883 0716 0DF11E02 		add	r2, sp, #30	@ tmp737,,
 7884 071a 4FF48071 		mov	r1, #256	@,
 7885 071e 4E48     		ldr	r0, .L643+4	@,
 7886              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7887 0720 2360     		str	r3, [r4]	@ _377, Timt
 7888              	@ main.c:4137: 				crc16_spi2( (u16*) buffer,256, &crc );
 7889 0722 FFF7FEFF 		bl	crc16_spi2	@
 7890              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7891 0726 2468     		ldr	r4, [r4]	@ Timt.82_374, Timt
 7892 0728 AB68     		ldr	r3, [r5, #8]	@ _375, MEM[(struct SysTick_Type *)3758153744B].VAL
 7893              	@ main.c:4140: 				UaPutK(" crc = ");	hex2uart(crc,4);
 7894 072a 5248     		ldr	r0, .L643+32	@,
 7895              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7896 072c E41A     		subs	r4, r4, r3	@ _376, Timt.82_374, _375
 7897 072e 0894     		str	r4, [sp, #32]	@ _376, MEM[(volatile u32 *)&tim]
 7898              	@ main.c:4140: 				UaPutK(" crc = ");	hex2uart(crc,4);
 7899 0730 FFF7FEFF 		bl	UaPutK	@
 7900 0734 0421     		movs	r1, #4	@,
 7901 0736 BDF81E00 		ldrh	r0, [sp, #30]	@, crc
 7902 073a FFF7FEFF 		bl	hex2uart	@
 7903              	@ main.c:4141: 				UaPutK(" t_crc = ");	uint2uart(tim/TIM_US);
 7904 073e 4E48     		ldr	r0, .L643+36	@,
 7905 0740 FFF7FEFF 		bl	UaPutK	@
 7906 0744 A6FB0430 		umull	r3, r0, r6, r4	@ tmp698, tmp503, tmp740, _376
 7907 0748 4008     		lsrs	r0, r0, #1	@, tmp503,
 7908 074a FFF7FEFF 		bl	uint2uart	@
 7909 074e 81E4     		b	.L528	@
 7910              	.L636:
 7911              	@ main.c:4157: 				x=0;
 7912 0750 0024     		movs	r4, #0	@ x,
 7913              	@ main.c:4150: 				UaPutK("Read multi sector");
 7914 0752 4A48     		ldr	r0, .L643+40	@,
 7915 0754 FFF7FEFF 		bl	UaPutK	@
 7916              	@ main.c:4156: 				UaPutK("\r\n Num Sectors  = ");			uint2uart(dstBlock);
 7917 0758 4948     		ldr	r0, .L643+44	@,
 7918 075a FFF7FEFF 		bl	UaPutK	@
 7919 075e 4948     		ldr	r0, .L643+48	@,
 7920 0760 FFF7FEFF 		bl	uint2uart	@
 7921              	@ main.c:4158: 				TFT_Clear(BLACK);
 7922 0764 2046     		mov	r0, r4	@, x
 7923 0766 FFF7FEFF 		bl	TFT_Clear	@
ARM GAS  /tmp/cczkEFU1.s 			page 140


 7924              	@ main.c:4153: 				strBlock = 0;
 7925 076a 2646     		mov	r6, r4	@ strBlock, x
 7926              	@ main.c:4161: 					d = mci_read_sect (strBlock,buffer,1);
 7927 076c 3A4F     		ldr	r7, .L643+4	@ tmp614,
 7928 076e DDF81080 		ldr	r8, [sp, #16]	@ y1, %sfp
 7929 0772 1BE0     		b	.L567	@
 7930              	.L638:
 7931              	@ main.c:4180: 								TFT_dy( x, y1, y2, YELLOW, 0);
 7932 0774 0020     		movs	r0, #0	@ tmp529,
 7933 0776 4FF6E073 		movw	r3, #65504	@,
 7934 077a 0090     		str	r0, [sp]	@ tmp529,
 7935 077c 2046     		mov	r0, r4	@, x
 7936 077e FFF7FEFF 		bl	TFT_dy	@
 7937              	.L566:
 7938              	@ main.c:4186: 							x = (x+1)%(wXmax-wXmin);
 7939 0782 414B     		ldr	r3, .L643+52	@ tmp746,
 7940 0784 0134     		adds	r4, r4, #1	@ tmp530, x,
 7941 0786 A3FB0423 		umull	r2, r3, r3, r4	@ tmp700, tmp531, tmp746, tmp530
 7942 078a 5B09     		lsrs	r3, r3, #5	@ _76, tmp531,
 7943 078c 03EBC302 		add	r2, r3, r3, lsl #3	@ tmp535, _76, _76,
 7944 0790 C3EB4213 		rsb	r3, r3, r2, lsl #5	@ tmp537, _76, tmp535,
 7945 0794 E31A     		subs	r3, r4, r3	@ _76, tmp530, tmp537
 7946 0796 9CB2     		uxth	r4, r3	@ x, _76
 7947              	.L563:
 7948              	@ main.c:4190: 					if(p_Fifo1->rct) break;
 7949 0798 3C4B     		ldr	r3, .L643+56	@ tmp747,
 7950              	@ main.c:4159: 				while(dstBlock--){
 7951 079a 3A4A     		ldr	r2, .L643+48	@ tmp550,
 7952              	@ main.c:4190: 					if(p_Fifo1->rct) break;
 7953 079c 1B68     		ldr	r3, [r3]	@ p_Fifo1.235_77, p_Fifo1
 7954              	@ main.c:4189: 					strBlock++;
 7955 079e 0136     		adds	r6, r6, #1	@ strBlock, strBlock,
 7956              	@ main.c:4190: 					if(p_Fifo1->rct) break;
 7957 07a0 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.235_77->rct
 7958 07a2 9BB2     		uxth	r3, r3	@ _78, p_Fifo1.235_77->rct
 7959 07a4 002B     		cmp	r3, #0	@ _78
 7960 07a6 3BD1     		bne	.L627	@
 7961              	@ main.c:4159: 				while(dstBlock--){
 7962 07a8 9642     		cmp	r6, r2	@ strBlock, tmp550
 7963 07aa 39D0     		beq	.L627	@,
 7964              	.L567:
 7965              	@ main.c:4161: 					d = mci_read_sect (strBlock,buffer,1);
 7966 07ac 0122     		movs	r2, #1	@,
 7967 07ae 3946     		mov	r1, r7	@, tmp614
 7968 07b0 3046     		mov	r0, r6	@, strBlock
 7969 07b2 FFF7FEFF 		bl	mmc_read_sect	@
 7970              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7971 07b6 2D4A     		ldr	r2, .L643+24	@ tmp516,
 7972              	@ main.c:4170: 							if(!(strBlock%4096)){
 7973 07b8 C6F30B03 		ubfx	r3, r6, #0, #12	@ tmp517, strBlock,,
 7974              	@ main.c:4162: 					if(!d) {
 7975 07bc 0028     		cmp	r0, #0	@ tmp512
 7976 07be 32D0     		beq	.L637	@
 7977              	@ main.c:4168: 						if(!(strBlock%256)){
 7978 07c0 16F0FF0F 		tst	r6, #255	@ strBlock
 7979 07c4 E8D1     		bne	.L563	@,
 7980              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
ARM GAS  /tmp/cczkEFU1.s 			page 141


 7981 07c6 2A49     		ldr	r1, .L643+28	@ tmp743,
 7982 07c8 0D68     		ldr	r5, [r1]	@ Timt.82_378, Timt
 7983 07ca 9268     		ldr	r2, [r2, #8]	@ _379, MEM[(struct SysTick_Type *)3758153744B].VAL
 7984 07cc AD1A     		subs	r5, r5, r2	@ _380, Timt.82_378, _379
 7985 07ce 0895     		str	r5, [sp, #32]	@ _380, MEM[(volatile u32 *)&tim]
 7986              	@ main.c:4170: 							if(!(strBlock%4096)){
 7987 07d0 93B9     		cbnz	r3, .L564	@ tmp517,
 7988              	@ main.c:4171: 								UaPutS("\r\n Read OK ");
 7989 07d2 2F48     		ldr	r0, .L643+60	@,
 7990 07d4 FFF7FEFF 		bl	UaPutS	@
 7991              	@ main.c:4172: 								hex2uart(strBlock,  8);
 7992 07d8 0821     		movs	r1, #8	@,
 7993 07da 3046     		mov	r0, r6	@, strBlock
 7994 07dc FFF7FEFF 		bl	hex2uart	@
 7995              	@ main.c:4173: 								UaPutS(" y2 = " );
 7996 07e0 2C48     		ldr	r0, .L643+64	@,
 7997 07e2 FFF7FEFF 		bl	UaPutS	@
 7998              	@ main.c:4174: 								uint2uart(y1); UaPutS("\t" ); uint2uart(y2);
 7999 07e6 4046     		mov	r0, r8	@, y1
 8000 07e8 FFF7FEFF 		bl	uint2uart	@
 8001 07ec 2A48     		ldr	r0, .L643+68	@,
 8002 07ee FFF7FEFF 		bl	UaPutS	@
 8003 07f2 4046     		mov	r0, r8	@, y1
 8004 07f4 FFF7FEFF 		bl	uint2uart	@
 8005              	.L564:
 8006              	@ main.c:4178: 							y2 = tim/(3*TIM_MS);
 8007 07f8 284A     		ldr	r2, .L643+72	@ tmp744,
 8008 07fa EB08     		lsrs	r3, r5, #3	@ tmp524, _380,
 8009 07fc A2FB0323 		umull	r2, r3, r2, r3	@ tmp699, tmp525, tmp744, tmp524
 8010              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 8011 0800 1A4A     		ldr	r2, .L643+24	@ tmp522,
 8012              	@ main.c:4178: 							y2 = tim/(3*TIM_MS);
 8013 0802 5B0A     		lsrs	r3, r3, #9	@ _71, tmp525,
 8014              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 8015 0804 9068     		ldr	r0, [r2, #8]	@ _381, MEM[(struct SysTick_Type *)3758153744B].VAL
 8016              	@ main.c:4180: 								TFT_dy( x, y1, y2, YELLOW, 0);
 8017 0806 5FFA88F1 		uxtb	r1, r8	@, y1
 8018 080a DAB2     		uxtb	r2, r3	@, _71
 8019              	@ main.c:4178: 							y2 = tim/(3*TIM_MS);
 8020 080c 1FFA83F8 		uxth	r8, r3	@ y2, _71
 8021              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 8022 0810 174B     		ldr	r3, .L643+28	@ tmp745,
 8023 0812 1860     		str	r0, [r3]	@ _381, Timt
 8024              	@ main.c:4179: 							if(x){
 8025 0814 002C     		cmp	r4, #0	@ x
 8026 0816 ADD1     		bne	.L638	@
 8027              	@ main.c:4183: 								TFT_Clear(BLACK);
 8028 0818 2046     		mov	r0, r4	@, x
 8029 081a FFF7FEFF 		bl	TFT_Clear	@
 8030 081e B0E7     		b	.L566	@
 8031              	.L627:
 8032 0820 CDF81080 		str	r8, [sp, #16]	@ y1, %sfp
 8033 0824 16E4     		b	.L528	@
 8034              	.L637:
 8035 0826 0546     		mov	r5, r0	@ tmp512, tmp512
 8036              	@ main.c:4163: 						UaPutS("\r\n Read error = 0x");
 8037 0828 1D48     		ldr	r0, .L643+76	@,
ARM GAS  /tmp/cczkEFU1.s 			page 142


 8038 082a CDF81080 		str	r8, [sp, #16]	@ y1, %sfp
 8039 082e FFF7FEFF 		bl	UaPutS	@
 8040              	@ main.c:4164: 						hex2uart(strBlock,8); hex2uart(d,2);
 8041 0832 3046     		mov	r0, r6	@, strBlock
 8042 0834 0821     		movs	r1, #8	@,
 8043 0836 FFF7FEFF 		bl	hex2uart	@
 8044 083a 2846     		mov	r0, r5	@, tmp512
 8045 083c 0221     		movs	r1, #2	@,
 8046 083e FFF7FEFF 		bl	hex2uart	@
 8047              	@ main.c:4165: 						break;
 8048 0842 07E4     		b	.L528	@
 8049              	.L526:
 8050              	@ main.c:3975: 	} else UaPutK("\r\nSD Card Init ERROR ");
 8051 0844 1748     		ldr	r0, .L643+80	@,
 8052 0846 FFF7FEFF 		bl	UaPutK	@
 8053 084a 174B     		ldr	r3, .L643+84	@ tmp612,
 8054 084c 0393     		str	r3, [sp, #12]	@ tmp612, %sfp
 8055 084e FFF7F2BB 		b	.L527	@
 8056              	.L644:
 8057 0852 00BF     		.align	2
 8058              	.L643:
 8059 0854 30000000 		.word	.LC77
 8060 0858 00000000 		.word	buffer.8846
 8061 085c 34000000 		.word	.LC78
 8062 0860 00020000 		.word	buffer.8846+512
 8063 0864 FC000000 		.word	.LC91
 8064 0868 398EE338 		.word	954437177
 8065 086c 10E000E0 		.word	-536813552
 8066 0870 00000000 		.word	Timt
 8067 0874 40000000 		.word	.LC80
 8068 0878 F4010000 		.word	.LC136
 8069 087c 14020000 		.word	.LC138
 8070 0880 28020000 		.word	.LC139
 8071 0884 41420F00 		.word	1000001
 8072 0888 5B268B1C 		.word	478881371
 8073 088c 00000000 		.word	p_Fifo1
 8074 0890 50020000 		.word	.LC141
 8075 0894 5C020000 		.word	.LC142
 8076 0898 64020000 		.word	.LC143
 8077 089c CF0DD626 		.word	651562447
 8078 08a0 3C020000 		.word	.LC140
 8079 08a4 14000000 		.word	.LC110
 8080 08a8 00000000 		.word	CardType
 8081 08ac 3C000000 		.word	.LC79
 8082              		.size	MemCard_Menu, .-MemCard_Menu
 8083              		.section	.text.CopyClock,"ax",%progbits
 8084              		.align	1
 8085              		.p2align 2,,3
 8086              		.global	CopyClock
 8087              		.syntax unified
 8088              		.thumb
 8089              		.thumb_func
 8090              		.fpu softvfp
 8091              		.type	CopyClock, %function
 8092              	CopyClock:
 8093              		@ args = 0, pretend = 0, frame = 8
 8094              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cczkEFU1.s 			page 143


 8095 0000 30B5     		push	{r4, r5, lr}	@
 8096 0002 0D46     		mov	r5, r1	@ lrtc, lrtc
 8097 0004 83B0     		sub	sp, sp, #12	@,,
 8098              	@ main.c:5044: void CopyClock(char *dczas, T_RTC *lrtc)	{
 8099 0006 0446     		mov	r4, r0	@ dczas, dczas
 8100              	@ main.c:5050: 		dczas += 0;	memcpy(dczas,unt2str(lrtc->yer,tbuf,4) ,4);
 8101 0008 6946     		mov	r1, sp	@,
 8102 000a E888     		ldrh	r0, [r5, #6]	@, lrtc_21(D)->yer
 8103 000c 0422     		movs	r2, #4	@,
 8104 000e FFF7FEFF 		bl	unt2str	@
 8105 0012 0368     		ldr	r3, [r0]	@ unaligned	@ tmp138, MEM[(char * {ref-all})_3]
 8106              	@ main.c:5051: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 8107 0014 6946     		mov	r1, sp	@,
 8108              	@ main.c:5050: 		dczas += 0;	memcpy(dczas,unt2str(lrtc->yer,tbuf,4) ,4);
 8109 0016 2360     		str	r3, [r4]	@ unaligned	@ tmp138, MEM[(char * {ref-all})dczas_19(D)]
 8110              	@ main.c:5051: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 8111 0018 2879     		ldrb	r0, [r5, #4]	@ zero_extendqisi2	@, lrtc_21(D)->mon
 8112 001a 0222     		movs	r2, #2	@,
 8113 001c FFF7FEFF 		bl	unt2str	@
 8114 0020 0388     		ldrh	r3, [r0]	@ unaligned	@ _26, MEM[(char * {ref-all})_6]
 8115              	@ main.c:5052: 		dczas += 3; memcpy(dczas,unt2str(lrtc->mdy,tbuf,2) ,2);
 8116 0022 6946     		mov	r1, sp	@,
 8117              	@ main.c:5051: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 8118 0024 A4F80530 		strh	r3, [r4, #5]	@ unaligned	@ _26, MEM[(char * {ref-all})dczas_19(D) + 5B]
 8119              	@ main.c:5052: 		dczas += 3; memcpy(dczas,unt2str(lrtc->mdy,tbuf,2) ,2);
 8120 0028 E878     		ldrb	r0, [r5, #3]	@ zero_extendqisi2	@, lrtc_21(D)->mdy
 8121 002a 0222     		movs	r2, #2	@,
 8122 002c FFF7FEFF 		bl	unt2str	@
 8123 0030 0388     		ldrh	r3, [r0]	@ unaligned	@ _29, MEM[(char * {ref-all})_9]
 8124              	@ main.c:5053: 		dczas += 3; memcpy(dczas,unt2str(lrtc->hor,tbuf,2) ,2);
 8125 0032 6946     		mov	r1, sp	@,
 8126              	@ main.c:5052: 		dczas += 3; memcpy(dczas,unt2str(lrtc->mdy,tbuf,2) ,2);
 8127 0034 2381     		strh	r3, [r4, #8]	@ unaligned	@ _29, MEM[(char * {ref-all})dczas_19(D) + 8B]
 8128              	@ main.c:5053: 		dczas += 3; memcpy(dczas,unt2str(lrtc->hor,tbuf,2) ,2);
 8129 0036 A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2	@, lrtc_21(D)->hor
 8130 0038 0222     		movs	r2, #2	@,
 8131 003a FFF7FEFF 		bl	unt2str	@
 8132 003e 0388     		ldrh	r3, [r0]	@ unaligned	@ _32, MEM[(char * {ref-all})_12]
 8133              	@ main.c:5054: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 8134 0040 6946     		mov	r1, sp	@,
 8135              	@ main.c:5053: 		dczas += 3; memcpy(dczas,unt2str(lrtc->hor,tbuf,2) ,2);
 8136 0042 A4F80B30 		strh	r3, [r4, #11]	@ unaligned	@ _32, MEM[(char * {ref-all})dczas_19(D) + 11B]
 8137              	@ main.c:5054: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 8138 0046 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2	@, lrtc_21(D)->min
 8139 0048 0222     		movs	r2, #2	@,
 8140 004a FFF7FEFF 		bl	unt2str	@
 8141 004e 0388     		ldrh	r3, [r0]	@ unaligned	@ _35, MEM[(char * {ref-all})_15]
 8142              	@ main.c:5055: 		dczas += 3; memcpy(dczas,unt2str(lrtc->sec,tbuf,2) ,2);
 8143 0050 6946     		mov	r1, sp	@,
 8144              	@ main.c:5054: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 8145 0052 E381     		strh	r3, [r4, #14]	@ unaligned	@ _35, MEM[(char * {ref-all})dczas_19(D) + 14B]
 8146              	@ main.c:5055: 		dczas += 3; memcpy(dczas,unt2str(lrtc->sec,tbuf,2) ,2);
 8147 0054 2878     		ldrb	r0, [r5]	@ zero_extendqisi2	@, lrtc_21(D)->sec
 8148 0056 0222     		movs	r2, #2	@,
 8149 0058 FFF7FEFF 		bl	unt2str	@
 8150 005c 0388     		ldrh	r3, [r0]	@ unaligned	@ _38, MEM[(char * {ref-all})_18]
 8151 005e A4F81130 		strh	r3, [r4, #17]	@ unaligned	@ _38, MEM[(char * {ref-all})dczas_19(D) + 17B]
ARM GAS  /tmp/cczkEFU1.s 			page 144


 8152              	@ main.c:5057: 	}
 8153 0062 03B0     		add	sp, sp, #12	@,,
 8154              		@ sp needed	@
 8155 0064 30BD     		pop	{r4, r5, pc}	@
 8156              		.size	CopyClock, .-CopyClock
 8157 0066 00BF     		.section	.text.Intro2,"ax",%progbits
 8158              		.align	1
 8159              		.p2align 2,,3
 8160              		.global	Intro2
 8161              		.syntax unified
 8162              		.thumb
 8163              		.thumb_func
 8164              		.fpu softvfp
 8165              		.type	Intro2, %function
 8166              	Intro2:
 8167              		@ args = 0, pretend = 0, frame = 32
 8168              		@ frame_needed = 0, uses_anonymous_args = 0
 8169 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 8170              	@ main.c:2919: 		uint32_t tim=0;
 8171 0004 0025     		movs	r5, #0	@ tmp236,
 8172              	@ main.c:5236: 		DMA1_Channel1->CCR =  DMA_CCR1_PL_0 | DMA_CCR1_MSIZE_0 | DMA_CCR1_PSIZE_0 | DMA_CC
 8173 0006 41F2A256 		movw	r6, #5538	@ tmp246,
 8174              	@ main.c:2911: void Intro2(void){	
 8175 000a 8BB0     		sub	sp, sp, #44	@,,
 8176              	@ main.c:2914: 		UaPutS("\r\n Start programu... \r\n"); 
 8177 000c B448     		ldr	r0, .L704	@,
 8178 000e FFF7FEFF 		bl	UaPutS	@
 8179              	@ main.c:2941: 		UaPutS("\r\n Debug0..."); 
 8180 0012 B448     		ldr	r0, .L704+4	@,
 8181              	@ main.c:2919: 		uint32_t tim=0;
 8182 0014 0995     		str	r5, [sp, #36]	@ tmp236, tim
 8183              	@ main.c:2941: 		UaPutS("\r\n Debug0..."); 
 8184 0016 FFF7FEFF 		bl	UaPutS	@
 8185              	@ main.c:2942: 		RtcInit();
 8186 001a FFF7FEFF 		bl	RtcInit	@
 8187              	@ main.c:2943: 		rtc_GetTime(1,&Rtc);
 8188 001e B249     		ldr	r1, .L704+8	@,
 8189 0020 0120     		movs	r0, #1	@,
 8190 0022 FFF7FEFF 		bl	rtc_GetTime	@
 8191              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 8192 0026 B148     		ldr	r0, .L704+12	@ tmp249,
 8193              	@ main.c:5231: 		RCC->AHBENR   |= RCC_AHBENR_DMA1EN;					// enable clock for DMA1
 8194 0028 B149     		ldr	r1, .L704+16	@ tmp239,
 8195              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 8196 002a 0446     		mov	r4, r0	@ tmp252, tmp249
 8197              	@ main.c:5231: 		RCC->AHBENR   |= RCC_AHBENR_DMA1EN;					// enable clock for DMA1
 8198 002c 4A69     		ldr	r2, [r1, #20]	@ _190, MEM[(struct RCC_TypeDef *)1073876992B].AHBENR
 8199              	@ main.c:5232: 		DMA1_Channel1->CCR  = 0;										// Disable channel
 8200 002e B14B     		ldr	r3, .L704+20	@ tmp241,
 8201              	@ main.c:5231: 		RCC->AHBENR   |= RCC_AHBENR_DMA1EN;					// enable clock for DMA1
 8202 0030 42F00102 		orr	r2, r2, #1	@ _191, _190,
 8203 0034 4A61     		str	r2, [r1, #20]	@ _191, MEM[(struct RCC_TypeDef *)1073876992B].AHBENR
 8204              	@ main.c:5234: 		DMA1_Channel1->CPAR = (uint32_t)&ADC1->DR;	// Source address:
 8205 0036 A1F56B41 		sub	r1, r1, #60160	@ tmp244, tmp244,
 8206 003a B439     		subs	r1, r1, #180	@ tmp244, tmp244,
 8207              	@ main.c:5249: 		GPIOB->CRH   |= 0x00000090;	// PB9 out
 8208 003c AE4A     		ldr	r2, .L704+24	@ tmp247,
ARM GAS  /tmp/cczkEFU1.s 			page 145


 8209              	@ main.c:5232: 		DMA1_Channel1->CCR  = 0;										// Disable channel
 8210 003e 1D60     		str	r5, [r3]	@ tmp236, MEM[(struct DMA_Channel_TypeDef *)1073872904B].CCR
 8211              	@ main.c:5234: 		DMA1_Channel1->CPAR = (uint32_t)&ADC1->DR;	// Source address:
 8212 0040 9960     		str	r1, [r3, #8]	@ tmp244, MEM[(struct DMA_Channel_TypeDef *)1073872904B].CPAR
 8213              	@ main.c:5236: 		DMA1_Channel1->CCR =  DMA_CCR1_PL_0 | DMA_CCR1_MSIZE_0 | DMA_CCR1_PSIZE_0 | DMA_CC
 8214 0042 1E60     		str	r6, [r3]	@ tmp246, MEM[(struct DMA_Channel_TypeDef *)1073872904B].CCR
 8215              	@ main.c:5249: 		GPIOB->CRH   |= 0x00000090;	// PB9 out
 8216 0044 5368     		ldr	r3, [r2, #4]	@ _192, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 8217              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 8218 0046 AD49     		ldr	r1, .L704+28	@ tmp500,
 8219              	@ main.c:5249: 		GPIOB->CRH   |= 0x00000090;	// PB9 out
 8220 0048 43F09003 		orr	r3, r3, #144	@ _193, _192,
 8221 004c 5360     		str	r3, [r2, #4]	@ _193, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 8222              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 8223 004e 8368     		ldr	r3, [r0, #8]	@ _194, MEM[(struct SysTick_Type *)3758153744B].VAL
 8224 0050 0B60     		str	r3, [r1]	@ _194, delay_us
 8225              	.L648:
 8226              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 8227 0052 0B68     		ldr	r3, [r1]	@ delay_us.83_195, delay_us
 8228 0054 A268     		ldr	r2, [r4, #8]	@ _196, MEM[(struct SysTick_Type *)3758153744B].VAL
 8229 0056 9B1A     		subs	r3, r3, r2	@ tmp253, delay_us.83_195, _196
 8230 0058 592B     		cmp	r3, #89	@ tmp253,
 8231 005a FAD9     		bls	.L648	@,
 8232              	@ main.c:5256: 		TIM4->CCMR2 = TIM_CCMR2_OC4M_2 | TIM_CCMR2_OC4M_1;
 8233 005c 4FF4C045 		mov	r5, #24576	@ tmp270,
 8234              	@ main.c:5257: 		TIM4->CCER  = TIM_CCER_CC4E;
 8235 0060 4FF48050 		mov	r0, #4096	@ tmp273,
 8236              	@ main.c:5252: 		TIM4->PSC   = 100-1;
 8237 0064 4FF0630E 		mov	lr, #99	@ tmp258,
 8238              	@ main.c:5253:     TIM4->ARR   = 120-1;
 8239 0068 4FF0770C 		mov	ip, #119	@ tmp261,
 8240              	@ main.c:5254:     TIM4->CCR4  = 10;		//width pulse on PB9 out channel
 8241 006c 0A27     		movs	r7, #10	@ tmp264,
 8242              	@ main.c:5255: 		TIM4->CCMR1 = 0;
 8243 006e 0026     		movs	r6, #0	@ tmp267,
 8244              	@ main.c:5251: 		RCC->APB1ENR |= RCC_APB1ENR_TIM4EN;
 8245 0070 9F4B     		ldr	r3, .L704+16	@ tmp254,
 8246 0072 DA69     		ldr	r2, [r3, #28]	@ _198, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 8247 0074 42F00402 		orr	r2, r2, #4	@ _199, _198,
 8248 0078 DA61     		str	r2, [r3, #28]	@ _199, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 8249              	@ main.c:5252: 		TIM4->PSC   = 100-1;
 8250 007a A14A     		ldr	r2, .L704+32	@ tmp256,
 8251 007c A2F828E0 		strh	lr, [r2, #40]	@ movhi	@ tmp258, MEM[(struct TIM_TypeDef *)1073743872B].PSC
 8252              	@ main.c:5253:     TIM4->ARR   = 120-1;
 8253 0080 A2F82CC0 		strh	ip, [r2, #44]	@ movhi	@ tmp261, MEM[(struct TIM_TypeDef *)1073743872B].ARR
 8254              	@ main.c:5254:     TIM4->CCR4  = 10;		//width pulse on PB9 out channel
 8255 0084 A2F84070 		strh	r7, [r2, #64]	@ movhi	@ tmp264, MEM[(struct TIM_TypeDef *)1073743872B].CCR4
 8256              	@ main.c:5255: 		TIM4->CCMR1 = 0;
 8257 0088 1683     		strh	r6, [r2, #24]	@ movhi	@ tmp267, MEM[(struct TIM_TypeDef *)1073743872B].CCMR1
 8258              	@ main.c:5256: 		TIM4->CCMR2 = TIM_CCMR2_OC4M_2 | TIM_CCMR2_OC4M_1;
 8259 008a 9583     		strh	r5, [r2, #28]	@ movhi	@ tmp270, MEM[(struct TIM_TypeDef *)1073743872B].CCMR2
 8260              	@ main.c:5257: 		TIM4->CCER  = TIM_CCER_CC4E;
 8261 008c 1084     		strh	r0, [r2, #32]	@ movhi	@ tmp273, MEM[(struct TIM_TypeDef *)1073743872B].CCER
 8262              	@ main.c:5261: 		RCC->APB2ENR  |= RCC_APB2ENR_ADC1EN;			// enable clock for ADC1
 8263 008e 9A69     		ldr	r2, [r3, #24]	@ _200, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 8264              	@ main.c:5263: 		GPIOA->CRL = (GPIOA->CRL & 0xffff0000);
 8265 0090 05F18045 		add	r5, r5, #1073741824	@ tmp278, tmp278,
ARM GAS  /tmp/cczkEFU1.s 			page 146


 8266              	@ main.c:5261: 		RCC->APB2ENR  |= RCC_APB2ENR_ADC1EN;			// enable clock for ADC1
 8267 0094 42F40072 		orr	r2, r2, #512	@ _201, _200,
 8268 0098 9A61     		str	r2, [r3, #24]	@ _201, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 8269              	@ main.c:5262: 		RCC->CFGR 		|= RCC_CFGR_ADCPRE_DIV4;  	// 2/4/6/8 str98
 8270 009a 5868     		ldr	r0, [r3, #4]	@ _202, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 8271              	@ main.c:5263: 		GPIOA->CRL = (GPIOA->CRL & 0xffff0000);
 8272 009c 05F52845 		add	r5, r5, #43008	@ tmp278, tmp278,
 8273              	@ main.c:5262: 		RCC->CFGR 		|= RCC_CFGR_ADCPRE_DIV4;  	// 2/4/6/8 str98
 8274 00a0 40F48040 		orr	r0, r0, #16384	@ _203, _202,
 8275 00a4 5860     		str	r0, [r3, #4]	@ _203, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 8276              	@ main.c:5263: 		GPIOA->CRL = (GPIOA->CRL & 0xffff0000);
 8277 00a6 2B68     		ldr	r3, [r5]	@ _204, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 8278              	@ main.c:5266: 		ADC1->CR1 |= ADC_CR1_SCAN;	// multi channel mode
 8279 00a8 964A     		ldr	r2, .L704+36	@ tmp281,
 8280              	@ main.c:5263: 		GPIOA->CRL = (GPIOA->CRL & 0xffff0000);
 8281 00aa 1B0C     		lsrs	r3, r3, #16	@ _205, _204,
 8282 00ac 1B04     		lsls	r3, r3, #16	@ _205, _205,
 8283 00ae 2B60     		str	r3, [r5]	@ _205, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 8284              	@ main.c:5266: 		ADC1->CR1 |= ADC_CR1_SCAN;	// multi channel mode
 8285 00b0 5368     		ldr	r3, [r2, #4]	@ _206, MEM[(struct ADC_TypeDef *)1073816576B].CR1
 8286              	@ main.c:5267: 		ADC1->CR2 =  ADC_CR2_DMA | ADC_CR2_ADON | ADC_CR2_EXTTRIG | ADC_CR2_EXTSEL_2 | ADC
 8287 00b2 9548     		ldr	r0, .L704+40	@ tmp284,
 8288              	@ main.c:5266: 		ADC1->CR1 |= ADC_CR1_SCAN;	// multi channel mode
 8289 00b4 43F48073 		orr	r3, r3, #256	@ _207, _206,
 8290 00b8 5360     		str	r3, [r2, #4]	@ _207, MEM[(struct ADC_TypeDef *)1073816576B].CR1
 8291              	@ main.c:5267: 		ADC1->CR2 =  ADC_CR2_DMA | ADC_CR2_ADON | ADC_CR2_EXTTRIG | ADC_CR2_EXTSEL_2 | ADC
 8292 00ba 9060     		str	r0, [r2, #8]	@ tmp284, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 8293              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 8294 00bc A368     		ldr	r3, [r4, #8]	@ _208, MEM[(struct SysTick_Type *)3758153744B].VAL
 8295              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 8296 00be 8B4D     		ldr	r5, .L704+12	@ tmp288,
 8297              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 8298 00c0 0B60     		str	r3, [r1]	@ _208, delay_us
 8299              	.L649:
 8300              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 8301 00c2 0B68     		ldr	r3, [r1]	@ delay_us.83_209, delay_us
 8302 00c4 AA68     		ldr	r2, [r5, #8]	@ _210, MEM[(struct SysTick_Type *)3758153744B].VAL
 8303 00c6 9B1A     		subs	r3, r3, r2	@ tmp289, delay_us.83_209, _210
 8304 00c8 082B     		cmp	r3, #8	@ tmp289,
 8305 00ca FAD9     		bls	.L649	@,
 8306              	@ main.c:5277: 		ADC1->SMPR2 = 7<<0*3 | 7<<1*3 ;
 8307 00cc 3F21     		movs	r1, #63	@ tmp295,
 8308              	@ main.c:5272: 		ADC1->SQR1  = 0<<20;
 8309 00ce 0024     		movs	r4, #0	@ tmp291,
 8310              	@ main.c:5275: 		ADC1->SQR3  = 0<<1*5 | 1<<0*5 ;
 8311 00d0 0120     		movs	r0, #1	@ tmp293,
 8312              	@ main.c:5272: 		ADC1->SQR1  = 0<<20;
 8313 00d2 8C4B     		ldr	r3, .L704+36	@ tmp290,
 8314              	@ main.c:5280: 		while(ADC1->CR2 & ADC_CR2_RSTCAL);		// wait for reset
 8315 00d4 1A46     		mov	r2, r3	@ tmp298, tmp290
 8316              	@ main.c:5272: 		ADC1->SQR1  = 0<<20;
 8317 00d6 DC62     		str	r4, [r3, #44]	@ tmp291, MEM[(struct ADC_TypeDef *)1073816576B].SQR1
 8318              	@ main.c:5275: 		ADC1->SQR3  = 0<<1*5 | 1<<0*5 ;
 8319 00d8 5863     		str	r0, [r3, #52]	@ tmp293, MEM[(struct ADC_TypeDef *)1073816576B].SQR3
 8320              	@ main.c:5277: 		ADC1->SMPR2 = 7<<0*3 | 7<<1*3 ;
 8321 00da 1961     		str	r1, [r3, #16]	@ tmp295, MEM[(struct ADC_TypeDef *)1073816576B].SMPR2
 8322              	@ main.c:5279: 		ADC1->CR2 |= ADC_CR2_RSTCAL;					// reset calibration
ARM GAS  /tmp/cczkEFU1.s 			page 147


 8323 00dc 9968     		ldr	r1, [r3, #8]	@ _212, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 8324 00de 41F00801 		orr	r1, r1, #8	@ _213, _212,
 8325 00e2 9960     		str	r1, [r3, #8]	@ _213, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 8326              	.L650:
 8327              	@ main.c:5280: 		while(ADC1->CR2 & ADC_CR2_RSTCAL);		// wait for reset
 8328 00e4 9368     		ldr	r3, [r2, #8]	@ _214, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 8329 00e6 1807     		lsls	r0, r3, #28	@, _214,
 8330 00e8 FCD4     		bmi	.L650	@,
 8331              	@ main.c:5281: 		ADC1->CR2 |= ADC_CR2_CAL;							// start calibration
 8332 00ea 9168     		ldr	r1, [r2, #8]	@ _216, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 8333              	@ main.c:5282: 		while(ADC1->CR2 & ADC_CR2_CAL);				// wait till calibration is done
 8334 00ec 854B     		ldr	r3, .L704+36	@ tmp302,
 8335              	@ main.c:5281: 		ADC1->CR2 |= ADC_CR2_CAL;							// start calibration
 8336 00ee 41F00401 		orr	r1, r1, #4	@ _217, _216,
 8337 00f2 9160     		str	r1, [r2, #8]	@ _217, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 8338              	.L651:
 8339              	@ main.c:5282: 		while(ADC1->CR2 & ADC_CR2_CAL);				// wait till calibration is done
 8340 00f4 9A68     		ldr	r2, [r3, #8]	@ _218, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 8341 00f6 5107     		lsls	r1, r2, #29	@, _218,
 8342 00f8 FCD4     		bmi	.L651	@,
 8343              	@ main.c:5283: 		ADC1->CR2 |= ADC_CR2_ADON;						// start conversion
 8344 00fa 9A68     		ldr	r2, [r3, #8]	@ _220, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 8345              	@ main.c:5284: 		while( !( ADC1->SR & ADC_SR_STRT ));
 8346 00fc 8149     		ldr	r1, .L704+36	@ tmp306,
 8347              	@ main.c:5283: 		ADC1->CR2 |= ADC_CR2_ADON;						// start conversion
 8348 00fe 42F00102 		orr	r2, r2, #1	@ _221, _220,
 8349 0102 9A60     		str	r2, [r3, #8]	@ _221, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 8350              	.L652:
 8351              	@ main.c:5284: 		while( !( ADC1->SR & ADC_SR_STRT ));
 8352 0104 0B68     		ldr	r3, [r1]	@ _222, MEM[(struct ADC_TypeDef *)1073816576B].SR
 8353 0106 DA06     		lsls	r2, r3, #27	@, _222,
 8354 0108 FCD5     		bpl	.L652	@,
 8355              	@ main.c:5287: 		TIM3->CR1 = TIM_CR1_CEN;
 8356 010a 0122     		movs	r2, #1	@ tmp310,
 8357 010c 7F4B     		ldr	r3, .L704+44	@ tmp308,
 8358              	@ main.c:5288: 		while( ! (ADC1->SR & ADC_SR_EOC) );
 8359 010e 7D49     		ldr	r1, .L704+36	@ tmp311,
 8360              	@ main.c:5287: 		TIM3->CR1 = TIM_CR1_CEN;
 8361 0110 1A80     		strh	r2, [r3]	@ movhi	@ tmp310, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 8362              	.L653:
 8363              	@ main.c:5288: 		while( ! (ADC1->SR & ADC_SR_EOC) );
 8364 0112 0B68     		ldr	r3, [r1]	@ _224, MEM[(struct ADC_TypeDef *)1073816576B].SR
 8365 0114 9B07     		lsls	r3, r3, #30	@, _224,
 8366 0116 FCD5     		bpl	.L653	@,
 8367              	@ main.c:2946: 		f7_dma1 = 0;
 8368 0118 0026     		movs	r6, #0	@ tmp315,
 8369              	@ main.c:2967: 		TFT_Fill(wXmin-1,wYmin-1,wXmax+1,wYmin-1,DGRAY);	// pozioma dolna
 8370 011a 47F6EF35 		movw	r5, #31727	@ tmp316,
 8371              	@ main.c:2946: 		f7_dma1 = 0;
 8372 011e 7C4C     		ldr	r4, .L704+48	@ tmp314,
 8373              	@ main.c:2967: 		TFT_Fill(wXmin-1,wYmin-1,wXmax+1,wYmin-1,DGRAY);	// pozioma dolna
 8374 0120 3346     		mov	r3, r6	@, tmp315
 8375              	@ main.c:2946: 		f7_dma1 = 0;
 8376 0122 6401     		lsls	r4, r4, #5	@ _3, tmp314,
 8377 0124 E661     		str	r6, [r4, #28]	@ tmp315, *_5
 8378              	@ main.c:2967: 		TFT_Fill(wXmin-1,wYmin-1,wXmax+1,wYmin-1,DGRAY);	// pozioma dolna
 8379 0126 3146     		mov	r1, r6	@, tmp315
ARM GAS  /tmp/cczkEFU1.s 			page 148


 8380 0128 0095     		str	r5, [sp]	@ tmp316,
 8381 012a 40F23F12 		movw	r2, #319	@,
 8382 012e 1E20     		movs	r0, #30	@,
 8383 0130 FFF7FEFF 		bl	TFT_Fill	@
 8384              	@ main.c:2968: 		TFT_Fill(wXmin-1,wYmax+1,wXmax+1,wYmax+1,DGRAY);	// pozioma górna
 8385 0134 E423     		movs	r3, #228	@,
 8386 0136 0095     		str	r5, [sp]	@ tmp316,
 8387 0138 1946     		mov	r1, r3	@,
 8388 013a 40F23F12 		movw	r2, #319	@,
 8389 013e 1E20     		movs	r0, #30	@,
 8390 0140 FFF7FEFF 		bl	TFT_Fill	@
 8391              	@ main.c:2969: 		TFT_Fill(wXmin-1,wYmin-1,wXmin-1,wYmax+1,DGRAY);	// pionowa lewa
 8392 0144 1E22     		movs	r2, #30	@,
 8393 0146 3146     		mov	r1, r6	@, tmp315
 8394 0148 1046     		mov	r0, r2	@,
 8395 014a 0095     		str	r5, [sp]	@ tmp316,
 8396 014c E423     		movs	r3, #228	@,
 8397 014e FFF7FEFF 		bl	TFT_Fill	@
 8398              	@ main.c:2970: 		TFT_Fill(wXmax+1,wYmin-1,wXmax+1,wYmax+1,DGRAY);	// pionowa prawa
 8399 0152 40F23F12 		movw	r2, #319	@,
 8400 0156 3146     		mov	r1, r6	@, tmp315
 8401 0158 1046     		mov	r0, r2	@,
 8402 015a 0095     		str	r5, [sp]	@ tmp316,
 8403 015c E423     		movs	r3, #228	@,
 8404 015e FFF7FEFF 		bl	TFT_Fill	@
 8405              	@ main.c:2974: 			yb[f] =wYmin;	
 8406 0162 0123     		movs	r3, #1	@ tmp321,
 8407 0164 DFF8DCA1 		ldr	r10, .L704+100	@ tmp494,
 8408              	@ main.c:2975: 			yn[f] =wYmin;
 8409 0168 6A4D     		ldr	r5, .L704+52	@ tmp495,
 8410              	@ main.c:2991: 		UaPutS("\r\n wXlen ");	sint2uart(wXlen); 
 8411 016a 6B48     		ldr	r0, .L704+56	@,
 8412              	@ main.c:2974: 			yb[f] =wYmin;	
 8413 016c 8AF80030 		strb	r3, [r10]	@ tmp321, yb
 8414              	@ main.c:2975: 			yn[f] =wYmin;
 8415 0170 2B70     		strb	r3, [r5]	@ tmp321, yn
 8416              	@ main.c:2991: 		UaPutS("\r\n wXlen ");	sint2uart(wXlen); 
 8417 0172 FFF7FEFF 		bl	UaPutS	@
 8418 0176 4FF49070 		mov	r0, #288	@,
 8419 017a FFF7FEFF 		bl	sint2uart	@
 8420              	@ main.c:2994: 		DMA1_Channel1->CNDTR = wXlen*nMES;					//Buffor size 
 8421 017e 4FF49070 		mov	r0, #288	@ tmp330,
 8422              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 8423 0182 4FF4006C 		mov	ip, #2048	@ tmp332,
 8424              	@ main.c:3017: 			dma_buf[i]=0x10;
 8425 0186 1027     		movs	r7, #16	@ tmp345,
 8426              	@ main.c:2993: 		DMA1_Channel1->CMAR = (uint32_t)dma_buf;	 	//Destination address:
 8427 0188 5A4A     		ldr	r2, .L704+20	@ tmp328,
 8428              	@ main.c:3002: 		TIM4->ARR   = BKP->DR42; //1200-1
 8429 018a 3346     		mov	r3, r6	@ ivtmp.715, tmp315
 8430              	@ main.c:2993: 		DMA1_Channel1->CMAR = (uint32_t)dma_buf;	 	//Destination address:
 8431 018c 634E     		ldr	r6, .L704+60	@ tmp496,
 8432              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 8433 018e 6449     		ldr	r1, .L704+64	@ tmp331,
 8434              	@ main.c:2993: 		DMA1_Channel1->CMAR = (uint32_t)dma_buf;	 	//Destination address:
 8435 0190 D660     		str	r6, [r2, #12]	@ tmp496, MEM[(struct DMA_Channel_TypeDef *)1073872904B].CMAR
 8436              	@ main.c:2994: 		DMA1_Channel1->CNDTR = wXlen*nMES;					//Buffor size 
ARM GAS  /tmp/cczkEFU1.s 			page 149


 8437 0192 5060     		str	r0, [r2, #4]	@ tmp330, MEM[(struct DMA_Channel_TypeDef *)1073872904B].CNDTR
 8438              	@ main.c:3001: 		TIM4->PSC   = BKP->DR41; //1000-1
 8439 0194 6348     		ldr	r0, .L704+68	@ tmp333,
 8440              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 8441 0196 C1F800C0 		str	ip, [r1]	@ tmp332, MEM[(struct NVIC_Type *)3758153984B].ISER
 8442              	@ main.c:3001: 		TIM4->PSC   = BKP->DR41; //1000-1
 8443 019a B0F8B820 		ldrh	r2, [r0, #184]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8444 019e 5849     		ldr	r1, .L704+32	@ tmp336,
 8445 01a0 92B2     		uxth	r2, r2	@ _9, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8446 01a2 0A85     		strh	r2, [r1, #40]	@ movhi	@ _9, MEM[(struct TIM_TypeDef *)1073743872B].PSC
 8447              	@ main.c:3002: 		TIM4->ARR   = BKP->DR42; //1200-1
 8448 01a4 B0F8BC20 		ldrh	r2, [r0, #188]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR42
 8449 01a8 92B2     		uxth	r2, r2	@ _10, MEM[(struct BKP_TypeDef *)1073769472B].DR42
 8450 01aa 8A85     		strh	r2, [r1, #44]	@ movhi	@ _10, MEM[(struct TIM_TypeDef *)1073743872B].ARR
 8451              	.L654:
 8452              	@ main.c:3017: 			dma_buf[i]=0x10;
 8453 01ac 26F81370 		strh	r7, [r6, r3, lsl #1]	@ movhi	@ tmp345, dma_buf
 8454 01b0 0133     		adds	r3, r3, #1	@ ivtmp.715, ivtmp.715,
 8455              	@ main.c:3014: 		for(u16 i=0;i<wXlen;i++){
 8456 01b2 B3F5907F 		cmp	r3, #288	@ ivtmp.715,
 8457 01b6 F9D1     		bne	.L654	@,
 8458              	@ main.c:2921: 		u16 x,c_dma1,r_dma_buf,idx,c_num,n1=10,cnt_dma=0;
 8459 01b8 4FF00008 		mov	r8, #0	@ cnt_dma,
 8460 01bc 04F10C03 		add	r3, r4, #12	@ _82, _3,
 8461 01c0 0593     		str	r3, [sp, #20]	@ _82, %sfp
 8462              	.L655:
 8463              	@ main.c:3022: 			if( STCLK_MS*BKP->DR41 < (trg0 - SysTick->VAL) ){
 8464 01c2 42F22830 		movw	r0, #9000	@ tmp367,
 8465 01c6 584F     		ldr	r7, .L704+72	@ tmp523,
 8466 01c8 08F10102 		add	r2, r8, #1	@ tmp351, cnt_dma,
 8467 01cc A7FB0213 		umull	r1, r3, r7, r2	@ tmp518, tmp352, tmp523, tmp351
 8468 01d0 5449     		ldr	r1, .L704+68	@ tmp524,
 8469 01d2 464C     		ldr	r4, .L704+12	@ tmp526,
 8470 01d4 B1F8B810 		ldrh	r1, [r1, #184]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8471 01d8 9B09     		lsrs	r3, r3, #6	@ _95, tmp352,
 8472 01da 00FB01F0 		mul	r0, r0, r1	@ tmp366, tmp367, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8473 01de 5349     		ldr	r1, .L704+76	@ tmp525,
 8474 01e0 03EBC303 		add	r3, r3, r3, lsl #3	@ tmp356, _95, _95,
 8475 01e4 0968     		ldr	r1, [r1]	@ trg0.192_16, trg0
 8476 01e6 A468     		ldr	r4, [r4, #8]	@ _17, MEM[(struct SysTick_Type *)3758153744B].VAL
 8477 01e8 A2EB4313 		sub	r3, r2, r3, lsl #5	@ _95, tmp351, tmp356,
 8478 01ec 091B     		subs	r1, r1, r4	@ tmp368, trg0.192_16, _17
 8479 01ee 8842     		cmp	r0, r1	@ tmp366, tmp368
 8480 01f0 1FFA83F9 		uxth	r9, r3	@ _152, _95
 8481 01f4 4246     		mov	r2, r8	@ _91, cnt_dma
 8482 01f6 13D2     		bcs	.L656	@,
 8483              	@ main.c:3025: 				dma_buf[cnt_dma]=0x1;
 8484 01f8 0120     		movs	r0, #1	@ tmp373,
 8485 01fa 1A18     		adds	r2, r3, r0	@ tmp374, _95,
 8486 01fc A7FB0271 		umull	r7, r1, r7, r2	@ tmp519, tmp375, tmp527, tmp374
 8487 0200 8909     		lsrs	r1, r1, #6	@ _49, tmp375,
 8488 0202 01EBC101 		add	r1, r1, r1, lsl #3	@ tmp379, _49, _49,
 8489 0206 A2EB4111 		sub	r1, r2, r1, lsl #5	@ _49, tmp374, tmp379,
 8490              	@ main.c:3023: 				trg0 = SysTick->VAL;
 8491 020a 384A     		ldr	r2, .L704+12	@ tmp528,
 8492 020c 474C     		ldr	r4, .L704+76	@ tmp529,
 8493 020e 9268     		ldr	r2, [r2, #8]	@ _19, MEM[(struct SysTick_Type *)3758153744B].VAL
ARM GAS  /tmp/cczkEFU1.s 			page 150


 8494              	@ main.c:3024: 				cnt_dma=(cnt_dma+1)%wXlen;
 8495 0210 C846     		mov	r8, r9	@ cnt_dma, _152
 8496              	@ main.c:3023: 				trg0 = SysTick->VAL;
 8497 0212 2260     		str	r2, [r4]	@ _19, trg0
 8498              	@ main.c:3025: 				dma_buf[cnt_dma]=0x1;
 8499 0214 26F81300 		strh	r0, [r6, r3, lsl #1]	@ movhi	@ tmp373, dma_buf
 8500 0218 1A46     		mov	r2, r3	@ _91, _95
 8501 021a 0B46     		mov	r3, r1	@ _95, _49
 8502 021c 1FFA81F9 		uxth	r9, r1	@ _152, _95
 8503              	.L656:
 8504              	@ main.c:3030: 			if (c_dma1 != wXlen-cnt_dma){
 8505 0220 0499     		ldr	r1, [sp, #16]	@ c_dma1, %sfp
 8506 0222 C2F59072 		rsb	r2, r2, #288	@ tmp389, _91,
 8507 0226 9142     		cmp	r1, r2	@ c_dma1, tmp389
 8508 0228 24D1     		bne	.L697	@,
 8509              	.L657:
 8510              	@ main.c:3137: 			if( STCLK_MS*500 < (trg1 - SysTick->VAL) ){
 8511 022a 414B     		ldr	r3, .L704+80	@ tmp543,
 8512 022c 2F4A     		ldr	r2, .L704+12	@ tmp544,
 8513 022e 1B68     		ldr	r3, [r3]	@ trg1.199_60, trg1
 8514 0230 9268     		ldr	r2, [r2, #8]	@ _61, MEM[(struct SysTick_Type *)3758153744B].VAL
 8515 0232 9B1A     		subs	r3, r3, r2	@ tmp438, trg1.199_60, _61
 8516 0234 3F4A     		ldr	r2, .L704+84	@ tmp545,
 8517 0236 9342     		cmp	r3, r2	@ tmp438, tmp545
 8518 0238 00F2E680 		bhi	.L698	@,
 8519              	.L667:
 8520              	@ main.c:3155: 			if(p_Fifo1->rct){	// Wywolanie interfejsu szeregowego gdy odebrano znak
 8521 023c 3E4B     		ldr	r3, .L704+88	@ tmp553,
 8522 023e 1B68     		ldr	r3, [r3]	@ p_Fifo1.201_72, p_Fifo1
 8523 0240 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.201_72->rct
 8524 0242 9BB2     		uxth	r3, r3	@ _73, p_Fifo1.201_72->rct
 8525 0244 002B     		cmp	r3, #0	@ _73
 8526 0246 40F0C780 		bne	.L699	@
 8527              	.L669:
 8528              	@ main.c:3192: 			if(f3_rtc_1sec){	// Aktualizacja zegara
 8529 024a 059A     		ldr	r2, [sp, #20]	@ _82, %sfp
 8530 024c 1368     		ldr	r3, [r2]	@ _83, *_82
 8531 024e 002B     		cmp	r3, #0	@ _83
 8532 0250 B7D0     		beq	.L655	@
 8533              	@ main.c:3193: 				f3_rtc_1sec = 0;
 8534 0252 0020     		movs	r0, #0	@ tmp478,
 8535              	@ main.c:3195: 				rtc_GetTime(0, &Rtc);
 8536 0254 2449     		ldr	r1, .L704+8	@,
 8537              	@ main.c:3193: 				f3_rtc_1sec = 0;
 8538 0256 1060     		str	r0, [r2]	@ tmp478, *_82
 8539              	@ main.c:3195: 				rtc_GetTime(0, &Rtc);
 8540 0258 FFF7FEFF 		bl	rtc_GetTime	@
 8541              	@ main.c:3196: 				CopyClock(tbuf,&Rtc); TFT_txt(tbuf,180, 229,YELLOW);
 8542 025c 2249     		ldr	r1, .L704+8	@,
 8543 025e 3748     		ldr	r0, .L704+92	@,
 8544 0260 FFF7FEFF 		bl	CopyClock	@
 8545 0264 4FF6E073 		movw	r3, #65504	@,
 8546 0268 E522     		movs	r2, #229	@,
 8547 026a B421     		movs	r1, #180	@,
 8548 026c 3348     		ldr	r0, .L704+92	@,
 8549 026e FFF7FEFF 		bl	TFT_txt	@
 8550 0272 A6E7     		b	.L655	@
ARM GAS  /tmp/cczkEFU1.s 			page 151


 8551              	.L697:
 8552              	@ main.c:3035: 				dma_buf[cnt_dma]=0x1;
 8553 0274 4FF0010B 		mov	fp, #1	@ tmp393,
 8554              	@ main.c:3067: 				TFT_Fill(wXmin+(wXmax-wXmin)/2,wYmin-1,wXmin+(wXmax-wXmin)/2,wYmax+1,DGRAY);	// 
 8555 0278 AE22     		movs	r2, #174	@,
 8556 027a 47F6EF37 		movw	r7, #31727	@ tmp398,
 8557              	@ main.c:3035: 				dma_buf[cnt_dma]=0x1;
 8558 027e 26F813B0 		strh	fp, [r6, r3, lsl #1]	@ movhi	@ tmp393, dma_buf
 8559              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 8560 0282 1A48     		ldr	r0, .L704+12	@ tmp533,
 8561 0284 2E4B     		ldr	r3, .L704+96	@ tmp532,
 8562              	@ main.c:3032: 				c_dma1 = wXlen-cnt_dma;
 8563 0286 C8F59078 		rsb	r8, r8, #288	@ tmp390, cnt_dma,
 8564              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 8565 028a 1B68     		ldr	r3, [r3]	@ Timt.82_184, Timt
 8566 028c 8168     		ldr	r1, [r0, #8]	@ _185, MEM[(struct SysTick_Type *)3758153744B].VAL
 8567              	@ main.c:3032: 				c_dma1 = wXlen-cnt_dma;
 8568 028e 1FFA88F4 		uxth	r4, r8	@ c_dma1, tmp390
 8569              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 8570 0292 5B1A     		subs	r3, r3, r1	@ _186, Timt.82_184, _185
 8571 0294 0993     		str	r3, [sp, #36]	@ _186, MEM[(volatile u32 *)&tim]
 8572              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 8573 0296 D0F808C0 		ldr	ip, [r0, #8]	@ _183, MEM[(struct SysTick_Type *)3758153744B].VAL
 8574              	@ main.c:3032: 				c_dma1 = wXlen-cnt_dma;
 8575 029a 0494     		str	r4, [sp, #16]	@ c_dma1, %sfp
 8576              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 8577 029c 284C     		ldr	r4, .L704+96	@ tmp537,
 8578              	@ main.c:3067: 				TFT_Fill(wXmin+(wXmax-wXmin)/2,wYmin-1,wXmin+(wXmax-wXmin)/2,wYmax+1,DGRAY);	// 
 8579 029e 1046     		mov	r0, r2	@,
 8580 02a0 0097     		str	r7, [sp]	@ tmp398,
 8581 02a2 E423     		movs	r3, #228	@,
 8582              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 8583 02a4 C4F800C0 		str	ip, [r4]	@ _183, Timt
 8584              	@ main.c:3067: 				TFT_Fill(wXmin+(wXmax-wXmin)/2,wYmin-1,wXmin+(wXmax-wXmin)/2,wYmax+1,DGRAY);	// 
 8585 02a8 0021     		movs	r1, #0	@,
 8586 02aa FFF7FEFF 		bl	TFT_Fill	@
 8587              	@ main.c:3068: 				TFT_Fill(wXmin-1,(wYmax-wYmin)/2,wXmax+1,(wYmax-wYmin)/2,DGRAY);						// pozioma
 8588 02ae 7123     		movs	r3, #113	@,
 8589 02b0 40F23F12 		movw	r2, #319	@,
 8590 02b4 1946     		mov	r1, r3	@,
 8591 02b6 1E20     		movs	r0, #30	@,
 8592 02b8 0097     		str	r7, [sp]	@ tmp398,
 8593 02ba FFF7FEFF 		bl	TFT_Fill	@
 8594              	@ main.c:3070: 				TFT_SetWindow(wXmin,wYmin,wXmax,wYmax);
 8595 02be 5946     		mov	r1, fp	@, tmp393
 8596 02c0 E323     		movs	r3, #227	@,
 8597 02c2 4FF49F72 		mov	r2, #318	@,
 8598 02c6 1F20     		movs	r0, #31	@,
 8599 02c8 FFF7FEFF 		bl	TFT_SetWindow	@
 8600 02cc 09F1FF33 		add	r3, r9, #-1	@ tmp504, _152,
 8601 02d0 0024     		movs	r4, #0	@ ivtmp.708,
 8602 02d2 2978     		ldrb	r1, [r5]	@ zero_extendqisi2	@ pretmp_47, yn
 8603 02d4 09F21F1B 		addw	fp, r9, #287	@ tmp503, _152,
 8604 02d8 0393     		str	r3, [sp, #12]	@ tmp504, %sfp
 8605              	@ main.c:3124: 						else {	yn[i]=wYmax-wYmin;		}
 8606 02da 4FF0E208 		mov	r8, #226	@ tmp505,
 8607 02de 46E0     		b	.L658	@
ARM GAS  /tmp/cczkEFU1.s 			page 152


 8608              	.L705:
 8609              		.align	2
 8610              	.L704:
 8611 02e0 00000000 		.word	.LC155
 8612 02e4 18000000 		.word	.LC156
 8613 02e8 00000000 		.word	Rtc
 8614 02ec 10E000E0 		.word	-536813552
 8615 02f0 00100240 		.word	1073876992
 8616 02f4 08000240 		.word	1073872904
 8617 02f8 000C0140 		.word	1073810432
 8618 02fc 00000000 		.word	delay_us
 8619 0300 00080040 		.word	1073743872
 8620 0304 00240140 		.word	1073816576
 8621 0308 01011A00 		.word	1704193
 8622 030c 00040040 		.word	1073742848
 8623 0310 00001001 		.word	.LANCHOR18+17825792
 8624 0314 00000000 		.word	.LANCHOR32
 8625 0318 28000000 		.word	.LC157
 8626 031c 00000000 		.word	.LANCHOR33
 8627 0320 00E100E0 		.word	-536813312
 8628 0324 006C0040 		.word	1073769472
 8629 0328 398EE338 		.word	954437177
 8630 032c 00000000 		.word	trg0
 8631 0330 00000000 		.word	trg1
 8632 0334 20AA4400 		.word	4500000
 8633 0338 00000000 		.word	p_Fifo1
 8634 033c 00000000 		.word	.LANCHOR35
 8635 0340 00000000 		.word	Timt
 8636 0344 00000000 		.word	.LANCHOR31
 8637              	.L675:
 8638              	@ main.c:3123: 						yn[i]=wYmin + (r_dma_buf);	}
 8639 0348 0133     		adds	r3, r3, #1	@ tmp423, _43,
 8640              	@ main.c:3128: 					if(x==wXlen-2){
 8641 034a B4F58F7F 		cmp	r4, #286	@ ivtmp.708,
 8642              	@ main.c:3123: 						yn[i]=wYmin + (r_dma_buf);	}
 8643 034e 2B70     		strb	r3, [r5]	@ tmp423, yn
 8644              	@ main.c:3128: 					if(x==wXlen-2){
 8645 0350 20D0     		beq	.L700	@,
 8646              	.L664:
 8647              	@ main.c:3072: 				for(x=0;x<wXlen;x++){
 8648 0352 40F21F13 		movw	r3, #287	@ tmp435,
 8649 0356 9C42     		cmp	r4, r3	@ ivtmp.708, tmp435
 8650 0358 3CD0     		beq	.L701	@,
 8651              	@ main.c:3094: 					if( x>0 && x< wXlen-0 ){
 8652 035a B4F58F7F 		cmp	r4, #286	@ ivtmp.708,
 8653 035e 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2	@ prephitmp_27, yn
 8654 0360 1DD9     		bls	.L665	@,
 8655 0362 671C     		adds	r7, r4, #1	@ tmp406, ivtmp.708,
 8656 0364 BFB2     		uxth	r7, r7	@ ivtmp.708, tmp406
 8657              	@ main.c:3103: 					if(x>1){
 8658 0366 012F     		cmp	r7, #1	@ ivtmp.708,
 8659 0368 25D1     		bne	.L702	@,
 8660              	.L660:
 8661              	@ main.c:3025: 				dma_buf[cnt_dma]=0x1;
 8662 036a 3C46     		mov	r4, r7	@ ivtmp.708, ivtmp.708
 8663 036c 1146     		mov	r1, r2	@ pretmp_47, prephitmp_27
 8664              	.L658:
ARM GAS  /tmp/cczkEFU1.s 			page 153


 8665              	@ main.c:3114: 					if(x<cnt_dma)	idx=(0    +cnt_dma-x-1)*nMES; 
 8666 036e A145     		cmp	r9, r4	@ _152, ivtmp.708
 8667 0370 8ABF     		itet	hi
 8668 0372 039B     		ldrhi	r3, [sp, #12]	@ tmp504, %sfp
 8669 0374 ABEB0402 		subls	r2, fp, r4	@ tmp420, tmp503, ivtmp.708
 8670 0378 1A1B     		subhi	r2, r3, r4	@ tmp417, tmp504, ivtmp.708
 8671 037a 92B2     		uxth	r2, r2	@ idx, tmp420
 8672              	@ main.c:3119: 						r_dma_buf =(dma_buf[i+idx]-rz[i])*mn[i]/dl[i]; 
 8673 037c 36F81230 		ldrh	r3, [r6, r2, lsl #1]	@, dma_buf
 8674              	@ main.c:3120: 						yb[i]=yn[i];
 8675 0380 8AF80010 		strb	r1, [r10]	@ pretmp_47, yb
 8676              	@ main.c:3119: 						r_dma_buf =(dma_buf[i+idx]-rz[i])*mn[i]/dl[i]; 
 8677 0384 9BB2     		uxth	r3, r3	@ _43, tmp486
 8678              	@ main.c:3122: 						if(r_dma_buf < (wYmax-wYmin) ){
 8679 0386 E12B     		cmp	r3, #225	@ _43,
 8680 0388 DED9     		bls	.L675	@,
 8681              	@ main.c:3128: 					if(x==wXlen-2){
 8682 038a B4F58F7F 		cmp	r4, #286	@ ivtmp.708,
 8683              	@ main.c:3124: 						else {	yn[i]=wYmax-wYmin;		}
 8684 038e 85F80080 		strb	r8, [r5]	@ tmp505, yn
 8685              	@ main.c:3128: 					if(x==wXlen-2){
 8686 0392 DED1     		bne	.L664	@,
 8687              	.L700:
 8688              	@ main.c:3130: 							val[i]=dma_buf[i+idx];
 8689 0394 36F81230 		ldrh	r3, [r6, r2, lsl #1]	@, dma_buf
 8690 0398 3D48     		ldr	r0, .L706	@ tmp542,
 8691 039a 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2	@ prephitmp_27, yn
 8692 039c 0380     		strh	r3, [r0]	@ movhi	@ tmp431, val
 8693              	.L665:
 8694              	@ main.c:3097: 							TFT_dy(wXmin+x-1, yb[i], yn[i],BLACK,WID);
 8695 039e 0023     		movs	r3, #0	@ tmp404,
 8696 03a0 04F11F00 		add	r0, r4, #31	@ tmp402, ivtmp.708,
 8697 03a4 671C     		adds	r7, r4, #1	@ tmp406, ivtmp.708,
 8698 03a6 0093     		str	r3, [sp]	@ tmp404,
 8699 03a8 80B2     		uxth	r0, r0	@, tmp402
 8700 03aa BFB2     		uxth	r7, r7	@ ivtmp.708, tmp406
 8701 03ac FFF7FEFF 		bl	TFT_dy	@
 8702              	@ main.c:3103: 					if(x>1){
 8703 03b0 012F     		cmp	r7, #1	@ ivtmp.708,
 8704 03b2 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2	@ prephitmp_27, yn
 8705 03b4 D9D0     		beq	.L660	@,
 8706              	.L702:
 8707              	@ main.c:3105: 							TFT_dy(wXmin+x-2, yb[i], yn[i],ColCon[6+i],WID);
 8708 03b6 4FF0000C 		mov	ip, #0	@ tmp413,
 8709 03ba 364B     		ldr	r3, .L706+4	@ tmp540,
 8710 03bc 04F11E00 		add	r0, r4, #30	@ tmp411, ivtmp.708,
 8711 03c0 9B89     		ldrh	r3, [r3, #12]	@ ColCon, ColCon
 8712 03c2 9AF80010 		ldrb	r1, [r10]	@ zero_extendqisi2	@ yb, yb
 8713 03c6 80B2     		uxth	r0, r0	@, tmp411
 8714 03c8 CDF800C0 		str	ip, [sp]	@ tmp413,
 8715 03cc FFF7FEFF 		bl	TFT_dy	@
 8716 03d0 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2	@ prephitmp_27, yn
 8717 03d2 CAE7     		b	.L660	@
 8718              	.L701:
 8719 03d4 C846     		mov	r8, r9	@ cnt_dma, _152
 8720 03d6 28E7     		b	.L657	@
 8721              	.L699:
ARM GAS  /tmp/cczkEFU1.s 			page 154


 8722              	@ main.c:3156: 				UART_getChar(&chr);
 8723 03d8 0DF11F00 		add	r0, sp, #31	@ tmp554,,
 8724 03dc FFF7FEFF 		bl	UART_getChar	@
 8725              	@ main.c:3157: 				if(chr=='q'){
 8726 03e0 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2	@ chr.202_74, chr
 8727 03e4 712B     		cmp	r3, #113	@ chr.202_74,
 8728 03e6 31D0     		beq	.L703	@,
 8729              	@ main.c:3171: 				if(chr=='b'){	
 8730 03e8 622B     		cmp	r3, #98	@ chr.202_74,
 8731 03ea 7FF42EAF 		bne	.L669	@,
 8732              	.L672:
 8733              	@ main.c:3173: 					TFT_Clear(BLACK);
 8734 03ee 0020     		movs	r0, #0	@,
 8735 03f0 FFF7FEFF 		bl	TFT_Clear	@
 8736              	@ main.c:3174: 					TFT_Fill(wXmin-1,wYmin-1,wXmin-1,wYmax+1,DGRAY);	// pionowa lewa
 8737 03f4 47F6EF33 		movw	r3, #31727	@ tmp477,
 8738 03f8 1E22     		movs	r2, #30	@,
 8739 03fa 0093     		str	r3, [sp]	@ tmp477,
 8740 03fc 1046     		mov	r0, r2	@,
 8741 03fe E423     		movs	r3, #228	@,
 8742 0400 0021     		movs	r1, #0	@,
 8743 0402 FFF7FEFF 		bl	TFT_Fill	@
 8744 0406 20E7     		b	.L669	@
 8745              	.L698:
 8746              	@ main.c:3138: 				trg1 = SysTick->VAL;
 8747 0408 234B     		ldr	r3, .L706+8	@ tmp546,
 8748              	@ main.c:3148: 				TFT_txt(int2str(val[0],str,4,0),30,229-12*0,WHITE);
 8749 040a 2148     		ldr	r0, .L706	@ tmp548,
 8750              	@ main.c:3138: 				trg1 = SysTick->VAL;
 8751 040c 9C68     		ldr	r4, [r3, #8]	@ _63, MEM[(struct SysTick_Type *)3758153744B].VAL
 8752 040e 234F     		ldr	r7, .L706+12	@ tmp549,
 8753              	@ main.c:3148: 				TFT_txt(int2str(val[0],str,4,0),30,229-12*0,WHITE);
 8754 0410 08A9     		add	r1, sp, #32	@ tmp547,,
 8755 0412 0023     		movs	r3, #0	@,
 8756 0414 0422     		movs	r2, #4	@,
 8757 0416 0088     		ldrh	r0, [r0]	@, val
 8758              	@ main.c:3138: 				trg1 = SysTick->VAL;
 8759 0418 3C60     		str	r4, [r7]	@ _63, trg1
 8760              	@ main.c:3148: 				TFT_txt(int2str(val[0],str,4,0),30,229-12*0,WHITE);
 8761 041a FFF7FEFF 		bl	int2str	@
 8762 041e 4FF6FF73 		movw	r3, #65535	@,
 8763 0422 E522     		movs	r2, #229	@,
 8764 0424 1E21     		movs	r1, #30	@,
 8765 0426 FFF7FEFF 		bl	TFT_txt	@
 8766              	@ main.c:3150: 				TFT_txt(int2str(tim/TIM_MS,str,5,0),110,229-12*0,ColCon[6]);
 8767 042a 099A     		ldr	r2, [sp, #36]	@ tim, tim
 8768 042c 1C49     		ldr	r1, .L706+16	@ tmp550,
 8769 042e 0023     		movs	r3, #0	@,
 8770 0430 A1FB0220 		umull	r2, r0, r1, r2	@ tmp520, tmp448, tmp550, tim
 8771 0434 08A9     		add	r1, sp, #32	@ tmp551,,
 8772 0436 0522     		movs	r2, #5	@,
 8773 0438 400B     		lsrs	r0, r0, #13	@, tmp448,
 8774 043a FFF7FEFF 		bl	int2str	@
 8775 043e 154B     		ldr	r3, .L706+4	@ tmp552,
 8776 0440 E522     		movs	r2, #229	@,
 8777 0442 9B89     		ldrh	r3, [r3, #12]	@, ColCon
 8778 0444 6E21     		movs	r1, #110	@,
ARM GAS  /tmp/cczkEFU1.s 			page 155


 8779 0446 FFF7FEFF 		bl	TFT_txt	@
 8780 044a F7E6     		b	.L667	@
 8781              	.L703:
 8782              	@ main.c:3158: 					UaPutS("\r\n TIM4->PSC/ARR="); 	sint2uart(TIM4->PSC);	UaPutC('/'); c_num=UART_g
 8783 044c 154C     		ldr	r4, .L706+20	@ tmp457,
 8784 044e 1648     		ldr	r0, .L706+24	@,
 8785 0450 FFF7FEFF 		bl	UaPutS	@
 8786 0454 208D     		ldrh	r0, [r4, #40]	@, MEM[(struct TIM_TypeDef *)1073743872B].PSC
 8787 0456 FFF7FEFF 		bl	sint2uart	@
 8788 045a 2F20     		movs	r0, #47	@,
 8789 045c FFF7FEFF 		bl	UaPutC	@
 8790 0460 FFF7FEFF 		bl	UART_getNum	@
 8791 0464 80B2     		uxth	r0, r0	@ c_num,
 8792              	@ main.c:3159: 					if(c_num){ 
 8793 0466 60B1     		cbz	r0, .L671	@ c_num,
 8794              	@ main.c:3160: 						BKP->DR41=c_num; TIM4->PSC=BKP->DR41;
 8795 0468 104A     		ldr	r2, .L706+28	@ tmp555,
 8796 046a A2F8B800 		strh	r0, [r2, #184]	@ movhi	@ c_num, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8797 046e B2F8B830 		ldrh	r3, [r2, #184]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8798 0472 9BB2     		uxth	r3, r3	@ _78, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8799 0474 2385     		strh	r3, [r4, #40]	@ movhi	@ _78, MEM[(struct TIM_TypeDef *)1073743872B].PSC
 8800              	@ main.c:3161: 						BKP->DR42=c_num; TIM4->ARR=BKP->DR42;
 8801 0476 A2F8BC00 		strh	r0, [r2, #188]	@ movhi	@ c_num, MEM[(struct BKP_TypeDef *)1073769472B].DR42
 8802 047a B2F8BC30 		ldrh	r3, [r2, #188]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR42
 8803 047e 9BB2     		uxth	r3, r3	@ _79, MEM[(struct BKP_TypeDef *)1073769472B].DR42
 8804 0480 A385     		strh	r3, [r4, #44]	@ movhi	@ _79, MEM[(struct TIM_TypeDef *)1073743872B].ARR
 8805              	.L671:
 8806              	@ main.c:3167: 					UaPutS("\r\n");
 8807 0482 0B48     		ldr	r0, .L706+32	@,
 8808 0484 FFF7FEFF 		bl	UaPutS	@
 8809              	@ main.c:3168: 					chr='b';
 8810 0488 6223     		movs	r3, #98	@ tmp475,
 8811 048a 8DF81F30 		strb	r3, [sp, #31]	@ tmp475, chr
 8812 048e AEE7     		b	.L672	@
 8813              	.L707:
 8814              		.align	2
 8815              	.L706:
 8816 0490 00000000 		.word	.LANCHOR34
 8817 0494 00000000 		.word	ColCon
 8818 0498 10E000E0 		.word	-536813552
 8819 049c 00000000 		.word	trg1
 8820 04a0 D55204E9 		.word	-385592619
 8821 04a4 00080040 		.word	1073743872
 8822 04a8 34000000 		.word	.LC158
 8823 04ac 006C0040 		.word	1073769472
 8824 04b0 04000000 		.word	.LC13
 8825              		.size	Intro2, .-Intro2
 8826              		.section	.text.CopyTime,"ax",%progbits
 8827              		.align	1
 8828              		.p2align 2,,3
 8829              		.global	CopyTime
 8830              		.syntax unified
 8831              		.thumb
 8832              		.thumb_func
 8833              		.fpu softvfp
 8834              		.type	CopyTime, %function
 8835              	CopyTime:
ARM GAS  /tmp/cczkEFU1.s 			page 156


 8836              		@ args = 0, pretend = 0, frame = 8
 8837              		@ frame_needed = 0, uses_anonymous_args = 0
 8838 0000 30B5     		push	{r4, r5, lr}	@
 8839 0002 0D46     		mov	r5, r1	@ lrtc, lrtc
 8840 0004 83B0     		sub	sp, sp, #12	@,,
 8841              	@ main.c:5058: void CopyTime(char *dczas,  T_RTC *lrtc)	{
 8842 0006 0446     		mov	r4, r0	@ dczas, dczas
 8843              	@ main.c:5063: 		dczas += 0; memcpy(dczas,unt2str(lrtc->hor,tbuf,2) ,2);
 8844 0008 01A9     		add	r1, sp, #4	@ tmp139,,
 8845 000a A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2	@, lrtc_12(D)->hor
 8846 000c 0222     		movs	r2, #2	@,
 8847 000e FFF7FEFF 		bl	unt2str	@
 8848 0012 0388     		ldrh	r3, [r0]	@ unaligned	@ _14, MEM[(char * {ref-all})_3]
 8849              	@ main.c:5064: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 8850 0014 01A9     		add	r1, sp, #4	@ tmp140,,
 8851              	@ main.c:5063: 		dczas += 0; memcpy(dczas,unt2str(lrtc->hor,tbuf,2) ,2);
 8852 0016 2380     		strh	r3, [r4]	@ unaligned	@ _14, MEM[(char * {ref-all})dczas_10(D)]
 8853              	@ main.c:5064: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 8854 0018 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2	@, lrtc_12(D)->min
 8855 001a 0222     		movs	r2, #2	@,
 8856 001c FFF7FEFF 		bl	unt2str	@
 8857 0020 0388     		ldrh	r3, [r0]	@ unaligned	@ _17, MEM[(char * {ref-all})_6]
 8858              	@ main.c:5065: 		dczas += 3; memcpy(dczas,unt2str(lrtc->sec,tbuf,2) ,2);
 8859 0022 01A9     		add	r1, sp, #4	@ tmp141,,
 8860              	@ main.c:5064: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 8861 0024 A4F80330 		strh	r3, [r4, #3]	@ unaligned	@ _17, MEM[(char * {ref-all})dczas_10(D) + 3B]
 8862              	@ main.c:5065: 		dczas += 3; memcpy(dczas,unt2str(lrtc->sec,tbuf,2) ,2);
 8863 0028 2878     		ldrb	r0, [r5]	@ zero_extendqisi2	@, lrtc_12(D)->sec
 8864 002a 0222     		movs	r2, #2	@,
 8865 002c FFF7FEFF 		bl	unt2str	@
 8866 0030 0388     		ldrh	r3, [r0]	@ unaligned	@ _20, MEM[(char * {ref-all})_9]
 8867 0032 E380     		strh	r3, [r4, #6]	@ unaligned	@ _20, MEM[(char * {ref-all})dczas_10(D) + 6B]
 8868              	@ main.c:5066: 	}
 8869 0034 03B0     		add	sp, sp, #12	@,,
 8870              		@ sp needed	@
 8871 0036 30BD     		pop	{r4, r5, pc}	@
 8872              		.size	CopyTime, .-CopyTime
 8873              		.section	.text.CopyDate,"ax",%progbits
 8874              		.align	1
 8875              		.p2align 2,,3
 8876              		.global	CopyDate
 8877              		.syntax unified
 8878              		.thumb
 8879              		.thumb_func
 8880              		.fpu softvfp
 8881              		.type	CopyDate, %function
 8882              	CopyDate:
 8883              		@ args = 0, pretend = 0, frame = 8
 8884              		@ frame_needed = 0, uses_anonymous_args = 0
 8885 0000 30B5     		push	{r4, r5, lr}	@
 8886 0002 0D46     		mov	r5, r1	@ lrtc, lrtc
 8887 0004 83B0     		sub	sp, sp, #12	@,,
 8888              	@ main.c:5067: void CopyDate(char *dczas,  T_RTC *lrtc)	{
 8889 0006 0446     		mov	r4, r0	@ dczas, dczas
 8890              	@ main.c:5070: 		dczas += 0;	memcpy(dczas,unt2str(lrtc->yer,tbuf,4) ,4);
 8891 0008 6946     		mov	r1, sp	@,
 8892 000a E888     		ldrh	r0, [r5, #6]	@, lrtc_12(D)->yer
ARM GAS  /tmp/cczkEFU1.s 			page 157


 8893 000c 0422     		movs	r2, #4	@,
 8894 000e FFF7FEFF 		bl	unt2str	@
 8895 0012 0368     		ldr	r3, [r0]	@ unaligned	@ tmp126, MEM[(char * {ref-all})_3]
 8896              	@ main.c:5071: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 8897 0014 6946     		mov	r1, sp	@,
 8898              	@ main.c:5070: 		dczas += 0;	memcpy(dczas,unt2str(lrtc->yer,tbuf,4) ,4);
 8899 0016 2360     		str	r3, [r4]	@ unaligned	@ tmp126, MEM[(char * {ref-all})dczas_10(D)]
 8900              	@ main.c:5071: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 8901 0018 2879     		ldrb	r0, [r5, #4]	@ zero_extendqisi2	@, lrtc_12(D)->mon
 8902 001a 0222     		movs	r2, #2	@,
 8903 001c FFF7FEFF 		bl	unt2str	@
 8904 0020 0388     		ldrh	r3, [r0]	@ unaligned	@ _17, MEM[(char * {ref-all})_6]
 8905              	@ main.c:5072: 		dczas += 3; memcpy(dczas,unt2str(lrtc->mdy,tbuf,2) ,2);
 8906 0022 6946     		mov	r1, sp	@,
 8907              	@ main.c:5071: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 8908 0024 A4F80530 		strh	r3, [r4, #5]	@ unaligned	@ _17, MEM[(char * {ref-all})dczas_10(D) + 5B]
 8909              	@ main.c:5072: 		dczas += 3; memcpy(dczas,unt2str(lrtc->mdy,tbuf,2) ,2);
 8910 0028 E878     		ldrb	r0, [r5, #3]	@ zero_extendqisi2	@, lrtc_12(D)->mdy
 8911 002a 0222     		movs	r2, #2	@,
 8912 002c FFF7FEFF 		bl	unt2str	@
 8913 0030 0388     		ldrh	r3, [r0]	@ unaligned	@ _20, MEM[(char * {ref-all})_9]
 8914 0032 2381     		strh	r3, [r4, #8]	@ unaligned	@ _20, MEM[(char * {ref-all})dczas_10(D) + 8B]
 8915              	@ main.c:5073: 	}
 8916 0034 03B0     		add	sp, sp, #12	@,,
 8917              		@ sp needed	@
 8918 0036 30BD     		pop	{r4, r5, pc}	@
 8919              		.size	CopyDate, .-CopyDate
 8920              		.section	.text.Zegarek,"ax",%progbits
 8921              		.align	1
 8922              		.p2align 2,,3
 8923              		.global	Zegarek
 8924              		.syntax unified
 8925              		.thumb
 8926              		.thumb_func
 8927              		.fpu softvfp
 8928              		.type	Zegarek, %function
 8929              	Zegarek:
 8930              		@ args = 0, pretend = 0, frame = 24
 8931              		@ frame_needed = 0, uses_anonymous_args = 0
 8932 0000 F0B5     		push	{r4, r5, r6, r7, lr}	@
 8933 0002 87B0     		sub	sp, sp, #28	@,,
 8934              	@ main.c:955: 		char tbuf[9] ={"00-00-00"};
 8935 0004 6C46     		mov	r4, sp	@ tmp115,
 8936 0006 134A     		ldr	r2, .L717	@ tmp114,
 8937              	@ main.c:956: 		char dbuf[11]={"0000-00-00"}; // data
 8938 0008 03AB     		add	r3, sp, #12	@ tmp137,,
 8939              	@ main.c:955: 		char tbuf[9] ={"00-00-00"};
 8940 000a 07CA     		ldm	r2, {r0, r1, r2}	@ tmp114,,,
 8941 000c 03C4     		stmia	r4!, {r0, r1}	@ tmp115,,
 8942              	@ main.c:956: 		char dbuf[11]={"0000-00-00"}; // data
 8943 000e 1249     		ldr	r1, .L717+4	@ tmp117,
 8944              	@ main.c:955: 		char tbuf[9] ={"00-00-00"};
 8945 0010 2270     		strb	r2, [r4]	@, tbuf
 8946              	@ main.c:956: 		char dbuf[11]={"0000-00-00"}; // data
 8947 0012 07C9     		ldm	r1, {r0, r1, r2}	@ tmp117,,,
 8948 0014 03C3     		stmia	r3!, {r0, r1}	@ tmp118,,
 8949 0016 110C     		lsrs	r1, r2, #16	@ tmp120,,
ARM GAS  /tmp/cczkEFU1.s 			page 158


 8950 0018 23F8022B 		strh	r2, [r3], #2	@ movhi	@, dbuf
 8951 001c 1970     		strb	r1, [r3]	@ tmp120, dbuf
 8952              	@ main.c:958: 		RtcInit();
 8953 001e FFF7FEFF 		bl	RtcInit	@
 8954 0022 0E4D     		ldr	r5, .L717+8	@ tmp133,
 8955              	@ main.c:966: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 8956 0024 0E4C     		ldr	r4, .L717+12	@ tmp123,
 8957 0026 0F4E     		ldr	r6, .L717+16	@ tmp125,
 8958              	@ main.c:968: 				rtc_GetTime(1,&Rtc);
 8959 0028 0F4F     		ldr	r7, .L717+20	@ tmp136,
 8960              	.L713:
 8961              	@ main.c:966: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 8962 002a 2B68     		ldr	r3, [r5]	@ trg0.93_1, trg0
 8963 002c A268     		ldr	r2, [r4, #8]	@ _2, MEM[(struct SysTick_Type *)3758153744B].VAL
 8964 002e 9B1A     		subs	r3, r3, r2	@ tmp124, trg0.93_1, _2
 8965 0030 B342     		cmp	r3, r6	@ tmp124, tmp125
 8966 0032 FAD9     		bls	.L713	@,
 8967              	@ main.c:967: 				trg0  = SysTick->VAL;
 8968 0034 A368     		ldr	r3, [r4, #8]	@ _4, MEM[(struct SysTick_Type *)3758153744B].VAL
 8969              	@ main.c:968: 				rtc_GetTime(1,&Rtc);
 8970 0036 3946     		mov	r1, r7	@, tmp136
 8971 0038 0120     		movs	r0, #1	@,
 8972              	@ main.c:967: 				trg0  = SysTick->VAL;
 8973 003a 2B60     		str	r3, [r5]	@ _4, trg0
 8974              	@ main.c:968: 				rtc_GetTime(1,&Rtc);
 8975 003c FFF7FEFF 		bl	rtc_GetTime	@
 8976              	@ main.c:969: 				CopyTime(tbuf,&Rtc);
 8977 0040 3946     		mov	r1, r7	@, tmp136
 8978 0042 6846     		mov	r0, sp	@,
 8979 0044 FFF7FEFF 		bl	CopyTime	@
 8980              	@ main.c:970: 				CopyDate(dbuf,&Rtc);
 8981 0048 3946     		mov	r1, r7	@, tmp136
 8982 004a 03A8     		add	r0, sp, #12	@ tmp138,,
 8983 004c FFF7FEFF 		bl	CopyDate	@
 8984 0050 EBE7     		b	.L713	@
 8985              	.L718:
 8986 0052 00BF     		.align	2
 8987              	.L717:
 8988 0054 00000000 		.word	.LC159
 8989 0058 0C000000 		.word	.LC160
 8990 005c 00000000 		.word	trg0
 8991 0060 10E000E0 		.word	-536813552
 8992 0064 40548900 		.word	9000000
 8993 0068 00000000 		.word	Rtc
 8994              		.size	Zegarek, .-Zegarek
 8995              		.section	.text.SysTick_Handler,"ax",%progbits
 8996              		.align	1
 8997              		.p2align 2,,3
 8998              		.global	SysTick_Handler
 8999              		.syntax unified
 9000              		.thumb
 9001              		.thumb_func
 9002              		.fpu softvfp
 9003              		.type	SysTick_Handler, %function
 9004              	SysTick_Handler:
 9005              		@ args = 0, pretend = 0, frame = 0
 9006              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cczkEFU1.s 			page 159


 9007              		@ link register save eliminated.
 9008              	@ main.c:5115: 		N = Timt + STCLK_LD; Timt = N;
 9009 0000 1448     		ldr	r0, .L720	@ tmp130,
 9010 0002 154B     		ldr	r3, .L720+4	@ tmp131,
 9011 0004 0268     		ldr	r2, [r0]	@ Timt.246_1, Timt
 9012              	@ main.c:5117: 		n = delay_us + STCLK_LD; delay_us = n;
 9013 0006 1549     		ldr	r1, .L720+8	@ tmp133,
 9014              	@ main.c:5115: 		N = Timt + STCLK_LD; Timt = N;
 9015 0008 1A44     		add	r2, r2, r3	@ N, tmp131
 9016 000a 0260     		str	r2, [r0]	@ N, Timt
 9017              	@ main.c:5117: 		n = delay_us + STCLK_LD; delay_us = n;
 9018 000c 0A68     		ldr	r2, [r1]	@ delay_us.247_2, delay_us
 9019              	@ main.c:5121: 		n = (Tim0 + STCLK_LD); Tim0 = n;
 9020 000e 1448     		ldr	r0, .L720+12	@ tmp136,
 9021              	@ main.c:5117: 		n = delay_us + STCLK_LD; delay_us = n;
 9022 0010 1A44     		add	r2, r2, r3	@ _3, tmp131
 9023 0012 0A60     		str	r2, [r1]	@ _3, delay_us
 9024              	@ main.c:5121: 		n = (Tim0 + STCLK_LD); Tim0 = n;
 9025 0014 0268     		ldr	r2, [r0]	@ Tim0.249_4, Tim0
 9026              	@ main.c:5122: 		n = (Tim1 + STCLK_LD); Tim1 = n;
 9027 0016 1349     		ldr	r1, .L720+16	@ tmp139,
 9028              	@ main.c:5121: 		n = (Tim0 + STCLK_LD); Tim0 = n;
 9029 0018 1A44     		add	r2, r2, r3	@ _5, tmp131
 9030 001a 0260     		str	r2, [r0]	@ _5, Tim0
 9031              	@ main.c:5122: 		n = (Tim1 + STCLK_LD); Tim1 = n;
 9032 001c 0A68     		ldr	r2, [r1]	@ Tim1.251_6, Tim1
 9033              	@ main.c:5124: 		n = (trg0 + STCLK_LD); trg0 = n;
 9034 001e 1248     		ldr	r0, .L720+20	@ tmp142,
 9035              	@ main.c:5122: 		n = (Tim1 + STCLK_LD); Tim1 = n;
 9036 0020 1A44     		add	r2, r2, r3	@ _7, tmp131
 9037 0022 0A60     		str	r2, [r1]	@ _7, Tim1
 9038              	@ main.c:5124: 		n = (trg0 + STCLK_LD); trg0 = n;
 9039 0024 0268     		ldr	r2, [r0]	@ trg0.253_8, trg0
 9040              	@ main.c:5125: 		n = (trg1 + STCLK_LD); trg1 = n;
 9041 0026 1149     		ldr	r1, .L720+24	@ tmp145,
 9042              	@ main.c:5124: 		n = (trg0 + STCLK_LD); trg0 = n;
 9043 0028 1A44     		add	r2, r2, r3	@ _9, tmp131
 9044 002a 0260     		str	r2, [r0]	@ _9, trg0
 9045              	@ main.c:5125: 		n = (trg1 + STCLK_LD); trg1 = n;
 9046 002c 0A68     		ldr	r2, [r1]	@ trg1.255_10, trg1
 9047              	@ main.c:5126: 		n = (trg2 + STCLK_LD); trg2 = n;
 9048 002e 1048     		ldr	r0, .L720+28	@ tmp148,
 9049              	@ main.c:5125: 		n = (trg1 + STCLK_LD); trg1 = n;
 9050 0030 1A44     		add	r2, r2, r3	@ _11, tmp131
 9051 0032 0A60     		str	r2, [r1]	@ _11, trg1
 9052              	@ main.c:5126: 		n = (trg2 + STCLK_LD); trg2 = n;
 9053 0034 0268     		ldr	r2, [r0]	@ trg2.257_12, trg2
 9054              	@ main.c:5127: 		n = (trg3 + STCLK_LD); trg3 = n;
 9055 0036 0F49     		ldr	r1, .L720+32	@ tmp151,
 9056              	@ main.c:5126: 		n = (trg2 + STCLK_LD); trg2 = n;
 9057 0038 1A44     		add	r2, r2, r3	@ _13, tmp131
 9058 003a 0260     		str	r2, [r0]	@ _13, trg2
 9059              	@ main.c:5127: 		n = (trg3 + STCLK_LD); trg3 = n;
 9060 003c 0A68     		ldr	r2, [r1]	@ trg3.259_14, trg3
 9061              	@ main.c:5128: 		n = (trg4 + STCLK_LD); trg4 = n;
 9062 003e 0E48     		ldr	r0, .L720+36	@ tmp154,
 9063              	@ main.c:5127: 		n = (trg3 + STCLK_LD); trg3 = n;
ARM GAS  /tmp/cczkEFU1.s 			page 160


 9064 0040 1A44     		add	r2, r2, r3	@ _15, tmp131
 9065 0042 0A60     		str	r2, [r1]	@ _15, trg3
 9066              	@ main.c:5128: 		n = (trg4 + STCLK_LD); trg4 = n;
 9067 0044 0268     		ldr	r2, [r0]	@ trg4.261_16, trg4
 9068              	@ main.c:5129: 		n = (trg5 + STCLK_LD); trg5 = n;
 9069 0046 0D49     		ldr	r1, .L720+40	@ tmp157,
 9070              	@ main.c:5128: 		n = (trg4 + STCLK_LD); trg4 = n;
 9071 0048 1A44     		add	r2, r2, r3	@ _17, tmp131
 9072 004a 0260     		str	r2, [r0]	@ _17, trg4
 9073              	@ main.c:5129: 		n = (trg5 + STCLK_LD); trg5 = n;
 9074 004c 0A68     		ldr	r2, [r1]	@ trg5.263_18, trg5
 9075 004e 1344     		add	r3, r3, r2	@ _19, trg5.263_18
 9076 0050 0B60     		str	r3, [r1]	@ _19, trg5
 9077              	@ main.c:5132: 	}
 9078 0052 7047     		bx	lr	@
 9079              	.L721:
 9080              		.align	2
 9081              	.L720:
 9082 0054 00000000 		.word	Timt
 9083 0058 40548900 		.word	9000000
 9084 005c 00000000 		.word	delay_us
 9085 0060 00000000 		.word	Tim0
 9086 0064 00000000 		.word	Tim1
 9087 0068 00000000 		.word	trg0
 9088 006c 00000000 		.word	trg1
 9089 0070 00000000 		.word	trg2
 9090 0074 00000000 		.word	trg3
 9091 0078 00000000 		.word	trg4
 9092 007c 00000000 		.word	trg5
 9093              		.size	SysTick_Handler, .-SysTick_Handler
 9094              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 9095              		.align	1
 9096              		.p2align 2,,3
 9097              		.global	TIM2_IRQHandler
 9098              		.syntax unified
 9099              		.thumb
 9100              		.thumb_func
 9101              		.fpu softvfp
 9102              		.type	TIM2_IRQHandler, %function
 9103              	TIM2_IRQHandler:
 9104              		@ Stack Align: May be called with mis-aligned SP.
 9105              		@ args = 0, pretend = 0, frame = 0
 9106              		@ frame_needed = 0, uses_anonymous_args = 0
 9107              		@ link register save eliminated.
 9108 0000 6846     		mov	r0, sp	@,
 9109 0002 20F00701 		bic	r1, r0, #7	@,,
 9110 0006 8D46     		mov	sp, r1	@,
 9111              	@ main.c:5134: 		bTIM2_SR_UIF = 0;
 9112 0008 0023     		movs	r3, #0	@ tmp111,
 9113              	@ main.c:5135: 		TIM2->SR = 0;
 9114 000a 4FF08042 		mov	r2, #1073741824	@ tmp112,
 9115              	@ main.c:5133: __attribute__((interrupt)) void TIM2_IRQHandler(void)				{
 9116 000e 01B4     		push	{r0}	@
 9117              	@ main.c:5134: 		bTIM2_SR_UIF = 0;
 9118 0010 0249     		ldr	r1, .L723	@ tmp110,
 9119              	@ main.c:5137: 	}
 9120 0012 01BC     		pop	{r0}	@
ARM GAS  /tmp/cczkEFU1.s 			page 161


 9121              	@ main.c:5134: 		bTIM2_SR_UIF = 0;
 9122 0014 0B60     		str	r3, [r1]	@ tmp111, MEM[(volatile long unsigned int *)1107296768B]
 9123              	@ main.c:5137: 	}
 9124 0016 8546     		mov	sp, r0	@,
 9125              	@ main.c:5135: 		TIM2->SR = 0;
 9126 0018 1382     		strh	r3, [r2, #16]	@ movhi	@ tmp111, MEM[(struct TIM_TypeDef *)1073741824B].SR
 9127              	@ main.c:5137: 	}
 9128 001a 7047     		bx	lr	@
 9129              	.L724:
 9130              		.align	2
 9131              	.L723:
 9132 001c 00020042 		.word	1107296768
 9133              		.size	TIM2_IRQHandler, .-TIM2_IRQHandler
 9134              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 9135              		.align	1
 9136              		.p2align 2,,3
 9137              		.global	TIM3_IRQHandler
 9138              		.syntax unified
 9139              		.thumb
 9140              		.thumb_func
 9141              		.fpu softvfp
 9142              		.type	TIM3_IRQHandler, %function
 9143              	TIM3_IRQHandler:
 9144              		@ Stack Align: May be called with mis-aligned SP.
 9145              		@ args = 0, pretend = 0, frame = 0
 9146              		@ frame_needed = 0, uses_anonymous_args = 0
 9147              		@ link register save eliminated.
 9148 0000 6846     		mov	r0, sp	@,
 9149 0002 20F00701 		bic	r1, r0, #7	@,,
 9150 0006 8D46     		mov	sp, r1	@,
 9151 0008 01B4     		push	{r0}	@
 9152              	@ main.c:5139: 		TIM3->SR = 0;
 9153 000a 0020     		movs	r0, #0	@ tmp122,
 9154              	@ main.c:5143: 		N = Timt3     + TIM3_ARR; Timt3 = N;
 9155 000c 4FF6FF73 		movw	r3, #65535	@ tmp124,
 9156              	@ main.c:5139: 		TIM3->SR = 0;
 9157 0010 0C4A     		ldr	r2, .L726	@ tmp120,
 9158              	@ main.c:5143: 		N = Timt3     + TIM3_ARR; Timt3 = N;
 9159 0012 0D49     		ldr	r1, .L726+4	@ tmp123,
 9160              	@ main.c:5139: 		TIM3->SR = 0;
 9161 0014 1082     		strh	r0, [r2, #16]	@ movhi	@ tmp122, MEM[(struct TIM_TypeDef *)1073742848B].SR
 9162              	@ main.c:5143: 		N = Timt3     + TIM3_ARR; Timt3 = N;
 9163 0016 0A68     		ldr	r2, [r1]	@ Timt3.265_1, Timt3
 9164              	@ main.c:5144: 		n = delay3_us + TIM3_ARR; delay3_us = n;
 9165 0018 0C48     		ldr	r0, .L726+8	@ tmp126,
 9166              	@ main.c:5143: 		N = Timt3     + TIM3_ARR; Timt3 = N;
 9167 001a 1A44     		add	r2, r2, r3	@ N, tmp124
 9168 001c 0A60     		str	r2, [r1]	@ N, Timt3
 9169              	@ main.c:5144: 		n = delay3_us + TIM3_ARR; delay3_us = n;
 9170 001e 0268     		ldr	r2, [r0]	@ delay3_us.266_2, delay3_us
 9171              	@ main.c:5148: 		n = (t3rg0 + TIM3_ARR); t3rg0 = n;
 9172 0020 0B49     		ldr	r1, .L726+12	@ tmp129,
 9173              	@ main.c:5144: 		n = delay3_us + TIM3_ARR; delay3_us = n;
 9174 0022 1A44     		add	r2, r2, r3	@ n, tmp124
 9175 0024 0260     		str	r2, [r0]	@ n, delay3_us
 9176              	@ main.c:5148: 		n = (t3rg0 + TIM3_ARR); t3rg0 = n;
 9177 0026 0A68     		ldr	r2, [r1]	@ t3rg0.267_3, t3rg0
ARM GAS  /tmp/cczkEFU1.s 			page 162


 9178              	@ main.c:5149: 		n = (t3rg1 + TIM3_ARR); t3rg1 = n;
 9179 0028 0A48     		ldr	r0, .L726+16	@ tmp132,
 9180              	@ main.c:5148: 		n = (t3rg0 + TIM3_ARR); t3rg0 = n;
 9181 002a 1A44     		add	r2, r2, r3	@ n, tmp124
 9182 002c 0A60     		str	r2, [r1]	@ n, t3rg0
 9183              	@ main.c:5149: 		n = (t3rg1 + TIM3_ARR); t3rg1 = n;
 9184 002e 0268     		ldr	r2, [r0]	@ t3rg1.268_4, t3rg1
 9185              	@ main.c:5150: 		n = (t3rg2 + TIM3_ARR); t3rg2 = n;
 9186 0030 0949     		ldr	r1, .L726+20	@ tmp135,
 9187              	@ main.c:5149: 		n = (t3rg1 + TIM3_ARR); t3rg1 = n;
 9188 0032 1A44     		add	r2, r2, r3	@ n, tmp124
 9189 0034 0260     		str	r2, [r0]	@ n, t3rg1
 9190              	@ main.c:5150: 		n = (t3rg2 + TIM3_ARR); t3rg2 = n;
 9191 0036 0A68     		ldr	r2, [r1]	@ t3rg2.269_5, t3rg2
 9192              	@ main.c:5154: 	}
 9193 0038 01BC     		pop	{r0}	@
 9194              	@ main.c:5150: 		n = (t3rg2 + TIM3_ARR); t3rg2 = n;
 9195 003a 1344     		add	r3, r3, r2	@ n, t3rg2.269_5
 9196 003c 0B60     		str	r3, [r1]	@ n, t3rg2
 9197              	@ main.c:5154: 	}
 9198 003e 8546     		mov	sp, r0	@,
 9199 0040 7047     		bx	lr	@
 9200              	.L727:
 9201 0042 00BF     		.align	2
 9202              	.L726:
 9203 0044 00040040 		.word	1073742848
 9204 0048 00000000 		.word	Timt3
 9205 004c 00000000 		.word	delay3_us
 9206 0050 00000000 		.word	t3rg0
 9207 0054 00000000 		.word	t3rg1
 9208 0058 00000000 		.word	t3rg2
 9209              		.size	TIM3_IRQHandler, .-TIM3_IRQHandler
 9210              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 9211              		.align	1
 9212              		.p2align 2,,3
 9213              		.global	EXTI0_IRQHandler
 9214              		.syntax unified
 9215              		.thumb
 9216              		.thumb_func
 9217              		.fpu softvfp
 9218              		.type	EXTI0_IRQHandler, %function
 9219              	EXTI0_IRQHandler:
 9220              		@ Stack Align: May be called with mis-aligned SP.
 9221              		@ args = 0, pretend = 0, frame = 0
 9222              		@ frame_needed = 0, uses_anonymous_args = 0
 9223              		@ link register save eliminated.
 9224 0000 6846     		mov	r0, sp	@,
 9225 0002 20F00701 		bic	r1, r0, #7	@,,
 9226 0006 8D46     		mov	sp, r1	@,
 9227              	@ main.c:5156: 		if(PB0_i){
 9228 0008 064B     		ldr	r3, .L733	@ tmp116,
 9229              	@ main.c:5155: __attribute__((interrupt)) void EXTI0_IRQHandler(void)			{
 9230 000a 01B4     		push	{r0}	@
 9231              	@ main.c:5156: 		if(PB0_i){
 9232 000c 1B68     		ldr	r3, [r3]	@ _1, MEM[(volatile long unsigned int *)1109491968B]
 9233 000e 1BB1     		cbz	r3, .L729	@ _1,
 9234              	@ main.c:5157: 			flag_9=1;
ARM GAS  /tmp/cczkEFU1.s 			page 163


 9235 0010 0122     		movs	r2, #1	@ tmp120,
 9236 0012 054B     		ldr	r3, .L733+4	@ tmp118,
 9237 0014 5B01     		lsls	r3, r3, #5	@ tmp119, tmp118,
 9238 0016 5A62     		str	r2, [r3, #36]	@ tmp120, *_6
 9239              	.L729:
 9240              	@ main.c:5159: 		EXTI->PR   = EXTI_PR_PR0;				// Clear interupt request
 9241 0018 0122     		movs	r2, #1	@ tmp122,
 9242 001a 044B     		ldr	r3, .L733+8	@ tmp121,
 9243              	@ main.c:5160: 	}
 9244 001c 01BC     		pop	{r0}	@
 9245              	@ main.c:5159: 		EXTI->PR   = EXTI_PR_PR0;				// Clear interupt request
 9246 001e 5A61     		str	r2, [r3, #20]	@ tmp122, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9247              	@ main.c:5160: 	}
 9248 0020 8546     		mov	sp, r0	@,
 9249 0022 7047     		bx	lr	@
 9250              	.L734:
 9251              		.align	2
 9252              	.L733:
 9253 0024 00812142 		.word	1109491968
 9254 0028 00001001 		.word	.LANCHOR18+17825792
 9255 002c 00040140 		.word	1073808384
 9256              		.size	EXTI0_IRQHandler, .-EXTI0_IRQHandler
 9257              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
 9258              		.align	1
 9259              		.p2align 2,,3
 9260              		.global	EXTI1_IRQHandler
 9261              		.syntax unified
 9262              		.thumb
 9263              		.thumb_func
 9264              		.fpu softvfp
 9265              		.type	EXTI1_IRQHandler, %function
 9266              	EXTI1_IRQHandler:
 9267              		@ Stack Align: May be called with mis-aligned SP.
 9268              		@ args = 0, pretend = 0, frame = 0
 9269              		@ frame_needed = 0, uses_anonymous_args = 0
 9270              		@ link register save eliminated.
 9271 0000 6846     		mov	r0, sp	@,
 9272 0002 20F00701 		bic	r1, r0, #7	@,,
 9273 0006 8D46     		mov	sp, r1	@,
 9274              	@ main.c:5163: 		EXTI->PR   = EXTI_PR_PR1;				// Clear interupt request
 9275 0008 0221     		movs	r1, #2	@ tmp113,
 9276 000a 054B     		ldr	r3, .L736	@ tmp112,
 9277              	@ main.c:5164: 		LED ^=1;
 9278 000c 054A     		ldr	r2, .L736+4	@ tmp114,
 9279              	@ main.c:5161: __attribute__((interrupt)) void EXTI1_IRQHandler(void)			{
 9280 000e 01B4     		push	{r0}	@
 9281              	@ main.c:5163: 		EXTI->PR   = EXTI_PR_PR1;				// Clear interupt request
 9282 0010 5961     		str	r1, [r3, #20]	@ tmp113, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9283              	@ main.c:5164: 		LED ^=1;
 9284 0012 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109524916B]
 9285              	@ main.c:5165: 	}
 9286 0014 01BC     		pop	{r0}	@
 9287              	@ main.c:5164: 		LED ^=1;
 9288 0016 83F00103 		eor	r3, r3, #1	@ _2, _1,
 9289 001a 1360     		str	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109524916B]
 9290              	@ main.c:5165: 	}
 9291 001c 8546     		mov	sp, r0	@,
ARM GAS  /tmp/cczkEFU1.s 			page 164


 9292 001e 7047     		bx	lr	@
 9293              	.L737:
 9294              		.align	2
 9295              	.L736:
 9296 0020 00040140 		.word	1073808384
 9297 0024 B4012242 		.word	1109524916
 9298              		.size	EXTI1_IRQHandler, .-EXTI1_IRQHandler
 9299              		.section	.text.EXTI2_IRQHandler,"ax",%progbits
 9300              		.align	1
 9301              		.p2align 2,,3
 9302              		.global	EXTI2_IRQHandler
 9303              		.syntax unified
 9304              		.thumb
 9305              		.thumb_func
 9306              		.fpu softvfp
 9307              		.type	EXTI2_IRQHandler, %function
 9308              	EXTI2_IRQHandler:
 9309              		@ Stack Align: May be called with mis-aligned SP.
 9310              		@ args = 0, pretend = 0, frame = 0
 9311              		@ frame_needed = 0, uses_anonymous_args = 0
 9312              		@ link register save eliminated.
 9313 0000 6846     		mov	r0, sp	@,
 9314 0002 20F00701 		bic	r1, r0, #7	@,,
 9315 0006 8D46     		mov	sp, r1	@,
 9316              	@ main.c:5167: 		bEXTI_PR_2 = 1;
 9317 0008 0121     		movs	r1, #1	@ tmp113,
 9318 000a 054B     		ldr	r3, .L739	@ tmp112,
 9319              	@ main.c:5168: 		LED ^= 1;
 9320 000c 054A     		ldr	r2, .L739+4	@ tmp114,
 9321              	@ main.c:5166: __attribute__((interrupt)) void EXTI2_IRQHandler(void)			{
 9322 000e 01B4     		push	{r0}	@
 9323              	@ main.c:5167: 		bEXTI_PR_2 = 1;
 9324 0010 1960     		str	r1, [r3]	@ tmp113, MEM[(volatile long unsigned int *)1109426824B]
 9325              	@ main.c:5168: 		LED ^= 1;
 9326 0012 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109524916B]
 9327              	@ main.c:5169: 	}
 9328 0014 01BC     		pop	{r0}	@
 9329              	@ main.c:5168: 		LED ^= 1;
 9330 0016 4B40     		eors	r3, r3, r1	@, _2, _1,
 9331 0018 1360     		str	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109524916B]
 9332              	@ main.c:5169: 	}
 9333 001a 8546     		mov	sp, r0	@,
 9334 001c 7047     		bx	lr	@
 9335              	.L740:
 9336 001e 00BF     		.align	2
 9337              	.L739:
 9338 0020 88822042 		.word	1109426824
 9339 0024 B4012242 		.word	1109524916
 9340              		.size	EXTI2_IRQHandler, .-EXTI2_IRQHandler
 9341              		.section	.text.EXTI3_IRQHandler,"ax",%progbits
 9342              		.align	1
 9343              		.p2align 2,,3
 9344              		.global	EXTI3_IRQHandler
 9345              		.syntax unified
 9346              		.thumb
 9347              		.thumb_func
 9348              		.fpu softvfp
ARM GAS  /tmp/cczkEFU1.s 			page 165


 9349              		.type	EXTI3_IRQHandler, %function
 9350              	EXTI3_IRQHandler:
 9351              		@ Stack Align: May be called with mis-aligned SP.
 9352              		@ args = 0, pretend = 0, frame = 0
 9353              		@ frame_needed = 0, uses_anonymous_args = 0
 9354              		@ link register save eliminated.
 9355 0000 6846     		mov	r0, sp	@,
 9356 0002 20F00701 		bic	r1, r0, #7	@,,
 9357 0006 8D46     		mov	sp, r1	@,
 9358              	@ main.c:5171: 		EXTI->PR   = EXTI_PR_PR3;				// Clear interupt request
 9359 0008 0821     		movs	r1, #8	@ tmp113,
 9360 000a 054B     		ldr	r3, .L742	@ tmp112,
 9361              	@ main.c:5172: 		LED ^=1;
 9362 000c 054A     		ldr	r2, .L742+4	@ tmp114,
 9363              	@ main.c:5170: __attribute__((interrupt)) void EXTI3_IRQHandler(void)			{
 9364 000e 01B4     		push	{r0}	@
 9365              	@ main.c:5171: 		EXTI->PR   = EXTI_PR_PR3;				// Clear interupt request
 9366 0010 5961     		str	r1, [r3, #20]	@ tmp113, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9367              	@ main.c:5172: 		LED ^=1;
 9368 0012 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109524916B]
 9369              	@ main.c:5173: 	}
 9370 0014 01BC     		pop	{r0}	@
 9371              	@ main.c:5172: 		LED ^=1;
 9372 0016 83F00103 		eor	r3, r3, #1	@ _2, _1,
 9373 001a 1360     		str	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109524916B]
 9374              	@ main.c:5173: 	}
 9375 001c 8546     		mov	sp, r0	@,
 9376 001e 7047     		bx	lr	@
 9377              	.L743:
 9378              		.align	2
 9379              	.L742:
 9380 0020 00040140 		.word	1073808384
 9381 0024 B4012242 		.word	1109524916
 9382              		.size	EXTI3_IRQHandler, .-EXTI3_IRQHandler
 9383              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
 9384              		.align	1
 9385              		.p2align 2,,3
 9386              		.global	EXTI4_IRQHandler
 9387              		.syntax unified
 9388              		.thumb
 9389              		.thumb_func
 9390              		.fpu softvfp
 9391              		.type	EXTI4_IRQHandler, %function
 9392              	EXTI4_IRQHandler:
 9393              		@ Stack Align: May be called with mis-aligned SP.
 9394              		@ args = 0, pretend = 0, frame = 0
 9395              		@ frame_needed = 0, uses_anonymous_args = 0
 9396              		@ link register save eliminated.
 9397 0000 6846     		mov	r0, sp	@,
 9398 0002 20F00701 		bic	r1, r0, #7	@,,
 9399 0006 8D46     		mov	sp, r1	@,
 9400              	@ main.c:5175: 		EXTI->PR   = EXTI_PR_PR4;			
 9401 0008 1021     		movs	r1, #16	@ tmp113,
 9402 000a 054B     		ldr	r3, .L745	@ tmp112,
 9403              	@ main.c:5176: 		LED ^= 1;
 9404 000c 054A     		ldr	r2, .L745+4	@ tmp114,
 9405              	@ main.c:5174: __attribute__((interrupt)) void EXTI4_IRQHandler(void)			{
ARM GAS  /tmp/cczkEFU1.s 			page 166


 9406 000e 01B4     		push	{r0}	@
 9407              	@ main.c:5175: 		EXTI->PR   = EXTI_PR_PR4;			
 9408 0010 5961     		str	r1, [r3, #20]	@ tmp113, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9409              	@ main.c:5176: 		LED ^= 1;
 9410 0012 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109524916B]
 9411              	@ main.c:5177: 	}
 9412 0014 01BC     		pop	{r0}	@
 9413              	@ main.c:5176: 		LED ^= 1;
 9414 0016 83F00103 		eor	r3, r3, #1	@ _2, _1,
 9415 001a 1360     		str	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109524916B]
 9416              	@ main.c:5177: 	}
 9417 001c 8546     		mov	sp, r0	@,
 9418 001e 7047     		bx	lr	@
 9419              	.L746:
 9420              		.align	2
 9421              	.L745:
 9422 0020 00040140 		.word	1073808384
 9423 0024 B4012242 		.word	1109524916
 9424              		.size	EXTI4_IRQHandler, .-EXTI4_IRQHandler
 9425              		.section	.text.EXTI15_10_IRQHandler,"ax",%progbits
 9426              		.align	1
 9427              		.p2align 2,,3
 9428              		.global	EXTI15_10_IRQHandler
 9429              		.syntax unified
 9430              		.thumb
 9431              		.thumb_func
 9432              		.fpu softvfp
 9433              		.type	EXTI15_10_IRQHandler, %function
 9434              	EXTI15_10_IRQHandler:
 9435              		@ Stack Align: May be called with mis-aligned SP.
 9436              		@ args = 0, pretend = 0, frame = 0
 9437              		@ frame_needed = 0, uses_anonymous_args = 0
 9438              		@ link register save eliminated.
 9439 0000 6846     		mov	r0, sp	@,
 9440 0002 20F00701 		bic	r1, r0, #7	@,,
 9441 0006 8D46     		mov	sp, r1	@,
 9442              	@ main.c:5179: 		if(bEXTI_PR_13) {
 9443 0008 044B     		ldr	r3, .L752	@ tmp111,
 9444              	@ main.c:5178: __attribute__((interrupt)) void EXTI15_10_IRQHandler(void)	{
 9445 000a 01B4     		push	{r0}	@
 9446              	@ main.c:5179: 		if(bEXTI_PR_13) {
 9447 000c 1A68     		ldr	r2, [r3]	@ _1, MEM[(volatile long unsigned int *)1109426868B]
 9448 000e 0AB1     		cbz	r2, .L747	@ _1,
 9449              	@ main.c:5180: 			bEXTI_PR_13 = 1;
 9450 0010 0122     		movs	r2, #1	@ tmp113,
 9451 0012 1A60     		str	r2, [r3]	@ tmp113, MEM[(volatile long unsigned int *)1109426868B]
 9452              	.L747:
 9453              	@ main.c:5184: 	}
 9454 0014 01BC     		pop	{r0}	@
 9455 0016 8546     		mov	sp, r0	@,
 9456 0018 7047     		bx	lr	@
 9457              	.L753:
 9458 001a 00BF     		.align	2
 9459              	.L752:
 9460 001c B4822042 		.word	1109426868
 9461              		.size	EXTI15_10_IRQHandler, .-EXTI15_10_IRQHandler
 9462              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
ARM GAS  /tmp/cczkEFU1.s 			page 167


 9463              		.align	1
 9464              		.p2align 2,,3
 9465              		.global	EXTI9_5_IRQHandler
 9466              		.syntax unified
 9467              		.thumb
 9468              		.thumb_func
 9469              		.fpu softvfp
 9470              		.type	EXTI9_5_IRQHandler, %function
 9471              	EXTI9_5_IRQHandler:
 9472              		@ Stack Align: May be called with mis-aligned SP.
 9473              		@ args = 0, pretend = 0, frame = 0
 9474              		@ frame_needed = 0, uses_anonymous_args = 0
 9475              		@ link register save eliminated.
 9476 0000 6846     		mov	r0, sp	@,
 9477 0002 20F00701 		bic	r1, r0, #7	@,,
 9478 0006 8D46     		mov	sp, r1	@,
 9479              	@ main.c:5186: 		if((bPBI_6 == 0)&&(EXTI->PR & EXTI_PR_PR6)) {			// check request PB6 touchpad
 9480 0008 0B4B     		ldr	r3, .L759	@ tmp120,
 9481              	@ main.c:5185: __attribute__((interrupt)) void EXTI9_5_IRQHandler	 (void)	{
 9482 000a 01B4     		push	{r0}	@
 9483              	@ main.c:5186: 		if((bPBI_6 == 0)&&(EXTI->PR & EXTI_PR_PR6)) {			// check request PB6 touchpad
 9484 000c 1B68     		ldr	r3, [r3]	@ _1, MEM[(volatile long unsigned int *)1109491992B]
 9485 000e 83B9     		cbnz	r3, .L754	@ _1,
 9486              	@ main.c:5186: 		if((bPBI_6 == 0)&&(EXTI->PR & EXTI_PR_PR6)) {			// check request PB6 touchpad
 9487 0010 03F18043 		add	r3, r3, #1073741824	@ tmp121, tmp121,
 9488 0014 03F58233 		add	r3, r3, #66560	@ tmp121, tmp121,
 9489 0018 5A69     		ldr	r2, [r3, #20]	@ _2, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9490 001a 5206     		lsls	r2, r2, #25	@, _2,
 9491 001c 09D5     		bpl	.L754	@,
 9492              	@ main.c:5189: 			f1_tpirq   = 1;									// set IRQ_TP FLAG
 9493 001e 0120     		movs	r0, #1	@ tmp126,
 9494              	@ main.c:5190: 			EXTI->PR   = EXTI_PR_PR6;				// Clear interupt request
 9495 0020 4021     		movs	r1, #64	@ tmp128,
 9496              	@ main.c:5189: 			f1_tpirq   = 1;									// set IRQ_TP FLAG
 9497 0022 064A     		ldr	r2, .L759+4	@ tmp124,
 9498 0024 5201     		lsls	r2, r2, #5	@ tmp125, tmp124,
 9499 0026 5060     		str	r0, [r2, #4]	@ tmp126, *_8
 9500              	@ main.c:5190: 			EXTI->PR   = EXTI_PR_PR6;				// Clear interupt request
 9501 0028 5961     		str	r1, [r3, #20]	@ tmp128, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9502              	@ main.c:5193: 			EXTI->FTSR &= ~EXTI_FTSR_TR6;  	// Failing trigger disabled
 9503 002a DA68     		ldr	r2, [r3, #12]	@ _9, MEM[(struct EXTI_TypeDef *)1073808384B].FTSR
 9504 002c 22F04002 		bic	r2, r2, #64	@ _10, _9,
 9505 0030 DA60     		str	r2, [r3, #12]	@ _10, MEM[(struct EXTI_TypeDef *)1073808384B].FTSR
 9506              	.L754:
 9507              	@ main.c:5197: 	}
 9508 0032 01BC     		pop	{r0}	@
 9509 0034 8546     		mov	sp, r0	@,
 9510 0036 7047     		bx	lr	@
 9511              	.L760:
 9512              		.align	2
 9513              	.L759:
 9514 0038 18812142 		.word	1109491992
 9515 003c 00001001 		.word	.LANCHOR18+17825792
 9516              		.size	EXTI9_5_IRQHandler, .-EXTI9_5_IRQHandler
 9517              		.section	.text.RTC_IRQHandler,"ax",%progbits
 9518              		.align	1
 9519              		.p2align 2,,3
ARM GAS  /tmp/cczkEFU1.s 			page 168


 9520              		.global	RTC_IRQHandler
 9521              		.syntax unified
 9522              		.thumb
 9523              		.thumb_func
 9524              		.fpu softvfp
 9525              		.type	RTC_IRQHandler, %function
 9526              	RTC_IRQHandler:
 9527              		@ Stack Align: May be called with mis-aligned SP.
 9528              		@ args = 0, pretend = 0, frame = 0
 9529              		@ frame_needed = 0, uses_anonymous_args = 0
 9530              		@ link register save eliminated.
 9531 0000 6846     		mov	r0, sp	@,
 9532 0002 20F00701 		bic	r1, r0, #7	@,,
 9533 0006 8D46     		mov	sp, r1	@,
 9534              	@ main.c:5202: 		f3_rtc_1sec = 1;
 9535 0008 0121     		movs	r1, #1	@ tmp121,
 9536              	@ main.c:5198: __attribute__((interrupt)) void RTC_IRQHandler 	(void)			{
 9537 000a 11B4     		push	{r0, r4}	@
 9538              	@ main.c:5201: 		bRTC_CRL_SECF = 0;		//Clear Interrupt Flag bit
 9539 000c 0024     		movs	r4, #0	@ tmp117,
 9540              	@ main.c:5202: 		f3_rtc_1sec = 1;
 9541 000e 064B     		ldr	r3, .L765	@ tmp119,
 9542              	@ main.c:5201: 		bRTC_CRL_SECF = 0;		//Clear Interrupt Flag bit
 9543 0010 0648     		ldr	r0, .L765+4	@ tmp116,
 9544              	@ main.c:5202: 		f3_rtc_1sec = 1;
 9545 0012 5B01     		lsls	r3, r3, #5	@ tmp120, tmp119,
 9546              	@ main.c:5203: 		while( bRTC_CRL_RTOFF == 0 );
 9547 0014 064A     		ldr	r2, .L765+8	@ tmp122,
 9548              	@ main.c:5201: 		bRTC_CRL_SECF = 0;		//Clear Interrupt Flag bit
 9549 0016 0460     		str	r4, [r0]	@ tmp117, MEM[(volatile long unsigned int *)1107624064B]
 9550              	@ main.c:5202: 		f3_rtc_1sec = 1;
 9551 0018 D960     		str	r1, [r3, #12]	@ tmp121, *_5
 9552              	.L762:
 9553              	@ main.c:5203: 		while( bRTC_CRL_RTOFF == 0 );
 9554 001a 1368     		ldr	r3, [r2]	@ _6, MEM[(volatile long unsigned int *)1107624084B]
 9555 001c 002B     		cmp	r3, #0	@ _6
 9556 001e FCD0     		beq	.L762	@
 9557              	@ main.c:5204: 	}
 9558 0020 11BC     		pop	{r0, r4}	@
 9559 0022 8546     		mov	sp, r0	@,
 9560 0024 7047     		bx	lr	@
 9561              	.L766:
 9562 0026 00BF     		.align	2
 9563              	.L765:
 9564 0028 00001001 		.word	.LANCHOR18+17825792
 9565 002c 80000542 		.word	1107624064
 9566 0030 94000542 		.word	1107624084
 9567              		.size	RTC_IRQHandler, .-RTC_IRQHandler
 9568              		.section	.text.RTCAlarm_IRQHandler,"ax",%progbits
 9569              		.align	1
 9570              		.p2align 2,,3
 9571              		.global	RTCAlarm_IRQHandler
 9572              		.syntax unified
 9573              		.thumb
 9574              		.thumb_func
 9575              		.fpu softvfp
 9576              		.type	RTCAlarm_IRQHandler, %function
ARM GAS  /tmp/cczkEFU1.s 			page 169


 9577              	RTCAlarm_IRQHandler:
 9578              		@ Stack Align: May be called with mis-aligned SP.
 9579              		@ args = 0, pretend = 0, frame = 0
 9580              		@ frame_needed = 0, uses_anonymous_args = 0
 9581              		@ link register save eliminated.
 9582 0000 6846     		mov	r0, sp	@,
 9583 0002 20F00701 		bic	r1, r0, #7	@,,
 9584 0006 8D46     		mov	sp, r1	@,
 9585              	@ main.c:5206: 		RTC->CRL &= ~(RTC_CRL_ALRF); // potrzebne do wakeup
 9586 0008 0749     		ldr	r1, .L768	@ tmp114,
 9587              	@ main.c:5207: 		EXTI->PR |= EXTI_PR_PR17;
 9588 000a 084A     		ldr	r2, .L768+4	@ tmp120,
 9589              	@ main.c:5206: 		RTC->CRL &= ~(RTC_CRL_ALRF); // potrzebne do wakeup
 9590 000c 8B88     		ldrh	r3, [r1, #4]	@, MEM[(struct RTC_TypeDef *)1073752064B].CRL
 9591              	@ main.c:5205: __attribute__((interrupt)) void RTCAlarm_IRQHandler(void){
 9592 000e 01B4     		push	{r0}	@
 9593              	@ main.c:5206: 		RTC->CRL &= ~(RTC_CRL_ALRF); // potrzebne do wakeup
 9594 0010 23F00203 		bic	r3, r3, #2	@ _2, MEM[(struct RTC_TypeDef *)1073752064B].CRL,
 9595 0014 1B04     		lsls	r3, r3, #16	@ _2, _2,
 9596 0016 1B0C     		lsrs	r3, r3, #16	@ _2, _2,
 9597 0018 8B80     		strh	r3, [r1, #4]	@ movhi	@ _2, MEM[(struct RTC_TypeDef *)1073752064B].CRL
 9598              	@ main.c:5207: 		EXTI->PR |= EXTI_PR_PR17;
 9599 001a 5369     		ldr	r3, [r2, #20]	@ _3, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9600              	@ main.c:5210: 	}
 9601 001c 01BC     		pop	{r0}	@
 9602              	@ main.c:5207: 		EXTI->PR |= EXTI_PR_PR17;
 9603 001e 43F40033 		orr	r3, r3, #131072	@ _4, _3,
 9604 0022 5361     		str	r3, [r2, #20]	@ _4, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9605              	@ main.c:5210: 	}
 9606 0024 8546     		mov	sp, r0	@,
 9607 0026 7047     		bx	lr	@
 9608              	.L769:
 9609              		.align	2
 9610              	.L768:
 9611 0028 00280040 		.word	1073752064
 9612 002c 00040140 		.word	1073808384
 9613              		.size	RTCAlarm_IRQHandler, .-RTCAlarm_IRQHandler
 9614              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 9615              		.align	1
 9616              		.p2align 2,,3
 9617              		.global	DMA1_Channel1_IRQHandler
 9618              		.syntax unified
 9619              		.thumb
 9620              		.thumb_func
 9621              		.fpu softvfp
 9622              		.type	DMA1_Channel1_IRQHandler, %function
 9623              	DMA1_Channel1_IRQHandler:
 9624              		@ Stack Align: May be called with mis-aligned SP.
 9625              		@ args = 0, pretend = 0, frame = 0
 9626              		@ frame_needed = 0, uses_anonymous_args = 0
 9627              		@ link register save eliminated.
 9628 0000 6846     		mov	r0, sp	@,
 9629 0002 20F00701 		bic	r1, r0, #7	@,,
 9630 0006 8D46     		mov	sp, r1	@,
 9631              	@ main.c:5212: 		if(DMA1->ISR & DMA_ISR_GIF1){
 9632 0008 084B     		ldr	r3, .L775	@ tmp119,
 9633              	@ main.c:5211: __attribute__((interrupt)) void DMA1_Channel1_IRQHandler(void){
ARM GAS  /tmp/cczkEFU1.s 			page 170


 9634 000a 11B4     		push	{r0, r4}	@
 9635              	@ main.c:5212: 		if(DMA1->ISR & DMA_ISR_GIF1){
 9636 000c 1A68     		ldr	r2, [r3]	@ _1, MEM[(struct DMA_TypeDef *)1073872896B].ISR
 9637 000e D207     		lsls	r2, r2, #31	@, _1,
 9638 0010 09D5     		bpl	.L770	@,
 9639              	@ main.c:5217: 			f7_dma1 = 1;
 9640 0012 0120     		movs	r0, #1	@ tmp126,
 9641              	@ main.c:5214: 			DMA1->IFCR =                  DMA_IFCR_CTCIF1;
 9642 0014 0224     		movs	r4, #2	@ tmp122,
 9643              	@ main.c:5217: 			f7_dma1 = 1;
 9644 0016 064A     		ldr	r2, .L775+4	@ tmp124,
 9645              	@ main.c:5218: 			LED1   ^= 1;
 9646 0018 0649     		ldr	r1, .L775+8	@ tmp127,
 9647              	@ main.c:5217: 			f7_dma1 = 1;
 9648 001a 5201     		lsls	r2, r2, #5	@ tmp125, tmp124,
 9649              	@ main.c:5214: 			DMA1->IFCR =                  DMA_IFCR_CTCIF1;
 9650 001c 5C60     		str	r4, [r3, #4]	@ tmp122, MEM[(struct DMA_TypeDef *)1073872896B].IFCR
 9651              	@ main.c:5217: 			f7_dma1 = 1;
 9652 001e D061     		str	r0, [r2, #28]	@ tmp126, *_7
 9653              	@ main.c:5218: 			LED1   ^= 1;
 9654 0020 0B68     		ldr	r3, [r1]	@ _8, MEM[(volatile long unsigned int *)1109492096B]
 9655 0022 4340     		eors	r3, r3, r0	@, _9, _8,
 9656 0024 0B60     		str	r3, [r1]	@ _9, MEM[(volatile long unsigned int *)1109492096B]
 9657              	.L770:
 9658              	@ main.c:5222: 	}
 9659 0026 11BC     		pop	{r0, r4}	@
 9660 0028 8546     		mov	sp, r0	@,
 9661 002a 7047     		bx	lr	@
 9662              	.L776:
 9663              		.align	2
 9664              	.L775:
 9665 002c 00000240 		.word	1073872896
 9666 0030 00001001 		.word	.LANCHOR18+17825792
 9667 0034 80812142 		.word	1109492096
 9668              		.size	DMA1_Channel1_IRQHandler, .-DMA1_Channel1_IRQHandler
 9669              		.section	.text.FSMC_IRQHandler,"ax",%progbits
 9670              		.align	1
 9671              		.p2align 2,,3
 9672              		.global	FSMC_IRQHandler
 9673              		.syntax unified
 9674              		.thumb
 9675              		.thumb_func
 9676              		.fpu softvfp
 9677              		.type	FSMC_IRQHandler, %function
 9678              	FSMC_IRQHandler:
 9679              		@ Stack Align: May be called with mis-aligned SP.
 9680              		@ args = 0, pretend = 0, frame = 0
 9681              		@ frame_needed = 0, uses_anonymous_args = 0
 9682              		@ link register save eliminated.
 9683 0000 6846     		mov	r0, sp	@,
 9684 0002 20F00701 		bic	r1, r0, #7	@,,
 9685 0006 8D46     		mov	sp, r1	@,
 9686 0008 01B4     		push	{r0}	@
 9687              	@ main.c:5225: }
 9688 000a 01BC     		pop	{r0}	@
 9689 000c 8546     		mov	sp, r0	@,
 9690 000e 7047     		bx	lr	@
ARM GAS  /tmp/cczkEFU1.s 			page 171


 9691              		.size	FSMC_IRQHandler, .-FSMC_IRQHandler
 9692              		.section	.text.DACDmaInit,"ax",%progbits
 9693              		.align	1
 9694              		.p2align 2,,3
 9695              		.global	DACDmaInit
 9696              		.syntax unified
 9697              		.thumb
 9698              		.thumb_func
 9699              		.fpu softvfp
 9700              		.type	DACDmaInit, %function
 9701              	DACDmaInit:
 9702              		@ args = 0, pretend = 0, frame = 0
 9703              		@ frame_needed = 0, uses_anonymous_args = 0
 9704              		@ link register save eliminated.
 9705 0000 10B4     		push	{r4}	@
 9706              	@ main.c:5416: 	DAC->DHR12RD	= (0<<16) | 900;
 9707 0002 4FF46174 		mov	r4, #900	@ tmp125,
 9708              	@ main.c:5407: 	RCC->APB1ENR  |= RCC_APB1ENR_DACEN;
 9709 0006 0A48     		ldr	r0, .L780	@ tmp116,
 9710              	@ main.c:5408: 	GPIOA->CRL   	&= 0xff00ffff;
 9711 0008 0A4B     		ldr	r3, .L780+4	@ tmp118,
 9712              	@ main.c:5407: 	RCC->APB1ENR  |= RCC_APB1ENR_DACEN;
 9713 000a C269     		ldr	r2, [r0, #28]	@ _1, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 9714              	@ main.c:5412: 	DAC->CR				= DAC_CR_TEN1|DAC_CR_TEN2|DAC_CR_WAVE1|DAC_CR_WAVE2|DAC_CR_EN1|DAC_CR_EN
 9715 000c 0A49     		ldr	r1, .L780+8	@ tmp122,
 9716              	@ main.c:5407: 	RCC->APB1ENR  |= RCC_APB1ENR_DACEN;
 9717 000e 42F00052 		orr	r2, r2, #536870912	@ _2, _1,
 9718 0012 C261     		str	r2, [r0, #28]	@ _2, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 9719              	@ main.c:5408: 	GPIOA->CRL   	&= 0xff00ffff;
 9720 0014 1A68     		ldr	r2, [r3]	@ _3, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 9721              	@ main.c:5412: 	DAC->CR				= DAC_CR_TEN1|DAC_CR_TEN2|DAC_CR_WAVE1|DAC_CR_WAVE2|DAC_CR_EN1|DAC_CR_EN
 9722 0016 0948     		ldr	r0, .L780+12	@ tmp123,
 9723              	@ main.c:5408: 	GPIOA->CRL   	&= 0xff00ffff;
 9724 0018 22F47F02 		bic	r2, r2, #16711680	@ _4, _3,
 9725 001c 1A60     		str	r2, [r3]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 9726              	@ main.c:5409: 	GPIOA->CRL   	|= 0x00dd0000;
 9727 001e 1A68     		ldr	r2, [r3]	@ _5, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 9728 0020 42F45D02 		orr	r2, r2, #14483456	@ _6, _5,
 9729 0024 1A60     		str	r2, [r3]	@ _6, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 9730              	@ main.c:5412: 	DAC->CR				= DAC_CR_TEN1|DAC_CR_TEN2|DAC_CR_WAVE1|DAC_CR_WAVE2|DAC_CR_EN1|DAC_CR_EN
 9731 0026 0860     		str	r0, [r1]	@ tmp123, MEM[(struct DAC_TypeDef *)1073771520B].CR
 9732              	@ main.c:5416: 	DAC->DHR12RD	= (0<<16) | 900;
 9733 0028 0C62     		str	r4, [r1, #32]	@ tmp125, MEM[(struct DAC_TypeDef *)1073771520B].DHR12RD
 9734              	@ main.c:5418: }
 9735 002a 10BC     		pop	{r4}	@
 9736 002c 7047     		bx	lr	@
 9737              	.L781:
 9738 002e 00BF     		.align	2
 9739              	.L780:
 9740 0030 00100240 		.word	1073876992
 9741 0034 00080140 		.word	1073809408
 9742 0038 00740040 		.word	1073771520
 9743 003c D50AD50A 		.word	181734101
 9744              		.size	DACDmaInit, .-DACDmaInit
 9745              		.section	.text.TIM4_IRQHandler,"ax",%progbits
 9746              		.align	1
 9747              		.p2align 2,,3
ARM GAS  /tmp/cczkEFU1.s 			page 172


 9748              		.global	TIM4_IRQHandler
 9749              		.syntax unified
 9750              		.thumb
 9751              		.thumb_func
 9752              		.fpu softvfp
 9753              		.type	TIM4_IRQHandler, %function
 9754              	TIM4_IRQHandler:
 9755              		@ args = 0, pretend = 0, frame = 0
 9756              		@ frame_needed = 0, uses_anonymous_args = 0
 9757              		@ link register save eliminated.
 9758              	@ main.c:5492: 		TIM4->SR = 0;
 9759 0000 0021     		movs	r1, #0	@ tmp114,
 9760 0002 034B     		ldr	r3, .L783	@ tmp112,
 9761              	@ main.c:5494: 		Tim4++;
 9762 0004 034A     		ldr	r2, .L783+4	@ tmp115,
 9763              	@ main.c:5492: 		TIM4->SR = 0;
 9764 0006 1982     		strh	r1, [r3, #16]	@ movhi	@ tmp114, MEM[(struct TIM_TypeDef *)1073743872B].SR
 9765              	@ main.c:5494: 		Tim4++;
 9766 0008 1368     		ldr	r3, [r2]	@ Tim4.274_1, Tim4
 9767 000a 0133     		adds	r3, r3, #1	@ _2, Tim4.274_1,
 9768 000c 1360     		str	r3, [r2]	@ _2, Tim4
 9769              	@ main.c:5495: 	}
 9770 000e 7047     		bx	lr	@
 9771              	.L784:
 9772              		.align	2
 9773              	.L783:
 9774 0010 00080040 		.word	1073743872
 9775 0014 00000000 		.word	Tim4
 9776              		.size	TIM4_IRQHandler, .-TIM4_IRQHandler
 9777              		.section	.text.adc1_init_injected,"ax",%progbits
 9778              		.align	1
 9779              		.p2align 2,,3
 9780              		.global	adc1_init_injected
 9781              		.syntax unified
 9782              		.thumb
 9783              		.thumb_func
 9784              		.fpu softvfp
 9785              		.type	adc1_init_injected, %function
 9786              	adc1_init_injected:
 9787              		@ args = 0, pretend = 0, frame = 0
 9788              		@ frame_needed = 0, uses_anonymous_args = 0
 9789              		@ link register save eliminated.
 9790 0000 F0B4     		push	{r4, r5, r6, r7}	@
 9791              	@ main.c:5540: 	ADC1_CR1_SCAN_bb = 1;									// enable scan mode (multi channel mode)
 9792 0002 0124     		movs	r4, #1	@ tmp144,
 9793              	@ main.c:5530: 	ADC1->SMPR2 = (0<<channel*3);
 9794 0004 0026     		movs	r6, #0	@ tmp131,
 9795              	@ main.c:5538: 	ADC1->CR2 = ADC_CR2_JEXTSEL_JSWSTART | ADC_CR2_JEXTTRIG | ADC_CR2_CAL | ADC_CR2_ADO
 9796 0006 4FF20505 		movw	r5, #61445	@ tmp142,
 9797              	@ main.c:5527: 	RCC->CFGR |= RCC_CFGR_ADCPRE_DIV2;		// divide the ADC clock by 6 -> f_SAMP = 0.85MH
 9798 000a 114A     		ldr	r2, .L793	@ tmp126,
 9799              	@ main.c:5534: 			(channel << ADC_JSQR_JSQ3_bit) |
 9800 000c 8B02     		lsls	r3, r1, #10	@ tmp133, channel,
 9801              	@ main.c:5527: 	RCC->CFGR |= RCC_CFGR_ADCPRE_DIV2;		// divide the ADC clock by 6 -> f_SAMP = 0.85MH
 9802 000e 5768     		ldr	r7, [r2, #4]	@ _1, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 9803              	@ main.c:5535: 			(channel << ADC_JSQR_JSQ2_bit) |
 9804 0010 43EAC133 		orr	r3, r3, r1, lsl #15	@ tmp134, tmp133, channel,
ARM GAS  /tmp/cczkEFU1.s 			page 173


 9805 0014 0B43     		orrs	r3, r3, r1	@, tmp135, tmp134, channel
 9806              	@ main.c:5527: 	RCC->CFGR |= RCC_CFGR_ADCPRE_DIV2;		// divide the ADC clock by 6 -> f_SAMP = 0.85MH
 9807 0016 5760     		str	r7, [r2, #4]	@ _1, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 9808              	@ main.c:5532: 	ADC1->JSQR = ((conversions - 1) << ADC_JSQR_JL_bit) |	// configure desired number o
 9809 0018 0138     		subs	r0, r0, #1	@ tmp138, conversions,
 9810              	@ main.c:5535: 			(channel << ADC_JSQR_JSQ2_bit) |
 9811 001a 43EA4113 		orr	r3, r3, r1, lsl #5	@ tmp137, tmp135, channel,
 9812 001e 43EA0053 		orr	r3, r3, r0, lsl #20	@ _12, tmp137, tmp138,
 9813              	@ main.c:5528: 	RCC->APB2ENR   |= RCC_APB2ENR_ADC1EN;	// enable clock for ADC1
 9814 0022 9069     		ldr	r0, [r2, #24]	@ _2, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 9815              	@ main.c:5530: 	ADC1->SMPR2 = (0<<channel*3);
 9816 0024 0B49     		ldr	r1, .L793+4	@ tmp130,
 9817              	@ main.c:5528: 	RCC->APB2ENR   |= RCC_APB2ENR_ADC1EN;	// enable clock for ADC1
 9818 0026 40F40070 		orr	r0, r0, #512	@ _3, _2,
 9819 002a 9061     		str	r0, [r2, #24]	@ _3, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 9820              	@ main.c:5540: 	ADC1_CR1_SCAN_bb = 1;									// enable scan mode (multi channel mode)
 9821 002c 0A4F     		ldr	r7, .L793+8	@ tmp143,
 9822              	@ main.c:5542: 	ADC1_CR2_JSWSTART_bb = 1;						// start Injected Group
 9823 002e 0B48     		ldr	r0, .L793+12	@ tmp145,
 9824              	@ main.c:5543: 	while (ADC1_SR_JSTRT_bb == 0);			// wait for conversion to start
 9825 0030 0B4A     		ldr	r2, .L793+16	@ tmp147,
 9826              	@ main.c:5530: 	ADC1->SMPR2 = (0<<channel*3);
 9827 0032 0E61     		str	r6, [r1, #16]	@ tmp131, MEM[(struct ADC_TypeDef *)1073816576B].SMPR2
 9828              	@ main.c:5532: 	ADC1->JSQR = ((conversions - 1) << ADC_JSQR_JL_bit) |	// configure desired number o
 9829 0034 8B63     		str	r3, [r1, #56]	@ _12, MEM[(struct ADC_TypeDef *)1073816576B].JSQR
 9830              	@ main.c:5538: 	ADC1->CR2 = ADC_CR2_JEXTSEL_JSWSTART | ADC_CR2_JEXTTRIG | ADC_CR2_CAL | ADC_CR2_ADO
 9831 0036 8D60     		str	r5, [r1, #8]	@ tmp142, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 9832              	@ main.c:5540: 	ADC1_CR1_SCAN_bb = 1;									// enable scan mode (multi channel mode)
 9833 0038 3C60     		str	r4, [r7]	@ tmp144, MEM[(volatile long unsigned int *)1109688480B]
 9834              	@ main.c:5542: 	ADC1_CR2_JSWSTART_bb = 1;						// start Injected Group
 9835 003a 0460     		str	r4, [r0]	@ tmp144, MEM[(volatile long unsigned int *)1109688660B]
 9836              	.L786:
 9837              	@ main.c:5543: 	while (ADC1_SR_JSTRT_bb == 0);			// wait for conversion to start
 9838 003c 1368     		ldr	r3, [r2]	@ _13, MEM[(volatile long unsigned int *)1109688332B]
 9839 003e 002B     		cmp	r3, #0	@ _13
 9840 0040 FCD0     		beq	.L786	@
 9841              	@ main.c:5549: 	while (ADC1_CR2_CAL_bb == 1);					// wait for calibration end
 9842 0042 084A     		ldr	r2, .L793+20	@ tmp148,
 9843              	.L787:
 9844              	@ main.c:5549: 	while (ADC1_CR2_CAL_bb == 1);					// wait for calibration end
 9845 0044 1368     		ldr	r3, [r2]	@ _14, MEM[(volatile long unsigned int *)1109688584B]
 9846 0046 012B     		cmp	r3, #1	@ _14,
 9847 0048 FCD0     		beq	.L787	@,
 9848              	@ main.c:5550: }
 9849 004a F0BC     		pop	{r4, r5, r6, r7}	@
 9850 004c 7047     		bx	lr	@
 9851              	.L794:
 9852 004e 00BF     		.align	2
 9853              	.L793:
 9854 0050 00100240 		.word	1073876992
 9855 0054 00240140 		.word	1073816576
 9856 0058 A0802442 		.word	1109688480
 9857 005c 54812442 		.word	1109688660
 9858 0060 0C802442 		.word	1109688332
 9859 0064 08812442 		.word	1109688584
 9860              		.size	adc1_init_injected, .-adc1_init_injected
 9861              		.section	.text.adc_get_internals,"ax",%progbits
ARM GAS  /tmp/cczkEFU1.s 			page 174


 9862              		.align	1
 9863              		.p2align 2,,3
 9864              		.global	adc_get_internals
 9865              		.syntax unified
 9866              		.thumb
 9867              		.thumb_func
 9868              		.fpu softvfp
 9869              		.type	adc_get_internals, %function
 9870              	adc_get_internals:
 9871              		@ args = 0, pretend = 0, frame = 0
 9872              		@ frame_needed = 0, uses_anonymous_args = 0
 9873              		@ link register save eliminated.
 9874              	@ main.c:5556: 	ADC1_CR2_JSWSTART_bb = 1;						// start Injected Group
 9875 0000 0122     		movs	r2, #1	@ tmp122,
 9876              	@ main.c:5551: uint32_t adc_get_internals(uint32_t avg_cycles)		{
 9877 0002 10B4     		push	{r4}	@
 9878              	@ main.c:5551: uint32_t adc_get_internals(uint32_t avg_cycles)		{
 9879 0004 0446     		mov	r4, r0	@ avg_cycles, avg_cycles
 9880              	@ main.c:5556: 	ADC1_CR2_JSWSTART_bb = 1;						// start Injected Group
 9881 0006 134B     		ldr	r3, .L809	@ tmp121,
 9882              	@ main.c:5557: 	while (ADC1_SR_JSTRT_bb == 0);			// wait for conversion to start
 9883 0008 1349     		ldr	r1, .L809+4	@ tmp123,
 9884              	@ main.c:5556: 	ADC1_CR2_JSWSTART_bb = 1;						// start Injected Group
 9885 000a 1A60     		str	r2, [r3]	@ tmp122, MEM[(volatile long unsigned int *)1109688660B]
 9886              	.L796:
 9887              	@ main.c:5557: 	while (ADC1_SR_JSTRT_bb == 0);			// wait for conversion to start
 9888 000c 0B68     		ldr	r3, [r1]	@ _1, MEM[(volatile long unsigned int *)1109688332B]
 9889 000e 002B     		cmp	r3, #0	@ _1
 9890 0010 FCD0     		beq	.L796	@
 9891              	@ main.c:5558: 	ADC1_SR_JSTRT_bb = 0;								// reset "Injected Group start of conversion" flag
 9892 0012 0023     		movs	r3, #0	@ tmp125,
 9893              	@ main.c:5559: 	while (ADC1_SR_JEOC_bb == 0);				// wait for conversions to end
 9894 0014 114A     		ldr	r2, .L809+8	@ tmp126,
 9895              	@ main.c:5558: 	ADC1_SR_JSTRT_bb = 0;								// reset "Injected Group start of conversion" flag
 9896 0016 0B60     		str	r3, [r1]	@ tmp125, MEM[(volatile long unsigned int *)1109688332B]
 9897              	.L797:
 9898              	@ main.c:5559: 	while (ADC1_SR_JEOC_bb == 0);				// wait for conversions to end
 9899 0018 1368     		ldr	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109688328B]
 9900 001a 002B     		cmp	r3, #0	@ _2
 9901 001c FCD0     		beq	.L797	@
 9902              	@ main.c:5560: 	ADC1_SR_JEOC_bb = 0;								// reset "end of conversion" flag
 9903 001e 0020     		movs	r0, #0	@ tmp128,
 9904 0020 1060     		str	r0, [r2]	@ tmp128, MEM[(volatile long unsigned int *)1109688328B]
 9905              	@ main.c:5562: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9906 0022 A4B1     		cbz	r4, .L801	@ avg_cycles,
 9907 0024 0E49     		ldr	r1, .L809+12	@ tmp129,
 9908 0026 0F4A     		ldr	r2, .L809+16	@ pretmp_5,
 9909 0028 0B1D     		adds	r3, r1, #4	@ ivtmp.772, tmp129,
 9910              	@ main.c:5563: 		value += *jdrs[i];
 9911 002a 1268     		ldr	r2, [r2]	@ _14, *prephitmp_20
 9912 002c 01EB8401 		add	r1, r1, r4, lsl #2	@ _24, tmp129, avg_cycles,
 9913              	@ main.c:5562: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9914 0030 8B42     		cmp	r3, r1	@ ivtmp.772, _24
 9915              	@ main.c:5563: 		value += *jdrs[i];
 9916 0032 1044     		add	r0, r0, r2	@ <retval>, _14
 9917              	@ main.c:5562: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9918 0034 05D0     		beq	.L799	@,
ARM GAS  /tmp/cczkEFU1.s 			page 175


 9919              	.L808:
 9920 0036 53F8042B 		ldr	r2, [r3], #4	@ pretmp_5, MEM[base: _25, offset: 0B]
 9921              	@ main.c:5563: 		value += *jdrs[i];
 9922 003a 1268     		ldr	r2, [r2]	@ _14, *prephitmp_20
 9923              	@ main.c:5562: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9924 003c 8B42     		cmp	r3, r1	@ ivtmp.772, _24
 9925              	@ main.c:5563: 		value += *jdrs[i];
 9926 003e 1044     		add	r0, r0, r2	@ <retval>, _14
 9927              	@ main.c:5562: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9928 0040 F9D1     		bne	.L808	@,
 9929              	.L799:
 9930              	@ main.c:5565: 	if (avg_cycles > 1)									// should the samples be averaged?
 9931 0042 012C     		cmp	r4, #1	@ avg_cycles,
 9932 0044 01D9     		bls	.L795	@,
 9933              	@ main.c:5568: 		value /= avg_cycles;
 9934 0046 B0FBF4F0 		udiv	r0, r0, r4	@ <retval>, <retval>, avg_cycles
 9935              	.L795:
 9936              	@ main.c:5572: }
 9937 004a 10BC     		pop	{r4}	@
 9938 004c 7047     		bx	lr	@
 9939              	.L801:
 9940              	@ main.c:5554: 	uint32_t i, value = 0;
 9941 004e 2046     		mov	r0, r4	@ <retval>, avg_cycles
 9942              	@ main.c:5572: }
 9943 0050 10BC     		pop	{r4}	@
 9944 0052 7047     		bx	lr	@
 9945              	.L810:
 9946              		.align	2
 9947              	.L809:
 9948 0054 54812442 		.word	1109688660
 9949 0058 0C802442 		.word	1109688332
 9950 005c 08802442 		.word	1109688328
 9951 0060 00000000 		.word	.LANCHOR36
 9952 0064 3C240140 		.word	1073816636
 9953              		.size	adc_get_internals, .-adc_get_internals
 9954              		.section	.text.adc_get_injected,"ax",%progbits
 9955              		.align	1
 9956              		.p2align 2,,3
 9957              		.global	adc_get_injected
 9958              		.syntax unified
 9959              		.thumb
 9960              		.thumb_func
 9961              		.fpu softvfp
 9962              		.type	adc_get_injected, %function
 9963              	adc_get_injected:
 9964              		@ args = 0, pretend = 0, frame = 0
 9965              		@ frame_needed = 0, uses_anonymous_args = 0
 9966              		@ link register save eliminated.
 9967              	@ main.c:5578: 	ADC1_CR2_JSWSTART_bb = 1;
 9968 0000 0121     		movs	r1, #1	@ tmp121,
 9969              	@ main.c:5573: uint32_t adc_get_injected(uint32_t avg_cycles)		{
 9970 0002 10B4     		push	{r4}	@
 9971              	@ main.c:5573: uint32_t adc_get_injected(uint32_t avg_cycles)		{
 9972 0004 0446     		mov	r4, r0	@ avg_cycles, avg_cycles
 9973              	@ main.c:5578: 	ADC1_CR2_JSWSTART_bb = 1;
 9974 0006 104B     		ldr	r3, .L822	@ tmp120,
 9975              	@ main.c:5579: 	while (ADC1_SR_JEOC_bb == 0);				// wait for conversions to end
ARM GAS  /tmp/cczkEFU1.s 			page 176


 9976 0008 104A     		ldr	r2, .L822+4	@ tmp122,
 9977              	@ main.c:5578: 	ADC1_CR2_JSWSTART_bb = 1;
 9978 000a 1960     		str	r1, [r3]	@ tmp121, MEM[(volatile long unsigned int *)1109688660B]
 9979              	.L812:
 9980              	@ main.c:5579: 	while (ADC1_SR_JEOC_bb == 0);				// wait for conversions to end
 9981 000c 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109688328B]
 9982 000e 002B     		cmp	r3, #0	@ _1
 9983 0010 FCD0     		beq	.L812	@
 9984              	@ main.c:5580: 	ADC1_SR_JEOC_bb = 0;								// reset "end of conversion" flag
 9985 0012 0020     		movs	r0, #0	@ tmp124,
 9986 0014 1060     		str	r0, [r2]	@ tmp124, MEM[(volatile long unsigned int *)1109688328B]
 9987              	@ main.c:5582: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9988 0016 A4B1     		cbz	r4, .L816	@ avg_cycles,
 9989 0018 0D4B     		ldr	r3, .L822+8	@ ivtmp.786,
 9990 001a 0E4A     		ldr	r2, .L822+12	@ pretmp_4,
 9991 001c 191F     		subs	r1, r3, #4	@ tmp126, ivtmp.786,
 9992 001e 01EB8401 		add	r1, r1, r4, lsl #2	@ _22, tmp126, avg_cycles,
 9993              	@ main.c:5583: 		value += *jdrs[i];
 9994 0022 1268     		ldr	r2, [r2]	@ _12, *prephitmp_18
 9995              	@ main.c:5582: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9996 0024 8B42     		cmp	r3, r1	@ ivtmp.786, _22
 9997              	@ main.c:5583: 		value += *jdrs[i];
 9998 0026 1044     		add	r0, r0, r2	@ <retval>, _12
 9999              	@ main.c:5582: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 10000 0028 05D0     		beq	.L814	@,
 10001              	.L821:
 10002 002a 53F8042B 		ldr	r2, [r3], #4	@ pretmp_4, MEM[base: _23, offset: 0B]
 10003              	@ main.c:5583: 		value += *jdrs[i];
 10004 002e 1268     		ldr	r2, [r2]	@ _12, *prephitmp_18
 10005              	@ main.c:5582: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 10006 0030 8B42     		cmp	r3, r1	@ ivtmp.786, _22
 10007              	@ main.c:5583: 		value += *jdrs[i];
 10008 0032 1044     		add	r0, r0, r2	@ <retval>, _12
 10009              	@ main.c:5582: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 10010 0034 F9D1     		bne	.L821	@,
 10011              	.L814:
 10012              	@ main.c:5585: 	if (avg_cycles > 1)									// should the samples be averaged?
 10013 0036 012C     		cmp	r4, #1	@ avg_cycles,
 10014 0038 01D9     		bls	.L811	@,
 10015              	@ main.c:5588: 		value /= avg_cycles;
 10016 003a B0FBF4F0 		udiv	r0, r0, r4	@ <retval>, <retval>, avg_cycles
 10017              	.L811:
 10018              	@ main.c:5592: }
 10019 003e 10BC     		pop	{r4}	@
 10020 0040 7047     		bx	lr	@
 10021              	.L816:
 10022              	@ main.c:5576: 	uint32_t i, value = 0;
 10023 0042 2046     		mov	r0, r4	@ <retval>, avg_cycles
 10024              	@ main.c:5592: }
 10025 0044 10BC     		pop	{r4}	@
 10026 0046 7047     		bx	lr	@
 10027              	.L823:
 10028              		.align	2
 10029              	.L822:
 10030 0048 54812442 		.word	1109688660
 10031 004c 08802442 		.word	1109688328
 10032 0050 04000000 		.word	jdrs.9072+4
ARM GAS  /tmp/cczkEFU1.s 			page 177


 10033 0054 3C240140 		.word	1073816636
 10034              		.size	adc_get_injected, .-adc_get_injected
 10035              		.section	.text.NVIC_conf,"ax",%progbits
 10036              		.align	1
 10037              		.p2align 2,,3
 10038              		.global	NVIC_conf
 10039              		.syntax unified
 10040              		.thumb
 10041              		.thumb_func
 10042              		.fpu softvfp
 10043              		.type	NVIC_conf, %function
 10044              	NVIC_conf:
 10045              		@ args = 0, pretend = 0, frame = 0
 10046              		@ frame_needed = 0, uses_anonymous_args = 0
 10047              		@ link register save eliminated.
 10048 0000 70B4     		push	{r4, r5, r6}	@
 10049              	@ main.c:5601: 	NVIC->IP[TIM1_CC_IRQn] = (0<<4);           //Set the highest priority for TIMER1, s
 10050 0002 0020     		movs	r0, #0	@ tmp122,
 10051              	@ main.c:5599: 	NVIC->IP[ADC1_2_IRQn]  = (2<<4);
 10052 0004 2025     		movs	r5, #32	@ tmp116,
 10053              	@ main.c:5600: 	NVIC->IP[DMA1_Channel1_IRQn] = (1<<4);
 10054 0006 1024     		movs	r4, #16	@ tmp119,
 10055              	@ main.c:5596: 	SCB->AIRCR |= AIRCR_VECTKEY_MASK | (3<<8);      //[Optional] Define interrupt field
 10056 0008 0749     		ldr	r1, .L826	@ tmp112,
 10057 000a 084A     		ldr	r2, .L826+4	@ _2,
 10058 000c CE68     		ldr	r6, [r1, #12]	@ _1, MEM[(struct SCB_Type *)3758157056B].AIRCR
 10059              	@ main.c:5599: 	NVIC->IP[ADC1_2_IRQn]  = (2<<4);
 10060 000e 084B     		ldr	r3, .L826+8	@ tmp115,
 10061              	@ main.c:5596: 	SCB->AIRCR |= AIRCR_VECTKEY_MASK | (3<<8);      //[Optional] Define interrupt field
 10062 0010 3243     		orrs	r2, r2, r6	@, _2, _2, _1
 10063 0012 CA60     		str	r2, [r1, #12]	@ _2, MEM[(struct SCB_Type *)3758157056B].AIRCR
 10064              	@ main.c:5604: 	NVIC->ISER[0]= (1<<TIM1_CC_IRQn )|(1<<ADC1_2_IRQn)|(1<<DMA1_Channel1_IRQn);   //Ena
 10065 0014 074A     		ldr	r2, .L826+12	@ tmp125,
 10066              	@ main.c:5599: 	NVIC->IP[ADC1_2_IRQn]  = (2<<4);
 10067 0016 83F81253 		strb	r5, [r3, #786]	@ tmp116, MEM[(struct NVIC_Type *)3758153984B].IP
 10068              	@ main.c:5600: 	NVIC->IP[DMA1_Channel1_IRQn] = (1<<4);
 10069 001a 83F80B43 		strb	r4, [r3, #779]	@ tmp119, MEM[(struct NVIC_Type *)3758153984B].IP
 10070              	@ main.c:5601: 	NVIC->IP[TIM1_CC_IRQn] = (0<<4);           //Set the highest priority for TIMER1, s
 10071 001e 83F81B03 		strb	r0, [r3, #795]	@ tmp122, MEM[(struct NVIC_Type *)3758153984B].IP
 10072              	@ main.c:5605: }
 10073 0022 70BC     		pop	{r4, r5, r6}	@
 10074              	@ main.c:5604: 	NVIC->ISER[0]= (1<<TIM1_CC_IRQn )|(1<<ADC1_2_IRQn)|(1<<DMA1_Channel1_IRQn);   //Ena
 10075 0024 1A60     		str	r2, [r3]	@ tmp125, MEM[(struct NVIC_Type *)3758153984B].ISER
 10076              	@ main.c:5605: }
 10077 0026 7047     		bx	lr	@
 10078              	.L827:
 10079              		.align	2
 10080              	.L826:
 10081 0028 00ED00E0 		.word	-536810240
 10082 002c 0003FA05 		.word	100270848
 10083 0030 00E100E0 		.word	-536813312
 10084 0034 00080408 		.word	134481920
 10085              		.size	NVIC_conf, .-NVIC_conf
 10086              		.section	.text.SetDate,"ax",%progbits
 10087              		.align	1
 10088              		.p2align 2,,3
 10089              		.global	SetDate
ARM GAS  /tmp/cczkEFU1.s 			page 178


 10090              		.syntax unified
 10091              		.thumb
 10092              		.thumb_func
 10093              		.fpu softvfp
 10094              		.type	SetDate, %function
 10095              	SetDate:
 10096              		@ args = 0, pretend = 0, frame = 40
 10097              		@ frame_needed = 0, uses_anonymous_args = 0
 10098 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 10099              	@ main.c:5612: 	UaPutS("\r\n rok = ");
 10100 0004 6548     		ldr	r0, .L844	@,
 10101              	@ main.c:5609: void SetDate(void)	{
 10102 0006 8BB0     		sub	sp, sp, #44	@,,
 10103              	@ main.c:5612: 	UaPutS("\r\n rok = ");
 10104 0008 FFF7FEFF 		bl	UaPutS	@
 10105              	@ main.c:5613: 	u16 yer = str2int((char *)u1buf);
 10106 000c 06A8     		add	r0, sp, #24	@ tmp230,,
 10107 000e FFF7FEFF 		bl	str2int	@
 10108              	@ main.c:5614: 	memset((char *)u1buf,0,16);
 10109 0012 0027     		movs	r7, #0	@ tmp152,
 10110              	@ main.c:5613: 	u16 yer = str2int((char *)u1buf);
 10111 0014 0546     		mov	r5, r0	@ _1,
 10112              	@ main.c:5615: 	UaPutS("\r\n mies = ");
 10113 0016 6248     		ldr	r0, .L844+4	@,
 10114              	@ main.c:5614: 	memset((char *)u1buf,0,16);
 10115 0018 CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 10116 001c CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 10117              	@ main.c:5615: 	UaPutS("\r\n mies = ");
 10118 0020 FFF7FEFF 		bl	UaPutS	@
 10119              	@ main.c:5616: 	u08 mon = str2int((char *)u1buf);
 10120 0024 06A8     		add	r0, sp, #24	@ tmp231,,
 10121 0026 FFF7FEFF 		bl	str2int	@
 10122 002a 0646     		mov	r6, r0	@ _2,
 10123              	@ main.c:5618: 	UaPutS("\r\n dzien = ");
 10124 002c 5D48     		ldr	r0, .L844+8	@,
 10125              	@ main.c:5617: 	memset((char *)u1buf,0,16);
 10126 002e CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 10127 0032 CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 10128              	@ main.c:5618: 	UaPutS("\r\n dzien = ");
 10129 0036 FFF7FEFF 		bl	UaPutS	@
 10130              	@ main.c:5619: 	u08 day = str2int((char *)u1buf);
 10131 003a 06A8     		add	r0, sp, #24	@ tmp232,,
 10132 003c FFF7FEFF 		bl	str2int	@
 10133 0040 8246     		mov	r10, r0	@ _3,
 10134              	@ main.c:5621: 	UaPutS("\r\n gdz = ");
 10135 0042 5948     		ldr	r0, .L844+12	@,
 10136              	@ main.c:5620: 	memset((char *)u1buf,0,16);
 10137 0044 CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 10138 0048 CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 10139              	@ main.c:5621: 	UaPutS("\r\n gdz = ");
 10140 004c FFF7FEFF 		bl	UaPutS	@
 10141              	@ main.c:5622: 	u08 hor = str2int((char *)u1buf);
 10142 0050 06A8     		add	r0, sp, #24	@ tmp233,,
 10143 0052 FFF7FEFF 		bl	str2int	@
 10144 0056 8046     		mov	r8, r0	@ _4,
 10145              	@ main.c:5624: 	UaPutS("\r\n min = ");
 10146 0058 5448     		ldr	r0, .L844+16	@,
ARM GAS  /tmp/cczkEFU1.s 			page 179


 10147              	@ main.c:5623: 	memset((char *)u1buf,0,16);
 10148 005a CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 10149 005e CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 10150              	@ main.c:5624: 	UaPutS("\r\n min = ");
 10151 0062 FFF7FEFF 		bl	UaPutS	@
 10152              	@ main.c:5625: 	u08 min = str2int((char *)u1buf);
 10153 0066 06A8     		add	r0, sp, #24	@ tmp234,,
 10154 0068 FFF7FEFF 		bl	str2int	@
 10155 006c 8146     		mov	r9, r0	@ _5,
 10156              	@ main.c:5627: 	UaPutS("\r\n sek = ");
 10157 006e 5048     		ldr	r0, .L844+20	@,
 10158              	@ main.c:5626: 	memset((char *)u1buf,0,16);
 10159 0070 CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 10160 0074 CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 10161              	@ main.c:5627: 	UaPutS("\r\n sek = ");
 10162 0078 FFF7FEFF 		bl	UaPutS	@
 10163              	@ main.c:5628: 	u08 sec = str2int((char *)u1buf);
 10164 007c 06A8     		add	r0, sp, #24	@ tmp235,,
 10165 007e FFF7FEFF 		bl	str2int	@
 10166              	@ main.c:5629: 	memset((char *)u1buf,0,16);
 10167 0082 CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 10168 0086 CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 10169              	@ main.c:5630: 	u32 Uxt = 1924984799;
 10170 008a 4A4C     		ldr	r4, .L844+24	@ Uxt,
 10171 008c DFF830B1 		ldr	fp, .L844+36	@ tmp226,
 10172              	@ main.c:5628: 	u08 sec = str2int((char *)u1buf);
 10173 0090 0190     		str	r0, [sp, #4]	@, %sfp
 10174 0092 ADB2     		uxth	r5, r5	@ _92, _1
 10175              	@ main.c:5634: 			if(ptm.tm_mon == mon) 	{
 10176 0094 F6B2     		uxtb	r6, r6	@ _2, _2
 10177              	@ main.c:5635: 				if(ptm.tm_mday == day)  {
 10178 0096 5FFA8AFA 		uxtb	r10, r10	@ _3, _3
 10179              	@ main.c:5636: 					if(ptm.tm_hour == hor)  {
 10180 009a 5FFA88F8 		uxtb	r8, r8	@ _4, _4
 10181              	.L837:
 10182              	@ main.c:5632: 		gmtime_r (&Uxt, &ptm);
 10183 009e 2046     		mov	r0, r4	@, Uxt
 10184 00a0 FFF7FEFF 		bl	gmtime_r.isra.0.constprop.2	@
 10185              	@ main.c:5633: 		if(ptm.tm_year == yer) 	{
 10186 00a4 DBF81430 		ldr	r3, [fp, #20]	@ ptm.tm_year, ptm.tm_year
 10187 00a8 AB42     		cmp	r3, r5	@ ptm.tm_year, _92
 10188 00aa 08D0     		beq	.L840	@,
 10189              	.L829:
 10190              	@ main.c:5654: 		} else Uxt -= 86400;
 10191 00ac A4F5A834 		sub	r4, r4, #86016	@ Uxt, Uxt,
 10192 00b0 A4F5C074 		sub	r4, r4, #384	@ Uxt, Uxt,
 10193              	@ main.c:5656: 	while(Uxt);
 10194 00b4 002C     		cmp	r4, #0	@ Uxt
 10195 00b6 F2D1     		bne	.L837	@
 10196              	.L828:
 10197              	@ main.c:5657: }
 10198 00b8 0BB0     		add	sp, sp, #44	@,,
 10199              		@ sp needed	@
 10200 00ba BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 10201              	.L840:
 10202              	@ main.c:5634: 			if(ptm.tm_mon == mon) 	{
 10203 00be DBF81030 		ldr	r3, [fp, #16]	@ ptm.tm_mon, ptm.tm_mon
ARM GAS  /tmp/cczkEFU1.s 			page 180


 10204 00c2 B342     		cmp	r3, r6	@ ptm.tm_mon, _2
 10205 00c4 F2D1     		bne	.L829	@,
 10206              	@ main.c:5635: 				if(ptm.tm_mday == day)  {
 10207 00c6 DBF80C30 		ldr	r3, [fp, #12]	@ ptm.tm_mday, ptm.tm_mday
 10208 00ca 5345     		cmp	r3, r10	@ ptm.tm_mday, _3
 10209 00cc EED1     		bne	.L829	@,
 10210              	@ main.c:5636: 					if(ptm.tm_hour == hor)  {
 10211 00ce DBF80830 		ldr	r3, [fp, #8]	@ ptm.tm_hour, ptm.tm_hour
 10212 00d2 4345     		cmp	r3, r8	@ ptm.tm_hour, _4
 10213 00d4 04D0     		beq	.L841	@,
 10214              	@ main.c:5651: 					}else Uxt -= 3600;
 10215 00d6 A4F56164 		sub	r4, r4, #3600	@ Uxt, Uxt,
 10216              	@ main.c:5656: 	while(Uxt);
 10217 00da 002C     		cmp	r4, #0	@ Uxt
 10218 00dc DFD1     		bne	.L837	@
 10219 00de EBE7     		b	.L828	@
 10220              	.L841:
 10221              	@ main.c:5637: 						if(ptm.tm_min == min) 	{
 10222 00e0 DBF80420 		ldr	r2, [fp, #4]	@ ptm.tm_min, ptm.tm_min
 10223 00e4 5FFA89F3 		uxtb	r3, r9	@ _5, _5
 10224 00e8 9A42     		cmp	r2, r3	@ ptm.tm_min, _5
 10225 00ea 03D0     		beq	.L842	@,
 10226              	@ main.c:5650: 						}else Uxt -= 60;
 10227 00ec 3C3C     		subs	r4, r4, #60	@ Uxt, Uxt,
 10228              	@ main.c:5656: 	while(Uxt);
 10229 00ee 002C     		cmp	r4, #0	@ Uxt
 10230 00f0 D5D1     		bne	.L837	@
 10231 00f2 E1E7     		b	.L828	@
 10232              	.L842:
 10233              	@ main.c:5638: 							if(ptm.tm_sec == sec)		{
 10234 00f4 DBF80020 		ldr	r2, [fp]	@ ptm.tm_sec, ptm.tm_sec
 10235 00f8 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2	@ _6, %sfp
 10236 00fc 9A42     		cmp	r2, r3	@ ptm.tm_sec, _6
 10237 00fe 03D0     		beq	.L843	@,
 10238              	@ main.c:5649: 							} else Uxt --;
 10239 0100 013C     		subs	r4, r4, #1	@ Uxt, Uxt,
 10240              	@ main.c:5656: 	while(Uxt);
 10241 0102 002C     		cmp	r4, #0	@ Uxt
 10242 0104 CBD1     		bne	.L837	@
 10243 0106 D7E7     		b	.L828	@
 10244              	.L843:
 10245              	@ main.c:5639: 								gmtime_r (&Uxt, &ptm);
 10246 0108 2046     		mov	r0, r4	@, Uxt
 10247 010a FFF7FEFF 		bl	gmtime_r.isra.0.constprop.2	@
 10248              	@ main.c:5640: 								UaPutS("\r\n ");
 10249 010e 2A48     		ldr	r0, .L844+28	@,
 10250 0110 FFF7FEFF 		bl	UaPutS	@
 10251              	@ main.c:5641: 								UaPutS(uint2str(ptm.tm_year,tbuf));		UaPutC('-');
 10252 0114 02A9     		add	r1, sp, #8	@,,
 10253 0116 DBF81400 		ldr	r0, [fp, #20]	@, ptm.tm_year
 10254 011a FFF7FEFF 		bl	uint2str	@
 10255 011e FFF7FEFF 		bl	UaPutS	@
 10256 0122 2D20     		movs	r0, #45	@,
 10257 0124 FFF7FEFF 		bl	UaPutC	@
 10258              	@ main.c:5642: 								UaPutS(uint2str(ptm.tm_mon,tbuf));		UaPutC('-');
 10259 0128 02A9     		add	r1, sp, #8	@,,
 10260 012a DBF81000 		ldr	r0, [fp, #16]	@, ptm.tm_mon
ARM GAS  /tmp/cczkEFU1.s 			page 181


 10261 012e FFF7FEFF 		bl	uint2str	@
 10262 0132 FFF7FEFF 		bl	UaPutS	@
 10263 0136 2D20     		movs	r0, #45	@,
 10264 0138 FFF7FEFF 		bl	UaPutC	@
 10265              	@ main.c:5643: 								UaPutS(uint2str(ptm.tm_mday,tbuf));		UaPutC(' ');
 10266 013c 02A9     		add	r1, sp, #8	@,,
 10267 013e DBF80C00 		ldr	r0, [fp, #12]	@, ptm.tm_mday
 10268 0142 FFF7FEFF 		bl	uint2str	@
 10269 0146 FFF7FEFF 		bl	UaPutS	@
 10270 014a 2020     		movs	r0, #32	@,
 10271 014c FFF7FEFF 		bl	UaPutC	@
 10272              	@ main.c:5644: 								UaPutS(uint2str(ptm.tm_hour,tbuf));		UaPutC(':');
 10273 0150 02A9     		add	r1, sp, #8	@,,
 10274 0152 DBF80800 		ldr	r0, [fp, #8]	@, ptm.tm_hour
 10275 0156 FFF7FEFF 		bl	uint2str	@
 10276 015a FFF7FEFF 		bl	UaPutS	@
 10277 015e 3A20     		movs	r0, #58	@,
 10278 0160 FFF7FEFF 		bl	UaPutC	@
 10279              	@ main.c:5645: 								UaPutS(uint2str(ptm.tm_min,tbuf));		UaPutC(':');
 10280 0164 02A9     		add	r1, sp, #8	@,,
 10281 0166 DBF80400 		ldr	r0, [fp, #4]	@, ptm.tm_min
 10282 016a FFF7FEFF 		bl	uint2str	@
 10283 016e FFF7FEFF 		bl	UaPutS	@
 10284 0172 3A20     		movs	r0, #58	@,
 10285 0174 FFF7FEFF 		bl	UaPutC	@
 10286              	@ main.c:5646: 								UaPutS(uint2str(ptm.tm_sec,tbuf));		UaPutS("\r\n TimStmp = ");
 10287 0178 02A9     		add	r1, sp, #8	@,,
 10288 017a DBF80000 		ldr	r0, [fp]	@, ptm.tm_sec
 10289 017e FFF7FEFF 		bl	uint2str	@
 10290 0182 FFF7FEFF 		bl	UaPutS	@
 10291 0186 0D48     		ldr	r0, .L844+32	@,
 10292 0188 FFF7FEFF 		bl	UaPutS	@
 10293              	@ main.c:5647: 								UaPutS(uint2str(Uxt,tbuf));
 10294 018c 02A9     		add	r1, sp, #8	@,,
 10295 018e 2046     		mov	r0, r4	@, Uxt
 10296 0190 FFF7FEFF 		bl	uint2str	@
 10297 0194 FFF7FEFF 		bl	UaPutS	@
 10298              	@ main.c:5648: 								break;
 10299 0198 8EE7     		b	.L828	@
 10300              	.L845:
 10301 019a 00BF     		.align	2
 10302              	.L844:
 10303 019c 00000000 		.word	.LC161
 10304 01a0 0C000000 		.word	.LC162
 10305 01a4 18000000 		.word	.LC163
 10306 01a8 24000000 		.word	.LC164
 10307 01ac 30000000 		.word	.LC165
 10308 01b0 3C000000 		.word	.LC166
 10309 01b4 DFEFBC72 		.word	1924984799
 10310 01b8 30000000 		.word	.LC77
 10311 01bc 48000000 		.word	.LC167
 10312 01c0 00000000 		.word	ptm
 10313              		.size	SetDate, .-SetDate
 10314              		.section	.text.flash_latency,"ax",%progbits
 10315              		.align	1
 10316              		.p2align 2,,3
 10317              		.global	flash_latency
ARM GAS  /tmp/cczkEFU1.s 			page 182


 10318              		.syntax unified
 10319              		.thumb
 10320              		.thumb_func
 10321              		.fpu softvfp
 10322              		.type	flash_latency, %function
 10323              	flash_latency:
 10324              		@ args = 0, pretend = 0, frame = 0
 10325              		@ frame_needed = 0, uses_anonymous_args = 0
 10326              		@ link register save eliminated.
 10327              	@ main.c:5693: 	if (frequency < 24000000ul)			// 0 wait states for core speed below 24MHz
 10328 0000 084B     		ldr	r3, .L850	@ tmp114,
 10329 0002 9842     		cmp	r0, r3	@ frequency, tmp114
 10330 0004 0CD9     		bls	.L848	@,
 10331              	@ main.c:5695: 	else if (frequency < 48000000ul)// 1 wait state for core 24MHz < speed >48MHz
 10332 0006 03F1B773 		add	r3, r3, #23986176	@ tmp115, tmp115,
 10333 000a 03F55853 		add	r3, r3, #13824	@ tmp115, tmp115,
 10334              	@ main.c:5698: 		wait_states = 2;
 10335 000e 9842     		cmp	r0, r3	@ frequency, tmp115
 10336 0010 94BF     		ite	ls	@
 10337 0012 0120     		movls	r0, #1	@, wait_states,
 10338 0014 0220     		movhi	r0, #2	@, wait_states,
 10339              	.L847:
 10340              	@ main.c:5700: 	FLASH->ACR |= wait_states;				// set the latency
 10341 0016 044A     		ldr	r2, .L850+4	@ tmp116,
 10342 0018 1368     		ldr	r3, [r2]	@ _1, MEM[(struct FLASH_TypeDef *)1073881088B].ACR
 10343 001a 1843     		orrs	r0, r0, r3	@, _2, wait_states, _1
 10344 001c 1060     		str	r0, [r2]	@ _2, MEM[(struct FLASH_TypeDef *)1073881088B].ACR
 10345              	@ main.c:5701: }
 10346 001e 7047     		bx	lr	@
 10347              	.L848:
 10348              	@ main.c:5694: 		wait_states = 0;
 10349 0020 0020     		movs	r0, #0	@ wait_states,
 10350 0022 F8E7     		b	.L847	@
 10351              	.L851:
 10352              		.align	2
 10353              	.L850:
 10354 0024 FF356E01 		.word	23999999
 10355 0028 00200240 		.word	1073881088
 10356              		.size	flash_latency, .-flash_latency
 10357              		.set	jdrs.9072,jdrs.9057
 10358              		.global	p_TSpm
 10359              		.comm	Rtc,8,4
 10360              		.global	FLAG
 10361              		.global	_ytab
 10362              		.comm	Timt3,4,4
 10363              		.comm	Timt,4,4
 10364              		.comm	Time6,4,4
 10365              		.comm	Tim6,4,4
 10366              		.comm	Tim4,4,4
 10367              		.comm	delay_us,4,4
 10368              		.comm	Tim2,4,4
 10369              		.comm	Tim1,4,4
 10370              		.comm	Tim0,4,4
 10371              		.comm	delay3_us,4,4
 10372              		.comm	t3rg2,4,4
 10373              		.comm	t3rg1,4,4
 10374              		.comm	t3rg0,4,4
ARM GAS  /tmp/cczkEFU1.s 			page 183


 10375              		.comm	trg5,4,4
 10376              		.comm	trg4,4,4
 10377              		.comm	trg3,4,4
 10378              		.comm	trg2,4,4
 10379              		.comm	trg1,4,4
 10380              		.comm	trg0,4,4
 10381              		.comm	PutChar,4,4
 10382              		.comm	ptm,36,4
 10383              		.section	.rodata
 10384              		.align	2
 10385              		.set	.LANCHOR1,. + 0
 10386              	.LC0:
 10387 0000 6D01     		.short	365
 10388 0002 6401     		.short	356
 10389 0004 0000     		.short	0
 10390 0006 1E00     		.short	30
 10391 0008 0000     		.short	0
 10392 000a 0000     		.short	0
 10393 000c 0000     		.short	0
 10394 000e 0000     		.short	0
 10395              	.LC1:
 10396 0010 D007     		.short	2000
 10397 0012 0019     		.short	6400
 10398 0014 0000     		.short	0
 10399 0016 1E00     		.short	30
 10400 0018 0000     		.short	0
 10401 001a 0000     		.short	0
 10402 001c 0000     		.short	0
 10403 001e 0000     		.short	0
 10404              	.LC2:
 10405 0020 5601     		.short	342
 10406 0022 5001     		.short	336
 10407 0024 0000     		.short	0
 10408 0026 0200     		.short	2
 10409 0028 0000     		.short	0
 10410 002a 0000     		.short	0
 10411 002c 0000     		.short	0
 10412 002e 0000     		.short	0
 10413              	.LC3:
 10414 0030 7200     		.short	114
 10415 0032 0701     		.short	263
 10416 0034 0000     		.short	0
 10417 0036 0200     		.short	2
 10418 0038 0000     		.short	0
 10419 003a 0000     		.short	0
 10420 003c 0000     		.short	0
 10421 003e 0000     		.short	0
 10422              	.LC4:
 10423 0040 00       		.byte	0
 10424 0041 1E       		.byte	30
 10425 0042 67       		.byte	103
 10426 0043 00       		.space	1
 10427              	.LC5:
 10428 0044 204C6164 		.ascii	" Laduj\000"
 10428      756A00
 10429 004b 00       		.space	1
 10430 004c 20526F7A 		.ascii	" Rozlad\000"
ARM GAS  /tmp/cczkEFU1.s 			page 184


 10430      6C616400 
 10431 0054 20437A65 		.ascii	" Czekaj\000"
 10431      6B616A00 
 10432 005c 20506F6D 		.ascii	" Pomiar\000"
 10432      69617200 
 10433 0064 204C6164 		.ascii	" LadKon\000"
 10433      4B6F6E00 
 10434 006c 20526F7A 		.ascii	" RozKon\000"
 10434      4B6F6E00 
 10435              		.section	.bss.Cah.8246,"aw",%nobits
 10436              		.align	2
 10437              		.set	.LANCHOR12,. + 0
 10438              		.type	Cah.8246, %object
 10439              		.size	Cah.8246, 4
 10440              	Cah.8246:
 10441 0000 00000000 		.space	4
 10442              		.section	.bss.Cwh.8247,"aw",%nobits
 10443              		.align	2
 10444              		.set	.LANCHOR13,. + 0
 10445              		.type	Cwh.8247, %object
 10446              		.size	Cwh.8247, 4
 10447              	Cwh.8247:
 10448 0000 00000000 		.space	4
 10449              		.section	.bss.FLAG,"aw",%nobits
 10450              		.align	2
 10451              		.set	.LANCHOR18,. + 0
 10452              		.type	FLAG, %object
 10453              		.size	FLAG, 4
 10454              	FLAG:
 10455 0000 00000000 		.space	4
 10456              		.section	.bss.Rwa.8248,"aw",%nobits
 10457              		.align	2
 10458              		.set	.LANCHOR10,. + 0
 10459              		.type	Rwa.8248, %object
 10460              		.size	Rwa.8248, 8
 10461              	Rwa.8248:
 10462 0000 00000000 		.space	8
 10462      00000000 
 10463              		.section	.bss.SX1278_1.8441,"aw",%nobits
 10464              		.align	2
 10465              		.set	.LANCHOR20,. + 0
 10466              		.type	SX1278_1.8441, %object
 10467              		.size	SX1278_1.8441, 76
 10468              	SX1278_1.8441:
 10469 0000 00000000 		.space	76
 10469      00000000 
 10469      00000000 
 10469      00000000 
 10469      00000000 
 10470              		.section	.bss.SX1278_1.8467,"aw",%nobits
 10471              		.align	2
 10472              		.set	.LANCHOR22,. + 0
 10473              		.type	SX1278_1.8467, %object
 10474              		.size	SX1278_1.8467, 76
 10475              	SX1278_1.8467:
 10476 0000 00000000 		.space	76
 10476      00000000 
ARM GAS  /tmp/cczkEFU1.s 			page 185


 10476      00000000 
 10476      00000000 
 10476      00000000 
 10477              		.section	.bss.SX1278_1.8492,"aw",%nobits
 10478              		.align	2
 10479              		.set	.LANCHOR25,. + 0
 10480              		.type	SX1278_1.8492, %object
 10481              		.size	SX1278_1.8492, 76
 10482              	SX1278_1.8492:
 10483 0000 00000000 		.space	76
 10483      00000000 
 10483      00000000 
 10483      00000000 
 10483      00000000 
 10484              		.section	.bss.SX1278_hw1.8440,"aw",%nobits
 10485              		.align	2
 10486              		.set	.LANCHOR19,. + 0
 10487              		.type	SX1278_hw1.8440, %object
 10488              		.size	SX1278_hw1.8440, 24
 10489              	SX1278_hw1.8440:
 10490 0000 00000000 		.space	24
 10490      00000000 
 10490      00000000 
 10490      00000000 
 10490      00000000 
 10491              		.section	.bss.SX1278_hw1.8466,"aw",%nobits
 10492              		.align	2
 10493              		.set	.LANCHOR21,. + 0
 10494              		.type	SX1278_hw1.8466, %object
 10495              		.size	SX1278_hw1.8466, 24
 10496              	SX1278_hw1.8466:
 10497 0000 00000000 		.space	24
 10497      00000000 
 10497      00000000 
 10497      00000000 
 10497      00000000 
 10498              		.section	.bss.SX1278_hw1.8491,"aw",%nobits
 10499              		.align	2
 10500              		.set	.LANCHOR24,. + 0
 10501              		.type	SX1278_hw1.8491, %object
 10502              		.size	SX1278_hw1.8491, 24
 10503              	SX1278_hw1.8491:
 10504 0000 00000000 		.space	24
 10504      00000000 
 10504      00000000 
 10504      00000000 
 10504      00000000 
 10505              		.section	.bss.TSpm,"aw",%nobits
 10506              		.align	2
 10507              		.type	TSpm, %object
 10508              		.size	TSpm, 4096
 10509              	TSpm:
 10510 0000 00000000 		.space	4096
 10510      00000000 
 10510      00000000 
 10510      00000000 
 10510      00000000 
ARM GAS  /tmp/cczkEFU1.s 			page 186


 10511              		.section	.bss.buf_rx.8470,"aw",%nobits
 10512              		.align	2
 10513              		.set	.LANCHOR23,. + 0
 10514              		.type	buf_rx.8470, %object
 10515              		.size	buf_rx.8470, 256
 10516              	buf_rx.8470:
 10517 0000 00000000 		.space	256
 10517      00000000 
 10517      00000000 
 10517      00000000 
 10517      00000000 
 10518              		.section	.bss.buf_tx.8494,"aw",%nobits
 10519              		.align	2
 10520              		.set	.LANCHOR26,. + 0
 10521              		.type	buf_tx.8494, %object
 10522              		.size	buf_tx.8494, 10
 10523              	buf_tx.8494:
 10524 0000 00000000 		.space	10
 10524      00000000 
 10524      0000
 10525              		.section	.bss.buffer.8846,"aw",%nobits
 10526              		.align	2
 10527              		.type	buffer.8846, %object
 10528              		.size	buffer.8846, 8192
 10529              	buffer.8846:
 10530 0000 00000000 		.space	8192
 10530      00000000 
 10530      00000000 
 10530      00000000 
 10530      00000000 
 10531              		.section	.bss.cah.8244,"aw",%nobits
 10532              		.align	2
 10533              		.set	.LANCHOR2,. + 0
 10534              		.type	cah.8244, %object
 10535              		.size	cah.8244, 4
 10536              	cah.8244:
 10537 0000 00000000 		.space	4
 10538              		.section	.bss.cnt.8240,"aw",%nobits
 10539              		.align	1
 10540              		.set	.LANCHOR6,. + 0
 10541              		.type	cnt.8240, %object
 10542              		.size	cnt.8240, 2
 10543              	cnt.8240:
 10544 0000 0000     		.space	2
 10545              		.section	.bss.cnt2.8249,"aw",%nobits
 10546              		.align	2
 10547              		.set	.LANCHOR7,. + 0
 10548              		.type	cnt2.8249, %object
 10549              		.size	cnt2.8249, 4
 10550              	cnt2.8249:
 10551 0000 00000000 		.space	4
 10552              		.section	.bss.coile.8264,"aw",%nobits
 10553              		.set	.LANCHOR14,. + 0
 10554              		.type	coile.8264, %object
 10555              		.size	coile.8264, 1
 10556              	coile.8264:
 10557 0000 00       		.space	1
ARM GAS  /tmp/cczkEFU1.s 			page 187


 10558              		.section	.bss.cur.8256,"aw",%nobits
 10559              		.align	1
 10560              		.set	.LANCHOR8,. + 0
 10561              		.type	cur.8256, %object
 10562              		.size	cur.8256, 2
 10563              	cur.8256:
 10564 0000 0000     		.space	2
 10565              		.section	.bss.cwh.8245,"aw",%nobits
 10566              		.align	2
 10567              		.set	.LANCHOR3,. + 0
 10568              		.type	cwh.8245, %object
 10569              		.size	cwh.8245, 4
 10570              	cwh.8245:
 10571 0000 00000000 		.space	4
 10572              		.section	.bss.datetime.8669,"aw",%nobits
 10573              		.align	2
 10574              		.set	.LANCHOR29,. + 0
 10575              		.type	datetime.8669, %object
 10576              		.size	datetime.8669, 8
 10577              	datetime.8669:
 10578 0000 00000000 		.space	8
 10578      00000000 
 10579              		.section	.bss.dcur.8257,"aw",%nobits
 10580              		.align	1
 10581              		.set	.LANCHOR5,. + 0
 10582              		.type	dcur.8257, %object
 10583              		.size	dcur.8257, 2
 10584              	dcur.8257:
 10585 0000 0000     		.space	2
 10586              		.section	.bss.dinit.8847,"aw",%nobits
 10587              		.set	.LANCHOR30,. + 0
 10588              		.type	dinit.8847, %object
 10589              		.size	dinit.8847, 1
 10590              	dinit.8847:
 10591 0000 00       		.space	1
 10592              		.section	.bss.dma_buf,"aw",%nobits
 10593              		.align	2
 10594              		.set	.LANCHOR28,. + 0
 10595              		.type	dma_buf, %object
 10596              		.size	dma_buf, 24
 10597              	dma_buf:
 10598 0000 00000000 		.space	24
 10598      00000000 
 10598      00000000 
 10598      00000000 
 10598      00000000 
 10599              		.section	.bss.dma_buf.8757,"aw",%nobits
 10600              		.align	2
 10601              		.set	.LANCHOR33,. + 0
 10602              		.type	dma_buf.8757, %object
 10603              		.size	dma_buf.8757, 578
 10604              	dma_buf.8757:
 10605 0000 00000000 		.space	578
 10605      00000000 
 10605      00000000 
 10605      00000000 
 10605      00000000 
ARM GAS  /tmp/cczkEFU1.s 			page 188


 10606              		.section	.bss.pow.8252,"aw",%nobits
 10607              		.align	1
 10608              		.set	.LANCHOR11,. + 0
 10609              		.type	pow.8252, %object
 10610              		.size	pow.8252, 2
 10611              	pow.8252:
 10612 0000 0000     		.space	2
 10613              		.section	.bss.rw.8260,"aw",%nobits
 10614              		.align	1
 10615              		.set	.LANCHOR9,. + 0
 10616              		.type	rw.8260, %object
 10617              		.size	rw.8260, 2
 10618              	rw.8260:
 10619 0000 0000     		.space	2
 10620              		.section	.bss.str_num.8495,"aw",%nobits
 10621              		.align	2
 10622              		.set	.LANCHOR27,. + 0
 10623              		.type	str_num.8495, %object
 10624              		.size	str_num.8495, 5
 10625              	str_num.8495:
 10626 0000 00000000 		.space	5
 10626      00
 10627              		.section	.bss.val.8742,"aw",%nobits
 10628              		.align	2
 10629              		.set	.LANCHOR34,. + 0
 10630              		.type	val.8742, %object
 10631              		.size	val.8742, 20
 10632              	val.8742:
 10633 0000 00000000 		.space	20
 10633      00000000 
 10633      00000000 
 10633      00000000 
 10633      00000000 
 10634              		.section	.bss.vbus.8258,"aw",%nobits
 10635              		.align	1
 10636              		.set	.LANCHOR4,. + 0
 10637              		.type	vbus.8258, %object
 10638              		.size	vbus.8258, 2
 10639              	vbus.8258:
 10640 0000 0000     		.space	2
 10641              		.section	.bss.vr1.8241,"aw",%nobits
 10642              		.align	1
 10643              		.set	.LANCHOR15,. + 0
 10644              		.type	vr1.8241, %object
 10645              		.size	vr1.8241, 2
 10646              	vr1.8241:
 10647 0000 0000     		.space	2
 10648              		.section	.bss.vr3.8250,"aw",%nobits
 10649              		.align	2
 10650              		.set	.LANCHOR16,. + 0
 10651              		.type	vr3.8250, %object
 10652              		.size	vr3.8250, 4
 10653              	vr3.8250:
 10654 0000 00000000 		.space	4
 10655              		.section	.bss.vr4.8251,"aw",%nobits
 10656              		.align	2
 10657              		.set	.LANCHOR17,. + 0
ARM GAS  /tmp/cczkEFU1.s 			page 189


 10658              		.type	vr4.8251, %object
 10659              		.size	vr4.8251, 4
 10660              	vr4.8251:
 10661 0000 00000000 		.space	4
 10662              		.section	.bss.yb.8738,"aw",%nobits
 10663              		.align	2
 10664              		.set	.LANCHOR31,. + 0
 10665              		.type	yb.8738, %object
 10666              		.size	yb.8738, 1
 10667              	yb.8738:
 10668 0000 00       		.space	1
 10669              		.section	.bss.yn.8739,"aw",%nobits
 10670              		.align	2
 10671              		.set	.LANCHOR32,. + 0
 10672              		.type	yn.8739, %object
 10673              		.size	yn.8739, 1
 10674              	yn.8739:
 10675 0000 00       		.space	1
 10676              		.section	.data.p_TSpm,"aw",%progbits
 10677              		.align	2
 10678              		.type	p_TSpm, %object
 10679              		.size	p_TSpm, 4
 10680              	p_TSpm:
 10681 0000 00000000 		.word	TSpm
 10682              		.section	.data.tbuf.8744,"aw",%progbits
 10683              		.align	2
 10684              		.set	.LANCHOR35,. + 0
 10685              		.type	tbuf.8744, %object
 10686              		.size	tbuf.8744, 20
 10687              	tbuf.8744:
 10688 0000 30303030 		.ascii	"0000-00-00 00:00:00\000"
 10688      2D30302D 
 10688      30302030 
 10688      303A3030 
 10688      3A303000 
 10689              		.section	.rodata.BMP280_i2c.str1.4,"aMS",%progbits,1
 10690              		.align	2
 10691              	.LC68:
 10692 0000 0D0A2069 		.ascii	"\015\012 i2c_BMP280 = 0x\000"
 10692      32635F42 
 10692      4D503238 
 10692      30203D20 
 10692      307800
 10693 0013 00       		.space	1
 10694              	.LC69:
 10695 0014 0D0A2042 		.ascii	"\015\012 BMP280 \000"
 10695      4D503238 
 10695      302000
 10696 001f 00       		.space	1
 10697              	.LC70:
 10698 0020 74743D00 		.ascii	"tt=\000"
 10699              	.LC71:
 10700 0024 20543D00 		.ascii	" T=\000"
 10701              	.LC72:
 10702 0028 20703D20 		.ascii	" p= \000"
 10702      00
 10703 002d 000000   		.space	3
ARM GAS  /tmp/cczkEFU1.s 			page 190


 10704              	.LC73:
 10705 0030 2074703D 		.ascii	" tp=\000"
 10705      00
 10706              		.section	.rodata.BMP280_spi.str1.4,"aMS",%progbits,1
 10707              		.align	2
 10708              	.LC74:
 10709 0000 0D0A2042 		.ascii	"\015\012 BMP280T1 = 0x\000"
 10709      4D503238 
 10709      30543120 
 10709      3D203078 
 10709      00
 10710              		.section	.rodata.Intro2.str1.4,"aMS",%progbits,1
 10711              		.align	2
 10712              	.LC155:
 10713 0000 0D0A2053 		.ascii	"\015\012 Start programu... \015\012\000"
 10713      74617274 
 10713      2070726F 
 10713      6772616D 
 10713      752E2E2E 
 10714              	.LC156:
 10715 0018 0D0A2044 		.ascii	"\015\012 Debug0...\000"
 10715      65627567 
 10715      302E2E2E 
 10715      00
 10716 0025 000000   		.space	3
 10717              	.LC157:
 10718 0028 0D0A2077 		.ascii	"\015\012 wXlen \000"
 10718      586C656E 
 10718      2000
 10719 0032 0000     		.space	2
 10720              	.LC158:
 10721 0034 0D0A2054 		.ascii	"\015\012 TIM4->PSC/ARR=\000"
 10721      494D342D 
 10721      3E505343 
 10721      2F415252 
 10721      3D00
 10722              		.section	.rodata.LoRaRX.str1.4,"aMS",%progbits,1
 10723              		.align	2
 10724              	.LC46:
 10725 0000 0A00     		.ascii	"\012\000"
 10726              		.section	.rodata.LoRaRX1.str1.4,"aMS",%progbits,1
 10727              		.align	2
 10728              	.LC47:
 10729 0000 2054696D 		.ascii	" Time=\000"
 10729      653D00
 10730 0007 00       		.space	1
 10731              	.LC48:
 10732 0008 0D0A2052 		.ascii	"\015\012 Read Reg1=0x\000"
 10732      65616420 
 10732      52656731 
 10732      3D307800 
 10733              	.LC49:
 10734 0018 20526567 		.ascii	" Reg1 0x\000"
 10734      31203078 
 10734      00
 10735 0021 000000   		.space	3
 10736              	.LC50:
ARM GAS  /tmp/cczkEFU1.s 			page 191


 10737 0024 3D203078 		.ascii	"= 0x\000"
 10737      00
 10738 0029 000000   		.space	3
 10739              	.LC51:
 10740 002c 0D0A2030 		.ascii	"\015\012 0-3(\000"
 10740      2D332800 
 10741              	.LC52:
 10742 0034 2920504F 		.ascii	") POWER=\000"
 10742      5745523D 
 10742      00
 10743 003d 000000   		.space	3
 10744              	.LC53:
 10745 0040 0D0A2030 		.ascii	"\015\012 0-6(\000"
 10745      2D362800 
 10746              	.LC54:
 10747 0048 29205346 		.ascii	") SF=\000"
 10747      3D00
 10748 004e 0000     		.space	2
 10749              	.LC55:
 10750 0050 0D0A2030 		.ascii	"\015\012 0-9(\000"
 10750      2D392800 
 10751              	.LC56:
 10752 0058 29204257 		.ascii	") BW=\000"
 10752      3D00
 10753 005e 0000     		.space	2
 10754              	.LC57:
 10755 0060 0D0A2073 		.ascii	"\015\012 sek(\000"
 10755      656B2800 
 10756              	.LC58:
 10757 0068 29204465 		.ascii	") Delay=\000"
 10757      6C61793D 
 10757      00
 10758 0071 000000   		.space	3
 10759              	.LC59:
 10760 0074 0D0A204D 		.ascii	"\015\012 Menu > \000"
 10760      656E7520 
 10760      3E2000
 10761 007f 00       		.space	1
 10762              	.LC60:
 10763 0080 0D0A2070 		.ascii	"\015\012 prssi->\000"
 10763      72737369 
 10763      2D3E00
 10764              		.section	.rodata.MAX44009_i2c.str1.4,"aMS",%progbits,1
 10765              		.align	2
 10766              	.LC67:
 10767 0000 0D0A2041 		.ascii	"\015\012 APDS9960_ID=0x\000"
 10767      50445339 
 10767      3936305F 
 10767      49443D30 
 10767      7800
 10768              		.section	.rodata.MemCard_Menu.str1.4,"aMS",%progbits,1
 10769              		.align	2
 10770              	.LC109:
 10771 0000 0D0A5344 		.ascii	"\015\012SD Card Init = \000"
 10771      20436172 
 10771      6420496E 
 10771      6974203D 
ARM GAS  /tmp/cczkEFU1.s 			page 192


 10771      2000
 10772 0012 0000     		.space	2
 10773              	.LC110:
 10774 0014 0D0A5344 		.ascii	"\015\012SD Card Init ERROR \000"
 10774      20436172 
 10774      6420496E 
 10774      69742045 
 10774      52524F52 
 10775 002a 0000     		.space	2
 10776              	.LC111:
 10777 002c 0D0A5344 		.ascii	"\015\012SD Card ser_num    = \000"
 10777      20436172 
 10777      64207365 
 10777      725F6E75 
 10777      6D202020 
 10778              	.LC112:
 10779 0044 0D0A5344 		.ascii	"\015\012SD Card block_num  = \000"
 10779      20436172 
 10779      6420626C 
 10779      6F636B5F 
 10779      6E756D20 
 10780              	.LC113:
 10781 005c 0D0A5344 		.ascii	"\015\012SD Card read_blen  = \000"
 10781      20436172 
 10781      64207265 
 10781      61645F62 
 10781      6C656E20 
 10782              	.LC114:
 10783 0074 0D0A5344 		.ascii	"\015\012SD Card write_blen = \000"
 10783      20436172 
 10783      64207772 
 10783      6974655F 
 10783      626C656E 
 10784              	.LC115:
 10785 008c 53746174 		.ascii	"Statistic Card  \000"
 10785      69737469 
 10785      63204361 
 10785      72642020 
 10785      00
 10786 009d 000000   		.space	3
 10787              	.LC116:
 10788 00a0 0D0A5344 		.ascii	"\015\012SD Card Not Init\000"
 10788      20436172 
 10788      64204E6F 
 10788      7420496E 
 10788      697400
 10789 00b3 00       		.space	1
 10790              	.LC117:
 10791 00b4 46696C6C 		.ascii	"Fill sector\000"
 10791      20736563 
 10791      746F7200 
 10792              	.LC118:
 10793 00c0 0D0A2053 		.ascii	"\015\012 Start Block  = 0x\000"
 10793      74617274 
 10793      20426C6F 
 10793      636B2020 
 10793      3D203078 
ARM GAS  /tmp/cczkEFU1.s 			page 193


 10794 00d5 000000   		.space	3
 10795              	.LC119:
 10796 00d8 0D0A2045 		.ascii	"\015\012 End   Blocks = 0x\000"
 10796      6E642020 
 10796      20426C6F 
 10796      636B7320 
 10796      3D203078 
 10797 00ed 000000   		.space	3
 10798              	.LC120:
 10799 00f0 0D0A204E 		.ascii	"\015\012 Num Blocks   = \000"
 10799      756D2042 
 10799      6C6F636B 
 10799      73202020 
 10799      3D2000
 10800 0103 00       		.space	1
 10801              	.LC121:
 10802 0104 0D0A2044 		.ascii	"\015\012 Data to fill = 0x\000"
 10802      61746120 
 10802      746F2066 
 10802      696C6C20 
 10802      3D203078 
 10803 0119 000000   		.space	3
 10804              	.LC122:
 10805 011c 0D0A2046 		.ascii	"\015\012 Fill error = 0x\000"
 10805      696C6C20 
 10805      6572726F 
 10805      72203D20 
 10805      307800
 10806 012f 00       		.space	1
 10807              	.LC123:
 10808 0130 0D0A2046 		.ascii	"\015\012 Fill OK \000"
 10808      696C6C20 
 10808      4F4B2000 
 10809              	.LC124:
 10810 013c 2054696D 		.ascii	" Time[us] = \000"
 10810      655B7573 
 10810      5D203D20 
 10810      00
 10811 0149 000000   		.space	3
 10812              	.LC125:
 10813 014c 4D6F6469 		.ascii	"Modify memory\000"
 10813      6679206D 
 10813      656D6F72 
 10813      7900
 10814 015a 0000     		.space	2
 10815              	.LC126:
 10816 015c 0D0A204D 		.ascii	"\015\012 Memory Addr = 0x\000"
 10816      656D6F72 
 10816      79204164 
 10816      6472203D 
 10816      20307800 
 10817              	.LC127:
 10818 0170 0D0A204D 		.ascii	"\015\012 Memory Data = 0x\000"
 10818      656D6F72 
 10818      79204461 
 10818      7461203D 
 10818      20307800 
ARM GAS  /tmp/cczkEFU1.s 			page 194


 10819              	.LC128:
 10820 0184 0D0A204E 		.ascii	"\015\012 New Data    = 0x\000"
 10820      65772044 
 10820      61746120 
 10820      2020203D 
 10820      20307800 
 10821              	.LC129:
 10822 0198 0D0A204D 		.ascii	"\015\012 Modify OK\000"
 10822      6F646966 
 10822      79204F4B 
 10822      00
 10823 01a5 000000   		.space	3
 10824              	.LC130:
 10825 01a8 0D0A2052 		.ascii	"\015\012 ReadB 0x\000"
 10825      65616442 
 10825      20307800 
 10826              	.LC131:
 10827 01b4 20204672 		.ascii	"  From 0x\000"
 10827      6F6D2030 
 10827      7800
 10828 01be 0000     		.space	2
 10829              	.LC132:
 10830 01c0 2D3E3078 		.ascii	"->0x\000"
 10830      00
 10831 01c5 000000   		.space	3
 10832              	.LC133:
 10833 01c8 20205772 		.ascii	"  WriteB 0x\000"
 10833      69746542 
 10833      20307800 
 10834              	.LC134:
 10835 01d4 20203078 		.ascii	"  0x\000"
 10835      00
 10836 01d9 000000   		.space	3
 10837              	.LC135:
 10838 01dc 0D0A2073 		.ascii	"\015\012 sectorNumber = 0x\000"
 10838      6563746F 
 10838      724E756D 
 10838      62657220 
 10838      3D203078 
 10839 01f1 000000   		.space	3
 10840              	.LC136:
 10841 01f4 20745F63 		.ascii	" t_crc = \000"
 10841      7263203D 
 10841      2000
 10842 01fe 0000     		.space	2
 10843              	.LC137:
 10844 0200 0D0A2052 		.ascii	"\015\012 Read Error = \000"
 10844      65616420 
 10844      4572726F 
 10844      72203D20 
 10844      00
 10845 0211 000000   		.space	3
 10846              	.LC138:
 10847 0214 52656164 		.ascii	"Read multi sector\000"
 10847      206D756C 
 10847      74692073 
 10847      6563746F 
ARM GAS  /tmp/cczkEFU1.s 			page 195


 10847      7200
 10848 0226 0000     		.space	2
 10849              	.LC139:
 10850 0228 0D0A204E 		.ascii	"\015\012 Num Sectors  = \000"
 10850      756D2053 
 10850      6563746F 
 10850      72732020 
 10850      3D2000
 10851 023b 00       		.space	1
 10852              	.LC140:
 10853 023c 0D0A2052 		.ascii	"\015\012 Read error = 0x\000"
 10853      65616420 
 10853      6572726F 
 10853      72203D20 
 10853      307800
 10854 024f 00       		.space	1
 10855              	.LC141:
 10856 0250 0D0A2052 		.ascii	"\015\012 Read OK \000"
 10856      65616420 
 10856      4F4B2000 
 10857              	.LC142:
 10858 025c 20793220 		.ascii	" y2 = \000"
 10858      3D2000
 10859 0263 00       		.space	1
 10860              	.LC143:
 10861 0264 0900     		.ascii	"\011\000"
 10862 0266 0000     		.space	2
 10863              	.LC144:
 10864 0268 56696577 		.ascii	"View last sector\000"
 10864      206C6173 
 10864      74207365 
 10864      63746F72 
 10864      00
 10865 0279 000000   		.space	3
 10866              	.LC145:
 10867 027c 0D0A2046 		.ascii	"\015\012 First Sector = 0x\000"
 10867      69727374 
 10867      20536563 
 10867      746F7220 
 10867      3D203078 
 10868 0291 000000   		.space	3
 10869              	.LC146:
 10870 0294 0D0A2053 		.ascii	"\015\012 Searching \000"
 10870      65617263 
 10870      68696E67 
 10870      2000
 10871 02a2 0000     		.space	2
 10872              	.LC147:
 10873 02a4 0D0A2045 		.ascii	"\015\012 Exit Read Error !!!\000"
 10873      78697420 
 10873      52656164 
 10873      20457272 
 10873      6F722021 
 10874 02bb 00       		.space	1
 10875              	.LC148:
 10876 02bc 0D0A2046 		.ascii	"\015\012 Find Sector = 0x\000"
 10876      696E6420 
ARM GAS  /tmp/cczkEFU1.s 			page 196


 10876      53656374 
 10876      6F72203D 
 10876      20307800 
 10877              	.LC149:
 10878 02d0 0D0A2020 		.ascii	"\015\012     lenBlock= \000"
 10878      2020206C 
 10878      656E426C 
 10878      6F636B3D 
 10878      2000
 10879 02e2 0000     		.space	2
 10880              	.LC150:
 10881 02e4 0D0A2042 		.ascii	"\015\012 Block = \000"
 10881      6C6F636B 
 10881      203D2000 
 10882              	.LC151:
 10883 02f0 0D0A2052 		.ascii	"\015\012 Read Error \000"
 10883      65616420 
 10883      4572726F 
 10883      722000
 10884 02ff 00       		.space	1
 10885              	.LC152:
 10886 0300 0D0A2053 		.ascii	"\015\012 SD_Status \015\012 \000"
 10886      445F5374 
 10886      61747573 
 10886      200D0A20 
 10886      00
 10887 0311 000000   		.space	3
 10888              	.LC153:
 10889 0314 54657374 		.ascii	"Testing ...\000"
 10889      696E6720 
 10889      2E2E2E00 
 10890              	.LC154:
 10891 0320 556E6B72 		.ascii	"Unkr_dma_buf Command !\000"
 10891      5F646D61 
 10891      5F627566 
 10891      20436F6D 
 10891      6D616E64 
 10892              		.section	.rodata.Menu1.str1.4,"aMS",%progbits,1
 10893              		.align	2
 10894              	.LC105:
 10895 0000 0A0D0A3D 		.ascii	"\012\015\012======= STM32F4 SD/MMC Card ==========="
 10895      3D3D3D3D 
 10895      3D3D2053 
 10895      544D3332 
 10895      46342053 
 10896 002a 3D3D3D3D 		.ascii	"===========\015\012\000"
 10896      3D3D3D3D 
 10896      3D3D3D0D 
 10896      0A00
 10897              	.LC106:
 10898 0038 2069202D 		.ascii	" i - Init      r - Read  sector  e - Erase sector  "
 10898      20496E69 
 10898      74202020 
 10898      20202072 
 10898      202D2052 
 10899 006b 200D0A00 		.ascii	" \015\012\000"
 10900 006f 00       		.space	1
ARM GAS  /tmp/cczkEFU1.s 			page 197


 10901              	.LC107:
 10902 0070 2064202D 		.ascii	" d - Delete    f - Write sector  s - Statistic Card"
 10902      2044656C 
 10902      65746520 
 10902      20202066 
 10902      202D2057 
 10903 00a3 200D0A00 		.ascii	" \015\012\000"
 10904 00a7 00       		.space	1
 10905              	.LC108:
 10906 00a8 206D202D 		.ascii	" m - Modf mem  c - Copy  sector  n - Next Cluster  "
 10906      204D6F64 
 10906      66206D65 
 10906      6D202063 
 10906      202D2043 
 10907 00db 0D0A00   		.ascii	"\015\012\000"
 10908              		.section	.rodata.SPI_Tool.str1.4,"aMS",%progbits,1
 10909              		.align	2
 10910              	.LC98:
 10911 0000 0D0A496E 		.ascii	"\015\012Init spi    = \000"
 10911      69742073 
 10911      70692020 
 10911      20203D20 
 10911      00
 10912 0011 000000   		.space	3
 10913              	.LC99:
 10914 0014 0D0A2052 		.ascii	"\015\012 Reg = \000"
 10914      6567203D 
 10914      2000
 10915 001e 0000     		.space	2
 10916              	.LC100:
 10917 0020 436F7079 		.ascii	"Copy memory\000"
 10917      206D656D 
 10917      6F727900 
 10918              	.LC101:
 10919 002c 0D0A2053 		.ascii	"\015\012 Src Mem adr = 0x\000"
 10919      7263204D 
 10919      656D2061 
 10919      6472203D 
 10919      20307800 
 10920              	.LC102:
 10921 0040 0D0A2048 		.ascii	"\015\012 How many byte = \000"
 10921      6F77206D 
 10921      616E7920 
 10921      62797465 
 10921      203D2000 
 10922              	.LC103:
 10923 0054 0D0A2044 		.ascii	"\015\012 Dst mem adr = 0x\000"
 10923      7374206D 
 10923      656D2061 
 10923      6472203D 
 10923      20307800 
 10924              	.LC104:
 10925 0068 4E69657A 		.ascii	"Nieznana Komenda\000"
 10925      6E616E61 
 10925      204B6F6D 
 10925      656E6461 
 10925      00
ARM GAS  /tmp/cczkEFU1.s 			page 198


 10926              		.section	.rodata.SPI_Tool_Menu.str1.4,"aMS",%progbits,1
 10927              		.align	2
 10928              	.LC94:
 10929 0000 0A0D0A3D 		.ascii	"\012\015\012======= STM32F1 SPI TOOL =============="
 10929      3D3D3D3D 
 10929      3D3D2053 
 10929      544D3332 
 10929      46312053 
 10930 002a 3D3D3D3D 		.ascii	"===========\015\012\000"
 10930      3D3D3D3D 
 10930      3D3D3D0D 
 10930      0A00
 10931              	.LC95:
 10932 0038 2069202D 		.ascii	" i - Init      r - Read  sector  e -               "
 10932      20496E69 
 10932      74202020 
 10932      20202072 
 10932      202D2052 
 10933 006b 200D0A00 		.ascii	" \015\012\000"
 10934 006f 00       		.space	1
 10935              	.LC96:
 10936 0070 2064202D 		.ascii	" d - Delete    f - Write sector  s -               "
 10936      2044656C 
 10936      65746520 
 10936      20202066 
 10936      202D2057 
 10937 00a3 200D0A00 		.ascii	" \015\012\000"
 10938 00a7 00       		.space	1
 10939              	.LC97:
 10940 00a8 206D202D 		.ascii	" m - Modf      c - Copy  sector  n -               "
 10940      204D6F64 
 10940      66202020 
 10940      20202063 
 10940      202D2043 
 10941 00db 0D0A00   		.ascii	"\015\012\000"
 10942              		.section	.rodata.SetDate.str1.4,"aMS",%progbits,1
 10943              		.align	2
 10944              	.LC161:
 10945 0000 0D0A2072 		.ascii	"\015\012 rok = \000"
 10945      6F6B203D 
 10945      2000
 10946 000a 0000     		.space	2
 10947              	.LC162:
 10948 000c 0D0A206D 		.ascii	"\015\012 mies = \000"
 10948      69657320 
 10948      3D2000
 10949 0017 00       		.space	1
 10950              	.LC163:
 10951 0018 0D0A2064 		.ascii	"\015\012 dzien = \000"
 10951      7A69656E 
 10951      203D2000 
 10952              	.LC164:
 10953 0024 0D0A2067 		.ascii	"\015\012 gdz = \000"
 10953      647A203D 
 10953      2000
 10954 002e 0000     		.space	2
 10955              	.LC165:
ARM GAS  /tmp/cczkEFU1.s 			page 199


 10956 0030 0D0A206D 		.ascii	"\015\012 min = \000"
 10956      696E203D 
 10956      2000
 10957 003a 0000     		.space	2
 10958              	.LC166:
 10959 003c 0D0A2073 		.ascii	"\015\012 sek = \000"
 10959      656B203D 
 10959      2000
 10960 0046 0000     		.space	2
 10961              	.LC167:
 10962 0048 0D0A2054 		.ascii	"\015\012 TimStmp = \000"
 10962      696D5374 
 10962      6D70203D 
 10962      2000
 10963              		.section	.rodata.TSL2561_i2c.str1.4,"aMS",%progbits,1
 10964              		.align	2
 10965              	.LC66:
 10966 0000 2C00     		.ascii	",\000"
 10967              		.section	.rodata.Zegarek.str1.4,"aMS",%progbits,1
 10968              		.align	2
 10969              	.LC159:
 10970 0000 30302D30 		.ascii	"00-00-00\000"
 10970      302D3030 
 10970      00
 10971 0009 000000   		.space	3
 10972              	.LC160:
 10973 000c 30303030 		.ascii	"0000-00-00\000"
 10973      2D30302D 
 10973      303000
 10974              		.section	.rodata._ytab,"a",%progbits
 10975              		.align	2
 10976              		.set	.LANCHOR0,. + 0
 10977              		.type	_ytab, %object
 10978              		.size	_ytab, 96
 10979              	_ytab:
 10980 0000 1F000000 		.word	31
 10981 0004 1C000000 		.word	28
 10982 0008 1F000000 		.word	31
 10983 000c 1E000000 		.word	30
 10984 0010 1F000000 		.word	31
 10985 0014 1E000000 		.word	30
 10986 0018 1F000000 		.word	31
 10987 001c 1F000000 		.word	31
 10988 0020 1E000000 		.word	30
 10989 0024 1F000000 		.word	31
 10990 0028 1E000000 		.word	30
 10991 002c 1F000000 		.word	31
 10992 0030 1F000000 		.word	31
 10993 0034 1D000000 		.word	29
 10994 0038 1F000000 		.word	31
 10995 003c 1E000000 		.word	30
 10996 0040 1F000000 		.word	31
 10997 0044 1E000000 		.word	30
 10998 0048 1F000000 		.word	31
 10999 004c 1F000000 		.word	31
 11000 0050 1E000000 		.word	30
 11001 0054 1F000000 		.word	31
ARM GAS  /tmp/cczkEFU1.s 			page 200


 11002 0058 1E000000 		.word	30
 11003 005c 1F000000 		.word	31
 11004              		.section	.rodata.fun_tool.str1.4,"aMS",%progbits,1
 11005              		.align	2
 11006              	.LC75:
 11007 0000 0D0A2046 		.ascii	"\015\012 FLASH memory Read = \000"
 11007      4C415348 
 11007      206D656D 
 11007      6F727920 
 11007      52656164 
 11008              	.LC76:
 11009 0018 0D0A2046 		.ascii	"\015\012 Flash memory Page =\000"
 11009      6C617368 
 11009      206D656D 
 11009      6F727920 
 11009      50616765 
 11010 002f 00       		.space	1
 11011              	.LC77:
 11012 0030 0D0A2000 		.ascii	"\015\012 \000"
 11013              	.LC78:
 11014 0034 0D0A0A20 		.ascii	"\015\012\012 \000"
 11014      00
 11015 0039 000000   		.space	3
 11016              	.LC79:
 11017 003c 202000   		.ascii	"  \000"
 11018 003f 00       		.space	1
 11019              	.LC80:
 11020 0040 20637263 		.ascii	" crc = \000"
 11020      203D2000 
 11021              	.LC81:
 11022 0048 0D0A2046 		.ascii	"\015\012 Flash memory Page = \000"
 11022      6C617368 
 11022      206D656D 
 11022      6F727920 
 11022      50616765 
 11023              	.LC82:
 11024 0060 0D0A204B 		.ascii	"\015\012 Kasowanie pamieci FLASH = \000"
 11024      61736F77 
 11024      616E6965 
 11024      2070616D 
 11024      69656369 
 11025 007e 0000     		.space	2
 11026              	.LC83:
 11027 0080 0D0A2047 		.ascii	"\015\012 Godzina = \000"
 11027      6F647A69 
 11027      6E61203D 
 11027      2000
 11028 008e 0000     		.space	2
 11029              	.LC84:
 11030 0090 0D0A204D 		.ascii	"\015\012 Minut   = \000"
 11030      696E7574 
 11030      2020203D 
 11030      2000
 11031 009e 0000     		.space	2
 11032              	.LC85:
 11033 00a0 0D0A2053 		.ascii	"\015\012 Sekunda = \000"
 11033      656B756E 
ARM GAS  /tmp/cczkEFU1.s 			page 201


 11033      6461203D 
 11033      2000
 11034 00ae 0000     		.space	2
 11035              	.LC86:
 11036 00b0 0D0A2052 		.ascii	"\015\012 Read Start !\000"
 11036      65616420 
 11036      53746172 
 11036      74202100 
 11037              	.LC87:
 11038 00c0 0D0A2052 		.ascii	"\015\012 Read Done !\000"
 11038      65616420 
 11038      446F6E65 
 11038      202100
 11039 00cf 00       		.space	1
 11040              	.LC88:
 11041 00d0 0D0A2043 		.ascii	"\015\012 Clear !\000"
 11041      6C656172 
 11041      202100
 11042 00db 00       		.space	1
 11043              	.LC89:
 11044 00dc 52656164 		.ascii	"Read sector\000"
 11044      20736563 
 11044      746F7200 
 11045              	.LC90:
 11046 00e8 0D0A2073 		.ascii	"\015\012 sectorNumber = \000"
 11046      6563746F 
 11046      724E756D 
 11046      62657220 
 11046      3D2000
 11047 00fb 00       		.space	1
 11048              	.LC91:
 11049 00fc 20745F72 		.ascii	" t_rsdio = \000"
 11049      7364696F 
 11049      203D2000 
 11050              	.LC92:
 11051 0108 0D0A2052 		.ascii	"\015\012 Read Error !!!\000"
 11051      65616420 
 11051      4572726F 
 11051      72202121 
 11051      2100
 11052              		.section	.rodata.head.str1.4,"aMS",%progbits,1
 11053              		.align	2
 11054              	.LC10:
 11055 0000 0C0D0A20 		.ascii	"\014\015\012 Mini STM32F103C8T6 RAM   \000"
 11055      4D696E69 
 11055      2053544D 
 11055      33324631 
 11055      30334338 
 11056 001e 0000     		.space	2
 11057              	.LC11:
 11058 0020 204D487A 		.ascii	" MHz\000"
 11058      00
 11059              		.section	.rodata.ili9486.str1.4,"aMS",%progbits,1
 11060              		.align	2
 11061              	.LC38:
 11062 0000 0D0A2072 		.ascii	"\015\012 reg = 0x\000"
 11062      6567203D 
ARM GAS  /tmp/cczkEFU1.s 			page 202


 11062      20307800 
 11063              	.LC39:
 11064 000c 0D0A2064 		.ascii	"\015\012 dat = 0x\000"
 11064      6174203D 
 11064      20307800 
 11065              	.LC40:
 11066 0018 0C00     		.ascii	"\014\000"
 11067 001a 0000     		.space	2
 11068              	.LC41:
 11069 001c 0A0D0A3D 		.ascii	"\012\015\012======= ILI9486 ======================="
 11069      3D3D3D3D 
 11069      3D3D2049 
 11069      4C493934 
 11069      3836203D 
 11070 0046 3D3D3D3D 		.ascii	"===========\015\012\000"
 11070      3D3D3D3D 
 11070      3D3D3D0D 
 11070      0A00
 11071              	.LC42:
 11072 0054 2072202D 		.ascii	" r - Read   c - Clear page  \015\012\000"
 11072      20526561 
 11072      64202020 
 11072      63202D20 
 11072      436C6561 
 11073 0073 00       		.space	1
 11074              	.LC43:
 11075 0074 2077202D 		.ascii	" w - Write  l - Loop read   \015\012\000"
 11075      20577269 
 11075      74652020 
 11075      6C202D20 
 11075      4C6F6F70 
 11076 0093 00       		.space	1
 11077              	.LC44:
 11078 0094 3D3D3D3D 		.ascii	"==================================================\015"
 11078      3D3D3D3D 
 11078      3D3D3D3D 
 11078      3D3D3D3D 
 11078      3D3D3D3D 
 11079 00c7 0A203E20 		.ascii	"\012 > \000"
 11079      00
 11080              	.LC45:
 11081 00cc 0D00     		.ascii	"\015\000"
 11082              		.section	.rodata.jdrs.9057,"a",%progbits
 11083              		.align	2
 11084              		.set	.LANCHOR36,. + 0
 11085              		.type	jdrs.9057, %object
 11086              		.size	jdrs.9057, 16
 11087              	jdrs.9057:
 11088 0000 3C240140 		.word	1073816636
 11089 0004 40240140 		.word	1073816640
 11090 0008 44240140 		.word	1073816644
 11091 000c 48240140 		.word	1073816648
 11092              		.section	.rodata.lexmark_lcd.str1.4,"aMS",%progbits,1
 11093              		.align	2
 11094              	.LC62:
 11095 0000 57697461 		.ascii	"Witaj szkolo         \000"
 11095      6A20737A 
ARM GAS  /tmp/cczkEFU1.s 			page 203


 11095      6B6F6C6F 
 11095      20202020 
 11095      20202020 
 11096 0016 0000     		.space	2
 11097              	.LC63:
 11098 0018 5A617072 		.ascii	"Zapraszam do pracy        \000"
 11098      61737A61 
 11098      6D20646F 
 11098      20707261 
 11098      63792020 
 11099 0033 00       		.space	1
 11100              	.LC64:
 11101 0034 20202020 		.ascii	"                          \000"
 11101      20202020 
 11101      20202020 
 11101      20202020 
 11101      20202020 
 11102 004f 00       		.space	1
 11103              	.LC65:
 11104 0050 20545B75 		.ascii	" T[us]=\000"
 11104      735D3D00 
 11105              		.section	.rodata.lion_updown.str1.4,"aMS",%progbits,1
 11106              		.align	2
 11107              	.LC17:
 11108 0000 2E00     		.ascii	".\000"
 11109 0002 0000     		.space	2
 11110              	.LC18:
 11111 0004 5600     		.ascii	"V\000"
 11112 0006 0000     		.space	2
 11113              	.LC19:
 11114 0008 6D4100   		.ascii	"mA\000"
 11115 000b 00       		.space	1
 11116              	.LC20:
 11117 000c 6D416800 		.ascii	"mAh\000"
 11118              	.LC21:
 11119 0010 5700     		.ascii	"W\000"
 11120 0012 0000     		.space	2
 11121              	.LC22:
 11122 0014 6D576800 		.ascii	"mWh\000"
 11123              	.LC23:
 11124 0018 6F686D00 		.ascii	"ohm\000"
 11125              	.LC24:
 11126 001c 0D2000   		.ascii	"\015 \000"
 11127 001f 00       		.space	1
 11128              	.LC25:
 11129 0020 1B5B4B00 		.ascii	"\033[K\000"
 11130              	.LC26:
 11131 0024 30202020 		.ascii	"0        1         2         3         4         5\000"
 11131      20202020 
 11131      20312020 
 11131      20202020 
 11131      20202032 
 11132 0057 00       		.space	1
 11133              	.LC27:
 11134 0058 31323334 		.ascii	"123456789 123456789 123456789 123456789 123456789 1"
 11134      35363738 
 11134      39203132 
ARM GAS  /tmp/cczkEFU1.s 			page 204


 11134      33343536 
 11134      37383920 
 11135 008b 32333435 		.ascii	"234567890\000"
 11135      36373839 
 11135      3000
 11136 0095 000000   		.space	3
 11137              	.LC28:
 11138 0098 506F6461 		.ascii	"Podaj wrtosc= \000"
 11138      6A207772 
 11138      746F7363 
 11138      3D2000
 11139 00a7 00       		.space	1
 11140              	.LC29:
 11141 00a8 1B5B4B57 		.ascii	"\033[KWartosc ileZnak= \000"
 11141      6172746F 
 11141      73632069 
 11141      6C655A6E 
 11141      616B3D20 
 11142 00bd 000000   		.space	3
 11143              	.LC30:
 11144 00c0 1B5B3131 		.ascii	"\033[11;36H\000"
 11144      3B333648 
 11144      00
 11145 00c9 000000   		.space	3
 11146              	.LC31:
 11147 00cc 5A65726F 		.ascii	"Zerowanie t/n=\000"
 11147      77616E69 
 11147      6520742F 
 11147      6E3D00
 11148 00db 00       		.space	1
 11149              	.LC32:
 11150 00dc 20506F64 		.ascii	" Podaj wrtosc= \000"
 11150      616A2077 
 11150      72746F73 
 11150      633D2000 
 11151              	.LC33:
 11152 00ec 1B5B4B69 		.ascii	"\033[KileZnak,Wartosc=\000"
 11152      6C655A6E 
 11152      616B2C57 
 11152      6172746F 
 11152      73633D00 
 11153              	.LC34:
 11154 0100 204C6164 		.ascii	" Laduj do 70% x [mAh]=\000"
 11154      756A2064 
 11154      6F203730 
 11154      25207820 
 11154      5B6D4168 
 11155 0117 00       		.space	1
 11156              	.LC35:
 11157 0118 2000     		.ascii	" \000"
 11158 011a 0000     		.space	2
 11159              	.LC36:
 11160 011c 1B5B4B20 		.ascii	"\033[K Rozladuj [t/n]=\000"
 11160      526F7A6C 
 11160      6164756A 
 11160      205B742F 
 11160      6E5D3D00 
ARM GAS  /tmp/cczkEFU1.s 			page 205


 11161              	.LC37:
 11162 0130 1B5B4B4C 		.ascii	"\033[KLaduj do [mAh]=\000"
 11162      6164756A 
 11162      20646F20 
 11162      5B6D4168 
 11162      5D3D00
 11163              		.section	.rodata.liontrend.str1.4,"aMS",%progbits,1
 11164              		.align	2
 11165              	.LC12:
 11166 0000 763D00   		.ascii	"v=\000"
 11167 0003 00       		.space	1
 11168              	.LC13:
 11169 0004 0D0A00   		.ascii	"\015\012\000"
 11170 0007 00       		.space	1
 11171              	.LC14:
 11172 0008 633D00   		.ascii	"c=\000"
 11173              		.section	.rodata.oblicz.str1.4,"aMS",%progbits,1
 11174              		.align	2
 11175              	.LC15:
 11176 0000 0C205541 		.ascii	"\014 UART1 \000"
 11176      52543120 
 11176      00
 11177 0009 000000   		.space	3
 11178              	.LC16:
 11179 000c 20622F73 		.ascii	" b/s \015\012\000"
 11179      200D0A00 
 11180              		.section	.rodata.qtouch.str1.4,"aMS",%progbits,1
 11181              		.align	2
 11182              	.LC93:
 11183 0000 0D0A2051 		.ascii	"\015\012 QT =\000"
 11183      54203D00 
 11184              		.section	.rodata.ws2812led.str1.4,"aMS",%progbits,1
 11185              		.align	2
 11186              	.LC61:
 11187 0000 0D0A2044 		.ascii	"\015\012 DMA start...\000"
 11187      4D412073 
 11187      74617274 
 11187      2E2E2E00 
 11188              		.ident	"GCC: (15:7-2018-q2-6) 7.3.1 20180622 (release) [ARM/embedded-7-branch revision 261907]"
ARM GAS  /tmp/cczkEFU1.s 			page 206


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cczkEFU1.s:69     .text.gmtime_r.isra.0.constprop.2:00000000 $t
     /tmp/cczkEFU1.s:76     .text.gmtime_r.isra.0.constprop.2:00000000 gmtime_r.isra.0.constprop.2
     /tmp/cczkEFU1.s:264    .text.gmtime_r.isra.0.constprop.2:00000154 $d
                            *COM*:00000024 ptm
     /tmp/cczkEFU1.s:274    .text.head:00000000 $t
     /tmp/cczkEFU1.s:282    .text.head:00000000 head
     /tmp/cczkEFU1.s:305    .text.head:00000024 $d
     /tmp/cczkEFU1.s:309    .text.liontrend:00000000 $t
     /tmp/cczkEFU1.s:317    .text.liontrend:00000000 liontrend
     /tmp/cczkEFU1.s:446    .text.liontrend:00000124 $d
     /tmp/cczkEFU1.s:452    .text.oblicz:00000000 $t
     /tmp/cczkEFU1.s:460    .text.oblicz:00000000 oblicz
     /tmp/cczkEFU1.s:591    .text.oblicz:000000dc $d
                            *COM*:00000004 PutChar
     /tmp/cczkEFU1.s:606    .text.lion_updown:00000000 $t
     /tmp/cczkEFU1.s:614    .text.lion_updown:00000000 lion_updown
     /tmp/cczkEFU1.s:960    .text.lion_updown:0000026c $d
     /tmp/cczkEFU1.s:986    .text.lion_updown:000002d4 $t
     /tmp/cczkEFU1.s:1023   .text.lion_updown:000002fc $d
                            *COM*:00000004 trg1
                            *COM*:00000004 trg0
                            *COM*:00000004 trg2
                            *COM*:00000004 trg3
     /tmp/cczkEFU1.s:1062   .text.lion_updown:00000390 $t
     /tmp/cczkEFU1.s:1405   .text.lion_updown:000005b4 $d
     /tmp/cczkEFU1.s:1430   .text.lion_updown:00000610 $t
     /tmp/cczkEFU1.s:1843   .text.lion_updown:000008f0 $d
                            *COM*:00000004 delay_us
     /tmp/cczkEFU1.s:1878   .text.lion_updown:00000974 $t
     /tmp/cczkEFU1.s:2006   .text.lion_updown:00000a3c $d
     /tmp/cczkEFU1.s:2018   .text.startup.main:00000000 $t
     /tmp/cczkEFU1.s:2026   .text.startup.main:00000000 main
     /tmp/cczkEFU1.s:2117   .text.startup.main:00000074 $d
     /tmp/cczkEFU1.s:2128   .text.uht:00000000 $t
     /tmp/cczkEFU1.s:2136   .text.uht:00000000 uht
     /tmp/cczkEFU1.s:2151   .text.uht:00000010 $d
     /tmp/cczkEFU1.s:2154   .text.rtc_calibrate:00000000 $t
     /tmp/cczkEFU1.s:2162   .text.rtc_calibrate:00000000 rtc_calibrate
     /tmp/cczkEFU1.s:2325   .text.rtc_calibrate:00000104 $d
                            *COM*:00000004 Timt
     /tmp/cczkEFU1.s:2340   .text.testwsk:00000000 $t
     /tmp/cczkEFU1.s:2348   .text.testwsk:00000000 testwsk
     /tmp/cczkEFU1.s:2356   .text.veml6075:00000000 $t
     /tmp/cczkEFU1.s:2364   .text.veml6075:00000000 veml6075
     /tmp/cczkEFU1.s:2469   .text.veml6075:000000a0 $d
     /tmp/cczkEFU1.s:2484   .text.softSPI_w:00000000 $t
     /tmp/cczkEFU1.s:2492   .text.softSPI_w:00000000 softSPI_w
     /tmp/cczkEFU1.s:2562   .text.softSPI_w:00000064 $d
     /tmp/cczkEFU1.s:2569   .text.softSPI_r:00000000 $t
     /tmp/cczkEFU1.s:2577   .text.softSPI_r:00000000 softSPI_r
     /tmp/cczkEFU1.s:2629   .text.softSPI_r:00000038 $d
     /tmp/cczkEFU1.s:2634   .text.ili9486:00000000 $t
     /tmp/cczkEFU1.s:2642   .text.ili9486:00000000 ili9486
     /tmp/cczkEFU1.s:2844   .text.ili9486:00000128 $d
     /tmp/cczkEFU1.s:2861   .text.wiznet5500:00000000 $t
ARM GAS  /tmp/cczkEFU1.s 			page 207


     /tmp/cczkEFU1.s:2869   .text.wiznet5500:00000000 wiznet5500
     /tmp/cczkEFU1.s:2943   .text.wiznet5500:00000074 $d
     /tmp/cczkEFU1.s:2953   .text.uv_meter:00000000 $t
     /tmp/cczkEFU1.s:2961   .text.uv_meter:00000000 uv_meter
     /tmp/cczkEFU1.s:3051   .text.uv_meter:00000078 $d
     /tmp/cczkEFU1.s:3059   .text.IRQLoraInit:00000000 $t
     /tmp/cczkEFU1.s:3067   .text.IRQLoraInit:00000000 IRQLoraInit
     /tmp/cczkEFU1.s:3100   .text.IRQLoraInit:0000001c $d
     /tmp/cczkEFU1.s:3105   .text.LoRaRX:00000000 $t
     /tmp/cczkEFU1.s:3113   .text.LoRaRX:00000000 LoRaRX
     /tmp/cczkEFU1.s:3322   .text.LoRaRX:00000144 $d
     /tmp/cczkEFU1.s:3340   .text.LoRaRX1:00000000 $t
     /tmp/cczkEFU1.s:3348   .text.LoRaRX1:00000000 LoRaRX1
     /tmp/cczkEFU1.s:3504   .text.LoRaRX1:00000100 $d
     /tmp/cczkEFU1.s:3522   .text.LoRaRX1:00000112 $t
     /tmp/cczkEFU1.s:3671   .text.LoRaRX1:00000238 $d
     /tmp/cczkEFU1.s:3703   .text.LoRaTX:00000000 $t
     /tmp/cczkEFU1.s:3711   .text.LoRaTX:00000000 LoRaTX
     /tmp/cczkEFU1.s:3953   .text.LoRaTX:00000198 $d
     /tmp/cczkEFU1.s:3973   .text.col1:00000000 $t
     /tmp/cczkEFU1.s:3981   .text.col1:00000000 col1
     /tmp/cczkEFU1.s:4001   .text.col1:00000018 $d
     /tmp/cczkEFU1.s:4005   .text.col2:00000000 $t
     /tmp/cczkEFU1.s:4013   .text.col2:00000000 col2
     /tmp/cczkEFU1.s:4029   .text.col2:00000014 $d
     /tmp/cczkEFU1.s:4032   .text.col0:00000000 $t
     /tmp/cczkEFU1.s:4040   .text.col0:00000000 col0
     /tmp/cczkEFU1.s:4056   .text.col0:00000014 $d
     /tmp/cczkEFU1.s:4059   .text.ws2812led:00000000 $t
     /tmp/cczkEFU1.s:4067   .text.ws2812led:00000000 ws2812led
     /tmp/cczkEFU1.s:4225   .text.ws2812led:000000e4 $d
     /tmp/cczkEFU1.s:4242   .text.lexmark_lcd:00000000 $t
     /tmp/cczkEFU1.s:4250   .text.lexmark_lcd:00000000 lexmark_lcd
     /tmp/cczkEFU1.s:4320   .text.lexmark_lcd:0000006c $d
     /tmp/cczkEFU1.s:4331   .text.softUTX_init:00000000 $t
     /tmp/cczkEFU1.s:4339   .text.softUTX_init:00000000 softUTX_init
     /tmp/cczkEFU1.s:4354   .text.softUTX_init:00000010 $d
     /tmp/cczkEFU1.s:4357   .text.sofUTX:00000000 $t
     /tmp/cczkEFU1.s:4365   .text.sofUTX:00000000 sofUTX
     /tmp/cczkEFU1.s:4456   .text.sofUTX:0000006c $d
     /tmp/cczkEFU1.s:4461   .text.ToLED:00000000 $t
     /tmp/cczkEFU1.s:4469   .text.ToLED:00000000 ToLED
     /tmp/cczkEFU1.s:4497   .text.cmd_LCD:00000000 $t
     /tmp/cczkEFU1.s:4505   .text.cmd_LCD:00000000 cmd_LCD
     /tmp/cczkEFU1.s:4567   .text.cmd_LCD:00000058 $d
     /tmp/cczkEFU1.s:4573   .text.CalculateLux:00000000 $t
     /tmp/cczkEFU1.s:4581   .text.CalculateLux:00000000 CalculateLux
     /tmp/cczkEFU1.s:4753   .text.TSL2561_i2c:00000000 $t
     /tmp/cczkEFU1.s:4761   .text.TSL2561_i2c:00000000 TSL2561_i2c
     /tmp/cczkEFU1.s:4898   .text.TSL2561_i2c:000000dc $d
     /tmp/cczkEFU1.s:4910   .text.set_mode:00000000 $t
     /tmp/cczkEFU1.s:4918   .text.set_mode:00000000 set_mode
     /tmp/cczkEFU1.s:4979   .text.MAX44009_i2c:00000000 $t
     /tmp/cczkEFU1.s:4987   .text.MAX44009_i2c:00000000 MAX44009_i2c
     /tmp/cczkEFU1.s:5258   .text.MAX44009_i2c:000001ec $d
     /tmp/cczkEFU1.s:5274   .text.BMP280_i2c:00000000 $t
     /tmp/cczkEFU1.s:5282   .text.BMP280_i2c:00000000 BMP280_i2c
ARM GAS  /tmp/cczkEFU1.s 			page 208


     /tmp/cczkEFU1.s:5752   .text.BMP280_i2c:00000334 $d
     /tmp/cczkEFU1.s:5773   .text.BMP280_spi:00000000 $t
     /tmp/cczkEFU1.s:5781   .text.BMP280_spi:00000000 BMP280_spi
     /tmp/cczkEFU1.s:6035   .text.BMP280_spi:000001bc $d
     /tmp/cczkEFU1.s:6051   .text.fun_tool:00000000 $t
     /tmp/cczkEFU1.s:6059   .text.fun_tool:00000000 fun_tool
     /tmp/cczkEFU1.s:6072   .text.fun_tool:00000014 $d
     /tmp/cczkEFU1.s:6093   .text.fun_tool:0000003e $t
     /tmp/cczkEFU1.s:6499   .text.fun_tool:00000318 $d
     /tmp/cczkEFU1.s:6526   .text.qtouch_mesaure:00000000 $t
     /tmp/cczkEFU1.s:6534   .text.qtouch_mesaure:00000000 qtouch_mesaure
     /tmp/cczkEFU1.s:6590   .text.qtouch_mesaure:0000003c $d
     /tmp/cczkEFU1.s:6596   .text.qtouch:00000000 $t
     /tmp/cczkEFU1.s:6604   .text.qtouch:00000000 qtouch
     /tmp/cczkEFU1.s:6647   .text.qtouch:00000048 $d
     /tmp/cczkEFU1.s:6654   .text.DHT_Tool:00000000 $t
     /tmp/cczkEFU1.s:6662   .text.DHT_Tool:00000000 DHT_Tool
     /tmp/cczkEFU1.s:6695   .text.DHT_Tool:0000002c $d
     /tmp/cczkEFU1.s:6701   .text.SPI_Tool_Menu:00000000 $t
     /tmp/cczkEFU1.s:6709   .text.SPI_Tool_Menu:00000000 SPI_Tool_Menu
     /tmp/cczkEFU1.s:6733   .text.SPI_Tool_Menu:00000024 $d
     /tmp/cczkEFU1.s:6740   .text.SPI_Tool:00000000 $t
     /tmp/cczkEFU1.s:6748   .text.SPI_Tool:00000000 SPI_Tool
     /tmp/cczkEFU1.s:6915   .text.SPI_Tool:00000114 $d
     /tmp/cczkEFU1.s:6936   .text.Menu1:00000000 $t
     /tmp/cczkEFU1.s:6944   .text.Menu1:00000000 Menu1
     /tmp/cczkEFU1.s:6968   .text.Menu1:00000024 $d
     /tmp/cczkEFU1.s:6975   .text.MemCard_Menu:00000000 $t
     /tmp/cczkEFU1.s:6983   .text.MemCard_Menu:00000000 MemCard_Menu
     /tmp/cczkEFU1.s:7056   .text.MemCard_Menu:00000082 $d
     /tmp/cczkEFU1.s:7095   .text.MemCard_Menu:000000d0 $t
     /tmp/cczkEFU1.s:7371   .text.MemCard_Menu:000002c0 $d
     /tmp/cczkEFU1.s:10529  .bss.buffer.8846:00000000 buffer.8846
     /tmp/cczkEFU1.s:7398   .text.MemCard_Menu:00000324 $t
     /tmp/cczkEFU1.s:7761   .text.MemCard_Menu:000005e8 $d
     /tmp/cczkEFU1.s:7800   .text.MemCard_Menu:0000067c $t
     /tmp/cczkEFU1.s:8059   .text.MemCard_Menu:00000854 $d
     /tmp/cczkEFU1.s:8084   .text.CopyClock:00000000 $t
     /tmp/cczkEFU1.s:8092   .text.CopyClock:00000000 CopyClock
     /tmp/cczkEFU1.s:8158   .text.Intro2:00000000 $t
     /tmp/cczkEFU1.s:8166   .text.Intro2:00000000 Intro2
     /tmp/cczkEFU1.s:8611   .text.Intro2:000002e0 $d
                            *COM*:00000008 Rtc
     /tmp/cczkEFU1.s:8639   .text.Intro2:00000348 $t
     /tmp/cczkEFU1.s:8816   .text.Intro2:00000490 $d
     /tmp/cczkEFU1.s:8827   .text.CopyTime:00000000 $t
     /tmp/cczkEFU1.s:8835   .text.CopyTime:00000000 CopyTime
     /tmp/cczkEFU1.s:8874   .text.CopyDate:00000000 $t
     /tmp/cczkEFU1.s:8882   .text.CopyDate:00000000 CopyDate
     /tmp/cczkEFU1.s:8921   .text.Zegarek:00000000 $t
     /tmp/cczkEFU1.s:8929   .text.Zegarek:00000000 Zegarek
     /tmp/cczkEFU1.s:8988   .text.Zegarek:00000054 $d
     /tmp/cczkEFU1.s:8996   .text.SysTick_Handler:00000000 $t
     /tmp/cczkEFU1.s:9004   .text.SysTick_Handler:00000000 SysTick_Handler
     /tmp/cczkEFU1.s:9082   .text.SysTick_Handler:00000054 $d
                            *COM*:00000004 Tim0
                            *COM*:00000004 Tim1
ARM GAS  /tmp/cczkEFU1.s 			page 209


                            *COM*:00000004 trg4
                            *COM*:00000004 trg5
     /tmp/cczkEFU1.s:9095   .text.TIM2_IRQHandler:00000000 $t
     /tmp/cczkEFU1.s:9103   .text.TIM2_IRQHandler:00000000 TIM2_IRQHandler
     /tmp/cczkEFU1.s:9132   .text.TIM2_IRQHandler:0000001c $d
     /tmp/cczkEFU1.s:9135   .text.TIM3_IRQHandler:00000000 $t
     /tmp/cczkEFU1.s:9143   .text.TIM3_IRQHandler:00000000 TIM3_IRQHandler
     /tmp/cczkEFU1.s:9203   .text.TIM3_IRQHandler:00000044 $d
                            *COM*:00000004 Timt3
                            *COM*:00000004 delay3_us
                            *COM*:00000004 t3rg0
                            *COM*:00000004 t3rg1
                            *COM*:00000004 t3rg2
     /tmp/cczkEFU1.s:9211   .text.EXTI0_IRQHandler:00000000 $t
     /tmp/cczkEFU1.s:9219   .text.EXTI0_IRQHandler:00000000 EXTI0_IRQHandler
     /tmp/cczkEFU1.s:9253   .text.EXTI0_IRQHandler:00000024 $d
     /tmp/cczkEFU1.s:9258   .text.EXTI1_IRQHandler:00000000 $t
     /tmp/cczkEFU1.s:9266   .text.EXTI1_IRQHandler:00000000 EXTI1_IRQHandler
     /tmp/cczkEFU1.s:9296   .text.EXTI1_IRQHandler:00000020 $d
     /tmp/cczkEFU1.s:9300   .text.EXTI2_IRQHandler:00000000 $t
     /tmp/cczkEFU1.s:9308   .text.EXTI2_IRQHandler:00000000 EXTI2_IRQHandler
     /tmp/cczkEFU1.s:9338   .text.EXTI2_IRQHandler:00000020 $d
     /tmp/cczkEFU1.s:9342   .text.EXTI3_IRQHandler:00000000 $t
     /tmp/cczkEFU1.s:9350   .text.EXTI3_IRQHandler:00000000 EXTI3_IRQHandler
     /tmp/cczkEFU1.s:9380   .text.EXTI3_IRQHandler:00000020 $d
     /tmp/cczkEFU1.s:9384   .text.EXTI4_IRQHandler:00000000 $t
     /tmp/cczkEFU1.s:9392   .text.EXTI4_IRQHandler:00000000 EXTI4_IRQHandler
     /tmp/cczkEFU1.s:9422   .text.EXTI4_IRQHandler:00000020 $d
     /tmp/cczkEFU1.s:9426   .text.EXTI15_10_IRQHandler:00000000 $t
     /tmp/cczkEFU1.s:9434   .text.EXTI15_10_IRQHandler:00000000 EXTI15_10_IRQHandler
     /tmp/cczkEFU1.s:9460   .text.EXTI15_10_IRQHandler:0000001c $d
     /tmp/cczkEFU1.s:9463   .text.EXTI9_5_IRQHandler:00000000 $t
     /tmp/cczkEFU1.s:9471   .text.EXTI9_5_IRQHandler:00000000 EXTI9_5_IRQHandler
     /tmp/cczkEFU1.s:9514   .text.EXTI9_5_IRQHandler:00000038 $d
     /tmp/cczkEFU1.s:9518   .text.RTC_IRQHandler:00000000 $t
     /tmp/cczkEFU1.s:9526   .text.RTC_IRQHandler:00000000 RTC_IRQHandler
     /tmp/cczkEFU1.s:9564   .text.RTC_IRQHandler:00000028 $d
     /tmp/cczkEFU1.s:9569   .text.RTCAlarm_IRQHandler:00000000 $t
     /tmp/cczkEFU1.s:9577   .text.RTCAlarm_IRQHandler:00000000 RTCAlarm_IRQHandler
     /tmp/cczkEFU1.s:9611   .text.RTCAlarm_IRQHandler:00000028 $d
     /tmp/cczkEFU1.s:9615   .text.DMA1_Channel1_IRQHandler:00000000 $t
     /tmp/cczkEFU1.s:9623   .text.DMA1_Channel1_IRQHandler:00000000 DMA1_Channel1_IRQHandler
     /tmp/cczkEFU1.s:9665   .text.DMA1_Channel1_IRQHandler:0000002c $d
     /tmp/cczkEFU1.s:9670   .text.FSMC_IRQHandler:00000000 $t
     /tmp/cczkEFU1.s:9678   .text.FSMC_IRQHandler:00000000 FSMC_IRQHandler
     /tmp/cczkEFU1.s:9693   .text.DACDmaInit:00000000 $t
     /tmp/cczkEFU1.s:9701   .text.DACDmaInit:00000000 DACDmaInit
     /tmp/cczkEFU1.s:9740   .text.DACDmaInit:00000030 $d
     /tmp/cczkEFU1.s:9746   .text.TIM4_IRQHandler:00000000 $t
     /tmp/cczkEFU1.s:9754   .text.TIM4_IRQHandler:00000000 TIM4_IRQHandler
     /tmp/cczkEFU1.s:9774   .text.TIM4_IRQHandler:00000010 $d
                            *COM*:00000004 Tim4
     /tmp/cczkEFU1.s:9778   .text.adc1_init_injected:00000000 $t
     /tmp/cczkEFU1.s:9786   .text.adc1_init_injected:00000000 adc1_init_injected
     /tmp/cczkEFU1.s:9854   .text.adc1_init_injected:00000050 $d
     /tmp/cczkEFU1.s:9862   .text.adc_get_internals:00000000 $t
     /tmp/cczkEFU1.s:9870   .text.adc_get_internals:00000000 adc_get_internals
ARM GAS  /tmp/cczkEFU1.s 			page 210


     /tmp/cczkEFU1.s:9948   .text.adc_get_internals:00000054 $d
     /tmp/cczkEFU1.s:9955   .text.adc_get_injected:00000000 $t
     /tmp/cczkEFU1.s:9963   .text.adc_get_injected:00000000 adc_get_injected
     /tmp/cczkEFU1.s:10030  .text.adc_get_injected:00000048 $d
                .rodata.jdrs.9057:00000000 jdrs.9072
     /tmp/cczkEFU1.s:10036  .text.NVIC_conf:00000000 $t
     /tmp/cczkEFU1.s:10044  .text.NVIC_conf:00000000 NVIC_conf
     /tmp/cczkEFU1.s:10081  .text.NVIC_conf:00000028 $d
     /tmp/cczkEFU1.s:10087  .text.SetDate:00000000 $t
     /tmp/cczkEFU1.s:10095  .text.SetDate:00000000 SetDate
     /tmp/cczkEFU1.s:10303  .text.SetDate:0000019c $d
     /tmp/cczkEFU1.s:10315  .text.flash_latency:00000000 $t
     /tmp/cczkEFU1.s:10323  .text.flash_latency:00000000 flash_latency
     /tmp/cczkEFU1.s:10354  .text.flash_latency:00000024 $d
     /tmp/cczkEFU1.s:11087  .rodata.jdrs.9057:00000000 jdrs.9057
     /tmp/cczkEFU1.s:10680  .data.p_TSpm:00000000 p_TSpm
     /tmp/cczkEFU1.s:10454  .bss.FLAG:00000000 FLAG
     /tmp/cczkEFU1.s:10979  .rodata._ytab:00000000 _ytab
                            *COM*:00000004 Time6
                            *COM*:00000004 Tim6
                            *COM*:00000004 Tim2
     /tmp/cczkEFU1.s:10384  .rodata:00000000 $d
     /tmp/cczkEFU1.s:10436  .bss.Cah.8246:00000000 $d
     /tmp/cczkEFU1.s:10440  .bss.Cah.8246:00000000 Cah.8246
     /tmp/cczkEFU1.s:10443  .bss.Cwh.8247:00000000 $d
     /tmp/cczkEFU1.s:10447  .bss.Cwh.8247:00000000 Cwh.8247
     /tmp/cczkEFU1.s:10450  .bss.FLAG:00000000 $d
     /tmp/cczkEFU1.s:10457  .bss.Rwa.8248:00000000 $d
     /tmp/cczkEFU1.s:10461  .bss.Rwa.8248:00000000 Rwa.8248
     /tmp/cczkEFU1.s:10464  .bss.SX1278_1.8441:00000000 $d
     /tmp/cczkEFU1.s:10468  .bss.SX1278_1.8441:00000000 SX1278_1.8441
     /tmp/cczkEFU1.s:10471  .bss.SX1278_1.8467:00000000 $d
     /tmp/cczkEFU1.s:10475  .bss.SX1278_1.8467:00000000 SX1278_1.8467
     /tmp/cczkEFU1.s:10478  .bss.SX1278_1.8492:00000000 $d
     /tmp/cczkEFU1.s:10482  .bss.SX1278_1.8492:00000000 SX1278_1.8492
     /tmp/cczkEFU1.s:10485  .bss.SX1278_hw1.8440:00000000 $d
     /tmp/cczkEFU1.s:10489  .bss.SX1278_hw1.8440:00000000 SX1278_hw1.8440
     /tmp/cczkEFU1.s:10492  .bss.SX1278_hw1.8466:00000000 $d
     /tmp/cczkEFU1.s:10496  .bss.SX1278_hw1.8466:00000000 SX1278_hw1.8466
     /tmp/cczkEFU1.s:10499  .bss.SX1278_hw1.8491:00000000 $d
     /tmp/cczkEFU1.s:10503  .bss.SX1278_hw1.8491:00000000 SX1278_hw1.8491
     /tmp/cczkEFU1.s:10506  .bss.TSpm:00000000 $d
     /tmp/cczkEFU1.s:10509  .bss.TSpm:00000000 TSpm
     /tmp/cczkEFU1.s:10512  .bss.buf_rx.8470:00000000 $d
     /tmp/cczkEFU1.s:10516  .bss.buf_rx.8470:00000000 buf_rx.8470
     /tmp/cczkEFU1.s:10519  .bss.buf_tx.8494:00000000 $d
     /tmp/cczkEFU1.s:10523  .bss.buf_tx.8494:00000000 buf_tx.8494
     /tmp/cczkEFU1.s:10526  .bss.buffer.8846:00000000 $d
     /tmp/cczkEFU1.s:10532  .bss.cah.8244:00000000 $d
     /tmp/cczkEFU1.s:10536  .bss.cah.8244:00000000 cah.8244
     /tmp/cczkEFU1.s:10539  .bss.cnt.8240:00000000 $d
     /tmp/cczkEFU1.s:10543  .bss.cnt.8240:00000000 cnt.8240
     /tmp/cczkEFU1.s:10546  .bss.cnt2.8249:00000000 $d
     /tmp/cczkEFU1.s:10550  .bss.cnt2.8249:00000000 cnt2.8249
     /tmp/cczkEFU1.s:10556  .bss.coile.8264:00000000 coile.8264
     /tmp/cczkEFU1.s:10557  .bss.coile.8264:00000000 $d
     /tmp/cczkEFU1.s:10559  .bss.cur.8256:00000000 $d
ARM GAS  /tmp/cczkEFU1.s 			page 211


     /tmp/cczkEFU1.s:10563  .bss.cur.8256:00000000 cur.8256
     /tmp/cczkEFU1.s:10566  .bss.cwh.8245:00000000 $d
     /tmp/cczkEFU1.s:10570  .bss.cwh.8245:00000000 cwh.8245
     /tmp/cczkEFU1.s:10573  .bss.datetime.8669:00000000 $d
     /tmp/cczkEFU1.s:10577  .bss.datetime.8669:00000000 datetime.8669
     /tmp/cczkEFU1.s:10580  .bss.dcur.8257:00000000 $d
     /tmp/cczkEFU1.s:10584  .bss.dcur.8257:00000000 dcur.8257
     /tmp/cczkEFU1.s:10590  .bss.dinit.8847:00000000 dinit.8847
     /tmp/cczkEFU1.s:10591  .bss.dinit.8847:00000000 $d
     /tmp/cczkEFU1.s:10593  .bss.dma_buf:00000000 $d
     /tmp/cczkEFU1.s:10597  .bss.dma_buf:00000000 dma_buf
     /tmp/cczkEFU1.s:10600  .bss.dma_buf.8757:00000000 $d
     /tmp/cczkEFU1.s:10604  .bss.dma_buf.8757:00000000 dma_buf.8757
     /tmp/cczkEFU1.s:10607  .bss.pow.8252:00000000 $d
     /tmp/cczkEFU1.s:10611  .bss.pow.8252:00000000 pow.8252
     /tmp/cczkEFU1.s:10614  .bss.rw.8260:00000000 $d
     /tmp/cczkEFU1.s:10618  .bss.rw.8260:00000000 rw.8260
     /tmp/cczkEFU1.s:10621  .bss.str_num.8495:00000000 $d
     /tmp/cczkEFU1.s:10625  .bss.str_num.8495:00000000 str_num.8495
     /tmp/cczkEFU1.s:10628  .bss.val.8742:00000000 $d
     /tmp/cczkEFU1.s:10632  .bss.val.8742:00000000 val.8742
     /tmp/cczkEFU1.s:10635  .bss.vbus.8258:00000000 $d
     /tmp/cczkEFU1.s:10639  .bss.vbus.8258:00000000 vbus.8258
     /tmp/cczkEFU1.s:10642  .bss.vr1.8241:00000000 $d
     /tmp/cczkEFU1.s:10646  .bss.vr1.8241:00000000 vr1.8241
     /tmp/cczkEFU1.s:10649  .bss.vr3.8250:00000000 $d
     /tmp/cczkEFU1.s:10653  .bss.vr3.8250:00000000 vr3.8250
     /tmp/cczkEFU1.s:10656  .bss.vr4.8251:00000000 $d
     /tmp/cczkEFU1.s:10660  .bss.vr4.8251:00000000 vr4.8251
     /tmp/cczkEFU1.s:10663  .bss.yb.8738:00000000 $d
     /tmp/cczkEFU1.s:10667  .bss.yb.8738:00000000 yb.8738
     /tmp/cczkEFU1.s:10670  .bss.yn.8739:00000000 $d
     /tmp/cczkEFU1.s:10674  .bss.yn.8739:00000000 yn.8739
     /tmp/cczkEFU1.s:10677  .data.p_TSpm:00000000 $d
     /tmp/cczkEFU1.s:10683  .data.tbuf.8744:00000000 $d
     /tmp/cczkEFU1.s:10687  .data.tbuf.8744:00000000 tbuf.8744
     /tmp/cczkEFU1.s:10690  .rodata.BMP280_i2c.str1.4:00000000 $d
     /tmp/cczkEFU1.s:10707  .rodata.BMP280_spi.str1.4:00000000 $d
     /tmp/cczkEFU1.s:10711  .rodata.Intro2.str1.4:00000000 $d
     /tmp/cczkEFU1.s:10723  .rodata.LoRaRX.str1.4:00000000 $d
     /tmp/cczkEFU1.s:10727  .rodata.LoRaRX1.str1.4:00000000 $d
     /tmp/cczkEFU1.s:10765  .rodata.MAX44009_i2c.str1.4:00000000 $d
     /tmp/cczkEFU1.s:10769  .rodata.MemCard_Menu.str1.4:00000000 $d
     /tmp/cczkEFU1.s:10893  .rodata.Menu1.str1.4:00000000 $d
     /tmp/cczkEFU1.s:10909  .rodata.SPI_Tool.str1.4:00000000 $d
     /tmp/cczkEFU1.s:10927  .rodata.SPI_Tool_Menu.str1.4:00000000 $d
     /tmp/cczkEFU1.s:10943  .rodata.SetDate.str1.4:00000000 $d
     /tmp/cczkEFU1.s:10964  .rodata.TSL2561_i2c.str1.4:00000000 $d
     /tmp/cczkEFU1.s:10968  .rodata.Zegarek.str1.4:00000000 $d
     /tmp/cczkEFU1.s:10975  .rodata._ytab:00000000 $d
     /tmp/cczkEFU1.s:11005  .rodata.fun_tool.str1.4:00000000 $d
     /tmp/cczkEFU1.s:11053  .rodata.head.str1.4:00000000 $d
     /tmp/cczkEFU1.s:11060  .rodata.ili9486.str1.4:00000000 $d
     /tmp/cczkEFU1.s:11083  .rodata.jdrs.9057:00000000 $d
     /tmp/cczkEFU1.s:11093  .rodata.lexmark_lcd.str1.4:00000000 $d
     /tmp/cczkEFU1.s:11106  .rodata.lion_updown.str1.4:00000000 $d
     /tmp/cczkEFU1.s:11164  .rodata.liontrend.str1.4:00000000 $d
ARM GAS  /tmp/cczkEFU1.s 			page 212


     /tmp/cczkEFU1.s:11174  .rodata.oblicz.str1.4:00000000 $d
     /tmp/cczkEFU1.s:11181  .rodata.qtouch.str1.4:00000000 $d
     /tmp/cczkEFU1.s:11185  .rodata.ws2812led.str1.4:00000000 $d

UNDEFINED SYMBOLS
tr_pen_color
UaPutK
uint2uart
UaPutS
sint2uart
BkpRegInit
uint2str
UART1_putc
i2c1r_init
i2c1_write
i2c1_read
UART_getChar
p_Fifo1
tr_locate
UART_getDec
UART_getStr
unt2uart
int2uart
int2uarz
UaPutC
UART2_putc
RtcInit
i2c1_init
ssd1306_init
num2uart
int2str
oled_str16
oled_refresh_gram
oled_hw
oled_num24
UART_getHex
hex2uart
SPI1_init_
DHT_Init
DHT_read
I2C2_init
i2c2_scan
SX1278_begin
SX1278_LoRaEntryRx
SX1278_LoRaRx
SX1278_SPIRead
UART_getNum
SX1278_LoRaRxPacket
SX1278_read
unt2str
strlen
stpcpy
SX1278_LoRaEntryTx
SX1278_LoRaTxPacketStart
SX1278_sleep
UC1608_Init
UC1608_Clr
ARM GAS  /tmp/cczkEFU1.s 			page 213


UC1608_str
UC1608_Refresh
i2c2_write
i2c2_read
spi1_rw
mmc_read_sect
crc16_spi2
EraseFlashPage
TFT_Clear
rtc_SetTime
SPI2_init
spi2_rw
TFT_Init
crc16_spi2_init
CardType
mmc_init
mmc_read_config
mmc_write_sect
TFT_dy
rtc_GetTime
TFT_Fill
TFT_txt
TFT_SetWindow
ColCon
str2int
