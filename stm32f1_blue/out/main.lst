ARM GAS  /tmp/ccAYxbuo.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   3              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   4              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   5              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   6              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   7              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
   8              		.eabi_attribute 30, 2	@ Tag_ABI_optimization_goals
   9              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  10              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  11              		.file	"main.c"
  12              	@ GNU C99 (15:7-2018-q2-6) version 7.3.1 20180622 (release) [ARM/embedded-7-branch revision 261907]
  13              	@	compiled by GNU C version 8.2.0, GMP version 6.1.2, MPFR version 4.0.2, MPC version 1.1.0, isl ve
  14              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  15              	@ options passed:  -I . -imultilib thumb/v7-m -MD out/main.d -MF out/main.d
  16              	@ -MP -MQ out/main.o -D__USES_INITFINI__ -D RAMCODE -D STM32F10X_HD main.c
  17              	@ -mcpu=cortex-m3 -mthumb -auxbase-strip out/main.o -O2 -Wall
  18              	@ -Wstrict-prototypes -Wextra -Wno-uninitialized
  19              	@ -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable
  20              	@ -std=gnu99 -ffunction-sections -fdata-sections -fverbose-asm
  21              	@ options enabled:  -faggressive-loop-optimizations -falign-jumps
  22              	@ -falign-labels -falign-loops -fauto-inc-dec -fbranch-count-reg
  23              	@ -fcaller-saves -fchkp-check-incomplete-type -fchkp-check-read
  24              	@ -fchkp-check-write -fchkp-instrument-calls -fchkp-narrow-bounds
  25              	@ -fchkp-optimize -fchkp-store-bounds -fchkp-use-static-bounds
  26              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcode-hoisting
  27              	@ -fcombine-stack-adjustments -fcommon -fcompare-elim -fcprop-registers
  28              	@ -fcrossjumping -fcse-follow-jumps -fdata-sections -fdefer-pop
  29              	@ -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
  30              	@ -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-types
  31              	@ -fexpensive-optimizations -fforward-propagate -ffp-int-builtin-inexact
  32              	@ -ffunction-cse -ffunction-sections -fgcse -fgcse-lm -fgnu-runtime
  33              	@ -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  34              	@ -fif-conversion -fif-conversion2 -findirect-inlining -finline
  35              	@ -finline-atomics -finline-functions-called-once -finline-small-functions
  36              	@ -fipa-bit-cp -fipa-cp -fipa-icf -fipa-icf-functions -fipa-icf-variables
  37              	@ -fipa-profile -fipa-pure-const -fipa-ra -fipa-reference -fipa-sra
  38              	@ -fipa-vrp -fira-hoist-pressure -fira-share-save-slots
  39              	@ -fira-share-spill-slots -fisolate-erroneous-paths-dereference -fivopts
  40              	@ -fkeep-static-consts -fleading-underscore -flifetime-dse -flra-remat
  41              	@ -flto-odr-type-merging -fmath-errno -fmerge-constants
  42              	@ -fmerge-debug-strings -fmove-loop-invariants -fomit-frame-pointer
  43              	@ -foptimize-sibling-calls -foptimize-strlen -fpartial-inlining -fpeephole
  44              	@ -fpeephole2 -fplt -fprefetch-loop-arrays -freg-struct-return
  45              	@ -freorder-blocks -freorder-functions -frerun-cse-after-loop
  46              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  47              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  48              	@ -fsched-pressure -fsched-rank-heuristic -fsched-spec
  49              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-insns
  50              	@ -fschedule-insns2 -fsection-anchors -fsemantic-interposition
  51              	@ -fshow-column -fshrink-wrap -fshrink-wrap-separate -fsigned-zeros
  52              	@ -fsplit-ivs-in-unroller -fsplit-wide-types -fssa-backprop -fssa-phiopt
  53              	@ -fstdarg-opt -fstore-merging -fstrict-aliasing -fstrict-overflow
  54              	@ -fstrict-volatile-bitfields -fsync-libcalls -fthread-jumps
  55              	@ -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce
  56              	@ -ftree-ccp -ftree-ch -ftree-coalesce-vars -ftree-copy-prop -ftree-cselim
  57              	@ -ftree-dce -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
ARM GAS  /tmp/ccAYxbuo.s 			page 2


  58              	@ -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  59              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pre
  60              	@ -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slsr
  61              	@ -ftree-sra -ftree-switch-conversion -ftree-tail-merge -ftree-ter
  62              	@ -ftree-vrp -funit-at-a-time -fverbose-asm -fzero-initialized-in-bss
  63              	@ -masm-syntax-unified -mfix-cortex-m3-ldrd -mlittle-endian
  64              	@ -mpic-data-is-text-relative -msched-prolog -mthumb -munaligned-access
  65              	@ -mvectorize-with-neon-quad
  66              	
  67              		.text
  68              		.section	.text.gmtime_r.isra.0.constprop.2,"ax",%progbits
  69              		.align	1
  70              		.p2align 2,,3
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu softvfp
  75              		.type	gmtime_r.isra.0.constprop.2, %function
  76              	gmtime_r.isra.0.constprop.2:
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}	@
  80              	@ main.c:5668: 	tmbuf->tm_min = (dayclock % 3600) / 60;
  81 0004 4FF46164 		mov	r4, #3600	@ tmp221,
  82              	@ main.c:5664: 	dayclock = (u32) time % SECS_DAY;
  83 0008 524B     		ldr	r3, .L35	@ tmp191,
  84 000a 534A     		ldr	r2, .L35+4	@ tmp193,
  85 000c A3FB0013 		umull	r1, r3, r3, r0	@ tmp372, tmp190, tmp191, ISRA.305
  86 0010 190C     		lsrs	r1, r3, #16	@ dayclock, tmp190,
  87 0012 02FB1101 		mls	r1, r2, r1, r0	@ dayclock, tmp193, dayclock, ISRA.305
  88              	@ main.c:5668: 	tmbuf->tm_min = (dayclock % 3600) / 60;
  89 0016 514A     		ldr	r2, .L35+8	@ tmp219,
  90              	@ main.c:5665: 	dayno = (u32) time / SECS_DAY;
  91 0018 1B0C     		lsrs	r3, r3, #16	@ dayno, tmp190,
  92              	@ main.c:5668: 	tmbuf->tm_min = (dayclock % 3600) / 60;
  93 001a A2FB012E 		umull	r2, lr, r2, r1	@ tmp373, tmp218, tmp219, dayclock
  94              	@ main.c:5670: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
  95 001e 504A     		ldr	r2, .L35+12	@ tmp252,
  96 0020 1D1D     		adds	r5, r3, #4	@ tmp250, dayno,
  97              	@ main.c:5668: 	tmbuf->tm_min = (dayclock % 3600) / 60;
  98 0022 4FEADE2E 		lsr	lr, lr, #11	@ tmp217, tmp218,
  99              	@ main.c:5670: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 100 0026 A2FB0502 		umull	r0, r2, r2, r5	@ tmp374, tmp251, tmp252, tmp250
 101              	@ main.c:5667: 	tmbuf->tm_sec = dayclock % 60;
 102 002a 4E4E     		ldr	r6, .L35+16	@ tmp198,
 103              	@ main.c:5668: 	tmbuf->tm_min = (dayclock % 3600) / 60;
 104 002c 04FB1E10 		mls	r0, r4, lr, r1	@ tmp222, tmp221, tmp217, dayclock
 105              	@ main.c:5667: 	tmbuf->tm_sec = dayclock % 60;
 106 0030 A6FB0174 		umull	r7, r4, r6, r1	@ tmp375, tmp197, tmp198, dayclock
 107              	@ main.c:5670: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 108 0034 AF1A     		subs	r7, r5, r2	@ tmp253, tmp250, tmp251
 109              	@ main.c:5668: 	tmbuf->tm_min = (dayclock % 3600) / 60;
 110 0036 A6FB0060 		umull	r6, r0, r6, r0	@ tmp376, tmp232, tmp198, tmp222
 111              	@ main.c:5670: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 112 003a 02EB5702 		add	r2, r2, r7, lsr #1	@ tmp255, tmp251, tmp253,
 113 003e 9208     		lsrs	r2, r2, #2	@ tmp256, tmp255,
 114              	@ main.c:5667: 	tmbuf->tm_sec = dayclock % 60;
ARM GAS  /tmp/ccAYxbuo.s 			page 3


 115 0040 6409     		lsrs	r4, r4, #5	@ tmp199, tmp197,
 116 0042 DFF82CC1 		ldr	ip, .L35+28	@ tmp364,
 117              	@ main.c:5670: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 118 0046 C2EBC202 		rsb	r2, r2, r2, lsl #3	@ tmp259, tmp256, tmp256,
 119              	@ main.c:5667: 	tmbuf->tm_sec = dayclock % 60;
 120 004a C4EB0414 		rsb	r4, r4, r4, lsl #4	@ tmp202, tmp199, tmp199,
 121              	@ main.c:5670: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 122 004e AA1A     		subs	r2, r5, r2	@ tmp260, tmp250, tmp259
 123              	@ main.c:5668: 	tmbuf->tm_min = (dayclock % 3600) / 60;
 124 0050 4009     		lsrs	r0, r0, #5	@ tmp234, tmp232,
 125              	@ main.c:5667: 	tmbuf->tm_sec = dayclock % 60;
 126 0052 A1EB8401 		sub	r1, r1, r4, lsl #2	@ tmp204, dayclock, tmp202,
 127              	@ main.c:5670: 	tmbuf->tm_wday = (dayno + 4) % 7; // Day 0 was a thursday
 128 0056 CCF81820 		str	r2, [ip, #24]	@ tmp260, ptm.tm_wday
 129              	@ main.c:5668: 	tmbuf->tm_min = (dayclock % 3600) / 60;
 130 005a CCE90010 		strd	r1, r0, [ip]	@ tmp204, tmp234, tmp364
 131              	@ main.c:5662: 	int year = EPOCH_YR;
 132 005e 40F2B272 		movw	r2, #1970	@ year,
 133              	@ main.c:5673: 		dayno -= YEARSIZE(year);
 134 0062 40F26D18 		movw	r8, #365	@ iftmp.282_20,
 135              	@ main.c:5671: 	while (dayno >= (u32) YEARSIZE(year))
 136 0066 404D     		ldr	r5, .L35+20	@ tmp368,
 137 0068 6420     		movs	r0, #100	@ tmp369,
 138 006a 4FF4C877 		mov	r7, #400	@ tmp371,
 139 006e 10E0     		b	.L2	@
 140              	.L31:
 141 0070 A5FB0241 		umull	r4, r1, r5, r2	@ tmp377, tmp285, tmp368, year
 142 0074 4C09     		lsrs	r4, r1, #5	@ _24, tmp285,
 143 0076 00FB1424 		mls	r4, r0, r4, r2	@ _24, tmp369, _24, year
 144 007a 9CB9     		cbnz	r4, .L5	@ _24,
 145 007c C909     		lsrs	r1, r1, #7	@ tmp365, tmp285,
 146 007e 07FB1121 		mls	r1, r7, r1, r2	@ _125, tmp371, tmp365, year
 147 0082 D9B9     		cbnz	r1, .L29	@ _125,
 148 0084 B3F5B77F 		cmp	r3, #366	@ dayno,
 149 0088 61D3     		bcc	.L30	@,
 150              	.L23:
 151              	@ main.c:5673: 		dayno -= YEARSIZE(year);
 152 008a 4FF4B771 		mov	r1, #366	@ iftmp.282_20,
 153              	.L3:
 154 008e 5B1A     		subs	r3, r3, r1	@ dayno, dayno, iftmp.282_20
 155              	@ main.c:5674: 		year++;
 156 0090 0132     		adds	r2, r2, #1	@ year, year,
 157              	.L2:
 158              	@ main.c:5671: 	while (dayno >= (u32) YEARSIZE(year))
 159 0092 12F00306 		ands	r6, r2, #3	@ _15, year,
 160 0096 EBD0     		beq	.L31	@,
 161 0098 B3F5B67F 		cmp	r3, #364	@ dayno,
 162 009c 13D9     		bls	.L32	@,
 163              	@ main.c:5673: 		dayno -= YEARSIZE(year);
 164 009e 40F26D11 		movw	r1, #365	@ iftmp.282_20,
 165 00a2 F4E7     		b	.L3	@
 166              	.L5:
 167              	@ main.c:5671: 	while (dayno >= (u32) YEARSIZE(year))
 168 00a4 B3F5B77F 		cmp	r3, #366	@ dayno,
 169 00a8 EFD2     		bcs	.L23	@,
 170              	.L17:
 171 00aa 4FF4C870 		mov	r0, #400	@ tmp355,
ARM GAS  /tmp/ccAYxbuo.s 			page 4


 172 00ae 2E49     		ldr	r1, .L35+20	@ tmp353,
 173 00b0 A1FB0251 		umull	r5, r1, r1, r2	@ tmp379, tmp352, tmp353, year
 174 00b4 C909     		lsrs	r1, r1, #7	@ _125, tmp352,
 175 00b6 00FB1121 		mls	r1, r0, r1, r2	@ _125, tmp355, _125, year
 176 00ba 10E0     		b	.L14	@
 177              	.L29:
 178 00bc B3F5B67F 		cmp	r3, #364	@ dayno,
 179 00c0 F3D9     		bls	.L17	@,
 180              	@ main.c:5673: 		dayno -= YEARSIZE(year);
 181 00c2 4146     		mov	r1, r8	@ iftmp.282_20, iftmp.282_20
 182 00c4 E3E7     		b	.L3	@
 183              	.L32:
 184 00c6 6425     		movs	r5, #100	@ tmp335,
 185 00c8 4FF4C870 		mov	r0, #400	@ tmp345,
 186 00cc 2649     		ldr	r1, .L35+20	@ tmp333,
 187 00ce A1FB0241 		umull	r4, r1, r1, r2	@ tmp378, tmp332, tmp333, year
 188 00d2 4C09     		lsrs	r4, r1, #5	@ _24, tmp332,
 189 00d4 C909     		lsrs	r1, r1, #7	@ _125, tmp332,
 190 00d6 05FB1424 		mls	r4, r5, r4, r2	@ _24, tmp335, _24, year
 191 00da 00FB1121 		mls	r1, r0, r1, r2	@ _125, tmp345, _125, year
 192              	.L14:
 193              	@ main.c:5677: 	tmbuf->tm_yday = dayno;
 194 00de CCF81C30 		str	r3, [ip, #28]	@ dayno, ptm.tm_yday
 195 00e2 2248     		ldr	r0, .L35+24	@ ivtmp.410,
 196 00e4 002C     		cmp	r4, #0	@ _24,
 197 00e6 14BF     		ite	ne	@
 198 00e8 4FF03008 		movne	r8, #48	@, tmp315,
 199 00ec 4FF00008 		moveq	r8, #0	@, tmp315,
 200 00f0 0029     		cmp	r1, #0	@ _125,
 201 00f2 0CBF     		ite	eq	@
 202 00f4 4FF03009 		moveq	r9, #48	@, tmp321,
 203 00f8 4FF00009 		movne	r9, #0	@, tmp321,
 204              	@ main.c:5681: 		dayno -= _ytab[LEAPYEAR(year)][tmbuf->tm_mon];
 205 00fc 0025     		movs	r5, #0	@ ivtmp.408,
 206              	@ main.c:5679: 	while (dayno >= (u32) _ytab[LEAPYEAR(year)][tmbuf->tm_mon])
 207 00fe 5EB9     		cbnz	r6, .L10	@ _15,
 208              	.L34:
 209 0100 D4B9     		cbnz	r4, .L11	@ _24,
 210 0102 F9B9     		cbnz	r1, .L33	@ _125,
 211 0104 076B     		ldr	r7, [r0, #48]	@ MEM[base: _42, offset: 48B], MEM[base: _42, offset: 48B]
 212 0106 BB42     		cmp	r3, r7	@ dayno, MEM[base: _42, offset: 48B]
 213 0108 09D3     		bcc	.L16	@,
 214              	.L15:
 215 010a 50F80970 		ldr	r7, [r0, r9]	@ _73, MEM[base: _120, index: _18, offset: 0B]
 216              	.L9:
 217              	@ main.c:5681: 		dayno -= _ytab[LEAPYEAR(year)][tmbuf->tm_mon];
 218 010e DB1B     		subs	r3, r3, r7	@ dayno, dayno, _73
 219 0110 0135     		adds	r5, r5, #1	@ ivtmp.408, ivtmp.408,
 220 0112 0430     		adds	r0, r0, #4	@ ivtmp.410, ivtmp.410,
 221              	@ main.c:5679: 	while (dayno >= (u32) _ytab[LEAPYEAR(year)][tmbuf->tm_mon])
 222 0114 002E     		cmp	r6, #0	@ _15
 223 0116 F3D0     		beq	.L34	@
 224              	.L10:
 225 0118 0768     		ldr	r7, [r0]	@ _73, MEM[base: _121, offset: 0B]
 226 011a BB42     		cmp	r3, r7	@ dayno, _73
 227 011c F7D2     		bcs	.L9	@,
 228              	.L16:
ARM GAS  /tmp/ccAYxbuo.s 			page 5


 229              	@ main.c:5685: 	tmbuf->tm_isdst = 1;
 230 011e 0121     		movs	r1, #1	@ tmp325,
 231              	@ main.c:5684: 	tmbuf->tm_mday = dayno + 1;
 232 0120 0B44     		add	r3, r3, r1	@ tmp323,
 233              	@ main.c:5686: 	tmbuf->tm_hour += TIMEZONE - tmbuf->tm_isdst;
 234 0122 0EEB0100 		add	r0, lr, r1	@ tmp327, tmp217,
 235              	@ main.c:5688: 	tmbuf->tm_mon  += 1;
 236 0126 0D44     		add	r5, r5, r1	@ tmp330,
 237              	@ main.c:5686: 	tmbuf->tm_hour += TIMEZONE - tmbuf->tm_isdst;
 238 0128 CCE90203 		strd	r0, r3, [ip, #8]	@ tmp327, tmp323, tmp364,
 239              	@ main.c:5687: 	tmbuf->tm_year += YEAR0;
 240 012c CCE90452 		strd	r5, r2, [ip, #16]	@ tmp330, year, tmp364,
 241              	@ main.c:5685: 	tmbuf->tm_isdst = 1;
 242 0130 CCF82010 		str	r1, [ip, #32]	@ tmp325, ptm.tm_isdst
 243              	@ main.c:5690: }
 244 0134 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}	@
 245              	.L11:
 246              	@ main.c:5679: 	while (dayno >= (u32) _ytab[LEAPYEAR(year)][tmbuf->tm_mon])
 247 0138 50F80870 		ldr	r7, [r0, r8]	@ MEM[base: _88, index: _74, offset: 0B], MEM[base: _88, index: _74, offset: 0B]
 248 013c BB42     		cmp	r3, r7	@ dayno, MEM[base: _88, index: _74, offset: 0B]
 249 013e EED3     		bcc	.L16	@,
 250 0140 076B     		ldr	r7, [r0, #48]	@ _73, MEM[base: _88, offset: 48B]
 251 0142 E4E7     		b	.L9	@
 252              	.L33:
 253 0144 50F80870 		ldr	r7, [r0, r8]	@ MEM[base: _32, index: _74, offset: 0B], MEM[base: _32, index: _74, offset: 0B]
 254 0148 BB42     		cmp	r3, r7	@ dayno, MEM[base: _32, index: _74, offset: 0B]
 255 014a DED2     		bcs	.L15	@,
 256 014c E7E7     		b	.L16	@
 257              	.L30:
 258              	@ main.c:5671: 	while (dayno >= (u32) YEARSIZE(year))
 259 014e 0C46     		mov	r4, r1	@ _24, _125
 260 0150 C5E7     		b	.L14	@
 261              	.L36:
 262 0152 00BF     		.align	2
 263              	.L35:
 264 0154 07452EC2 		.word	-1037155065
 265 0158 80510100 		.word	86400
 266 015c C5B3A291 		.word	-1851608123
 267 0160 25499224 		.word	613566757
 268 0164 89888888 		.word	-2004318071
 269 0168 1F85EB51 		.word	1374389535
 270 016c 00000000 		.word	.LANCHOR0
 271 0170 00000000 		.word	ptm
 272              		.size	gmtime_r.isra.0.constprop.2, .-gmtime_r.isra.0.constprop.2
 273              		.section	.text.head,"ax",%progbits
 274              		.align	1
 275              		.p2align 2,,3
 276              		.global	head
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 280              		.fpu softvfp
 281              		.type	head, %function
 282              	head:
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285 0000 08B5     		push	{r3, lr}	@
ARM GAS  /tmp/ccAYxbuo.s 			page 6


 286              	@ main.c:216: 		tr_pen_color( TGREEN );
 287 0002 0220     		movs	r0, #2	@,
 288 0004 FFF7FEFF 		bl	tr_pen_color	@
 289              	@ main.c:218: 		UaPutK("\f\r\n Mini STM32F103C8T6 RAM   "); // Boot from RAM 	 = B0+ B1+
 290 0008 0648     		ldr	r0, .L39	@,
 291 000a FFF7FEFF 		bl	UaPutK	@
 292              	@ main.c:222: 		uint2uart(F_CPU/1e6);	UaPutK(" MHz");
 293 000e 4820     		movs	r0, #72	@,
 294 0010 FFF7FEFF 		bl	uint2uart	@
 295 0014 0448     		ldr	r0, .L39+4	@,
 296 0016 FFF7FEFF 		bl	UaPutK	@
 297              	@ main.c:224: 	}
 298 001a BDE80840 		pop	{r3, lr}	@
 299              	@ main.c:223: 		tr_pen_color( TYELLOW );
 300 001e 0320     		movs	r0, #3	@,
 301 0020 FFF7FEBF 		b	tr_pen_color	@
 302              	.L40:
 303              		.align	2
 304              	.L39:
 305 0024 00000000 		.word	.LC10
 306 0028 20000000 		.word	.LC11
 307              		.size	head, .-head
 308              		.section	.text.liontrend,"ax",%progbits
 309              		.align	1
 310              		.p2align 2,,3
 311              		.global	liontrend
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu softvfp
 316              		.type	liontrend, %function
 317              	liontrend:
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}	@
 321              	@ main.c:246: 		v[6] = (100*(v[0]-v[1]))/(v[2]-v[3]); //a=(y2-y1)/(x2-x1)
 322 0004 6423     		movs	r3, #100	@ tmp194,
 323 0006 B0F90060 		ldrsh	r6, [r0]	@ _1, *v_82(D)
 324 000a B0F902E0 		ldrsh	lr, [r0, #2]	@ _3, MEM[(s16 *)v_82(D) + 2B]
 325 000e B0F90440 		ldrsh	r4, [r0, #4]	@ _8, MEM[(s16 *)v_82(D) + 4B]
 326 0012 A6EB0E0C 		sub	ip, r6, lr	@ tmp192, _1, _3
 327 0016 03FB0CFC 		mul	ip, r3, ip	@ tmp193, tmp194, tmp192
 328 001a B0F90620 		ldrsh	r2, [r0, #6]	@ _10, MEM[(s16 *)v_82(D) + 6B]
 329              	@ main.c:244: void liontrend(s16 v[],s16 c[]){
 330 001e 0546     		mov	r5, r0	@ v, v
 331              	@ main.c:246: 		v[6] = (100*(v[0]-v[1]))/(v[2]-v[3]); //a=(y2-y1)/(x2-x1)
 332 0020 A01A     		subs	r0, r4, r2	@ tmp195, _8, _10
 333 0022 9CFBF0FC 		sdiv	ip, ip, r0	@ tmp197, tmp193, tmp195
 334 0026 0FFA8CFC 		sxth	ip, ip	@ _13, tmp197
 335              	@ main.c:247: 		v[5] = v[0]-v[6]*v[2]/100;  //b=y-ax
 336 002a 0CFB04F4 		mul	r4, ip, r4	@ tmp199, _13, _8
 337 002e 3D4F     		ldr	r7, .L43	@ tmp202,
 338              	@ main.c:248: 		v[4] = v[1]-v[6]*v[3]/100;  //b=y-ax;
 339 0030 0CFB02F2 		mul	r2, ip, r2	@ tmp209, _13, _10
 340              	@ main.c:247: 		v[5] = v[0]-v[6]*v[2]/100;  //b=y-ax
 341 0034 87FB0408 		smull	r0, r8, r7, r4	@ tmp275, tmp201, tmp202, tmp199
 342 0038 E017     		asrs	r0, r4, #31	@ tmp204, tmp199,
ARM GAS  /tmp/ccAYxbuo.s 			page 7


 343 003a A0EB6810 		sub	r0, r0, r8, asr #5	@ tmp200, tmp204, tmp201,
 344 003e 3044     		add	r0, r0, r6	@ tmp207, _1
 345 0040 00B2     		sxth	r0, r0	@ _20, tmp207
 346              	@ main.c:249: 		v[7] = 100*(339-v[5])/v[6]; //x=(y-b)/a
 347 0042 C0F5A974 		rsb	r4, r0, #338	@ tmp220, _20,
 348 0046 0134     		adds	r4, r4, #1	@ tmp220, tmp220,
 349 0048 03FB04F4 		mul	r4, r3, r4	@ tmp221, tmp194, tmp220
 350 004c 94FBFCF4 		sdiv	r4, r4, ip	@ tmp224, tmp221, _13
 351              	@ main.c:244: void liontrend(s16 v[],s16 c[]){
 352 0050 0E46     		mov	r6, r1	@ c, c
 353              	@ main.c:248: 		v[4] = v[1]-v[6]*v[3]/100;  //b=y-ax;
 354 0052 87FB0281 		smull	r8, r1, r7, r2	@ tmp276, tmp211, tmp202, tmp209
 355 0056 D217     		asrs	r2, r2, #31	@ tmp214, tmp209,
 356 0058 A2EB6112 		sub	r2, r2, r1, asr #5	@ tmp210, tmp214, tmp211,
 357 005c 7244     		add	r2, r2, lr	@ tmp217, _3
 358 005e 2A81     		strh	r2, [r5, #8]	@ movhi	@ tmp217, MEM[(s16 *)v_82(D) + 8B]
 359              	@ main.c:247: 		v[5] = v[0]-v[6]*v[2]/100;  //b=y-ax
 360 0060 6881     		strh	r0, [r5, #10]	@ movhi	@ _20, MEM[(s16 *)v_82(D) + 10B]
 361              	@ main.c:249: 		v[7] = 100*(339-v[5])/v[6]; //x=(y-b)/a
 362 0062 EC81     		strh	r4, [r5, #14]	@ movhi	@ tmp224, MEM[(s16 *)v_82(D) + 14B]
 363              	@ main.c:246: 		v[6] = (100*(v[0]-v[1]))/(v[2]-v[3]); //a=(y2-y1)/(x2-x1)
 364 0064 A5F80CC0 		strh	ip, [r5, #12]	@ movhi	@ _13, MEM[(s16 *)v_82(D) + 12B]
 365              	@ main.c:251: 		c[6] = (100*(c[0]-c[1]))/(c[2]-c[3]);
 366 0068 B6F900E0 		ldrsh	lr, [r6]	@ _32, *c_87(D)
 367 006c B6F902C0 		ldrsh	ip, [r6, #2]	@ _34, MEM[(s16 *)c_87(D) + 2B]
 368 0070 B6F90440 		ldrsh	r4, [r6, #4]	@ _39, MEM[(s16 *)c_87(D) + 4B]
 369 0074 AEEB0C02 		sub	r2, lr, ip	@ tmp226, _32, _34
 370 0078 03FB02F3 		mul	r3, r3, r2	@ tmp227, tmp194, tmp226
 371 007c B6F90610 		ldrsh	r1, [r6, #6]	@ _41, MEM[(s16 *)c_87(D) + 6B]
 372              	@ main.c:256: 		UaPutS("v="); sint2uart(v[6]); sint2uart(v[5]); sint2uart(v[4]); sint2uart(v[7]); U
 373 0080 2948     		ldr	r0, .L43+4	@,
 374              	@ main.c:251: 		c[6] = (100*(c[0]-c[1]))/(c[2]-c[3]);
 375 0082 621A     		subs	r2, r4, r1	@ tmp229, _39, _41
 376 0084 93FBF2F3 		sdiv	r3, r3, r2	@ tmp231, tmp227, tmp229
 377 0088 1BB2     		sxth	r3, r3	@ _44, tmp231
 378              	@ main.c:252: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 379 008a 03FB04F4 		mul	r4, r3, r4	@ tmp233, _44, _39
 380              	@ main.c:253: 		c[4] = c[1]-c[6]*c[3]/100;//y-ax
 381 008e 03FB01F1 		mul	r1, r3, r1	@ tmp243, _44, _41
 382              	@ main.c:252: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 383 0092 87FB0429 		smull	r2, r9, r7, r4	@ tmp277, tmp235, tmp202, tmp233
 384              	@ main.c:253: 		c[4] = c[1]-c[6]*c[3]/100;//y-ax
 385 0096 87FB0128 		smull	r2, r8, r7, r1	@ tmp278, tmp245, tmp202, tmp243
 386              	@ main.c:252: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 387 009a E217     		asrs	r2, r4, #31	@ tmp238, tmp233,
 388 009c A2EB6912 		sub	r2, r2, r9, asr #5	@ tmp234, tmp238, tmp235,
 389              	@ main.c:253: 		c[4] = c[1]-c[6]*c[3]/100;//y-ax
 390 00a0 C917     		asrs	r1, r1, #31	@ tmp248, tmp243,
 391              	@ main.c:252: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 392 00a2 7244     		add	r2, r2, lr	@ tmp241, _32
 393              	@ main.c:253: 		c[4] = c[1]-c[6]*c[3]/100;//y-ax
 394 00a4 A1EB6811 		sub	r1, r1, r8, asr #5	@ tmp244, tmp248, tmp245,
 395 00a8 6144     		add	r1, r1, ip	@ tmp251, _34
 396              	@ main.c:252: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 397 00aa 92B2     		uxth	r2, r2	@ _50, tmp241
 398              	@ main.c:251: 		c[6] = (100*(c[0]-c[1]))/(c[2]-c[3]);
 399 00ac B381     		strh	r3, [r6, #12]	@ movhi	@ _44, MEM[(s16 *)c_87(D) + 12B]
ARM GAS  /tmp/ccAYxbuo.s 			page 8


 400              	@ main.c:252: 		c[5] = c[0]-c[6]*c[2]/100;//y-ax
 401 00ae 7281     		strh	r2, [r6, #10]	@ movhi	@ _50, MEM[(s16 *)c_87(D) + 10B]
 402              	@ main.c:253: 		c[4] = c[1]-c[6]*c[3]/100;//y-ax
 403 00b0 3181     		strh	r1, [r6, #8]	@ movhi	@ tmp251, MEM[(s16 *)c_87(D) + 8B]
 404              	@ main.c:254: 		c[7] = c[5]+c[6]*v[7]/100;// szukana pojemnosc
 405 00b2 B5F90E10 		ldrsh	r1, [r5, #14]	@ MEM[(s16 *)v_82(D) + 14B], MEM[(s16 *)v_82(D) + 14B]
 406              	@ main.c:256: 		UaPutS("v="); sint2uart(v[6]); sint2uart(v[5]); sint2uart(v[4]); sint2uart(v[7]); U
 407 00b6 1D4C     		ldr	r4, .L43+8	@ tmp268,
 408              	@ main.c:254: 		c[7] = c[5]+c[6]*v[7]/100;// szukana pojemnosc
 409 00b8 03FB01F3 		mul	r3, r3, r1	@ tmp254, _44, MEM[(s16 *)v_82(D) + 14B]
 410 00bc 87FB0317 		smull	r1, r7, r7, r3	@ tmp279, tmp256, tmp202, tmp254
 411 00c0 DB17     		asrs	r3, r3, #31	@ tmp259, tmp254,
 412 00c2 C3EB6713 		rsb	r3, r3, r7, asr #5	@ tmp255, tmp259, tmp256,
 413 00c6 1A44     		add	r2, r2, r3	@ tmp261, tmp255
 414 00c8 F281     		strh	r2, [r6, #14]	@ movhi	@ tmp261, MEM[(s16 *)c_87(D) + 14B]
 415              	@ main.c:256: 		UaPutS("v="); sint2uart(v[6]); sint2uart(v[5]); sint2uart(v[4]); sint2uart(v[7]); U
 416 00ca FFF7FEFF 		bl	UaPutS	@
 417 00ce B5F90C00 		ldrsh	r0, [r5, #12]	@, MEM[(s16 *)v_82(D) + 12B]
 418 00d2 FFF7FEFF 		bl	sint2uart	@
 419 00d6 B5F90A00 		ldrsh	r0, [r5, #10]	@, MEM[(s16 *)v_82(D) + 10B]
 420 00da FFF7FEFF 		bl	sint2uart	@
 421 00de B5F90800 		ldrsh	r0, [r5, #8]	@, MEM[(s16 *)v_82(D) + 8B]
 422 00e2 FFF7FEFF 		bl	sint2uart	@
 423 00e6 B5F90E00 		ldrsh	r0, [r5, #14]	@, MEM[(s16 *)v_82(D) + 14B]
 424 00ea FFF7FEFF 		bl	sint2uart	@
 425 00ee 2046     		mov	r0, r4	@, tmp268
 426 00f0 FFF7FEFF 		bl	UaPutS	@
 427              	@ main.c:257: 		UaPutS("c="); sint2uart(c[6]); sint2uart(c[5]); sint2uart(c[4]); sint2uart(c[7]); U
 428 00f4 0E48     		ldr	r0, .L43+12	@,
 429 00f6 FFF7FEFF 		bl	UaPutS	@
 430 00fa B6F90C00 		ldrsh	r0, [r6, #12]	@, MEM[(s16 *)c_87(D) + 12B]
 431 00fe FFF7FEFF 		bl	sint2uart	@
 432 0102 B6F90A00 		ldrsh	r0, [r6, #10]	@, MEM[(s16 *)c_87(D) + 10B]
 433 0106 FFF7FEFF 		bl	sint2uart	@
 434 010a B6F90800 		ldrsh	r0, [r6, #8]	@, MEM[(s16 *)c_87(D) + 8B]
 435 010e FFF7FEFF 		bl	sint2uart	@
 436 0112 B6F90E00 		ldrsh	r0, [r6, #14]	@, MEM[(s16 *)c_87(D) + 14B]
 437 0116 FFF7FEFF 		bl	sint2uart	@
 438 011a 2046     		mov	r0, r4	@, tmp268
 439              	@ main.c:258: 	}
 440 011c BDE8F843 		pop	{r3, r4, r5, r6, r7, r8, r9, lr}	@
 441              	@ main.c:257: 		UaPutS("c="); sint2uart(c[6]); sint2uart(c[5]); sint2uart(c[4]); sint2uart(c[7]); U
 442 0120 FFF7FEBF 		b	UaPutS	@
 443              	.L44:
 444              		.align	2
 445              	.L43:
 446 0124 1F85EB51 		.word	1374389535
 447 0128 00000000 		.word	.LC12
 448 012c 04000000 		.word	.LC13
 449 0130 08000000 		.word	.LC14
 450              		.size	liontrend, .-liontrend
 451              		.section	.text.oblicz,"ax",%progbits
 452              		.align	1
 453              		.p2align 2,,3
 454              		.global	oblicz
 455              		.syntax unified
 456              		.thumb
ARM GAS  /tmp/ccAYxbuo.s 			page 9


 457              		.thumb_func
 458              		.fpu softvfp
 459              		.type	oblicz, %function
 460              	oblicz:
 461              		@ Volatile: function does not return.
 462              		@ args = 0, pretend = 0, frame = 80
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464              	@ main.c:5424: 	USART1->BRR = (F_CPU+UART1_SPEED/2)/UART1_SPEED;
 465 0000 40F27126 		movw	r6, #625	@ tmp141,
 466              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 467 0004 2025     		movs	r5, #32	@ tmp143,
 468              	@ main.c:259: void oblicz(void){
 469 0006 80B5     		push	{r7, lr}	@
 470 0008 94B0     		sub	sp, sp, #80	@,,
 471              	@ main.c:261: 		BkpRegInit();
 472 000a FFF7FEFF 		bl	BkpRegInit	@
 473              	@ main.c:267: 		PB12_o = 0;		// rozladowanie
 474 000e 0022     		movs	r2, #0	@ tmp150,
 475              	@ main.c:269: 		PB14_o = 1;   // dzwonek
 476 0010 0121     		movs	r1, #1	@ tmp154,
 477              	@ main.c:5421: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 478 0012 324F     		ldr	r7, .L48	@ tmp126,
 479              	@ main.c:5422: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 480 0014 3248     		ldr	r0, .L48+4	@ tmp128,
 481              	@ main.c:5421: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 482 0016 BB69     		ldr	r3, [r7, #24]	@ _28, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 483              	@ main.c:5423: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 484 0018 324C     		ldr	r4, .L48+8	@ tmp131,
 485              	@ main.c:5421: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 486 001a 43F48043 		orr	r3, r3, #16384	@ _29, _28,
 487 001e BB61     		str	r3, [r7, #24]	@ _29, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 488              	@ main.c:5422: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 489 0020 4368     		ldr	r3, [r0, #4]	@ _30, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 490              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 491 0022 314F     		ldr	r7, .L48+12	@ tmp142,
 492              	@ main.c:5422: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 493 0024 23F47F63 		bic	r3, r3, #4080	@ tmp129, _30,
 494 0028 43F49263 		orr	r3, r3, #1168	@ _32, tmp129,
 495 002c 4360     		str	r3, [r0, #4]	@ _32, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 496              	@ main.c:5423: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 497 002e A389     		ldrh	r3, [r4, #12]	@, MEM[(struct USART_TypeDef *)1073821696B].CR1
 498              	@ main.c:267: 		PB12_o = 0;		// rozladowanie
 499 0030 DFF8D8C0 		ldr	ip, .L48+48	@ tmp149,
 500              	@ main.c:5423: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 501 0034 43F40053 		orr	r3, r3, #8192	@ _34, MEM[(struct USART_TypeDef *)1073821696B].CR1,
 502 0038 43F02C03 		orr	r3, r3, #44	@ _34, _34,
 503 003c A381     		strh	r3, [r4, #12]	@ movhi	@ _34, MEM[(struct USART_TypeDef *)1073821696B].CR1
 504              	@ main.c:5424: 	USART1->BRR = (F_CPU+UART1_SPEED/2)/UART1_SPEED;
 505 003e 2681     		strh	r6, [r4, #8]	@ movhi	@ tmp141, MEM[(struct USART_TypeDef *)1073821696B].BRR
 506              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 507 0040 7D60     		str	r5, [r7, #4]	@ tmp143, MEM[(struct NVIC_Type *)3758153984B].ISER
 508              	@ main.c:265: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 509 0042 D0F80434 		ldr	r3, [r0, #1028]	@ _1, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 510              	@ main.c:268: 		PB13_o = 0;   // ladowanie
 511 0046 294F     		ldr	r7, .L48+16	@ tmp151,
 512              	@ main.c:265: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 513 0048 23F07F63 		bic	r3, r3, #267386880	@ tmp145, _1,
ARM GAS  /tmp/ccAYxbuo.s 			page 10


 514 004c 23F47023 		bic	r3, r3, #983040	@ tmp145, tmp145,
 515 0050 43F0AA63 		orr	r3, r3, #89128960	@ _3, tmp145,
 516              	@ main.c:269: 		PB14_o = 1;   // dzwonek
 517 0054 264E     		ldr	r6, .L48+20	@ tmp153,
 518              	@ main.c:265: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 519 0056 43F4A023 		orr	r3, r3, #327680	@ _3, _3,
 520 005a C0F80434 		str	r3, [r0, #1028]	@ _3, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 521              	@ main.c:271: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 522 005e 254D     		ldr	r5, .L48+24	@ tmp155,
 523 0060 254B     		ldr	r3, .L48+28	@ tmp156,
 524              	@ main.c:267: 		PB12_o = 0;		// rozladowanie
 525 0062 CCF80020 		str	r2, [ip]	@ tmp150, MEM[(volatile long unsigned int *)1109492144B]
 526              	@ main.c:271: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 527 0066 0320     		movs	r0, #3	@,
 528              	@ main.c:268: 		PB13_o = 0;   // ladowanie
 529 0068 3A60     		str	r2, [r7]	@ tmp150, MEM[(volatile long unsigned int *)1109492148B]
 530              	@ main.c:269: 		PB14_o = 1;   // dzwonek
 531 006a 3160     		str	r1, [r6]	@ tmp154, MEM[(volatile long unsigned int *)1109492152B]
 532              	@ main.c:271: 		PutChar = UART1_putc;	tr_pen_color ( TYELLOW );
 533 006c 2B60     		str	r3, [r5]	@ tmp156, PutChar
 534 006e FFF7FEFF 		bl	tr_pen_color	@
 535              	@ main.c:272: 		UaPutS("\f UART1 "); UaPutS (uint2str( (F_CPU/1)/(1*USART1->BRR-1),buf));	
 536 0072 2248     		ldr	r0, .L48+32	@,
 537 0074 FFF7FEFF 		bl	UaPutS	@
 538 0078 2389     		ldrh	r3, [r4, #8]	@, MEM[(struct USART_TypeDef *)1073821696B].BRR
 539 007a 2148     		ldr	r0, .L48+36	@ tmp165,
 540 007c 013B     		subs	r3, r3, #1	@ tmp162, MEM[(struct USART_TypeDef *)1073821696B].BRR,
 541 007e B0FBF3F0 		udiv	r0, r0, r3	@, tmp165, tmp162
 542 0082 01A9     		add	r1, sp, #4	@,,
 543 0084 FFF7FEFF 		bl	uint2str	@
 544              	@ main.c:276: 		s16 v[8]={365,356,0, 30,0,0,0,0};
 545 0088 1E4C     		ldr	r4, .L48+40	@ tmp167,
 546              	@ main.c:272: 		UaPutS("\f UART1 "); UaPutS (uint2str( (F_CPU/1)/(1*USART1->BRR-1),buf));	
 547 008a FFF7FEFF 		bl	UaPutS	@
 548              	@ main.c:273: 		UaPutS (" b/s \r\n");
 549 008e 1E48     		ldr	r0, .L48+44	@,
 550 0090 FFF7FEFF 		bl	UaPutS	@
 551              	@ main.c:276: 		s16 v[8]={365,356,0, 30,0,0,0,0};
 552 0094 94E80F00 		ldm	r4, {r0, r1, r2, r3}	@ tmp167,,,,
 553              	@ main.c:277: 		s16 c[8]={2000 ,6400 ,0, 30,0,0,0,0};
 554 0098 04F11005 		add	r5, r4, #16	@ tmp172, tmp167,
 555 009c 0DF1200C 		add	ip, sp, #32	@ tmp171,,
 556              	@ main.c:279: 		s16 a[8]={342,336,0,2,0,0,0,0};
 557 00a0 04F12006 		add	r6, r4, #32	@ tmp175, tmp167,
 558              	@ main.c:276: 		s16 v[8]={365,356,0, 30,0,0,0,0};
 559 00a4 04AF     		add	r7, sp, #16	@ tmp168,,
 560 00a6 87E80F00 		stm	r7, {r0, r1, r2, r3}	@ tmp168,,,,
 561              	@ main.c:277: 		s16 c[8]={2000 ,6400 ,0, 30,0,0,0,0};
 562 00aa 95E80F00 		ldm	r5, {r0, r1, r2, r3}	@ tmp172,,,,
 563              	@ main.c:280: 		s16 b[8]={114,263,0,2,0,0,0,0};
 564 00ae 3034     		adds	r4, r4, #48	@ tmp178, tmp167,
 565              	@ main.c:279: 		s16 a[8]={342,336,0,2,0,0,0,0};
 566 00b0 0CAD     		add	r5, sp, #48	@ tmp174,,
 567              	@ main.c:277: 		s16 c[8]={2000 ,6400 ,0, 30,0,0,0,0};
 568 00b2 8CE80F00 		stm	ip, {r0, r1, r2, r3}	@ tmp171,,,,
 569              	@ main.c:279: 		s16 a[8]={342,336,0,2,0,0,0,0};
 570 00b6 96E80F00 		ldm	r6, {r0, r1, r2, r3}	@ tmp175,,,,
ARM GAS  /tmp/ccAYxbuo.s 			page 11


 571              	@ main.c:280: 		s16 b[8]={114,263,0,2,0,0,0,0};
 572 00ba 10AE     		add	r6, sp, #64	@ tmp177,,
 573              	@ main.c:279: 		s16 a[8]={342,336,0,2,0,0,0,0};
 574 00bc 85E80F00 		stm	r5, {r0, r1, r2, r3}	@ tmp174,,,,
 575              	@ main.c:280: 		s16 b[8]={114,263,0,2,0,0,0,0};
 576 00c0 94E80F00 		ldm	r4, {r0, r1, r2, r3}	@ tmp178,,,,
 577 00c4 86E80F00 		stm	r6, {r0, r1, r2, r3}	@ tmp177,,,,
 578              	@ main.c:282: 		liontrend(v,c);
 579 00c8 6146     		mov	r1, ip	@, tmp171
 580 00ca 3846     		mov	r0, r7	@, tmp168
 581 00cc FFF7FEFF 		bl	liontrend	@
 582              	@ main.c:283: 		liontrend(a,b);
 583 00d0 3146     		mov	r1, r6	@, tmp177
 584 00d2 2846     		mov	r0, r5	@, tmp174
 585 00d4 FFF7FEFF 		bl	liontrend	@
 586              	.L46:
 587 00d8 FEE7     		b	.L46	@
 588              	.L49:
 589 00da 00BF     		.align	2
 590              	.L48:
 591 00dc 00100240 		.word	1073876992
 592 00e0 00080140 		.word	1073809408
 593 00e4 00380140 		.word	1073821696
 594 00e8 00E100E0 		.word	-536813312
 595 00ec B4812142 		.word	1109492148
 596 00f0 B8812142 		.word	1109492152
 597 00f4 00000000 		.word	PutChar
 598 00f8 00000000 		.word	UART1_putc
 599 00fc 00000000 		.word	.LC15
 600 0100 00A24A04 		.word	72000000
 601 0104 00000000 		.word	.LANCHOR1
 602 0108 0C000000 		.word	.LC16
 603 010c B0812142 		.word	1109492144
 604              		.size	oblicz, .-oblicz
 605              		.section	.text.lion_updown,"ax",%progbits
 606              		.align	1
 607              		.p2align 2,,3
 608              		.global	lion_updown
 609              		.syntax unified
 610              		.thumb
 611              		.thumb_func
 612              		.fpu softvfp
 613              		.type	lion_updown, %function
 614              	lion_updown:
 615              		@ args = 0, pretend = 0, frame = 104
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 618 0004 9BB0     		sub	sp, sp, #108	@,,
 619              	@ main.c:297: 		BkpRegInit();
 620 0006 FFF7FEFF 		bl	BkpRegInit	@
 621              	@ main.c:5423: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 622 000a 42F22C02 		movw	r2, #8236	@ tmp348,
 623              	@ main.c:5424: 	USART1->BRR = (F_CPU+UART1_SPEED/2)/UART1_SPEED;
 624 000e 40F27126 		movw	r6, #625	@ tmp354,
 625              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 626 0012 2025     		movs	r5, #32	@ tmp356,
 627 0014 4FF0400C 		mov	ip, #64	@ tmp374,
ARM GAS  /tmp/ccAYxbuo.s 			page 12


 628              	@ main.c:5431: 	USART2->BRR = ((F_CPU+UART2_SPEED/2)/UART2_SPEED)/2;
 629 0018 4FF49C77 		mov	r7, #312	@ tmp372,
 630              	@ main.c:5421: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 631 001c B54B     		ldr	r3, .L110	@ tmp339,
 632              	@ main.c:5422: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 633 001e DFF850E3 		ldr	lr, .L110+124	@ tmp341,
 634              	@ main.c:5421: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 635 0022 9969     		ldr	r1, [r3, #24]	@ _440, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 636              	@ main.c:5423: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 637 0024 B44C     		ldr	r4, .L110+4	@ tmp344,
 638              	@ main.c:5421: 	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 639 0026 41F48041 		orr	r1, r1, #16384	@ _441, _440,
 640 002a 9961     		str	r1, [r3, #24]	@ _441, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 641              	@ main.c:5422: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 642 002c DEF80410 		ldr	r1, [lr, #4]	@ _442, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 643              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 644 0030 B248     		ldr	r0, .L110+8	@ tmp355,
 645              	@ main.c:5422: 	GPIOA->CRH = (GPIOA->CRH & 0xfffff00f) | 0x00000490; // PA9=TX, PA10=RX
 646 0032 21F47F61 		bic	r1, r1, #4080	@ tmp342, _442,
 647 0036 41F49261 		orr	r1, r1, #1168	@ _444, tmp342,
 648 003a CEF80410 		str	r1, [lr, #4]	@ _444, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 649              	@ main.c:5423: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 650 003e A189     		ldrh	r1, [r4, #12]	@, MEM[(struct USART_TypeDef *)1073821696B].CR1
 651              	@ main.c:5430: 	USART2->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 652 0040 DFF83083 		ldr	r8, .L110+128	@ tmp362,
 653              	@ main.c:5423: 	USART1->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 654 0044 1143     		orrs	r1, r1, r2	@, _446, MEM[(struct USART_TypeDef *)1073821696B].CR1, tmp348
 655 0046 A181     		strh	r1, [r4, #12]	@ movhi	@ _446, MEM[(struct USART_TypeDef *)1073821696B].CR1
 656              	@ main.c:5424: 	USART1->BRR = (F_CPU+UART1_SPEED/2)/UART1_SPEED;
 657 0048 2681     		strh	r6, [r4, #8]	@ movhi	@ tmp354, MEM[(struct USART_TypeDef *)1073821696B].BRR
 658              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 659 004a 4560     		str	r5, [r0, #4]	@ tmp356, MEM[(struct NVIC_Type *)3758153984B].ISER
 660              	@ main.c:5428: 	RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 661 004c D969     		ldr	r1, [r3, #28]	@ _433, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 662              	@ main.c:5436: 	GPIOB->CRH  = (GPIOB->CRH & 0xffff00ff)| 0x00004900; //PB10=TX, PB11=RX zerowanie
 663 004e AC4E     		ldr	r6, .L110+12	@ tmp377,
 664              	@ main.c:5428: 	RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 665 0050 41F40031 		orr	r1, r1, #131072	@ _434, _433,
 666 0054 D961     		str	r1, [r3, #28]	@ _434, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 667              	@ main.c:5429: 	GPIOA->CRL = (GPIOA->CRL & 0xffff00ff) | 0x00004900; // PA2=TX, PA3=RX 
 668 0056 DEF80010 		ldr	r1, [lr]	@ _435, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 669              	@ main.c:5437: 	USART3->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 670 005a AA4D     		ldr	r5, .L110+16	@ tmp380,
 671              	@ main.c:5429: 	GPIOA->CRL = (GPIOA->CRL & 0xffff00ff) | 0x00004900; // PA2=TX, PA3=RX 
 672 005c 21F47F41 		bic	r1, r1, #65280	@ tmp360, _435,
 673 0060 41F49241 		orr	r1, r1, #18688	@ _437, tmp360,
 674 0064 CEF80010 		str	r1, [lr]	@ _437, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 675              	@ main.c:5430: 	USART2->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 676 0068 B8F80C10 		ldrh	r1, [r8, #12]	@, MEM[(struct USART_TypeDef *)1073759232B].CR1
 677              	@ main.c:376: 		cah = (BKP->DR2<<16) + BKP->DR1;
 678 006c DFF80893 		ldr	r9, .L110+132	@ tmp899,
 679              	@ main.c:5430: 	USART2->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 680 0070 1143     		orrs	r1, r1, r2	@, _439, MEM[(struct USART_TypeDef *)1073759232B].CR1, tmp348
 681 0072 A8F80C10 		strh	r1, [r8, #12]	@ movhi	@ _439, MEM[(struct USART_TypeDef *)1073759232B].CR1
 682              	@ main.c:5431: 	USART2->BRR = ((F_CPU+UART2_SPEED/2)/UART2_SPEED)/2;
 683 0076 A8F80870 		strh	r7, [r8, #8]	@ movhi	@ tmp372, MEM[(struct USART_TypeDef *)1073759232B].BRR
 684              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
ARM GAS  /tmp/ccAYxbuo.s 			page 13


 685 007a C0F804C0 		str	ip, [r0, #4]	@ tmp374, MEM[(struct NVIC_Type *)3758153984B].ISER
 686              	@ main.c:5435: 	RCC->APB1ENR |= RCC_APB1ENR_USART3EN;
 687 007e D969     		ldr	r1, [r3, #28]	@ _426, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 688              	@ main.c:306: 		PutChar = UART2_putc;	tr_pen_color ( TYELLOW );
 689 0080 0320     		movs	r0, #3	@,
 690              	@ main.c:5435: 	RCC->APB1ENR |= RCC_APB1ENR_USART3EN;
 691 0082 41F48021 		orr	r1, r1, #262144	@ _427, _426,
 692 0086 D961     		str	r1, [r3, #28]	@ _427, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 693              	@ main.c:5436: 	GPIOB->CRH  = (GPIOB->CRH & 0xffff00ff)| 0x00004900; //PB10=TX, PB11=RX zerowanie
 694 0088 7368     		ldr	r3, [r6, #4]	@ _428, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 695 008a DFF8F082 		ldr	r8, .L110+136	@ tmp909,
 696 008e 23F47F43 		bic	r3, r3, #65280	@ tmp378, _428,
 697 0092 43F49243 		orr	r3, r3, #18688	@ _430, tmp378,
 698 0096 7360     		str	r3, [r6, #4]	@ _430, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 699              	@ main.c:5437: 	USART3->CR1 |= (USART_CR1_UE |USART_CR1_TE | USART_CR1_RE	|USART_CR1_RXNEIE);
 700 0098 AB89     		ldrh	r3, [r5, #12]	@, MEM[(struct USART_TypeDef *)1073760256B].CR1
 701 009a DFF8E4A2 		ldr	r10, .L110+140	@ tmp926,
 702 009e 1A43     		orrs	r2, r2, r3	@, _432, tmp348, MEM[(struct USART_TypeDef *)1073760256B].CR1
 703 00a0 AA81     		strh	r2, [r5, #12]	@ movhi	@ _432, MEM[(struct USART_TypeDef *)1073760256B].CR1
 704              	@ main.c:306: 		PutChar = UART2_putc;	tr_pen_color ( TYELLOW );
 705 00a2 994B     		ldr	r3, .L110+20	@ tmp950,
 706 00a4 994A     		ldr	r2, .L110+24	@ tmp951,
 707              	@ main.c:5438: 	USART3->BRR = ((F_CPU+UART3_SPEED/2)/UART3_SPEED)/2;
 708 00a6 2F81     		strh	r7, [r5, #8]	@ movhi	@ tmp372, MEM[(struct USART_TypeDef *)1073760256B].BRR
 709              	@ main.c:306: 		PutChar = UART2_putc;	tr_pen_color ( TYELLOW );
 710 00a8 1A60     		str	r2, [r3]	@ tmp951, PutChar
 711 00aa FFF7FEFF 		bl	tr_pen_color	@
 712              	@ main.c:307: 		UaPutS("\f UART1 "); UaPutS (uint2str( (F_CPU/1)/(1*USART1->BRR-1),buf));	
 713 00ae 9848     		ldr	r0, .L110+28	@,
 714 00b0 FFF7FEFF 		bl	UaPutS	@
 715 00b4 2389     		ldrh	r3, [r4, #8]	@, MEM[(struct USART_TypeDef *)1073821696B].BRR
 716 00b6 9748     		ldr	r0, .L110+32	@ tmp401,
 717 00b8 013B     		subs	r3, r3, #1	@ tmp398, MEM[(struct USART_TypeDef *)1073821696B].BRR,
 718 00ba B0FBF3F0 		udiv	r0, r0, r3	@, tmp401, tmp398
 719 00be 08A9     		add	r1, sp, #32	@,,
 720              	@ main.c:332: 		const u08 i2cnf[3]={0,0x1e,0x67},i2trig_bus[3]={0,0x1e,0x67};
 721 00c0 954F     		ldr	r7, .L110+36	@ tmp403,
 722              	@ main.c:307: 		UaPutS("\f UART1 "); UaPutS (uint2str( (F_CPU/1)/(1*USART1->BRR-1),buf));	
 723 00c2 FFF7FEFF 		bl	uint2str	@
 724 00c6 FFF7FEFF 		bl	UaPutS	@
 725              	@ main.c:351: 		char tstat[6][8]={" Laduj"," Rozlad"," Czekaj"," Pomiar"," LadKon"," RozKon"};
 726 00ca 07F14405 		add	r5, r7, #68	@ tmp419, tmp403,
 727              	@ main.c:308: 		UaPutS (" b/s \r\n"); 
 728 00ce 9348     		ldr	r0, .L110+40	@,
 729              	@ main.c:351: 		char tstat[6][8]={" Laduj"," Rozlad"," Czekaj"," Pomiar"," LadKon"," RozKon"};
 730 00d0 0EAC     		add	r4, sp, #56	@ tmp952,,
 731              	@ main.c:308: 		UaPutS (" b/s \r\n"); 
 732 00d2 FFF7FEFF 		bl	UaPutS	@
 733              	@ main.c:351: 		char tstat[6][8]={" Laduj"," Rozlad"," Czekaj"," Pomiar"," LadKon"," RozKon"};
 734 00d6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}	@ tmp419,,,,
 735 00d8 0FC4     		stmia	r4!, {r0, r1, r2, r3}	@ tmp418,,,,
 736 00da 0FCD     		ldmia	r5!, {r0, r1, r2, r3}	@ tmp419,,,,
 737 00dc 0FC4     		stmia	r4!, {r0, r1, r2, r3}	@ tmp418,,,,
 738 00de 95E80F00 		ldm	r5, {r0, r1, r2, r3}	@ tmp419,,,,
 739              	@ main.c:332: 		const u08 i2cnf[3]={0,0x1e,0x67},i2trig_bus[3]={0,0x1e,0x67};
 740 00e2 3D6C     		ldr	r5, [r7, #64]	@ tmp406,
 741              	@ main.c:351: 		char tstat[6][8]={" Laduj"," Rozlad"," Czekaj"," Pomiar"," LadKon"," RozKon"};
ARM GAS  /tmp/ccAYxbuo.s 			page 14


 742 00e4 84E80F00 		stm	r4, {r0, r1, r2, r3}	@ tmp418,,,,
 743              	@ main.c:332: 		const u08 i2cnf[3]={0,0x1e,0x67},i2trig_bus[3]={0,0x1e,0x67};
 744 00e8 2B0C     		lsrs	r3, r5, #16	@ tmp408, tmp406,
 745 00ea 8DF81630 		strb	r3, [sp, #22]	@ tmp408, i2cnf
 746 00ee 8DF81A30 		strb	r3, [sp, #26]	@ tmp408, i2trig_bus
 747 00f2 ADF81450 		strh	r5, [sp, #20]	@ movhi	@ tmp406, i2cnf
 748 00f6 ADF81850 		strh	r5, [sp, #24]	@ movhi	@ tmp406, i2trig_bus
 749              	@ main.c:353: 		i2c1r_init();
 750 00fa FFF7FEFF 		bl	i2c1r_init	@
 751              	@ main.c:358: 		i2c1_write(INA219_ADDR,(u08 *)i2cnf,3);
 752 00fe 05A9     		add	r1, sp, #20	@ tmp953,,
 753 0100 0322     		movs	r2, #3	@,
 754 0102 8020     		movs	r0, #128	@,
 755 0104 FFF7FEFF 		bl	i2c1_write	@
 756              	@ main.c:360: 		i2weg[0]=5;    // Calibration Register 0x1e63 continus
 757 0108 40F60574 		movw	r4, #3845	@ tmp422,
 758              	@ main.c:361: 		i2weg[1]=0x0f; // MSB Data
 759 010c DB23     		movs	r3, #219	@ tmp423,
 760              	@ main.c:363: 		i2c1_write(INA219_ADDR,i2weg,3);
 761 010e 0322     		movs	r2, #3	@,
 762 0110 04A9     		add	r1, sp, #16	@,,
 763 0112 8020     		movs	r0, #128	@,
 764              	@ main.c:360: 		i2weg[0]=5;    // Calibration Register 0x1e63 continus
 765 0114 ADF81040 		strh	r4, [sp, #16]	@ movhi	@ tmp422, MEM[(u08[3] *)&i2weg]
 766              	@ main.c:361: 		i2weg[1]=0x0f; // MSB Data
 767 0118 8DF81230 		strb	r3, [sp, #18]	@ tmp423, MEM[(u08[3] *)&i2weg + 2B]
 768              	@ main.c:363: 		i2c1_write(INA219_ADDR,i2weg,3);
 769 011c FFF7FEFF 		bl	i2c1_write	@
 770              	@ main.c:365: 		i2c1_read (INA219_ADDR,0,i2reg,2);
 771 0120 03AA     		add	r2, sp, #12	@ tmp954,,
 772 0122 0223     		movs	r3, #2	@,
 773 0124 0021     		movs	r1, #0	@,
 774 0126 8020     		movs	r0, #128	@,
 775 0128 FFF7FEFF 		bl	i2c1_read	@
 776              	@ main.c:379: 		LAD = 0; ROZ = 0;	BEP = 1; 
 777 012c 0022     		movs	r2, #0	@ tmp451,
 778 012e 4FF0010E 		mov	lr, #1	@ tmp455,
 779              	@ main.c:381: 		stat = czk;
 780 0132 0225     		movs	r5, #2	@ stat,
 781              	@ main.c:370: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 782 0134 7768     		ldr	r7, [r6, #4]	@ _7, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 783              	@ main.c:376: 		cah = (BKP->DR2<<16) + BKP->DR1;
 784 0136 7A49     		ldr	r1, .L110+44	@ tmp432,
 785              	@ main.c:370: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 786 0138 27F07F67 		bic	r7, r7, #267386880	@ tmp428, _7,
 787 013c 27F47027 		bic	r7, r7, #983040	@ tmp428, tmp428,
 788 0140 47F0AA67 		orr	r7, r7, #89128960	@ _9, tmp428,
 789 0144 47F4A027 		orr	r7, r7, #327680	@ _9, _9,
 790              	@ main.c:380: 		beep=0; 
 791 0148 0192     		str	r2, [sp, #4]	@ tmp451, %sfp
 792              	@ main.c:370: 		GPIOB->CRH = (GPIOB->CRH & 0xf000ffff) | 0x05550000;
 793 014a 7760     		str	r7, [r6, #4]	@ _9, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 794              	@ main.c:376: 		cah = (BKP->DR2<<16) + BKP->DR1;
 795 014c 0F89     		ldrh	r7, [r1, #8]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR2
 796 014e 8E88     		ldrh	r6, [r1, #4]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR1
 797              	@ main.c:379: 		LAD = 0; ROZ = 0;	BEP = 1; 
 798 0150 7448     		ldr	r0, .L110+48	@ tmp452,
ARM GAS  /tmp/ccAYxbuo.s 			page 15


 799              	@ main.c:376: 		cah = (BKP->DR2<<16) + BKP->DR1;
 800 0152 06EB0746 		add	r6, r6, r7, lsl #16	@ tmp440, MEM[(struct BKP_TypeDef *)1073769472B].DR1, MEM[(struct BKP_Type
 801              	@ main.c:377: 		cwh = (BKP->DR4<<16) + BKP->DR3;
 802 0156 0F8A     		ldrh	r7, [r1, #16]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR4
 803 0158 8989     		ldrh	r1, [r1, #12]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR3
 804              	@ main.c:376: 		cah = (BKP->DR2<<16) + BKP->DR1;
 805 015a C9F80060 		str	r6, [r9]	@ tmp440, cah
 806              	@ main.c:377: 		cwh = (BKP->DR4<<16) + BKP->DR3;
 807 015e 01EB0741 		add	r1, r1, r7, lsl #16	@ tmp449, MEM[(struct BKP_TypeDef *)1073769472B].DR3, MEM[(struct BKP_Type
 808              	@ main.c:379: 		LAD = 0; ROZ = 0;	BEP = 1; 
 809 0162 DFF8ECC1 		ldr	ip, .L110+92	@ tmp450,
 810 0166 704E     		ldr	r6, .L110+52	@ tmp454,
 811              	@ main.c:377: 		cwh = (BKP->DR4<<16) + BKP->DR3;
 812 0168 704F     		ldr	r7, .L110+56	@ tmp955,
 813              	@ main.c:382: 		trg1  = SysTick->VAL;	
 814 016a 714B     		ldr	r3, .L110+60	@ tmp456,
 815              	@ main.c:377: 		cwh = (BKP->DR4<<16) + BKP->DR3;
 816 016c 3960     		str	r1, [r7]	@ tmp449, cwh
 817              	@ main.c:379: 		LAD = 0; ROZ = 0;	BEP = 1; 
 818 016e CCF80020 		str	r2, [ip]	@ tmp451, MEM[(volatile long unsigned int *)1109492148B]
 819 0172 0260     		str	r2, [r0]	@ tmp451, MEM[(volatile long unsigned int *)1109492144B]
 820 0174 C6F800E0 		str	lr, [r6]	@ tmp455, MEM[(volatile long unsigned int *)1109492152B]
 821              	@ main.c:382: 		trg1  = SysTick->VAL;	
 822 0178 9A68     		ldr	r2, [r3, #8]	@ _24, MEM[(struct SysTick_Type *)3758153744B].VAL
 823 017a 6E49     		ldr	r1, .L110+64	@ tmp956,
 824              	@ main.c:387: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 825 017c 1C46     		mov	r4, r3	@ tmp461, tmp456
 826              	@ main.c:382: 		trg1  = SysTick->VAL;	
 827 017e 0A60     		str	r2, [r1]	@ _24, trg1
 828              	@ main.c:383: 		trg0  = SysTick->VAL;
 829 0180 9B68     		ldr	r3, [r3, #8]	@ _25, MEM[(struct SysTick_Type *)3758153744B].VAL
 830 0182 6D4A     		ldr	r2, .L110+68	@ tmp957,
 831 0184 1360     		str	r3, [r2]	@ _25, trg0
 832              	.L83:
 833              	@ main.c:387: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 834 0186 6C4B     		ldr	r3, .L110+68	@ tmp958,
 835 0188 1B68     		ldr	r3, [r3]	@ trg0.1_26, trg0
 836 018a A268     		ldr	r2, [r4, #8]	@ _27, MEM[(struct SysTick_Type *)3758153744B].VAL
 837 018c 9B1A     		subs	r3, r3, r2	@ tmp462, trg0.1_26, _27
 838 018e 6B4A     		ldr	r2, .L110+72	@ tmp959,
 839 0190 9342     		cmp	r3, r2	@ tmp462, tmp959
 840 0192 00F22F82 		bhi	.L104	@,
 841              	.L51:
 842              	@ main.c:478: 			if( (STCLK_MS*2000 < (trg1 - SysTick->VAL)) ){	
 843 0196 674B     		ldr	r3, .L110+64	@ tmp1008,
 844 0198 694A     		ldr	r2, .L110+76	@ tmp706,
 845 019a 1F46     		mov	r7, r3	@ tmp1008, tmp1008
 846 019c 1B68     		ldr	r3, [r3]	@ trg1.42_151, trg1
 847 019e A168     		ldr	r1, [r4, #8]	@ _152, MEM[(struct SysTick_Type *)3758153744B].VAL
 848 01a0 5B1A     		subs	r3, r3, r1	@ tmp705, trg1.42_151, _152
 849 01a2 9342     		cmp	r3, r2	@ tmp705, tmp706
 850 01a4 31D9     		bls	.L57	@,
 851              	@ main.c:481: 				if(abs(cur) < 1000 && vbus > 4200 && stat == lad){ // start rozladowanie
 852 01a6 674A     		ldr	r2, .L110+80	@ tmp1009,
 853 01a8 4FF0460B 		mov	fp, #70	@ tmp715,
 854 01ac 1388     		ldrh	r3, [r2]	@ cur.44_156, cur
 855 01ae 664A     		ldr	r2, .L110+84	@ tmp1077,
ARM GAS  /tmp/ccAYxbuo.s 			page 16


 856 01b0 40F2CE7E 		movw	lr, #1998	@ tmp718,
 857 01b4 B2F900C0 		ldrsh	ip, [r2]	@ pretmp_480, vbus
 858 01b8 644A     		ldr	r2, .L110+88	@ tmp1010,
 859 01ba 03F2E731 		addw	r1, r3, #999	@ tmp716, cur.44_156,
 860 01be 1088     		ldrh	r0, [r2]	@ vr1, vr1
 861 01c0 6FF4FA62 		mvn	r2, #2000	@,
 862 01c4 89B2     		uxth	r1, r1	@ tmp717, tmp716
 863 01c6 0BFB00F0 		mul	r0, fp, r0	@ _591, tmp715, vr1
 864              	@ main.c:479: 				trg1  = SysTick->VAL;	
 865 01ca D4F808B0 		ldr	fp, [r4, #8]	@ _154, MEM[(struct SysTick_Type *)3758153744B].VAL
 866 01ce 6244     		add	r2, ip, r2	@ tmp712, pretmp_480,
 867              	@ main.c:481: 				if(abs(cur) < 1000 && vbus > 4200 && stat == lad){ // start rozladowanie
 868 01d0 7145     		cmp	r1, lr	@ tmp717, tmp718
 869 01d2 92B2     		uxth	r2, r2	@ _553, tmp712
 870              	@ main.c:479: 				trg1  = SysTick->VAL;	
 871 01d4 C7F800B0 		str	fp, [r7]	@ _154, trg1
 872              	@ main.c:481: 				if(abs(cur) < 1000 && vbus > 4200 && stat == lad){ // start rozladowanie
 873 01d8 00F2AB81 		bhi	.L58	@,
 874              	@ main.c:481: 				if(abs(cur) < 1000 && vbus > 4200 && stat == lad){ // start rozladowanie
 875 01dc 41F26801 		movw	r1, #4200	@ tmp719,
 876 01e0 8C45     		cmp	ip, r1	@ pretmp_480, tmp719
 877 01e2 40F3A681 		ble	.L58	@,
 878              	@ main.c:481: 				if(abs(cur) < 1000 && vbus > 4200 && stat == lad){ // start rozladowanie
 879 01e6 002D     		cmp	r5, #0	@ stat
 880 01e8 40F0A381 		bne	.L58	@
 881              	@ main.c:483: 					ROZ = 1;
 882 01ec 0123     		movs	r3, #1	@ tmp723,
 883              	@ main.c:490: 				if(vbus < 2600 && vbus > 2000 && stat==roz) { // koniec rozladowania
 884 01ee 40F25621 		movw	r1, #598	@ tmp728,
 885              	@ main.c:482: 					LAD = 0;
 886 01f2 5748     		ldr	r0, .L110+92	@ tmp720,
 887              	@ main.c:490: 				if(vbus < 2600 && vbus > 2000 && stat==roz) { // koniec rozladowania
 888 01f4 8A42     		cmp	r2, r1	@ _553, tmp728
 889              	@ main.c:482: 					LAD = 0;
 890 01f6 0560     		str	r5, [r0]	@ stat, MEM[(volatile long unsigned int *)1109492148B]
 891              	@ main.c:483: 					ROZ = 1;
 892 01f8 40F8043C 		str	r3, [r0, #-4]	@ tmp723, MEM[(volatile long unsigned int *)1109492144B]
 893              	@ main.c:485: 					cwh = 0;
 894 01fc 4B48     		ldr	r0, .L110+56	@ tmp1013,
 895              	@ main.c:484: 					cah = 0;
 896 01fe C9F80050 		str	r5, [r9]	@ stat, cah
 897              	@ main.c:485: 					cwh = 0;
 898 0202 0560     		str	r5, [r0]	@ stat, cwh
 899              	@ main.c:490: 				if(vbus < 2600 && vbus > 2000 && stat==roz) { // koniec rozladowania
 900 0204 40F24183 		bls	.L61	@,
 901              	@ main.c:486: 					stat = roz;
 902 0208 1D46     		mov	r5, r3	@ stat, tmp723
 903              	.L57:
 904              	@ main.c:521: 			if( (STCLK_MS*500   < (trg2 - SysTick->VAL))) {
 905 020a 5248     		ldr	r0, .L110+96	@ tmp1027,
 906 020c 524A     		ldr	r2, .L110+100	@ tmp776,
 907 020e 0368     		ldr	r3, [r0]	@ trg2.56_168, trg2
 908 0210 A168     		ldr	r1, [r4, #8]	@ _169, MEM[(struct SysTick_Type *)3758153744B].VAL
 909 0212 5B1A     		subs	r3, r3, r1	@ tmp775, trg2.56_168, _169
 910 0214 9342     		cmp	r3, r2	@ tmp775, tmp776
 911 0216 05D9     		bls	.L66	@,
 912              	@ main.c:522: 				trg2  = SysTick->VAL;	
ARM GAS  /tmp/ccAYxbuo.s 			page 17


 913 0218 A368     		ldr	r3, [r4, #8]	@ _171, MEM[(struct SysTick_Type *)3758153744B].VAL
 914 021a 0360     		str	r3, [r0]	@ _171, trg2
 915              	@ main.c:523: 				if(beep){	BEP ^= 1; }
 916 021c 019B     		ldr	r3, [sp, #4]	@ beep, %sfp
 917 021e 002B     		cmp	r3, #0	@ beep
 918 0220 40F0E082 		bne	.L84	@
 919              	.L66:
 920              	@ main.c:526: 			if( (STCLK_MS*100   < (trg3 - SysTick->VAL))) {
 921 0224 4D48     		ldr	r0, .L110+104	@ tmp1032,
 922 0226 4E4A     		ldr	r2, .L110+108	@ tmp784,
 923 0228 0368     		ldr	r3, [r0]	@ trg3.57_174, trg3
 924 022a A168     		ldr	r1, [r4, #8]	@ _175, MEM[(struct SysTick_Type *)3758153744B].VAL
 925 022c 5B1A     		subs	r3, r3, r1	@ tmp783, trg3.57_174, _175
 926 022e 9342     		cmp	r3, r2	@ tmp783, tmp784
 927 0230 06D9     		bls	.L69	@,
 928              	@ main.c:527: 				trg3  = SysTick->VAL;	
 929 0232 A368     		ldr	r3, [r4, #8]	@ _177, MEM[(struct SysTick_Type *)3758153744B].VAL
 930              	@ main.c:528: 				LED ^= 1;	
 931 0234 4B4A     		ldr	r2, .L110+112	@ tmp787,
 932              	@ main.c:527: 				trg3  = SysTick->VAL;	
 933 0236 0360     		str	r3, [r0]	@ _177, trg3
 934              	@ main.c:528: 				LED ^= 1;	
 935 0238 1368     		ldr	r3, [r2]	@ _178, MEM[(volatile long unsigned int *)1109524916B]
 936 023a 83F00103 		eor	r3, r3, #1	@ _179, _178,
 937 023e 1360     		str	r3, [r2]	@ _179, MEM[(volatile long unsigned int *)1109524916B]
 938              	.L69:
 939              	@ main.c:531: 			if(p_Fifo1->rct){
 940 0240 DAF80030 		ldr	r3, [r10]	@ p_Fifo1.58_180, p_Fifo1
 941 0244 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.58_180->rct
 942 0246 9BB2     		uxth	r3, r3	@ _181, p_Fifo1.58_180->rct
 943 0248 002B     		cmp	r3, #0	@ _181
 944 024a 9CD0     		beq	.L83	@
 945              	@ main.c:532: 				UART_getChar( (char*)&swh);
 946 024c 0DF10B00 		add	r0, sp, #11	@ tmp1034,,
 947 0250 FFF7FEFF 		bl	UART_getChar	@
 948              	@ main.c:535: 				switch (swh)	{
 949 0254 9DF80B30 		ldrb	r3, [sp, #11]	@ zero_extendqisi2	@ swh, swh
 950 0258 613B     		subs	r3, r3, #97	@ tmp794, swh,
 951 025a 192B     		cmp	r3, #25	@ tmp794,
 952 025c 93D8     		bhi	.L83	@
 953 025e 01A2     		adr	r2, .L72	@ tmp948,
 954 0260 52F823F0 		ldr	pc, [r2, r3, lsl #2]	@ tmp948, tmp794
 955              		.p2align 2
 956              	.L72:
 957 0264 1D050000 		.word	.L71+1
 958 0268 11050000 		.word	.L73+1
 959 026c 87010000 		.word	.L83+1
 960 0270 FD040000 		.word	.L74+1
 961 0274 87010000 		.word	.L83+1
 962 0278 87010000 		.word	.L83+1
 963 027c 87010000 		.word	.L83+1
 964 0280 87010000 		.word	.L83+1
 965 0284 87010000 		.word	.L83+1
 966 0288 87010000 		.word	.L83+1
 967 028c 6F040000 		.word	.L75+1
 968 0290 87010000 		.word	.L83+1
 969 0294 31040000 		.word	.L76+1
ARM GAS  /tmp/ccAYxbuo.s 			page 18


 970 0298 87010000 		.word	.L83+1
 971 029c 87010000 		.word	.L83+1
 972 02a0 87010000 		.word	.L83+1
 973 02a4 1D040000 		.word	.L77+1
 974 02a8 87010000 		.word	.L83+1
 975 02ac 87010000 		.word	.L83+1
 976 02b0 85030000 		.word	.L78+1
 977 02b4 87010000 		.word	.L83+1
 978 02b8 E3020000 		.word	.L79+1
 979 02bc 87010000 		.word	.L83+1
 980 02c0 87010000 		.word	.L83+1
 981 02c4 87010000 		.word	.L83+1
 982 02c8 CD020000 		.word	.L80+1
 983              		.p2align 1
 984              	.L80:
 985              	@ main.c:599: 						cah = 0;
 986 02cc 0023     		movs	r3, #0	@ tmp863,
 987              	@ main.c:600: 						cwh = 0;
 988 02ce 174A     		ldr	r2, .L110+56	@ tmp1050,
 989              	@ main.c:599: 						cah = 0;
 990 02d0 C9F80030 		str	r3, [r9]	@ tmp863, cah
 991              	@ main.c:600: 						cwh = 0;
 992 02d4 1360     		str	r3, [r2]	@ tmp863, cwh
 993              	@ main.c:601: 						cnt = 0;
 994 02d6 244A     		ldr	r2, .L110+116	@ tmp1076,
 995 02d8 1380     		strh	r3, [r2]	@ movhi	@ tmp863, cnt
 996              	@ main.c:602: 						Rwa[0] = 0;
 997 02da 244A     		ldr	r2, .L110+120	@ tmp1051,
 998              	@ main.c:603: 						Rwa[1] = 0;
 999 02dc C2E90033 		strd	r3, r3, [r2]	@ tmp863, tmp863, tmp1051
 1000              	@ main.c:608: 					break;
 1001 02e0 51E7     		b	.L83	@
 1002              	.L79:
 1003              	@ main.c:639: 						LAD = 1;
 1004 02e2 0121     		movs	r1, #1	@ tmp894,
 1005              	@ main.c:640: 						ROZ = 0;
 1006 02e4 0023     		movs	r3, #0	@ tmp896,
 1007              	@ main.c:639: 						LAD = 1;
 1008 02e6 1A4A     		ldr	r2, .L110+92	@ tmp893,
 1009              	@ main.c:641: 						stat = pom;
 1010 02e8 0325     		movs	r5, #3	@ stat,
 1011              	@ main.c:639: 						LAD = 1;
 1012 02ea 1160     		str	r1, [r2]	@ tmp894, MEM[(volatile long unsigned int *)1109492148B]
 1013              	@ main.c:640: 						ROZ = 0;
 1014 02ec 42F8043C 		str	r3, [r2, #-4]	@ tmp896, MEM[(volatile long unsigned int *)1109492144B]
 1015              	@ main.c:386: 		while(1){
 1016 02f0 49E7     		b	.L83	@
 1017              	.L111:
 1018 02f2 00BF     		.align	2
 1019              	.L110:
 1020 02f4 00100240 		.word	1073876992
 1021 02f8 00380140 		.word	1073821696
 1022 02fc 00E100E0 		.word	-536813312
 1023 0300 000C0140 		.word	1073810432
 1024 0304 00480040 		.word	1073760256
 1025 0308 00000000 		.word	PutChar
 1026 030c 00000000 		.word	UART2_putc
ARM GAS  /tmp/ccAYxbuo.s 			page 19


 1027 0310 00000000 		.word	.LC15
 1028 0314 00A24A04 		.word	72000000
 1029 0318 00000000 		.word	.LANCHOR1
 1030 031c 0C000000 		.word	.LC16
 1031 0320 006C0040 		.word	1073769472
 1032 0324 B0812142 		.word	1109492144
 1033 0328 B8812142 		.word	1109492152
 1034 032c 00000000 		.word	.LANCHOR3
 1035 0330 10E000E0 		.word	-536813552
 1036 0334 00000000 		.word	trg1
 1037 0338 00000000 		.word	trg0
 1038 033c 40548900 		.word	9000000
 1039 0340 80A81201 		.word	18000000
 1040 0344 00000000 		.word	.LANCHOR8
 1041 0348 00000000 		.word	.LANCHOR4
 1042 034c 00000000 		.word	.LANCHOR14
 1043 0350 B4812142 		.word	1109492148
 1044 0354 00000000 		.word	trg2
 1045 0358 20AA4400 		.word	4500000
 1046 035c 00000000 		.word	trg3
 1047 0360 A0BB0D00 		.word	900000
 1048 0364 B4012242 		.word	1109524916
 1049 0368 00000000 		.word	.LANCHOR6
 1050 036c 00000000 		.word	.LANCHOR9
 1051 0370 00080140 		.word	1073809408
 1052 0374 00440040 		.word	1073759232
 1053 0378 00000000 		.word	.LANCHOR2
 1054 037c 00000000 		.word	.LANCHOR11
 1055 0380 00000000 		.word	p_Fifo1
 1056              	.L78:
 1057              	@ main.c:537: 						UaPutS(TRCLS);
 1058 0384 8548     		ldr	r0, .L112	@,
 1059 0386 FFF7FEFF 		bl	UaPutS	@
 1060              	@ main.c:539: 						tr_locate(4,1);
 1061 038a 0121     		movs	r1, #1	@,
 1062 038c 0420     		movs	r0, #4	@,
 1063 038e FFF7FEFF 		bl	tr_locate	@
 1064              	@ main.c:540:   					UaPutS("0        1         2         3         4         5");
 1065 0392 8348     		ldr	r0, .L112+4	@,
 1066 0394 FFF7FEFF 		bl	UaPutS	@
 1067              	@ main.c:541: 						tr_locate(5,1);
 1068 0398 0121     		movs	r1, #1	@,
 1069 039a 0520     		movs	r0, #5	@,
 1070 039c FFF7FEFF 		bl	tr_locate	@
 1071              	@ main.c:542:   					UaPutS("123456789 123456789 123456789 123456789 123456789 1234567890");
 1072 03a0 8048     		ldr	r0, .L112+8	@,
 1073 03a2 FFF7FEFF 		bl	UaPutS	@
 1074              	@ main.c:543: 						tr_locate(10,20);
 1075 03a6 1421     		movs	r1, #20	@,
 1076 03a8 0A20     		movs	r0, #10	@,
 1077 03aa FFF7FEFF 		bl	tr_locate	@
 1078              	@ main.c:544: 						UaPutS("Podaj wrtosc= ");
 1079 03ae 7E48     		ldr	r0, .L112+12	@,
 1080 03b0 FFF7FEFF 		bl	UaPutS	@
 1081              	@ main.c:545: 						tr_locate(10,37);
 1082 03b4 2521     		movs	r1, #37	@,
 1083 03b6 0A20     		movs	r0, #10	@,
ARM GAS  /tmp/ccAYxbuo.s 			page 20


 1084 03b8 FFF7FEFF 		bl	tr_locate	@
 1085              	@ main.c:546: 						UaPutS(TRCLS);
 1086 03bc 7748     		ldr	r0, .L112	@,
 1087 03be FFF7FEFF 		bl	UaPutS	@
 1088              	@ main.c:547: 						vr4 = UART_getDec((s32*)&vr3) ;
 1089 03c2 7A48     		ldr	r0, .L112+16	@,
 1090 03c4 FFF7FEFF 		bl	UART_getDec	@
 1091 03c8 794E     		ldr	r6, .L112+20	@ tmp1035,
 1092              	@ main.c:549: 						tr_locate(11,20);
 1093 03ca 1421     		movs	r1, #20	@,
 1094              	@ main.c:547: 						vr4 = UART_getDec((s32*)&vr3) ;
 1095 03cc 3060     		str	r0, [r6]	@, vr4
 1096              	@ main.c:549: 						tr_locate(11,20);
 1097 03ce 0B20     		movs	r0, #11	@,
 1098 03d0 FFF7FEFF 		bl	tr_locate	@
 1099              	@ main.c:550: 					  UaPutS(TRCLS"Wartosc ileZnak= ");  
 1100 03d4 7748     		ldr	r0, .L112+24	@,
 1101 03d6 FFF7FEFF 		bl	UaPutS	@
 1102              	@ main.c:551:  						UaPutS("\033[11;36H");
 1103 03da 7748     		ldr	r0, .L112+28	@,
 1104 03dc FFF7FEFF 		bl	UaPutS	@
 1105              	@ main.c:552:  						sint2uart (vr3);
 1106 03e0 724B     		ldr	r3, .L112+16	@ tmp1036,
 1107 03e2 1868     		ldr	r0, [r3]	@, vr3
 1108 03e4 FFF7FEFF 		bl	sint2uart	@
 1109              	@ main.c:553: 					  sint2uart (vr4-1); 
 1110 03e8 3068     		ldr	r0, [r6]	@ vr4, vr4
 1111 03ea 0138     		subs	r0, r0, #1	@, vr4,
 1112 03ec FFF7FEFF 		bl	sint2uart	@
 1113              	@ main.c:554:  						tr_locate(12,20);
 1114 03f0 1421     		movs	r1, #20	@,
 1115 03f2 0C20     		movs	r0, #12	@,
 1116 03f4 FFF7FEFF 		bl	tr_locate	@
 1117              	@ main.c:555: 						UaPutS("Zerowanie t/n=");
 1118 03f8 7048     		ldr	r0, .L112+32	@,
 1119 03fa FFF7FEFF 		bl	UaPutS	@
 1120              	@ main.c:556:  						tr_locate(12,37);
 1121 03fe 2521     		movs	r1, #37	@,
 1122 0400 0C20     		movs	r0, #12	@,
 1123 0402 FFF7FEFF 		bl	tr_locate	@
 1124              	@ main.c:557: 						UaPutS(TRCLS);
 1125 0406 6548     		ldr	r0, .L112	@,
 1126 0408 FFF7FEFF 		bl	UaPutS	@
 1127              	@ main.c:558: 						UART_getStr(znaki);
 1128 040c 0BA8     		add	r0, sp, #44	@ tmp1038,,
 1129 040e FFF7FEFF 		bl	UART_getStr	@
 1130              	@ main.c:561:  						tr_locate(2,2); 						
 1131 0412 0221     		movs	r1, #2	@,
 1132 0414 0846     		mov	r0, r1	@,
 1133 0416 FFF7FEFF 		bl	tr_locate	@
 1134              	@ main.c:562: 					break;
 1135 041a B4E6     		b	.L83	@
 1136              	.L77:
 1137              	@ main.c:626: 						LAD = 0;
 1138 041c 0023     		movs	r3, #0	@ tmp886,
 1139              	@ main.c:628: 						BEP = 1;
 1140 041e 0121     		movs	r1, #1	@ tmp890,
ARM GAS  /tmp/ccAYxbuo.s 			page 21


 1141              	@ main.c:626: 						LAD = 0;
 1142 0420 6748     		ldr	r0, .L112+36	@ tmp885,
 1143              	@ main.c:628: 						BEP = 1;
 1144 0422 684A     		ldr	r2, .L112+40	@ tmp889,
 1145              	@ main.c:626: 						LAD = 0;
 1146 0424 0360     		str	r3, [r0]	@ tmp886, MEM[(volatile long unsigned int *)1109492148B]
 1147              	@ main.c:629: 						stat = czk;
 1148 0426 0225     		movs	r5, #2	@ stat,
 1149              	@ main.c:627: 						ROZ = 0;
 1150 0428 40F8043C 		str	r3, [r0, #-4]	@ tmp886, MEM[(volatile long unsigned int *)1109492144B]
 1151              	@ main.c:628: 						BEP = 1;
 1152 042c 1160     		str	r1, [r2]	@ tmp890, MEM[(volatile long unsigned int *)1109492152B]
 1153              	@ main.c:631: 					break;
 1154 042e AAE6     		b	.L83	@
 1155              	.L76:
 1156              	@ main.c:564: 						UaPutS(TRCLS);
 1157 0430 5A48     		ldr	r0, .L112	@,
 1158 0432 FFF7FEFF 		bl	UaPutS	@
 1159              	@ main.c:566: 						UaPutS(" Podaj wrtosc= ");
 1160 0436 6448     		ldr	r0, .L112+44	@,
 1161 0438 FFF7FEFF 		bl	UaPutS	@
 1162              	@ main.c:567: 						vr4 = UART_getDec((s32*)&vr3) ;
 1163 043c 5B48     		ldr	r0, .L112+16	@,
 1164 043e FFF7FEFF 		bl	UART_getDec	@
 1165 0442 5B4B     		ldr	r3, .L112+20	@ tmp1039,
 1166              	@ main.c:568: 					  tr_locate(3,2);
 1167 0444 0221     		movs	r1, #2	@,
 1168              	@ main.c:567: 						vr4 = UART_getDec((s32*)&vr3) ;
 1169 0446 1E46     		mov	r6, r3	@ tmp1039, tmp1039
 1170 0448 1860     		str	r0, [r3]	@, vr4
 1171              	@ main.c:568: 					  tr_locate(3,2);
 1172 044a 0320     		movs	r0, #3	@,
 1173 044c FFF7FEFF 		bl	tr_locate	@
 1174              	@ main.c:569: 					  UaPutS(TRCLS"ileZnak,Wartosc=");
 1175 0450 5E48     		ldr	r0, .L112+48	@,
 1176 0452 FFF7FEFF 		bl	UaPutS	@
 1177              	@ main.c:570:  						sint2uart (vr4);
 1178 0456 3068     		ldr	r0, [r6]	@, vr4
 1179 0458 FFF7FEFF 		bl	sint2uart	@
 1180              	@ main.c:571:  						sint2uart (vr3);
 1181 045c 534B     		ldr	r3, .L112+16	@ tmp1041,
 1182 045e 1868     		ldr	r0, [r3]	@, vr3
 1183 0460 FFF7FEFF 		bl	sint2uart	@
 1184              	@ main.c:572: 						tr_locate(2,1);
 1185 0464 0121     		movs	r1, #1	@,
 1186 0466 0220     		movs	r0, #2	@,
 1187 0468 FFF7FEFF 		bl	tr_locate	@
 1188              	@ main.c:574: 					break;
 1189 046c 8BE6     		b	.L83	@
 1190              	.L75:
 1191              	@ main.c:576: 						UaPutS(TRCLS);
 1192 046e 4B48     		ldr	r0, .L112	@,
 1193 0470 FFF7FEFF 		bl	UaPutS	@
 1194              	@ main.c:579: 						BEP = 1;
 1195 0474 0122     		movs	r2, #1	@ tmp825,
 1196 0476 534B     		ldr	r3, .L112+40	@ tmp824,
 1197              	@ main.c:581: 						sint2uart(vr1);
ARM GAS  /tmp/ccAYxbuo.s 			page 22


 1198 0478 554D     		ldr	r5, .L112+52	@ tmp1042,
 1199              	@ main.c:579: 						BEP = 1;
 1200 047a 1A60     		str	r2, [r3]	@ tmp825, MEM[(volatile long unsigned int *)1109492152B]
 1201              	@ main.c:580: 						UaPutS(" Laduj do 70% x [mAh]=");
 1202 047c 5548     		ldr	r0, .L112+56	@,
 1203 047e FFF7FEFF 		bl	UaPutS	@
 1204              	@ main.c:581: 						sint2uart(vr1);
 1205 0482 2888     		ldrh	r0, [r5]	@, vr1
 1206 0484 FFF7FEFF 		bl	sint2uart	@
 1207              	@ main.c:582: 						UaPutS(" ");
 1208 0488 5348     		ldr	r0, .L112+60	@,
 1209 048a FFF7FEFF 		bl	UaPutS	@
 1210              	@ main.c:583: 						vr4 = UART_getDec(&vr3) ;
 1211 048e 4748     		ldr	r0, .L112+16	@,
 1212 0490 FFF7FEFF 		bl	UART_getDec	@
 1213 0494 464B     		ldr	r3, .L112+20	@ tmp1043,
 1214              	@ main.c:584: 						if(vr4>1) vr1 = vr3;
 1215 0496 0128     		cmp	r0, #1	@ tmp831,
 1216              	@ main.c:583: 						vr4 = UART_getDec(&vr3) ;
 1217 0498 1860     		str	r0, [r3]	@ tmp831, vr4
 1218              	@ main.c:584: 						if(vr4>1) vr1 = vr3;
 1219 049a 02DD     		ble	.L81	@,
 1220              	@ main.c:584: 						if(vr4>1) vr1 = vr3;
 1221 049c 434B     		ldr	r3, .L112+16	@ tmp1044,
 1222 049e 1B68     		ldr	r3, [r3]	@ vr3, vr3
 1223 04a0 2B80     		strh	r3, [r5]	@ movhi	@ vr3, vr1
 1224              	.L81:
 1225              	@ main.c:585: 						UaPutS(TRCLS" Rozladuj [t/n]=");
 1226 04a2 4E48     		ldr	r0, .L112+64	@,
 1227 04a4 FFF7FEFF 		bl	UaPutS	@
 1228              	@ main.c:586: 						UART_getStr(str) ;
 1229 04a8 07A8     		add	r0, sp, #28	@ tmp1046,,
 1230 04aa FFF7FEFF 		bl	UART_getStr	@
 1231              	@ main.c:587: 						sint2uart (vr2);
 1232 04ae 0020     		movs	r0, #0	@,
 1233 04b0 FFF7FEFF 		bl	sint2uart	@
 1234              	@ main.c:589: 					  tr_locate(3,1);
 1235 04b4 0121     		movs	r1, #1	@,
 1236 04b6 0320     		movs	r0, #3	@,
 1237 04b8 FFF7FEFF 		bl	tr_locate	@
 1238              	@ main.c:590: 					  UaPutS(TRCLS"Laduj do [mAh]=");
 1239 04bc 4848     		ldr	r0, .L112+68	@,
 1240 04be FFF7FEFF 		bl	UaPutS	@
 1241              	@ main.c:591:  						sint2uart (vr1*7/10);
 1242 04c2 434B     		ldr	r3, .L112+52	@ tmp1047,
 1243 04c4 1888     		ldrh	r0, [r3]	@ vr1, vr1
 1244 04c6 474B     		ldr	r3, .L112+72	@ tmp847,
 1245 04c8 C0EBC000 		rsb	r0, r0, r0, lsl #3	@ tmp844, vr1, vr1,
 1246 04cc A3FB0030 		umull	r3, r0, r3, r0	@ tmp949, tmp846, tmp847, tmp844
 1247 04d0 C008     		lsrs	r0, r0, #3	@, tmp846,
 1248 04d2 FFF7FEFF 		bl	sint2uart	@
 1249              	@ main.c:592: 						tr_locate(2,1);
 1250 04d6 0121     		movs	r1, #1	@,
 1251 04d8 0220     		movs	r0, #2	@,
 1252 04da FFF7FEFF 		bl	tr_locate	@
 1253              	@ main.c:593: 						if(str[0]=='t') { stat = rok; LAD = 0;	ROZ = 1; }
 1254 04de 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2	@ str, str
ARM GAS  /tmp/ccAYxbuo.s 			page 23


 1255 04e2 742B     		cmp	r3, #116	@ str,
 1256 04e4 4FF00003 		mov	r3, #0	@ tmp855,
 1257 04e8 00F08982 		beq	.L105	@,
 1258              	@ main.c:594: 						else 			 { stat = kon; ROZ = 0;	LAD = 1; }
 1259 04ec 0121     		movs	r1, #1	@ tmp861,
 1260 04ee 344A     		ldr	r2, .L112+36	@ tmp860,
 1261 04f0 3D48     		ldr	r0, .L112+76	@ tmp1049,
 1262 04f2 0425     		movs	r5, #4	@ stat,
 1263 04f4 0360     		str	r3, [r0]	@ tmp859, MEM[(volatile long unsigned int *)1109492144B]
 1264              	@ main.c:578: 						beep= 0;
 1265 04f6 0193     		str	r3, [sp, #4]	@ tmp859, %sfp
 1266              	@ main.c:594: 						else 			 { stat = kon; ROZ = 0;	LAD = 1; }
 1267 04f8 1160     		str	r1, [r2]	@ tmp861, MEM[(volatile long unsigned int *)1109492148B]
 1268 04fa 44E6     		b	.L83	@
 1269              	.L74:
 1270              	@ main.c:618: 						LAD = 0;
 1271 04fc 0023     		movs	r3, #0	@ tmp880,
 1272              	@ main.c:619: 						ROZ = 1;
 1273 04fe 0125     		movs	r5, #1	@ tmp882,
 1274              	@ main.c:618: 						LAD = 0;
 1275 0500 2F49     		ldr	r1, .L112+36	@ tmp879,
 1276              	@ main.c:620: 						BEP = 1;
 1277 0502 304A     		ldr	r2, .L112+40	@ tmp883,
 1278              	@ main.c:618: 						LAD = 0;
 1279 0504 0B60     		str	r3, [r1]	@ tmp880, MEM[(volatile long unsigned int *)1109492148B]
 1280              	@ main.c:621: 						beep=0; 
 1281 0506 0193     		str	r3, [sp, #4]	@ tmp880, %sfp
 1282              	@ main.c:619: 						ROZ = 1;
 1283 0508 374B     		ldr	r3, .L112+76	@ tmp1054,
 1284 050a 1D60     		str	r5, [r3]	@ tmp882, MEM[(volatile long unsigned int *)1109492144B]
 1285              	@ main.c:620: 						BEP = 1;
 1286 050c 1560     		str	r5, [r2]	@ tmp882, MEM[(volatile long unsigned int *)1109492152B]
 1287              	@ main.c:624: 					break;
 1288 050e 3AE6     		b	.L83	@
 1289              	.L73:
 1290              	@ main.c:635: 						BEP = 1;
 1291 0510 0122     		movs	r2, #1	@ tmp892,
 1292              	@ main.c:634: 						beep   = 0;
 1293 0512 0021     		movs	r1, #0	@ beep,
 1294              	@ main.c:635: 						BEP = 1;
 1295 0514 2B4B     		ldr	r3, .L112+40	@ tmp891,
 1296              	@ main.c:634: 						beep   = 0;
 1297 0516 0191     		str	r1, [sp, #4]	@ beep, %sfp
 1298              	@ main.c:635: 						BEP = 1;
 1299 0518 1A60     		str	r2, [r3]	@ tmp892, MEM[(volatile long unsigned int *)1109492152B]
 1300              	@ main.c:636: 					break;
 1301 051a 34E6     		b	.L83	@
 1302              	.L71:
 1303              	@ main.c:610: 						ROZ = 0;
 1304 051c 0022     		movs	r2, #0	@ tmp874,
 1305              	@ main.c:611: 						LAD = 1;
 1306 051e 0123     		movs	r3, #1	@ tmp876,
 1307 0520 2748     		ldr	r0, .L112+36	@ tmp875,
 1308              	@ main.c:612: 						BEP = 1;
 1309 0522 2849     		ldr	r1, .L112+40	@ tmp877,
 1310              	@ main.c:610: 						ROZ = 0;
 1311 0524 304E     		ldr	r6, .L112+76	@ tmp1053,
ARM GAS  /tmp/ccAYxbuo.s 			page 24


 1312              	@ main.c:614: 						stat = lad;
 1313 0526 1546     		mov	r5, r2	@ stat, tmp874
 1314              	@ main.c:610: 						ROZ = 0;
 1315 0528 3260     		str	r2, [r6]	@ tmp874, MEM[(volatile long unsigned int *)1109492144B]
 1316              	@ main.c:613: 						beep = 0; 
 1317 052a 0192     		str	r2, [sp, #4]	@ stat, %sfp
 1318              	@ main.c:611: 						LAD = 1;
 1319 052c 0360     		str	r3, [r0]	@ tmp876, MEM[(volatile long unsigned int *)1109492148B]
 1320              	@ main.c:612: 						BEP = 1;
 1321 052e 0B60     		str	r3, [r1]	@ tmp876, MEM[(volatile long unsigned int *)1109492152B]
 1322              	@ main.c:616: 					break;
 1323 0530 29E6     		b	.L83	@
 1324              	.L58:
 1325              	@ main.c:490: 				if(vbus < 2600 && vbus > 2000 && stat==roz) { // koniec rozladowania
 1326 0532 40F25621 		movw	r1, #598	@ tmp733,
 1327 0536 8A42     		cmp	r2, r1	@ _553, tmp733
 1328 0538 02D8     		bhi	.L60	@,
 1329              	@ main.c:490: 				if(vbus < 2600 && vbus > 2000 && stat==roz) { // koniec rozladowania
 1330 053a 012D     		cmp	r5, #1	@ stat,
 1331 053c 00F0A581 		beq	.L61	@,
 1332              	.L60:
 1333              	@ main.c:497: 				if( abs(cur) < 50 && vbus < 4200 && stat == lad ){ // zanikanie ladowania
 1334 0540 3133     		adds	r3, r3, #49	@ tmp734, cur.44_156,
 1335 0542 9BB2     		uxth	r3, r3	@ tmp735, tmp734
 1336 0544 622B     		cmp	r3, #98	@ tmp735,
 1337 0546 06D8     		bhi	.L62	@,
 1338              	@ main.c:497: 				if( abs(cur) < 50 && vbus < 4200 && stat == lad ){ // zanikanie ladowania
 1339 0548 41F26703 		movw	r3, #4199	@ tmp736,
 1340 054c 9C45     		cmp	ip, r3	@ pretmp_480, tmp736
 1341 054e 02DC     		bgt	.L62	@,
 1342              	@ main.c:497: 				if( abs(cur) < 50 && vbus < 4200 && stat == lad ){ // zanikanie ladowania
 1343 0550 002D     		cmp	r5, #0	@ stat
 1344 0552 00F0A381 		beq	.L106	@
 1345              	.L62:
 1346              	@ main.c:505: 					if(vbus < 2800 && vbus > 2000 && stat==rok) { // koniec rozladowania konserwujac
 1347 0556 40F21E33 		movw	r3, #798	@ tmp751,
 1348 055a 9A42     		cmp	r2, r3	@ _553, tmp751
 1349 055c 40F24A81 		bls	.L107	@,
 1350              	.L64:
 1351              	@ main.c:513: 					if( (Cah > vr1*70 || vbus > 4200) && stat == kon ){ // koniec ladowania konserwu
 1352 0560 D8F80030 		ldr	r3, [r8]	@ Cah, Cah
 1353 0564 8342     		cmp	r3, r0	@ Cah, _591
 1354 0566 04D8     		bhi	.L67	@,
 1355              	@ main.c:513: 					if( (Cah > vr1*70 || vbus > 4200) && stat == kon ){ // koniec ladowania konserwu
 1356 0568 41F26803 		movw	r3, #4200	@ tmp772,
 1357 056c 9C45     		cmp	ip, r3	@ pretmp_480, tmp772
 1358 056e 7FF74CAE 		ble	.L57	@,
 1359              	.L67:
 1360              	@ main.c:513: 					if( (Cah > vr1*70 || vbus > 4200) && stat == kon ){ // koniec ladowania konserwu
 1361 0572 042D     		cmp	r5, #4	@ stat,
 1362 0574 7FF449AE 		bne	.L57	@,
 1363              	.L68:
 1364              	@ main.c:514: 					LAD = 0;
 1365 0578 0023     		movs	r3, #0	@ tmp763,
 1366 057a 1149     		ldr	r1, .L112+36	@ tmp762,
 1367              	@ main.c:521: 			if( (STCLK_MS*500   < (trg2 - SysTick->VAL))) {
 1368 057c 1B4A     		ldr	r2, .L112+80	@ tmp769,
ARM GAS  /tmp/ccAYxbuo.s 			page 25


 1369              	@ main.c:514: 					LAD = 0;
 1370 057e 0B60     		str	r3, [r1]	@ tmp763, MEM[(volatile long unsigned int *)1109492148B]
 1371              	@ main.c:515: 					ROZ = 0;
 1372 0580 41F8043C 		str	r3, [r1, #-4]	@ tmp763, MEM[(volatile long unsigned int *)1109492144B]
 1373              	@ main.c:521: 			if( (STCLK_MS*500   < (trg2 - SysTick->VAL))) {
 1374 0584 1A4B     		ldr	r3, .L112+84	@ tmp1024,
 1375 0586 1B68     		ldr	r3, [r3]	@ trg2.56_526, trg2
 1376 0588 A168     		ldr	r1, [r4, #8]	@ _527, MEM[(struct SysTick_Type *)3758153744B].VAL
 1377 058a 5B1A     		subs	r3, r3, r1	@ tmp768, trg2.56_526, _527
 1378 058c 9342     		cmp	r3, r2	@ tmp768, tmp769
 1379 058e 00F22581 		bhi	.L65	@,
 1380              	@ main.c:516: 					beep= 1;
 1381 0592 0123     		movs	r3, #1	@ beep,
 1382              	@ main.c:517: 					stat = czk;
 1383 0594 0225     		movs	r5, #2	@ stat,
 1384              	@ main.c:516: 					beep= 1;
 1385 0596 0193     		str	r3, [sp, #4]	@ beep, %sfp
 1386 0598 44E6     		b	.L66	@
 1387              	.L113:
 1388 059a 00BF     		.align	2
 1389              	.L112:
 1390 059c 20000000 		.word	.LC25
 1391 05a0 24000000 		.word	.LC26
 1392 05a4 58000000 		.word	.LC27
 1393 05a8 98000000 		.word	.LC28
 1394 05ac 00000000 		.word	.LANCHOR15
 1395 05b0 00000000 		.word	.LANCHOR16
 1396 05b4 A8000000 		.word	.LC29
 1397 05b8 C0000000 		.word	.LC30
 1398 05bc CC000000 		.word	.LC31
 1399 05c0 B4812142 		.word	1109492148
 1400 05c4 B8812142 		.word	1109492152
 1401 05c8 DC000000 		.word	.LC32
 1402 05cc EC000000 		.word	.LC33
 1403 05d0 00000000 		.word	.LANCHOR14
 1404 05d4 00010000 		.word	.LC34
 1405 05d8 18010000 		.word	.LC35
 1406 05dc 1C010000 		.word	.LC36
 1407 05e0 30010000 		.word	.LC37
 1408 05e4 CDCCCCCC 		.word	-858993459
 1409 05e8 B0812142 		.word	1109492144
 1410 05ec 20AA4400 		.word	4500000
 1411 05f0 00000000 		.word	trg2
 1412              	.L104:
 1413              	@ main.c:388: 				trg0  = SysTick->VAL;
 1414 05f4 D4F808C0 		ldr	ip, [r4, #8]	@ _29, MEM[(struct SysTick_Type *)3758153744B].VAL
 1415 05f8 B34E     		ldr	r6, .L114	@ tmp961,
 1416              	@ main.c:391: 				i2c1_read(INA219_ADDR,1,i2reg,2);
 1417 05fa 0223     		movs	r3, #2	@,
 1418 05fc 03AA     		add	r2, sp, #12	@ tmp960,,
 1419 05fe 0121     		movs	r1, #1	@,
 1420 0600 8020     		movs	r0, #128	@,
 1421              	@ main.c:388: 				trg0  = SysTick->VAL;
 1422 0602 C6F800C0 		str	ip, [r6]	@ _29, trg0
 1423              	@ main.c:391: 				i2c1_read(INA219_ADDR,1,i2reg,2);
 1424 0606 FFF7FEFF 		bl	i2c1_read	@
 1425              	@ main.c:394: 				i2c1_read( INA219_ADDR,2,i2reg,2);
ARM GAS  /tmp/ccAYxbuo.s 			page 26


 1426 060a 0223     		movs	r3, #2	@,
 1427 060c 03AA     		add	r2, sp, #12	@ tmp962,,
 1428 060e 1946     		mov	r1, r3	@,
 1429 0610 8020     		movs	r0, #128	@,
 1430 0612 FFF7FEFF 		bl	i2c1_read	@
 1431              	@ main.c:398: 				i2c1_read( INA219_ADDR,4,i2reg,2);
 1432 0616 0223     		movs	r3, #2	@,
 1433              	@ main.c:395: 				vbus = ((i2reg[1] | (i2reg[0]<<8))>>3)*4 ; //512/128
 1434 0618 BDF80CC0 		ldrh	ip, [sp, #12]	@, MEM[(u08[2] *)&i2reg]
 1435 061c AB4E     		ldr	r6, .L114+4	@ tmp1088,
 1436 061e 9CFA9CFC 		rev16	ip, ip	@ tmp469, MEM[(u08[2] *)&i2reg]
 1437 0622 CCF3CC0C 		ubfx	ip, ip, #3, #13	@ tmp472, tmp469,,
 1438 0626 0CFA03FC 		lsl	ip, ip, r3	@ tmp474, tmp472,
 1439              	@ main.c:398: 				i2c1_read( INA219_ADDR,4,i2reg,2);
 1440 062a 03AA     		add	r2, sp, #12	@ tmp963,,
 1441 062c 0421     		movs	r1, #4	@,
 1442 062e 8020     		movs	r0, #128	@,
 1443              	@ main.c:395: 				vbus = ((i2reg[1] | (i2reg[0]<<8))>>3)*4 ; //512/128
 1444 0630 A6F800C0 		strh	ip, [r6]	@ movhi	@ tmp474, vbus
 1445              	@ main.c:398: 				i2c1_read( INA219_ADDR,4,i2reg,2);
 1446 0634 FFF7FEFF 		bl	i2c1_read	@
 1447              	@ main.c:401: 				if( (cnt+1)%300==0 && stat == roz){  // pomiar rezystancji wewnetrznej
 1448 0638 4FF49670 		mov	r0, #300	@ tmp492,
 1449 063c A44B     		ldr	r3, .L114+8	@ tmp1087,
 1450              	@ main.c:399: 				dcur = (i2reg[0]<<8) | i2reg[1] ;
 1451 063e 9DF80C10 		ldrb	r1, [sp, #12]	@ zero_extendqisi2	@ i2reg, i2reg
 1452              	@ main.c:401: 				if( (cnt+1)%300==0 && stat == roz){  // pomiar rezystancji wewnetrznej
 1453 0642 1B88     		ldrh	r3, [r3]	@ cnt, cnt
 1454 0644 5A1C     		adds	r2, r3, #1	@ tmp487, cnt,
 1455 0646 A34B     		ldr	r3, .L114+12	@ tmp964,
 1456 0648 A3FB0263 		umull	r6, r3, r3, r2	@ tmp940, tmp489, tmp964, tmp487
 1457 064c 5B09     		lsrs	r3, r3, #5	@ tmp488, tmp489,
 1458 064e 00FB1323 		mls	r3, r0, r3, r2	@ tmp493, tmp492, tmp488, tmp487
 1459              	@ main.c:399: 				dcur = (i2reg[0]<<8) | i2reg[1] ;
 1460 0652 9DF80D20 		ldrb	r2, [sp, #13]	@ zero_extendqisi2	@ i2reg, i2reg
 1461 0656 42EA0122 		orr	r2, r2, r1, lsl #8	@ tmp483, i2reg, i2reg,
 1462 065a 9F49     		ldr	r1, .L114+16	@ tmp965,
 1463 065c 0A80     		strh	r2, [r1]	@ movhi	@ tmp483, dcur
 1464              	@ main.c:401: 				if( (cnt+1)%300==0 && stat == roz){  // pomiar rezystancji wewnetrznej
 1465 065e 13B9     		cbnz	r3, .L52	@ tmp493,
 1466              	@ main.c:401: 				if( (cnt+1)%300==0 && stat == roz){  // pomiar rezystancji wewnetrznej
 1467 0660 012D     		cmp	r5, #1	@ stat,
 1468 0662 00F07381 		beq	.L108	@,
 1469              	.L52:
 1470              	@ main.c:420: 				cur = dcur/10;
 1471 0666 9C4F     		ldr	r7, .L114+16	@ tmp984,
 1472              	@ main.c:418: 				i2c1_write(INA219_ADDR,(u08 *)i2cnf,3);		//star conversion
 1473 0668 0322     		movs	r2, #3	@,
 1474 066a 05A9     		add	r1, sp, #20	@ tmp983,,
 1475 066c 8020     		movs	r0, #128	@,
 1476 066e FFF7FEFF 		bl	i2c1_write	@
 1477              	@ main.c:420: 				cur = dcur/10;
 1478 0672 B7F90030 		ldrsh	r3, [r7]	@ dcur, dcur
 1479 0676 994A     		ldr	r2, .L114+20	@ tmp564,
 1480 0678 D817     		asrs	r0, r3, #31	@ tmp566, dcur,
 1481 067a 82FB0323 		smull	r2, r3, r2, r3	@ tmp941, tmp563, tmp564, dcur
 1482              	@ main.c:422: 				pow = abs(vbus*cur)/1000;
ARM GAS  /tmp/ccAYxbuo.s 			page 27


 1483 067e 934A     		ldr	r2, .L114+4	@ tmp1085,
 1484              	@ main.c:420: 				cur = dcur/10;
 1485 0680 C0EBA303 		rsb	r3, r0, r3, asr #2	@ tmp561, tmp566, tmp563,
 1486              	@ main.c:422: 				pow = abs(vbus*cur)/1000;
 1487 0684 B2F90010 		ldrsh	r1, [r2]	@ vbus, vbus
 1488              	@ main.c:420: 				cur = dcur/10;
 1489 0688 18B2     		sxth	r0, r3	@ _86, tmp561
 1490              	@ main.c:422: 				pow = abs(vbus*cur)/1000;
 1491 068a 00FB01F1 		mul	r1, r0, r1	@ tmp571, _86, vbus
 1492 068e 944B     		ldr	r3, .L114+24	@ tmp985,
 1493 0690 0029     		cmp	r1, #0	@ tmp572,
 1494 0692 B8BF     		it	lt
 1495 0694 4942     		rsblt	r1, r1, #0	@ tmp572, tmp571,
 1496 0696 A3FB0131 		umull	r3, r1, r3, r1	@ tmp942, tmp574, tmp985, tmp572
 1497              	@ main.c:423: 				cah += abs(cur);
 1498 069a 80EAE07C 		eor	ip, r0, r0, asr #31	@ tmp583, _86, _86,
 1499 069e D9F80030 		ldr	r3, [r9]	@ cah, cah
 1500              	@ main.c:420: 				cur = dcur/10;
 1501 06a2 904E     		ldr	r6, .L114+28	@ tmp986,
 1502              	@ main.c:422: 				pow = abs(vbus*cur)/1000;
 1503 06a4 41F38F11 		sbfx	r1, r1, #6, #16	@ _93, tmp574,,
 1504              	@ main.c:423: 				cah += abs(cur);
 1505 06a8 ACEBE07C 		sub	ip, ip, r0, asr #31	@ tmp583, tmp583, _86,
 1506              	@ main.c:422: 				pow = abs(vbus*cur)/1000;
 1507 06ac 8E4F     		ldr	r7, .L114+32	@ tmp987,
 1508              	@ main.c:420: 				cur = dcur/10;
 1509 06ae 3080     		strh	r0, [r6]	@ movhi	@ _86, cur
 1510              	@ main.c:423: 				cah += abs(cur);
 1511 06b0 6344     		add	r3, r3, ip	@ _97, tmp583
 1512              	@ main.c:424: 				BKP->DR1 = cah & 0x00ff;	BKP->DR2 = cah>>16;
 1513 06b2 8E48     		ldr	r0, .L114+36	@ tmp590,
 1514              	@ main.c:425: 				cwh += abs(pow);
 1515 06b4 81EAE172 		eor	r2, r1, r1, asr #31	@ tmp595, _93, _93,
 1516              	@ main.c:422: 				pow = abs(vbus*cur)/1000;
 1517 06b8 3980     		strh	r1, [r7]	@ movhi	@ _93, pow
 1518              	@ main.c:424: 				BKP->DR1 = cah & 0x00ff;	BKP->DR2 = cah>>16;
 1519 06ba 5FFA83FC 		uxtb	ip, r3	@ _99, _97
 1520              	@ main.c:425: 				cwh += abs(pow);
 1521 06be A2EBE172 		sub	r2, r2, r1, asr #31	@ tmp595, tmp595, _93,
 1522              	@ main.c:424: 				BKP->DR1 = cah & 0x00ff;	BKP->DR2 = cah>>16;
 1523 06c2 190C     		lsrs	r1, r3, #16	@ _101, _97,
 1524              	@ main.c:423: 				cah += abs(cur);
 1525 06c4 C9F80030 		str	r3, [r9]	@ _97, cah
 1526              	@ main.c:424: 				BKP->DR1 = cah & 0x00ff;	BKP->DR2 = cah>>16;
 1527 06c8 A0F804C0 		strh	ip, [r0, #4]	@ movhi	@ _99, MEM[(struct BKP_TypeDef *)1073769472B].DR1
 1528 06cc 0181     		strh	r1, [r0, #8]	@ movhi	@ _101, MEM[(struct BKP_TypeDef *)1073769472B].DR2
 1529              	@ main.c:425: 				cwh += abs(pow);
 1530 06ce 8849     		ldr	r1, .L114+40	@ tmp988,
 1531              	@ main.c:427: 				Cah = cah/36;
 1532 06d0 884E     		ldr	r6, .L114+44	@ tmp989,
 1533              	@ main.c:425: 				cwh += abs(pow);
 1534 06d2 0F46     		mov	r7, r1	@ tmp988, tmp988
 1535 06d4 0968     		ldr	r1, [r1]	@ cwh, cwh
 1536              	@ main.c:427: 				Cah = cah/36;
 1537 06d6 A6FB03C3 		umull	ip, r3, r6, r3	@ tmp943, tmp608, tmp989, _97
 1538              	@ main.c:425: 				cwh += abs(pow);
 1539 06da 0A44     		add	r2, r2, r1	@ _106, cwh
ARM GAS  /tmp/ccAYxbuo.s 			page 28


 1540              	@ main.c:426: 				BKP->DR3 = cwh & 0x00ff;	BKP->DR4 = cwh>>16;
 1541 06dc 5FFA82FC 		uxtb	ip, r2	@ _108, _106
 1542              	@ main.c:425: 				cwh += abs(pow);
 1543 06e0 3A60     		str	r2, [r7]	@ _106, cwh
 1544              	@ main.c:426: 				BKP->DR3 = cwh & 0x00ff;	BKP->DR4 = cwh>>16;
 1545 06e2 110C     		lsrs	r1, r2, #16	@ _110, _106,
 1546              	@ main.c:433: 					unt2uart ((cnt/60)%60,2);UaPutS(".");unt2uart (cnt%60,2);
 1547 06e4 7A4F     		ldr	r7, .L114+8	@ tmp1084,
 1548              	@ main.c:426: 				BKP->DR3 = cwh & 0x00ff;	BKP->DR4 = cwh>>16;
 1549 06e6 A0F80CC0 		strh	ip, [r0, #12]	@ movhi	@ _108, MEM[(struct BKP_TypeDef *)1073769472B].DR3
 1550 06ea 0182     		strh	r1, [r0, #16]	@ movhi	@ _110, MEM[(struct BKP_TypeDef *)1073769472B].DR4
 1551              	@ main.c:433: 					unt2uart ((cnt/60)%60,2);UaPutS(".");unt2uart (cnt%60,2);
 1552 06ec 3888     		ldrh	r0, [r7]	@ cnt, cnt
 1553 06ee DFF858B2 		ldr	fp, .L114+128	@ tmp621,
 1554              	@ main.c:428: 				Cwh = cwh/36;
 1555 06f2 A6FB0212 		umull	r1, r2, r6, r2	@ tmp944, tmp612, tmp991, _106
 1556              	@ main.c:433: 					unt2uart ((cnt/60)%60,2);UaPutS(".");unt2uart (cnt%60,2);
 1557 06f6 ABFB0010 		umull	r1, r0, fp, r0	@ tmp945, tmp620, tmp621, cnt
 1558 06fa 4009     		lsrs	r0, r0, #5	@ tmp623, tmp620,
 1559 06fc ABFB0061 		umull	r6, r1, fp, r0	@ tmp946, tmp624, tmp621, tmp623
 1560              	@ main.c:428: 				Cwh = cwh/36;
 1561 0700 7D4E     		ldr	r6, .L114+48	@ tmp992,
 1562              	@ main.c:433: 					unt2uart ((cnt/60)%60,2);UaPutS(".");unt2uart (cnt%60,2);
 1563 0702 4909     		lsrs	r1, r1, #5	@ tmp622, tmp624,
 1564 0704 C1EB0111 		rsb	r1, r1, r1, lsl #4	@ tmp628, tmp622, tmp622,
 1565              	@ main.c:427: 				Cah = cah/36;
 1566 0708 DB08     		lsrs	r3, r3, #3	@ tmp610, tmp608,
 1567              	@ main.c:428: 				Cwh = cwh/36;
 1568 070a D208     		lsrs	r2, r2, #3	@ tmp614, tmp612,
 1569              	@ main.c:433: 					unt2uart ((cnt/60)%60,2);UaPutS(".");unt2uart (cnt%60,2);
 1570 070c A0EB8100 		sub	r0, r0, r1, lsl #2	@ tmp630, tmp623, tmp628,
 1571              	@ main.c:428: 				Cwh = cwh/36;
 1572 0710 3260     		str	r2, [r6]	@ tmp614, Cwh
 1573              	@ main.c:427: 				Cah = cah/36;
 1574 0712 C8F80030 		str	r3, [r8]	@ tmp610, Cah
 1575              	@ main.c:432: 					PutChar = UART2_putc;
 1576 0716 794A     		ldr	r2, .L114+52	@ tmp994,
 1577 0718 794B     		ldr	r3, .L114+56	@ tmp993,
 1578              	@ main.c:433: 					unt2uart ((cnt/60)%60,2);UaPutS(".");unt2uart (cnt%60,2);
 1579 071a 0221     		movs	r1, #2	@,
 1580 071c 80B2     		uxth	r0, r0	@, tmp630
 1581              	@ main.c:432: 					PutChar = UART2_putc;
 1582 071e 1A60     		str	r2, [r3]	@ tmp994, PutChar
 1583              	@ main.c:433: 					unt2uart ((cnt/60)%60,2);UaPutS(".");unt2uart (cnt%60,2);
 1584 0720 FFF7FEFF 		bl	unt2uart	@
 1585 0724 7748     		ldr	r0, .L114+60	@,
 1586 0726 FFF7FEFF 		bl	UaPutS	@
 1587 072a 3888     		ldrh	r0, [r7]	@ cnt, cnt
 1588 072c 0221     		movs	r1, #2	@,
 1589 072e ABFB003B 		umull	r3, fp, fp, r0	@ tmp947, tmp648, tmp621, cnt
 1590 0732 4FEA5B1B 		lsr	fp, fp, #5	@ tmp646, tmp648,
 1591 0736 CBEB0B1B 		rsb	fp, fp, fp, lsl #4	@ tmp652, tmp646, tmp646,
 1592 073a A0EB8B00 		sub	r0, r0, fp, lsl #2	@ tmp654, cnt, tmp652,
 1593 073e 80B2     		uxth	r0, r0	@, tmp654
 1594 0740 FFF7FEFF 		bl	unt2uart	@
 1595              	@ main.c:434: 					UaPutS((char*)tstat[stat]);
 1596 0744 0EAB     		add	r3, sp, #56	@ tmp995,,
ARM GAS  /tmp/ccAYxbuo.s 			page 29


 1597 0746 03EBC500 		add	r0, r3, r5, lsl #3	@, tmp995, stat,
 1598 074a FFF7FEFF 		bl	UaPutS	@
 1599              	@ main.c:436: 					int2uart (vbus  ,4,3);	UaPutS("V");
 1600 074e 5F4B     		ldr	r3, .L114+4	@ tmp1082,
 1601 0750 0322     		movs	r2, #3	@,
 1602 0752 B3F90000 		ldrsh	r0, [r3]	@, vbus
 1603 0756 0421     		movs	r1, #4	@,
 1604              	@ main.c:437: 					int2uart (dcur  ,5,1);	UaPutS("mA");
 1605 0758 5F4F     		ldr	r7, .L114+16	@ tmp996,
 1606              	@ main.c:436: 					int2uart (vbus  ,4,3);	UaPutS("V");
 1607 075a FFF7FEFF 		bl	int2uart	@
 1608 075e 6A48     		ldr	r0, .L114+64	@,
 1609 0760 FFF7FEFF 		bl	UaPutS	@
 1610              	@ main.c:437: 					int2uart (dcur  ,5,1);	UaPutS("mA");
 1611 0764 0122     		movs	r2, #1	@,
 1612 0766 0521     		movs	r1, #5	@,
 1613 0768 B7F90000 		ldrsh	r0, [r7]	@, dcur
 1614 076c FFF7FEFF 		bl	int2uart	@
 1615 0770 6648     		ldr	r0, .L114+68	@,
 1616 0772 FFF7FEFF 		bl	UaPutS	@
 1617              	@ main.c:439: 					int2uart (pow   ,4,3);	UaPutS("W"); // (pow  ,4,3);
 1618 0776 5C4F     		ldr	r7, .L114+32	@ tmp997,
 1619              	@ main.c:438: 					int2uart (Cah   ,6,2);	UaPutS("mAh");
 1620 0778 0222     		movs	r2, #2	@,
 1621 077a 0621     		movs	r1, #6	@,
 1622 077c D8F80000 		ldr	r0, [r8]	@, Cah
 1623 0780 FFF7FEFF 		bl	int2uart	@
 1624 0784 6248     		ldr	r0, .L114+72	@,
 1625 0786 FFF7FEFF 		bl	UaPutS	@
 1626              	@ main.c:439: 					int2uart (pow   ,4,3);	UaPutS("W"); // (pow  ,4,3);
 1627 078a 0322     		movs	r2, #3	@,
 1628 078c 0421     		movs	r1, #4	@,
 1629 078e B7F90000 		ldrsh	r0, [r7]	@, pow
 1630 0792 FFF7FEFF 		bl	int2uart	@
 1631 0796 5F48     		ldr	r0, .L114+76	@,
 1632 0798 FFF7FEFF 		bl	UaPutS	@
 1633              	@ main.c:440: 					int2uart (Cwh   ,7,2);	UaPutS("mWh");
 1634 079c 0222     		movs	r2, #2	@,
 1635 079e 0721     		movs	r1, #7	@,
 1636 07a0 3068     		ldr	r0, [r6]	@, Cwh
 1637 07a2 FFF7FEFF 		bl	int2uart	@
 1638 07a6 5C48     		ldr	r0, .L114+80	@,
 1639 07a8 FFF7FEFF 		bl	UaPutS	@
 1640              	@ main.c:441: 					int2uart (Rwa[1],4,3);	UaPutS("ohm");
 1641 07ac 5B4B     		ldr	r3, .L114+84	@ tmp999,
 1642 07ae 0322     		movs	r2, #3	@,
 1643 07b0 5868     		ldr	r0, [r3, #4]	@, Rwa
 1644 07b2 0421     		movs	r1, #4	@,
 1645 07b4 FFF7FEFF 		bl	int2uart	@
 1646 07b8 5948     		ldr	r0, .L114+88	@,
 1647 07ba FFF7FEFF 		bl	UaPutS	@
 1648              	@ main.c:443: 					UaPutS("\r ");
 1649 07be 5948     		ldr	r0, .L114+92	@,
 1650 07c0 FFF7FEFF 		bl	UaPutS	@
 1651              	@ main.c:460: 					else coile = 2;
 1652 07c4 0222     		movs	r2, #2	@ tmp679,
 1653              	@ main.c:461: 					if( (cnt)%coile==0 ){  // pomiar rezystancji wewnetrznej
ARM GAS  /tmp/ccAYxbuo.s 			page 30


 1654 07c6 424F     		ldr	r7, .L114+8	@ tmp1081,
 1655              	@ main.c:460: 					else coile = 2;
 1656 07c8 5749     		ldr	r1, .L114+96	@ tmp1000,
 1657              	@ main.c:461: 					if( (cnt)%coile==0 ){  // pomiar rezystancji wewnetrznej
 1658 07ca 3B88     		ldrh	r3, [r7]	@ cnt.31_134, cnt
 1659              	@ main.c:460: 					else coile = 2;
 1660 07cc 0A70     		strb	r2, [r1]	@ tmp679, coile
 1661              	@ main.c:461: 					if( (cnt)%coile==0 ){  // pomiar rezystancji wewnetrznej
 1662 07ce 13F0010B 		ands	fp, r3, #1	@ tmp684, cnt.31_134,
 1663 07d2 23D0     		beq	.L109	@,
 1664              	.L56:
 1665              	@ main.c:474: 					cnt++;
 1666 07d4 3E4A     		ldr	r2, .L114+8	@ tmp1078,
 1667 07d6 0133     		adds	r3, r3, #1	@ tmp701, cnt.31_134,
 1668 07d8 1380     		strh	r3, [r2]	@ movhi	@ tmp701, cnt
 1669 07da DCE4     		b	.L51	@
 1670              	.L65:
 1671              	@ main.c:517: 					stat = czk;
 1672 07dc 0225     		movs	r5, #2	@ stat,
 1673              	@ main.c:522: 				trg2  = SysTick->VAL;	
 1674 07de A368     		ldr	r3, [r4, #8]	@ _521, MEM[(struct SysTick_Type *)3758153744B].VAL
 1675 07e0 524A     		ldr	r2, .L114+100	@ tmp1059,
 1676 07e2 1360     		str	r3, [r2]	@ _521, trg2
 1677              	.L84:
 1678              	@ main.c:523: 				if(beep){	BEP ^= 1; }
 1679 07e4 0123     		movs	r3, #1	@ beep,
 1680 07e6 524A     		ldr	r2, .L114+104	@ tmp779,
 1681 07e8 0193     		str	r3, [sp, #4]	@ beep, %sfp
 1682 07ea 1368     		ldr	r3, [r2]	@ _172, MEM[(volatile long unsigned int *)1109492152B]
 1683 07ec 83F00103 		eor	r3, r3, #1	@ _173, _172,
 1684 07f0 1360     		str	r3, [r2]	@ _173, MEM[(volatile long unsigned int *)1109492152B]
 1685 07f2 17E5     		b	.L66	@
 1686              	.L107:
 1687              	@ main.c:505: 					if(vbus < 2800 && vbus > 2000 && stat==rok) { // koniec rozladowania konserwujac
 1688 07f4 052D     		cmp	r5, #5	@ stat,
 1689 07f6 7FF4B3AE 		bne	.L64	@,
 1690              	@ main.c:506:           ROZ = 0;
 1691 07fa 0023     		movs	r3, #0	@ tmp753,
 1692              	@ main.c:507: 					LAD = 1;
 1693 07fc 0121     		movs	r1, #1	@ tmp755,
 1694 07fe 4D4A     		ldr	r2, .L114+108	@ tmp754,
 1695              	@ main.c:506:           ROZ = 0;
 1696 0800 4D4D     		ldr	r5, .L114+112	@ tmp1021,
 1697 0802 2B60     		str	r3, [r5]	@ tmp753, MEM[(volatile long unsigned int *)1109492144B]
 1698              	@ main.c:507: 					LAD = 1;
 1699 0804 1160     		str	r1, [r2]	@ tmp755, MEM[(volatile long unsigned int *)1109492148B]
 1700              	@ main.c:513: 					if( (Cah > vr1*70 || vbus > 4200) && stat == kon ){ // koniec ladowania konserwu
 1701 0806 D8F80020 		ldr	r2, [r8]	@ Cah, Cah
 1702              	@ main.c:510: 					cwh = 0;
 1703 080a 3949     		ldr	r1, .L114+40	@ tmp1022,
 1704              	@ main.c:513: 					if( (Cah > vr1*70 || vbus > 4200) && stat == kon ){ // koniec ladowania konserwu
 1705 080c 8242     		cmp	r2, r0	@ Cah, _591
 1706              	@ main.c:509: 					cah = 0;
 1707 080e C9F80030 		str	r3, [r9]	@ tmp753, cah
 1708              	@ main.c:510: 					cwh = 0;
 1709 0812 0B60     		str	r3, [r1]	@ tmp753, cwh
 1710              	@ main.c:513: 					if( (Cah > vr1*70 || vbus > 4200) && stat == kon ){ // koniec ladowania konserwu
ARM GAS  /tmp/ccAYxbuo.s 			page 31


 1711 0814 3FF6B0AE 		bhi	.L68	@,
 1712              	@ main.c:508: 					stat = kon;
 1713 0818 0425     		movs	r5, #4	@ stat,
 1714 081a F6E4     		b	.L57	@
 1715              	.L109:
 1716              	@ main.c:463: 						int2uarz (vbus  ,4,0); UaPutC(',');
 1717 081c 2B4B     		ldr	r3, .L114+4	@ tmp1080,
 1718              	@ main.c:462: 						PutChar = UART1_putc; //przypisanie callback 
 1719 081e 384E     		ldr	r6, .L114+56	@ tmp1001,
 1720              	@ main.c:463: 						int2uarz (vbus  ,4,0); UaPutC(',');
 1721 0820 B3F90000 		ldrsh	r0, [r3]	@, vbus
 1722              	@ main.c:462: 						PutChar = UART1_putc; //przypisanie callback 
 1723 0824 454B     		ldr	r3, .L114+116	@ tmp1002,
 1724              	@ main.c:463: 						int2uarz (vbus  ,4,0); UaPutC(',');
 1725 0826 5A46     		mov	r2, fp	@, tmp684
 1726 0828 0421     		movs	r1, #4	@,
 1727              	@ main.c:462: 						PutChar = UART1_putc; //przypisanie callback 
 1728 082a 3360     		str	r3, [r6]	@ tmp1002, PutChar
 1729              	@ main.c:463: 						int2uarz (vbus  ,4,0); UaPutC(',');
 1730 082c FFF7FEFF 		bl	int2uarz	@
 1731 0830 2C20     		movs	r0, #44	@,
 1732 0832 FFF7FEFF 		bl	UaPutC	@
 1733              	@ main.c:464: 						int2uarz (cur   ,4,0); UaPutC(',');
 1734 0836 2B4B     		ldr	r3, .L114+28	@ tmp1003,
 1735 0838 5A46     		mov	r2, fp	@, tmp684
 1736 083a B3F90000 		ldrsh	r0, [r3]	@, cur
 1737 083e 0421     		movs	r1, #4	@,
 1738 0840 FFF7FEFF 		bl	int2uarz	@
 1739 0844 2C20     		movs	r0, #44	@,
 1740 0846 FFF7FEFF 		bl	UaPutC	@
 1741              	@ main.c:465: 						int2uarz (Cah   ,6,0); UaPutC(',');
 1742 084a 5A46     		mov	r2, fp	@, tmp684
 1743 084c 0621     		movs	r1, #6	@,
 1744 084e D8F80000 		ldr	r0, [r8]	@, Cah
 1745 0852 FFF7FEFF 		bl	int2uarz	@
 1746 0856 2C20     		movs	r0, #44	@,
 1747 0858 FFF7FEFF 		bl	UaPutC	@
 1748              	@ main.c:466: 						int2uarz (pow   ,4,0); UaPutC(',');
 1749 085c 224B     		ldr	r3, .L114+32	@ tmp1004,
 1750 085e 5A46     		mov	r2, fp	@, tmp684
 1751 0860 B3F90000 		ldrsh	r0, [r3]	@, pow
 1752 0864 0421     		movs	r1, #4	@,
 1753 0866 FFF7FEFF 		bl	int2uarz	@
 1754 086a 2C20     		movs	r0, #44	@,
 1755 086c FFF7FEFF 		bl	UaPutC	@
 1756              	@ main.c:467: 						int2uarz (Cwh   ,7,0); UaPutC(',');
 1757 0870 214B     		ldr	r3, .L114+48	@ tmp1005,
 1758 0872 5A46     		mov	r2, fp	@, tmp684
 1759 0874 1868     		ldr	r0, [r3]	@, Cwh
 1760 0876 0721     		movs	r1, #7	@,
 1761 0878 FFF7FEFF 		bl	int2uarz	@
 1762 087c 2C20     		movs	r0, #44	@,
 1763 087e FFF7FEFF 		bl	UaPutC	@
 1764              	@ main.c:470: 						PutChar = UART2_putc;
 1765 0882 1E4A     		ldr	r2, .L114+52	@ tmp1007,
 1766 0884 3B88     		ldrh	r3, [r7]	@ cnt.31_134, cnt
 1767 0886 3260     		str	r2, [r6]	@ tmp1007, PutChar
ARM GAS  /tmp/ccAYxbuo.s 			page 32


 1768 0888 A4E7     		b	.L56	@
 1769              	.L61:
 1770              	@ main.c:491: 					LAD = 0;
 1771 088a 0023     		movs	r3, #0	@ tmp730,
 1772              	@ main.c:493: 					beep= 1;
 1773 088c 0121     		movs	r1, #1	@ beep,
 1774              	@ main.c:491: 					LAD = 0;
 1775 088e 294A     		ldr	r2, .L114+108	@ tmp729,
 1776              	@ main.c:493: 					beep= 1;
 1777 0890 0191     		str	r1, [sp, #4]	@ beep, %sfp
 1778              	@ main.c:494: 					stat = czk;
 1779 0892 0225     		movs	r5, #2	@ stat,
 1780              	@ main.c:491: 					LAD = 0;
 1781 0894 1360     		str	r3, [r2]	@ tmp730, MEM[(volatile long unsigned int *)1109492148B]
 1782              	@ main.c:492: 					ROZ = 0;
 1783 0896 42F8043C 		str	r3, [r2, #-4]	@ tmp730, MEM[(volatile long unsigned int *)1109492144B]
 1784 089a B6E4     		b	.L57	@
 1785              	.L106:
 1786              	@ main.c:499: 					ROZ = 1;
 1787 089c 0123     		movs	r3, #1	@ tmp740,
 1788              	@ main.c:498: 					LAD = 0;
 1789 089e 254A     		ldr	r2, .L114+108	@ tmp737,
 1790              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 1791 08a0 2749     		ldr	r1, .L114+120	@ tmp746,
 1792              	@ main.c:498: 					LAD = 0;
 1793 08a2 1560     		str	r5, [r2]	@ stat, MEM[(volatile long unsigned int *)1109492148B]
 1794              	@ main.c:499: 					ROZ = 1;
 1795 08a4 42F8043C 		str	r3, [r2, #-4]	@ tmp740, MEM[(volatile long unsigned int *)1109492144B]
 1796              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 1797 08a8 A368     		ldr	r3, [r4, #8]	@ _422, MEM[(struct SysTick_Type *)3758153744B].VAL
 1798 08aa 264A     		ldr	r2, .L114+124	@ tmp1018,
 1799 08ac 1360     		str	r3, [r2]	@ _422, delay_us
 1800              	.L63:
 1801              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 1802 08ae 254B     		ldr	r3, .L114+124	@ tmp1019,
 1803 08b0 1B68     		ldr	r3, [r3]	@ delay_us.69_423, delay_us
 1804 08b2 A268     		ldr	r2, [r4, #8]	@ _424, MEM[(struct SysTick_Type *)3758153744B].VAL
 1805 08b4 9B1A     		subs	r3, r3, r2	@ tmp745, delay_us.69_423, _424
 1806 08b6 8B42     		cmp	r3, r1	@ tmp745, tmp746
 1807 08b8 F9D9     		bls	.L63	@,
 1808              	@ main.c:501: 					ROZ = 0;
 1809 08ba 0021     		movs	r1, #0	@ tmp748,
 1810              	@ main.c:502: 					LAD = 1;
 1811 08bc 0122     		movs	r2, #1	@ tmp750,
 1812 08be 1D4B     		ldr	r3, .L114+108	@ tmp749,
 1813              	@ main.c:501: 					ROZ = 0;
 1814 08c0 1D48     		ldr	r0, .L114+112	@ tmp1020,
 1815 08c2 0160     		str	r1, [r0]	@ tmp748, MEM[(volatile long unsigned int *)1109492144B]
 1816              	@ main.c:502: 					LAD = 1;
 1817 08c4 1A60     		str	r2, [r3]	@ tmp750, MEM[(volatile long unsigned int *)1109492148B]
 1818 08c6 A0E4     		b	.L57	@
 1819              	.L115:
 1820              		.align	2
 1821              	.L114:
 1822 08c8 00000000 		.word	trg0
 1823 08cc 00000000 		.word	.LANCHOR4
 1824 08d0 00000000 		.word	.LANCHOR6
ARM GAS  /tmp/ccAYxbuo.s 			page 33


 1825 08d4 B5814E1B 		.word	458129845
 1826 08d8 00000000 		.word	.LANCHOR5
 1827 08dc 67666666 		.word	1717986919
 1828 08e0 D34D6210 		.word	274877907
 1829 08e4 00000000 		.word	.LANCHOR8
 1830 08e8 00000000 		.word	.LANCHOR10
 1831 08ec 006C0040 		.word	1073769472
 1832 08f0 00000000 		.word	.LANCHOR3
 1833 08f4 398EE338 		.word	954437177
 1834 08f8 00000000 		.word	.LANCHOR12
 1835 08fc 00000000 		.word	UART2_putc
 1836 0900 00000000 		.word	PutChar
 1837 0904 00000000 		.word	.LC17
 1838 0908 04000000 		.word	.LC18
 1839 090c 08000000 		.word	.LC19
 1840 0910 0C000000 		.word	.LC20
 1841 0914 10000000 		.word	.LC21
 1842 0918 14000000 		.word	.LC22
 1843 091c 00000000 		.word	.LANCHOR9
 1844 0920 18000000 		.word	.LC23
 1845 0924 1C000000 		.word	.LC24
 1846 0928 00000000 		.word	.LANCHOR13
 1847 092c 00000000 		.word	trg2
 1848 0930 B8812142 		.word	1109492152
 1849 0934 B4812142 		.word	1109492148
 1850 0938 B0812142 		.word	1109492144
 1851 093c 00000000 		.word	UART1_putc
 1852 0940 CFDD0600 		.word	449999
 1853 0944 00000000 		.word	delay_us
 1854 0948 89888888 		.word	-2004318071
 1855              	.L108:
 1856              	@ main.c:402: 					cnt2++;
 1857 094c 3048     		ldr	r0, .L116	@ tmp966,
 1858              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 1859 094e 3149     		ldr	r1, .L116+4	@ tmp513,
 1860              	@ main.c:402: 					cnt2++;
 1861 0950 0268     		ldr	r2, [r0]	@ cnt2, cnt2
 1862 0952 0132     		adds	r2, r2, #1	@ tmp504, cnt2,
 1863 0954 0260     		str	r2, [r0]	@ tmp504, cnt2
 1864              	@ main.c:403: 					ROZ = 0;
 1865 0956 304A     		ldr	r2, .L116+8	@ tmp968,
 1866 0958 1360     		str	r3, [r2]	@ tmp493, MEM[(volatile long unsigned int *)1109492144B]
 1867              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 1868 095a A368     		ldr	r3, [r4, #8]	@ _418, MEM[(struct SysTick_Type *)3758153744B].VAL
 1869 095c 2F4A     		ldr	r2, .L116+12	@ tmp969,
 1870 095e 1360     		str	r3, [r2]	@ _418, delay_us
 1871              	.L53:
 1872              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 1873 0960 2E4B     		ldr	r3, .L116+12	@ tmp970,
 1874 0962 1B68     		ldr	r3, [r3]	@ delay_us.69_419, delay_us
 1875 0964 A268     		ldr	r2, [r4, #8]	@ _420, MEM[(struct SysTick_Type *)3758153744B].VAL
 1876 0966 9B1A     		subs	r3, r3, r2	@ tmp512, delay_us.69_419, _420
 1877 0968 8B42     		cmp	r3, r1	@ tmp512, tmp513
 1878 096a F9D9     		bls	.L53	@,
 1879              	@ main.c:405: 					i2c1_write(INA219_ADDR,(u08 *)i2trig_bus,3);		//star conversion
 1880 096c 0322     		movs	r2, #3	@,
 1881 096e 06A9     		add	r1, sp, #24	@ tmp971,,
ARM GAS  /tmp/ccAYxbuo.s 			page 34


 1882 0970 8020     		movs	r0, #128	@,
 1883 0972 FFF7FEFF 		bl	i2c1_write	@
 1884              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 1885 0976 A368     		ldr	r3, [r4, #8]	@ _414, MEM[(struct SysTick_Type *)3758153744B].VAL
 1886 0978 284A     		ldr	r2, .L116+12	@ tmp972,
 1887              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 1888 097a 2949     		ldr	r1, .L116+16	@ tmp520,
 1889              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 1890 097c 1360     		str	r3, [r2]	@ _414, delay_us
 1891              	.L54:
 1892              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 1893 097e 274B     		ldr	r3, .L116+12	@ tmp973,
 1894 0980 1B68     		ldr	r3, [r3]	@ delay_us.69_415, delay_us
 1895 0982 A268     		ldr	r2, [r4, #8]	@ _416, MEM[(struct SysTick_Type *)3758153744B].VAL
 1896 0984 9B1A     		subs	r3, r3, r2	@ tmp519, delay_us.69_415, _416
 1897 0986 8B42     		cmp	r3, r1	@ tmp519, tmp520
 1898 0988 F9D9     		bls	.L54	@,
 1899              	@ main.c:407: 					i2c1_read( INA219_ADDR,2,i2reg,2);
 1900 098a 0223     		movs	r3, #2	@,
 1901 098c 03AA     		add	r2, sp, #12	@ tmp974,,
 1902 098e 1946     		mov	r1, r3	@,
 1903 0990 8020     		movs	r0, #128	@,
 1904 0992 FFF7FEFF 		bl	i2c1_read	@
 1905              	@ main.c:410: 					ROZ = 1;
 1906 0996 0122     		movs	r2, #1	@ tmp533,
 1907              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 1908 0998 42F22731 		movw	r1, #8999	@ tmp539,
 1909              	@ main.c:408: 					ve = (((i2reg[0]<<8) | i2reg[1])>>3)*515/128 ;
 1910 099c BDF80C30 		ldrh	r3, [sp, #12]	@, MEM[(u08[2] *)&i2reg]
 1911              	@ main.c:410: 					ROZ = 1;
 1912 09a0 1D48     		ldr	r0, .L116+8	@ tmp975,
 1913              	@ main.c:408: 					ve = (((i2reg[0]<<8) | i2reg[1])>>3)*515/128 ;
 1914 09a2 5BBA     		rev16	r3, r3	@ tmp522, MEM[(u08[2] *)&i2reg]
 1915 09a4 C3F3CC03 		ubfx	r3, r3, #3, #13	@ tmp525, tmp522,,
 1916              	@ main.c:410: 					ROZ = 1;
 1917 09a8 0260     		str	r2, [r0]	@ tmp533, MEM[(volatile long unsigned int *)1109492144B]
 1918              	@ main.c:408: 					ve = (((i2reg[0]<<8) | i2reg[1])>>3)*515/128 ;
 1919 09aa 03EB0320 		add	r0, r3, r3, lsl #8	@ tmp528, tmp525, tmp525,
 1920 09ae 03EB4003 		add	r3, r3, r0, lsl #1	@ tmp530, tmp525, tmp528,
 1921              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 1922 09b2 A268     		ldr	r2, [r4, #8]	@ _410, MEM[(struct SysTick_Type *)3758153744B].VAL
 1923              	@ main.c:408: 					ve = (((i2reg[0]<<8) | i2reg[1])>>3)*515/128 ;
 1924 09b4 43F3CF10 		sbfx	r0, r3, #7, #16	@ _69, tmp530,,
 1925              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 1926 09b8 184B     		ldr	r3, .L116+12	@ tmp976,
 1927 09ba 1A60     		str	r2, [r3]	@ _410, delay_us
 1928              	.L55:
 1929              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 1930 09bc 174B     		ldr	r3, .L116+12	@ tmp977,
 1931 09be 1B68     		ldr	r3, [r3]	@ delay_us.69_411, delay_us
 1932 09c0 A268     		ldr	r2, [r4, #8]	@ _412, MEM[(struct SysTick_Type *)3758153744B].VAL
 1933 09c2 9B1A     		subs	r3, r3, r2	@ tmp538, delay_us.69_411, _412
 1934 09c4 8B42     		cmp	r3, r1	@ tmp538, tmp539
 1935 09c6 F9D9     		bls	.L55	@,
 1936              	@ main.c:412: 					rw = abs(1000*(ve-vbus)/cur);
 1937 09c8 4FF47A73 		mov	r3, #1000	@ tmp544,
 1938 09cc 154A     		ldr	r2, .L116+20	@ tmp1086,
ARM GAS  /tmp/ccAYxbuo.s 			page 35


 1939 09ce B2F90020 		ldrsh	r2, [r2]	@ vbus, vbus
 1940 09d2 821A     		subs	r2, r0, r2	@ tmp542, _69, vbus
 1941 09d4 03FB02F3 		mul	r3, r3, r2	@ tmp543, tmp544, tmp542
 1942 09d8 134A     		ldr	r2, .L116+24	@ tmp978,
 1943              	@ main.c:413: 					Rwa[0] += rw;
 1944 09da 1448     		ldr	r0, .L116+28	@ tmp979,
 1945              	@ main.c:412: 					rw = abs(1000*(ve-vbus)/cur);
 1946 09dc B2F90010 		ldrsh	r1, [r2]	@ cur, cur
 1947              	@ main.c:413: 					Rwa[0] += rw;
 1948 09e0 0268     		ldr	r2, [r0]	@ Rwa, Rwa
 1949              	@ main.c:412: 					rw = abs(1000*(ve-vbus)/cur);
 1950 09e2 93FBF1F3 		sdiv	r3, r3, r1	@ tmp548, tmp543, cur
 1951              	@ main.c:414: 					Rwa[1] = Rwa[0]/cnt2;
 1952 09e6 0A49     		ldr	r1, .L116	@ tmp980,
 1953              	@ main.c:412: 					rw = abs(1000*(ve-vbus)/cur);
 1954 09e8 002B     		cmp	r3, #0	@ tmp549,
 1955 09ea B8BF     		it	lt
 1956 09ec 5B42     		rsblt	r3, r3, #0	@ tmp549, tmp548,
 1957              	@ main.c:413: 					Rwa[0] += rw;
 1958 09ee 1BB2     		sxth	r3, r3	@ tmp550, tmp549
 1959              	@ main.c:414: 					Rwa[1] = Rwa[0]/cnt2;
 1960 09f0 0968     		ldr	r1, [r1]	@ cnt2, cnt2
 1961              	@ main.c:413: 					Rwa[0] += rw;
 1962 09f2 1344     		add	r3, r3, r2	@ _82, Rwa
 1963              	@ main.c:414: 					Rwa[1] = Rwa[0]/cnt2;
 1964 09f4 B3FBF1F1 		udiv	r1, r3, r1	@ tmp557, _82, cnt2
 1965 09f8 C0E90031 		strd	r3, r1, [r0]	@ _82, tmp557, tmp981
 1966 09fc 33E6     		b	.L52	@
 1967              	.L105:
 1968              	@ main.c:593: 						if(str[0]=='t') { stat = rok; LAD = 0;	ROZ = 1; }
 1969 09fe 0122     		movs	r2, #1	@ tmp857,
 1970 0a00 0B49     		ldr	r1, .L116+32	@ tmp854,
 1971 0a02 0525     		movs	r5, #5	@ stat,
 1972 0a04 0B60     		str	r3, [r1]	@ tmp855, MEM[(volatile long unsigned int *)1109492148B]
 1973              	@ main.c:578: 						beep= 0;
 1974 0a06 0193     		str	r3, [sp, #4]	@ tmp855, %sfp
 1975              	@ main.c:593: 						if(str[0]=='t') { stat = rok; LAD = 0;	ROZ = 1; }
 1976 0a08 034B     		ldr	r3, .L116+8	@ tmp1048,
 1977 0a0a 1A60     		str	r2, [r3]	@ tmp857, MEM[(volatile long unsigned int *)1109492144B]
 1978 0a0c FFF7BBBB 		b	.L83	@
 1979              	.L117:
 1980              		.align	2
 1981              	.L116:
 1982 0a10 00000000 		.word	.LANCHOR7
 1983 0a14 1FAA4400 		.word	4499999
 1984 0a18 B0812142 		.word	1109492144
 1985 0a1c 00000000 		.word	delay_us
 1986 0a20 1FBF0200 		.word	179999
 1987 0a24 00000000 		.word	.LANCHOR4
 1988 0a28 00000000 		.word	.LANCHOR8
 1989 0a2c 00000000 		.word	.LANCHOR9
 1990 0a30 B4812142 		.word	1109492148
 1991              		.size	lion_updown, .-lion_updown
 1992              		.section	.text.startup.main,"ax",%progbits
 1993              		.align	1
 1994              		.p2align 2,,3
 1995              		.global	main
ARM GAS  /tmp/ccAYxbuo.s 			page 36


 1996              		.syntax unified
 1997              		.thumb
 1998              		.thumb_func
 1999              		.fpu softvfp
 2000              		.type	main, %function
 2001              	main:
 2002              		@ Volatile: function does not return.
 2003              		@ args = 0, pretend = 0, frame = 0
 2004              		@ frame_needed = 0, uses_anonymous_args = 0
 2005              	@ main.c:5711: 	RCC_CR_HSEON_bb = 1;						// enable HSE clock
 2006 0000 0121     		movs	r1, #1	@ tmp123,
 2007              	@ main.c:227: int main(void){
 2008 0002 08B5     		push	{r3, lr}	@
 2009              	@ main.c:5711: 	RCC_CR_HSEON_bb = 1;						// enable HSE clock
 2010 0004 1B4B     		ldr	r3, .L128	@ tmp122,
 2011              	@ main.c:5712: 	while (!RCC_CR_HSERDY_bb);			// wait for stable clock
 2012 0006 1C4A     		ldr	r2, .L128+4	@ tmp124,
 2013              	@ main.c:5711: 	RCC_CR_HSEON_bb = 1;						// enable HSE clock
 2014 0008 1960     		str	r1, [r3]	@ tmp123, MEM[(volatile long unsigned int *)1111621696B]
 2015              	.L119:
 2016              	@ main.c:5712: 	while (!RCC_CR_HSERDY_bb);			// wait for stable clock
 2017 000a 1368     		ldr	r3, [r2]	@ _14, MEM[(volatile long unsigned int *)1111621700B]
 2018 000c 002B     		cmp	r3, #0	@ _14
 2019 000e FCD0     		beq	.L119	@
 2020              	@ main.c:5716: 	RCC_CR_PLLON_bb = 1;						// enable PLL
 2021 0010 0124     		movs	r4, #1	@ tmp129,
 2022              	@ main.c:5714: 	RCC->CFGR |= ((mul - 2)<<RCC_CFGR_PLLMUL_bit)|RCC_CFGR_PLLSRC|RCC_CFGR_PPRE1_DIV2;	
 2023 0012 1A49     		ldr	r1, .L128+8	@ tmp125,
 2024              	@ main.c:5716: 	RCC_CR_PLLON_bb = 1;						// enable PLL
 2025 0014 1A48     		ldr	r0, .L128+12	@ tmp128,
 2026              	@ main.c:5714: 	RCC->CFGR |= ((mul - 2)<<RCC_CFGR_PLLMUL_bit)|RCC_CFGR_PLLSRC|RCC_CFGR_PPRE1_DIV2;	
 2027 0016 4B68     		ldr	r3, [r1, #4]	@ _15, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 2028              	@ main.c:5717: 	while (!RCC_CR_PLLRDY_bb);			// wait for PLL lock
 2029 0018 1A4A     		ldr	r2, .L128+16	@ tmp130,
 2030              	@ main.c:5714: 	RCC->CFGR |= ((mul - 2)<<RCC_CFGR_PLLMUL_bit)|RCC_CFGR_PLLSRC|RCC_CFGR_PPRE1_DIV2;	
 2031 001a 43F4E813 		orr	r3, r3, #1900544	@ _20, _15,
 2032 001e 43F48063 		orr	r3, r3, #1024	@ _20, _20,
 2033 0022 4B60     		str	r3, [r1, #4]	@ _20, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 2034              	@ main.c:5716: 	RCC_CR_PLLON_bb = 1;						// enable PLL
 2035 0024 0460     		str	r4, [r0]	@ tmp129, MEM[(volatile long unsigned int *)1111621728B]
 2036              	.L120:
 2037              	@ main.c:5717: 	while (!RCC_CR_PLLRDY_bb);			// wait for PLL lock
 2038 0026 1368     		ldr	r3, [r2]	@ _21, MEM[(volatile long unsigned int *)1111621732B]
 2039 0028 002B     		cmp	r3, #0	@ _21
 2040 002a FCD0     		beq	.L120	@
 2041              	@ main.c:5719: 	RCC->CFGR |= RCC_CFGR_SW_PLL;		// change SYSCLK to PLL
 2042 002c 134B     		ldr	r3, .L128+8	@ tmp131,
 2043              	@ main.c:5720: 	while (((RCC->CFGR) & RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);	// wait for switch
 2044 002e 1A46     		mov	r2, r3	@ tmp133, tmp131
 2045              	@ main.c:5719: 	RCC->CFGR |= RCC_CFGR_SW_PLL;		// change SYSCLK to PLL
 2046 0030 5968     		ldr	r1, [r3, #4]	@ _22, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 2047 0032 41F00201 		orr	r1, r1, #2	@ _23, _22,
 2048 0036 5960     		str	r1, [r3, #4]	@ _23, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 2049              	.L121:
 2050              	@ main.c:5720: 	while (((RCC->CFGR) & RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);	// wait for switch
 2051 0038 5368     		ldr	r3, [r2, #4]	@ _24, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 2052 003a 03F00C03 		and	r3, r3, #12	@ tmp134, _24,
ARM GAS  /tmp/ccAYxbuo.s 			page 37


 2053 003e 082B     		cmp	r3, #8	@ tmp134,
 2054 0040 FAD1     		bne	.L121	@,
 2055              	@ main.c:5723: 	RCC->APB2ENR = RCC_APB2ENR_IOPAEN | RCC_APB2ENR_IOPBEN | RCC_APB2ENR_IOPCEN | RCC_A
 2056 0042 1D20     		movs	r0, #29	@ tmp138,
 2057              	@ main.c:186: 	SCB->VTOR = NVIC_VectTab_RAM;
 2058 0044 4FF00056 		mov	r6, #536870912	@ tmp136,
 2059              	@ main.c:194: 	AFIO->MAPR = AFIO_MAPR_SWJ_CFG_1; // enable pin PA15=JTDI,PB3=JTDO,PB4=JNTRST,
 2060 0048 4FF00075 		mov	r5, #33554432	@ tmp140,
 2061              	@ main.c:5517: 	SysTick->CTRL = SysTick_CTRL_TICKINT|SysTick_CTRL_ENABLE; // enable SysTick
 2062 004c 0321     		movs	r1, #3	@ tmp144,
 2063              	@ main.c:186: 	SCB->VTOR = NVIC_VectTab_RAM;
 2064 004e 0E4B     		ldr	r3, .L128+20	@ tmp135,
 2065              	@ main.c:194: 	AFIO->MAPR = AFIO_MAPR_SWJ_CFG_1; // enable pin PA15=JTDI,PB3=JTDO,PB4=JNTRST,
 2066 0050 0E4C     		ldr	r4, .L128+24	@ tmp139,
 2067              	@ main.c:186: 	SCB->VTOR = NVIC_VectTab_RAM;
 2068 0052 9E60     		str	r6, [r3, #8]	@ tmp136, MEM[(struct SCB_Type *)3758157056B].VTOR
 2069              	@ main.c:5723: 	RCC->APB2ENR = RCC_APB2ENR_IOPAEN | RCC_APB2ENR_IOPBEN | RCC_APB2ENR_IOPCEN | RCC_A
 2070 0054 9061     		str	r0, [r2, #24]	@ tmp138, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 2071              	@ main.c:5516: 	SysTick->LOAD = STCLK_LD - 1;    // 72/8/SysTick_LOAD interrupt every x s
 2072 0056 0E48     		ldr	r0, .L128+28	@ tmp142,
 2073 0058 A3F54F63 		sub	r3, r3, #3312	@ tmp141, tmp141,
 2074              	@ main.c:231: 		 GPIOC->CRH = (GPIOC->CRH & 0xff0fffff) | 0x00100000;	// LED Blue  PC13		
 2075 005c 0D4A     		ldr	r2, .L128+32	@ tmp145,
 2076              	@ main.c:194: 	AFIO->MAPR = AFIO_MAPR_SWJ_CFG_1; // enable pin PA15=JTDI,PB3=JTDO,PB4=JNTRST,
 2077 005e 6560     		str	r5, [r4, #4]	@ tmp140, MEM[(struct AFIO_TypeDef *)1073807360B].MAPR
 2078              	@ main.c:5516: 	SysTick->LOAD = STCLK_LD - 1;    // 72/8/SysTick_LOAD interrupt every x s
 2079 0060 5860     		str	r0, [r3, #4]	@ tmp142, MEM[(struct SysTick_Type *)3758153744B].LOAD
 2080              	@ main.c:5517: 	SysTick->CTRL = SysTick_CTRL_TICKINT|SysTick_CTRL_ENABLE; // enable SysTick
 2081 0062 1960     		str	r1, [r3]	@ tmp144, MEM[(struct SysTick_Type *)3758153744B].CTRL
 2082              	@ main.c:231: 		 GPIOC->CRH = (GPIOC->CRH & 0xff0fffff) | 0x00100000;	// LED Blue  PC13		
 2083 0064 5368     		ldr	r3, [r2, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 2084 0066 23F47003 		bic	r3, r3, #15728640	@ tmp146, _1,
 2085 006a 43F48013 		orr	r3, r3, #1048576	@ _3, tmp146,
 2086 006e 5360     		str	r3, [r2, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 2087              	@ main.c:240: 		lion_updown();
 2088 0070 FFF7FEFF 		bl	lion_updown	@
 2089              	.L129:
 2090              		.align	2
 2091              	.L128:
 2092 0074 40004242 		.word	1111621696
 2093 0078 44004242 		.word	1111621700
 2094 007c 00100240 		.word	1073876992
 2095 0080 60004242 		.word	1111621728
 2096 0084 64004242 		.word	1111621732
 2097 0088 00ED00E0 		.word	-536810240
 2098 008c 00000140 		.word	1073807360
 2099 0090 3F548900 		.word	8999999
 2100 0094 00100140 		.word	1073811456
 2101              		.size	main, .-main
 2102              		.section	.text.uht,"ax",%progbits
 2103              		.align	1
 2104              		.p2align 2,,3
 2105              		.global	uht
 2106              		.syntax unified
 2107              		.thumb
 2108              		.thumb_func
 2109              		.fpu softvfp
ARM GAS  /tmp/ccAYxbuo.s 			page 38


 2110              		.type	uht, %function
 2111              	uht:
 2112              		@ args = 0, pretend = 0, frame = 0
 2113              		@ frame_needed = 0, uses_anonymous_args = 0
 2114              		@ link register save eliminated.
 2115              	@ main.c:653: 		GPIOB->CRL = (GPIOB->CRL & 0xffffff0f) | 0x00000060;
 2116 0000 034A     		ldr	r2, .L131	@ tmp113,
 2117 0002 1368     		ldr	r3, [r2]	@ _1, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2118 0004 23F0F003 		bic	r3, r3, #240	@ tmp114, _1,
 2119 0008 43F06003 		orr	r3, r3, #96	@ _3, tmp114,
 2120 000c 1360     		str	r3, [r2]	@ _3, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2121              	@ main.c:722: 	} 
 2122 000e 7047     		bx	lr	@
 2123              	.L132:
 2124              		.align	2
 2125              	.L131:
 2126 0010 000C0140 		.word	1073810432
 2127              		.size	uht, .-uht
 2128              		.section	.text.rtc_calibrate,"ax",%progbits
 2129              		.align	1
 2130              		.p2align 2,,3
 2131              		.global	rtc_calibrate
 2132              		.syntax unified
 2133              		.thumb
 2134              		.thumb_func
 2135              		.fpu softvfp
 2136              		.type	rtc_calibrate, %function
 2137              	rtc_calibrate:
 2138              		@ args = 0, pretend = 0, frame = 24
 2139              		@ frame_needed = 0, uses_anonymous_args = 0
 2140 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}	@
 2141 0004 87B0     		sub	sp, sp, #28	@,,
 2142              	@ main.c:728: 		RtcInit();
 2143 0006 FFF7FEFF 		bl	RtcInit	@
 2144              	@ main.c:729: 		i2c1_init();
 2145 000a FFF7FEFF 		bl	i2c1_init	@
 2146              	@ main.c:730: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 2147 000e 3D48     		ldr	r0, .L156	@ tmp140,
 2148              	@ main.c:731: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2149 0010 3D49     		ldr	r1, .L156+4	@ tmp145,
 2150              	@ main.c:730: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 2151 0012 4368     		ldr	r3, [r0, #4]	@ _2, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 2152              	@ main.c:733: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 2153 0014 3D4A     		ldr	r2, .L156+8	@ tmp148,
 2154              	@ main.c:730: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 2155 0016 23F0F023 		bic	r3, r3, #-268374016	@ tmp141, _2,
 2156 001a 23F47023 		bic	r3, r3, #983040	@ tmp141, tmp141,
 2157 001e 43F01023 		orr	r3, r3, #268439552	@ _4, tmp141,
 2158 0022 43F48033 		orr	r3, r3, #65536	@ _4, _4,
 2159 0026 4360     		str	r3, [r0, #4]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 2160              	@ main.c:731: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2161 0028 0B68     		ldr	r3, [r1]	@ _5, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2162              	@ main.c:737: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 2163 002a 3948     		ldr	r0, .L156+12	@ tmp157,
 2164              	@ main.c:731: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2165 002c 23F47F23 		bic	r3, r3, #1044480	@ tmp146, _5,
 2166 0030 43F48833 		orr	r3, r3, #69632	@ _7, tmp146,
ARM GAS  /tmp/ccAYxbuo.s 			page 39


 2167              	@ main.c:733: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 2168 0034 374F     		ldr	r7, .L156+16	@ tmp149,
 2169              	@ main.c:734: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 2170 0036 384E     		ldr	r6, .L156+20	@ tmp151,
 2171              	@ main.c:735: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 2172 0038 384D     		ldr	r5, .L156+24	@ tmp153,
 2173              	@ main.c:736: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 2174 003a 394C     		ldr	r4, .L156+28	@ tmp155,
 2175              	@ main.c:731: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2176 003c 0B60     		str	r3, [r1]	@ _7, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2177              	@ main.c:733: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 2178 003e 5760     		str	r7, [r2, #4]	@ tmp149, oled_hw.sck
 2179              	@ main.c:734: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 2180 0040 1660     		str	r6, [r2]	@ tmp151, oled_hw.mosi
 2181              	@ main.c:735: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 2182 0042 9560     		str	r5, [r2, #8]	@ tmp153, oled_hw.dc
 2183              	@ main.c:736: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 2184 0044 D460     		str	r4, [r2, #12]	@ tmp155, oled_hw.cs
 2185              	@ main.c:737: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 2186 0046 1061     		str	r0, [r2, #16]	@ tmp157, oled_hw.rst
 2187              	@ main.c:740: 		ssd1306_init();
 2188 0048 FFF7FEFF 		bl	ssd1306_init	@
 2189              	@ main.c:757: 		num2uart (tim/TIM_US,7,0);	
 2190 004c 0022     		movs	r2, #0	@,
 2191 004e 0721     		movs	r1, #7	@,
 2192 0050 1046     		mov	r0, r2	@,
 2193 0052 FFF7FEFF 		bl	num2uart	@
 2194              	@ main.c:760: 		num2uart (tim4,8,1);	
 2195 0056 0122     		movs	r2, #1	@,
 2196 0058 0821     		movs	r1, #8	@,
 2197 005a 0298     		ldr	r0, [sp, #8]	@, tim4
 2198 005c FFF7FEFF 		bl	num2uart	@
 2199              	@ main.c:778: 				while(!iPB5)
 2200 0060 04F5FE44 		add	r4, r4, #32512	@ tmp173, tmp173,
 2201 0064 DFF8C880 		ldr	r8, .L156+44	@ tmp194,
 2202 0068 2E4E     		ldr	r6, .L156+32	@ tmp195,
 2203 006a 2F4F     		ldr	r7, .L156+36	@ tmp197,
 2204              	@ main.c:765: 			if( TIM_MS*500 < (trg0 - SysTick->VAL) ){
 2205 006c 2F4D     		ldr	r5, .L156+40	@ tmp163,
 2206 006e DFF8C490 		ldr	r9, .L156+48	@ tmp165,
 2207              	@ main.c:778: 				while(!iPB5)
 2208 0072 6834     		adds	r4, r4, #104	@ tmp173, tmp173,
 2209              	.L134:
 2210              	@ main.c:765: 			if( TIM_MS*500 < (trg0 - SysTick->VAL) ){
 2211 0074 D8F80030 		ldr	r3, [r8]	@ trg0.78_10, trg0
 2212 0078 AA68     		ldr	r2, [r5, #8]	@ _11, MEM[(struct SysTick_Type *)3758153744B].VAL
 2213 007a 9B1A     		subs	r3, r3, r2	@ tmp164, trg0.78_10, _11
 2214 007c 4B45     		cmp	r3, r9	@ tmp164, tmp165
 2215 007e F9D9     		bls	.L134	@,
 2216              	@ main.c:766: 				trg0 = SysTick->VAL; 
 2217 0080 D5F808C0 		ldr	ip, [r5, #8]	@ _13, MEM[(struct SysTick_Type *)3758153744B].VAL
 2218              	@ main.c:768: 				i2c1_read( DS3231_ADDR,0,tm,3);
 2219 0084 0323     		movs	r3, #3	@,
 2220 0086 01AA     		add	r2, sp, #4	@ tmp203,,
 2221 0088 0021     		movs	r1, #0	@,
 2222 008a D020     		movs	r0, #208	@,
 2223              	@ main.c:766: 				trg0 = SysTick->VAL; 
ARM GAS  /tmp/ccAYxbuo.s 			page 40


 2224 008c C8F800C0 		str	ip, [r8]	@ _13, trg0
 2225              	@ main.c:768: 				i2c1_read( DS3231_ADDR,0,tm,3);
 2226 0090 FFF7FEFF 		bl	i2c1_read	@
 2227              	@ main.c:773: 				i2c1_read( DS3231_ADDR,0x0e,&ContReg,1);
 2228 0094 0123     		movs	r3, #1	@,
 2229 0096 0DF10302 		add	r2, sp, #3	@ tmp204,,
 2230 009a 0E21     		movs	r1, #14	@,
 2231 009c D020     		movs	r0, #208	@,
 2232 009e FFF7FEFF 		bl	i2c1_read	@
 2233              	.L135:
 2234              	@ main.c:778: 				while(!iPB5)
 2235 00a2 2368     		ldr	r3, [r4]	@ _15, MEM[(volatile long unsigned int *)1109491988B]
 2236 00a4 2BB9     		cbnz	r3, .L137	@ _15,
 2237              	.L153:
 2238              	@ main.c:779: 				while(iPB5) 	TIM_start();
 2239 00a6 2368     		ldr	r3, [r4]	@ _14,
 2240 00a8 002B     		cmp	r3, #0	@ _14
 2241 00aa FAD0     		beq	.L135	@
 2242              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 2243 00ac AB68     		ldr	r3, [r5, #8]	@ _46, MEM[(struct SysTick_Type *)3758153744B].VAL
 2244 00ae 3360     		str	r3, [r6]	@ _46, Timt
 2245 00b0 F9E7     		b	.L153	@
 2246              	.L137:
 2247              	@ main.c:780: 				while(!iPB5)
 2248 00b2 2368     		ldr	r3, [r4]	@ _17, MEM[(volatile long unsigned int *)1109491988B]
 2249 00b4 3BB9     		cbnz	r3, .L140	@ _17,
 2250              	.L155:
 2251              	@ main.c:781: 				while(iPB5)	TIM_stop(&tim4);
 2252 00b6 2368     		ldr	r3, [r4]	@ _16,
 2253 00b8 002B     		cmp	r3, #0	@ _16
 2254 00ba FAD0     		beq	.L137	@
 2255              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 2256 00bc 3368     		ldr	r3, [r6]	@ Timt.81_47, Timt
 2257 00be AA68     		ldr	r2, [r5, #8]	@ _48, MEM[(struct SysTick_Type *)3758153744B].VAL
 2258 00c0 9B1A     		subs	r3, r3, r2	@ _49, Timt.81_47, _48
 2259 00c2 0293     		str	r3, [sp, #8]	@ _49, MEM[(volatile u32 *)&tim4]
 2260 00c4 F7E7     		b	.L155	@
 2261              	.L140:
 2262              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 2263 00c6 40F25241 		movw	r1, #1106	@ tmp187,
 2264              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 2265 00ca AB68     		ldr	r3, [r5, #8]	@ _54, MEM[(struct SysTick_Type *)3758153744B].VAL
 2266 00cc 3360     		str	r3, [r6]	@ _54, Timt
 2267              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 2268 00ce AB68     		ldr	r3, [r5, #8]	@ _50, MEM[(struct SysTick_Type *)3758153744B].VAL
 2269 00d0 3B60     		str	r3, [r7]	@ _50, delay_us
 2270              	.L142:
 2271              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 2272 00d2 3B68     		ldr	r3, [r7]	@ delay_us.82_51, delay_us
 2273 00d4 AA68     		ldr	r2, [r5, #8]	@ _52, MEM[(struct SysTick_Type *)3758153744B].VAL
 2274 00d6 9B1A     		subs	r3, r3, r2	@ tmp186, delay_us.82_51, _52
 2275 00d8 8B42     		cmp	r3, r1	@ tmp186, tmp187
 2276 00da FAD9     		bls	.L142	@,
 2277              	@ main.c:786: 				int2str(tim4,tbuf,6,0); 
 2278 00dc 03A9     		add	r1, sp, #12	@ tmp205,,
 2279 00de 0023     		movs	r3, #0	@,
 2280 00e0 0622     		movs	r2, #6	@,
ARM GAS  /tmp/ccAYxbuo.s 			page 41


 2281 00e2 0298     		ldr	r0, [sp, #8]	@, tim4
 2282 00e4 FFF7FEFF 		bl	int2str	@
 2283              	@ main.c:787: 				int2str(123,tbuf,6,0); 
 2284 00e8 0023     		movs	r3, #0	@,
 2285 00ea 03A9     		add	r1, sp, #12	@ tmp206,,
 2286 00ec 0622     		movs	r2, #6	@,
 2287 00ee 7B20     		movs	r0, #123	@,
 2288 00f0 FFF7FEFF 		bl	int2str	@
 2289              	@ main.c:789: 				oled_str16(0,0,tbuf);
 2290 00f4 0021     		movs	r1, #0	@,
 2291 00f6 03AA     		add	r2, sp, #12	@ tmp207,,
 2292 00f8 0846     		mov	r0, r1	@,
 2293 00fa FFF7FEFF 		bl	oled_str16	@
 2294              	@ main.c:793: 				oled_refresh_gram();
 2295 00fe FFF7FEFF 		bl	oled_refresh_gram	@
 2296 0102 B7E7     		b	.L134	@
 2297              	.L157:
 2298              		.align	2
 2299              	.L156:
 2300 0104 00080140 		.word	1073809408
 2301 0108 000C0140 		.word	1073810432
 2302 010c 00000000 		.word	oled_hw
 2303 0110 BC012142 		.word	1109459388
 2304 0114 90812142 		.word	1109492112
 2305 0118 8C812142 		.word	1109492108
 2306 011c B0012142 		.word	1109459376
 2307 0120 AC012142 		.word	1109459372
 2308 0124 00000000 		.word	Timt
 2309 0128 00000000 		.word	delay_us
 2310 012c 10E000E0 		.word	-536813552
 2311 0130 00000000 		.word	trg0
 2312 0134 20AA4400 		.word	4500000
 2313              		.size	rtc_calibrate, .-rtc_calibrate
 2314              		.section	.text.testwsk,"ax",%progbits
 2315              		.align	1
 2316              		.p2align 2,,3
 2317              		.global	testwsk
 2318              		.syntax unified
 2319              		.thumb
 2320              		.thumb_func
 2321              		.fpu softvfp
 2322              		.type	testwsk, %function
 2323              	testwsk:
 2324              		@ args = 0, pretend = 0, frame = 0
 2325              		@ frame_needed = 0, uses_anonymous_args = 0
 2326              		@ link register save eliminated.
 2327              	@ main.c:811: 	}
 2328 0000 7047     		bx	lr	@
 2329              		.size	testwsk, .-testwsk
 2330 0002 00BF     		.section	.text.veml6075,"ax",%progbits
 2331              		.align	1
 2332              		.p2align 2,,3
 2333              		.global	veml6075
 2334              		.syntax unified
 2335              		.thumb
 2336              		.thumb_func
 2337              		.fpu softvfp
ARM GAS  /tmp/ccAYxbuo.s 			page 42


 2338              		.type	veml6075, %function
 2339              	veml6075:
 2340              		@ args = 0, pretend = 0, frame = 16
 2341              		@ frame_needed = 0, uses_anonymous_args = 0
 2342              	@ main.c:815: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='l';
 2343 0000 0123     		movs	r3, #1	@ tmp128,
 2344 0002 6C20     		movs	r0, #108	@ tmp131,
 2345 0004 264A     		ldr	r2, .L164	@ tmp126,
 2346              	@ main.c:832: 		LED=1;
 2347 0006 2749     		ldr	r1, .L164+4	@ tmp133,
 2348              	@ main.c:815: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='l';
 2349 0008 1268     		ldr	r2, [r2]	@ p_Fifo1.83_1, p_Fifo1
 2350              	@ main.c:812: void veml6075(void){
 2351 000a 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 2352              	@ main.c:834: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 2353 000e 264C     		ldr	r4, .L164+8	@ tmp135,
 2354              	@ main.c:815: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='l';
 2355 0010 9380     		strh	r3, [r2, #4]	@ movhi	@ tmp128, p_Fifo1.83_1->rct
 2356 0012 5380     		strh	r3, [r2, #2]	@ movhi	@ tmp128, p_Fifo1.83_1->rwi
 2357 0014 9071     		strb	r0, [r2, #6]	@ tmp131, p_Fifo1.83_1->rbuf
 2358              	@ main.c:832: 		LED=1;
 2359 0016 0B60     		str	r3, [r1]	@ tmp128, MEM[(volatile long unsigned int *)1109524916B]
 2360              	@ main.c:834: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 2361 0018 6368     		ldr	r3, [r4, #4]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 2362              	@ main.c:835: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2363 001a 2448     		ldr	r0, .L164+12	@ tmp140,
 2364              	@ main.c:834: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 2365 001c 23F0F023 		bic	r3, r3, #-268374016	@ tmp136, _4,
 2366 0020 23F47023 		bic	r3, r3, #983040	@ tmp136, tmp136,
 2367 0024 43F01023 		orr	r3, r3, #268439552	@ _6, tmp136,
 2368 0028 43F48033 		orr	r3, r3, #65536	@ _6, _6,
 2369 002c 6360     		str	r3, [r4, #4]	@ _6, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 2370              	@ main.c:835: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2371 002e 0268     		ldr	r2, [r0]	@ _7, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2372              	@ main.c:837: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 2373 0030 1F4B     		ldr	r3, .L164+16	@ tmp143,
 2374              	@ main.c:835: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 2375 0032 22F47F22 		bic	r2, r2, #1044480	@ tmp141, _7,
 2376 0036 42F48832 		orr	r2, r2, #69632	@ _9, tmp141,
 2377 003a 0260     		str	r2, [r0]	@ _9, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2378              	@ main.c:837: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 2379 003c 1D4E     		ldr	r6, .L164+20	@ tmp144,
 2380              	@ main.c:840: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 2381 003e 1E48     		ldr	r0, .L164+24	@ tmp150,
 2382              	@ main.c:841: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 2383 0040 1E4A     		ldr	r2, .L164+28	@ tmp152,
 2384              	@ main.c:838: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 2385 0042 1F4D     		ldr	r5, .L164+32	@ tmp146,
 2386              	@ main.c:839: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 2387 0044 1F4C     		ldr	r4, .L164+36	@ tmp148,
 2388              	@ main.c:812: void veml6075(void){
 2389 0046 84B0     		sub	sp, sp, #16	@,,
 2390              	@ main.c:837: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 2391 0048 5E60     		str	r6, [r3, #4]	@ tmp144, oled_hw.sck
 2392              	@ main.c:867: 				LED^=1;
 2393 004a 8846     		mov	r8, r1	@ tmp163, tmp133
 2394              	@ main.c:838: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
ARM GAS  /tmp/ccAYxbuo.s 			page 43


 2395 004c 1D60     		str	r5, [r3]	@ tmp146, oled_hw.mosi
 2396              	@ main.c:859: 		oled_refresh_gram();
 2397 004e 0027     		movs	r7, #0	@ ivtmp.437,
 2398              	@ main.c:839: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 2399 0050 9C60     		str	r4, [r3, #8]	@ tmp148, oled_hw.dc
 2400              	@ main.c:840: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 2401 0052 D860     		str	r0, [r3, #12]	@ tmp150, oled_hw.cs
 2402              	@ main.c:841: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 2403 0054 1A61     		str	r2, [r3, #16]	@ tmp152, oled_hw.rst
 2404              	@ main.c:844: 		ssd1306_init();
 2405 0056 FFF7FEFF 		bl	ssd1306_init	@
 2406              	@ main.c:859: 		oled_refresh_gram();
 2407 005a FFF7FEFF 		bl	oled_refresh_gram	@
 2408 005e 1A4D     		ldr	r5, .L164+40	@ tmp166,
 2409              	@ main.c:862: 			if(STCLK_MS*20 < (trg0 - SysTick->VAL)){	
 2410 0060 1A4C     		ldr	r4, .L164+44	@ tmp154,
 2411 0062 1B4E     		ldr	r6, .L164+48	@ tmp156,
 2412              	.L160:
 2413 0064 2B68     		ldr	r3, [r5]	@ trg0.86_10, trg0
 2414 0066 A268     		ldr	r2, [r4, #8]	@ _11, MEM[(struct SysTick_Type *)3758153744B].VAL
 2415 0068 9B1A     		subs	r3, r3, r2	@ tmp155, trg0.86_10, _11
 2416 006a B342     		cmp	r3, r6	@ tmp155, tmp156
 2417 006c FAD9     		bls	.L160	@,
 2418              	@ main.c:863: 				trg0  = SysTick->VAL;	
 2419 006e D4F808C0 		ldr	ip, [r4, #8]	@ _13, MEM[(struct SysTick_Type *)3758153744B].VAL
 2420              	@ main.c:864: 				int2str(cnt++ ,tbuf,5,0);		oled_num24(0,0,tbuf);
 2421 0072 0023     		movs	r3, #0	@,
 2422 0074 0522     		movs	r2, #5	@,
 2423 0076 01A9     		add	r1, sp, #4	@ tmp167,,
 2424 0078 B8B2     		uxth	r0, r7	@, ivtmp.437
 2425              	@ main.c:863: 				trg0  = SysTick->VAL;	
 2426 007a C5F800C0 		str	ip, [r5]	@ _13, trg0
 2427              	@ main.c:864: 				int2str(cnt++ ,tbuf,5,0);		oled_num24(0,0,tbuf);
 2428 007e FFF7FEFF 		bl	int2str	@
 2429 0082 0021     		movs	r1, #0	@,
 2430 0084 01AA     		add	r2, sp, #4	@ tmp168,,
 2431 0086 0846     		mov	r0, r1	@,
 2432 0088 FFF7FEFF 		bl	oled_num24	@
 2433              	@ main.c:865: 				oled_refresh_gram();	
 2434 008c FFF7FEFF 		bl	oled_refresh_gram	@
 2435              	@ main.c:867: 				LED^=1;
 2436 0090 D8F80030 		ldr	r3, [r8]	@ _16, MEM[(volatile long unsigned int *)1109524916B]
 2437 0094 0137     		adds	r7, r7, #1	@ ivtmp.437, ivtmp.437,
 2438 0096 83F00103 		eor	r3, r3, #1	@ _17, _16,
 2439 009a C8F80030 		str	r3, [r8]	@ _17, MEM[(volatile long unsigned int *)1109524916B]
 2440 009e E1E7     		b	.L160	@
 2441              	.L165:
 2442              		.align	2
 2443              	.L164:
 2444 00a0 00000000 		.word	p_Fifo1
 2445 00a4 B4012242 		.word	1109524916
 2446 00a8 00080140 		.word	1073809408
 2447 00ac 000C0140 		.word	1073810432
 2448 00b0 00000000 		.word	oled_hw
 2449 00b4 90812142 		.word	1109492112
 2450 00b8 AC012142 		.word	1109459372
 2451 00bc BC012142 		.word	1109459388
ARM GAS  /tmp/ccAYxbuo.s 			page 44


 2452 00c0 8C812142 		.word	1109492108
 2453 00c4 B0012142 		.word	1109459376
 2454 00c8 00000000 		.word	trg0
 2455 00cc 10E000E0 		.word	-536813552
 2456 00d0 20BF0200 		.word	180000
 2457              		.size	veml6075, .-veml6075
 2458              		.section	.text.softSPI_w,"ax",%progbits
 2459              		.align	1
 2460              		.p2align 2,,3
 2461              		.global	softSPI_w
 2462              		.syntax unified
 2463              		.thumb
 2464              		.thumb_func
 2465              		.fpu softvfp
 2466              		.type	softSPI_w, %function
 2467              	softSPI_w:
 2468              		@ args = 0, pretend = 0, frame = 0
 2469              		@ frame_needed = 0, uses_anonymous_args = 0
 2470 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}	@
 2471              	@ main.c:987: 			if (byte & 0x80)			wMOSI = 1;
 2472 0004 4FF0010E 		mov	lr, #1	@ tmp152,
 2473              	@ main.c:983: uint8_t softSPI_w(uint8_t byte)	{
 2474 0008 0824     		movs	r4, #8	@ ivtmp_5,
 2475              	@ main.c:991: 			wSCK = 1; /* a slave latches input data bit */
 2476 000a F046     		mov	r8, lr	@ MEM[(volatile long unsigned int *)1109459348B], tmp152
 2477              	@ main.c:988: 			else			wMOSI = 0;
 2478 000c 0026     		movs	r6, #0	@ tmp151,
 2479 000e 1549     		ldr	r1, .L180	@ tmp149,
 2480 0010 DFF85CC0 		ldr	ip, .L180+12	@ tmp150,
 2481              	@ main.c:991: 			wSCK = 1; /* a slave latches input data bit */
 2482 0014 144D     		ldr	r5, .L180+4	@ tmp131,
 2483              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 2484 0016 154A     		ldr	r2, .L180+8	@ tmp133,
 2485              	@ main.c:993: 			if (wMISO)			byte |= 0x01;
 2486 0018 DFF85890 		ldr	r9, .L180+16	@ tmp138,
 2487              	.L172:
 2488              	@ main.c:987: 			if (byte & 0x80)			wMOSI = 1;
 2489 001c 0306     		lsls	r3, r0, #24	@, byte,
 2490 001e 4CBF     		ite	mi
 2491 0020 CCF800E0 		strmi	lr, [ip]	@ tmp152, MEM[(volatile long unsigned int *)1109459356B]
 2492              	@ main.c:988: 			else			wMOSI = 0;
 2493 0024 CCF80060 		strpl	r6, [ip]	@ tmp151, MEM[(volatile long unsigned int *)1109459356B]
 2494              	@ main.c:991: 			wSCK = 1; /* a slave latches input data bit */
 2495 0028 C5F80080 		str	r8, [r5]	@ MEM[(volatile long unsigned int *)1109459348B], MEM[(volatile long unsigned int *)1
 2496              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 2497 002c 9368     		ldr	r3, [r2, #8]	@ _18, MEM[(struct SysTick_Type *)3758153744B].VAL
 2498              	@ main.c:990: 			byte <<= 1;
 2499 002e 4000     		lsls	r0, r0, #1	@ tmp130, byte,
 2500 0030 C0B2     		uxtb	r0, r0	@ byte, tmp130
 2501              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 2502 0032 0B60     		str	r3, [r1]	@ _18, delay_us
 2503              	.L169:
 2504              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 2505 0034 0B68     		ldr	r3, [r1]	@ delay_us.82_19, delay_us
 2506 0036 9768     		ldr	r7, [r2, #8]	@ _20, MEM[(struct SysTick_Type *)3758153744B].VAL
 2507 0038 DB1B     		subs	r3, r3, r7	@ tmp137, delay_us.82_19, _20
 2508 003a 592B     		cmp	r3, #89	@ tmp137,
ARM GAS  /tmp/ccAYxbuo.s 			page 45


 2509 003c FAD9     		bls	.L169	@,
 2510              	@ main.c:993: 			if (wMISO)			byte |= 0x01;
 2511 003e D9F80030 		ldr	r3, [r9]	@ _2, MEM[(volatile long unsigned int *)1109459224B]
 2512 0042 0BB1     		cbz	r3, .L170	@ _2,
 2513              	@ main.c:993: 			if (wMISO)			byte |= 0x01;
 2514 0044 40F00100 		orr	r0, r0, #1	@ byte, byte,
 2515              	.L170:
 2516              	@ main.c:995: 			wSCK = 0; /* a slave shifts out next output data bit */
 2517 0048 2E60     		str	r6, [r5]	@ tmp151, MEM[(volatile long unsigned int *)1109459348B]
 2518              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 2519 004a 9368     		ldr	r3, [r2, #8]	@ _22, MEM[(struct SysTick_Type *)3758153744B].VAL
 2520 004c 0B60     		str	r3, [r1]	@ _22, delay_us
 2521              	.L171:
 2522              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 2523 004e 0B68     		ldr	r3, [r1]	@ delay_us.82_23, delay_us
 2524 0050 9768     		ldr	r7, [r2, #8]	@ _24, MEM[(struct SysTick_Type *)3758153744B].VAL
 2525 0052 DB1B     		subs	r3, r3, r7	@ tmp146, delay_us.82_23, _24
 2526 0054 592B     		cmp	r3, #89	@ tmp146,
 2527 0056 FAD9     		bls	.L171	@,
 2528 0058 013C     		subs	r4, r4, #1	@ tmp147, ivtmp_5,
 2529              	@ main.c:985: 		for(counter = 8; counter; counter--)
 2530 005a 14F0FF04 		ands	r4, r4, #255	@ ivtmp_5, tmp147,
 2531 005e DDD1     		bne	.L172	@,
 2532              	@ main.c:999: 	}
 2533 0060 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}	@
 2534              	.L181:
 2535              		.align	2
 2536              	.L180:
 2537 0064 00000000 		.word	delay_us
 2538 0068 94012142 		.word	1109459348
 2539 006c 10E000E0 		.word	-536813552
 2540 0070 9C012142 		.word	1109459356
 2541 0074 18012142 		.word	1109459224
 2542              		.size	softSPI_w, .-softSPI_w
 2543              		.section	.text.softSPI_r,"ax",%progbits
 2544              		.align	1
 2545              		.p2align 2,,3
 2546              		.global	softSPI_r
 2547              		.syntax unified
 2548              		.thumb
 2549              		.thumb_func
 2550              		.fpu softvfp
 2551              		.type	softSPI_r, %function
 2552              	softSPI_r:
 2553              		@ args = 0, pretend = 0, frame = 0
 2554              		@ frame_needed = 0, uses_anonymous_args = 0
 2555              		@ link register save eliminated.
 2556              	@ main.c:1006: 			else				wMOSI = 0;
 2557 0000 4FF0000C 		mov	ip, #0	@ tmp132,
 2558              	@ main.c:1001: uint8_t softSPI_r(uint8_t byte)	{
 2559 0004 F0B4     		push	{r4, r5, r6, r7}	@
 2560              	@ main.c:1001: uint8_t softSPI_r(uint8_t byte)	{
 2561 0006 0823     		movs	r3, #8	@ ivtmp_5,
 2562              	@ main.c:1008: 			wSCK = 0; /* a slave shifts out output data bit */
 2563 0008 6746     		mov	r7, ip	@ MEM[(volatile long unsigned int *)1109459348B], tmp132
 2564              	@ main.c:1005: 			if (byte & 0x80)			wMOSI = 1;
 2565 000a 0124     		movs	r4, #1	@ tmp133,
ARM GAS  /tmp/ccAYxbuo.s 			page 46


 2566              	@ main.c:1006: 			else				wMOSI = 0;
 2567 000c 0A4E     		ldr	r6, .L192	@ tmp131,
 2568              	@ main.c:1008: 			wSCK = 0; /* a slave shifts out output data bit */
 2569 000e 0B4A     		ldr	r2, .L192+4	@ tmp122,
 2570              	@ main.c:1011: 			if (wMISO)		byte |= 0x01;
 2571 0010 0B4D     		ldr	r5, .L192+8	@ tmp125,
 2572              	.L186:
 2573              	@ main.c:1005: 			if (byte & 0x80)			wMOSI = 1;
 2574 0012 0106     		lsls	r1, r0, #24	@, byte,
 2575 0014 4CBF     		ite	mi
 2576 0016 3460     		strmi	r4, [r6]	@ tmp133, MEM[(volatile long unsigned int *)1109459356B]
 2577              	@ main.c:1006: 			else				wMOSI = 0;
 2578 0018 C6F800C0 		strpl	ip, [r6]	@ tmp132, MEM[(volatile long unsigned int *)1109459356B]
 2579              	@ main.c:1008: 			wSCK = 0; /* a slave shifts out output data bit */
 2580 001c 1760     		str	r7, [r2]	@ MEM[(volatile long unsigned int *)1109459348B], MEM[(volatile long unsigned int *)1
 2581              	@ main.c:1011: 			if (wMISO)		byte |= 0x01;
 2582 001e 2968     		ldr	r1, [r5]	@ _2, MEM[(volatile long unsigned int *)1109459224B]
 2583              	@ main.c:1009: 			byte <<= 1;
 2584 0020 4000     		lsls	r0, r0, #1	@ tmp124, byte,
 2585 0022 013B     		subs	r3, r3, #1	@ tmp129, ivtmp_5,
 2586 0024 C0B2     		uxtb	r0, r0	@ byte, tmp124
 2587              	@ main.c:1011: 			if (wMISO)		byte |= 0x01;
 2588 0026 09B1     		cbz	r1, .L185	@ _2,
 2589              	@ main.c:1011: 			if (wMISO)		byte |= 0x01;
 2590 0028 40F00100 		orr	r0, r0, #1	@ byte, byte,
 2591              	.L185:
 2592              	@ main.c:1003: 		for(counter = 8; counter; counter--)
 2593 002c 13F0FF03 		ands	r3, r3, #255	@ ivtmp_5, tmp129,
 2594              	@ main.c:1012: 			wSCK = 1; /* a slave latches input data bit */
 2595 0030 1460     		str	r4, [r2]	@ tmp133, MEM[(volatile long unsigned int *)1109459348B]
 2596              	@ main.c:1003: 		for(counter = 8; counter; counter--)
 2597 0032 EED1     		bne	.L186	@,
 2598              	@ main.c:1015: 	}
 2599 0034 F0BC     		pop	{r4, r5, r6, r7}	@
 2600 0036 7047     		bx	lr	@
 2601              	.L193:
 2602              		.align	2
 2603              	.L192:
 2604 0038 9C012142 		.word	1109459356
 2605 003c 94012142 		.word	1109459348
 2606 0040 18012142 		.word	1109459224
 2607              		.size	softSPI_r, .-softSPI_r
 2608              		.section	.text.ili9486,"ax",%progbits
 2609              		.align	1
 2610              		.p2align 2,,3
 2611              		.global	ili9486
 2612              		.syntax unified
 2613              		.thumb
 2614              		.thumb_func
 2615              		.fpu softvfp
 2616              		.type	ili9486, %function
 2617              	ili9486:
 2618              		@ args = 0, pretend = 0, frame = 8
 2619              		@ frame_needed = 0, uses_anonymous_args = 0
 2620              	@ main.c:1019: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='c';
 2621 0000 0123     		movs	r3, #1	@ tmp136,
 2622 0002 6320     		movs	r0, #99	@ tmp139,
ARM GAS  /tmp/ccAYxbuo.s 			page 47


 2623              	@ main.c:1016: void ili9486(void){
 2624 0004 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 2625              	@ main.c:1019: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='c';
 2626 0008 DFF85491 		ldr	r9, .L225+56	@ tmp196,
 2627              	@ main.c:1021: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0x34330000;	//   PA7=MOSI, PA6=MISO, PA5=
 2628 000c 4649     		ldr	r1, .L225	@ tmp141,
 2629              	@ main.c:1019: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='c';
 2630 000e D9F80020 		ldr	r2, [r9]	@ pretmp_14, p_Fifo1
 2631              	@ main.c:1006: 			else				wMOSI = 0;
 2632 0012 464E     		ldr	r6, .L225+4	@ tmp207,
 2633              	@ main.c:1019: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='c';
 2634 0014 9380     		strh	r3, [r2, #4]	@ movhi	@ tmp136, p_Fifo1.97_1->rct
 2635 0016 5380     		strh	r3, [r2, #2]	@ movhi	@ tmp136, p_Fifo1.97_1->rwi
 2636 0018 9071     		strb	r0, [r2, #6]	@ tmp139, p_Fifo1.97_1->rbuf
 2637              	@ main.c:1021: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0x34330000;	//   PA7=MOSI, PA6=MISO, PA5=
 2638 001a 0B68     		ldr	r3, [r1]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 2639              	@ main.c:1008: 			wSCK = 0; /* a slave shifts out output data bit */
 2640 001c 444C     		ldr	r4, .L225+8	@ tmp208,
 2641              	@ main.c:1021: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0x34330000;	//   PA7=MOSI, PA6=MISO, PA5=
 2642 001e 9BB2     		uxth	r3, r3	@ tmp142, _4
 2643 0020 43F05053 		orr	r3, r3, #872415232	@ _6, tmp142,
 2644 0024 43F44C13 		orr	r3, r3, #3342336	@ _6, _6,
 2645              	@ main.c:1016: void ili9486(void){
 2646 0028 83B0     		sub	sp, sp, #12	@,,
 2647              	@ main.c:1021: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0x34330000;	//   PA7=MOSI, PA6=MISO, PA5=
 2648 002a 0B60     		str	r3, [r1]	@ _6, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 2649              	.L196:
 2650              	@ main.c:1025: 			if(p_Fifo1->rct){
 2651 002c 9388     		ldrh	r3, [r2, #4]	@, prephitmp_55->rct
 2652 002e 9BB2     		uxth	r3, r3	@ _8, prephitmp_55->rct
 2653 0030 002B     		cmp	r3, #0	@ _8
 2654 0032 FBD0     		beq	.L196	@
 2655              	@ main.c:1026: 				UART_getChar( (char*)&swh);
 2656 0034 0DF10700 		add	r0, sp, #7	@ tmp214,,
 2657 0038 FFF7FEFF 		bl	UART_getChar	@
 2658              	@ main.c:1028: 				switch (swh)	{
 2659 003c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2	@ swh, swh
 2660 0040 722B     		cmp	r3, #114	@ swh,
 2661 0042 09D0     		beq	.L198	@,
 2662 0044 772B     		cmp	r3, #119	@ swh,
 2663 0046 42D0     		beq	.L199	@,
 2664 0048 632B     		cmp	r3, #99	@ swh,
 2665 004a 30D0     		beq	.L224	@,
 2666              	@ main.c:1054: 					UaPutK("\r");
 2667 004c 3948     		ldr	r0, .L225+12	@,
 2668 004e FFF7FEFF 		bl	UaPutK	@
 2669              	.L205:
 2670 0052 D9F80020 		ldr	r2, [r9]	@ pretmp_14, p_Fifo1
 2671 0056 E9E7     		b	.L196	@
 2672              	.L198:
 2673              	@ main.c:1031: 					UaPutK("\r\n reg = 0x");	reg=UART_getHex();
 2674 0058 3748     		ldr	r0, .L225+16	@,
 2675 005a FFF7FEFF 		bl	UaPutK	@
 2676 005e FFF7FEFF 		bl	UART_getHex	@
 2677 0062 C5B2     		uxtb	r5, r0	@ reg,
 2678              	@ main.c:1032: 					UaPutK("\r\n dat = 0x");
 2679 0064 3548     		ldr	r0, .L225+20	@,
ARM GAS  /tmp/ccAYxbuo.s 			page 48


 2680 0066 FFF7FEFF 		bl	UaPutK	@
 2681              	@ main.c:1033: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 2682 006a 0022     		movs	r2, #0	@ tmp154,
 2683 006c 0823     		movs	r3, #8	@ ivtmp_53,
 2684              	@ main.c:1006: 			else				wMOSI = 0;
 2685 006e 9446     		mov	ip, r2	@ tmp198, tmp154
 2686              	@ main.c:1008: 			wSCK = 0; /* a slave shifts out output data bit */
 2687 0070 1746     		mov	r7, r2	@ MEM[(volatile long unsigned int *)1109459348B], tmp198
 2688              	@ main.c:1005: 			if (byte & 0x80)			wMOSI = 1;
 2689 0072 0121     		movs	r1, #1	@ tmp199,
 2690              	@ main.c:1033: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 2691 0074 3248     		ldr	r0, .L225+24	@ tmp215,
 2692              	@ main.c:1011: 			if (wMISO)		byte |= 0x01;
 2693 0076 DFF8E0E0 		ldr	lr, .L225+48	@ tmp163,
 2694              	@ main.c:1033: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 2695 007a 0260     		str	r2, [r0]	@ tmp154, MEM[(volatile long unsigned int *)1109459344B]
 2696              	.L204:
 2697              	@ main.c:1005: 			if (byte & 0x80)			wMOSI = 1;
 2698 007c 2A06     		lsls	r2, r5, #24	@, reg,
 2699 007e 4CBF     		ite	mi
 2700 0080 3160     		strmi	r1, [r6]	@ tmp199, MEM[(volatile long unsigned int *)1109459356B]
 2701              	@ main.c:1006: 			else				wMOSI = 0;
 2702 0082 C6F800C0 		strpl	ip, [r6]	@ tmp198, MEM[(volatile long unsigned int *)1109459356B]
 2703              	@ main.c:1008: 			wSCK = 0; /* a slave shifts out output data bit */
 2704 0086 2760     		str	r7, [r4]	@ MEM[(volatile long unsigned int *)1109459348B], MEM[(volatile long unsigned int *)1
 2705              	@ main.c:1011: 			if (wMISO)		byte |= 0x01;
 2706 0088 DEF80020 		ldr	r2, [lr]	@ _43, MEM[(volatile long unsigned int *)1109459224B]
 2707              	@ main.c:1009: 			byte <<= 1;
 2708 008c 6D00     		lsls	r5, r5, #1	@ tmp162, reg,
 2709 008e 013B     		subs	r3, r3, #1	@ tmp167, ivtmp_53,
 2710 0090 EDB2     		uxtb	r5, r5	@ reg, tmp162
 2711              	@ main.c:1011: 			if (wMISO)		byte |= 0x01;
 2712 0092 0AB1     		cbz	r2, .L203	@ _43,
 2713 0094 45F00105 		orr	r5, r5, #1	@ reg, reg,
 2714              	.L203:
 2715              	@ main.c:1003: 		for(counter = 8; counter; counter--)
 2716 0098 13F0FF03 		ands	r3, r3, #255	@ ivtmp_53, tmp167,
 2717              	@ main.c:1012: 			wSCK = 1; /* a slave latches input data bit */
 2718 009c 2160     		str	r1, [r4]	@ tmp199, MEM[(volatile long unsigned int *)1109459348B]
 2719              	@ main.c:1003: 		for(counter = 8; counter; counter--)
 2720 009e EDD1     		bne	.L204	@,
 2721              	@ main.c:1033: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 2722 00a0 274B     		ldr	r3, .L225+24	@ tmp216,
 2723              	@ main.c:1034: 					hex2uart(dat,2);
 2724 00a2 2846     		mov	r0, r5	@, reg
 2725              	@ main.c:1033: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 2726 00a4 1960     		str	r1, [r3]	@ tmp199, MEM[(volatile long unsigned int *)1109459344B]
 2727              	@ main.c:1034: 					hex2uart(dat,2);
 2728 00a6 0221     		movs	r1, #2	@,
 2729 00a8 FFF7FEFF 		bl	hex2uart	@
 2730              	@ main.c:1036: 					break;
 2731 00ac D1E7     		b	.L205	@
 2732              	.L224:
 2733              	@ main.c:1047: 					UaPutK("\f");
 2734 00ae 2548     		ldr	r0, .L225+28	@,
 2735 00b0 FFF7FEFF 		bl	UaPutK	@
 2736              	@ main.c:1048: 					UaPutK("\n\r\n======= ILI9486 ==================================\r\n");
ARM GAS  /tmp/ccAYxbuo.s 			page 49


 2737 00b4 2448     		ldr	r0, .L225+32	@,
 2738 00b6 FFF7FEFF 		bl	UaPutK	@
 2739              	@ main.c:1049: 					UaPutK(" r - Read   c - Clear page  \r\n");
 2740 00ba 2448     		ldr	r0, .L225+36	@,
 2741 00bc FFF7FEFF 		bl	UaPutK	@
 2742              	@ main.c:1050: 					UaPutK(" w - Write  l - Loop read   \r\n");
 2743 00c0 2348     		ldr	r0, .L225+40	@,
 2744 00c2 FFF7FEFF 		bl	UaPutK	@
 2745              	@ main.c:1051: 					UaPutK("==================================================\r\n > ");
 2746 00c6 2348     		ldr	r0, .L225+44	@,
 2747 00c8 FFF7FEFF 		bl	UaPutK	@
 2748              	@ main.c:1052: 					break;
 2749 00cc C1E7     		b	.L205	@
 2750              	.L199:
 2751              	@ main.c:1038: 					wCS = 0;
 2752 00ce 0023     		movs	r3, #0	@ tmp171,
 2753              	@ main.c:1039: 					for(u08 i=0;i<64;i++){
 2754 00d0 9B46     		mov	fp, r3	@ i, tmp171
 2755              	@ main.c:1006: 			else				wMOSI = 0;
 2756 00d2 9A46     		mov	r10, r3	@ tmp202, i
 2757              	@ main.c:1008: 			wSCK = 0; /* a slave shifts out output data bit */
 2758 00d4 9846     		mov	r8, r3	@ MEM[(volatile long unsigned int *)1109459348B], i
 2759              	@ main.c:1038: 					wCS = 0;
 2760 00d6 1A4A     		ldr	r2, .L225+24	@ tmp217,
 2761              	@ main.c:1011: 			if (wMISO)		byte |= 0x01;
 2762 00d8 1F4F     		ldr	r7, .L225+48	@ tmp180,
 2763              	@ main.c:1038: 					wCS = 0;
 2764 00da 1360     		str	r3, [r2]	@ tmp171, MEM[(volatile long unsigned int *)1109459344B]
 2765              	.L206:
 2766              	@ main.c:1033: 					wCS = 0;		dat = softSPI_r(reg); 	wCS = 1;
 2767 00dc 5846     		mov	r0, fp	@ byte, i
 2768 00de 0822     		movs	r2, #8	@ ivtmp_7,
 2769              	@ main.c:1005: 			if (byte & 0x80)			wMOSI = 1;
 2770 00e0 0125     		movs	r5, #1	@ tmp203,
 2771              	.L210:
 2772 00e2 0306     		lsls	r3, r0, #24	@, byte,
 2773 00e4 4CBF     		ite	mi
 2774 00e6 3560     		strmi	r5, [r6]	@ tmp203, MEM[(volatile long unsigned int *)1109459356B]
 2775              	@ main.c:1006: 			else				wMOSI = 0;
 2776 00e8 C6F800A0 		strpl	r10, [r6]	@ tmp202, MEM[(volatile long unsigned int *)1109459356B]
 2777              	@ main.c:1008: 			wSCK = 0; /* a slave shifts out output data bit */
 2778 00ec C4F80080 		str	r8, [r4]	@ MEM[(volatile long unsigned int *)1109459348B], MEM[(volatile long unsigned int *)1
 2779              	@ main.c:1011: 			if (wMISO)		byte |= 0x01;
 2780 00f0 3968     		ldr	r1, [r7]	@ _51, MEM[(volatile long unsigned int *)1109459224B]
 2781              	@ main.c:1009: 			byte <<= 1;
 2782 00f2 4000     		lsls	r0, r0, #1	@ tmp179, byte,
 2783 00f4 013A     		subs	r2, r2, #1	@ tmp184, ivtmp_7,
 2784 00f6 C0B2     		uxtb	r0, r0	@ byte, tmp179
 2785              	@ main.c:1011: 			if (wMISO)		byte |= 0x01;
 2786 00f8 09B1     		cbz	r1, .L209	@ _51,
 2787 00fa 40F00100 		orr	r0, r0, #1	@ byte, byte,
 2788              	.L209:
 2789              	@ main.c:1003: 		for(counter = 8; counter; counter--)
 2790 00fe 12F0FF02 		ands	r2, r2, #255	@ ivtmp_7, tmp184,
 2791              	@ main.c:1012: 			wSCK = 1; /* a slave latches input data bit */
 2792 0102 2560     		str	r5, [r4]	@ tmp203, MEM[(volatile long unsigned int *)1109459348B]
 2793              	@ main.c:1003: 		for(counter = 8; counter; counter--)
ARM GAS  /tmp/ccAYxbuo.s 			page 50


 2794 0104 EDD1     		bne	.L210	@,
 2795              	@ main.c:1039: 					for(u08 i=0;i<64;i++){
 2796 0106 0BF1010B 		add	fp, fp, #1	@ tmp185, i,
 2797              	@ main.c:1040: 						hex2uart(softSPI_r(i),2);
 2798 010a 0221     		movs	r1, #2	@,
 2799              	@ main.c:1039: 					for(u08 i=0;i<64;i++){
 2800 010c 5FFA8BFB 		uxtb	fp, fp	@ i, tmp185
 2801              	@ main.c:1040: 						hex2uart(softSPI_r(i),2);
 2802 0110 FFF7FEFF 		bl	hex2uart	@
 2803              	@ main.c:1039: 					for(u08 i=0;i<64;i++){
 2804 0114 BBF1400F 		cmp	fp, #64	@ i,
 2805 0118 E0D1     		bne	.L206	@,
 2806              	@ main.c:1042: 					wCS = 1;
 2807 011a 094B     		ldr	r3, .L225+24	@ tmp218,
 2808              	@ main.c:1043: 					UaPutK("\r\n");
 2809 011c 0F48     		ldr	r0, .L225+52	@,
 2810              	@ main.c:1042: 					wCS = 1;
 2811 011e 1D60     		str	r5, [r3]	@ tmp203, MEM[(volatile long unsigned int *)1109459344B]
 2812              	@ main.c:1043: 					UaPutK("\r\n");
 2813 0120 FFF7FEFF 		bl	UaPutK	@
 2814              	@ main.c:1045: 					break;
 2815 0124 95E7     		b	.L205	@
 2816              	.L226:
 2817 0126 00BF     		.align	2
 2818              	.L225:
 2819 0128 00080140 		.word	1073809408
 2820 012c 9C012142 		.word	1109459356
 2821 0130 94012142 		.word	1109459348
 2822 0134 CC000000 		.word	.LC45
 2823 0138 00000000 		.word	.LC38
 2824 013c 0C000000 		.word	.LC39
 2825 0140 90012142 		.word	1109459344
 2826 0144 18000000 		.word	.LC40
 2827 0148 1C000000 		.word	.LC41
 2828 014c 54000000 		.word	.LC42
 2829 0150 74000000 		.word	.LC43
 2830 0154 94000000 		.word	.LC44
 2831 0158 18012142 		.word	1109459224
 2832 015c 04000000 		.word	.LC13
 2833 0160 00000000 		.word	p_Fifo1
 2834              		.size	ili9486, .-ili9486
 2835              		.section	.text.wiznet5500,"ax",%progbits
 2836              		.align	1
 2837              		.p2align 2,,3
 2838              		.global	wiznet5500
 2839              		.syntax unified
 2840              		.thumb
 2841              		.thumb_func
 2842              		.fpu softvfp
 2843              		.type	wiznet5500, %function
 2844              	wiznet5500:
 2845              		@ args = 0, pretend = 0, frame = 8
 2846              		@ frame_needed = 0, uses_anonymous_args = 0
 2847 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 2848 0004 82B0     		sub	sp, sp, #8	@,,
 2849              	@ main.c:1066: 	SPI1_init_();
 2850 0006 FFF7FEFF 		bl	SPI1_init_	@
ARM GAS  /tmp/ccAYxbuo.s 			page 51


 2851              	@ main.c:1068: 	GPIOB->CRL = (GPIOB->CRL & 0xffffff0f) | 0x00000010;	
 2852 000a 1A49     		ldr	r1, .L234	@ tmp130,
 2853              	@ main.c:1069: 	GPIOC->CRH = (GPIOC->CRH & 0xf0ffffff) | 0x01000000;	// LED Blue  PC14
 2854 000c 1A4A     		ldr	r2, .L234+4	@ tmp133,
 2855              	@ main.c:1068: 	GPIOB->CRL = (GPIOB->CRL & 0xffffff0f) | 0x00000010;	
 2856 000e 0B68     		ldr	r3, [r1]	@ _2, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2857              	@ main.c:1142: 			if(flag_9);
 2858 0010 1A4F     		ldr	r7, .L234+8	@ tmp137,
 2859              	@ main.c:1068: 	GPIOB->CRL = (GPIOB->CRL & 0xffffff0f) | 0x00000010;	
 2860 0012 23F0F003 		bic	r3, r3, #240	@ tmp131, _2,
 2861 0016 43F01003 		orr	r3, r3, #16	@ _5, tmp131,
 2862 001a 0B60     		str	r3, [r1]	@ _5, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 2863              	@ main.c:1069: 	GPIOC->CRH = (GPIOC->CRH & 0xf0ffffff) | 0x01000000;	// LED Blue  PC14
 2864 001c 5368     		ldr	r3, [r2, #4]	@ _7, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 2865              	@ main.c:1142: 			if(flag_9);
 2866 001e 7F01     		lsls	r7, r7, #5	@ tmp138, tmp137,
 2867              	@ main.c:1069: 	GPIOC->CRH = (GPIOC->CRH & 0xf0ffffff) | 0x01000000;	// LED Blue  PC14
 2868 0020 23F07063 		bic	r3, r3, #251658240	@ tmp134, _7,
 2869 0024 43F08073 		orr	r3, r3, #16777216	@ _9, tmp134,
 2870 0028 5360     		str	r3, [r2, #4]	@ _9, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 2871              	@ main.c:1071: 	DHT_Init();
 2872 002a FFF7FEFF 		bl	DHT_Init	@
 2873 002e 144C     		ldr	r4, .L234+12	@ tmp150,
 2874              	@ main.c:1126: 		if(STCLK_MS*1000  < (trg0 - SysTick->VAL)){
 2875 0030 144D     		ldr	r5, .L234+16	@ tmp142,
 2876              	@ main.c:1129: 			if (!(DHT_read( &AMh, &AMt,1,&AM2302_pin)) ){		// AM2302 read T & H
 2877 0032 DFF85C80 		ldr	r8, .L234+28	@ tmp153,
 2878              	@ main.c:1132: 			LED^=1;
 2879 0036 144E     		ldr	r6, .L234+20	@ tmp148,
 2880              	@ main.c:1142: 			if(flag_9);
 2881 0038 2437     		adds	r7, r7, #36	@ _20, tmp138,
 2882              	.L229:
 2883              	@ main.c:1126: 		if(STCLK_MS*1000  < (trg0 - SysTick->VAL)){
 2884 003a 1449     		ldr	r1, .L234+24	@ tmp140,
 2885              	.L228:
 2886 003c 2368     		ldr	r3, [r4]	@ trg0.104_10, trg0
 2887 003e 8A68     		ldr	r2, [r1, #8]	@ _11, MEM[(struct SysTick_Type *)3758153744B].VAL
 2888 0040 9B1A     		subs	r3, r3, r2	@ tmp141, trg0.104_10, _11
 2889 0042 AB42     		cmp	r3, r5	@ tmp141, tmp142
 2890 0044 FAD9     		bls	.L228	@,
 2891              	@ main.c:1127: 			trg0 = SysTick->VAL;
 2892 0046 D1F808C0 		ldr	ip, [r1, #8]	@ _13, MEM[(struct SysTick_Type *)3758153744B].VAL
 2893              	@ main.c:1129: 			if (!(DHT_read( &AMh, &AMt,1,&AM2302_pin)) ){		// AM2302 read T & H
 2894 004a 4346     		mov	r3, r8	@, tmp153
 2895 004c 0122     		movs	r2, #1	@,
 2896 004e 0DF10601 		add	r1, sp, #6	@ tmp154,,
 2897 0052 01A8     		add	r0, sp, #4	@ tmp155,,
 2898              	@ main.c:1127: 			trg0 = SysTick->VAL;
 2899 0054 C4F800C0 		str	ip, [r4]	@ _13, trg0
 2900              	@ main.c:1129: 			if (!(DHT_read( &AMh, &AMt,1,&AM2302_pin)) ){		// AM2302 read T & H
 2901 0058 FFF7FEFF 		bl	DHT_read	@
 2902              	@ main.c:1132: 			LED^=1;
 2903 005c 3368     		ldr	r3, [r6]	@ _14, MEM[(volatile long unsigned int *)1109524916B]
 2904 005e 83F00103 		eor	r3, r3, #1	@ _15, _14,
 2905 0062 3360     		str	r3, [r6]	@ _15, MEM[(volatile long unsigned int *)1109524916B]
 2906              	@ main.c:1142: 			if(flag_9);
 2907 0064 3B68     		ldr	r3, [r7]	@ _21, *_20
ARM GAS  /tmp/ccAYxbuo.s 			page 52


 2908 0066 002B     		cmp	r3, #0	@ _21
 2909 0068 E7D1     		bne	.L229	@
 2910              	@ main.c:1146: 			flag_9 ^=1;
 2911 006a 3B68     		ldr	r3, [r7]	@ _22, *_20
 2912 006c 83F00103 		eor	r3, r3, #1	@ _23, _22,
 2913 0070 3B60     		str	r3, [r7]	@ _23, *_20
 2914 0072 E2E7     		b	.L229	@
 2915              	.L235:
 2916              		.align	2
 2917              	.L234:
 2918 0074 000C0140 		.word	1073810432
 2919 0078 00100140 		.word	1073811456
 2920 007c 00001001 		.word	.LANCHOR17+17825792
 2921 0080 00000000 		.word	trg0
 2922 0084 40548900 		.word	9000000
 2923 0088 B4012242 		.word	1109524916
 2924 008c 10E000E0 		.word	-536813552
 2925 0090 3C012142 		.word	1109459260
 2926              		.size	wiznet5500, .-wiznet5500
 2927              		.section	.text.uv_meter,"ax",%progbits
 2928              		.align	1
 2929              		.p2align 2,,3
 2930              		.global	uv_meter
 2931              		.syntax unified
 2932              		.thumb
 2933              		.thumb_func
 2934              		.fpu softvfp
 2935              		.type	uv_meter, %function
 2936              	uv_meter:
 2937              		@ args = 0, pretend = 0, frame = 264
 2938              		@ frame_needed = 0, uses_anonymous_args = 0
 2939 0000 F0B5     		push	{r4, r5, r6, r7, lr}	@
 2940              	@ main.c:1160: 		PB10_o = 1;
 2941 0002 0124     		movs	r4, #1	@ tmp126,
 2942              	@ main.c:1158: 		GPIOA->CRL = (GPIOA->CRL & 0x000fffff) | 0xaa000000; // ADC12_IN5		
 2943 0004 1C4A     		ldr	r2, .L245	@ tmp121,
 2944              	@ main.c:1160: 		PB10_o = 1;
 2945 0006 1D48     		ldr	r0, .L245+4	@ tmp125,
 2946              	@ main.c:1158: 		GPIOA->CRL = (GPIOA->CRL & 0x000fffff) | 0xaa000000; // ADC12_IN5		
 2947 0008 1368     		ldr	r3, [r2]	@ _2, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 2948              	@ main.c:1161: 		LED = 1;
 2949 000a 1D49     		ldr	r1, .L245+8	@ tmp127,
 2950              	@ main.c:1158: 		GPIOA->CRL = (GPIOA->CRL & 0x000fffff) | 0xaa000000; // ADC12_IN5		
 2951 000c C3F31303 		ubfx	r3, r3, #0, #20	@ tmp122, _2,,
 2952 0010 43F02A43 		orr	r3, r3, #-1442840576	@ _4, tmp122,
 2953 0014 1360     		str	r3, [r2]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 2954              	@ main.c:1153: void uv_meter(void)			{
 2955 0016 C3B0     		sub	sp, sp, #268	@,,
 2956              	@ main.c:1160: 		PB10_o = 1;
 2957 0018 0460     		str	r4, [r0]	@ tmp126, MEM[(volatile long unsigned int *)1109492136B]
 2958              	@ main.c:1161: 		LED = 1;
 2959 001a 0C60     		str	r4, [r1]	@ tmp126, MEM[(volatile long unsigned int *)1109524916B]
 2960              	@ main.c:1162: 		I2C2_init();
 2961 001c FFF7FEFF 		bl	I2C2_init	@
 2962              	@ main.c:1169: 		ADC1->SQR3 = ( 5<<0*5 );		//(channel<<sequence*5) sequence=0..5   
 2963 0020 0527     		movs	r7, #5	@ tmp140,
 2964              	@ main.c:5298: 		RCC_APB2RSTR_ADC1RST_bb = 0;
ARM GAS  /tmp/ccAYxbuo.s 			page 53


 2965 0022 0022     		movs	r2, #0	@ tmp136,
 2966              	@ main.c:1170: 		ADC1->SMPR2 = (4<<5*3 );
 2967 0024 4FF40036 		mov	r6, #131072	@ tmp142,
 2968              	@ main.c:1171: 		ADC1->CR1 = ADC_CR1_SCAN;			// multi channel mode		
 2969 0028 4FF48070 		mov	r0, #256	@ tmp144,
 2970              	@ main.c:5295: 		RCC->APB2ENR   |= RCC_APB2ENR_ADC1EN;	// enable clock for ADC1
 2971 002c 154B     		ldr	r3, .L245+12	@ tmp129,
 2972              	@ main.c:1189: 			b=0;
 2973 002e 1546     		mov	r5, r2	@ tmp153, tmp136
 2974              	@ main.c:5295: 		RCC->APB2ENR   |= RCC_APB2ENR_ADC1EN;	// enable clock for ADC1
 2975 0030 9969     		ldr	r1, [r3, #24]	@ _22, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 2976 0032 41F40071 		orr	r1, r1, #512	@ _23, _22,
 2977 0036 9961     		str	r1, [r3, #24]	@ _23, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 2978              	@ main.c:5296: 		RCC->CFGR 		 |= RCC_CFGR_ADCPRE_DIV4;  // 2/4/6/8 str98
 2979 0038 5968     		ldr	r1, [r3, #4]	@ _24, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 2980 003a 41F48041 		orr	r1, r1, #16384	@ _25, _24,
 2981 003e 5960     		str	r1, [r3, #4]	@ _25, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 2982              	@ main.c:5297: 		RCC_APB2RSTR_ADC1RST_bb = 1;		// Reset ADC1
 2983 0040 1149     		ldr	r1, .L245+16	@ tmp133,
 2984              	@ main.c:1168: 		ADC1->SQR1 = ( 0<<20 	); 		//length and sequence 12..15 conversion 13-16 on channe
 2985 0042 A3F56C43 		sub	r3, r3, #60416	@ tmp137, tmp137,
 2986              	@ main.c:5297: 		RCC_APB2RSTR_ADC1RST_bb = 1;		// Reset ADC1
 2987 0046 0C60     		str	r4, [r1]	@ tmp126, MEM[(volatile long unsigned int *)1111622052B]
 2988              	@ main.c:5298: 		RCC_APB2RSTR_ADC1RST_bb = 0;
 2989 0048 0A60     		str	r2, [r1]	@ tmp136, MEM[(volatile long unsigned int *)1111622052B]
 2990              	@ main.c:1168: 		ADC1->SQR1 = ( 0<<20 	); 		//length and sequence 12..15 conversion 13-16 on channe
 2991 004a DA62     		str	r2, [r3, #44]	@ tmp136, MEM[(struct ADC_TypeDef *)1073816576B].SQR1
 2992              	@ main.c:1169: 		ADC1->SQR3 = ( 5<<0*5 );		//(channel<<sequence*5) sequence=0..5   
 2993 004c 5F63     		str	r7, [r3, #52]	@ tmp140, MEM[(struct ADC_TypeDef *)1073816576B].SQR3
 2994              	@ main.c:1170: 		ADC1->SMPR2 = (4<<5*3 );
 2995 004e 1E61     		str	r6, [r3, #16]	@ tmp142, MEM[(struct ADC_TypeDef *)1073816576B].SMPR2
 2996              	@ main.c:1171: 		ADC1->CR1 = ADC_CR1_SCAN;			// multi channel mode		
 2997 0050 5860     		str	r0, [r3, #4]	@ tmp144, MEM[(struct ADC_TypeDef *)1073816576B].CR1
 2998              	@ main.c:1172: 		ADC1->CR2 |= ADC_CR2_ADON ;		// On ADC
 2999 0052 9A68     		ldr	r2, [r3, #8]	@ _5, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 3000              	@ main.c:1180: 			while(PB0_i==0);
 3001 0054 0D4C     		ldr	r4, .L245+20	@ tmp147,
 3002              	@ main.c:1172: 		ADC1->CR2 |= ADC_CR2_ADON ;		// On ADC
 3003 0056 42F00102 		orr	r2, r2, #1	@ _6, _5,
 3004 005a 9A60     		str	r2, [r3, #8]	@ _6, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 3005              	.L237:
 3006              	@ main.c:1180: 			while(PB0_i==0);
 3007 005c 2368     		ldr	r3, [r4]	@ _7, MEM[(volatile long unsigned int *)1109491968B]
 3008 005e 002B     		cmp	r3, #0	@ _7
 3009 0060 FCD0     		beq	.L237	@
 3010              	@ main.c:1184: 			i2c2_scan(a,&b);
 3011 0062 0DF10701 		add	r1, sp, #7	@ tmp157,,
 3012 0066 02A8     		add	r0, sp, #8	@ tmp158,,
 3013 0068 FFF7FEFF 		bl	i2c2_scan	@
 3014              	.L238:
 3015              	@ main.c:1188: 			while(PB0_i==1);
 3016 006c 2368     		ldr	r3, [r4]	@ _8, MEM[(volatile long unsigned int *)1109491968B]
 3017 006e 012B     		cmp	r3, #1	@ _8,
 3018 0070 FCD0     		beq	.L238	@,
 3019              	@ main.c:1189: 			b=0;
 3020 0072 8DF80750 		strb	r5, [sp, #7]	@ tmp153, b
 3021              	@ main.c:1180: 			while(PB0_i==0);
ARM GAS  /tmp/ccAYxbuo.s 			page 54


 3022 0076 F1E7     		b	.L237	@
 3023              	.L246:
 3024              		.align	2
 3025              	.L245:
 3026 0078 00080140 		.word	1073809408
 3027 007c A8812142 		.word	1109492136
 3028 0080 B4012242 		.word	1109524916
 3029 0084 00100240 		.word	1073876992
 3030 0088 A4014242 		.word	1111622052
 3031 008c 00812142 		.word	1109491968
 3032              		.size	uv_meter, .-uv_meter
 3033              		.section	.text.IRQLoraInit,"ax",%progbits
 3034              		.align	1
 3035              		.p2align 2,,3
 3036              		.global	IRQLoraInit
 3037              		.syntax unified
 3038              		.thumb
 3039              		.thumb_func
 3040              		.fpu softvfp
 3041              		.type	IRQLoraInit, %function
 3042              	IRQLoraInit:
 3043              		@ args = 0, pretend = 0, frame = 0
 3044              		@ frame_needed = 0, uses_anonymous_args = 0
 3045              		@ link register save eliminated.
 3046              	@ main.c:1229: 		AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI0_PB;		// Enable interrupt port PA0
 3047 0000 0123     		movs	r3, #1	@ tmp111,
 3048              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 3049 0002 4020     		movs	r0, #64	@ tmp119,
 3050              	@ main.c:1220: void IRQLoraInit(void)	{
 3051 0004 10B4     		push	{r4}	@
 3052              	@ main.c:1230: 		EXTI->PR   = EXTI_PR_PR0;			// Clear interupt request EXTI0
 3053 0006 054A     		ldr	r2, .L249	@ tmp112,
 3054              	@ main.c:1229: 		AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI0_PB;		// Enable interrupt port PA0
 3055 0008 054C     		ldr	r4, .L249+4	@ tmp110,
 3056              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 3057 000a 0649     		ldr	r1, .L249+8	@ tmp118,
 3058              	@ main.c:1229: 		AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI0_PB;		// Enable interrupt port PA0
 3059 000c A360     		str	r3, [r4, #8]	@ tmp111, MEM[(struct AFIO_TypeDef *)1073807360B].EXTICR
 3060              	@ main.c:1230: 		EXTI->PR   = EXTI_PR_PR0;			// Clear interupt request EXTI0
 3061 000e 5361     		str	r3, [r2, #20]	@ tmp111, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 3062              	@ main.c:1235: 	}
 3063 0010 10BC     		pop	{r4}	@
 3064              	@ main.c:1231: 		EXTI->RTSR 	 = EXTI_RTSR_TR0;
 3065 0012 9360     		str	r3, [r2, #8]	@ tmp111, MEM[(struct EXTI_TypeDef *)1073808384B].RTSR
 3066              	@ main.c:1233: 		EXTI->IMR  =  EXTI_IMR_MR0;		// Interrupt mask register EXTI_IMR
 3067 0014 1360     		str	r3, [r2]	@ tmp111, MEM[(struct EXTI_TypeDef *)1073808384B].IMR
 3068              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 3069 0016 0860     		str	r0, [r1]	@ tmp119, MEM[(struct NVIC_Type *)3758153984B].ISER
 3070              	@ main.c:1235: 	}
 3071 0018 7047     		bx	lr	@
 3072              	.L250:
 3073 001a 00BF     		.align	2
 3074              	.L249:
 3075 001c 00040140 		.word	1073808384
 3076 0020 00000140 		.word	1073807360
 3077 0024 00E100E0 		.word	-536813312
 3078              		.size	IRQLoraInit, .-IRQLoraInit
ARM GAS  /tmp/ccAYxbuo.s 			page 55


 3079              		.section	.text.LoRaRX,"ax",%progbits
 3080              		.align	1
 3081              		.p2align 2,,3
 3082              		.global	LoRaRX
 3083              		.syntax unified
 3084              		.thumb
 3085              		.thumb_func
 3086              		.fpu softvfp
 3087              		.type	LoRaRX, %function
 3088              	LoRaRX:
 3089              		@ args = 0, pretend = 0, frame = 80
 3090              		@ frame_needed = 0, uses_anonymous_args = 0
 3091 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 3092              	@ main.c:1265: 		SX1278_begin(&SX1278_1, SX1278_433MHZ, SX1278_POWER_11DBM, SX1278_LORA_SF_7,SX1278
 3093 0004 0926     		movs	r6, #9	@ tmp180,
 3094 0006 0022     		movs	r2, #0	@,
 3095              	@ main.c:1255: 		GPIOA->CRL = (GPIOA->CRL & 0xfff00000) | 0x00044343;	//   PA2=MOSI, PA1=MISO, PA0=
 3096 0008 4E4C     		ldr	r4, .L261	@ tmp157,
 3097 000a 4F49     		ldr	r1, .L261+4	@ _3,
 3098 000c 2368     		ldr	r3, [r4]	@ _1, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 3099              	@ main.c:1256: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 3100 000e 4F48     		ldr	r0, .L261+8	@ tmp162,
 3101              	@ main.c:1255: 		GPIOA->CRL = (GPIOA->CRL & 0xfff00000) | 0x00044343;	//   PA2=MOSI, PA1=MISO, PA0=
 3102 0010 1B0D     		lsrs	r3, r3, #20	@ tmp158, _1,
 3103 0012 1B05     		lsls	r3, r3, #20	@ tmp158, tmp158,
 3104 0014 1943     		orrs	r1, r1, r3	@, _3, _3, tmp158
 3105 0016 2160     		str	r1, [r4]	@ _3, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 3106              	@ main.c:1256: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 3107 0018 4368     		ldr	r3, [r0, #4]	@ _4, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 3108              	@ main.c:1257: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 2); 
 3109 001a 4D4F     		ldr	r7, .L261+12	@ tmp243,
 3110              	@ main.c:1256: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 3111 001c 23F0FF03 		bic	r3, r3, #255	@ tmp163, _4,
 3112              	@ main.c:1236: void LoRaRX(void)				{
 3113 0020 97B0     		sub	sp, sp, #92	@,,
 3114              	@ main.c:1256: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 3115 0022 43F03303 		orr	r3, r3, #51	@ _6, tmp163,
 3116              	@ main.c:1258: 		SX1278_hw1.miso = (u32 *)m_BITBAND_PERIPH(&GPIOA->IDR, 1); 
 3117 0026 4B4C     		ldr	r4, .L261+16	@ tmp168,
 3118              	@ main.c:1256: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 3119 0028 4360     		str	r3, [r0, #4]	@ _6, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 3120              	@ main.c:1264: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 3121 002a 4B4D     		ldr	r5, .L261+20	@ tmp177,
 3122              	@ main.c:1265: 		SX1278_begin(&SX1278_1, SX1278_433MHZ, SX1278_POWER_11DBM, SX1278_LORA_SF_7,SX1278
 3123 002c 0096     		str	r6, [sp]	@ tmp180,
 3124              	@ main.c:1259: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 0); 
 3125 002e DFF844E1 		ldr	lr, .L261+48	@ tmp170,
 3126              	@ main.c:1260: 		SX1278_hw1.nss  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 8); 
 3127 0032 DFF844C1 		ldr	ip, .L261+52	@ tmp172,
 3128              	@ main.c:1257: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 2); 
 3129 0036 DFF84481 		ldr	r8, .L261+56	@ tmp166,
 3130              	@ main.c:1261: 		SX1278_hw1.rst  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 9); 
 3131 003a 484E     		ldr	r6, .L261+24	@ tmp174,
 3132              	@ main.c:1258: 		SX1278_hw1.miso = (u32 *)m_BITBAND_PERIPH(&GPIOA->IDR, 1); 
 3133 003c 7C60     		str	r4, [r7, #4]	@ tmp168, SX1278_hw1.miso
 3134              	@ main.c:1262: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 1); 
 3135 003e 04F50044 		add	r4, r4, #32768	@ tmp176, tmp176,
ARM GAS  /tmp/ccAYxbuo.s 			page 56


 3136              	@ main.c:1265: 		SX1278_begin(&SX1278_1, SX1278_433MHZ, SX1278_POWER_11DBM, SX1278_LORA_SF_7,SX1278
 3137 0042 1146     		mov	r1, r2	@,
 3138 0044 0123     		movs	r3, #1	@,
 3139              	@ main.c:1261: 		SX1278_hw1.rst  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 9); 
 3140 0046 C7E903C6 		strd	ip, r6, [r7, #12]	@ tmp172, tmp174, tmp243,
 3141              	@ main.c:1265: 		SX1278_begin(&SX1278_1, SX1278_433MHZ, SX1278_POWER_11DBM, SX1278_LORA_SF_7,SX1278
 3142 004a 2846     		mov	r0, r5	@, tmp177
 3143              	@ main.c:1257: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 2); 
 3144 004c C7F80080 		str	r8, [r7]	@ tmp166, SX1278_hw1.mosi
 3145              	@ main.c:1259: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 0); 
 3146 0050 C7F808E0 		str	lr, [r7, #8]	@ tmp170, SX1278_hw1.sck
 3147              	@ main.c:1262: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 1); 
 3148 0054 7C61     		str	r4, [r7, #20]	@ tmp176, SX1278_hw1.dio0
 3149              	@ main.c:1264: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 3150 0056 2F60     		str	r7, [r5]	@ tmp243, SX1278_1.hw
 3151              	@ main.c:1265: 		SX1278_begin(&SX1278_1, SX1278_433MHZ, SX1278_POWER_11DBM, SX1278_LORA_SF_7,SX1278
 3152 0058 FFF7FEFF 		bl	SX1278_begin	@
 3153              	@ main.c:1272: 		ret = SX1278_LoRaEntryRx(&SX1278_1, 7, 2000);
 3154 005c 4FF4FA62 		mov	r2, #2000	@,
 3155 0060 2846     		mov	r0, r5	@, tmp177
 3156 0062 0721     		movs	r1, #7	@,
 3157 0064 FFF7FEFF 		bl	SX1278_LoRaEntryRx	@
 3158              	@ main.c:1296: 		flag_10=0;
 3159 0068 0022     		movs	r2, #0	@ tmp187,
 3160              	@ main.c:1328: 				SX1278_LoRaRx(&SX1278_1);  // Odczyt danych do buforów
 3161 006a A946     		mov	r9, r5	@ tmp245, tmp177
 3162              	@ main.c:1289: 		trg1  = SysTick->VAL;
 3163 006c 3C4B     		ldr	r3, .L261+28	@ tmp182,
 3164              	@ main.c:1296: 		flag_10=0;
 3165 006e 3D4C     		ldr	r4, .L261+32	@ tmp185,
 3166              	@ main.c:1386: 					trg1  = SysTick->VAL;
 3167 0070 9A46     		mov	r10, r3	@ tmp247, tmp182
 3168              	@ main.c:1289: 		trg1  = SysTick->VAL;
 3169 0072 3D4E     		ldr	r6, .L261+36	@ tmp242,
 3170 0074 9B68     		ldr	r3, [r3, #8]	@ _7, MEM[(struct SysTick_Type *)3758153744B].VAL
 3171              	@ main.c:1296: 		flag_10=0;
 3172 0076 6401     		lsls	r4, r4, #5	@ tmp186, tmp185,
 3173              	@ main.c:1385: 					LED = 0;
 3174 0078 DFF804B1 		ldr	fp, .L261+60	@ tmp246,
 3175              	@ main.c:1289: 		trg1  = SysTick->VAL;
 3176 007c 3360     		str	r3, [r6]	@ _7, trg1
 3177 007e 05F10A08 		add	r8, r5, #10	@ tmp244, tmp177,
 3178              	@ main.c:1296: 		flag_10=0;
 3179 0082 A262     		str	r2, [r4, #40]	@ tmp187, *_12
 3180 0084 2834     		adds	r4, r4, #40	@ _12, tmp186,
 3181              	.L252:
 3182              	@ main.c:1320: 			if( (flag_10==0) && *SX1278_hw1.dio0==1 )  {
 3183 0086 2568     		ldr	r5, [r4]	@ _25, *_12
 3184 0088 1DB9     		cbnz	r5, .L253	@ _25,
 3185              	@ main.c:1320: 			if( (flag_10==0) && *SX1278_hw1.dio0==1 )  {
 3186 008a 7B69     		ldr	r3, [r7, #20]	@ _26, SX1278_hw1.dio0
 3187 008c 1B68     		ldr	r3, [r3]	@ _27, *_26
 3188 008e 012B     		cmp	r3, #1	@ _27,
 3189 0090 1DD0     		beq	.L260	@,
 3190              	.L253:
 3191              	@ main.c:1391: 			if(flag_10 && (*SX1278_hw1.dio0)==0 ) { flag_10=0; }
 3192 0092 2368     		ldr	r3, [r4]	@ _49, *_12
ARM GAS  /tmp/ccAYxbuo.s 			page 57


 3193              	@ main.c:1393: 			if((STCLK_MS*300 < (trg1 - SysTick->VAL)) && LED==0){	
 3194 0094 354A     		ldr	r2, .L261+40	@ tmp235,
 3195              	@ main.c:1391: 			if(flag_10 && (*SX1278_hw1.dio0)==0 ) { flag_10=0; }
 3196 0096 1BB1     		cbz	r3, .L254	@ _49,
 3197              	@ main.c:1391: 			if(flag_10 && (*SX1278_hw1.dio0)==0 ) { flag_10=0; }
 3198 0098 7B69     		ldr	r3, [r7, #20]	@ _50, SX1278_hw1.dio0
 3199 009a 1B68     		ldr	r3, [r3]	@ _51, *_50
 3200 009c 03B9     		cbnz	r3, .L254	@ _51,
 3201              	@ main.c:1391: 			if(flag_10 && (*SX1278_hw1.dio0)==0 ) { flag_10=0; }
 3202 009e 2360     		str	r3, [r4]	@ _51, *_12
 3203              	.L254:
 3204              	@ main.c:1393: 			if((STCLK_MS*300 < (trg1 - SysTick->VAL)) && LED==0){	
 3205 00a0 3368     		ldr	r3, [r6]	@ trg1.116_52, trg1
 3206 00a2 DAF80810 		ldr	r1, [r10, #8]	@ _53, MEM[(struct SysTick_Type *)3758153744B].VAL
 3207 00a6 5B1A     		subs	r3, r3, r1	@ tmp234, trg1.116_52, _53
 3208 00a8 9342     		cmp	r3, r2	@ tmp234, tmp235
 3209 00aa ECD9     		bls	.L252	@,
 3210              	@ main.c:1393: 			if((STCLK_MS*300 < (trg1 - SysTick->VAL)) && LED==0){	
 3211 00ac DBF80030 		ldr	r3, [fp]	@ _55, MEM[(volatile long unsigned int *)1109524916B]
 3212 00b0 002B     		cmp	r3, #0	@ _55
 3213 00b2 E8D1     		bne	.L252	@
 3214              	@ main.c:1396: 				LED = 1;
 3215 00b4 0123     		movs	r3, #1	@ tmp240,
 3216              	@ main.c:1394: 					trg1  = SysTick->VAL;
 3217 00b6 DAF80820 		ldr	r2, [r10, #8]	@ _56, MEM[(struct SysTick_Type *)3758153744B].VAL
 3218 00ba 3260     		str	r2, [r6]	@ _56, trg1
 3219              	@ main.c:1396: 				LED = 1;
 3220 00bc CBF80030 		str	r3, [fp]	@ tmp240, MEM[(volatile long unsigned int *)1109524916B]
 3221              	@ main.c:1320: 			if( (flag_10==0) && *SX1278_hw1.dio0==1 )  {
 3222 00c0 2568     		ldr	r5, [r4]	@ _25, *_12
 3223 00c2 002D     		cmp	r5, #0	@ _25
 3224 00c4 E5D1     		bne	.L253	@
 3225 00c6 7B69     		ldr	r3, [r7, #20]	@ _26, SX1278_hw1.dio0
 3226 00c8 1B68     		ldr	r3, [r3]	@ _27, *_26
 3227 00ca 012B     		cmp	r3, #1	@ _27,
 3228 00cc E1D1     		bne	.L253	@,
 3229              	.L260:
 3230              	@ main.c:1328: 				SX1278_LoRaRx(&SX1278_1);  // Odczyt danych do buforów
 3231 00ce 4846     		mov	r0, r9	@, tmp245
 3232 00d0 0593     		str	r3, [sp, #20]	@ _27, %sfp
 3233 00d2 FFF7FEFF 		bl	SX1278_LoRaRx	@
 3234              	@ main.c:1338: 				prssi = SX1278_SPIRead(&SX1278_1, LR_RegPktRssiValue)-164;
 3235 00d6 1A21     		movs	r1, #26	@,
 3236 00d8 4846     		mov	r0, r9	@, tmp245
 3237 00da FFF7FEFF 		bl	SX1278_SPIRead	@
 3238              	@ main.c:1345: 				memcpy(buf_rx, SX1278_1.rxBuffer, 7);
 3239 00de B8F80420 		ldrh	r2, [r8, #4]	@ unaligned	@ tmp198, MEM[(void *)&SX1278_1 + 10B]
 3240 00e2 D8F80000 		ldr	r0, [r8]	@ unaligned	@, MEM[(void *)&SX1278_1 + 10B]
 3241 00e6 ADF81C20 		strh	r2, [sp, #28]	@ unaligned	@ tmp198, MEM[(void *)&buf_rx]
 3242              	@ main.c:1352: 				Cnt= (s16)(buf_rx[4]+(buf_rx[5]<<8));
 3243 00ea 9DF81D10 		ldrb	r1, [sp, #29]	@ zero_extendqisi2	@ buf_rx, buf_rx
 3244 00ee 9DF81C20 		ldrb	r2, [sp, #28]	@ zero_extendqisi2	@ buf_rx, buf_rx
 3245              	@ main.c:1345: 				memcpy(buf_rx, SX1278_1.rxBuffer, 7);
 3246 00f2 98F806C0 		ldrb	ip, [r8, #6]	@ zero_extendqisi2	@ MEM[(void *)&SX1278_1 + 10B], MEM[(void *)&SX1278_1 + 10B]
 3247              	@ main.c:1352: 				Cnt= (s16)(buf_rx[4]+(buf_rx[5]<<8));
 3248 00f6 02EB0122 		add	r2, r2, r1, lsl #8	@ tmp215, buf_rx, buf_rx,
 3249 00fa 92B2     		uxth	r2, r2	@ Cnt, tmp215
ARM GAS  /tmp/ccAYxbuo.s 			page 58


 3250              	@ main.c:1351: 				t2 = (s16)(buf_rx[2]+(buf_rx[3]<<8));
 3251 00fc 0114     		asrs	r1, r0, #16	@ t2,,
 3252              	@ main.c:1345: 				memcpy(buf_rx, SX1278_1.rxBuffer, 7);
 3253 00fe 0690     		str	r0, [sp, #24]	@, MEM[(void *)&buf_rx]
 3254              	@ main.c:1359: 					sint2uart(t1);	//UaPutK("  ");
 3255 0100 00B2     		sxth	r0, r0	@,
 3256              	@ main.c:1345: 				memcpy(buf_rx, SX1278_1.rxBuffer, 7);
 3257 0102 8DF81EC0 		strb	ip, [sp, #30]	@ MEM[(void *)&SX1278_1 + 10B], MEM[(void *)&buf_rx]
 3258              	@ main.c:1352: 				Cnt= (s16)(buf_rx[4]+(buf_rx[5]<<8));
 3259 0106 0392     		str	r2, [sp, #12]	@ Cnt, %sfp
 3260              	@ main.c:1351: 				t2 = (s16)(buf_rx[2]+(buf_rx[3]<<8));
 3261 0108 0491     		str	r1, [sp, #16]	@ t2, %sfp
 3262              	@ main.c:1344: 				buf_rx[7] = 0;
 3263 010a 8DF81F50 		strb	r5, [sp, #31]	@ _25, buf_rx
 3264              	@ main.c:1359: 					sint2uart(t1);	//UaPutK("  ");
 3265 010e FFF7FEFF 		bl	sint2uart	@
 3266              	@ main.c:1360: 					UaPutC(',');					
 3267 0112 2C20     		movs	r0, #44	@,
 3268 0114 FFF7FEFF 		bl	UaPutC	@
 3269              	@ main.c:1361: 					sint2uart(t2);	//UaPutK("  ");
 3270 0118 0499     		ldr	r1, [sp, #16]	@ t2, %sfp
 3271 011a 0846     		mov	r0, r1	@, t2
 3272 011c FFF7FEFF 		bl	sint2uart	@
 3273              	@ main.c:1362: 					UaPutC(',');					
 3274 0120 2C20     		movs	r0, #44	@,
 3275 0122 FFF7FEFF 		bl	UaPutC	@
 3276              	@ main.c:1363: 					sint2uart(Cnt);	//UaPutK("  ");
 3277 0126 039A     		ldr	r2, [sp, #12]	@ Cnt, %sfp
 3278 0128 1046     		mov	r0, r2	@, Cnt
 3279 012a FFF7FEFF 		bl	sint2uart	@
 3280              	@ main.c:1364: 					UaPutS("\n");					
 3281 012e 1048     		ldr	r0, .L261+44	@,
 3282 0130 FFF7FEFF 		bl	UaPutS	@
 3283              	@ main.c:1385: 					LED = 0;
 3284 0134 CBF80050 		str	r5, [fp]	@ _25, MEM[(volatile long unsigned int *)1109524916B]
 3285              	@ main.c:1386: 					trg1  = SysTick->VAL;
 3286 0138 DAF80820 		ldr	r2, [r10, #8]	@ _48, MEM[(struct SysTick_Type *)3758153744B].VAL
 3287              	@ main.c:1388: 				flag_10 = 1;
 3288 013c 059B     		ldr	r3, [sp, #20]	@ _27, %sfp
 3289              	@ main.c:1386: 					trg1  = SysTick->VAL;
 3290 013e 3260     		str	r2, [r6]	@ _48, trg1
 3291              	@ main.c:1388: 				flag_10 = 1;
 3292 0140 2360     		str	r3, [r4]	@ _27, *_12
 3293 0142 A6E7     		b	.L253	@
 3294              	.L262:
 3295              		.align	2
 3296              	.L261:
 3297 0144 00080140 		.word	1073809408
 3298 0148 43430400 		.word	279363
 3299 014c 000C0140 		.word	1073810432
 3300 0150 00000000 		.word	.LANCHOR18
 3301 0154 04012142 		.word	1109459204
 3302 0158 00000000 		.word	.LANCHOR19
 3303 015c A4812142 		.word	1109492132
 3304 0160 10E000E0 		.word	-536813552
 3305 0164 00001001 		.word	.LANCHOR17+17825792
 3306 0168 00000000 		.word	trg1
ARM GAS  /tmp/ccAYxbuo.s 			page 59


 3307 016c E0322900 		.word	2700000
 3308 0170 00000000 		.word	.LC46
 3309 0174 80012142 		.word	1109459328
 3310 0178 A0812142 		.word	1109492128
 3311 017c 88012142 		.word	1109459336
 3312 0180 B4012242 		.word	1109524916
 3313              		.size	LoRaRX, .-LoRaRX
 3314              		.section	.text.LoRaRX1,"ax",%progbits
 3315              		.align	1
 3316              		.p2align 2,,3
 3317              		.global	LoRaRX1
 3318              		.syntax unified
 3319              		.thumb
 3320              		.thumb_func
 3321              		.fpu softvfp
 3322              		.type	LoRaRX1, %function
 3323              	LoRaRX1:
 3324              		@ args = 0, pretend = 0, frame = 24
 3325              		@ frame_needed = 0, uses_anonymous_args = 0
 3326              	@ main.c:1430: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3327 0000 0022     		movs	r2, #0	@,
 3328              	@ main.c:1401: void LoRaRX1(void)	{
 3329 0002 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 3330              	@ main.c:1411: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3331 0006 3021     		movs	r1, #48	@ tmp169,
 3332 0008 4FF00109 		mov	r9, #1	@ tmp166,
 3333              	@ main.c:1430: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3334 000c 4FF0090A 		mov	r10, #9	@ tmp192,
 3335              	@ main.c:1438: 		flag_9=0;
 3336 0010 1746     		mov	r7, r2	@ tmp197,
 3337              	@ main.c:1411: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3338 0012 DFF89082 		ldr	r8, .L289+108	@ tmp257,
 3339              	@ main.c:1412: 		LED=1;
 3340 0016 884D     		ldr	r5, .L289	@ tmp171,
 3341              	@ main.c:1411: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3342 0018 D8F80030 		ldr	r3, [r8]	@ p_Fifo1.117_1, p_Fifo1
 3343              	@ main.c:1415: 		GPIOB->CRH = (GPIOB->CRH & 0x0000ff00) | 0x43430033;	//   
 3344 001c 8748     		ldr	r0, .L289+4	@ tmp173,
 3345              	@ main.c:1411: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3346 001e A3F80490 		strh	r9, [r3, #4]	@ movhi	@ tmp166, p_Fifo1.117_1->rct
 3347 0022 A3F80290 		strh	r9, [r3, #2]	@ movhi	@ tmp166, p_Fifo1.117_1->rwi
 3348 0026 9971     		strb	r1, [r3, #6]	@ tmp169, p_Fifo1.117_1->rbuf
 3349              	@ main.c:1412: 		LED=1;
 3350 0028 C5F80090 		str	r9, [r5]	@ tmp166, MEM[(volatile long unsigned int *)1109524916B]
 3351              	@ main.c:1415: 		GPIOB->CRH = (GPIOB->CRH & 0x0000ff00) | 0x43430033;	//   
 3352 002c 4168     		ldr	r1, [r0, #4]	@ _6, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 3353 002e 844B     		ldr	r3, .L289+8	@ _9,
 3354              	@ main.c:1416: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 12); 
 3355 0030 844E     		ldr	r6, .L289+12	@ tmp254,
 3356              	@ main.c:1415: 		GPIOB->CRH = (GPIOB->CRH & 0x0000ff00) | 0x43430033;	//   
 3357 0032 01F47F41 		and	r1, r1, #65280	@ tmp174, _6,
 3358              	@ main.c:1416: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 12); 
 3359 0036 DFF870C2 		ldr	ip, .L289+112	@ tmp178,
 3360              	@ main.c:1415: 		GPIOB->CRH = (GPIOB->CRH & 0x0000ff00) | 0x43430033;	//   
 3361 003a 0B43     		orrs	r3, r3, r1	@, _9, _9, tmp174
 3362              	@ main.c:1417: 		SX1278_hw1.miso = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 13); 
 3363 003c DFF86CE2 		ldr	lr, .L289+116	@ tmp180,
ARM GAS  /tmp/ccAYxbuo.s 			page 60


 3364              	@ main.c:1415: 		GPIOB->CRH = (GPIOB->CRH & 0x0000ff00) | 0x43430033;	//   
 3365 0040 4360     		str	r3, [r0, #4]	@ _9, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 3366              	@ main.c:1429: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 3367 0042 814C     		ldr	r4, .L289+16	@ tmp255,
 3368              	@ main.c:1416: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 12); 
 3369 0044 C6F800C0 		str	ip, [r6]	@ tmp178, SX1278_hw1.mosi
 3370              	@ main.c:1418: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 14); 
 3371 0048 0CF1080C 		add	ip, ip, #8	@ tmp182, tmp182,
 3372              	@ main.c:1401: void LoRaRX1(void)	{
 3373 004c 89B0     		sub	sp, sp, #36	@,,
 3374              	@ main.c:1418: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 14); 
 3375 004e C6E901EC 		strd	lr, ip, [r6, #4]	@ tmp180, tmp182, tmp254,
 3376              	@ main.c:1419: 		SX1278_hw1.nss  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 8); 
 3377 0052 0EF16C0E 		add	lr, lr, #108	@ tmp184, tmp184,
 3378              	@ main.c:1420: 		SX1278_hw1.rst  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 9); 
 3379 0056 ACF1140C 		sub	ip, ip, #20	@ tmp186, tmp186,
 3380 005a C6E903EC 		strd	lr, ip, [r6, #12]	@ tmp184, tmp186, tmp254,
 3381              	@ main.c:1430: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3382 005e 4B46     		mov	r3, r9	@, tmp166
 3383              	@ main.c:1421: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 15); 
 3384 0060 ACF1680C 		sub	ip, ip, #104	@ tmp188, tmp188,
 3385              	@ main.c:1430: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3386 0064 1146     		mov	r1, r2	@,
 3387 0066 CDF800A0 		str	r10, [sp]	@ tmp192,
 3388 006a 2046     		mov	r0, r4	@, tmp255
 3389              	@ main.c:1421: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 15); 
 3390 006c C6F814C0 		str	ip, [r6, #20]	@ tmp188, SX1278_hw1.dio0
 3391              	@ main.c:1530: 					LED ^= 1;
 3392 0070 0495     		str	r5, [sp, #16]	@ tmp171, %sfp
 3393              	@ main.c:1429: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 3394 0072 2660     		str	r6, [r4]	@ tmp254, SX1278_1.hw
 3395              	@ main.c:1430: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3396 0074 FFF7FEFF 		bl	SX1278_begin	@
 3397              	@ main.c:1431: 		SX1278_LoRaEntryRx(&SX1278_1, 64, 2000);
 3398 0078 4FF4FA62 		mov	r2, #2000	@,
 3399 007c 4021     		movs	r1, #64	@,
 3400 007e 2046     		mov	r0, r4	@, tmp255
 3401 0080 FFF7FEFF 		bl	SX1278_LoRaEntryRx	@
 3402              	@ main.c:1438: 		flag_9=0;
 3403 0084 714B     		ldr	r3, .L289+20	@ tmp195,
 3404              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 3405 0086 724A     		ldr	r2, .L289+24	@ tmp198,
 3406              	@ main.c:1438: 		flag_9=0;
 3407 0088 5B01     		lsls	r3, r3, #5	@ tmp196, tmp195,
 3408 008a 5F62     		str	r7, [r3, #36]	@ tmp197, *_14
 3409              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 3410 008c 9168     		ldr	r1, [r2, #8]	@ _126, MEM[(struct SysTick_Type *)3758153744B].VAL
 3411 008e 714B     		ldr	r3, .L289+28	@ tmp199,
 3412              	@ main.c:1442: 		UaPutK(" Time=");		uint2uart(tim/TIM_US);			
 3413 0090 7148     		ldr	r0, .L289+32	@,
 3414              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 3415 0092 1960     		str	r1, [r3]	@ _126, Timt
 3416              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 3417 0094 1D68     		ldr	r5, [r3]	@ Timt.81_123, Timt
 3418 0096 9368     		ldr	r3, [r2, #8]	@ _124, MEM[(struct SysTick_Type *)3758153744B].VAL
 3419 0098 ED1A     		subs	r5, r5, r3	@ _125, Timt.81_123, _124
 3420 009a 0795     		str	r5, [sp, #28]	@ _125, MEM[(volatile u32 *)&tim]
ARM GAS  /tmp/ccAYxbuo.s 			page 61


 3421              	@ main.c:1442: 		UaPutK(" Time=");		uint2uart(tim/TIM_US);			
 3422 009c FFF7FEFF 		bl	UaPutK	@
 3423 00a0 6E48     		ldr	r0, .L289+36	@ tmp205,
 3424              	@ main.c:1426: 		sx[3]=SX1278_LORA_BW_500KHZ;
 3425 00a2 CDF80CA0 		str	r10, [sp, #12]	@ tmp192, %sfp
 3426              	@ main.c:1442: 		UaPutK(" Time=");		uint2uart(tim/TIM_US);			
 3427 00a6 A0FB0530 		umull	r3, r0, r0, r5	@ tmp267, tmp204, tmp205, _125
 3428 00aa 20FA09F0 		lsr	r0, r0, r9	@, tmp204,
 3429 00ae FFF7FEFF 		bl	uint2uart	@
 3430              	@ main.c:1427: 		sx[4]=10;
 3431 00b2 0A23     		movs	r3, #10	@ sx$4,
 3432              	@ main.c:1424: 		sx[1]=SX1278_POWER_11DBM;
 3433 00b4 BA46     		mov	r10, r7	@ sx$1, tmp197
 3434 00b6 6A4D     		ldr	r5, .L289+40	@ tmp253,
 3435              	@ main.c:1535: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){	
 3436 00b8 6A4F     		ldr	r7, .L289+44	@ tmp250,
 3437              	@ main.c:1427: 		sx[4]=10;
 3438 00ba 0593     		str	r3, [sp, #20]	@ sx$4, %sfp
 3439              	.L264:
 3440              	@ main.c:1450: 			if(p_Fifo1->rct){
 3441 00bc D8F80030 		ldr	r3, [r8]	@ p_Fifo1.123_16, p_Fifo1
 3442 00c0 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.123_16->rct
 3443 00c2 9BB2     		uxth	r3, r3	@ _17, p_Fifo1.123_16->rct
 3444 00c4 8BB9     		cbnz	r3, .L287	@ _17,
 3445              	.L265:
 3446              	@ main.c:1506: 			if( *SX1278_hw1.dio0 ){
 3447 00c6 7369     		ldr	r3, [r6, #20]	@ _34, SX1278_hw1.dio0
 3448 00c8 1B68     		ldr	r3, [r3]	@ _35, *_34
 3449 00ca 002B     		cmp	r3, #0	@ _35
 3450 00cc 43D1     		bne	.L288	@
 3451              	.L276:
 3452              	@ main.c:1535: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){	
 3453 00ce 604A     		ldr	r2, .L289+24	@ tmp248,
 3454 00d0 2B68     		ldr	r3, [r5]	@ trg0.126_45, trg0
 3455 00d2 9168     		ldr	r1, [r2, #8]	@ _47, MEM[(struct SysTick_Type *)3758153744B].VAL
 3456 00d4 5B1A     		subs	r3, r3, r1	@ tmp249, trg0.126_45, _47
 3457 00d6 BB42     		cmp	r3, r7	@ tmp249, tmp250
 3458 00d8 F0D9     		bls	.L264	@,
 3459              	@ main.c:1536: 				trg0  = SysTick->VAL;	
 3460 00da 9368     		ldr	r3, [r2, #8]	@ _50, MEM[(struct SysTick_Type *)3758153744B].VAL
 3461 00dc 2B60     		str	r3, [r5]	@ _50, trg0
 3462              	@ main.c:1450: 			if(p_Fifo1->rct){
 3463 00de D8F80030 		ldr	r3, [r8]	@ p_Fifo1.123_16, p_Fifo1
 3464 00e2 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.123_16->rct
 3465 00e4 9BB2     		uxth	r3, r3	@ _17, p_Fifo1.123_16->rct
 3466 00e6 002B     		cmp	r3, #0	@ _17
 3467 00e8 EDD0     		beq	.L265	@
 3468              	.L287:
 3469              	@ main.c:1451: 				UART_getChar( (char*)&swh);
 3470 00ea 0DF11B00 		add	r0, sp, #27	@ tmp271,,
 3471 00ee FFF7FEFF 		bl	UART_getChar	@
 3472              	@ main.c:1453: 				switch (swh)	{
 3473 00f2 9DF81B30 		ldrb	r3, [sp, #27]	@ zero_extendqisi2	@ swh, swh
 3474 00f6 623B     		subs	r3, r3, #98	@ tmp211, swh,
 3475 00f8 112B     		cmp	r3, #17	@ tmp211,
 3476 00fa 17D8     		bhi	.L266	@
 3477 00fc DFE803F0 		tbb	[pc, r3]	@ tmp211
ARM GAS  /tmp/ccAYxbuo.s 			page 62


 3478              	.L268:
 3479 0100 53       		.byte	(.L267-.L268)/2
 3480 0101 16       		.byte	(.L266-.L268)/2
 3481 0102 45       		.byte	(.L269-.L268)/2
 3482 0103 16       		.byte	(.L266-.L268)/2
 3483 0104 16       		.byte	(.L266-.L268)/2
 3484 0105 16       		.byte	(.L266-.L268)/2
 3485 0106 16       		.byte	(.L266-.L268)/2
 3486 0107 16       		.byte	(.L266-.L268)/2
 3487 0108 16       		.byte	(.L266-.L268)/2
 3488 0109 16       		.byte	(.L266-.L268)/2
 3489 010a 16       		.byte	(.L266-.L268)/2
 3490 010b 16       		.byte	(.L266-.L268)/2
 3491 010c 16       		.byte	(.L266-.L268)/2
 3492 010d 16       		.byte	(.L266-.L268)/2
 3493 010e 74       		.byte	(.L270-.L268)/2
 3494 010f 61       		.byte	(.L271-.L268)/2
 3495 0110 82       		.byte	(.L272-.L268)/2
 3496 0111 09       		.byte	(.L273-.L268)/2
 3497              		.p2align 1
 3498              	.L273:
 3499              	@ main.c:1477: 					UaPutK("\r\n 0-6("); uint2uart(sx[2]);UaPutK(") SF=");					
 3500 0112 5548     		ldr	r0, .L289+48	@,
 3501 0114 FFF7FEFF 		bl	UaPutK	@
 3502 0118 4846     		mov	r0, r9	@, sx$2
 3503 011a FFF7FEFF 		bl	uint2uart	@
 3504 011e 5348     		ldr	r0, .L289+52	@,
 3505 0120 FFF7FEFF 		bl	UaPutK	@
 3506              	@ main.c:1478: 					sx[2] = UART_getNum();					
 3507 0124 FFF7FEFF 		bl	UART_getNum	@
 3508 0128 5FFA80F9 		uxtb	r9, r0	@ sx$2,
 3509              	.L266:
 3510              	@ main.c:1493: 				SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3511 012c 039B     		ldr	r3, [sp, #12]	@ sx$3, %sfp
 3512 012e 5246     		mov	r2, r10	@, sx$1
 3513 0130 0093     		str	r3, [sp]	@ sx$3,
 3514 0132 0021     		movs	r1, #0	@,
 3515 0134 4B46     		mov	r3, r9	@, sx$2
 3516 0136 2046     		mov	r0, r4	@, tmp260
 3517 0138 FFF7FEFF 		bl	SX1278_begin	@
 3518              	@ main.c:1494: 				SX1278_LoRaEntryRx(&SX1278_1, 64, 2000);
 3519 013c 4FF4FA62 		mov	r2, #2000	@,
 3520 0140 4021     		movs	r1, #64	@,
 3521 0142 2046     		mov	r0, r4	@, tmp260
 3522 0144 FFF7FEFF 		bl	SX1278_LoRaEntryRx	@
 3523              	@ main.c:1496: 				UaPutK("\r\n Menu > ");
 3524 0148 4948     		ldr	r0, .L289+56	@,
 3525 014a FFF7FEFF 		bl	UaPutK	@
 3526              	@ main.c:1506: 			if( *SX1278_hw1.dio0 ){
 3527 014e 7369     		ldr	r3, [r6, #20]	@ _34, SX1278_hw1.dio0
 3528 0150 1B68     		ldr	r3, [r3]	@ _35, *_34
 3529 0152 002B     		cmp	r3, #0	@ _35
 3530 0154 BBD0     		beq	.L276	@
 3531              	.L288:
 3532              	@ main.c:1507: 				 message_length = SX1278_LoRaRxPacket(&SX1278_1);
 3533 0156 2046     		mov	r0, r4	@, tmp260
 3534 0158 FFF7FEFF 		bl	SX1278_LoRaRxPacket	@
ARM GAS  /tmp/ccAYxbuo.s 			page 63


 3535              	@ main.c:1508: 				if(message_length){
 3536 015c 0028     		cmp	r0, #0	@
 3537 015e B6D0     		beq	.L276	@
 3538              	@ main.c:1510: 					SX1278_read(&SX1278_1, (uint8_t *) buf_rx);
 3539 0160 4449     		ldr	r1, .L289+60	@,
 3540 0162 2046     		mov	r0, r4	@, tmp260
 3541 0164 FFF7FEFF 		bl	SX1278_read	@
 3542              	@ main.c:1511: 					UaPutK("\r\n prssi->");	
 3543 0168 4348     		ldr	r0, .L289+64	@,
 3544 016a FFF7FEFF 		bl	UaPutK	@
 3545              	@ main.c:1512: 					prssi = SX1278_SPIRead(&SX1278_1, LR_RegPktRssiValue)-164;
 3546 016e 1A21     		movs	r1, #26	@,
 3547 0170 2046     		mov	r0, r4	@, tmp260
 3548 0172 FFF7FEFF 		bl	SX1278_SPIRead	@
 3549 0176 A438     		subs	r0, r0, #164	@ tmp243,,
 3550              	@ main.c:1513: 					sint2uart(prssi);
 3551 0178 00B2     		sxth	r0, r0	@, tmp243
 3552 017a FFF7FEFF 		bl	sint2uart	@
 3553              	@ main.c:1530: 					LED ^= 1;
 3554 017e 049A     		ldr	r2, [sp, #16]	@ tmp261, %sfp
 3555 0180 1368     		ldr	r3, [r2]	@ _42, MEM[(volatile long unsigned int *)1109524916B]
 3556 0182 83F00103 		eor	r3, r3, #1	@ _44, _42,
 3557 0186 1360     		str	r3, [r2]	@ _44, MEM[(volatile long unsigned int *)1109524916B]
 3558 0188 A1E7     		b	.L276	@
 3559              	.L269:
 3560              	@ main.c:1485: 					UaPutK("\r\n sek("); uint2uart(sx[4]);UaPutK(") Delay=");					
 3561 018a 3C48     		ldr	r0, .L289+68	@,
 3562 018c FFF7FEFF 		bl	UaPutK	@
 3563 0190 0598     		ldr	r0, [sp, #20]	@, %sfp
 3564 0192 FFF7FEFF 		bl	uint2uart	@
 3565 0196 3A48     		ldr	r0, .L289+72	@,
 3566 0198 FFF7FEFF 		bl	UaPutK	@
 3567              	@ main.c:1486: 					sx[4] = UART_getNum();					
 3568 019c FFF7FEFF 		bl	UART_getNum	@
 3569 01a0 C3B2     		uxtb	r3, r0	@ sx$4,
 3570 01a2 0593     		str	r3, [sp, #20]	@ sx$4, %sfp
 3571              	@ main.c:1487: 					break;
 3572 01a4 C2E7     		b	.L266	@
 3573              	.L267:
 3574              	@ main.c:1481: 					UaPutK("\r\n 0-9("); uint2uart(sx[3]);UaPutK(") BW=");					
 3575 01a6 3748     		ldr	r0, .L289+76	@,
 3576 01a8 FFF7FEFF 		bl	UaPutK	@
 3577 01ac 0398     		ldr	r0, [sp, #12]	@, %sfp
 3578 01ae FFF7FEFF 		bl	uint2uart	@
 3579 01b2 3548     		ldr	r0, .L289+80	@,
 3580 01b4 FFF7FEFF 		bl	UaPutK	@
 3581              	@ main.c:1482: 					sx[3] = UART_getNum();					
 3582 01b8 FFF7FEFF 		bl	UART_getNum	@
 3583 01bc C3B2     		uxtb	r3, r0	@ sx$3,
 3584 01be 0393     		str	r3, [sp, #12]	@ sx$3, %sfp
 3585              	@ main.c:1483: 					break;
 3586 01c0 B4E7     		b	.L266	@
 3587              	.L271:
 3588              	@ main.c:1458: 					UaPutK("\r\n");
 3589 01c2 3248     		ldr	r0, .L289+84	@,
 3590 01c4 FFF7FEFF 		bl	UaPutK	@
 3591 01c8 4FF0000B 		mov	fp, #0	@ ivtmp.478,
ARM GAS  /tmp/ccAYxbuo.s 			page 64


 3592              	.L274:
 3593              	@ main.c:1460: 						dat = SX1278_SPIRead(&SX1278_1, n);
 3594 01cc 5FFA8BF1 		uxtb	r1, fp	@, ivtmp.478
 3595 01d0 2046     		mov	r0, r4	@, tmp260
 3596 01d2 FFF7FEFF 		bl	SX1278_SPIRead	@
 3597 01d6 0BF1010B 		add	fp, fp, #1	@ ivtmp.478, ivtmp.478,
 3598              	@ main.c:1461: 						hex2uart(dat,2);
 3599 01da 0221     		movs	r1, #2	@,
 3600 01dc FFF7FEFF 		bl	hex2uart	@
 3601              	@ main.c:1459: 					for (u08 n=0;n<0x14;n++){
 3602 01e0 BBF1140F 		cmp	fp, #20	@ ivtmp.478,
 3603 01e4 F2D1     		bne	.L274	@,
 3604 01e6 A1E7     		b	.L266	@
 3605              	.L270:
 3606              	@ main.c:1473: 					UaPutK("\r\n 0-3("); uint2uart(sx[1]);UaPutK(") POWER=");					
 3607 01e8 2948     		ldr	r0, .L289+88	@,
 3608 01ea FFF7FEFF 		bl	UaPutK	@
 3609 01ee 5046     		mov	r0, r10	@, sx$1
 3610 01f0 FFF7FEFF 		bl	uint2uart	@
 3611 01f4 2748     		ldr	r0, .L289+92	@,
 3612 01f6 FFF7FEFF 		bl	UaPutK	@
 3613              	@ main.c:1474: 					sx[1] = UART_getNum();					
 3614 01fa FFF7FEFF 		bl	UART_getNum	@
 3615 01fe 5FFA80FA 		uxtb	r10, r0	@ sx$1,
 3616              	@ main.c:1475: 					break;
 3617 0202 93E7     		b	.L266	@
 3618              	.L272:
 3619              	@ main.c:1466: 					UaPutK("\r\n Read Reg1=0x");	reg=UART_getHex();
 3620 0204 2448     		ldr	r0, .L289+96	@,
 3621 0206 FFF7FEFF 		bl	UaPutK	@
 3622 020a FFF7FEFF 		bl	UART_getHex	@
 3623 020e 8346     		mov	fp, r0	@ _20,
 3624              	@ main.c:1467: 					UaPutK(" Reg1 0x");						hex2uart(reg,2);
 3625 0210 2248     		ldr	r0, .L289+100	@,
 3626 0212 5FFA8BFB 		uxtb	fp, fp	@ _20, _20
 3627 0216 FFF7FEFF 		bl	UaPutK	@
 3628 021a 5846     		mov	r0, fp	@, _20
 3629 021c 0221     		movs	r1, #2	@,
 3630 021e FFF7FEFF 		bl	hex2uart	@
 3631              	@ main.c:1468: 					UaPutK("= 0x");						
 3632 0222 1F48     		ldr	r0, .L289+104	@,
 3633 0224 FFF7FEFF 		bl	UaPutK	@
 3634              	@ main.c:1469: 					dat = SX1278_SPIRead(&SX1278_1, reg);
 3635 0228 5946     		mov	r1, fp	@, _20
 3636 022a 2046     		mov	r0, r4	@, tmp260
 3637 022c FFF7FEFF 		bl	SX1278_SPIRead	@
 3638              	@ main.c:1470: 					hex2uart(dat,2);
 3639 0230 0221     		movs	r1, #2	@,
 3640 0232 FFF7FEFF 		bl	hex2uart	@
 3641              	@ main.c:1471: 					break;
 3642 0236 79E7     		b	.L266	@
 3643              	.L290:
 3644              		.align	2
 3645              	.L289:
 3646 0238 B4012242 		.word	1109524916
 3647 023c 000C0140 		.word	1073810432
 3648 0240 33004343 		.word	1128464435
ARM GAS  /tmp/ccAYxbuo.s 			page 65


 3649 0244 00000000 		.word	.LANCHOR20
 3650 0248 00000000 		.word	.LANCHOR21
 3651 024c 00001001 		.word	.LANCHOR17+17825792
 3652 0250 10E000E0 		.word	-536813552
 3653 0254 00000000 		.word	Timt
 3654 0258 00000000 		.word	.LC47
 3655 025c 398EE338 		.word	954437177
 3656 0260 00000000 		.word	trg0
 3657 0264 40548900 		.word	9000000
 3658 0268 40000000 		.word	.LC53
 3659 026c 48000000 		.word	.LC54
 3660 0270 74000000 		.word	.LC59
 3661 0274 00000000 		.word	.LANCHOR22
 3662 0278 80000000 		.word	.LC60
 3663 027c 60000000 		.word	.LC57
 3664 0280 68000000 		.word	.LC58
 3665 0284 50000000 		.word	.LC55
 3666 0288 58000000 		.word	.LC56
 3667 028c 04000000 		.word	.LC13
 3668 0290 2C000000 		.word	.LC51
 3669 0294 34000000 		.word	.LC52
 3670 0298 08000000 		.word	.LC48
 3671 029c 18000000 		.word	.LC49
 3672 02a0 24000000 		.word	.LC50
 3673 02a4 00000000 		.word	p_Fifo1
 3674 02a8 B0812142 		.word	1109492144
 3675 02ac 34812142 		.word	1109492020
 3676              		.size	LoRaRX1, .-LoRaRX1
 3677              		.section	.text.LoRaTX,"ax",%progbits
 3678              		.align	1
 3679              		.p2align 2,,3
 3680              		.global	LoRaTX
 3681              		.syntax unified
 3682              		.thumb
 3683              		.thumb_func
 3684              		.fpu softvfp
 3685              		.type	LoRaTX, %function
 3686              	LoRaTX:
 3687              		@ args = 0, pretend = 0, frame = 8
 3688              		@ frame_needed = 0, uses_anonymous_args = 0
 3689 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 3690              	@ main.c:5505: 		TIM3->CR1 = 0;
 3691 0004 0024     		movs	r4, #0	@ tmp160,
 3692              	@ main.c:5506: 		TIM3->PSC = (F_CPU/(1000000)) - 1;
 3693 0006 4FF04708 		mov	r8, #71	@ tmp163,
 3694              	@ main.c:5500: 		RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
 3695 000a 634F     		ldr	r7, .L296	@ tmp156,
 3696              	@ main.c:1544: void LoRaTX(void)		{
 3697 000c 85B0     		sub	sp, sp, #20	@,,
 3698              	@ main.c:1563: 		RtcInit();
 3699 000e FFF7FEFF 		bl	RtcInit	@
 3700              	@ main.c:5500: 		RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
 3701 0012 FA69     		ldr	r2, [r7, #28]	@ _71, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 3702              	@ main.c:5505: 		TIM3->CR1 = 0;
 3703 0014 614B     		ldr	r3, .L296+4	@ tmp158,
 3704              	@ main.c:5500: 		RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
 3705 0016 42F00202 		orr	r2, r2, #2	@ _72, _71,
ARM GAS  /tmp/ccAYxbuo.s 			page 66


 3706 001a FA61     		str	r2, [r7, #28]	@ _72, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 3707              	@ main.c:5507: 		TIM3->ARR = TIM3_ARR - 1;
 3708 001c 4FF6FE7E 		movw	lr, #65534	@ tmp166,
 3709              	@ main.c:5505: 		TIM3->CR1 = 0;
 3710 0020 1C80     		strh	r4, [r3]	@ movhi	@ tmp160, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 3711              	@ main.c:5506: 		TIM3->PSC = (F_CPU/(1000000)) - 1;
 3712 0022 A3F82880 		strh	r8, [r3, #40]	@ movhi	@ tmp163, MEM[(struct TIM_TypeDef *)1073742848B].PSC
 3713              	@ main.c:5509: 		TIM3->DIER = TIM_DIER_UIE;
 3714 0026 4FF00108 		mov	r8, #1	@ movhi	@ tmp269,
 3715              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 3716 002a 4FF0005C 		mov	ip, #536870912	@ tmp181,
 3717              	@ main.c:1565: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3718 002e 3025     		movs	r5, #48	@ tmp187,
 3719              	@ main.c:1584: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3720 0030 0920     		movs	r0, #9	@ tmp212,
 3721              	@ main.c:5507: 		TIM3->ARR = TIM3_ARR - 1;
 3722 0032 A3F82CE0 		strh	lr, [r3, #44]	@ movhi	@ tmp166, MEM[(struct TIM_TypeDef *)1073742848B].ARR
 3723              	@ main.c:5509: 		TIM3->DIER = TIM_DIER_UIE;
 3724 0036 A3F80C80 		strh	r8, [r3, #12]	@ movhi	@ tmp269, MEM[(struct TIM_TypeDef *)1073742848B].DIER
 3725              	@ main.c:5510: 		TIM3->CR1  |= TIM_CR1_DIR;
 3726 003a 1A88     		ldrh	r2, [r3]	@, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 3727              	@ main.c:1565: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3728 003c DFF88CE1 		ldr	lr, .L296+52	@ tmp182,
 3729              	@ main.c:5510: 		TIM3->CR1  |= TIM_CR1_DIR;
 3730 0040 42F01002 		orr	r2, r2, #16	@ _74, MEM[(struct TIM_TypeDef *)1073742848B].CR1,
 3731 0044 1A80     		strh	r2, [r3]	@ movhi	@ _74, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 3732              	@ main.c:5511: 		TIM3->CR1  |= TIM_CR1_CEN;
 3733 0046 1A88     		ldrh	r2, [r3]	@, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 3734              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 3735 0048 5549     		ldr	r1, .L296+8	@ tmp180,
 3736              	@ main.c:5511: 		TIM3->CR1  |= TIM_CR1_CEN;
 3737 004a 42F00102 		orr	r2, r2, #1	@ _76, MEM[(struct TIM_TypeDef *)1073742848B].CR1,
 3738 004e 1A80     		strh	r2, [r3]	@ movhi	@ _76, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 3739              	@ main.c:1565: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3740 0050 DEF80030 		ldr	r3, [lr]	@ p_Fifo1.128_2, p_Fifo1
 3741              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 3742 0054 C1F800C0 		str	ip, [r1]	@ tmp181, MEM[(struct NVIC_Type *)3758153984B].ISER
 3743              	@ main.c:1568: 		GPIOA->CRL = (GPIOA->CRL & 0xfff00000) | 0x00044343;	//   PA2=MOSI, PA1=MISO, PA0=
 3744 0058 A7F58437 		sub	r7, r7, #67584	@ tmp189, tmp189,
 3745              	@ main.c:1565: 		p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='0';
 3746 005c A3F80480 		strh	r8, [r3, #4]	@ movhi	@ tmp270, p_Fifo1.128_2->rct
 3747 0060 A3F80280 		strh	r8, [r3, #2]	@ movhi	@ tmp271, p_Fifo1.128_2->rwi
 3748 0064 9D71     		strb	r5, [r3, #6]	@ tmp187, p_Fifo1.128_2->rbuf
 3749              	@ main.c:1568: 		GPIOA->CRL = (GPIOA->CRL & 0xfff00000) | 0x00044343;	//   PA2=MOSI, PA1=MISO, PA0=
 3750 0066 3B68     		ldr	r3, [r7]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 3751 0068 4E49     		ldr	r1, .L296+12	@ _6,
 3752 006a 1B0D     		lsrs	r3, r3, #20	@ tmp190, _4,
 3753 006c 1B05     		lsls	r3, r3, #20	@ tmp190, tmp190,
 3754              	@ main.c:1569: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 3755 006e 4E4A     		ldr	r2, .L296+16	@ tmp194,
 3756              	@ main.c:1568: 		GPIOA->CRL = (GPIOA->CRL & 0xfff00000) | 0x00044343;	//   PA2=MOSI, PA1=MISO, PA0=
 3757 0070 1943     		orrs	r1, r1, r3	@, _6, _6, tmp190
 3758 0072 3960     		str	r1, [r7]	@ _6, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 3759              	@ main.c:1569: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 3760 0074 5368     		ldr	r3, [r2, #4]	@ _7, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 3761              	@ main.c:1570: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 2); 
 3762 0076 4D4D     		ldr	r5, .L296+20	@ tmp197,
ARM GAS  /tmp/ccAYxbuo.s 			page 67


 3763 0078 DFF854E1 		ldr	lr, .L296+56	@ tmp198,
 3764              	@ main.c:1571: 		SX1278_hw1.miso = (u32 *)m_BITBAND_PERIPH(&GPIOA->IDR, 1); 
 3765 007c DFF854C1 		ldr	ip, .L296+60	@ tmp200,
 3766              	@ main.c:1569: 		GPIOB->CRH = (GPIOB->CRH & 0xffffff00) | 0x00000033;	//   
 3767 0080 23F0FF03 		bic	r3, r3, #255	@ tmp195, _7,
 3768 0084 43F03303 		orr	r3, r3, #51	@ _9, tmp195,
 3769 0088 5360     		str	r3, [r2, #4]	@ _9, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 3770              	@ main.c:1584: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3771 008a 0090     		str	r0, [sp]	@ tmp212,
 3772              	@ main.c:1570: 		SX1278_hw1.mosi = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 2); 
 3773 008c C5F800E0 		str	lr, [r5]	@ tmp198, SX1278_hw1.mosi
 3774              	@ main.c:1571: 		SX1278_hw1.miso = (u32 *)m_BITBAND_PERIPH(&GPIOA->IDR, 1); 
 3775 0090 C5F804C0 		str	ip, [r5, #4]	@ tmp200, SX1278_hw1.miso
 3776              	@ main.c:1572: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 0); 
 3777 0094 AEF1080E 		sub	lr, lr, #8	@ tmp202, tmp202,
 3778              	@ main.c:1573: 		SX1278_hw1.nss  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 8); 
 3779 0098 0CF5004C 		add	ip, ip, #32768	@ tmp204, tmp204,
 3780              	@ main.c:1572: 		SX1278_hw1.sck  = (u32 *)m_BITBAND_PERIPH(&GPIOA->ODR, 0); 
 3781 009c C5F808E0 		str	lr, [r5, #8]	@ tmp202, SX1278_hw1.sck
 3782              	@ main.c:1583: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 3783 00a0 DFF83481 		ldr	r8, .L296+64	@ tmp209,
 3784              	@ main.c:1573: 		SX1278_hw1.nss  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 8); 
 3785 00a4 0CF19C0C 		add	ip, ip, #156	@ tmp204, tmp204,
 3786              	@ main.c:1574: 		SX1278_hw1.rst  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 9); 
 3787 00a8 0EF5004E 		add	lr, lr, #32768	@ tmp206, tmp206,
 3788              	@ main.c:1573: 		SX1278_hw1.nss  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 8); 
 3789 00ac C5F80CC0 		str	ip, [r5, #12]	@ tmp204, SX1278_hw1.nss
 3790              	@ main.c:1574: 		SX1278_hw1.rst  = (u32 *)m_BITBAND_PERIPH(&GPIOB->ODR, 9); 
 3791 00b0 0EF1240E 		add	lr, lr, #36	@ tmp206, tmp206,
 3792              	@ main.c:1575: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 1); 
 3793 00b4 ACF19C0C 		sub	ip, ip, #156	@ tmp208, tmp208,
 3794              	@ main.c:1584: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3795 00b8 2246     		mov	r2, r4	@, tmp160
 3796 00ba 2146     		mov	r1, r4	@, tmp160
 3797 00bc 0123     		movs	r3, #1	@,
 3798 00be 4046     		mov	r0, r8	@, tmp209
 3799              	@ main.c:1583: 		SX1278_1.hw = &SX1278_hw1;			// wybor modulu		
 3800 00c0 C8F80050 		str	r5, [r8]	@ tmp197, SX1278_1.hw
 3801              	@ main.c:1575: 		SX1278_hw1.dio0 = (u32 *)m_BITBAND_PERIPH(&GPIOB->IDR, 1); 
 3802 00c4 C5E904EC 		strd	lr, ip, [r5, #16]	@ tmp206, tmp208, tmp197,
 3803              	@ main.c:1584: 		SX1278_begin(&SX1278_1,sx[0],sx[1],sx[2],sx[3]);
 3804 00c8 FFF7FEFF 		bl	SX1278_begin	@
 3805              	@ main.c:1588: 		GPIOA->CRH = (GPIOA->CRH & 0x0fffffff) | 0x60000000;
 3806 00cc 7B68     		ldr	r3, [r7, #4]	@ _10, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 3807              	@ main.c:1598: 		GPIOA->ODR = 0b0001010000000000;
 3808 00ce 4FF4A051 		mov	r1, #5120	@ tmp228,
 3809              	@ main.c:1588: 		GPIOA->CRH = (GPIOA->CRH & 0x0fffffff) | 0x60000000;
 3810 00d2 23F07043 		bic	r3, r3, #-268435456	@ tmp214, _10,
 3811 00d6 43F0C043 		orr	r3, r3, #1610612736	@ _12, tmp214,
 3812 00da 7B60     		str	r3, [r7, #4]	@ _12, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 3813              	@ main.c:1594: 		LED	   = 1;		
 3814 00dc 0123     		movs	r3, #1	@ tmp272,
 3815              	@ main.c:1593: 		flag_9 = 0;		
 3816 00de 344A     		ldr	r2, .L296+24	@ tmp217,
 3817              	@ main.c:1594: 		LED	   = 1;		
 3818 00e0 3448     		ldr	r0, .L296+28	@ tmp220,
 3819              	@ main.c:1593: 		flag_9 = 0;		
ARM GAS  /tmp/ccAYxbuo.s 			page 68


 3820 00e2 5201     		lsls	r2, r2, #5	@ tmp218, tmp217,
 3821 00e4 5462     		str	r4, [r2, #36]	@ tmp160, *_17
 3822              	@ main.c:1594: 		LED	   = 1;		
 3823 00e6 0360     		str	r3, [r0]	@ tmp272, MEM[(volatile long unsigned int *)1109524916B]
 3824              	@ main.c:1596: 		GPIOA->CRH = (GPIOA->CRH & 0xfff0f0ff)|0x00020200 ; //low power
 3825 00e8 7B68     		ldr	r3, [r7, #4]	@ _18, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 3826 00ea DFF8F090 		ldr	r9, .L296+68	@ tmp263,
 3827 00ee 23F47023 		bic	r3, r3, #983040	@ tmp223, _18,
 3828 00f2 23F47063 		bic	r3, r3, #3840	@ tmp223, tmp223,
 3829 00f6 43F40033 		orr	r3, r3, #131072	@ _20, tmp223,
 3830 00fa 43F40073 		orr	r3, r3, #512	@ _20, _20,
 3831 00fe 7B60     		str	r3, [r7, #4]	@ _20, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 3832              	@ main.c:1598: 		GPIOA->ODR = 0b0001010000000000;
 3833 0100 F960     		str	r1, [r7, #12]	@ tmp228, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
 3834              	@ main.c:1599: 		GPIOA->ODR |= (1<<10)|(1<<12); 
 3835 0102 FB68     		ldr	r3, [r7, #12]	@ _21, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
 3836              	@ main.c:1634: 				LED ^= 1;
 3837 0104 8346     		mov	fp, r0	@ tmp238, tmp220
 3838              	@ main.c:1599: 		GPIOA->ODR |= (1<<10)|(1<<12); 
 3839 0106 0B43     		orrs	r3, r3, r1	@, _22, _21,
 3840 0108 FB60     		str	r3, [r7, #12]	@ _22, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
 3841              	@ main.c:1629: 		flag_9=1;	
 3842 010a 0123     		movs	r3, #1	@ tmp274,
 3843 010c CA46     		mov	r10, r9	@ tmp265, tmp263
 3844              	@ main.c:1593: 		flag_9 = 0;		
 3845 010e 3046     		mov	r0, r6	@ n, n
 3846              	@ main.c:1629: 		flag_9=1;	
 3847 0110 5362     		str	r3, [r2, #36]	@ tmp274, *_17
 3848 0112 294D     		ldr	r5, .L296+32	@ tmp262,
 3849              	@ main.c:1593: 		flag_9 = 0;		
 3850 0114 02F12403 		add	r3, r2, #36	@ _17, tmp218,
 3851              	@ main.c:1632: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 3852 0118 284C     		ldr	r4, .L296+36	@ tmp233,
 3853 011a 294F     		ldr	r7, .L296+40	@ tmp235,
 3854              	@ main.c:1593: 		flag_9 = 0;		
 3855 011c 0393     		str	r3, [sp, #12]	@ _17, %sfp
 3856              	.L292:
 3857              	@ main.c:1632: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 3858 011e 2B68     		ldr	r3, [r5]	@ trg0.133_23, trg0
 3859 0120 A268     		ldr	r2, [r4, #8]	@ _24, MEM[(struct SysTick_Type *)3758153744B].VAL
 3860 0122 9B1A     		subs	r3, r3, r2	@ tmp234, trg0.133_23, _24
 3861 0124 BB42     		cmp	r3, r7	@ tmp234, tmp235
 3862 0126 FAD9     		bls	.L292	@,
 3863              	@ main.c:1636: 				strcpy (buf_tx," ");		
 3864 0128 4FF0200E 		mov	lr, #32	@ tmp242,
 3865              	@ main.c:1633: 				trg0 = SysTick->VAL; 
 3866 012c A368     		ldr	r3, [r4, #8]	@ _26, MEM[(struct SysTick_Type *)3758153744B].VAL
 3867              	@ main.c:1638: 				strcat (buf_tx,unt2str(n++,str_num,5));
 3868 012e 00F1010C 		add	ip, r0, #1	@ tmp243, n,
 3869              	@ main.c:1633: 				trg0 = SysTick->VAL; 
 3870 0132 2B60     		str	r3, [r5]	@ _26, trg0
 3871              	@ main.c:1634: 				LED ^= 1;
 3872 0134 DBF80020 		ldr	r2, [fp]	@ _27, MEM[(volatile long unsigned int *)1109524916B]
 3873              	@ main.c:1638: 				strcat (buf_tx,unt2str(n++,str_num,5));
 3874 0138 1FFA8CF3 		uxth	r3, ip	@ n, tmp243
 3875              	@ main.c:1634: 				LED ^= 1;
 3876 013c 82F00102 		eor	r2, r2, #1	@ _28, _27,
ARM GAS  /tmp/ccAYxbuo.s 			page 69


 3877 0140 CBF80020 		str	r2, [fp]	@ _28, MEM[(volatile long unsigned int *)1109524916B]
 3878              	@ main.c:1638: 				strcat (buf_tx,unt2str(n++,str_num,5));
 3879 0144 1F49     		ldr	r1, .L296+44	@,
 3880 0146 0522     		movs	r2, #5	@,
 3881              	@ main.c:1636: 				strcpy (buf_tx," ");		
 3882 0148 A9F800E0 		strh	lr, [r9]	@ movhi	@ tmp242, MEM[(void *)&buf_tx]
 3883              	@ main.c:1638: 				strcat (buf_tx,unt2str(n++,str_num,5));
 3884 014c 0293     		str	r3, [sp, #8]	@ n, %sfp
 3885 014e FFF7FEFF 		bl	unt2str	@
 3886 0152 0646     		mov	r6, r0	@ _30,
 3887 0154 5046     		mov	r0, r10	@, tmp265
 3888 0156 FFF7FEFF 		bl	strlen	@
 3889 015a 3146     		mov	r1, r6	@, _30
 3890 015c 4844     		add	r0, r0, r9	@, tmp263
 3891 015e FFF7FEFF 		bl	stpcpy	@
 3892              	@ main.c:1639: 				strcat (buf_tx," ");
 3893 0162 194B     		ldr	r3, .L296+48	@ tmp278,
 3894 0164 A0EB0906 		sub	r6, r0, r9	@ _64, tmp249, tmp263
 3895 0168 1A88     		ldrh	r2, [r3]	@ unaligned	@ tmp254, MEM[(void *)" "]
 3896              	@ main.c:1640: 				message_length = strlen(buf_tx); 
 3897 016a 0136     		adds	r6, r6, #1	@ tmp255, _64,
 3898              	@ main.c:1642: 				SX1278_LoRaEntryTx (&SX1278_1, message_length, 2000);
 3899 016c F6B2     		uxtb	r6, r6	@ _32, tmp255
 3900              	@ main.c:1639: 				strcat (buf_tx," ");
 3901 016e 0280     		strh	r2, [r0]	@ unaligned	@ tmp254, MEM[(void *)_65]
 3902              	@ main.c:1642: 				SX1278_LoRaEntryTx (&SX1278_1, message_length, 2000);
 3903 0170 3146     		mov	r1, r6	@, _32
 3904 0172 4FF4FA62 		mov	r2, #2000	@,
 3905 0176 4046     		mov	r0, r8	@, tmp266
 3906 0178 FFF7FEFF 		bl	SX1278_LoRaEntryTx	@
 3907              	@ main.c:1646: 				SX1278_LoRaTxPacketStart(&SX1278_1, (uint8_t *) buf_tx, message_length);  // Sta
 3908 017c 3246     		mov	r2, r6	@, _32
 3909 017e 5146     		mov	r1, r10	@, tmp265
 3910 0180 4046     		mov	r0, r8	@, tmp266
 3911 0182 FFF7FEFF 		bl	SX1278_LoRaTxPacketStart	@
 3912              	@ main.c:1647: 				flag_9=1;	
 3913 0186 0122     		movs	r2, #1	@ tmp259,
 3914 0188 039B     		ldr	r3, [sp, #12]	@ _17, %sfp
 3915              	@ main.c:1648: 				SX1278_sleep(&SX1278_1);
 3916 018a 4046     		mov	r0, r8	@, tmp266
 3917              	@ main.c:1647: 				flag_9=1;	
 3918 018c 1A60     		str	r2, [r3]	@ tmp259, *_17
 3919              	@ main.c:1648: 				SX1278_sleep(&SX1278_1);
 3920 018e FFF7FEFF 		bl	SX1278_sleep	@
 3921              	@ main.c:1638: 				strcat (buf_tx,unt2str(n++,str_num,5));
 3922 0192 029B     		ldr	r3, [sp, #8]	@ n, %sfp
 3923 0194 1846     		mov	r0, r3	@ n, n
 3924 0196 C2E7     		b	.L292	@
 3925              	.L297:
 3926              		.align	2
 3927              	.L296:
 3928 0198 00100240 		.word	1073876992
 3929 019c 00040040 		.word	1073742848
 3930 01a0 00E100E0 		.word	-536813312
 3931 01a4 43430400 		.word	279363
 3932 01a8 000C0140 		.word	1073810432
 3933 01ac 00000000 		.word	.LANCHOR23
ARM GAS  /tmp/ccAYxbuo.s 			page 70


 3934 01b0 00001001 		.word	.LANCHOR17+17825792
 3935 01b4 B4012242 		.word	1109524916
 3936 01b8 00000000 		.word	trg0
 3937 01bc 10E000E0 		.word	-536813552
 3938 01c0 40548900 		.word	9000000
 3939 01c4 00000000 		.word	.LANCHOR26
 3940 01c8 18010000 		.word	.LC35
 3941 01cc 00000000 		.word	p_Fifo1
 3942 01d0 88012142 		.word	1109459336
 3943 01d4 04012142 		.word	1109459204
 3944 01d8 00000000 		.word	.LANCHOR24
 3945 01dc 00000000 		.word	.LANCHOR25
 3946              		.size	LoRaTX, .-LoRaTX
 3947              		.section	.text.col1,"ax",%progbits
 3948              		.align	1
 3949              		.p2align 2,,3
 3950              		.global	col1
 3951              		.syntax unified
 3952              		.thumb
 3953              		.thumb_func
 3954              		.fpu softvfp
 3955              		.type	col1, %function
 3956              	col1:
 3957              		@ args = 0, pretend = 0, frame = 0
 3958              		@ frame_needed = 0, uses_anonymous_args = 0
 3959              		@ link register save eliminated.
 3960              	@ main.c:1766: 			dma_buf[0]=0xe0;	dma_buf[8]  =0xe0;	dma_buf[16]=0xe0;
 3961 0000 4FF0E032 		mov	r2, #-522133280	@ tmp111,
 3962 0004 044B     		ldr	r3, .L299	@ tmp110,
 3963              	@ main.c:1769: 			dma_buf[3]=0xe0;	dma_buf[11] =0xe0;	dma_buf[19]=0xe0;
 3964 0006 0549     		ldr	r1, .L299+4	@ tmp113,
 3965              	@ main.c:1766: 			dma_buf[0]=0xe0;	dma_buf[8]  =0xe0;	dma_buf[16]=0xe0;
 3966 0008 1A60     		str	r2, [r3]	@ tmp111, MEM[(u08[24] *)&dma_buf]
 3967              	@ main.c:1769: 			dma_buf[3]=0xe0;	dma_buf[11] =0xe0;	dma_buf[19]=0xe0;
 3968 000a C3E90222 		strd	r2, r2, [r3, #8]	@ tmp111, tmp111, tmp110,
 3969 000e C3E90422 		strd	r2, r2, [r3, #16]	@ tmp111, tmp111, tmp110,
 3970 0012 5960     		str	r1, [r3, #4]	@ tmp113, MEM[(u08[24] *)&dma_buf + 4B]
 3971              	@ main.c:1774: 		}
 3972 0014 7047     		bx	lr	@
 3973              	.L300:
 3974 0016 00BF     		.align	2
 3975              	.L299:
 3976 0018 00000000 		.word	.LANCHOR27
 3977 001c E0F8F8F8 		.word	-117901088
 3978              		.size	col1, .-col1
 3979              		.section	.text.col2,"ax",%progbits
 3980              		.align	1
 3981              		.p2align 2,,3
 3982              		.global	col2
 3983              		.syntax unified
 3984              		.thumb
 3985              		.thumb_func
 3986              		.fpu softvfp
 3987              		.type	col2, %function
 3988              	col2:
 3989              		@ args = 0, pretend = 0, frame = 0
 3990              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccAYxbuo.s 			page 71


 3991              		@ link register save eliminated.
 3992              	@ main.c:1776: 			dma_buf[0]=0xe0;	dma_buf[8]  =0xe0;	dma_buf[16]=0xe0;
 3993 0000 4FF0E032 		mov	r2, #-522133280	@ tmp111,
 3994 0004 034B     		ldr	r3, .L302	@ tmp110,
 3995              	@ main.c:1779: 			dma_buf[3]=0xe0;	dma_buf[11] =0xe0;	dma_buf[19]=0xe0;
 3996 0006 C3E90022 		strd	r2, r2, [r3]	@ tmp111, tmp111, tmp110
 3997 000a C3E90222 		strd	r2, r2, [r3, #8]	@ tmp111, tmp111, tmp110,
 3998 000e C3E90422 		strd	r2, r2, [r3, #16]	@ tmp111, tmp111, tmp110,
 3999              	@ main.c:1784: 	}	
 4000 0012 7047     		bx	lr	@
 4001              	.L303:
 4002              		.align	2
 4003              	.L302:
 4004 0014 00000000 		.word	.LANCHOR27
 4005              		.size	col2, .-col2
 4006              		.section	.text.col0,"ax",%progbits
 4007              		.align	1
 4008              		.p2align 2,,3
 4009              		.global	col0
 4010              		.syntax unified
 4011              		.thumb
 4012              		.thumb_func
 4013              		.fpu softvfp
 4014              		.type	col0, %function
 4015              	col0:
 4016              		@ args = 0, pretend = 0, frame = 0
 4017              		@ frame_needed = 0, uses_anonymous_args = 0
 4018              		@ link register save eliminated.
 4019              	@ main.c:1786: 			dma_buf[0]=0;	dma_buf[8]  =0x0;	dma_buf[16]=0x0;
 4020 0000 0022     		movs	r2, #0	@ tmp111,
 4021 0002 044B     		ldr	r3, .L305	@ tmp110,
 4022              	@ main.c:1789: 			dma_buf[3]=0;	dma_buf[11] =0x0;	dma_buf[19]=0x0;
 4023 0004 C3E90022 		strd	r2, r2, [r3]	@ tmp111, tmp111, tmp110
 4024 0008 C3E90222 		strd	r2, r2, [r3, #8]	@ tmp111, tmp111, tmp110,
 4025 000c C3E90422 		strd	r2, r2, [r3, #16]	@ tmp111, tmp111, tmp110,
 4026              	@ main.c:1794: 	}
 4027 0010 7047     		bx	lr	@
 4028              	.L306:
 4029 0012 00BF     		.align	2
 4030              	.L305:
 4031 0014 00000000 		.word	.LANCHOR27
 4032              		.size	col0, .-col0
 4033              		.section	.text.ws2812led,"ax",%progbits
 4034              		.align	1
 4035              		.p2align 2,,3
 4036              		.global	ws2812led
 4037              		.syntax unified
 4038              		.thumb
 4039              		.thumb_func
 4040              		.fpu softvfp
 4041              		.type	ws2812led, %function
 4042              	ws2812led:
 4043              		@ args = 0, pretend = 0, frame = 0
 4044              		@ frame_needed = 0, uses_anonymous_args = 0
 4045 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 4046              	@ main.c:1806: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|SPI_CR1_MSTR|SPI_CR1_BR_0|SPI_CR1_BR_1;	// 0x0
 4047 0004 4FF44774 		mov	r4, #796	@ tmp152,
ARM GAS  /tmp/ccAYxbuo.s 			page 72


 4048              	@ main.c:1800: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0xBBB30000;	// PA5~7
 4049 0008 3648     		ldr	r0, .L319	@ tmp143,
 4050              	@ main.c:1804: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 4051 000a 3749     		ldr	r1, .L319+4	@ tmp148,
 4052              	@ main.c:1800: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0xBBB30000;	// PA5~7
 4053 000c 0368     		ldr	r3, [r0]	@ _2, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 4054              	@ main.c:1806: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|SPI_CR1_MSTR|SPI_CR1_BR_0|SPI_CR1_BR_1;	// 0x0
 4055 000e 374A     		ldr	r2, .L319+8	@ tmp150,
 4056              	@ main.c:1800: 		GPIOA->CRL = (GPIOA->CRL & 0x0000ffff) | 0xBBB30000;	// PA5~7
 4057 0010 9BB2     		uxth	r3, r3	@ tmp144, _2
 4058 0012 43F03B43 		orr	r3, r3, #-1157627904	@ _5, tmp144,
 4059 0016 43F43303 		orr	r3, r3, #11730944	@ _5, _5,
 4060 001a 0360     		str	r3, [r0]	@ _5, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 4061              	@ main.c:1819: 		DMA1_Channel3->CCR 	= 0;										//Disable channel
 4062 001c 0020     		movs	r0, #0	@ tmp167,
 4063              	@ main.c:1804: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 4064 001e 8B69     		ldr	r3, [r1, #24]	@ _7, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 4065              	@ main.c:1834: 		DMA1_Channel3->CCR =  CCR_reg;	
 4066 0020 B026     		movs	r6, #176	@ tmp175,
 4067              	@ main.c:1804: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 4068 0022 43F48053 		orr	r3, r3, #4096	@ _8, _7,
 4069 0026 8B61     		str	r3, [r1, #24]	@ _8, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 4070              	@ main.c:1806: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|SPI_CR1_MSTR|SPI_CR1_BR_0|SPI_CR1_BR_1;	// 0x0
 4071 0028 1480     		strh	r4, [r2]	@ movhi	@ tmp152, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 4072              	@ main.c:1807: 		SPI1->CR2 |= SPI_CR2_TXDMAEN;
 4073 002a 9388     		ldrh	r3, [r2, #4]	@, MEM[(struct SPI_TypeDef *)1073819648B].CR2
 4074              	@ main.c:1841: 		u08 fl=0;
 4075 002c 0446     		mov	r4, r0	@ fl, tmp167
 4076              	@ main.c:1807: 		SPI1->CR2 |= SPI_CR2_TXDMAEN;
 4077 002e 43F00203 		orr	r3, r3, #2	@ _10, MEM[(struct SPI_TypeDef *)1073819648B].CR2,
 4078 0032 9380     		strh	r3, [r2, #4]	@ movhi	@ _10, MEM[(struct SPI_TypeDef *)1073819648B].CR2
 4079              	@ main.c:1808: 		SPI1->CR1 |= SPI_CR1_SPE;		
 4080 0034 1388     		ldrh	r3, [r2]	@, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 4081              	@ main.c:1836: 		DMA1->IFCR = DMA_IFCR_CGIF3 | DMA_IFCR_CTCIF3;
 4082 0036 4FF44075 		mov	r5, #768	@ tmp177,
 4083              	@ main.c:1808: 		SPI1->CR1 |= SPI_CR1_SPE;		
 4084 003a 43F04003 		orr	r3, r3, #64	@ _12, MEM[(struct SPI_TypeDef *)1073819648B].CR1,
 4085 003e 1380     		strh	r3, [r2]	@ movhi	@ _12, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 4086              	@ main.c:1816: 		col0();
 4087 0040 FFF7FEFF 		bl	col0	@
 4088              	@ main.c:1823: 		DMA1_Channel3->CNDTR = 24;		//Buffor size :
 4089 0044 4FF0180C 		mov	ip, #24	@ tmp173,
 4090              	@ main.c:1818: 		RCC->AHBENR   			|= RCC_AHBENR_DMA1EN;		// enable clock for DMA1
 4091 0048 4A69     		ldr	r2, [r1, #20]	@ _13, MEM[(struct RCC_TypeDef *)1073876992B].AHBENR
 4092              	@ main.c:1819: 		DMA1_Channel3->CCR 	= 0;										//Disable channel
 4093 004a 294B     		ldr	r3, .L319+12	@ tmp166,
 4094              	@ main.c:1818: 		RCC->AHBENR   			|= RCC_AHBENR_DMA1EN;		// enable clock for DMA1
 4095 004c 42F00102 		orr	r2, r2, #1	@ _14, _13,
 4096 0050 4A61     		str	r2, [r1, #20]	@ _14, MEM[(struct RCC_TypeDef *)1073876992B].AHBENR
 4097              	@ main.c:1820: 		DMA1_Channel3->CMAR = (uint32_t)dma_buf;	 	//Destination address:
 4098 0052 2849     		ldr	r1, .L319+16	@ tmp168,
 4099              	@ main.c:1821: 		DMA1_Channel3->CPAR = (uint32_t)&SPI1->DR;	//Source PERIPHERAL address:
 4100 0054 284A     		ldr	r2, .L319+20	@ tmp171,
 4101              	@ main.c:1819: 		DMA1_Channel3->CCR 	= 0;										//Disable channel
 4102 0056 1860     		str	r0, [r3]	@ tmp167, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CCR
 4103              	@ main.c:1820: 		DMA1_Channel3->CMAR = (uint32_t)dma_buf;	 	//Destination address:
 4104 0058 D960     		str	r1, [r3, #12]	@ tmp168, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CMAR
ARM GAS  /tmp/ccAYxbuo.s 			page 73


 4105              	@ main.c:1821: 		DMA1_Channel3->CPAR = (uint32_t)&SPI1->DR;	//Source PERIPHERAL address:
 4106 005a 9A60     		str	r2, [r3, #8]	@ tmp171, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CPAR
 4107              	@ main.c:1836: 		DMA1->IFCR = DMA_IFCR_CGIF3 | DMA_IFCR_CTCIF3;
 4108 005c 274A     		ldr	r2, .L319+24	@ tmp176,
 4109              	@ main.c:1823: 		DMA1_Channel3->CNDTR = 24;		//Buffor size :
 4110 005e C3F804C0 		str	ip, [r3, #4]	@ tmp173, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CNDTR
 4111              	@ main.c:1834: 		DMA1_Channel3->CCR =  CCR_reg;	
 4112 0062 1E60     		str	r6, [r3]	@ tmp175, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CCR
 4113              	@ main.c:1836: 		DMA1->IFCR = DMA_IFCR_CGIF3 | DMA_IFCR_CTCIF3;
 4114 0064 5560     		str	r5, [r2, #4]	@ tmp177, MEM[(struct DMA_TypeDef *)1073872896B].IFCR
 4115              	@ main.c:1837: 		DMA1_Channel3->CCR |= DMA_CCR1_EN;
 4116 0066 1A68     		ldr	r2, [r3]	@ _16, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CCR
 4117              	@ main.c:1840: 		UaPutK("\r\n DMA start...");
 4118 0068 2548     		ldr	r0, .L319+28	@,
 4119              	@ main.c:1837: 		DMA1_Channel3->CCR |= DMA_CCR1_EN;
 4120 006a 42F00102 		orr	r2, r2, #1	@ _17, _16,
 4121 006e 1A60     		str	r2, [r3]	@ _17, MEM[(struct DMA_Channel_TypeDef *)1073872944B].CCR
 4122              	@ main.c:1840: 		UaPutK("\r\n DMA start...");
 4123 0070 FFF7FEFF 		bl	UaPutK	@
 4124 0074 234F     		ldr	r7, .L319+32	@ tmp206,
 4125 0076 DFF8A080 		ldr	r8, .L319+52	@ tmp208,
 4126 007a 234E     		ldr	r6, .L319+36	@ tmp207,
 4127              	@ main.c:1845: 			if(STCLK_MS*100 < (trg0 - SysTick->VAL)){
 4128 007c 2348     		ldr	r0, .L319+40	@ tmp182,
 4129              	@ main.c:1872: 					LED ^= 1;
 4130 007e 244D     		ldr	r5, .L319+44	@ tmp209,
 4131              	.L314:
 4132              	@ main.c:1845: 			if(STCLK_MS*100 < (trg0 - SysTick->VAL)){
 4133 0080 DFF898C0 		ldr	ip, .L319+56	@ tmp184,
 4134              	@ main.c:1849: 			if(STCLK_MS*200 < (trg1 - SysTick->VAL)){
 4135 0084 2349     		ldr	r1, .L319+48	@ tmp190,
 4136              	.L309:
 4137              	@ main.c:1845: 			if(STCLK_MS*100 < (trg0 - SysTick->VAL)){
 4138 0086 3B68     		ldr	r3, [r7]	@ trg0.142_18, trg0
 4139 0088 8268     		ldr	r2, [r0, #8]	@ _19, MEM[(struct SysTick_Type *)3758153744B].VAL
 4140 008a 9B1A     		subs	r3, r3, r2	@ tmp183, trg0.142_18, _19
 4141 008c 6345     		cmp	r3, ip	@ tmp183, tmp184
 4142              	@ main.c:1846: 				trg0 = SysTick->VAL;
 4143 008e 84BF     		itt	hi
 4144 0090 8368     		ldrhi	r3, [r0, #8]	@ _21, MEM[(struct SysTick_Type *)3758153744B].VAL
 4145 0092 3B60     		strhi	r3, [r7]	@ _21, trg0
 4146              	@ main.c:1849: 			if(STCLK_MS*200 < (trg1 - SysTick->VAL)){
 4147 0094 D8F80030 		ldr	r3, [r8]	@ trg1.143_22, trg1
 4148 0098 8268     		ldr	r2, [r0, #8]	@ _23, MEM[(struct SysTick_Type *)3758153744B].VAL
 4149 009a 9B1A     		subs	r3, r3, r2	@ tmp189, trg1.143_22, _23
 4150 009c 8B42     		cmp	r3, r1	@ tmp189, tmp190
 4151 009e F2D9     		bls	.L309	@,
 4152              	@ main.c:1850: 				trg1 = SysTick->VAL;
 4153 00a0 8368     		ldr	r3, [r0, #8]	@ _25, MEM[(struct SysTick_Type *)3758153744B].VAL
 4154 00a2 C8F80030 		str	r3, [r8]	@ _25, trg1
 4155              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4156 00a6 8368     		ldr	r3, [r0, #8]	@ _55, MEM[(struct SysTick_Type *)3758153744B].VAL
 4157 00a8 3360     		str	r3, [r6]	@ _55, delay_us
 4158              	.L310:
 4159              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4160 00aa 3368     		ldr	r3, [r6]	@ delay_us.82_56, delay_us
 4161 00ac 8268     		ldr	r2, [r0, #8]	@ _57, MEM[(struct SysTick_Type *)3758153744B].VAL
ARM GAS  /tmp/ccAYxbuo.s 			page 74


 4162 00ae 9B1A     		subs	r3, r3, r2	@ tmp197, delay_us.82_56, _57
 4163 00b0 B3F5E17F 		cmp	r3, #450	@ tmp197,
 4164 00b4 F9D3     		bcc	.L310	@,
 4165              	@ main.c:1866: 				if(fl){
 4166 00b6 74B1     		cbz	r4, .L311	@ fl,
 4167              	@ main.c:1867: 					col1();
 4168 00b8 FFF7FEFF 		bl	col1	@
 4169              	@ main.c:1868: 					fl=0;
 4170 00bc 0024     		movs	r4, #0	@ fl,
 4171              	.L312:
 4172              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4173 00be 40F62311 		movw	r1, #2339	@ tmp205,
 4174              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4175 00c2 8368     		ldr	r3, [r0, #8]	@ _59, MEM[(struct SysTick_Type *)3758153744B].VAL
 4176 00c4 3360     		str	r3, [r6]	@ _59, delay_us
 4177              	.L313:
 4178              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4179 00c6 3368     		ldr	r3, [r6]	@ delay_us.82_60, delay_us
 4180 00c8 8268     		ldr	r2, [r0, #8]	@ _61, MEM[(struct SysTick_Type *)3758153744B].VAL
 4181 00ca 9B1A     		subs	r3, r3, r2	@ tmp204, delay_us.82_60, _61
 4182 00cc 8B42     		cmp	r3, r1	@ tmp204, tmp205
 4183 00ce FAD9     		bls	.L313	@,
 4184              	@ main.c:1876: 				col0();
 4185 00d0 FFF7FEFF 		bl	col0	@
 4186 00d4 D4E7     		b	.L314	@
 4187              	.L311:
 4188              	@ main.c:1871: 					fl=1;
 4189 00d6 0124     		movs	r4, #1	@ fl,
 4190              	@ main.c:1870: 					col1();
 4191 00d8 FFF7FEFF 		bl	col1	@
 4192              	@ main.c:1872: 					LED ^= 1;
 4193 00dc 2B68     		ldr	r3, [r5]	@ _26, MEM[(volatile long unsigned int *)1109524916B]
 4194 00de 6340     		eors	r3, r3, r4	@, _27, _26,
 4195 00e0 2B60     		str	r3, [r5]	@ _27, MEM[(volatile long unsigned int *)1109524916B]
 4196 00e2 ECE7     		b	.L312	@
 4197              	.L320:
 4198              		.align	2
 4199              	.L319:
 4200 00e4 00080140 		.word	1073809408
 4201 00e8 00100240 		.word	1073876992
 4202 00ec 00300140 		.word	1073819648
 4203 00f0 30000240 		.word	1073872944
 4204 00f4 00000000 		.word	.LANCHOR27
 4205 00f8 0C300140 		.word	1073819660
 4206 00fc 00000240 		.word	1073872896
 4207 0100 00000000 		.word	.LC61
 4208 0104 00000000 		.word	trg0
 4209 0108 00000000 		.word	delay_us
 4210 010c 10E000E0 		.word	-536813552
 4211 0110 B4012242 		.word	1109524916
 4212 0114 40771B00 		.word	1800000
 4213 0118 00000000 		.word	trg1
 4214 011c A0BB0D00 		.word	900000
 4215              		.size	ws2812led, .-ws2812led
 4216              		.section	.text.lexmark_lcd,"ax",%progbits
 4217              		.align	1
 4218              		.p2align 2,,3
ARM GAS  /tmp/ccAYxbuo.s 			page 75


 4219              		.global	lexmark_lcd
 4220              		.syntax unified
 4221              		.thumb
 4222              		.thumb_func
 4223              		.fpu softvfp
 4224              		.type	lexmark_lcd, %function
 4225              	lexmark_lcd:
 4226              		@ Volatile: function does not return.
 4227              		@ args = 0, pretend = 0, frame = 8
 4228              		@ frame_needed = 0, uses_anonymous_args = 0
 4229 0000 00B5     		push	{lr}	@
 4230 0002 83B0     		sub	sp, sp, #12	@,,
 4231              	@ main.c:1957: 		UC1608_Init();
 4232 0004 FFF7FEFF 		bl	UC1608_Init	@
 4233              	@ main.c:1963: 		UC1608_Clr();
 4234 0008 FFF7FEFF 		bl	UC1608_Clr	@
 4235              	@ main.c:1965: 		UC1608_str (0, 0,"Witaj szkolo         ");
 4236 000c 0021     		movs	r1, #0	@,
 4237 000e 174A     		ldr	r2, .L326	@,
 4238 0010 0846     		mov	r0, r1	@,
 4239 0012 FFF7FEFF 		bl	UC1608_str	@
 4240              	@ main.c:1966: 		UC1608_str (1, 0,"Zapraszam do pracy        ");
 4241 0016 164A     		ldr	r2, .L326+4	@,
 4242 0018 0021     		movs	r1, #0	@,
 4243 001a 0120     		movs	r0, #1	@,
 4244 001c FFF7FEFF 		bl	UC1608_str	@
 4245              	@ main.c:1967: 		UC1608_Refresh();
 4246 0020 FFF7FEFF 		bl	UC1608_Refresh	@
 4247              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 4248 0024 134B     		ldr	r3, .L326+8	@ tmp122,
 4249 0026 144A     		ldr	r2, .L326+12	@ tmp137,
 4250              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 4251 0028 1D46     		mov	r5, r3	@ tmp125, tmp122
 4252              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 4253 002a 9B68     		ldr	r3, [r3, #8]	@ _17, MEM[(struct SysTick_Type *)3758153744B].VAL
 4254              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 4255 002c 1349     		ldr	r1, .L326+16	@ tmp127,
 4256              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 4257 002e 1360     		str	r3, [r2]	@ _17, delay_us
 4258              	.L322:
 4259              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 4260 0030 1368     		ldr	r3, [r2]	@ delay_us.69_18, delay_us
 4261 0032 A868     		ldr	r0, [r5, #8]	@ _19, MEM[(struct SysTick_Type *)3758153744B].VAL
 4262 0034 1B1A     		subs	r3, r3, r0	@ tmp126, delay_us.69_18, _19
 4263 0036 8B42     		cmp	r3, r1	@ tmp126, tmp127
 4264 0038 FAD9     		bls	.L322	@,
 4265              	@ main.c:1970: 		UC1608_str (1, 0,"                          ");
 4266 003a 114A     		ldr	r2, .L326+20	@,
 4267 003c 0021     		movs	r1, #0	@,
 4268 003e 0120     		movs	r0, #1	@,
 4269 0040 FFF7FEFF 		bl	UC1608_str	@
 4270              	@ main.c:1971: 		UC1608_Refresh();
 4271 0044 FFF7FEFF 		bl	UC1608_Refresh	@
 4272              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 4273 0048 AA68     		ldr	r2, [r5, #8]	@ _16, MEM[(struct SysTick_Type *)3758153744B].VAL
 4274 004a 0E4B     		ldr	r3, .L326+24	@ tmp130,
 4275              	@ main.c:1976: 		UaPutS(" T[us]="); sint2uart(tim/TIM_US);
ARM GAS  /tmp/ccAYxbuo.s 			page 76


 4276 004c 0E48     		ldr	r0, .L326+28	@,
 4277              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 4278 004e 1A60     		str	r2, [r3]	@ _16, Timt
 4279              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 4280 0050 1C68     		ldr	r4, [r3]	@ Timt.81_13, Timt
 4281 0052 AB68     		ldr	r3, [r5, #8]	@ _14, MEM[(struct SysTick_Type *)3758153744B].VAL
 4282 0054 E41A     		subs	r4, r4, r3	@ _15, Timt.81_13, _14
 4283 0056 0194     		str	r4, [sp, #4]	@ _15, MEM[(volatile u32 *)&tim]
 4284              	@ main.c:1976: 		UaPutS(" T[us]="); sint2uart(tim/TIM_US);
 4285 0058 FFF7FEFF 		bl	UaPutS	@
 4286 005c 0B48     		ldr	r0, .L326+32	@ tmp136,
 4287 005e A0FB0430 		umull	r3, r0, r0, r4	@ tmp138, tmp135, tmp136, _15
 4288 0062 4008     		lsrs	r0, r0, #1	@, tmp135,
 4289 0064 FFF7FEFF 		bl	sint2uart	@
 4290              	.L323:
 4291 0068 FEE7     		b	.L323	@
 4292              	.L327:
 4293 006a 00BF     		.align	2
 4294              	.L326:
 4295 006c 00000000 		.word	.LC62
 4296 0070 18000000 		.word	.LC63
 4297 0074 10E000E0 		.word	-536813552
 4298 0078 00000000 		.word	delay_us
 4299 007c 3F548900 		.word	8999999
 4300 0080 34000000 		.word	.LC64
 4301 0084 00000000 		.word	Timt
 4302 0088 50000000 		.word	.LC65
 4303 008c 398EE338 		.word	954437177
 4304              		.size	lexmark_lcd, .-lexmark_lcd
 4305              		.section	.text.softUTX_init,"ax",%progbits
 4306              		.align	1
 4307              		.p2align 2,,3
 4308              		.global	softUTX_init
 4309              		.syntax unified
 4310              		.thumb
 4311              		.thumb_func
 4312              		.fpu softvfp
 4313              		.type	softUTX_init, %function
 4314              	softUTX_init:
 4315              		@ args = 0, pretend = 0, frame = 0
 4316              		@ frame_needed = 0, uses_anonymous_args = 0
 4317              		@ link register save eliminated.
 4318              	@ main.c:2046: 		GPIOC->CRH = (GPIOC->CRH & 0xf0ffffff) | 0x01000000;  				// PC14 = softUART
 4319 0000 034A     		ldr	r2, .L329	@ tmp113,
 4320 0002 5368     		ldr	r3, [r2, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 4321 0004 23F07063 		bic	r3, r3, #251658240	@ tmp114, _1,
 4322 0008 43F08073 		orr	r3, r3, #16777216	@ _3, tmp114,
 4323 000c 5360     		str	r3, [r2, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 4324              	@ main.c:2047: 	}
 4325 000e 7047     		bx	lr	@
 4326              	.L330:
 4327              		.align	2
 4328              	.L329:
 4329 0010 00100140 		.word	1073811456
 4330              		.size	softUTX_init, .-softUTX_init
 4331              		.section	.text.sofUTX,"ax",%progbits
 4332              		.align	1
ARM GAS  /tmp/ccAYxbuo.s 			page 77


 4333              		.p2align 2,,3
 4334              		.global	sofUTX
 4335              		.syntax unified
 4336              		.thumb
 4337              		.thumb_func
 4338              		.fpu softvfp
 4339              		.type	sofUTX, %function
 4340              	sofUTX:
 4341              		@ args = 0, pretend = 0, frame = 8
 4342              		@ frame_needed = 0, uses_anonymous_args = 0
 4343              		@ link register save eliminated.
 4344              	@ main.c:2051: 		p_SofTX=0;				  //START Bit
 4345 0000 0021     		movs	r1, #0	@ tmp129,
 4346              	@ main.c:2048: void sofUTX(volatile u08 bTX)	{  /// Sotware Transmit USART Frame [8N1] with TIMER P
 4347 0002 F0B4     		push	{r4, r5, r6, r7}	@
 4348              	@ main.c:2051: 		p_SofTX=0;				  //START Bit
 4349 0004 194A     		ldr	r2, .L343	@ tmp128,
 4350              	@ inc/tool/delay.h:99: 		delay_us = SysTick->VAL; 
 4351 0006 1A4B     		ldr	r3, .L343+4	@ tmp130,
 4352              	@ main.c:2048: void sofUTX(volatile u08 bTX)	{  /// Sotware Transmit USART Frame [8N1] with TIMER P
 4353 0008 82B0     		sub	sp, sp, #8	@,,
 4354              	@ main.c:2048: void sofUTX(volatile u08 bTX)	{  /// Sotware Transmit USART Frame [8N1] with TIMER P
 4355 000a 8DF80700 		strb	r0, [sp, #7]	@ bTX, bTX
 4356              	@ main.c:2051: 		p_SofTX=0;				  //START Bit
 4357 000e 1160     		str	r1, [r2]	@ tmp129, MEM[(volatile long unsigned int *)1109524920B]
 4358              	@ inc/tool/delay.h:100: 		while( STCLK_DN*ns > (delay_us - SysTick->VAL) );
 4359 0010 1C46     		mov	r4, r3	@ tmp133, tmp130
 4360              	@ inc/tool/delay.h:99: 		delay_us = SysTick->VAL; 
 4361 0012 1849     		ldr	r1, .L343+8	@ tmp158,
 4362 0014 9B68     		ldr	r3, [r3, #8]	@ _16, MEM[(struct SysTick_Type *)3758153744B].VAL
 4363 0016 0B60     		str	r3, [r1]	@ _16, delay_us
 4364              	.L332:
 4365              	@ inc/tool/delay.h:100: 		while( STCLK_DN*ns > (delay_us - SysTick->VAL) );
 4366 0018 0B68     		ldr	r3, [r1]	@ delay_us.151_17, delay_us
 4367 001a A268     		ldr	r2, [r4, #8]	@ _18, MEM[(struct SysTick_Type *)3758153744B].VAL
 4368 001c 9B1A     		subs	r3, r3, r2	@ tmp134, delay_us.151_17, _18
 4369 001e 112B     		cmp	r3, #17	@ tmp134,
 4370 0020 FAD9     		bls	.L332	@,
 4371              	@ main.c:2049: 		u08  cTX = 1 ;
 4372 0022 0124     		movs	r4, #1	@ cTX,
 4373              	@ inc/tool/delay.h:100: 		while( STCLK_DN*ns > (delay_us - SysTick->VAL) );
 4374 0024 0825     		movs	r5, #8	@ ivtmp_3,
 4375              	@ main.c:2054: 		 if(bTX & cTX)  p_SofTX=1;
 4376 0026 2746     		mov	r7, r4	@ tmp160, cTX
 4377              	@ main.c:2055: 		 else 					p_SofTX=0;
 4378 0028 104E     		ldr	r6, .L343	@ tmp159,
 4379              	@ inc/tool/delay.h:99: 		delay_us = SysTick->VAL; 
 4380 002a 1148     		ldr	r0, .L343+4	@ tmp146,
 4381              	.L336:
 4382              	@ main.c:2054: 		 if(bTX & cTX)  p_SofTX=1;
 4383 002c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2	@ bTX, bTX
 4384 0030 2340     		ands	r3, r3, r4	@ tmp140, bTX, cTX
 4385 0032 14BF     		ite	ne
 4386 0034 3760     		strne	r7, [r6]	@ tmp160, MEM[(volatile long unsigned int *)1109524920B]
 4387              	@ main.c:2055: 		 else 					p_SofTX=0;
 4388 0036 3360     		streq	r3, [r6]	@ tmp140, MEM[(volatile long unsigned int *)1109524920B]
 4389              	@ inc/tool/delay.h:99: 		delay_us = SysTick->VAL; 
ARM GAS  /tmp/ccAYxbuo.s 			page 78


 4390 0038 8368     		ldr	r3, [r0, #8]	@ _20, MEM[(struct SysTick_Type *)3758153744B].VAL
 4391              	@ main.c:2056: 		 cTX <<= 1;
 4392 003a 6400     		lsls	r4, r4, #1	@ tmp145, cTX,
 4393 003c E4B2     		uxtb	r4, r4	@ cTX, tmp145
 4394              	@ inc/tool/delay.h:99: 		delay_us = SysTick->VAL; 
 4395 003e 0B60     		str	r3, [r1]	@ _20, delay_us
 4396              	.L335:
 4397              	@ inc/tool/delay.h:100: 		while( STCLK_DN*ns > (delay_us - SysTick->VAL) );
 4398 0040 0B68     		ldr	r3, [r1]	@ delay_us.151_21, delay_us
 4399 0042 8268     		ldr	r2, [r0, #8]	@ _22, MEM[(struct SysTick_Type *)3758153744B].VAL
 4400 0044 9B1A     		subs	r3, r3, r2	@ tmp150, delay_us.151_21, _22
 4401 0046 112B     		cmp	r3, #17	@ tmp150,
 4402 0048 FAD9     		bls	.L335	@,
 4403              	@ main.c:2053: 		while(cTX != 0){		//Wait to send Data
 4404 004a 013D     		subs	r5, r5, #1	@ ivtmp_3, ivtmp_3,
 4405 004c EED1     		bne	.L336	@,
 4406              	@ main.c:2059: 		p_SofTX=1;				//STOP Bit		
 4407 004e 0122     		movs	r2, #1	@ tmp152,
 4408 0050 064B     		ldr	r3, .L343	@ tmp151,
 4409              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4410 0052 074C     		ldr	r4, .L343+4	@ tmp156,
 4411              	@ main.c:2059: 		p_SofTX=1;				//STOP Bit		
 4412 0054 1A60     		str	r2, [r3]	@ tmp152, MEM[(volatile long unsigned int *)1109524920B]
 4413              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4414 0056 8368     		ldr	r3, [r0, #8]	@ _12, MEM[(struct SysTick_Type *)3758153744B].VAL
 4415 0058 0B60     		str	r3, [r1]	@ _12, delay_us
 4416              	.L337:
 4417              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4418 005a 0B68     		ldr	r3, [r1]	@ delay_us.82_13, delay_us
 4419 005c A268     		ldr	r2, [r4, #8]	@ _14, MEM[(struct SysTick_Type *)3758153744B].VAL
 4420 005e 9B1A     		subs	r3, r3, r2	@ tmp157, delay_us.82_13, _14
 4421 0060 592B     		cmp	r3, #89	@ tmp157,
 4422 0062 FAD9     		bls	.L337	@,
 4423              	@ main.c:2061: 	}
 4424 0064 02B0     		add	sp, sp, #8	@,,
 4425              		@ sp needed	@
 4426 0066 F0BC     		pop	{r4, r5, r6, r7}	@
 4427 0068 7047     		bx	lr	@
 4428              	.L344:
 4429 006a 00BF     		.align	2
 4430              	.L343:
 4431 006c B8012242 		.word	1109524920
 4432 0070 10E000E0 		.word	-536813552
 4433 0074 00000000 		.word	delay_us
 4434              		.size	sofUTX, .-sofUTX
 4435              		.section	.text.ToLED,"ax",%progbits
 4436              		.align	1
 4437              		.p2align 2,,3
 4438              		.global	ToLED
 4439              		.syntax unified
 4440              		.thumb
 4441              		.thumb_func
 4442              		.fpu softvfp
 4443              		.type	ToLED, %function
 4444              	ToLED:
 4445              		@ args = 0, pretend = 0, frame = 0
 4446              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccAYxbuo.s 			page 79


 4447 0000 70B5     		push	{r4, r5, r6, lr}	@
 4448              	@ main.c:2062: void ToLED(u16 B,u16 A,u08 dot)	{
 4449 0002 0546     		mov	r5, r0	@ B, B
 4450 0004 0C46     		mov	r4, r1	@ A, A
 4451 0006 1646     		mov	r6, r2	@ dot, dot
 4452              	@ main.c:2063: 		sofUTX(B&0x00ff);	// segment LO
 4453 0008 C0B2     		uxtb	r0, r0	@, B
 4454 000a FFF7FEFF 		bl	sofUTX	@
 4455              	@ main.c:2064: 		sofUTX(B>>8);			// segment HI
 4456 000e 280A     		lsrs	r0, r5, #8	@, B,
 4457 0010 FFF7FEFF 		bl	sofUTX	@
 4458              	@ main.c:2065: 		sofUTX(A&0x00ff);	// segment LO
 4459 0014 E0B2     		uxtb	r0, r4	@, A
 4460 0016 FFF7FEFF 		bl	sofUTX	@
 4461              	@ main.c:2066: 		sofUTX(A>>8);			// segment HI
 4462 001a 200A     		lsrs	r0, r4, #8	@, A,
 4463 001c FFF7FEFF 		bl	sofUTX	@
 4464              	@ main.c:2067: 		sofUTX(dot);
 4465 0020 3046     		mov	r0, r6	@, dot
 4466              	@ main.c:2068: 	}
 4467 0022 BDE87040 		pop	{r4, r5, r6, lr}	@
 4468              	@ main.c:2067: 		sofUTX(dot);
 4469 0026 FFF7FEBF 		b	sofUTX	@
 4470              		.size	ToLED, .-ToLED
 4471 002a 00BF     		.section	.text.cmd_LCD,"ax",%progbits
 4472              		.align	1
 4473              		.p2align 2,,3
 4474              		.global	cmd_LCD
 4475              		.syntax unified
 4476              		.thumb
 4477              		.thumb_func
 4478              		.fpu softvfp
 4479              		.type	cmd_LCD, %function
 4480              	cmd_LCD:
 4481              		@ args = 0, pretend = 0, frame = 0
 4482              		@ frame_needed = 0, uses_anonymous_args = 0
 4483 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 4484              	@ main.c:2073: 			if (byte & 0x80)	sMOSI = 1;
 4485 0004 4FF0010E 		mov	lr, #1	@ tmp147,
 4486              	@ main.c:2069: void cmd_LCD(uint8_t byte)	{
 4487 0008 0825     		movs	r5, #8	@ ivtmp_2,
 4488              	@ main.c:2076: 			sSCK = 1; /* a slave latches input data bit */
 4489 000a F046     		mov	r8, lr	@ MEM[(volatile long unsigned int *)1109459348B], tmp147
 4490              	@ main.c:2074: 			else							sMOSI = 0;
 4491 000c 0027     		movs	r7, #0	@ tmp146,
 4492 000e 1249     		ldr	r1, .L357	@ tmp144,
 4493 0010 DFF850C0 		ldr	ip, .L357+12	@ tmp145,
 4494              	@ main.c:2076: 			sSCK = 1; /* a slave latches input data bit */
 4495 0014 114E     		ldr	r6, .L357+4	@ tmp129,
 4496              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4497 0016 124A     		ldr	r2, .L357+8	@ tmp131,
 4498              	.L352:
 4499              	@ main.c:2073: 			if (byte & 0x80)	sMOSI = 1;
 4500 0018 0306     		lsls	r3, r0, #24	@, byte,
 4501 001a 4CBF     		ite	mi
 4502 001c CCF800E0 		strmi	lr, [ip]	@ tmp147, MEM[(volatile long unsigned int *)1109459356B]
 4503              	@ main.c:2074: 			else							sMOSI = 0;
ARM GAS  /tmp/ccAYxbuo.s 			page 80


 4504 0020 CCF80070 		strpl	r7, [ip]	@ tmp146, MEM[(volatile long unsigned int *)1109459356B]
 4505              	@ main.c:2076: 			sSCK = 1; /* a slave latches input data bit */
 4506 0024 C6F80080 		str	r8, [r6]	@ MEM[(volatile long unsigned int *)1109459348B], MEM[(volatile long unsigned int *)1
 4507              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4508 0028 9368     		ldr	r3, [r2, #8]	@ _18, MEM[(struct SysTick_Type *)3758153744B].VAL
 4509              	@ main.c:2075: 			byte <<= 1;
 4510 002a 4000     		lsls	r0, r0, #1	@ tmp128, byte,
 4511 002c C0B2     		uxtb	r0, r0	@ byte, tmp128
 4512              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4513 002e 0B60     		str	r3, [r1]	@ _18, delay_us
 4514              	.L350:
 4515              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4516 0030 0B68     		ldr	r3, [r1]	@ delay_us.82_19, delay_us
 4517 0032 9468     		ldr	r4, [r2, #8]	@ _20, MEM[(struct SysTick_Type *)3758153744B].VAL
 4518 0034 1B1B     		subs	r3, r3, r4	@ tmp135, delay_us.82_19, _20
 4519 0036 112B     		cmp	r3, #17	@ tmp135,
 4520 0038 FAD9     		bls	.L350	@,
 4521              	@ main.c:2078: 			sSCK = 0; /* a slave shifts out next output data bit */
 4522 003a 3760     		str	r7, [r6]	@ tmp146, MEM[(volatile long unsigned int *)1109459348B]
 4523              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 4524 003c 9368     		ldr	r3, [r2, #8]	@ _14, MEM[(struct SysTick_Type *)3758153744B].VAL
 4525 003e 0B60     		str	r3, [r1]	@ _14, delay_us
 4526              	.L351:
 4527              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 4528 0040 0B68     		ldr	r3, [r1]	@ delay_us.82_15, delay_us
 4529 0042 9468     		ldr	r4, [r2, #8]	@ _16, MEM[(struct SysTick_Type *)3758153744B].VAL
 4530 0044 1B1B     		subs	r3, r3, r4	@ tmp142, delay_us.82_15, _16
 4531 0046 112B     		cmp	r3, #17	@ tmp142,
 4532 0048 FAD9     		bls	.L351	@,
 4533 004a 013D     		subs	r5, r5, #1	@ tmp143, ivtmp_2,
 4534              	@ main.c:2071: 		for(counter = 8; counter; counter--)
 4535 004c 15F0FF05 		ands	r5, r5, #255	@ ivtmp_2, tmp143,
 4536 0050 E2D1     		bne	.L352	@,
 4537              	@ main.c:2082: 	}
 4538 0052 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}	@
 4539              	.L358:
 4540 0056 00BF     		.align	2
 4541              	.L357:
 4542 0058 00000000 		.word	delay_us
 4543 005c 94012142 		.word	1109459348
 4544 0060 10E000E0 		.word	-536813552
 4545 0064 9C012142 		.word	1109459356
 4546              		.size	cmd_LCD, .-cmd_LCD
 4547              		.section	.text.CalculateLux,"ax",%progbits
 4548              		.align	1
 4549              		.p2align 2,,3
 4550              		.global	CalculateLux
 4551              		.syntax unified
 4552              		.thumb
 4553              		.thumb_func
 4554              		.fpu softvfp
 4555              		.type	CalculateLux, %function
 4556              	CalculateLux:
 4557              		@ args = 4, pretend = 0, frame = 0
 4558              		@ frame_needed = 0, uses_anonymous_args = 0
 4559              		@ link register save eliminated.
 4560 0000 30B4     		push	{r4, r5}	@
ARM GAS  /tmp/ccAYxbuo.s 			page 81


 4561              	@ main.c:2083: u16  CalculateLux(u16 iGain, u16 tInt, u16 ch0, u16 ch1, int iType)	{
 4562 0002 029D     		ldr	r5, [sp, #8]	@ iType, iType
 4563              	@ main.c:2101:     switch (tInt)
 4564 0004 0029     		cmp	r1, #0	@ tInt
 4565 0006 47D0     		beq	.L361	@
 4566              	@ main.c:2112:        chScale = (1 << CH_SCALE);
 4567 0008 40F6E774 		movw	r4, #4071	@ tmp153,
 4568 000c 0129     		cmp	r1, #1	@ tInt,
 4569 000e 0CBF     		ite	eq
 4570 0010 2146     		moveq	r1, r4	@ chScale, tmp153
 4571 0012 4FF48061 		movne	r1, #1024	@ chScale,
 4572              	.L362:
 4573              	@ main.c:2117:     if (!iGain) chScale = chScale << 4; // scale 1X to 16X
 4574 0016 00B9     		cbnz	r0, .L363	@ iGain,
 4575              	@ main.c:2117:     if (!iGain) chScale = chScale << 4; // scale 1X to 16X
 4576 0018 0901     		lsls	r1, r1, #4	@ chScale, chScale,
 4577              	.L363:
 4578              	@ main.c:2121:     channel1 = (ch1 * chScale) >> CH_SCALE;
 4579 001a 01FB03F3 		mul	r3, r1, r3	@ _4, chScale, ch1
 4580              	@ main.c:2120:     channel0 = (ch0 * chScale) >> CH_SCALE;
 4581 001e 01FB02F1 		mul	r1, r1, r2	@ tmp139, chScale, ch0
 4582              	@ main.c:2127:     if (channel0 != 0) ratio1 = (channel1 << (RATIO_SCALE+1)) / channel0;
 4583 0022 890A     		lsrs	r1, r1, #10	@ channel0, tmp139,
 4584              	@ main.c:2121:     channel1 = (ch1 * chScale) >> CH_SCALE;
 4585 0024 4FEA9320 		lsr	r0, r3, #10	@ channel1, _4,
 4586              	@ main.c:2127:     if (channel0 != 0) ratio1 = (channel1 << (RATIO_SCALE+1)) / channel0;
 4587 0028 18D0     		beq	.L364	@,
 4588              	@ main.c:2127:     if (channel0 != 0) ratio1 = (channel1 << (RATIO_SCALE+1)) / channel0;
 4589 002a 23F47F73 		bic	r3, r3, #1020	@ tmp140, _4,
 4590 002e 23F00303 		bic	r3, r3, #3	@ tmp140, tmp140,
 4591 0032 B3FBF1F3 		udiv	r3, r3, r1	@ ratio1, tmp140, channel0
 4592 0036 0133     		adds	r3, r3, #1	@ tmp144, ratio1,
 4593 0038 5B08     		lsrs	r3, r3, #1	@ prephitmp_18, tmp144,
 4594              	@ main.c:2135:     switch (iType)
 4595 003a ADB3     		cbz	r5, .L366	@ iType,
 4596 003c 012D     		cmp	r5, #1	@ iType,
 4597 003e 15D0     		beq	.L367	@,
 4598              	.L365:
 4599 0040 0022     		movs	r2, #0	@ _164,
 4600 0042 1346     		mov	r3, r2	@ _166, _164
 4601              	.L368:
 4602              	@ main.c:2178:     temp = (u32)((channel0 * b) - (channel1 * m));
 4603 0044 02FB01F1 		mul	r1, r2, r1	@ tmp148, _164, channel0
 4604 0048 03FB1011 		mls	r1, r3, r0, r1	@ temp, _166, channel1, tmp148
 4605 004c 21EAE171 		bic	r1, r1, r1, asr #31	@ temp, temp
 4606 0050 01F50051 		add	r1, r1, #8192	@ tmp150, temp,
 4607 0054 C1F38F30 		ubfx	r0, r1, #14, #16	@ <retval>, tmp150,,
 4608              	.L389:
 4609              	@ main.c:2190: 	}
 4610 0058 30BC     		pop	{r4, r5}	@
 4611 005a 7047     		bx	lr	@
 4612              	.L364:
 4613              	@ main.c:2135:     switch (iType)
 4614 005c FDB1     		cbz	r5, .L385	@ iType,
 4615 005e 012D     		cmp	r5, #1	@ iType,
 4616 0060 EED1     		bne	.L365	@,
 4617              	.L378:
ARM GAS  /tmp/ccAYxbuo.s 			page 82


 4618 0062 40F2AD13 		movw	r3, #429	@ _166,
 4619 0066 4FF40172 		mov	r2, #516	@ _164,
 4620 006a EBE7     		b	.L368	@
 4621              	.L367:
 4622              	@ main.c:2157:             if ((ratio >= 0) && (ratio <= K1C))
 4623 006c 432B     		cmp	r3, #67	@ prephitmp_18,
 4624 006e F8D9     		bls	.L378	@,
 4625              	@ main.c:2159:             else if (ratio <= K2C)
 4626 0070 852B     		cmp	r3, #133	@ prephitmp_18,
 4627 0072 34D9     		bls	.L379	@,
 4628              	@ main.c:2161:             else if (ratio <= K3C)
 4629 0074 C82B     		cmp	r3, #200	@ prephitmp_18,
 4630 0076 37DD     		ble	.L380	@,
 4631              	@ main.c:2163:             else if (ratio <= K4C)
 4632 0078 B3F5857F 		cmp	r3, #266	@ prephitmp_18,
 4633 007c 43DD     		ble	.L381	@,
 4634              	@ main.c:2165:             else if (ratio <= K5C)
 4635 007e B3F5A77F 		cmp	r3, #334	@ prephitmp_18,
 4636 0082 45DB     		blt	.L382	@,
 4637              	@ main.c:2167:             else if (ratio <= K6C)
 4638 0084 B3F5CD7F 		cmp	r3, #410	@ prephitmp_18,
 4639 0088 51DD     		ble	.L383	@,
 4640              	@ main.c:2169:             else if (ratio <= K7C)
 4641 008a 40F29A22 		movw	r2, #666	@ tmp146,
 4642 008e 9342     		cmp	r3, r2	@ prephitmp_18, tmp146
 4643 0090 4BDC     		bgt	.L384	@,
 4644 0092 2B23     		movs	r3, #43	@ _166,
 4645 0094 3722     		movs	r2, #55	@ _164,
 4646 0096 D5E7     		b	.L368	@
 4647              	.L361:
 4648              	@ main.c:2104:        chScale = CHSCALE_TINT0;
 4649 0098 47F21751 		movw	r1, #29975	@ chScale,
 4650 009c BBE7     		b	.L362	@
 4651              	.L385:
 4652              	@ main.c:2135:     switch (iType)
 4653 009e 4FF4DF73 		mov	r3, #446	@ _166,
 4654 00a2 4FF4F972 		mov	r2, #498	@ _164,
 4655 00a6 CDE7     		b	.L368	@
 4656              	.L366:
 4657              	@ main.c:2138:         if ((ratio >= 0) && (ratio <= K1T))
 4658 00a8 402B     		cmp	r3, #64	@ prephitmp_18,
 4659 00aa F8D9     		bls	.L385	@,
 4660              	@ main.c:2140:             else if (ratio <= K2T)
 4661 00ac 802B     		cmp	r3, #128	@ prephitmp_18,
 4662 00ae 11D9     		bls	.L372	@,
 4663              	@ main.c:2142:             else if (ratio <= K3T)
 4664 00b0 C02B     		cmp	r3, #192	@ prephitmp_18,
 4665 00b2 1EDD     		ble	.L373	@,
 4666              	@ main.c:2144:             else if (ratio <= K4T)
 4667 00b4 B3F5807F 		cmp	r3, #256	@ prephitmp_18,
 4668 00b8 20DD     		ble	.L374	@,
 4669              	@ main.c:2146:             else if (ratio <= K5T)
 4670 00ba B3F59C7F 		cmp	r3, #312	@ prephitmp_18,
 4671 00be 2CDD     		ble	.L375	@,
 4672              	@ main.c:2148:             else if (ratio <= K6T)
 4673 00c0 B3F5CD7F 		cmp	r3, #410	@ prephitmp_18,
 4674 00c4 2EDD     		ble	.L376	@,
ARM GAS  /tmp/ccAYxbuo.s 			page 83


 4675              	@ main.c:2150:             else if (ratio <= K7T)
 4676 00c6 40F29A22 		movw	r2, #666	@ tmp145,
 4677 00ca 9342     		cmp	r3, r2	@ prephitmp_18, tmp145
 4678 00cc 2DDC     		bgt	.L384	@,
 4679 00ce 1223     		movs	r3, #18	@ _166,
 4680 00d0 1822     		movs	r2, #24	@ _164,
 4681 00d2 B7E7     		b	.L368	@
 4682              	.L372:
 4683 00d4 40F2D123 		movw	r3, #721	@ _166,
 4684 00d8 4FF40572 		mov	r2, #532	@ _164,
 4685 00dc B2E7     		b	.L368	@
 4686              	.L379:
 4687 00de 40F2C123 		movw	r3, #705	@ _166,
 4688 00e2 4FF40A72 		mov	r2, #552	@ _164,
 4689 00e6 ADE7     		b	.L368	@
 4690              	.L380:
 4691 00e8 40F26333 		movw	r3, #867	@ _166,
 4692 00ec 40F25322 		movw	r2, #595	@ _164,
 4693 00f0 A8E7     		b	.L368	@
 4694              	.L373:
 4695 00f2 40F27B33 		movw	r3, #891	@ _166,
 4696 00f6 40F23F22 		movw	r2, #575	@ _164,
 4697 00fa A3E7     		b	.L368	@
 4698              	.L374:
 4699 00fc 40F2FE33 		movw	r3, #1022	@ _166,
 4700 0100 4FF41C72 		mov	r2, #624	@ _164,
 4701 0104 9EE7     		b	.L368	@
 4702              	.L381:
 4703 0106 40F2DF33 		movw	r3, #991	@ _166,
 4704 010a 40F28222 		movw	r2, #642	@ _164,
 4705 010e 99E7     		b	.L368	@
 4706              	.L382:
 4707 0110 40F2DD13 		movw	r3, #477	@ _166,
 4708 0114 40F27712 		movw	r2, #375	@ _164,
 4709 0118 94E7     		b	.L368	@
 4710              	.L375:
 4711 011a 4FF4FE73 		mov	r3, #508	@ _166,
 4712 011e 40F26F12 		movw	r2, #367	@ _164,
 4713 0122 8FE7     		b	.L368	@
 4714              	.L376:
 4715 0124 FB23     		movs	r3, #251	@ _166,
 4716 0126 D222     		movs	r2, #210	@ _164,
 4717 0128 8CE7     		b	.L368	@
 4718              	.L384:
 4719 012a 0020     		movs	r0, #0	@ <retval>,
 4720              	@ main.c:2189:     return(lux);
 4721 012c 94E7     		b	.L389	@
 4722              	.L383:
 4723 012e 40F22713 		movw	r3, #295	@ _166,
 4724 0132 40F20112 		movw	r2, #257	@ _164,
 4725 0136 85E7     		b	.L368	@
 4726              		.size	CalculateLux, .-CalculateLux
 4727              		.section	.text.TSL2561_i2c,"ax",%progbits
 4728              		.align	1
 4729              		.p2align 2,,3
 4730              		.global	TSL2561_i2c
 4731              		.syntax unified
ARM GAS  /tmp/ccAYxbuo.s 			page 84


 4732              		.thumb
 4733              		.thumb_func
 4734              		.fpu softvfp
 4735              		.type	TSL2561_i2c, %function
 4736              	TSL2561_i2c:
 4737              		@ args = 0, pretend = 0, frame = 8
 4738              		@ frame_needed = 0, uses_anonymous_args = 0
 4739              	@ main.c:2205: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 4740 0000 0122     		movs	r2, #1	@ tmp142,
 4741              	@ main.c:2191: void TSL2561_i2c(void){
 4742 0002 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}	@
 4743              	@ main.c:2225: 		buf[0]=0x80;
 4744 0006 4FF46070 		mov	r0, #896	@ tmp159,
 4745              	@ main.c:2207: 		I2C2_CR1_SWRST_bb = 0;
 4746 000a 0027     		movs	r7, #0	@ tmp146,
 4747              	@ main.c:2208: 		I2C2->TRISE = 37;               		// limit slope
 4748 000c 2526     		movs	r6, #37	@ tmp149,
 4749              	@ main.c:2210: 		I2C2->CCR = (F_CPU/(4*400000));             // setup speed (100kHz)
 4750 000e 2D25     		movs	r5, #45	@ tmp152,
 4751              	@ main.c:2213: 		I2C2->CR2 = I2C_CR2_FREQ_36MHz;     // config I2C2 module
 4752 0010 2424     		movs	r4, #36	@ tmp155,
 4753              	@ main.c:2203: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// ...009900 PB11=SDA (Open-d
 4754 0012 3249     		ldr	r1, .L396	@ tmp138,
 4755              	@ main.c:2191: void TSL2561_i2c(void){
 4756 0014 82B0     		sub	sp, sp, #8	@,,
 4757              	@ main.c:2203: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// ...009900 PB11=SDA (Open-d
 4758 0016 4B68     		ldr	r3, [r1, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 4759              	@ main.c:2225: 		buf[0]=0x80;
 4760 0018 0DF10808 		add	r8, sp, #8	@ tmp195,,
 4761              	@ main.c:2203: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// ...009900 PB11=SDA (Open-d
 4762 001c 23F47F43 		bic	r3, r3, #65280	@ tmp139, _1,
 4763 0020 43F45D43 		orr	r3, r3, #56576	@ _3, tmp139,
 4764 0024 4B60     		str	r3, [r1, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 4765              	@ main.c:2205: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 4766 0026 2E4B     		ldr	r3, .L396+4	@ tmp141,
 4767              	@ main.c:2206: 		I2C2_CR1_SWRST_bb = 1;            	// force software reset of I2C peripheral
 4768 0028 2E49     		ldr	r1, .L396+8	@ tmp143,
 4769              	@ main.c:2205: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 4770 002a 1A60     		str	r2, [r3]	@ tmp142, MEM[(volatile long unsigned int *)1111622616B]
 4771              	@ main.c:2208: 		I2C2->TRISE = 37;               		// limit slope
 4772 002c 2E4B     		ldr	r3, .L396+12	@ tmp147,
 4773              	@ main.c:2206: 		I2C2_CR1_SWRST_bb = 1;            	// force software reset of I2C peripheral
 4774 002e 0A60     		str	r2, [r1]	@ tmp142, MEM[(volatile long unsigned int *)1108017212B]
 4775              	@ main.c:2207: 		I2C2_CR1_SWRST_bb = 0;
 4776 0030 0F60     		str	r7, [r1]	@ tmp146, MEM[(volatile long unsigned int *)1108017212B]
 4777              	@ main.c:2208: 		I2C2->TRISE = 37;               		// limit slope
 4778 0032 1E84     		strh	r6, [r3, #32]	@ movhi	@ tmp149, MEM[(struct I2C_TypeDef *)1073764352B].TRISE
 4779              	@ main.c:2210: 		I2C2->CCR = (F_CPU/(4*400000));             // setup speed (100kHz)
 4780 0034 9D83     		strh	r5, [r3, #28]	@ movhi	@ tmp152, MEM[(struct I2C_TypeDef *)1073764352B].CCR
 4781              	@ main.c:2213: 		I2C2->CR2 = I2C_CR2_FREQ_36MHz;     // config I2C2 module
 4782 0036 9C80     		strh	r4, [r3, #4]	@ movhi	@ tmp155, MEM[(struct I2C_TypeDef *)1073764352B].CR2
 4783              	@ main.c:2214: 		I2C2_CR1_PE_bb = 1;               	// enable peripheral
 4784 0038 41F83C2C 		str	r2, [r1, #-60]	@ tmp142, MEM[(volatile long unsigned int *)1108017152B]
 4785              	@ main.c:2225: 		buf[0]=0x80;
 4786 003c 28F8080D 		strh	r0, [r8, #-8]!	@ movhi	@ tmp159, MEM[(u08[3] *)&buf]
 4787              	@ main.c:2227: 		i2c2_write(TSL2561_ADR,buf,2); // init control Power UP
 4788 0040 4146     		mov	r1, r8	@, tmp195
ARM GAS  /tmp/ccAYxbuo.s 			page 85


 4789 0042 0222     		movs	r2, #2	@,
 4790 0044 7220     		movs	r0, #114	@,
 4791 0046 FFF7FEFF 		bl	i2c2_write	@
 4792              	@ main.c:2228: 		buf[0]=0x81;
 4793 004a 40F28123 		movw	r3, #641	@ tmp162,
 4794              	@ main.c:2230: 		i2c2_write(TSL2561_ADR,buf,2); // init Timing 
 4795 004e 4146     		mov	r1, r8	@, tmp195
 4796 0050 0222     		movs	r2, #2	@,
 4797 0052 7220     		movs	r0, #114	@,
 4798              	@ main.c:2228: 		buf[0]=0x81;
 4799 0054 ADF80030 		strh	r3, [sp]	@ movhi	@ tmp162, MEM[(u08[3] *)&buf]
 4800              	@ main.c:2230: 		i2c2_write(TSL2561_ADR,buf,2); // init Timing 
 4801 0058 FFF7FEFF 		bl	i2c2_write	@
 4802 005c 234D     		ldr	r5, .L396+16	@ tmp196,
 4803 005e 244F     		ldr	r7, .L396+20	@ tmp194,
 4804              	@ main.c:2235: 			if(STCLK_MS*300 < (trg0 - SysTick->VAL)){
 4805 0060 244C     		ldr	r4, .L396+24	@ tmp165,
 4806 0062 254E     		ldr	r6, .L396+28	@ tmp167,
 4807              	.L392:
 4808 0064 2B68     		ldr	r3, [r5]	@ trg0.156_4, trg0
 4809 0066 A268     		ldr	r2, [r4, #8]	@ _5, MEM[(struct SysTick_Type *)3758153744B].VAL
 4810 0068 9B1A     		subs	r3, r3, r2	@ tmp166, trg0.156_4, _5
 4811 006a B342     		cmp	r3, r6	@ tmp166, tmp167
 4812 006c FAD9     		bls	.L392	@,
 4813              	@ main.c:2236: 				trg0 = SysTick->VAL;
 4814 006e D4F808C0 		ldr	ip, [r4, #8]	@ _7, MEM[(struct SysTick_Type *)3758153744B].VAL
 4815              	@ main.c:2242: 				i2c2_read(TSL2561_ADR, DATA0LOW, buf,2 );
 4816 0072 0223     		movs	r3, #2	@,
 4817 0074 4246     		mov	r2, r8	@, tmp195
 4818 0076 8C21     		movs	r1, #140	@,
 4819 0078 7220     		movs	r0, #114	@,
 4820              	@ main.c:2236: 				trg0 = SysTick->VAL;
 4821 007a C5F800C0 		str	ip, [r5]	@ _7, trg0
 4822              	@ main.c:2242: 				i2c2_read(TSL2561_ADR, DATA0LOW, buf,2 );
 4823 007e FFF7FEFF 		bl	i2c2_read	@
 4824              	@ main.c:2243: 				ch0 = (buf[1]<<8)+buf[0];
 4825 0082 9DF80120 		ldrb	r2, [sp, #1]	@ zero_extendqisi2	@ buf, buf
 4826 0086 9DF800A0 		ldrb	r10, [sp]	@ zero_extendqisi2	@ buf, buf
 4827              	@ main.c:2244: 				i2c2_read(TSL2561_ADR, DATA1LOW, buf,2 );
 4828 008a 8E21     		movs	r1, #142	@,
 4829 008c 0223     		movs	r3, #2	@,
 4830              	@ main.c:2243: 				ch0 = (buf[1]<<8)+buf[0];
 4831 008e 0AEB022A 		add	r10, r10, r2, lsl #8	@ tmp177, buf, buf,
 4832              	@ main.c:2244: 				i2c2_read(TSL2561_ADR, DATA1LOW, buf,2 );
 4833 0092 7220     		movs	r0, #114	@,
 4834 0094 4246     		mov	r2, r8	@, tmp195
 4835 0096 FFF7FEFF 		bl	i2c2_read	@
 4836              	@ main.c:2245: 				ch1	= (buf[1]<<8)+buf[0];
 4837 009a 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2	@ buf, buf
 4838 009e 9DF80090 		ldrb	r9, [sp]	@ zero_extendqisi2	@ buf, buf
 4839              	@ main.c:2243: 				ch0 = (buf[1]<<8)+buf[0];
 4840 00a2 1FFA8AFA 		uxth	r10, r10	@ ch0, tmp177
 4841              	@ main.c:2245: 				ch1	= (buf[1]<<8)+buf[0];
 4842 00a6 09EB0329 		add	r9, r9, r3, lsl #8	@ tmp185, buf, buf,
 4843              	@ main.c:2255: 				sint2uart(ch0);
 4844 00aa 5046     		mov	r0, r10	@, ch0
 4845 00ac FFF7FEFF 		bl	sint2uart	@
ARM GAS  /tmp/ccAYxbuo.s 			page 86


 4846              	@ main.c:2245: 				ch1	= (buf[1]<<8)+buf[0];
 4847 00b0 1FFA89F9 		uxth	r9, r9	@ ch1, tmp185
 4848              	@ main.c:2256: 				UaPutK(",");	
 4849 00b4 1148     		ldr	r0, .L396+32	@,
 4850 00b6 FFF7FEFF 		bl	UaPutK	@
 4851              	@ main.c:2257: 				sint2uart(ch1);
 4852 00ba 4846     		mov	r0, r9	@, ch1
 4853 00bc FFF7FEFF 		bl	sint2uart	@
 4854              	@ main.c:2258: 				UaPutK("\r\n");	
 4855 00c0 0F48     		ldr	r0, .L396+36	@,
 4856 00c2 FFF7FEFF 		bl	UaPutK	@
 4857              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 4858 00c6 A368     		ldr	r3, [r4, #8]	@ _52, MEM[(struct SysTick_Type *)3758153744B].VAL
 4859 00c8 3B60     		str	r3, [r7]	@ _52, Timt
 4860              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 4861 00ca 3B68     		ldr	r3, [r7]	@ Timt.81_49, Timt
 4862 00cc A268     		ldr	r2, [r4, #8]	@ _50, MEM[(struct SysTick_Type *)3758153744B].VAL
 4863 00ce 9B1A     		subs	r3, r3, r2	@ _51, Timt.81_49, _50
 4864 00d0 0193     		str	r3, [sp, #4]	@ _51, MEM[(volatile u32 *)&tim]
 4865 00d2 3B68     		ldr	r3, [r7]	@ Timt.81_42, Timt
 4866 00d4 A268     		ldr	r2, [r4, #8]	@ _47, MEM[(struct SysTick_Type *)3758153744B].VAL
 4867 00d6 9B1A     		subs	r3, r3, r2	@ _48, Timt.81_42, _47
 4868 00d8 0193     		str	r3, [sp, #4]	@ _48, MEM[(volatile u32 *)&tim]
 4869 00da C3E7     		b	.L392	@
 4870              	.L397:
 4871              		.align	2
 4872              	.L396:
 4873 00dc 000C0140 		.word	1073810432
 4874 00e0 D8034242 		.word	1111622616
 4875 00e4 3C000B42 		.word	1108017212
 4876 00e8 00580040 		.word	1073764352
 4877 00ec 00000000 		.word	trg0
 4878 00f0 00000000 		.word	Timt
 4879 00f4 10E000E0 		.word	-536813552
 4880 00f8 E0322900 		.word	2700000
 4881 00fc 00000000 		.word	.LC66
 4882 0100 04000000 		.word	.LC13
 4883              		.size	TSL2561_i2c, .-TSL2561_i2c
 4884              		.section	.text.set_mode,"ax",%progbits
 4885              		.align	1
 4886              		.p2align 2,,3
 4887              		.global	set_mode
 4888              		.syntax unified
 4889              		.thumb
 4890              		.thumb_func
 4891              		.fpu softvfp
 4892              		.type	set_mode, %function
 4893              	set_mode:
 4894              		@ args = 0, pretend = 0, frame = 8
 4895              		@ frame_needed = 0, uses_anonymous_args = 0
 4896 0000 30B5     		push	{r4, r5, lr}	@
 4897 0002 83B0     		sub	sp, sp, #12	@,,
 4898              	@ main.c:2291: 		i2c1_read(APDS9960_ADR, APDS9960_ENABLE, buf,1 );
 4899 0004 0123     		movs	r3, #1	@,
 4900              	@ main.c:2288: void set_mode( u08 mode, bool enable )	{
 4901 0006 0446     		mov	r4, r0	@ mode, mode
 4902 0008 0D46     		mov	r5, r1	@ enable, enable
ARM GAS  /tmp/ccAYxbuo.s 			page 87


 4903              	@ main.c:2291: 		i2c1_read(APDS9960_ADR, APDS9960_ENABLE, buf,1 );
 4904 000a 01AA     		add	r2, sp, #4	@ tmp134,,
 4905 000c 8021     		movs	r1, #128	@,
 4906 000e 7220     		movs	r0, #114	@,
 4907 0010 FFF7FEFF 		bl	i2c1_read	@
 4908              	@ main.c:2292: 		uint8_t reg_val = buf[0];
 4909 0014 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2	@ reg_val, buf
 4910              	@ main.c:2294:     if( reg_val == ERROR )
 4911 0018 FF2B     		cmp	r3, #255	@ reg_val,
 4912 001a 0FD0     		beq	.L398	@,
 4913              	@ main.c:2299:     if( mode == ALL )
 4914 001c 062C     		cmp	r4, #6	@ mode,
 4915 001e 0FD9     		bls	.L400	@,
 4916              	@ main.c:2303:       reg_val = 0x7F;
 4917 0020 002D     		cmp	r5, #0	@ enable,
 4918 0022 0CBF     		ite	eq
 4919 0024 0023     		moveq	r3, #0	@ reg_val,
 4920 0026 7F23     		movne	r3, #127	@ reg_val,
 4921              	.L401:
 4922              	@ main.c:2312: 		buf[0]=APDS9960_ENABLE;			buf[1]=reg_val; 			i2c1_write(APDS9960_ADR,buf,2); 
 4923 0028 8024     		movs	r4, #128	@ tmp129,
 4924 002a 01A9     		add	r1, sp, #4	@ tmp135,,
 4925 002c 0222     		movs	r2, #2	@,
 4926 002e 7220     		movs	r0, #114	@,
 4927 0030 8DF80530 		strb	r3, [sp, #5]	@ reg_val, buf
 4928 0034 8DF80440 		strb	r4, [sp, #4]	@ tmp129, buf
 4929 0038 FFF7FEFF 		bl	i2c1_write	@
 4930              	.L398:
 4931              	@ main.c:2313: 	}
 4932 003c 03B0     		add	sp, sp, #12	@,,
 4933              		@ sp needed	@
 4934 003e 30BD     		pop	{r4, r5, pc}	@
 4935              	.L400:
 4936              	@ main.c:2305:       reg_val &= ~( 1 << mode );
 4937 0040 0120     		movs	r0, #1	@ tmp123,
 4938 0042 A040     		lsls	r0, r0, r4	@ tmp122, tmp123, mode
 4939 0044 5BB2     		sxtb	r3, r3	@ reg_val.157_5, reg_val
 4940 0046 40B2     		sxtb	r0, r0	@ _3, tmp122
 4941              	@ main.c:2306:       if( enable )
 4942 0048 15B1     		cbz	r5, .L409	@ enable,
 4943              	@ main.c:2307:       reg_val |= ( 1 << mode );
 4944 004a 1843     		orrs	r0, r0, r3	@, tmp128, _3, reg_val.157_5
 4945 004c C3B2     		uxtb	r3, r0	@ reg_val, tmp128
 4946 004e EBE7     		b	.L401	@
 4947              	.L409:
 4948              	@ main.c:2305:       reg_val &= ~( 1 << mode );
 4949 0050 23EA0003 		bic	r3, r3, r0	@ tmp127, reg_val.157_5, _3
 4950 0054 DBB2     		uxtb	r3, r3	@ reg_val, tmp127
 4951 0056 E7E7     		b	.L401	@
 4952              		.size	set_mode, .-set_mode
 4953              		.section	.text.MAX44009_i2c,"ax",%progbits
 4954              		.align	1
 4955              		.p2align 2,,3
 4956              		.global	MAX44009_i2c
 4957              		.syntax unified
 4958              		.thumb
 4959              		.thumb_func
ARM GAS  /tmp/ccAYxbuo.s 			page 88


 4960              		.fpu softvfp
 4961              		.type	MAX44009_i2c, %function
 4962              	MAX44009_i2c:
 4963              		@ args = 0, pretend = 0, frame = 16
 4964              		@ frame_needed = 0, uses_anonymous_args = 0
 4965 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 4966              	@ main.c:2330: 		I2C2->CR2     = 0;
 4967 0004 0020     		movs	r0, #0	@ tmp203,
 4968              	@ main.c:2331: 		I2C2->CCR     = (F_CPU/(4*400000));             	// setup speed (100kHz)
 4969 0006 2D21     		movs	r1, #45	@ tmp206,
 4970              	@ main.c:2328: 		I2C2->TRISE   = 37;               								// limit slope
 4971 0008 2525     		movs	r5, #37	@ tmp200,
 4972              	@ main.c:2325: 		GPIOB->CRH    = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// PB11=SDA (Open-drain) P
 4973 000a 784F     		ldr	r7, .L417	@ tmp193,
 4974              	@ main.c:2364: 		buf[0]=0x02;
 4975 000c 44F20204 		movw	r4, #16386	@ tmp234,
 4976              	@ main.c:2325: 		GPIOB->CRH    = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// PB11=SDA (Open-drain) P
 4977 0010 7B68     		ldr	r3, [r7, #4]	@ _2, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 4978              	@ main.c:2326: 		RCC->APB1ENR |= RCC_APB1ENR_I2C2EN;
 4979 0012 774A     		ldr	r2, .L417+4	@ tmp196,
 4980              	@ main.c:2325: 		GPIOB->CRH    = (GPIOB->CRH & 0xffff00ff) | 0x0000dd00;	// PB11=SDA (Open-drain) P
 4981 0014 23F47F43 		bic	r3, r3, #65280	@ tmp194, _2,
 4982 0018 43F45D43 		orr	r3, r3, #56576	@ _4, tmp194,
 4983 001c 7B60     		str	r3, [r7, #4]	@ _4, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 4984              	@ main.c:2326: 		RCC->APB1ENR |= RCC_APB1ENR_I2C2EN;
 4985 001e D2F81CC0 		ldr	ip, [r2, #28]	@ _5, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 4986              	@ main.c:2328: 		I2C2->TRISE   = 37;               								// limit slope
 4987 0022 744B     		ldr	r3, .L417+8	@ tmp198,
 4988              	@ main.c:2326: 		RCC->APB1ENR |= RCC_APB1ENR_I2C2EN;
 4989 0024 4CF4800C 		orr	ip, ip, #4194304	@ _6, _5,
 4990 0028 C2F81CC0 		str	ip, [r2, #28]	@ _6, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 4991              	@ main.c:2328: 		I2C2->TRISE   = 37;               								// limit slope
 4992 002c 1D84     		strh	r5, [r3, #32]	@ movhi	@ tmp200, MEM[(struct I2C_TypeDef *)1073764352B].TRISE
 4993              	@ main.c:2330: 		I2C2->CR2     = 0;
 4994 002e 9880     		strh	r0, [r3, #4]	@ movhi	@ tmp203, MEM[(struct I2C_TypeDef *)1073764352B].CR2
 4995              	@ main.c:2331: 		I2C2->CCR     = (F_CPU/(4*400000));             	// setup speed (100kHz)
 4996 0030 9983     		strh	r1, [r3, #28]	@ movhi	@ tmp206, MEM[(struct I2C_TypeDef *)1073764352B].CCR
 4997              	@ main.c:2333: 		I2C2->CR1    |= I2C_CR1_PE;											  // I2C2 Pheripherial enable
 4998 0032 B3F800C0 		ldrh	ip, [r3]	@, MEM[(struct I2C_TypeDef *)1073764352B].CR1
 4999              	@ main.c:2314: void MAX44009_i2c(void){
 5000 0036 87B0     		sub	sp, sp, #28	@,,
 5001              	@ main.c:2333: 		I2C2->CR1    |= I2C_CR1_PE;											  // I2C2 Pheripherial enable
 5002 0038 4CF0010C 		orr	ip, ip, #1	@ _8, MEM[(struct I2C_TypeDef *)1073764352B].CR1,
 5003 003c A3F800C0 		strh	ip, [r3]	@ movhi	@ _8, MEM[(struct I2C_TypeDef *)1073764352B].CR1
 5004              	@ main.c:2335: 		AFIO->MAPR   |= AFIO_MAPR_I2C1_REMAP;		// Remap TIM3 CH2->PB5
 5005 0040 DFF8D8C1 		ldr	ip, .L417+48	@ tmp212,
 5006              	@ main.c:2364: 		buf[0]=0x02;
 5007 0044 06AE     		add	r6, sp, #24	@ tmp332,,
 5008              	@ main.c:2335: 		AFIO->MAPR   |= AFIO_MAPR_I2C1_REMAP;		// Remap TIM3 CH2->PB5
 5009 0046 DCF80430 		ldr	r3, [ip, #4]	@ _9, MEM[(struct AFIO_TypeDef *)1073807360B].MAPR
 5010 004a 43F00203 		orr	r3, r3, #2	@ _10, _9,
 5011 004e CCF80430 		str	r3, [ip, #4]	@ _10, MEM[(struct AFIO_TypeDef *)1073807360B].MAPR
 5012              	@ main.c:2336: 		GPIOB->CRH    = (GPIOB->CRH & 0xffffff00) | 0x000000dd;	// PB9=SDA (Alternate Open
 5013 0052 7B68     		ldr	r3, [r7, #4]	@ _11, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 5014 0054 23F0FF03 		bic	r3, r3, #255	@ tmp215, _11,
 5015 0058 43F0DD03 		orr	r3, r3, #221	@ _13, tmp215,
 5016 005c 7B60     		str	r3, [r7, #4]	@ _13, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
ARM GAS  /tmp/ccAYxbuo.s 			page 89


 5017              	@ main.c:2337: 		RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;
 5018 005e D769     		ldr	r7, [r2, #28]	@ _14, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 5019              	@ main.c:2338: 		I2C1->TRISE   = 37;               		// limit slope
 5020 0060 654B     		ldr	r3, .L417+12	@ tmp219,
 5021              	@ main.c:2337: 		RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;
 5022 0062 47F40017 		orr	r7, r7, #2097152	@ _15, _14,
 5023 0066 D761     		str	r7, [r2, #28]	@ _15, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 5024              	@ main.c:2338: 		I2C1->TRISE   = 37;               		// limit slope
 5025 0068 1D84     		strh	r5, [r3, #32]	@ movhi	@ tmp200, MEM[(struct I2C_TypeDef *)1073763328B].TRISE
 5026              	@ main.c:2339: 		I2C1->CR2     = 0;
 5027 006a 9880     		strh	r0, [r3, #4]	@ movhi	@ tmp203, MEM[(struct I2C_TypeDef *)1073763328B].CR2
 5028              	@ main.c:2340: 		I2C1->CCR     = (F_CPU/(4*400000));   // setup speed (400kHz)
 5029 006c 9983     		strh	r1, [r3, #28]	@ movhi	@ tmp206, MEM[(struct I2C_TypeDef *)1073763328B].CCR
 5030              	@ main.c:2341: 		I2C1->CR1    |= I2C_CR1_PE;						// I2C2 Pheripherial enable
 5031 006e 1988     		ldrh	r1, [r3]	@, MEM[(struct I2C_TypeDef *)1073763328B].CR1
 5032              	@ main.c:2366: 		i2c2_write(MAX44009_ADR,buf,2); // init control Power UP
 5033 0070 0222     		movs	r2, #2	@,
 5034              	@ main.c:2341: 		I2C1->CR1    |= I2C_CR1_PE;						// I2C2 Pheripherial enable
 5035 0072 41F00101 		orr	r1, r1, #1	@ _17, MEM[(struct I2C_TypeDef *)1073763328B].CR1,
 5036 0076 1980     		strh	r1, [r3]	@ movhi	@ _17, MEM[(struct I2C_TypeDef *)1073763328B].CR1
 5037              	@ main.c:2364: 		buf[0]=0x02;
 5038 0078 26F80C4D 		strh	r4, [r6, #-12]!	@ movhi	@ tmp234, MEM[(u08[10] *)&buf]
 5039              	@ main.c:2366: 		i2c2_write(MAX44009_ADR,buf,2); // init control Power UP
 5040 007c 3146     		mov	r1, r6	@, tmp332
 5041 007e 9420     		movs	r0, #148	@,
 5042 0080 FFF7FEFF 		bl	i2c2_write	@
 5043              	@ main.c:2384: 		set_mode( AMBIENT_LIGHT, true );
 5044 0084 0121     		movs	r1, #1	@,
 5045 0086 0846     		mov	r0, r1	@,
 5046 0088 FFF7FEFF 		bl	set_mode	@
 5047              	@ main.c:2387: 		i2c1_read(APDS9960_ADR, APDS9960_ID, buf,1 );
 5048 008c 3246     		mov	r2, r6	@, tmp332
 5049 008e 0123     		movs	r3, #1	@,
 5050 0090 9221     		movs	r1, #146	@,
 5051 0092 7220     		movs	r0, #114	@,
 5052 0094 FFF7FEFF 		bl	i2c1_read	@
 5053              	@ main.c:2388: 		UaPutK("\r\n APDS9960_ID=0x");	
 5054 0098 5848     		ldr	r0, .L417+16	@,
 5055 009a FFF7FEFF 		bl	UaPutK	@
 5056              	@ main.c:2389: 		hex2uart(buf[0],2);
 5057 009e 0221     		movs	r1, #2	@,
 5058 00a0 9DF80C00 		ldrb	r0, [sp, #12]	@ zero_extendqisi2	@, buf
 5059 00a4 FFF7FEFF 		bl	hex2uart	@
 5060              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 5061 00a8 554B     		ldr	r3, .L417+20	@ tmp239,
 5062 00aa 564A     		ldr	r2, .L417+24	@ tmp330,
 5063              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 5064 00ac 1846     		mov	r0, r3	@ tmp242, tmp239
 5065              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 5066 00ae 9B68     		ldr	r3, [r3, #8]	@ _106, MEM[(struct SysTick_Type *)3758153744B].VAL
 5067              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 5068 00b0 5549     		ldr	r1, .L417+28	@ tmp244,
 5069              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 5070 00b2 1360     		str	r3, [r2]	@ _106, delay_us
 5071              	.L411:
 5072              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 5073 00b4 1368     		ldr	r3, [r2]	@ delay_us.69_123, delay_us
ARM GAS  /tmp/ccAYxbuo.s 			page 90


 5074 00b6 8468     		ldr	r4, [r0, #8]	@ _124, MEM[(struct SysTick_Type *)3758153744B].VAL
 5075 00b8 1B1B     		subs	r3, r3, r4	@ tmp243, delay_us.69_123, _124
 5076 00ba 8B42     		cmp	r3, r1	@ tmp243, tmp244
 5077 00bc FAD9     		bls	.L411	@,
 5078 00be 534D     		ldr	r5, .L417+32	@ tmp331,
 5079              	@ main.c:2395: 			if(STCLK_MS*100 < (trg0 - SysTick->VAL)){
 5080 00c0 4F4C     		ldr	r4, .L417+20	@ tmp246,
 5081 00c2 534F     		ldr	r7, .L417+36	@ tmp248,
 5082              	@ main.c:2407: 				lux = ((1<<exponent) * mantissa * 45 ) /1000 ;
 5083 00c4 DFF85881 		ldr	r8, .L417+52	@ tmp270,
 5084              	.L412:
 5085              	@ main.c:2395: 			if(STCLK_MS*100 < (trg0 - SysTick->VAL)){
 5086 00c8 2B68     		ldr	r3, [r5]	@ trg0.159_20, trg0
 5087 00ca A268     		ldr	r2, [r4, #8]	@ _21, MEM[(struct SysTick_Type *)3758153744B].VAL
 5088 00cc 9B1A     		subs	r3, r3, r2	@ tmp247, trg0.159_20, _21
 5089 00ce BB42     		cmp	r3, r7	@ tmp247, tmp248
 5090 00d0 FAD9     		bls	.L412	@,
 5091              	@ main.c:2396: 				trg0 = SysTick->VAL;
 5092 00d2 A368     		ldr	r3, [r4, #8]	@ _23, MEM[(struct SysTick_Type *)3758153744B].VAL
 5093              	@ main.c:2398: 				UaPutK("\r\n");	
 5094 00d4 4F48     		ldr	r0, .L417+40	@,
 5095              	@ main.c:2396: 				trg0 = SysTick->VAL;
 5096 00d6 2B60     		str	r3, [r5]	@ _23, trg0
 5097              	@ main.c:2398: 				UaPutK("\r\n");	
 5098 00d8 FFF7FEFF 		bl	UaPutK	@
 5099              	@ main.c:2402: 				i2c2_read(MAX44009_ADR, 0x03, buf,2 );
 5100 00dc 0321     		movs	r1, #3	@,
 5101 00de 3246     		mov	r2, r6	@, tmp332
 5102 00e0 0223     		movs	r3, #2	@,
 5103 00e2 9420     		movs	r0, #148	@,
 5104 00e4 FFF7FEFF 		bl	i2c2_read	@
 5105              	@ main.c:2404: 				exponent = (buf[0] & 0xF0) >> 4;
 5106 00e8 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2	@ _24, buf
 5107              	@ main.c:2405: 				mantissa = ((buf[0] & 0x0F) << 4) | (buf[1] & 0x0F);
 5108 00ec 9DF80D20 		ldrb	r2, [sp, #13]	@ zero_extendqisi2	@ buf, buf
 5109 00f0 1801     		lsls	r0, r3, #4	@ tmp253, _24,
 5110 00f2 02F00F02 		and	r2, r2, #15	@ tmp258, buf,
 5111 00f6 C0B2     		uxtb	r0, r0	@ tmp254, tmp253
 5112              	@ main.c:2404: 				exponent = (buf[0] & 0xF0) >> 4;
 5113 00f8 1B09     		lsrs	r3, r3, #4	@ exponent, _24,
 5114              	@ main.c:2405: 				mantissa = ((buf[0] & 0x0F) << 4) | (buf[1] & 0x0F);
 5115 00fa 1043     		orrs	r0, r0, r2	@, mantissa, tmp254, tmp258
 5116              	@ main.c:2407: 				lux = ((1<<exponent) * mantissa * 45 ) /1000 ;
 5117 00fc 9840     		lsls	r0, r0, r3	@ tmp262, mantissa, exponent
 5118 00fe 00EB4000 		add	r0, r0, r0, lsl #1	@ tmp265, tmp262, tmp262,
 5119 0102 C0EB0010 		rsb	r0, r0, r0, lsl #4	@ tmp267, tmp265, tmp265,
 5120 0106 A8FB0030 		umull	r3, r0, r8, r0	@ tmp336, tmp269, tmp270, tmp267
 5121              	@ main.c:2410: 				sint2uart(lux);
 5122 010a 8009     		lsrs	r0, r0, #6	@, tmp269,
 5123 010c FFF7FEFF 		bl	sint2uart	@
 5124              	@ main.c:2411: 				UaPutK(",");	
 5125 0110 4148     		ldr	r0, .L417+44	@,
 5126 0112 FFF7FEFF 		bl	UaPutK	@
 5127              	@ main.c:2413: 				i2c2_read(TSL2561_ADR, DATA0LOW, buf,2 );
 5128 0116 3246     		mov	r2, r6	@, tmp332
 5129 0118 0223     		movs	r3, #2	@,
 5130 011a 8C21     		movs	r1, #140	@,
ARM GAS  /tmp/ccAYxbuo.s 			page 91


 5131 011c 7220     		movs	r0, #114	@,
 5132 011e FFF7FEFF 		bl	i2c2_read	@
 5133              	@ main.c:2414: 				ch0 = (buf[1]<<8)+buf[0];
 5134 0122 9DF80D20 		ldrb	r2, [sp, #13]	@ zero_extendqisi2	@ buf, buf
 5135 0126 9DF80C90 		ldrb	r9, [sp, #12]	@ zero_extendqisi2	@ buf, buf
 5136              	@ main.c:2415: 				i2c2_read(TSL2561_ADR, DATA1LOW, buf,2 );
 5137 012a 0223     		movs	r3, #2	@,
 5138              	@ main.c:2414: 				ch0 = (buf[1]<<8)+buf[0];
 5139 012c 09EB0229 		add	r9, r9, r2, lsl #8	@ tmp284, buf, buf,
 5140              	@ main.c:2415: 				i2c2_read(TSL2561_ADR, DATA1LOW, buf,2 );
 5141 0130 8E21     		movs	r1, #142	@,
 5142 0132 3246     		mov	r2, r6	@, tmp332
 5143 0134 7220     		movs	r0, #114	@,
 5144 0136 FFF7FEFF 		bl	i2c2_read	@
 5145              	@ main.c:2418: 				lux=CalculateLux(1,2,ch0,ch1,0);
 5146 013a 0021     		movs	r1, #0	@ tmp294,
 5147              	@ main.c:2416: 				ch1	= (buf[1]<<8)+buf[0];
 5148 013c 9DF80D00 		ldrb	r0, [sp, #13]	@ zero_extendqisi2	@ buf, buf
 5149 0140 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2	@ buf, buf
 5150              	@ main.c:2414: 				ch0 = (buf[1]<<8)+buf[0];
 5151 0144 1FFA89F9 		uxth	r9, r9	@ ch0, tmp284
 5152              	@ main.c:2416: 				ch1	= (buf[1]<<8)+buf[0];
 5153 0148 03EB0023 		add	r3, r3, r0, lsl #8	@ tmp292, buf, buf,
 5154              	@ main.c:2418: 				lux=CalculateLux(1,2,ch0,ch1,0);
 5155 014c 4A46     		mov	r2, r9	@, ch0
 5156 014e 9BB2     		uxth	r3, r3	@, tmp292
 5157 0150 0091     		str	r1, [sp]	@ tmp294,
 5158 0152 0120     		movs	r0, #1	@,
 5159 0154 0221     		movs	r1, #2	@,
 5160 0156 FFF7FEFF 		bl	CalculateLux	@
 5161              	@ main.c:2419: 				sint2uart(lux);
 5162 015a FFF7FEFF 		bl	sint2uart	@
 5163              	@ main.c:2421: 				UaPutC(',');
 5164 015e 2C20     		movs	r0, #44	@,
 5165 0160 FFF7FEFF 		bl	UaPutC	@
 5166              	@ main.c:2424: 				memset ( buf, 1, 10);
 5167 0164 4FF0013C 		mov	ip, #16843009	@ tmp298,
 5168              	@ main.c:2425: 				i2c1_read(APDS9960_ADR, 0x94, buf,8 );
 5169 0168 3246     		mov	r2, r6	@, tmp332
 5170 016a 0823     		movs	r3, #8	@,
 5171 016c 9421     		movs	r1, #148	@,
 5172 016e 7220     		movs	r0, #114	@,
 5173              	@ main.c:2424: 				memset ( buf, 1, 10);
 5174 0170 C6E900CC 		strd	ip, ip, [r6]	@ tmp298, tmp298, tmp332
 5175 0174 A6F808C0 		strh	ip, [r6, #8]	@ movhi	@ tmp298, MEM[(void *)&buf]
 5176              	@ main.c:2425: 				i2c1_read(APDS9960_ADR, 0x94, buf,8 );
 5177 0178 FFF7FEFF 		bl	i2c1_read	@
 5178              	@ main.c:2426: 				aC = (buf[1]<<8)+buf[0];
 5179 017c 9DF80DC0 		ldrb	ip, [sp, #13]	@ zero_extendqisi2	@ buf, buf
 5180 0180 9DF80C00 		ldrb	r0, [sp, #12]	@ zero_extendqisi2	@ buf, buf
 5181              	@ main.c:2427: 				aR = (buf[3]<<8)+buf[2];
 5182 0184 9DF80F10 		ldrb	r1, [sp, #15]	@ zero_extendqisi2	@ buf, buf
 5183 0188 9DF80EB0 		ldrb	fp, [sp, #14]	@ zero_extendqisi2	@ buf, buf
 5184              	@ main.c:2428: 				aG = (buf[5]<<8)+buf[4];
 5185 018c 9DF81120 		ldrb	r2, [sp, #17]	@ zero_extendqisi2	@ buf, buf
 5186              	@ main.c:2429: 				aB = (buf[7]<<8)+buf[6];
 5187 0190 9DF81330 		ldrb	r3, [sp, #19]	@ zero_extendqisi2	@ buf, buf
ARM GAS  /tmp/ccAYxbuo.s 			page 92


 5188              	@ main.c:2426: 				aC = (buf[1]<<8)+buf[0];
 5189 0194 00EB0C20 		add	r0, r0, ip, lsl #8	@ tmp328, buf, buf,
 5190              	@ main.c:2428: 				aG = (buf[5]<<8)+buf[4];
 5191 0198 9DF810A0 		ldrb	r10, [sp, #16]	@ zero_extendqisi2	@ buf, buf
 5192              	@ main.c:2429: 				aB = (buf[7]<<8)+buf[6];
 5193 019c 9DF81290 		ldrb	r9, [sp, #18]	@ zero_extendqisi2	@ buf, buf
 5194              	@ main.c:2427: 				aR = (buf[3]<<8)+buf[2];
 5195 01a0 0BEB012B 		add	fp, fp, r1, lsl #8	@ tmp307, buf, buf,
 5196              	@ main.c:2431: 				sint2uart(aC); UaPutC(','); //hex2uart((buf[1]<<8)+buf[0],4);
 5197 01a4 80B2     		uxth	r0, r0	@, tmp328
 5198              	@ main.c:2428: 				aG = (buf[5]<<8)+buf[4];
 5199 01a6 0AEB022A 		add	r10, r10, r2, lsl #8	@ tmp314, buf, buf,
 5200              	@ main.c:2429: 				aB = (buf[7]<<8)+buf[6];
 5201 01aa 09EB0329 		add	r9, r9, r3, lsl #8	@ tmp321, buf, buf,
 5202              	@ main.c:2427: 				aR = (buf[3]<<8)+buf[2];
 5203 01ae 1FFA8BFB 		uxth	fp, fp	@ aR, tmp307
 5204              	@ main.c:2431: 				sint2uart(aC); UaPutC(','); //hex2uart((buf[1]<<8)+buf[0],4);
 5205 01b2 FFF7FEFF 		bl	sint2uart	@
 5206 01b6 2C20     		movs	r0, #44	@,
 5207 01b8 FFF7FEFF 		bl	UaPutC	@
 5208              	@ main.c:2432: 				sint2uart(aR); UaPutC(','); //hex2uart((buf[3]<<8)+buf[2],4);
 5209 01bc 5846     		mov	r0, fp	@, aR
 5210 01be FFF7FEFF 		bl	sint2uart	@
 5211              	@ main.c:2428: 				aG = (buf[5]<<8)+buf[4];
 5212 01c2 1FFA8AFA 		uxth	r10, r10	@ aG, tmp314
 5213              	@ main.c:2432: 				sint2uart(aR); UaPutC(','); //hex2uart((buf[3]<<8)+buf[2],4);
 5214 01c6 2C20     		movs	r0, #44	@,
 5215 01c8 FFF7FEFF 		bl	UaPutC	@
 5216              	@ main.c:2433: 				sint2uart(aG); UaPutC(','); //hex2uart((buf[5]<<8)+buf[4],4);
 5217 01cc 5046     		mov	r0, r10	@, aG
 5218 01ce FFF7FEFF 		bl	sint2uart	@
 5219              	@ main.c:2429: 				aB = (buf[7]<<8)+buf[6];
 5220 01d2 1FFA89F9 		uxth	r9, r9	@ aB, tmp321
 5221              	@ main.c:2433: 				sint2uart(aG); UaPutC(','); //hex2uart((buf[5]<<8)+buf[4],4);
 5222 01d6 2C20     		movs	r0, #44	@,
 5223 01d8 FFF7FEFF 		bl	UaPutC	@
 5224              	@ main.c:2434: 				sint2uart(aB); UaPutC(',');//hex2uart((buf[7]<<8)+buf[6],4);
 5225 01dc 4846     		mov	r0, r9	@, aB
 5226 01de FFF7FEFF 		bl	sint2uart	@
 5227 01e2 2C20     		movs	r0, #44	@,
 5228 01e4 FFF7FEFF 		bl	UaPutC	@
 5229 01e8 6EE7     		b	.L412	@
 5230              	.L418:
 5231 01ea 00BF     		.align	2
 5232              	.L417:
 5233 01ec 000C0140 		.word	1073810432
 5234 01f0 00100240 		.word	1073876992
 5235 01f4 00580040 		.word	1073764352
 5236 01f8 00540040 		.word	1073763328
 5237 01fc 00000000 		.word	.LC67
 5238 0200 10E000E0 		.word	-536813552
 5239 0204 00000000 		.word	delay_us
 5240 0208 3F771B00 		.word	1799999
 5241 020c 00000000 		.word	trg0
 5242 0210 A0BB0D00 		.word	900000
 5243 0214 04000000 		.word	.LC13
 5244 0218 00000000 		.word	.LC66
ARM GAS  /tmp/ccAYxbuo.s 			page 93


 5245 021c 00000140 		.word	1073807360
 5246 0220 D34D6210 		.word	274877907
 5247              		.size	MAX44009_i2c, .-MAX44009_i2c
 5248              		.section	.text.BMP280_i2c,"ax",%progbits
 5249              		.align	1
 5250              		.p2align 2,,3
 5251              		.global	BMP280_i2c
 5252              		.syntax unified
 5253              		.thumb
 5254              		.thumb_func
 5255              		.fpu softvfp
 5256              		.type	BMP280_i2c, %function
 5257              	BMP280_i2c:
 5258              		@ args = 0, pretend = 0, frame = 80
 5259              		@ frame_needed = 0, uses_anonymous_args = 0
 5260 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 5261              	@ main.c:2462: 		I2C2->CCR = (1<<15) | 25;               			// setup speed (800kHz)
 5262 0004 48F2190C 		movw	ip, #32793	@ tmp322,
 5263              	@ main.c:2459: 		I2C2->TRISE = 37;               		// limit slope
 5264 0008 4FF0250E 		mov	lr, #37	@ tmp319,
 5265              	@ main.c:2456: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 5266 000c 0125     		movs	r5, #1	@ tmp312,
 5267              	@ main.c:2458: 		I2C2_CR1_SWRST_bb = 0;
 5268 000e 4FF00008 		mov	r8, #0	@ tmp316,
 5269              	@ main.c:2463: 		I2C2->CR2 = I2C_CR2_FREQ_36MHz;     // config I2C2 module
 5270 0012 2427     		movs	r7, #36	@ tmp325,
 5271              	@ main.c:2454: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000bf00;	// ...009d00 PB10=SCL(Push-pu
 5272 0014 C74A     		ldr	r2, .L428	@ tmp308,
 5273              	@ main.c:2459: 		I2C2->TRISE = 37;               		// limit slope
 5274 0016 C84C     		ldr	r4, .L428+4	@ tmp317,
 5275              	@ main.c:2454: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000bf00;	// ...009d00 PB10=SCL(Push-pu
 5276 0018 5368     		ldr	r3, [r2, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 5277              	@ main.c:2457: 		I2C2_CR1_SWRST_bb = 1;            	// force software reset of I2C peripheral
 5278 001a C848     		ldr	r0, .L428+8	@ tmp313,
 5279              	@ main.c:2456: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 5280 001c C849     		ldr	r1, .L428+12	@ tmp311,
 5281              	@ main.c:2464: 		I2C2_CR1_PE_bb = 1;               	// enable peripheral
 5282 001e C94E     		ldr	r6, .L428+16	@ tmp326,
 5283              	@ main.c:2454: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000bf00;	// ...009d00 PB10=SCL(Push-pu
 5284 0020 23F47F43 		bic	r3, r3, #65280	@ tmp309, _1,
 5285              	@ main.c:2447: void BMP280_i2c(void){
 5286 0024 95B0     		sub	sp, sp, #84	@,,
 5287              	@ main.c:2454: 		GPIOB->CRH = (GPIOB->CRH & 0xffff00ff) | 0x0000bf00;	// ...009d00 PB10=SCL(Push-pu
 5288 0026 43F43F43 		orr	r3, r3, #48896	@ _3, tmp309,
 5289 002a 5360     		str	r3, [r2, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 5290              	@ main.c:2456: 		RCC_APB1ENR_I2C2EN_bb = 1;         	// enable clock for I2C2 module
 5291 002c 0D60     		str	r5, [r1]	@ tmp312, MEM[(volatile long unsigned int *)1111622616B]
 5292              	@ main.c:2466: 		i2c2_read(BMP280_ADR,  0xD0, buf,1 );
 5293 002e 2B46     		mov	r3, r5	@, tmp312
 5294              	@ main.c:2457: 		I2C2_CR1_SWRST_bb = 1;            	// force software reset of I2C peripheral
 5295 0030 0560     		str	r5, [r0]	@ tmp312, MEM[(volatile long unsigned int *)1108017212B]
 5296              	@ main.c:2466: 		i2c2_read(BMP280_ADR,  0xD0, buf,1 );
 5297 0032 0EAA     		add	r2, sp, #56	@ tmp503,,
 5298              	@ main.c:2458: 		I2C2_CR1_SWRST_bb = 0;
 5299 0034 C0F80080 		str	r8, [r0]	@ tmp316, MEM[(volatile long unsigned int *)1108017212B]
 5300              	@ main.c:2466: 		i2c2_read(BMP280_ADR,  0xD0, buf,1 );
 5301 0038 D021     		movs	r1, #208	@,
ARM GAS  /tmp/ccAYxbuo.s 			page 94


 5302              	@ main.c:2459: 		I2C2->TRISE = 37;               		// limit slope
 5303 003a A4F820E0 		strh	lr, [r4, #32]	@ movhi	@ tmp319, MEM[(struct I2C_TypeDef *)1073764352B].TRISE
 5304              	@ main.c:2466: 		i2c2_read(BMP280_ADR,  0xD0, buf,1 );
 5305 003e EC20     		movs	r0, #236	@,
 5306              	@ main.c:2462: 		I2C2->CCR = (1<<15) | 25;               			// setup speed (800kHz)
 5307 0040 A4F81CC0 		strh	ip, [r4, #28]	@ movhi	@ tmp322, MEM[(struct I2C_TypeDef *)1073764352B].CCR
 5308              	@ main.c:2463: 		I2C2->CR2 = I2C_CR2_FREQ_36MHz;     // config I2C2 module
 5309 0044 A780     		strh	r7, [r4, #4]	@ movhi	@ tmp325, MEM[(struct I2C_TypeDef *)1073764352B].CR2
 5310              	@ main.c:2464: 		I2C2_CR1_PE_bb = 1;               	// enable peripheral
 5311 0046 3560     		str	r5, [r6]	@ tmp312, MEM[(volatile long unsigned int *)1108017152B]
 5312              	@ main.c:2466: 		i2c2_read(BMP280_ADR,  0xD0, buf,1 );
 5313 0048 FFF7FEFF 		bl	i2c2_read	@
 5314              	@ main.c:2467: 		UaPutK("\r\n i2c_BMP280 = 0x");	
 5315 004c BE48     		ldr	r0, .L428+20	@,
 5316 004e FFF7FEFF 		bl	UaPutK	@
 5317              	@ main.c:2468: 		hex2uart(buf[0],2);
 5318 0052 0221     		movs	r1, #2	@,
 5319 0054 9DF83800 		ldrb	r0, [sp, #56]	@ zero_extendqisi2	@, buf
 5320 0058 FFF7FEFF 		bl	hex2uart	@
 5321              	@ main.c:2471: 		buf[0]=0xf4;
 5322 005c 4BF2F473 		movw	r3, #47092	@ tmp332,
 5323              	@ main.c:2473: 		i2c2_write(BMP280_ADR,buf,2); // set mode
 5324 0060 0EA9     		add	r1, sp, #56	@ tmp504,,
 5325 0062 0222     		movs	r2, #2	@,
 5326 0064 EC20     		movs	r0, #236	@,
 5327              	@ main.c:2471: 		buf[0]=0xf4;
 5328 0066 ADF83830 		strh	r3, [sp, #56]	@ movhi	@ tmp332, MEM[(u08[24] *)&buf]
 5329              	@ main.c:2473: 		i2c2_write(BMP280_ADR,buf,2); // set mode
 5330 006a FFF7FEFF 		bl	i2c2_write	@
 5331              	@ main.c:2475: 		buf[0]=0xf5;
 5332 006e 41F2F503 		movw	r3, #4341	@ tmp335,
 5333              	@ main.c:2477: 		i2c2_write(BMP280_ADR,buf,2); // set mode
 5334 0072 0EA9     		add	r1, sp, #56	@ tmp505,,
 5335 0074 0222     		movs	r2, #2	@,
 5336 0076 EC20     		movs	r0, #236	@,
 5337              	@ main.c:2475: 		buf[0]=0xf5;
 5338 0078 ADF83830 		strh	r3, [sp, #56]	@ movhi	@ tmp335, MEM[(u08[24] *)&buf]
 5339              	@ main.c:2477: 		i2c2_write(BMP280_ADR,buf,2); // set mode
 5340 007c FFF7FEFF 		bl	i2c2_write	@
 5341              	@ main.c:2479: 		i2c2_read(BMP280_ADR,  0x88, buf,6+16 );
 5342 0080 0EAA     		add	r2, sp, #56	@ tmp506,,
 5343 0082 1623     		movs	r3, #22	@,
 5344 0084 8821     		movs	r1, #136	@,
 5345 0086 EC20     		movs	r0, #236	@,
 5346 0088 FFF7FEFF 		bl	i2c2_read	@
 5347              	@ main.c:2482: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5348 008c 9DF83D20 		ldrb	r2, [sp, #61]	@ zero_extendqisi2	@ buf, buf
 5349              	@ main.c:2485: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5350 0090 9DF84110 		ldrb	r1, [sp, #65]	@ zero_extendqisi2	@ buf, buf
 5351              	@ main.c:2482: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5352 0094 0692     		str	r2, [sp, #24]	@ buf, %sfp
 5353              	@ main.c:2492: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5354 0096 9DF84F20 		ldrb	r2, [sp, #79]	@ zero_extendqisi2	@ buf, buf
 5355              	@ main.c:2482: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5356 009a 9DF83CA0 		ldrb	r10, [sp, #60]	@ zero_extendqisi2	@ buf, buf
 5357              	@ main.c:2492: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5358 009e 0592     		str	r2, [sp, #20]	@ buf, %sfp
ARM GAS  /tmp/ccAYxbuo.s 			page 95


 5359              	@ main.c:2482: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5360 00a0 069A     		ldr	r2, [sp, #24]	@ buf, %sfp
 5361              	@ main.c:2485: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5362 00a2 0091     		str	r1, [sp]	@ buf, %sfp
 5363              	@ main.c:2486: 		dig_P3 = (s16)((buf[11]<<8) | buf[10]);
 5364 00a4 9DF84300 		ldrb	r0, [sp, #67]	@ zero_extendqisi2	@ buf, buf
 5365              	@ main.c:2482: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5366 00a8 4AEA022A 		orr	r10, r10, r2, lsl #8	@ tmp349, buf, buf,
 5367              	@ main.c:2485: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5368 00ac 9DF84090 		ldrb	r9, [sp, #64]	@ zero_extendqisi2	@ buf, buf
 5369 00b0 009A     		ldr	r2, [sp]	@ buf, %sfp
 5370              	@ main.c:2486: 		dig_P3 = (s16)((buf[11]<<8) | buf[10]);
 5371 00b2 0190     		str	r0, [sp, #4]	@ buf, %sfp
 5372              	@ main.c:2488: 		dig_P5 = (s16)((buf[15]<<8) | buf[14]);
 5373 00b4 9DF84760 		ldrb	r6, [sp, #71]	@ zero_extendqisi2	@ buf, buf
 5374              	@ main.c:2485: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5375 00b8 49EA0229 		orr	r9, r9, r2, lsl #8	@ tmp355, buf, buf,
 5376              	@ main.c:2486: 		dig_P3 = (s16)((buf[11]<<8) | buf[10]);
 5377 00bc 9DF84280 		ldrb	r8, [sp, #66]	@ zero_extendqisi2	@ buf, buf
 5378 00c0 019A     		ldr	r2, [sp, #4]	@ buf, %sfp
 5379              	@ main.c:2488: 		dig_P5 = (s16)((buf[15]<<8) | buf[14]);
 5380 00c2 0296     		str	r6, [sp, #8]	@ buf, %sfp
 5381              	@ main.c:2489: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5382 00c4 9DF84970 		ldrb	r7, [sp, #73]	@ zero_extendqisi2	@ buf, buf
 5383              	@ main.c:2490: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5384 00c8 9DF84B10 		ldrb	r1, [sp, #75]	@ zero_extendqisi2	@ buf, buf
 5385              	@ main.c:2481: 		dig_T2 = (s16)((buf[3]<<8) | buf[2]);
 5386 00cc 9DF83B30 		ldrb	r3, [sp, #59]	@ zero_extendqisi2	@ buf, buf
 5387              	@ main.c:2486: 		dig_P3 = (s16)((buf[11]<<8) | buf[10]);
 5388 00d0 48EA0228 		orr	r8, r8, r2, lsl #8	@ tmp361, buf, buf,
 5389              	@ main.c:2481: 		dig_T2 = (s16)((buf[3]<<8) | buf[2]);
 5390 00d4 9DF83AB0 		ldrb	fp, [sp, #58]	@ zero_extendqisi2	@ buf, buf
 5391              	@ main.c:2488: 		dig_P5 = (s16)((buf[15]<<8) | buf[14]);
 5392 00d8 029A     		ldr	r2, [sp, #8]	@ buf, %sfp
 5393 00da 9DF846E0 		ldrb	lr, [sp, #70]	@ zero_extendqisi2	@ buf, buf
 5394              	@ main.c:2489: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5395 00de 0397     		str	r7, [sp, #12]	@ buf, %sfp
 5396              	@ main.c:2491: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5397 00e0 9DF84C60 		ldrb	r6, [sp, #76]	@ zero_extendqisi2	@ buf, buf
 5398              	@ main.c:2490: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5399 00e4 0491     		str	r1, [sp, #16]	@ buf, %sfp
 5400              	@ main.c:2491: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5401 00e6 9DF84D10 		ldrb	r1, [sp, #77]	@ zero_extendqisi2	@ buf, buf
 5402              	@ main.c:2488: 		dig_P5 = (s16)((buf[15]<<8) | buf[14]);
 5403 00ea 4EEA022E 		orr	lr, lr, r2, lsl #8	@ tmp373, buf, buf,
 5404              	@ main.c:2481: 		dig_T2 = (s16)((buf[3]<<8) | buf[2]);
 5405 00ee 4BEA032B 		orr	fp, fp, r3, lsl #8	@ tmp343, buf, buf,
 5406              	@ main.c:2489: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5407 00f2 9DF848C0 		ldrb	ip, [sp, #72]	@ zero_extendqisi2	@ buf, buf
 5408 00f6 039A     		ldr	r2, [sp, #12]	@ buf, %sfp
 5409              	@ main.c:2491: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5410 00f8 46EA0121 		orr	r1, r6, r1, lsl #8	@ tmp391, buf, buf,
 5411              	@ main.c:2481: 		dig_T2 = (s16)((buf[3]<<8) | buf[2]);
 5412 00fc 0FFA8BF6 		sxth	r6, fp	@ dig_T2, tmp343
 5413              	@ main.c:2489: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5414 0100 4CEA022C 		orr	ip, ip, r2, lsl #8	@ tmp379, buf, buf,
 5415              	@ main.c:2487: 		dig_P4 = (s16)((buf[13]<<8) | buf[12]);
ARM GAS  /tmp/ccAYxbuo.s 			page 96


 5416 0104 9DF84500 		ldrb	r0, [sp, #69]	@ zero_extendqisi2	@ buf, buf
 5417 0108 9DF84440 		ldrb	r4, [sp, #68]	@ zero_extendqisi2	@ buf, buf
 5418              	@ main.c:2490: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5419 010c 9DF84A70 		ldrb	r7, [sp, #74]	@ zero_extendqisi2	@ buf, buf
 5420              	@ main.c:2492: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5421 0110 9DF84E30 		ldrb	r3, [sp, #78]	@ zero_extendqisi2	@ buf, buf
 5422              	@ main.c:2490: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5423 0114 049A     		ldr	r2, [sp, #16]	@ buf, %sfp
 5424              	@ main.c:2481: 		dig_T2 = (s16)((buf[3]<<8) | buf[2]);
 5425 0116 0296     		str	r6, [sp, #8]	@ dig_T2, %sfp
 5426              	@ main.c:2482: 		dig_T3 = (s16)((buf[5]<<8) | buf[4]);
 5427 0118 0FFA8AF6 		sxth	r6, r10	@ dig_T3, tmp349
 5428 011c 0396     		str	r6, [sp, #12]	@ dig_T3, %sfp
 5429              	@ main.c:2485: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5430 011e 0FFA89F6 		sxth	r6, r9	@ dig_P2, tmp355
 5431              	@ main.c:2490: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5432 0122 47EA0227 		orr	r7, r7, r2, lsl #8	@ tmp385, buf, buf,
 5433              	@ main.c:2492: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5434 0126 059A     		ldr	r2, [sp, #20]	@ buf, %sfp
 5435              	@ main.c:2485: 		dig_P2 = (s16)((buf[9]<<8 ) | buf[8]);
 5436 0128 0596     		str	r6, [sp, #20]	@ dig_P2, %sfp
 5437              	@ main.c:2486: 		dig_P3 = (s16)((buf[11]<<8) | buf[10]);
 5438 012a 0FFA88F6 		sxth	r6, r8	@ dig_P3, tmp361
 5439 012e 0696     		str	r6, [sp, #24]	@ dig_P3, %sfp
 5440              	@ main.c:2488: 		dig_P5 = (s16)((buf[15]<<8) | buf[14]);
 5441 0130 0FFA8EF6 		sxth	r6, lr	@ dig_P5, tmp373
 5442 0134 0796     		str	r6, [sp, #28]	@ dig_P5, %sfp
 5443              	@ main.c:2489: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5444 0136 0FFA8CF6 		sxth	r6, ip	@ dig_P6, tmp379
 5445              	@ main.c:2491: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5446 013a 0091     		str	r1, [sp]	@ tmp391, %sfp
 5447              	@ main.c:2489: 		dig_P6 = (s16)((buf[17]<<8) | buf[16]);
 5448 013c 0896     		str	r6, [sp, #32]	@ dig_P6, %sfp
 5449              	@ main.c:2490: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5450 013e 3EB2     		sxth	r6, r7	@ dig_P7, tmp385
 5451              	@ main.c:2492: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5452 0140 43EA0223 		orr	r3, r3, r2, lsl #8	@ tmp397, buf, buf,
 5453              	@ main.c:2490: 		dig_P7 = (s16)((buf[19]<<8) | buf[18]);
 5454 0144 0996     		str	r6, [sp, #36]	@ dig_P7, %sfp
 5455              	@ main.c:2491: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5456 0146 BDF90060 		ldrsh	r6, [sp]	@ dig_P8, %sfp
 5457              	@ main.c:2492: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5458 014a 0193     		str	r3, [sp, #4]	@ tmp397, %sfp
 5459              	@ main.c:2491: 		dig_P8 = (s16)((buf[21]<<8) | buf[20]);
 5460 014c 0A96     		str	r6, [sp, #40]	@ dig_P8, %sfp
 5461              	@ main.c:2492: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5462 014e BDF90460 		ldrsh	r6, [sp, #4]	@ dig_P9, %sfp
 5463              	@ main.c:2494: 		i2c2_read(BMP280_ADR,  0xf4, buf,1 ); hex2uart(buf[0],2);
 5464 0152 2B46     		mov	r3, r5	@, tmp312
 5465              	@ main.c:2492: 		dig_P9 = (s16)((buf[23]<<8) | buf[22]);
 5466 0154 0B96     		str	r6, [sp, #44]	@ dig_P9, %sfp
 5467              	@ main.c:2484: 		dig_P1 = (u16)(((u16)(buf[7]<<8)) | buf[6]);
 5468 0156 BDF83E60 		ldrh	r6, [sp, #62]	@ dig_P1, MEM[(u08[24] *)&buf + 6B]
 5469              	@ main.c:2494: 		i2c2_read(BMP280_ADR,  0xf4, buf,1 ); hex2uart(buf[0],2);
 5470 015a 0EAA     		add	r2, sp, #56	@ tmp533,,
 5471              	@ main.c:2487: 		dig_P4 = (s16)((buf[13]<<8) | buf[12]);
 5472 015c 44EA0024 		orr	r4, r4, r0, lsl #8	@ tmp367, buf, buf,
ARM GAS  /tmp/ccAYxbuo.s 			page 97


 5473              	@ main.c:2494: 		i2c2_read(BMP280_ADR,  0xf4, buf,1 ); hex2uart(buf[0],2);
 5474 0160 F421     		movs	r1, #244	@,
 5475 0162 EC20     		movs	r0, #236	@,
 5476              	@ main.c:2480: 		dig_T1 = (u16)(((u16)(buf[1]<<8)) | buf[0]);
 5477 0164 BDF838A0 		ldrh	r10, [sp, #56]	@ dig_T1, MEM[(u08[24] *)&buf]
 5478              	@ main.c:2484: 		dig_P1 = (u16)(((u16)(buf[7]<<8)) | buf[6]);
 5479 0168 0496     		str	r6, [sp, #16]	@ dig_P1, %sfp
 5480              	@ main.c:2494: 		i2c2_read(BMP280_ADR,  0xf4, buf,1 ); hex2uart(buf[0],2);
 5481 016a FFF7FEFF 		bl	i2c2_read	@
 5482 016e 0221     		movs	r1, #2	@,
 5483 0170 9DF83800 		ldrb	r0, [sp, #56]	@ zero_extendqisi2	@, buf
 5484 0174 FFF7FEFF 		bl	hex2uart	@
 5485              	@ main.c:2495: 		i2c2_read(BMP280_ADR,  0xf5, buf,1 ); hex2uart(buf[0],2);
 5486 0178 2B46     		mov	r3, r5	@, tmp312
 5487 017a 0EAA     		add	r2, sp, #56	@ tmp554,,
 5488 017c F521     		movs	r1, #245	@,
 5489 017e EC20     		movs	r0, #236	@,
 5490 0180 FFF7FEFF 		bl	i2c2_read	@
 5491              	@ main.c:2487: 		dig_P4 = (s16)((buf[13]<<8) | buf[12]);
 5492 0184 24B2     		sxth	r4, r4	@ dig_P4, tmp367
 5493              	@ main.c:2495: 		i2c2_read(BMP280_ADR,  0xf5, buf,1 ); hex2uart(buf[0],2);
 5494 0186 0221     		movs	r1, #2	@,
 5495 0188 9DF83800 		ldrb	r0, [sp, #56]	@ zero_extendqisi2	@, buf
 5496 018c FFF7FEFF 		bl	hex2uart	@
 5497              	@ main.c:2547: 				var2 = (var2>>2)+(((s32)dig_P4)<<16); 
 5498 0190 2304     		lsls	r3, r4, #16	@ _139, dig_P4,
 5499 0192 0193     		str	r3, [sp, #4]	@ _139, %sfp
 5500 0194 DFF8DC81 		ldr	r8, .L428+64	@ tmp494,
 5501              	@ main.c:2521: 				var1 = ((((adc_T>>3)  - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5502 0198 0AFA05F3 		lsl	r3, r10, r5	@ _99, dig_T1,
 5503 019c 6B4F     		ldr	r7, .L428+24	@ tmp496,
 5504              	@ main.c:2506: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL)){
 5505 019e DFF8D891 		ldr	r9, .L428+68	@ tmp405,
 5506              	@ main.c:2573: 			if( STCLK_MS*1000 < (trg1 - SysTick->VAL)){
 5507 01a2 DFF8D8B1 		ldr	fp, .L428+72	@ tmp498,
 5508              	@ main.c:2506: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL)){
 5509 01a6 6A4E     		ldr	r6, .L428+28	@ tmp403,
 5510              	@ main.c:2521: 				var1 = ((((adc_T>>3)  - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5511 01a8 0093     		str	r3, [sp]	@ _99, %sfp
 5512              	.L424:
 5513              	@ main.c:2506: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL)){
 5514 01aa D8F80030 		ldr	r3, [r8]	@ trg0.162_80, trg0
 5515 01ae B268     		ldr	r2, [r6, #8]	@ _81, MEM[(struct SysTick_Type *)3758153744B].VAL
 5516 01b0 9B1A     		subs	r3, r3, r2	@ tmp404, trg0.162_80, _81
 5517 01b2 4B45     		cmp	r3, r9	@ tmp404, tmp405
 5518 01b4 40F2B080 		bls	.L420	@,
 5519              	@ main.c:2507: 				trg0 = SysTick->VAL;
 5520 01b8 B368     		ldr	r3, [r6, #8]	@ _83, MEM[(struct SysTick_Type *)3758153744B].VAL
 5521              	@ main.c:2509: 				UaPutK("\r\n BMP280 ");	
 5522 01ba 6648     		ldr	r0, .L428+32	@,
 5523              	@ main.c:2507: 				trg0 = SysTick->VAL;
 5524 01bc C8F80030 		str	r3, [r8]	@ _83, trg0
 5525              	@ main.c:2509: 				UaPutK("\r\n BMP280 ");	
 5526 01c0 FFF7FEFF 		bl	UaPutK	@
 5527              	@ main.c:2516: 				i2c2_read(BMP280_ADR,  0xFA, buf,3 );
 5528 01c4 0323     		movs	r3, #3	@,
 5529 01c6 0EAA     		add	r2, sp, #56	@ tmp558,,
ARM GAS  /tmp/ccAYxbuo.s 			page 98


 5530 01c8 FA21     		movs	r1, #250	@,
 5531 01ca EC20     		movs	r0, #236	@,
 5532 01cc FFF7FEFF 		bl	i2c2_read	@
 5533              	@ main.c:2520: 				adc_T = ( (u32)((u16)((buf[0]) << 8) | buf[1] ) << 4) | ( (buf[2]) >> 4);
 5534 01d0 BDF83830 		ldrh	r3, [sp, #56]	@, MEM[(u08[24] *)&buf]
 5535 01d4 9DF83A20 		ldrb	r2, [sp, #58]	@ zero_extendqisi2	@ buf, buf
 5536 01d8 5BBA     		rev16	r3, r3	@ tmp412, MEM[(u08[24] *)&buf]
 5537 01da 9BB2     		uxth	r3, r3	@ tmp414, tmp412
 5538 01dc 1209     		lsrs	r2, r2, #4	@ tmp418, buf,
 5539 01de 42EA0312 		orr	r2, r2, r3, lsl #4	@ adc_T, tmp418, tmp414,
 5540              	@ main.c:2522:         var2 = (((((adc_T>>4) - ((s32)dig_T1)) * ((adc_T>>4) - ((s32)dig_T1))) >> 12
 5541 01e2 CAEB1213 		rsb	r3, r10, r2, lsr #4	@ _105, dig_T1, adc_T,
 5542 01e6 03FB03F3 		mul	r3, r3, r3	@ tmp424, _105, _105
 5543              	@ main.c:2523: 				* ((s32)dig_T3))>>14;
 5544 01ea 0398     		ldr	r0, [sp, #12]	@ dig_T3, %sfp
 5545              	@ main.c:2522:         var2 = (((((adc_T>>4) - ((s32)dig_T1)) * ((adc_T>>4) - ((s32)dig_T1))) >> 12
 5546 01ec 1B0B     		lsrs	r3, r3, #12	@ tmp425, tmp424,
 5547              	@ main.c:2523: 				* ((s32)dig_T3))>>14;
 5548 01ee 00FB03F3 		mul	r3, r0, r3	@ tmp426, dig_T3, tmp425
 5549              	@ main.c:2521: 				var1 = ((((adc_T>>3)  - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5550 01f2 0098     		ldr	r0, [sp]	@ _99, %sfp
 5551              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5552 01f4 B168     		ldr	r1, [r6, #8]	@ _259, MEM[(struct SysTick_Type *)3758153744B].VAL
 5553              	@ main.c:2521: 				var1 = ((((adc_T>>3)  - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5554 01f6 C0EBD202 		rsb	r2, r0, r2, lsr #3	@ tmp421, _99, adc_T,
 5555 01fa 0298     		ldr	r0, [sp, #8]	@ dig_T2, %sfp
 5556              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5557 01fc 3960     		str	r1, [r7]	@ _259, Timt
 5558              	@ main.c:2521: 				var1 = ((((adc_T>>3)  - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5559 01fe 00FB02F2 		mul	r2, r0, r2	@ tmp422, dig_T2, tmp421
 5560              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5561 0202 3D68     		ldr	r5, [r7]	@ Timt.81_256, Timt
 5562 0204 B168     		ldr	r1, [r6, #8]	@ _257, MEM[(struct SysTick_Type *)3758153744B].VAL
 5563              	@ main.c:2522:         var2 = (((((adc_T>>4) - ((s32)dig_T1)) * ((adc_T>>4) - ((s32)dig_T1))) >> 12
 5564 0206 9B0B     		lsrs	r3, r3, #14	@ var2, tmp426,
 5565              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5566 0208 6D1A     		subs	r5, r5, r1	@ _258, Timt.81_256, _257
 5567              	@ main.c:2532: 				UaPutS("tt="); sint2uart(tim);
 5568 020a 5348     		ldr	r0, .L428+36	@,
 5569              	@ main.c:2525:         t_fine = var1 + var2;
 5570 020c 03EBD224 		add	r4, r3, r2, lsr #11	@ t_fine, var2, tmp422,
 5571              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5572 0210 0D95     		str	r5, [sp, #52]	@ _258, MEM[(volatile u32 *)&tim]
 5573              	@ main.c:2532: 				UaPutS("tt="); sint2uart(tim);
 5574 0212 FFF7FEFF 		bl	UaPutS	@
 5575 0216 2846     		mov	r0, r5	@, _258
 5576 0218 FFF7FEFF 		bl	sint2uart	@
 5577              	@ main.c:2535: 				UaPutK(" T=");	
 5578 021c 4F48     		ldr	r0, .L428+40	@,
 5579 021e FFF7FEFF 		bl	UaPutK	@
 5580              	@ main.c:2528: 				T     = (t_fine * 50 + 1280) >> 8; // resolution 0.001 C
 5581 0222 3220     		movs	r0, #50	@ tmp433,
 5582 0224 00FB04F0 		mul	r0, r0, r4	@ tmp432, tmp433, t_fine
 5583 0228 00F5A060 		add	r0, r0, #1280	@ tmp434, tmp432,
 5584              	@ main.c:2536: 				num2uart(T,5,3);
 5585 022c 000A     		lsrs	r0, r0, #8	@, tmp434,
 5586 022e 0322     		movs	r2, #3	@,
ARM GAS  /tmp/ccAYxbuo.s 			page 99


 5587 0230 0521     		movs	r1, #5	@,
 5588 0232 FFF7FEFF 		bl	num2uart	@
 5589              	@ main.c:2540: 				i2c2_read(BMP280_ADR,  0xF7, buf,3 );				
 5590 0236 0323     		movs	r3, #3	@,
 5591 0238 0EAA     		add	r2, sp, #56	@ tmp563,,
 5592 023a F721     		movs	r1, #247	@,
 5593 023c EC20     		movs	r0, #236	@,
 5594 023e FFF7FEFF 		bl	i2c2_read	@
 5595              	@ main.c:2544: 				var1 = (((s32)t_fine)>>1) - 64000UL; 
 5596 0242 6210     		asrs	r2, r4, #1	@ tmp446, t_fine,
 5597 0244 A2F57A42 		sub	r2, r2, #64000	@ var1, tmp446,
 5598              	@ main.c:2545: 				var2 = (((var1>>2) * (var1>>2)) >> 11 ) * ((s32)dig_P6); 
 5599 0248 9308     		lsrs	r3, r2, #2	@ _129, var1,
 5600 024a 03FB03F3 		mul	r3, r3, r3	@ _130, _129, _129
 5601              	@ main.c:2548: 				var1 = (((dig_P3 * (((var1>>2) * (var1>>2)) >> 13 )) >> 3) + ((((s32)dig_P2) * v
 5602 024e 0599     		ldr	r1, [sp, #20]	@ dig_P2, %sfp
 5603 0250 069C     		ldr	r4, [sp, #24]	@ dig_P3, %sfp
 5604 0252 01FB02F0 		mul	r0, r1, r2	@ tmp454, dig_P2, var1
 5605 0256 590B     		lsrs	r1, r3, #13	@ tmp451, _130,
 5606 0258 04FB01F1 		mul	r1, r4, r1	@ tmp452, dig_P3, tmp451
 5607              	@ main.c:2546: 				var2 = var2 + ((var1*((s32)dig_P5))<<1); 
 5608 025c 079C     		ldr	r4, [sp, #28]	@ dig_P5, %sfp
 5609              	@ main.c:2548: 				var1 = (((dig_P3 * (((var1>>2) * (var1>>2)) >> 13 )) >> 3) + ((((s32)dig_P2) * v
 5610 025e 4008     		lsrs	r0, r0, #1	@ tmp455, tmp454,
 5611              	@ main.c:2546: 				var2 = var2 + ((var1*((s32)dig_P5))<<1); 
 5612 0260 04FB02F2 		mul	r2, r4, r2	@ tmp448, dig_P5, var1
 5613              	@ main.c:2548: 				var1 = (((dig_P3 * (((var1>>2) * (var1>>2)) >> 13 )) >> 3) + ((((s32)dig_P2) * v
 5614 0264 00EBD100 		add	r0, r0, r1, lsr #3	@ _147, tmp455, tmp452,
 5615 0268 800C     		lsrs	r0, r0, #18	@ var1, _147,
 5616              	@ main.c:2549: 				var1 =((((32768+var1))*((s32)dig_P1))>>15); 
 5617 026a 0499     		ldr	r1, [sp, #16]	@ dig_P1, %sfp
 5618 026c 00F50040 		add	r0, r0, #32768	@ tmp457, var1,
 5619 0270 01FB00F0 		mul	r0, r1, r0	@ _150, dig_P1, tmp457
 5620              	@ main.c:2546: 				var2 = var2 + ((var1*((s32)dig_P5))<<1); 
 5621 0274 0899     		ldr	r1, [sp, #32]	@ dig_P6, %sfp
 5622 0276 5200     		lsls	r2, r2, #1	@ tmp449, tmp448,
 5623              	@ main.c:2545: 				var2 = (((var1>>2) * (var1>>2)) >> 11 ) * ((s32)dig_P6); 
 5624 0278 DB0A     		lsrs	r3, r3, #11	@ tmp447, _130,
 5625              	@ main.c:2546: 				var2 = var2 + ((var1*((s32)dig_P5))<<1); 
 5626 027a 01FB0323 		mla	r3, r1, r3, r2	@ var2, dig_P6, tmp447, tmp449
 5627              	@ main.c:2541: 				adc_P   = ((u32)((u16)(buf[0] << 8) | buf[1])<<4) | (buf[2]>>4);
 5628 027e BDF83810 		ldrh	r1, [sp, #56]	@, MEM[(u08[24] *)&buf]
 5629 0282 9DF83A20 		ldrb	r2, [sp, #58]	@ zero_extendqisi2	@ buf, buf
 5630 0286 49BA     		rev16	r1, r1	@ tmp437, MEM[(u08[24] *)&buf]
 5631 0288 89B2     		uxth	r1, r1	@ tmp439, tmp437
 5632              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5633 028a B468     		ldr	r4, [r6, #8]	@ _255, MEM[(struct SysTick_Type *)3758153744B].VAL
 5634              	@ main.c:2541: 				adc_P   = ((u32)((u16)(buf[0] << 8) | buf[1])<<4) | (buf[2]>>4);
 5635 028c 1209     		lsrs	r2, r2, #4	@ tmp443, buf,
 5636              	@ main.c:2547: 				var2 = (var2>>2)+(((s32)dig_P4)<<16); 
 5637 028e 019D     		ldr	r5, [sp, #4]	@ _139, %sfp
 5638              	@ main.c:2541: 				adc_P   = ((u32)((u16)(buf[0] << 8) | buf[1])<<4) | (buf[2]>>4);
 5639 0290 42EA0112 		orr	r2, r2, r1, lsl #4	@ adc_P, tmp443, tmp439,
 5640              	@ main.c:2550: 				if (var1 == 0) 
 5641 0294 C10B     		lsrs	r1, r0, #15	@ var1, _150,
 5642              	@ main.c:2547: 				var2 = (var2>>2)+(((s32)dig_P4)<<16); 
 5643 0296 05EB9303 		add	r3, r5, r3, lsr #2	@ var2, _139, var2,
ARM GAS  /tmp/ccAYxbuo.s 			page 100


 5644              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 5645 029a 3C60     		str	r4, [r7]	@ _255, Timt
 5646              	@ main.c:2550: 				if (var1 == 0) 
 5647 029c 46D0     		beq	.L419	@,
 5648              	@ main.c:2555: 					p = (((u32)(((s32)1048576)-adc_P)-(var2>>12)))*3125; 
 5649 029e 3048     		ldr	r0, .L428+44	@ tmp461,
 5650 02a0 02EB1333 		add	r3, r2, r3, lsr #12	@ tmp459, adc_P, var2,
 5651 02a4 00FB03F0 		mul	r0, r0, r3	@ tmp460, tmp461, tmp459
 5652 02a8 00F14340 		add	r0, r0, #-1023410176	@ p, tmp460,
 5653 02ac 00F5A000 		add	r0, r0, #5242880	@ p, p,
 5654              	@ main.c:2556: 					if (p < 0x80000000) { p = (p << 1) / ((u32)var1); 	}  
 5655 02b0 0028     		cmp	r0, #0	@ p,
 5656              	@ main.c:2557: 					else  							{ p = (p 			 /  (u32)var1)*2; } 
 5657 02b2 B3BF     		iteet	lt
 5658 02b4 B0FBF1F0 		udivlt	r0, r0, r1	@ _157, p, var1
 5659              	@ main.c:2556: 					if (p < 0x80000000) { p = (p << 1) / ((u32)var1); 	}  
 5660 02b8 4000     		lslge	r0, r0, #1	@ _156, p,
 5661 02ba B0FBF1F0 		udivge	r0, r0, r1	@ p, _156, var1
 5662              	@ main.c:2557: 					else  							{ p = (p 			 /  (u32)var1)*2; } 
 5663 02be 4000     		lsllt	r0, r0, #1	@ p, _157,
 5664              	@ main.c:2558: 					var1 = (((s32)dig_P9) * ((s32)(((p>>3) * (p>>3))>>13)))>>12; 
 5665 02c0 C308     		lsrs	r3, r0, #3	@ _159, p,
 5666 02c2 03FB03F3 		mul	r3, r3, r3	@ tmp463, _159, _159
 5667              	@ main.c:2559: 					var2 = (((s32)(p>>2)) * ((s32)dig_P8))>>13; 
 5668 02c6 0A99     		ldr	r1, [sp, #40]	@ dig_P8, %sfp
 5669 02c8 8208     		lsrs	r2, r0, #2	@ tmp467, p,
 5670 02ca 01FB02F2 		mul	r2, r1, r2	@ tmp468, dig_P8, tmp467
 5671              	@ main.c:2558: 					var1 = (((s32)dig_P9) * ((s32)(((p>>3) * (p>>3))>>13)))>>12; 
 5672 02ce 0B99     		ldr	r1, [sp, #44]	@ dig_P9, %sfp
 5673 02d0 5B0B     		lsrs	r3, r3, #13	@ tmp464, tmp463,
 5674 02d2 01FB03F3 		mul	r3, r1, r3	@ tmp465, dig_P9, tmp464
 5675              	@ main.c:2560: 					p = (u32)((s32)p + ((var1 + var2 + dig_P7) >> 4)); 
 5676 02d6 0999     		ldr	r1, [sp, #36]	@ dig_P7, %sfp
 5677 02d8 01EB6232 		add	r2, r1, r2, asr #13	@ tmp470, dig_P7, tmp468,
 5678 02dc 02EB2333 		add	r3, r2, r3, asr #12	@ tmp471, tmp470, tmp465,
 5679 02e0 00EB1310 		add	r0, r0, r3, lsr #4	@ p, p, tmp471,
 5680              	@ main.c:2561: 					p = (p*5)/8;
 5681 02e4 00EB8000 		add	r0, r0, r0, lsl #2	@ tmp475, p, p,
 5682 02e8 C008     		lsrs	r0, r0, #3	@ p, tmp475,
 5683              	@ main.c:2562: 					p = (p*5)/8;
 5684 02ea 00EB8004 		add	r4, r0, r0, lsl #2	@ tmp479, p, p,
 5685              	@ main.c:2563: 					UaPutK(" p= ");	
 5686 02ee 1D48     		ldr	r0, .L428+48	@,
 5687 02f0 FFF7FEFF 		bl	UaPutK	@
 5688              	@ main.c:2564: 					num2uart(p,9,3);
 5689 02f4 E008     		lsrs	r0, r4, #3	@, tmp479,
 5690 02f6 0322     		movs	r2, #3	@,
 5691 02f8 0921     		movs	r1, #9	@,
 5692 02fa FFF7FEFF 		bl	num2uart	@
 5693              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5694 02fe 3C68     		ldr	r4, [r7]	@ Timt.81_260, Timt
 5695 0300 B368     		ldr	r3, [r6, #8]	@ _261, MEM[(struct SysTick_Type *)3758153744B].VAL
 5696              	@ main.c:2568: 				UaPutS(" tp="); sint2uart(tim/TIM_US);
 5697 0302 1948     		ldr	r0, .L428+52	@,
 5698              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 5699 0304 E41A     		subs	r4, r4, r3	@ _262, Timt.81_260, _261
 5700 0306 0D94     		str	r4, [sp, #52]	@ _262, MEM[(volatile u32 *)&tim]
ARM GAS  /tmp/ccAYxbuo.s 			page 101


 5701              	@ main.c:2568: 				UaPutS(" tp="); sint2uart(tim/TIM_US);
 5702 0308 FFF7FEFF 		bl	UaPutS	@
 5703 030c 174B     		ldr	r3, .L428+56	@ tmp577,
 5704 030e A3FB0430 		umull	r3, r0, r3, r4	@ tmp502, tmp486, tmp577, _262
 5705 0312 4008     		lsrs	r0, r0, #1	@, tmp486,
 5706 0314 FFF7FEFF 		bl	sint2uart	@
 5707              	.L420:
 5708              	@ main.c:2573: 			if( STCLK_MS*1000 < (trg1 - SysTick->VAL)){
 5709 0318 154A     		ldr	r2, .L428+60	@ tmp488,
 5710 031a 1368     		ldr	r3, [r2]	@ trg1.168_178, trg1
 5711 031c B168     		ldr	r1, [r6, #8]	@ _179, MEM[(struct SysTick_Type *)3758153744B].VAL
 5712 031e 5B1A     		subs	r3, r3, r1	@ tmp490, trg1.168_178, _179
 5713 0320 5B45     		cmp	r3, fp	@ tmp490, tmp498
 5714 0322 7FF642AF 		bls	.L424	@,
 5715              	@ main.c:2574: 				trg1 = SysTick->VAL;
 5716 0326 B368     		ldr	r3, [r6, #8]	@ _181, MEM[(struct SysTick_Type *)3758153744B].VAL
 5717 0328 1360     		str	r3, [r2]	@ _181, trg1
 5718 032a 3EE7     		b	.L424	@
 5719              	.L419:
 5720              	@ main.c:2578: 	}
 5721 032c 15B0     		add	sp, sp, #84	@,,
 5722              		@ sp needed	@
 5723 032e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 5724              	.L429:
 5725 0332 00BF     		.align	2
 5726              	.L428:
 5727 0334 000C0140 		.word	1073810432
 5728 0338 00580040 		.word	1073764352
 5729 033c 3C000B42 		.word	1108017212
 5730 0340 D8034242 		.word	1111622616
 5731 0344 00000B42 		.word	1108017152
 5732 0348 00000000 		.word	.LC68
 5733 034c 00000000 		.word	Timt
 5734 0350 10E000E0 		.word	-536813552
 5735 0354 14000000 		.word	.LC69
 5736 0358 20000000 		.word	.LC70
 5737 035c 24000000 		.word	.LC71
 5738 0360 CBF3FFFF 		.word	-3125
 5739 0364 28000000 		.word	.LC72
 5740 0368 30000000 		.word	.LC73
 5741 036c 398EE338 		.word	954437177
 5742 0370 00000000 		.word	trg1
 5743 0374 00000000 		.word	trg0
 5744 0378 20AA4400 		.word	4500000
 5745 037c 40548900 		.word	9000000
 5746              		.size	BMP280_i2c, .-BMP280_i2c
 5747              		.section	.text.BMP280_spi,"ax",%progbits
 5748              		.align	1
 5749              		.p2align 2,,3
 5750              		.global	BMP280_spi
 5751              		.syntax unified
 5752              		.thumb
 5753              		.thumb_func
 5754              		.fpu softvfp
 5755              		.type	BMP280_spi, %function
 5756              	BMP280_spi:
 5757              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccAYxbuo.s 			page 102


 5758              		@ frame_needed = 0, uses_anonymous_args = 0
 5759 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 5760              	@ main.c:2592: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|7<<3|SPI_CR1_MSTR|SPI_CR1_CPOL|SPI_CR1_CPHA;		
 5761 0004 40F23F36 		movw	r6, #831	@ tmp198,
 5762              	@ main.c:2608: 		RX1276_CS1 = 0;
 5763 0008 0025     		movs	r5, #0	@ tmp211,
 5764              	@ main.c:2588: 		GPIOA->CRL = (GPIOA->CRL&0x0000ffff)|0xB4B30000;	// PA4~7
 5765 000a 6C48     		ldr	r0, .L437	@ tmp189,
 5766              	@ main.c:2589: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 5767 000c 6C49     		ldr	r1, .L437+4	@ tmp194,
 5768              	@ main.c:2588: 		GPIOA->CRL = (GPIOA->CRL&0x0000ffff)|0xB4B30000;	// PA4~7
 5769 000e 0368     		ldr	r3, [r0]	@ _1, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 5770              	@ main.c:2592: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|7<<3|SPI_CR1_MSTR|SPI_CR1_CPOL|SPI_CR1_CPHA;		
 5771 0010 6C4A     		ldr	r2, .L437+8	@ tmp196,
 5772              	@ main.c:2588: 		GPIOA->CRL = (GPIOA->CRL&0x0000ffff)|0xB4B30000;	// PA4~7
 5773 0012 9BB2     		uxth	r3, r3	@ tmp190, _1
 5774 0014 43F03443 		orr	r3, r3, #-1275068416	@ _4, tmp190,
 5775 0018 43F43303 		orr	r3, r3, #11730944	@ _4, _4,
 5776 001c 0360     		str	r3, [r0]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 5777              	@ main.c:2589: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 5778 001e 8B69     		ldr	r3, [r1, #24]	@ _6, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 5779              	@ main.c:2598: 		trg0 = SysTick->VAL;		trg1 = SysTick->VAL;		trg2 = SysTick->VAL;
 5780 0020 694C     		ldr	r4, .L437+12	@ tmp204,
 5781              	@ main.c:2589: 		RCC->APB2ENR   |= RCC_APB2ENR_SPI1EN;
 5782 0022 43F48053 		orr	r3, r3, #4096	@ _8, _6,
 5783 0026 8B61     		str	r3, [r1, #24]	@ _8, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 5784              	@ main.c:2592: 		SPI1->CR1 = SPI_CR1_SSM|SPI_CR1_SSI|7<<3|SPI_CR1_MSTR|SPI_CR1_CPOL|SPI_CR1_CPHA;		
 5785 0028 1680     		strh	r6, [r2]	@ movhi	@ tmp198, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 5786              	@ main.c:2596: 		SPI1->CR1 |= SPI_CR1_SPE;		
 5787 002a 1388     		ldrh	r3, [r2]	@, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 5788              	@ main.c:2598: 		trg0 = SysTick->VAL;		trg1 = SysTick->VAL;		trg2 = SysTick->VAL;
 5789 002c 6749     		ldr	r1, .L437+16	@ tmp205,
 5790              	@ main.c:2596: 		SPI1->CR1 |= SPI_CR1_SPE;		
 5791 002e 43F04003 		orr	r3, r3, #64	@ _11, MEM[(struct SPI_TypeDef *)1073819648B].CR1,
 5792 0032 1380     		strh	r3, [r2]	@ movhi	@ _11, MEM[(struct SPI_TypeDef *)1073819648B].CR1
 5793              	@ main.c:2598: 		trg0 = SysTick->VAL;		trg1 = SysTick->VAL;		trg2 = SysTick->VAL;
 5794 0034 A268     		ldr	r2, [r4, #8]	@ _12, MEM[(struct SysTick_Type *)3758153744B].VAL
 5795 0036 664B     		ldr	r3, .L437+20	@ tmp207,
 5796 0038 0A60     		str	r2, [r1]	@ _12, trg0
 5797 003a A268     		ldr	r2, [r4, #8]	@ _13, MEM[(struct SysTick_Type *)3758153744B].VAL
 5798 003c DFF8B091 		ldr	r9, .L437+52	@ tmp285,
 5799 0040 1A60     		str	r2, [r3]	@ _13, trg1
 5800 0042 A268     		ldr	r2, [r4, #8]	@ _14, MEM[(struct SysTick_Type *)3758153744B].VAL
 5801              	@ main.c:2608: 		RX1276_CS1 = 0;
 5802 0044 634B     		ldr	r3, .L437+24	@ tmp210,
 5803              	@ main.c:2598: 		trg0 = SysTick->VAL;		trg1 = SysTick->VAL;		trg2 = SysTick->VAL;
 5804 0046 C9F80020 		str	r2, [r9]	@ _14, trg2
 5805              	@ main.c:2608: 		RX1276_CS1 = 0;
 5806 004a 1D60     		str	r5, [r3]	@ tmp211, MEM[(volatile long unsigned int *)1109459344B]
 5807              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 5808 004c 2546     		mov	r5, r4	@ tmp215, tmp204
 5809              	@ main.c:2579: void BMP280_spi(void){
 5810 004e 85B0     		sub	sp, sp, #20	@,,
 5811              	@ main.c:2610: 		spi1_rw(0xE0 & 0x7f);   // reset write
 5812 0050 6020     		movs	r0, #96	@,
 5813 0052 FFF7FEFF 		bl	spi1_rw	@
 5814              	@ main.c:2611: 		spi1_rw(0xB6); 			    // reset value
ARM GAS  /tmp/ccAYxbuo.s 			page 103


 5815 0056 B620     		movs	r0, #182	@,
 5816 0058 FFF7FEFF 		bl	spi1_rw	@
 5817              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 5818 005c A368     		ldr	r3, [r4, #8]	@ _123, MEM[(struct SysTick_Type *)3758153744B].VAL
 5819 005e 5E49     		ldr	r1, .L437+28	@ tmp286,
 5820              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 5821 0060 5E48     		ldr	r0, .L437+32	@ tmp217,
 5822              	@ inc/tool/delay.h:109: 		delay_us = SysTick->VAL; 
 5823 0062 0B60     		str	r3, [r1]	@ _123, delay_us
 5824              	.L431:
 5825              	@ inc/tool/delay.h:110: 		while( STCLK_MS*ms > (delay_us - SysTick->VAL) );
 5826 0064 0B68     		ldr	r3, [r1]	@ delay_us.69_124, delay_us
 5827 0066 AA68     		ldr	r2, [r5, #8]	@ _125, MEM[(struct SysTick_Type *)3758153744B].VAL
 5828 0068 9B1A     		subs	r3, r3, r2	@ tmp216, delay_us.69_124, _125
 5829 006a 8342     		cmp	r3, r0	@ tmp216, tmp217
 5830 006c FAD9     		bls	.L431	@,
 5831              	@ main.c:2615: 		spi1_rw(0xf4 & 0x7f); 	// Select Control register 
 5832 006e 7420     		movs	r0, #116	@,
 5833 0070 FFF7FEFF 		bl	spi1_rw	@
 5834              	@ main.c:2616: 		spi1_rw(0x27); 					// Write  Control register 
 5835 0074 2720     		movs	r0, #39	@,
 5836 0076 FFF7FEFF 		bl	spi1_rw	@
 5837              	@ main.c:2620: 		RX1276_CS1 = 1;
 5838 007a 564A     		ldr	r2, .L437+24	@ tmp218,
 5839 007c 0121     		movs	r1, #1	@ tmp219,
 5840              	@ main.c:2630: 				RX1276_CS1 = 0;
 5841 007e 9346     		mov	fp, r2	@ tmp226, tmp218
 5842              	@ main.c:2626: 			if( STCLK_MS*2000 < (trg2 - SysTick->VAL)){
 5843 0080 DFF844A1 		ldr	r10, .L437+12	@ tmp221,
 5844 0084 564B     		ldr	r3, .L437+36	@ tmp223,
 5845              	@ main.c:2620: 		RX1276_CS1 = 1;
 5846 0086 1160     		str	r1, [r2]	@ tmp219, MEM[(volatile long unsigned int *)1109459344B]
 5847              	.L432:
 5848              	@ main.c:2626: 			if( STCLK_MS*2000 < (trg2 - SysTick->VAL)){
 5849 0088 D9F80020 		ldr	r2, [r9]	@ trg2.169_15, trg2
 5850 008c DAF80810 		ldr	r1, [r10, #8]	@ _16, MEM[(struct SysTick_Type *)3758153744B].VAL
 5851 0090 521A     		subs	r2, r2, r1	@ tmp222, trg2.169_15, _16
 5852 0092 9A42     		cmp	r2, r3	@ tmp222, tmp223
 5853 0094 F8D9     		bls	.L432	@,
 5854              	@ main.c:2630: 				RX1276_CS1 = 0;
 5855 0096 0022     		movs	r2, #0	@ tmp227,
 5856              	@ main.c:2627: 				trg2 = SysTick->VAL;
 5857 0098 DAF80810 		ldr	r1, [r10, #8]	@ _18, MEM[(struct SysTick_Type *)3758153744B].VAL
 5858 009c 0393     		str	r3, [sp, #12]	@ tmp223, %sfp
 5859 009e C9F80010 		str	r1, [r9]	@ _18, trg2
 5860              	@ main.c:2632: 				spi1_rw(0xF4 & 0x7f); 	// Select Control register 
 5861 00a2 7420     		movs	r0, #116	@,
 5862              	@ main.c:2630: 				RX1276_CS1 = 0;
 5863 00a4 CBF80020 		str	r2, [fp]	@ tmp227, MEM[(volatile long unsigned int *)1109459344B]
 5864              	@ main.c:2632: 				spi1_rw(0xF4 & 0x7f); 	// Select Control register 
 5865 00a8 FFF7FEFF 		bl	spi1_rw	@
 5866              	@ main.c:2633: 				spi1_rw(0x27); 					// Write  Control register 
 5867 00ac 2720     		movs	r0, #39	@,
 5868 00ae FFF7FEFF 		bl	spi1_rw	@
 5869              	@ main.c:2635: 				spi1_rw(0xF4);
 5870 00b2 F420     		movs	r0, #244	@,
 5871 00b4 FFF7FEFF 		bl	spi1_rw	@
ARM GAS  /tmp/ccAYxbuo.s 			page 104


 5872              	@ main.c:2636: 				ctrl_meas = spi1_rw(0xff);
 5873 00b8 FF20     		movs	r0, #255	@,
 5874 00ba FFF7FEFF 		bl	spi1_rw	@
 5875 00be 0190     		str	r0, [sp, #4]	@, %sfp
 5876              	@ main.c:2638: 				spi1_rw(0x88);
 5877 00c0 8820     		movs	r0, #136	@,
 5878 00c2 FFF7FEFF 		bl	spi1_rw	@
 5879              	@ main.c:2639: 				v0 = spi1_rw(0xff);
 5880 00c6 FF20     		movs	r0, #255	@,
 5881 00c8 FFF7FEFF 		bl	spi1_rw	@
 5882 00cc 0546     		mov	r5, r0	@ tmp229,
 5883              	@ main.c:2640: 				v1 = spi1_rw(0xff);
 5884 00ce FF20     		movs	r0, #255	@,
 5885 00d0 FFF7FEFF 		bl	spi1_rw	@
 5886              	@ main.c:2641: 				dig_T1 = (u16)(((u16)(v1<<8)) | v0);
 5887 00d4 EDB2     		uxtb	r5, r5	@ _20, tmp229
 5888 00d6 45EA0025 		orr	r5, r5, r0, lsl #8	@ tmp235, _20,,
 5889              	@ main.c:2643: 				spi1_rw(0x8A);
 5890 00da 8A20     		movs	r0, #138	@,
 5891 00dc FFF7FEFF 		bl	spi1_rw	@
 5892              	@ main.c:2644: 				v0 = spi1_rw(0xff);
 5893 00e0 FF20     		movs	r0, #255	@,
 5894 00e2 FFF7FEFF 		bl	spi1_rw	@
 5895 00e6 0646     		mov	r6, r0	@ tmp236,
 5896              	@ main.c:2645: 				v1 = spi1_rw(0xff);
 5897 00e8 FF20     		movs	r0, #255	@,
 5898 00ea FFF7FEFF 		bl	spi1_rw	@
 5899              	@ main.c:2646: 				dig_T2 = (s16)((v1<<8) | v0);
 5900 00ee F6B2     		uxtb	r6, r6	@ _24, tmp236
 5901 00f0 C0B2     		uxtb	r0, r0	@ _25,
 5902 00f2 46EA0026 		orr	r6, r6, r0, lsl #8	@ tmp243, _24, _25,
 5903              	@ main.c:2648: 				spi1_rw(0x8C);
 5904 00f6 8C20     		movs	r0, #140	@,
 5905 00f8 FFF7FEFF 		bl	spi1_rw	@
 5906              	@ main.c:2649: 				v0 = spi1_rw(0xff);
 5907 00fc FF20     		movs	r0, #255	@,
 5908 00fe FFF7FEFF 		bl	spi1_rw	@
 5909 0102 0446     		mov	r4, r0	@ tmp244,
 5910              	@ main.c:2650: 				v1 = spi1_rw(0xff);
 5911 0104 FF20     		movs	r0, #255	@,
 5912 0106 FFF7FEFF 		bl	spi1_rw	@
 5913              	@ main.c:2651: 				dig_T3 = (s16)((v1<<8) | v0);
 5914 010a E4B2     		uxtb	r4, r4	@ _30, tmp244
 5915 010c C0B2     		uxtb	r0, r0	@ _31,
 5916 010e 44EA0024 		orr	r4, r4, r0, lsl #8	@ tmp251, _30, _31,
 5917              	@ main.c:2653: 				spi1_rw(0xFA);
 5918 0112 FA20     		movs	r0, #250	@,
 5919 0114 FFF7FEFF 		bl	spi1_rw	@
 5920              	@ main.c:2654: 				value[0] = spi1_rw(0xff);
 5921 0118 FF20     		movs	r0, #255	@,
 5922 011a FFF7FEFF 		bl	spi1_rw	@
 5923 011e 0746     		mov	r7, r0	@ tmp252,
 5924              	@ main.c:2655: 				value[1] = spi1_rw(0xff);
 5925 0120 FF20     		movs	r0, #255	@,
 5926 0122 FFF7FEFF 		bl	spi1_rw	@
 5927 0126 0290     		str	r0, [sp, #8]	@ tmp253, %sfp
 5928              	@ main.c:2656: 				value[2] = spi1_rw(0xff);
ARM GAS  /tmp/ccAYxbuo.s 			page 105


 5929 0128 FF20     		movs	r0, #255	@,
 5930 012a FFF7FEFF 		bl	spi1_rw	@
 5931              	@ main.c:2662: 				RX1276_CS1 = 1;
 5932 012e 0121     		movs	r1, #1	@ tmp256,
 5933              	@ main.c:2656: 				value[2] = spi1_rw(0xff);
 5934 0130 8046     		mov	r8, r0	@ tmp254,
 5935              	@ main.c:2662: 				RX1276_CS1 = 1;
 5936 0132 CBF80010 		str	r1, [fp]	@ tmp256, MEM[(volatile long unsigned int *)1109459344B]
 5937              	@ main.c:2664: 				UaPutK("\r\n BMP280T1 = 0x");	
 5938 0136 2B48     		ldr	r0, .L437+40	@,
 5939 0138 FFF7FEFF 		bl	UaPutK	@
 5940              	@ main.c:2641: 				dig_T1 = (u16)(((u16)(v1<<8)) | v0);
 5941 013c ADB2     		uxth	r5, r5	@ dig_T1, tmp235
 5942              	@ main.c:2665: 				hex2uart(ctrl_meas,2);
 5943 013e 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2	@, %sfp
 5944 0142 0221     		movs	r1, #2	@,
 5945 0144 FFF7FEFF 		bl	hex2uart	@
 5946              	@ main.c:2646: 				dig_T2 = (s16)((v1<<8) | v0);
 5947 0148 36B2     		sxth	r6, r6	@ dig_T2, tmp243
 5948              	@ main.c:2667: 				hex2uart(dig_T1,4);
 5949 014a 2846     		mov	r0, r5	@, dig_T1
 5950 014c 0421     		movs	r1, #4	@,
 5951 014e FFF7FEFF 		bl	hex2uart	@
 5952              	@ main.c:2651: 				dig_T3 = (s16)((v1<<8) | v0);
 5953 0152 24B2     		sxth	r4, r4	@ dig_T3, tmp251
 5954              	@ main.c:2668: 				hex2uart(dig_T2,4);
 5955 0154 3046     		mov	r0, r6	@, dig_T2
 5956 0156 0421     		movs	r1, #4	@,
 5957 0158 FFF7FEFF 		bl	hex2uart	@
 5958              	@ main.c:2669: 				hex2uart(dig_T3,4);
 5959 015c 0421     		movs	r1, #4	@,
 5960 015e 2046     		mov	r0, r4	@, dig_T3
 5961 0160 FFF7FEFF 		bl	hex2uart	@
 5962              	@ main.c:2676: 				adc = ( (u32)((u16)((value[0]) << 8) | value[1] ) << 4) | ( (value[2]) >> 4);
 5963 0164 029A     		ldr	r2, [sp, #8]	@ tmp253, %sfp
 5964 0166 3F02     		lsls	r7, r7, #8	@ tmp259, tmp252,
 5965 0168 BFB2     		uxth	r7, r7	@ tmp260, tmp259
 5966 016a D2B2     		uxtb	r2, r2	@ _37, tmp253
 5967 016c 3A43     		orrs	r2, r2, r7	@, tmp262, _37, tmp260
 5968 016e C8F30317 		ubfx	r7, r8, #4, #4	@ tmp266, tmp254,,
 5969 0172 47EA0217 		orr	r7, r7, r2, lsl #4	@ adc, tmp266, tmp262,
 5970              	@ main.c:2687: 				UaPutK(" T=");	
 5971 0176 1C48     		ldr	r0, .L437+44	@,
 5972 0178 FFF7FEFF 		bl	UaPutK	@
 5973              	@ main.c:2688: 				sint2uart(adc);
 5974 017c 3846     		mov	r0, r7	@, adc
 5975 017e FFF7FEFF 		bl	sint2uart	@
 5976              	@ main.c:2680:         var2 = (((((adc>>4) - ((s32)dig_T1)) * ((adc>>4) - ((s32)dig_T1))) >> 12)
 5977 0182 C5EB1718 		rsb	r8, r5, r7, lsr #4	@ _61, dig_T1, adc,
 5978              	@ main.c:2689: 				UaPutK(" ");	
 5979 0186 1948     		ldr	r0, .L437+48	@,
 5980 0188 FFF7FEFF 		bl	UaPutK	@
 5981              	@ main.c:2680:         var2 = (((((adc>>4) - ((s32)dig_T1)) * ((adc>>4) - ((s32)dig_T1))) >> 12)
 5982 018c 08FB08F0 		mul	r0, r8, r8	@ tmp275, _61, _61
 5983              	@ main.c:2679: 				var1 = ((((adc>>3) - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5984 0190 6D00     		lsls	r5, r5, #1	@ tmp271, dig_T1,
 5985              	@ main.c:2680:         var2 = (((((adc>>4) - ((s32)dig_T1)) * ((adc>>4) - ((s32)dig_T1))) >> 12)
ARM GAS  /tmp/ccAYxbuo.s 			page 106


 5986 0192 000B     		lsrs	r0, r0, #12	@ tmp276, tmp275,
 5987              	@ main.c:2679: 				var1 = ((((adc>>3) - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5988 0194 C5EBD705 		rsb	r5, r5, r7, lsr #3	@ tmp272, tmp271, adc,
 5989              	@ main.c:2681: 				* ((s32)dig_T3))>>14;
 5990 0198 04FB00F0 		mul	r0, r4, r0	@ tmp277, dig_T3, tmp276
 5991              	@ main.c:2679: 				var1 = ((((adc>>3) - ((s32)dig_T1<<1))) * ((s32)dig_T2)) >> 11;
 5992 019c 06FB05F5 		mul	r5, r6, r5	@ tmp273, dig_T2, tmp272
 5993              	@ main.c:2680:         var2 = (((((adc>>4) - ((s32)dig_T1)) * ((adc>>4) - ((s32)dig_T1))) >> 12)
 5994 01a0 800B     		lsrs	r0, r0, #14	@ var2, tmp277,
 5995              	@ main.c:2684:         tFine = var1 + var2;
 5996 01a2 00EBD520 		add	r0, r0, r5, lsr #11	@ tFine, var2, tmp273,
 5997              	@ main.c:2685: 				T     = (tFine * 5 + 128) >> 8;
 5998 01a6 00EB8000 		add	r0, r0, r0, lsl #2	@ tmp282, tFine, tFine,
 5999 01aa 8030     		adds	r0, r0, #128	@ tmp283, tmp282,
 6000              	@ main.c:2690: 				num2uart(T,5,3);
 6001 01ac 000A     		lsrs	r0, r0, #8	@, tmp283,
 6002 01ae 0322     		movs	r2, #3	@,
 6003 01b0 0521     		movs	r1, #5	@,
 6004 01b2 FFF7FEFF 		bl	num2uart	@
 6005 01b6 039B     		ldr	r3, [sp, #12]	@ tmp223, %sfp
 6006 01b8 66E7     		b	.L432	@
 6007              	.L438:
 6008 01ba 00BF     		.align	2
 6009              	.L437:
 6010 01bc 00080140 		.word	1073809408
 6011 01c0 00100240 		.word	1073876992
 6012 01c4 00300140 		.word	1073819648
 6013 01c8 10E000E0 		.word	-536813552
 6014 01cc 00000000 		.word	trg0
 6015 01d0 00000000 		.word	trg1
 6016 01d4 90012142 		.word	1109459344
 6017 01d8 00000000 		.word	delay_us
 6018 01dc 8F5F0100 		.word	89999
 6019 01e0 80A81201 		.word	18000000
 6020 01e4 00000000 		.word	.LC74
 6021 01e8 24000000 		.word	.LC71
 6022 01ec 18010000 		.word	.LC35
 6023 01f0 00000000 		.word	trg2
 6024              		.size	BMP280_spi, .-BMP280_spi
 6025              		.section	.text.fun_tool,"ax",%progbits
 6026              		.align	1
 6027              		.p2align 2,,3
 6028              		.global	fun_tool
 6029              		.syntax unified
 6030              		.thumb
 6031              		.thumb_func
 6032              		.fpu softvfp
 6033              		.type	fun_tool, %function
 6034              	fun_tool:
 6035              		@ args = 0, pretend = 0, frame = 528
 6036              		@ frame_needed = 0, uses_anonymous_args = 0
 6037 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 6038              	@ main.c:2707: 	switch(znak){
 6039 0004 6338     		subs	r0, r0, #99	@ tmp279, znak,
 6040              	@ main.c:2698: void fun_tool(u08 znak,T_SD1 * sda){
 6041 0006 ADF5057D 		sub	sp, sp, #532	@,,
 6042              	@ main.c:2707: 	switch(znak){
ARM GAS  /tmp/ccAYxbuo.s 			page 107


 6043 000a 1428     		cmp	r0, #20	@ tmp279,
 6044 000c 00F28880 		bhi	.L440	@
 6045 0010 DFE810F0 		tbh	[pc, r0, lsl #1]	@ tmp279
 6046              	.L442:
 6047 0014 B200     		.2byte	(.L441-.L442)/2
 6048 0016 8600     		.2byte	(.L440-.L442)/2
 6049 0018 8600     		.2byte	(.L440-.L442)/2
 6050 001a 8600     		.2byte	(.L440-.L442)/2
 6051 001c 8600     		.2byte	(.L440-.L442)/2
 6052 001e 8600     		.2byte	(.L440-.L442)/2
 6053 0020 8600     		.2byte	(.L440-.L442)/2
 6054 0022 8600     		.2byte	(.L440-.L442)/2
 6055 0024 8600     		.2byte	(.L440-.L442)/2
 6056 0026 8600     		.2byte	(.L440-.L442)/2
 6057 0028 BF00     		.2byte	(.L443-.L442)/2
 6058 002a 8600     		.2byte	(.L440-.L442)/2
 6059 002c 1500     		.2byte	(.L444-.L442)/2
 6060 002e 8600     		.2byte	(.L440-.L442)/2
 6061 0030 8600     		.2byte	(.L440-.L442)/2
 6062 0032 FF00     		.2byte	(.L445-.L442)/2
 6063 0034 8600     		.2byte	(.L440-.L442)/2
 6064 0036 8600     		.2byte	(.L440-.L442)/2
 6065 0038 5401     		.2byte	(.L446-.L442)/2
 6066 003a 8600     		.2byte	(.L440-.L442)/2
 6067 003c 8D00     		.2byte	(.L447-.L442)/2
 6068              		.p2align 1
 6069              	.L444:
 6070              	@ main.c:2819: 		UaPutK("Read sector");
 6071 003e B648     		ldr	r0, .L479	@,
 6072 0040 FFF7FEFF 		bl	UaPutK	@
 6073              	@ main.c:2820: 		UaPutK("\r\n sectorNumber = ");
 6074 0044 B548     		ldr	r0, .L479+4	@,
 6075 0046 FFF7FEFF 		bl	UaPutK	@
 6076              	@ main.c:2823: 		strBlock=UART_getNum();
 6077 004a FFF7FEFF 		bl	UART_getNum	@
 6078              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6079 004e B44C     		ldr	r4, .L479+8	@ tmp341,
 6080 0050 B44D     		ldr	r5, .L479+12	@ tmp342,
 6081 0052 A368     		ldr	r3, [r4, #8]	@ _169, MEM[(struct SysTick_Type *)3758153744B].VAL
 6082              	@ main.c:2826: 		sd_status=mci_read_sect (strBlock,buffer,1);
 6083 0054 0122     		movs	r2, #1	@,
 6084 0056 04A9     		add	r1, sp, #16	@ tmp393,,
 6085              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6086 0058 2B60     		str	r3, [r5]	@ _169, Timt
 6087              	@ main.c:2823: 		strBlock=UART_getNum();
 6088 005a 0746     		mov	r7, r0	@ strBlock,
 6089              	@ main.c:2826: 		sd_status=mci_read_sect (strBlock,buffer,1);
 6090 005c FFF7FEFF 		bl	mmc_read_sect	@
 6091              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 6092 0060 2A68     		ldr	r2, [r5]	@ Timt.81_166, Timt
 6093 0062 A368     		ldr	r3, [r4, #8]	@ _167, MEM[(struct SysTick_Type *)3758153744B].VAL
 6094 0064 D31A     		subs	r3, r2, r3	@ _168, Timt.81_166, _167
 6095 0066 0193     		str	r3, [sp, #4]	@ _168, %sfp
 6096 0068 0393     		str	r3, [sp, #12]	@ _168, MEM[(volatile u32 *)&tim]
 6097              	@ main.c:2829: 		if(sd_status){
 6098 006a 0028     		cmp	r0, #0	@
 6099 006c 00F04F81 		beq	.L458	@
ARM GAS  /tmp/ccAYxbuo.s 			page 108


 6100              	@ main.c:2830: 			UaPutS("\r\n ");
 6101 0070 AD48     		ldr	r0, .L479+16	@,
 6102 0072 FFF7FEFF 		bl	UaPutS	@
 6103              	@ main.c:2832: 			hex2uart(strBlock, 8);
 6104 0076 0821     		movs	r1, #8	@,
 6105 0078 3846     		mov	r0, r7	@, strBlock
 6106 007a FFF7FEFF 		bl	hex2uart	@
 6107 007e 0024     		movs	r4, #0	@ ivtmp.559,
 6108              	.L459:
 6109              	@ main.c:2834: 				hex2uart(k, 2);
 6110 0080 2046     		mov	r0, r4	@, ivtmp.559
 6111 0082 0221     		movs	r1, #2	@,
 6112 0084 0134     		adds	r4, r4, #1	@ ivtmp.559, ivtmp.559,
 6113 0086 FFF7FEFF 		bl	hex2uart	@
 6114              	@ main.c:2833: 			for(u08 k=0;k<16;k++){
 6115 008a 102C     		cmp	r4, #16	@ ivtmp.559,
 6116 008c F8D1     		bne	.L459	@,
 6117              	@ main.c:2837: 			UaPutS("\r\n\n ");
 6118 008e A748     		ldr	r0, .L479+20	@,
 6119 0090 FFF7FEFF 		bl	UaPutS	@
 6120              	@ main.c:2839: 				hex2uart(strBlock*512 + i, 8);
 6121 0094 04AE     		add	r6, sp, #16	@ tmp396,,
 6122              	@ main.c:2843: 				UaPutS("  ");
 6123 0096 DFF8DC92 		ldr	r9, .L479+92	@ tmp378,
 6124              	@ main.c:2848: 				UaPutS("\r\n ");
 6125 009a DFF88C82 		ldr	r8, .L479+16	@ tmp379,
 6126 009e 0DF5047A 		add	r10, sp, #528	@ _54,,
 6127 00a2 C6EB4727 		rsb	r7, r6, r7, lsl #9	@ tmp371, tmp397, strBlock,
 6128 00a6 08AD     		add	r5, sp, #32	@ ivtmp.557,,
 6129              	.L464:
 6130              	@ main.c:2839: 				hex2uart(strBlock*512 + i, 8);
 6131 00a8 0821     		movs	r1, #8	@,
 6132 00aa B819     		adds	r0, r7, r6	@, tmp371, ivtmp.558
 6133 00ac FFF7FEFF 		bl	hex2uart	@
 6134 00b0 3446     		mov	r4, r6	@ ivtmp.549, ivtmp.558
 6135              	.L460:
 6136              	@ main.c:2841: 					hex2uart(buffer[k+i], 2);
 6137 00b2 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2	@, MEM[base: _181, offset: 0B]
 6138 00b6 0221     		movs	r1, #2	@,
 6139 00b8 FFF7FEFF 		bl	hex2uart	@
 6140              	@ main.c:2840: 				for(u08 k=0;k<16;k++){
 6141 00bc A542     		cmp	r5, r4	@ ivtmp.557, ivtmp.549
 6142 00be F8D1     		bne	.L460	@,
 6143              	@ main.c:2843: 				UaPutS("  ");
 6144 00c0 4846     		mov	r0, r9	@, tmp378
 6145 00c2 FFF7FEFF 		bl	UaPutS	@
 6146 00c6 B346     		mov	fp, r6	@ ivtmp.540, ivtmp.558
 6147              	.L463:
 6148              	@ main.c:2845: 					if ( buffer[k+i]<0x20 || buffer[k+i]>127 ) UaPutC('.');
 6149 00c8 1BF8010B 		ldrb	r0, [fp], #1	@ zero_extendqisi2	@ _39, MEM[base: _195, offset: 0B]
 6150 00cc A0F12002 		sub	r2, r0, #32	@ tmp355, _39,
 6151 00d0 5F2A     		cmp	r2, #95	@ tmp355,
 6152 00d2 88BF     		it	hi
 6153 00d4 2E20     		movhi	r0, #46	@,
 6154              	@ main.c:2846: 					else UaPutC(buffer[k+i]);
 6155 00d6 FFF7FEFF 		bl	UaPutC	@
 6156              	@ main.c:2844: 				for(u08 k=0;k<16;k++){
ARM GAS  /tmp/ccAYxbuo.s 			page 109


 6157 00da 5C45     		cmp	r4, fp	@ ivtmp.549, ivtmp.540
 6158 00dc F4D1     		bne	.L463	@,
 6159 00de 1036     		adds	r6, r6, #16	@ ivtmp.558, ivtmp.558,
 6160              	@ main.c:2848: 				UaPutS("\r\n ");
 6161 00e0 4046     		mov	r0, r8	@, tmp379
 6162 00e2 FFF7FEFF 		bl	UaPutS	@
 6163              	@ main.c:2838: 			for(u32 i=0;i<512;i+=16){
 6164 00e6 B245     		cmp	r10, r6	@ _54, ivtmp.558
 6165 00e8 05F11005 		add	r5, r5, #16	@ ivtmp.557, ivtmp.557,
 6166 00ec DCD1     		bne	.L464	@,
 6167              	@ main.c:2850: 			UaPutK(" t_rsdio = ");	uint2uart(tim/TIM_US);
 6168 00ee 9048     		ldr	r0, .L479+24	@,
 6169 00f0 FFF7FEFF 		bl	UaPutK	@
 6170 00f4 019B     		ldr	r3, [sp, #4]	@ _168, %sfp
 6171 00f6 8F48     		ldr	r0, .L479+28	@ tmp360,
 6172 00f8 A0FB0330 		umull	r3, r0, r0, r3	@ tmp390, tmp359, tmp360, _168
 6173 00fc 4008     		lsrs	r0, r0, #1	@, tmp359,
 6174 00fe FFF7FEFF 		bl	uint2uart	@
 6175              	@ main.c:2852: 			crc16_spi2( (u16*) buffer,256, &crc16 );
 6176 0102 4FF48071 		mov	r1, #256	@,
 6177 0106 04A8     		add	r0, sp, #16	@ tmp400,,
 6178 0108 0DF10A02 		add	r2, sp, #10	@ tmp401,,
 6179              	.L477:
 6180 010c FFF7FEFF 		bl	crc16_spi2	@
 6181              	@ main.c:2854: 			UaPutK(" crc = ");	hex2uart(crc16,4);
 6182 0110 8948     		ldr	r0, .L479+32	@,
 6183 0112 FFF7FEFF 		bl	UaPutK	@
 6184 0116 BDF80A00 		ldrh	r0, [sp, #10]	@, crc16
 6185 011a 0421     		movs	r1, #4	@,
 6186 011c FFF7FEFF 		bl	hex2uart	@
 6187              	.L440:
 6188              	@ main.c:2863: 	UaPutS("\r\n ");
 6189 0120 8148     		ldr	r0, .L479+16	@,
 6190 0122 FFF7FEFF 		bl	UaPutS	@
 6191              	@ main.c:2864: }
 6192 0126 0DF5057D 		add	sp, sp, #532	@,,
 6193              		@ sp needed	@
 6194 012a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 6195              	.L447:
 6196              	@ main.c:2758: 		UaPutK("\r\n Flash memory Page = ");
 6197 012e 8348     		ldr	r0, .L479+36	@,
 6198 0130 FFF7FEFF 		bl	UaPutK	@
 6199              	@ main.c:2759: 		strBlock = UART_getNum();
 6200 0134 FFF7FEFF 		bl	UART_getNum	@
 6201              	@ main.c:2760: 		strBlock = strBlock > 254 ? 254 : strBlock;
 6202 0138 FE28     		cmp	r0, #254	@,
 6203 013a 28BF     		it	cs
 6204 013c FE20     		movcs	r0, #254	@ strBlock,
 6205              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6206 013e 784D     		ldr	r5, .L479+8	@ tmp297,
 6207 0140 784C     		ldr	r4, .L479+12	@ tmp298,
 6208 0142 AB68     		ldr	r3, [r5, #8]	@ _161, MEM[(struct SysTick_Type *)3758153744B].VAL
 6209              	@ main.c:2761: 		strBlock = (u32)(0x800*strBlock + 0x08000000);
 6210 0144 00F58030 		add	r0, r0, #65536	@ _17, strBlock,
 6211              	@ main.c:2764: 		EraseFlashPage(strBlock);
 6212 0148 C002     		lsls	r0, r0, #11	@, _17,
 6213              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
ARM GAS  /tmp/ccAYxbuo.s 			page 110


 6214 014a 2360     		str	r3, [r4]	@ _161, Timt
 6215              	@ main.c:2764: 		EraseFlashPage(strBlock);
 6216 014c FFF7FEFF 		bl	EraseFlashPage	@
 6217              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 6218 0150 2468     		ldr	r4, [r4]	@ Timt.81_158, Timt
 6219 0152 AB68     		ldr	r3, [r5, #8]	@ _159, MEM[(struct SysTick_Type *)3758153744B].VAL
 6220              	@ main.c:2766: 		UaPutS("\r\n Kasowanie pamieci FLASH = "); sint2uart(tim/TIM_US);
 6221 0154 7A48     		ldr	r0, .L479+40	@,
 6222              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 6223 0156 E41A     		subs	r4, r4, r3	@ _160, Timt.81_158, _159
 6224 0158 0394     		str	r4, [sp, #12]	@ _160, MEM[(volatile u32 *)&tim]
 6225              	@ main.c:2766: 		UaPutS("\r\n Kasowanie pamieci FLASH = "); sint2uart(tim/TIM_US);
 6226 015a FFF7FEFF 		bl	UaPutS	@
 6227 015e 7548     		ldr	r0, .L479+28	@ tmp307,
 6228 0160 A0FB0430 		umull	r3, r0, r0, r4	@ tmp388, tmp306, tmp307, _160
 6229 0164 4008     		lsrs	r0, r0, #1	@, tmp306,
 6230 0166 FFF7FEFF 		bl	sint2uart	@
 6231              	@ main.c:2863: 	UaPutS("\r\n ");
 6232 016a 6F48     		ldr	r0, .L479+16	@,
 6233 016c FFF7FEFF 		bl	UaPutS	@
 6234              	@ main.c:2864: }
 6235 0170 0DF5057D 		add	sp, sp, #532	@,,
 6236              		@ sp needed	@
 6237 0174 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 6238              	.L441:
 6239              	@ main.c:2813: 		TFT_Clear(BLACK);
 6240 0178 0020     		movs	r0, #0	@,
 6241 017a FFF7FEFF 		bl	TFT_Clear	@
 6242              	@ main.c:2815: 		UaPutS("\r\n Clear !");
 6243 017e 7148     		ldr	r0, .L479+44	@,
 6244 0180 FFF7FEFF 		bl	UaPutS	@
 6245              	@ main.c:2863: 	UaPutS("\r\n ");
 6246 0184 6848     		ldr	r0, .L479+16	@,
 6247 0186 FFF7FEFF 		bl	UaPutS	@
 6248              	@ main.c:2864: }
 6249 018a 0DF5057D 		add	sp, sp, #532	@,,
 6250              		@ sp needed	@
 6251 018e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 6252              	.L443:
 6253              	@ main.c:2799: 		UaPutS("\r\n Read Start !");
 6254 0192 6D48     		ldr	r0, .L479+48	@,
 6255 0194 FFF7FEFF 		bl	UaPutS	@
 6256 0198 0025     		movs	r5, #0	@ ivtmp.530,
 6257 019a DFF88891 		ldr	r9, .L479+12	@ tmp370,
 6258              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6259 019e 604E     		ldr	r6, .L479+8	@ tmp325,
 6260              	@ main.c:2804: 			tim = tim/TIM_US;
 6261 01a0 644F     		ldr	r7, .L479+28	@ tmp332,
 6262              	@ main.c:2807: 			if(tim>1000 || tim<700){ UaPutK("\r\n"); int2uart(n,7,0); int2uart(tim,6,3); }
 6263 01a2 DFF8D481 		ldr	r8, .L479+96	@ tmp374,
 6264 01a6 05E0     		b	.L465	@
 6265              	.L454:
 6266 01a8 BAF5967F 		cmp	r10, #300	@ _56,
 6267 01ac 18D8     		bhi	.L457	@,
 6268              	@ main.c:2800: 		for(u32 n=0;n<125;n++){
 6269 01ae 7C2D     		cmp	r5, #124	@ ivtmp.530,
 6270 01b0 25D0     		beq	.L478	@,
ARM GAS  /tmp/ccAYxbuo.s 			page 111


 6271              	.L455:
 6272 01b2 0135     		adds	r5, r5, #1	@ ivtmp.530, ivtmp.530,
 6273              	.L465:
 6274              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 6275 01b4 B368     		ldr	r3, [r6, #8]	@ _165, MEM[(struct SysTick_Type *)3758153744B].VAL
 6276 01b6 C9F80030 		str	r3, [r9]	@ _165, Timt
 6277              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 6278 01ba D9F80030 		ldr	r3, [r9]	@ Timt.81_162, Timt
 6279 01be B268     		ldr	r2, [r6, #8]	@ _163, MEM[(struct SysTick_Type *)3758153744B].VAL
 6280 01c0 9B1A     		subs	r3, r3, r2	@ _164, Timt.81_162, _163
 6281              	@ main.c:2804: 			tim = tim/TIM_US;
 6282 01c2 A7FB0324 		umull	r2, r4, r7, r3	@ tmp389, tmp331, tmp332, _164
 6283 01c6 6408     		lsrs	r4, r4, #1	@ _24, tmp331,
 6284              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 6285 01c8 0393     		str	r3, [sp, #12]	@ _164, MEM[(volatile u32 *)&tim]
 6286 01ca A4F52F7A 		sub	r10, r4, #700	@ _56, _24,
 6287              	@ main.c:2804: 			tim = tim/TIM_US;
 6288 01ce 0394     		str	r4, [sp, #12]	@ _24, tim
 6289              	@ main.c:2806: 			if(n%1000==0) UaPutK(".");
 6290 01d0 002D     		cmp	r5, #0	@ ivtmp.530
 6291 01d2 E9D1     		bne	.L454	@
 6292              	@ main.c:2806: 			if(n%1000==0) UaPutK(".");
 6293 01d4 5D48     		ldr	r0, .L479+52	@,
 6294 01d6 FFF7FEFF 		bl	UaPutK	@
 6295              	@ main.c:2807: 			if(tim>1000 || tim<700){ UaPutK("\r\n"); int2uart(n,7,0); int2uart(tim,6,3); }
 6296 01da BAF5967F 		cmp	r10, #300	@ _56,
 6297 01de E8D9     		bls	.L455	@,
 6298              	.L457:
 6299              	@ main.c:2807: 			if(tim>1000 || tim<700){ UaPutK("\r\n"); int2uart(n,7,0); int2uart(tim,6,3); }
 6300 01e0 4046     		mov	r0, r8	@, tmp374
 6301 01e2 FFF7FEFF 		bl	UaPutK	@
 6302 01e6 0022     		movs	r2, #0	@,
 6303 01e8 0721     		movs	r1, #7	@,
 6304 01ea 2846     		mov	r0, r5	@, ivtmp.530
 6305 01ec FFF7FEFF 		bl	int2uart	@
 6306 01f0 2046     		mov	r0, r4	@, _24
 6307 01f2 0322     		movs	r2, #3	@,
 6308 01f4 0621     		movs	r1, #6	@,
 6309 01f6 FFF7FEFF 		bl	int2uart	@
 6310              	@ main.c:2800: 		for(u32 n=0;n<125;n++){
 6311 01fa 7C2D     		cmp	r5, #124	@ ivtmp.530,
 6312 01fc D9D1     		bne	.L455	@,
 6313              	.L478:
 6314              	@ main.c:2809: 		UaPutS("\r\n Read Done !");
 6315 01fe 5448     		ldr	r0, .L479+56	@,
 6316 0200 FFF7FEFF 		bl	UaPutS	@
 6317              	@ main.c:2863: 	UaPutS("\r\n ");
 6318 0204 4848     		ldr	r0, .L479+16	@,
 6319 0206 FFF7FEFF 		bl	UaPutS	@
 6320              	@ main.c:2864: }
 6321 020a 0DF5057D 		add	sp, sp, #532	@,,
 6322              		@ sp needed	@
 6323 020e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 6324              	.L445:
 6325              	@ main.c:2710: 		UaPutK("\r\n FLASH memory Read = ");
 6326 0212 5048     		ldr	r0, .L479+60	@,
 6327 0214 FFF7FEFF 		bl	UaPutK	@
ARM GAS  /tmp/ccAYxbuo.s 			page 112


 6328              	@ main.c:2711: 		UaPutK("\r\n FLASH memory Read = ");
 6329 0218 4E48     		ldr	r0, .L479+60	@,
 6330 021a FFF7FEFF 		bl	UaPutK	@
 6331              	@ main.c:2713: 		strBlock = UART_getNum();
 6332 021e FFF7FEFF 		bl	UART_getNum	@
 6333              	@ main.c:2716: 		strBlock = strBlock > 254 ? 254 : strBlock;
 6334 0222 FE28     		cmp	r0, #254	@ tmp391,
 6335 0224 28BF     		it	cs
 6336 0226 FE20     		movcs	r0, #254	@ tmp391,
 6337 0228 0446     		mov	r4, r0	@ strBlock, tmp391
 6338              	@ main.c:2717: 		UaPutK("\r\n Flash memory Page ="); sint2uart(strBlock);
 6339 022a 4B48     		ldr	r0, .L479+64	@,
 6340 022c FFF7FEFF 		bl	UaPutK	@
 6341 0230 2046     		mov	r0, r4	@, strBlock
 6342              	@ main.c:2718: 		strBlock = 0x800*strBlock + 0x08000000;
 6343 0232 04F58034 		add	r4, r4, #65536	@ _2, strBlock,
 6344              	@ main.c:2717: 		UaPutK("\r\n Flash memory Page ="); sint2uart(strBlock);
 6345 0236 FFF7FEFF 		bl	sint2uart	@
 6346              	@ main.c:2718: 		strBlock = 0x800*strBlock + 0x08000000;
 6347 023a E402     		lsls	r4, r4, #11	@ ivtmp.585, _2,
 6348              	@ main.c:2726: 			UaPutS("\r\n ");
 6349 023c 3A48     		ldr	r0, .L479+16	@,
 6350 023e FFF7FEFF 		bl	UaPutS	@
 6351              	@ main.c:2728: 			hex2uart(strBlock, 8);
 6352 0242 2046     		mov	r0, r4	@, ivtmp.585
 6353 0244 0821     		movs	r1, #8	@,
 6354 0246 FFF7FEFF 		bl	hex2uart	@
 6355              	@ main.c:2723: 		p_buf = (u08 *) strBlock;
 6356 024a A346     		mov	fp, r4	@ p_buf, ivtmp.585
 6357              	@ main.c:2728: 			hex2uart(strBlock, 8);
 6358 024c 0025     		movs	r5, #0	@ ivtmp.587,
 6359              	.L448:
 6360              	@ main.c:2730: 				hex2uart(k, 2);
 6361 024e 2846     		mov	r0, r5	@, ivtmp.587
 6362 0250 0221     		movs	r1, #2	@,
 6363 0252 0135     		adds	r5, r5, #1	@ ivtmp.587, ivtmp.587,
 6364 0254 FFF7FEFF 		bl	hex2uart	@
 6365              	@ main.c:2729: 			for(u08 k=0;k<16;k++){
 6366 0258 102D     		cmp	r5, #16	@ ivtmp.587,
 6367 025a F8D1     		bne	.L448	@,
 6368              	@ main.c:2733: 			UaPutS("\r\n\n ");
 6369 025c 3348     		ldr	r0, .L479+20	@,
 6370 025e 04F12007 		add	r7, r4, #32	@ ivtmp.585, ivtmp.585,
 6371 0262 FFF7FEFF 		bl	UaPutS	@
 6372 0266 3E46     		mov	r6, r7	@ ivtmp.586, ivtmp.585
 6373              	@ main.c:2740: 				UaPutS("  ");
 6374 0268 DFF808A1 		ldr	r10, .L479+92	@ tmp384,
 6375              	@ main.c:2745: 				UaPutS("\r\n ");
 6376 026c DFF8B890 		ldr	r9, .L479+16	@ tmp385,
 6377 0270 04F50068 		add	r8, r4, #2048	@ _241, ivtmp.585,
 6378              	.L453:
 6379              	@ main.c:2736: 				hex2uart(strBlock + i, 8);	// memory
 6380 0274 0821     		movs	r1, #8	@,
 6381 0276 2046     		mov	r0, r4	@, ivtmp.585
 6382 0278 FFF7FEFF 		bl	hex2uart	@
 6383 027c 2546     		mov	r5, r4	@ ivtmp.578, ivtmp.585
 6384              	.L449:
ARM GAS  /tmp/ccAYxbuo.s 			page 113


 6385              	@ main.c:2738: 					hex2uart(p_buf[k+i], 2);
 6386 027e 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2	@, *_7
 6387 0282 0221     		movs	r1, #2	@,
 6388 0284 FFF7FEFF 		bl	hex2uart	@
 6389              	@ main.c:2737: 				for(u08 k=0;k<32;k++){
 6390 0288 B542     		cmp	r5, r6	@ ivtmp.578, ivtmp.586
 6391 028a F8D1     		bne	.L449	@,
 6392              	@ main.c:2740: 				UaPutS("  ");
 6393 028c 5046     		mov	r0, r10	@, tmp384
 6394 028e FFF7FEFF 		bl	UaPutS	@
 6395              	.L452:
 6396              	@ main.c:2742: 					if ( p_buf[k+i]<0x20 || p_buf[k+i]>127 ) UaPutC('.');
 6397 0292 2078     		ldrb	r0, [r4]	@ zero_extendqisi2	@ _13, *_12
 6398 0294 0134     		adds	r4, r4, #1	@ ivtmp.571, ivtmp.571,
 6399 0296 A0F12003 		sub	r3, r0, #32	@ tmp288, _13,
 6400 029a 5F2B     		cmp	r3, #95	@ tmp288,
 6401 029c 88BF     		it	hi
 6402 029e 2E20     		movhi	r0, #46	@,
 6403              	@ main.c:2743: 					else UaPutC(p_buf[k+i]);
 6404 02a0 FFF7FEFF 		bl	UaPutC	@
 6405              	@ main.c:2741: 				for(u08 k=0;k<32;k++){
 6406 02a4 AC42     		cmp	r4, r5	@ ivtmp.571, ivtmp.578
 6407 02a6 F4D1     		bne	.L452	@,
 6408              	@ main.c:2745: 				UaPutS("\r\n ");
 6409 02a8 4846     		mov	r0, r9	@, tmp385
 6410 02aa FFF7FEFF 		bl	UaPutS	@
 6411              	@ main.c:2734: 			for(u32 i=0;i<2048;i+=32){
 6412 02ae 4745     		cmp	r7, r8	@ ivtmp.585, _241
 6413 02b0 06F12006 		add	r6, r6, #32	@ ivtmp.586, ivtmp.586,
 6414 02b4 3C46     		mov	r4, r7	@ ivtmp.585, ivtmp.585
 6415 02b6 24D0     		beq	.L474	@,
 6416 02b8 2037     		adds	r7, r7, #32	@ ivtmp.585, ivtmp.585,
 6417 02ba DBE7     		b	.L453	@
 6418              	.L446:
 6419              	@ main.c:2777: 		UaPutK("\r\n Godzina = ");
 6420 02bc 2748     		ldr	r0, .L479+68	@,
 6421 02be FFF7FEFF 		bl	UaPutK	@
 6422              	@ main.c:2778: 		datetime.hor = UART_getNum();
 6423 02c2 FFF7FEFF 		bl	UART_getNum	@
 6424 02c6 264C     		ldr	r4, .L479+72	@ tmp309,
 6425 02c8 A070     		strb	r0, [r4, #2]	@, datetime.hor
 6426              	@ main.c:2779: 		UaPutK("\r\n Minut   = ");
 6427 02ca 2648     		ldr	r0, .L479+76	@,
 6428 02cc FFF7FEFF 		bl	UaPutK	@
 6429              	@ main.c:2780: 		datetime.min = UART_getNum();
 6430 02d0 FFF7FEFF 		bl	UART_getNum	@
 6431 02d4 6070     		strb	r0, [r4, #1]	@, datetime.min
 6432              	@ main.c:2781: 		UaPutK("\r\n Sekunda = ");
 6433 02d6 2448     		ldr	r0, .L479+80	@,
 6434 02d8 FFF7FEFF 		bl	UaPutK	@
 6435              	@ main.c:2782: 		datetime.sec = UART_getNum();
 6436 02dc FFF7FEFF 		bl	UART_getNum	@
 6437              	@ main.c:2786: 		datetime.mdy=18;		// 1..31	dzien miesiaca
 6438 02e0 0B23     		movs	r3, #11	@ tmp321,
 6439              	@ main.c:2784: 		datetime.yer=2016;	// 1970..2106
 6440 02e2 4FF4FC61 		mov	r1, #2016	@ tmp317,
 6441              	@ main.c:2789: 		datetime.sec=30;		// 0..59	sekunda
ARM GAS  /tmp/ccAYxbuo.s 			page 114


 6442 02e6 214A     		ldr	r2, .L479+84	@ tmp319,
 6443              	@ main.c:2790: 		rtc_SetTime(&datetime );
 6444 02e8 2046     		mov	r0, r4	@, tmp309
 6445              	@ main.c:2789: 		datetime.sec=30;		// 0..59	sekunda
 6446 02ea 2260     		str	r2, [r4]	@ tmp319, MEM[(unsigned char *)&datetime]
 6447              	@ main.c:2786: 		datetime.mdy=18;		// 1..31	dzien miesiaca
 6448 02ec 2371     		strb	r3, [r4, #4]	@ tmp321, MEM[(unsigned char *)&datetime + 4B]
 6449              	@ main.c:2784: 		datetime.yer=2016;	// 1970..2106
 6450 02ee E180     		strh	r1, [r4, #6]	@ movhi	@ tmp317, datetime.yer
 6451              	@ main.c:2790: 		rtc_SetTime(&datetime );
 6452 02f0 FFF7FEFF 		bl	rtc_SetTime	@
 6453              	@ main.c:2863: 	UaPutS("\r\n ");
 6454 02f4 0C48     		ldr	r0, .L479+16	@,
 6455 02f6 FFF7FEFF 		bl	UaPutS	@
 6456              	@ main.c:2864: }
 6457 02fa 0DF5057D 		add	sp, sp, #532	@,,
 6458              		@ sp needed	@
 6459 02fe BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 6460              	.L474:
 6461              	@ main.c:2750: 			crc16_spi2((u16*)p_buf,2048, &crc16 );
 6462 0302 5846     		mov	r0, fp	@, p_buf
 6463 0304 0DF10A02 		add	r2, sp, #10	@ tmp392,,
 6464 0308 4FF40061 		mov	r1, #2048	@,
 6465 030c FEE6     		b	.L477	@
 6466              	.L458:
 6467              	@ main.c:2857: 		} else UaPutK("\r\n Read Error !!!");
 6468 030e 1848     		ldr	r0, .L479+88	@,
 6469 0310 FFF7FEFF 		bl	UaPutK	@
 6470 0314 04E7     		b	.L440	@
 6471              	.L480:
 6472 0316 00BF     		.align	2
 6473              	.L479:
 6474 0318 DC000000 		.word	.LC89
 6475 031c E8000000 		.word	.LC90
 6476 0320 10E000E0 		.word	-536813552
 6477 0324 00000000 		.word	Timt
 6478 0328 30000000 		.word	.LC77
 6479 032c 34000000 		.word	.LC78
 6480 0330 FC000000 		.word	.LC91
 6481 0334 398EE338 		.word	954437177
 6482 0338 40000000 		.word	.LC80
 6483 033c 48000000 		.word	.LC81
 6484 0340 60000000 		.word	.LC82
 6485 0344 D0000000 		.word	.LC88
 6486 0348 B0000000 		.word	.LC86
 6487 034c 00000000 		.word	.LC17
 6488 0350 C0000000 		.word	.LC87
 6489 0354 00000000 		.word	.LC75
 6490 0358 18000000 		.word	.LC76
 6491 035c 80000000 		.word	.LC83
 6492 0360 00000000 		.word	.LANCHOR28
 6493 0364 90000000 		.word	.LC84
 6494 0368 A0000000 		.word	.LC85
 6495 036c 1E320A12 		.word	302658078
 6496 0370 08010000 		.word	.LC92
 6497 0374 3C000000 		.word	.LC79
 6498 0378 04000000 		.word	.LC13
ARM GAS  /tmp/ccAYxbuo.s 			page 115


 6499              		.size	fun_tool, .-fun_tool
 6500              		.section	.text.qtouch_mesaure,"ax",%progbits
 6501              		.align	1
 6502              		.p2align 2,,3
 6503              		.global	qtouch_mesaure
 6504              		.syntax unified
 6505              		.thumb
 6506              		.thumb_func
 6507              		.fpu softvfp
 6508              		.type	qtouch_mesaure, %function
 6509              	qtouch_mesaure:
 6510              		@ args = 0, pretend = 0, frame = 0
 6511              		@ frame_needed = 0, uses_anonymous_args = 0
 6512              		@ link register save eliminated.
 6513              	@ main.c:3208: 		PE2_o = 0;
 6514 0000 0021     		movs	r1, #0	@ tmp118,
 6515 0002 0E4B     		ldr	r3, .L490	@ tmp117,
 6516              	@ main.c:3209: 		while(PE4_i == 1);
 6517 0004 0E4A     		ldr	r2, .L490+4	@ tmp119,
 6518              	@ main.c:3208: 		PE2_o = 0;
 6519 0006 1960     		str	r1, [r3]	@ tmp118, MEM[(volatile long unsigned int *)1109590408B]
 6520              	.L482:
 6521              	@ main.c:3209: 		while(PE4_i == 1);
 6522 0008 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109590288B]
 6523 000a 012B     		cmp	r3, #1	@ _1,
 6524 000c FCD0     		beq	.L482	@,
 6525              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 6526 000e 0D4B     		ldr	r3, .L490+8	@ tmp120,
 6527 0010 0D49     		ldr	r1, .L490+12	@ tmp131,
 6528              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 6529 0012 1846     		mov	r0, r3	@ tmp123, tmp120
 6530              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 6531 0014 9B68     		ldr	r3, [r3, #8]	@ _10, MEM[(struct SysTick_Type *)3758153744B].VAL
 6532 0016 0B60     		str	r3, [r1]	@ _10, delay_us
 6533              	.L483:
 6534              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 6535 0018 0B68     		ldr	r3, [r1]	@ delay_us.82_11, delay_us
 6536 001a 8268     		ldr	r2, [r0, #8]	@ _12, MEM[(struct SysTick_Type *)3758153744B].VAL
 6537 001c 9B1A     		subs	r3, r3, r2	@ tmp124, delay_us.82_11, _12
 6538 001e 112B     		cmp	r3, #17	@ tmp124,
 6539 0020 FAD9     		bls	.L483	@,
 6540              	@ main.c:3211: 		PE2_o = 1;
 6541 0022 0121     		movs	r1, #1	@ tmp126,
 6542              	@ main.c:3207: 		u32 i=0;
 6543 0024 0020     		movs	r0, #0	@ <retval>,
 6544              	@ main.c:3211: 		PE2_o = 1;
 6545 0026 054B     		ldr	r3, .L490	@ tmp125,
 6546              	@ main.c:3212: 		do{i++;} while (PE4_i == 0);
 6547 0028 054A     		ldr	r2, .L490+4	@ tmp127,
 6548              	@ main.c:3211: 		PE2_o = 1;
 6549 002a 1960     		str	r1, [r3]	@ tmp126, MEM[(volatile long unsigned int *)1109590408B]
 6550              	.L484:
 6551              	@ main.c:3212: 		do{i++;} while (PE4_i == 0);
 6552 002c 1368     		ldr	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109590288B]
 6553 002e 0130     		adds	r0, r0, #1	@ <retval>, <retval>,
 6554 0030 002B     		cmp	r3, #0	@ _2
 6555 0032 FBD0     		beq	.L484	@
ARM GAS  /tmp/ccAYxbuo.s 			page 116


 6556              	@ main.c:3213: 		PE2_o = 0;
 6557 0034 0022     		movs	r2, #0	@ tmp129,
 6558 0036 014B     		ldr	r3, .L490	@ tmp128,
 6559 0038 1A60     		str	r2, [r3]	@ tmp129, MEM[(volatile long unsigned int *)1109590408B]
 6560              	@ main.c:3215: 	}
 6561 003a 7047     		bx	lr	@
 6562              	.L491:
 6563              		.align	2
 6564              	.L490:
 6565 003c 88012342 		.word	1109590408
 6566 0040 10012342 		.word	1109590288
 6567 0044 10E000E0 		.word	-536813552
 6568 0048 00000000 		.word	delay_us
 6569              		.size	qtouch_mesaure, .-qtouch_mesaure
 6570              		.section	.text.qtouch,"ax",%progbits
 6571              		.align	1
 6572              		.p2align 2,,3
 6573              		.global	qtouch
 6574              		.syntax unified
 6575              		.thumb
 6576              		.thumb_func
 6577              		.fpu softvfp
 6578              		.type	qtouch, %function
 6579              	qtouch:
 6580              		@ args = 0, pretend = 0, frame = 0
 6581              		@ frame_needed = 0, uses_anonymous_args = 0
 6582              	@ main.c:3218: 		GPIOE->CRL = (GPIOE->CRL & 0xfff0f0ff) | 0x00040300;	
 6583 0000 114A     		ldr	r2, .L497	@ tmp119,
 6584              	@ main.c:3216: void qtouch(void)					{
 6585 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 6586              	@ main.c:3218: 		GPIOE->CRL = (GPIOE->CRL & 0xfff0f0ff) | 0x00040300;	
 6587 0006 1368     		ldr	r3, [r2]	@ _1, MEM[(struct GPIO_TypeDef *)1073813504B].CRL
 6588 0008 104D     		ldr	r5, .L497+4	@ tmp131,
 6589 000a 23F47023 		bic	r3, r3, #983040	@ tmp120, _1,
 6590 000e 23F47063 		bic	r3, r3, #3840	@ tmp120, tmp120,
 6591 0012 43F48023 		orr	r3, r3, #262144	@ _3, tmp120,
 6592 0016 43F44073 		orr	r3, r3, #768	@ _3, _3,
 6593              	@ main.c:3220: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL) ){
 6594 001a 0D4C     		ldr	r4, .L497+8	@ tmp125,
 6595 001c 0D4E     		ldr	r6, .L497+12	@ tmp127,
 6596              	@ main.c:3223: 				UaPutS("\r\n QT =");		sint2uart(qt);
 6597 001e DFF83880 		ldr	r8, .L497+16	@ tmp132,
 6598              	@ main.c:3218: 		GPIOE->CRL = (GPIOE->CRL & 0xfff0f0ff) | 0x00040300;	
 6599 0022 1360     		str	r3, [r2]	@ _3, MEM[(struct GPIO_TypeDef *)1073813504B].CRL
 6600              	.L493:
 6601              	@ main.c:3220: 			if(STCLK_MS*500 < (trg0 - SysTick->VAL) ){
 6602 0024 2B68     		ldr	r3, [r5]	@ trg0.205_4, trg0
 6603 0026 A268     		ldr	r2, [r4, #8]	@ _5, MEM[(struct SysTick_Type *)3758153744B].VAL
 6604 0028 9B1A     		subs	r3, r3, r2	@ tmp126, trg0.205_4, _5
 6605 002a B342     		cmp	r3, r6	@ tmp126, tmp127
 6606 002c FAD9     		bls	.L493	@,
 6607              	@ main.c:3221: 				trg0 = SysTick->VAL;
 6608 002e A368     		ldr	r3, [r4, #8]	@ _7, MEM[(struct SysTick_Type *)3758153744B].VAL
 6609 0030 2B60     		str	r3, [r5]	@ _7, trg0
 6610              	@ main.c:3222: 				qt = qtouch_mesaure();
 6611 0032 FFF7FEFF 		bl	qtouch_mesaure	@
 6612 0036 0746     		mov	r7, r0	@ qt,
ARM GAS  /tmp/ccAYxbuo.s 			page 117


 6613              	@ main.c:3223: 				UaPutS("\r\n QT =");		sint2uart(qt);
 6614 0038 4046     		mov	r0, r8	@, tmp132
 6615 003a FFF7FEFF 		bl	UaPutS	@
 6616 003e 3846     		mov	r0, r7	@, qt
 6617 0040 FFF7FEFF 		bl	sint2uart	@
 6618 0044 EEE7     		b	.L493	@
 6619              	.L498:
 6620 0046 00BF     		.align	2
 6621              	.L497:
 6622 0048 00180140 		.word	1073813504
 6623 004c 00000000 		.word	trg0
 6624 0050 10E000E0 		.word	-536813552
 6625 0054 20AA4400 		.word	4500000
 6626 0058 00000000 		.word	.LC93
 6627              		.size	qtouch, .-qtouch
 6628              		.section	.text.DHT_Tool,"ax",%progbits
 6629              		.align	1
 6630              		.p2align 2,,3
 6631              		.global	DHT_Tool
 6632              		.syntax unified
 6633              		.thumb
 6634              		.thumb_func
 6635              		.fpu softvfp
 6636              		.type	DHT_Tool, %function
 6637              	DHT_Tool:
 6638              		@ args = 0, pretend = 0, frame = 0
 6639              		@ frame_needed = 0, uses_anonymous_args = 0
 6640              		@ link register save eliminated.
 6641              	@ main.c:3417: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6642 0000 0A49     		ldr	r1, .L500	@ tmp116,
 6643              	@ main.c:3418: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 6644 0002 0B4A     		ldr	r2, .L500+4	@ tmp121,
 6645              	@ main.c:3417: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6646 0004 4B68     		ldr	r3, [r1, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 6647              	@ main.c:3421: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 6648 0006 0B48     		ldr	r0, .L500+8	@ tmp124,
 6649              	@ main.c:3417: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6650 0008 23F0F023 		bic	r3, r3, #-268374016	@ tmp117, _1,
 6651 000c 23F47023 		bic	r3, r3, #983040	@ tmp117, tmp117,
 6652 0010 43F01023 		orr	r3, r3, #268439552	@ _3, tmp117,
 6653 0014 43F48033 		orr	r3, r3, #65536	@ _3, _3,
 6654 0018 4B60     		str	r3, [r1, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 6655              	@ main.c:3418: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 6656 001a 1368     		ldr	r3, [r2]	@ _4, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 6657              	@ main.c:3421: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 6658 001c 0649     		ldr	r1, .L500+12	@ tmp125,
 6659              	@ main.c:3418: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 6660 001e 23F47F23 		bic	r3, r3, #1044480	@ tmp122, _4,
 6661 0022 43F48833 		orr	r3, r3, #69632	@ _6, tmp122,
 6662 0026 1360     		str	r3, [r2]	@ _6, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 6663              	@ main.c:3421: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 6664 0028 0160     		str	r1, [r0]	@ tmp125, oled_hw.mosi
 6665              	@ main.c:3423: }
 6666 002a 7047     		bx	lr	@
 6667              	.L501:
 6668              		.align	2
 6669              	.L500:
ARM GAS  /tmp/ccAYxbuo.s 			page 118


 6670 002c 00080140 		.word	1073809408
 6671 0030 000C0140 		.word	1073810432
 6672 0034 00000000 		.word	oled_hw
 6673 0038 8C812142 		.word	1109492108
 6674              		.size	DHT_Tool, .-DHT_Tool
 6675              		.section	.text.SPI_Tool_Menu,"ax",%progbits
 6676              		.align	1
 6677              		.p2align 2,,3
 6678              		.global	SPI_Tool_Menu
 6679              		.syntax unified
 6680              		.thumb
 6681              		.thumb_func
 6682              		.fpu softvfp
 6683              		.type	SPI_Tool_Menu, %function
 6684              	SPI_Tool_Menu:
 6685              		@ args = 0, pretend = 0, frame = 0
 6686              		@ frame_needed = 0, uses_anonymous_args = 0
 6687 0000 08B5     		push	{r3, lr}	@
 6688              	@ main.c:3425: 	UaPutK("\n\r\n======= STM32F1 SPI TOOL =========================\r\n");
 6689 0002 0848     		ldr	r0, .L504	@,
 6690 0004 FFF7FEFF 		bl	UaPutK	@
 6691              	@ main.c:3426: 	UaPutK(" i - Init      r - Read  sector  e -                \r\n");
 6692 0008 0748     		ldr	r0, .L504+4	@,
 6693 000a FFF7FEFF 		bl	UaPutK	@
 6694              	@ main.c:3427: 	UaPutK(" d - Delete    f - Write sector  s -                \r\n");
 6695 000e 0748     		ldr	r0, .L504+8	@,
 6696 0010 FFF7FEFF 		bl	UaPutK	@
 6697              	@ main.c:3428: 	UaPutK(" m - Modf      c - Copy  sector  n -               \r\n");
 6698 0014 0648     		ldr	r0, .L504+12	@,
 6699 0016 FFF7FEFF 		bl	UaPutK	@
 6700              	@ main.c:3430: }
 6701 001a BDE80840 		pop	{r3, lr}	@
 6702              	@ main.c:3429: 	UaPutK("==================================================\r\n > ");
 6703 001e 0548     		ldr	r0, .L504+16	@,
 6704 0020 FFF7FEBF 		b	UaPutK	@
 6705              	.L505:
 6706              		.align	2
 6707              	.L504:
 6708 0024 00000000 		.word	.LC94
 6709 0028 38000000 		.word	.LC95
 6710 002c 70000000 		.word	.LC96
 6711 0030 A8000000 		.word	.LC97
 6712 0034 94000000 		.word	.LC44
 6713              		.size	SPI_Tool_Menu, .-SPI_Tool_Menu
 6714              		.section	.text.SPI_Tool,"ax",%progbits
 6715              		.align	1
 6716              		.p2align 2,,3
 6717              		.global	SPI_Tool
 6718              		.syntax unified
 6719              		.thumb
 6720              		.thumb_func
 6721              		.fpu softvfp
 6722              		.type	SPI_Tool, %function
 6723              	SPI_Tool:
 6724              		@ args = 0, pretend = 0, frame = 16
 6725              		@ frame_needed = 0, uses_anonymous_args = 0
 6726              	@ main.c:3438: 	LED=1;
ARM GAS  /tmp/ccAYxbuo.s 			page 119


 6727 0000 0122     		movs	r2, #1	@ tmp125,
 6728 0002 444B     		ldr	r3, .L519	@ tmp124,
 6729              	@ main.c:3440: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6730 0004 4449     		ldr	r1, .L519+4	@ tmp126,
 6731              	@ main.c:3431: void SPI_Tool(void)				{
 6732 0006 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 6733              	@ main.c:3438: 	LED=1;
 6734 000a 1A60     		str	r2, [r3]	@ tmp125, MEM[(volatile long unsigned int *)1109524916B]
 6735              	@ main.c:3440: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6736 000c 4B68     		ldr	r3, [r1, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 6737              	@ main.c:3441: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 6738 000e 434A     		ldr	r2, .L519+8	@ tmp131,
 6739              	@ main.c:3440: 		GPIOA->CRH = (GPIOA->CRH & 0x0ff00fff) | 0x10011000;
 6740 0010 23F0F023 		bic	r3, r3, #-268374016	@ tmp127, _1,
 6741 0014 23F47023 		bic	r3, r3, #983040	@ tmp127, tmp127,
 6742 0018 43F01023 		orr	r3, r3, #268439552	@ _3, tmp127,
 6743 001c 43F48033 		orr	r3, r3, #65536	@ _3, _3,
 6744 0020 4B60     		str	r3, [r1, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073809408B].CRH
 6745              	@ main.c:3441: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 6746 0022 1368     		ldr	r3, [r2]	@ _4, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 6747              	@ main.c:3443: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 6748 0024 3E48     		ldr	r0, .L519+12	@ tmp134,
 6749              	@ main.c:3441: 		GPIOB->CRL = (GPIOB->CRL & 0xfff00fff) | 0x00011000;
 6750 0026 23F47F23 		bic	r3, r3, #1044480	@ tmp132, _4,
 6751 002a 43F48833 		orr	r3, r3, #69632	@ _6, tmp132,
 6752 002e 1360     		str	r3, [r2]	@ _6, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 6753              	@ main.c:3443: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 6754 0030 3C4E     		ldr	r6, .L519+16	@ tmp135,
 6755              	@ main.c:3444: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 6756 0032 3D49     		ldr	r1, .L519+20	@ tmp137,
 6757              	@ main.c:3445: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 6758 0034 3D4D     		ldr	r5, .L519+24	@ tmp139,
 6759              	@ main.c:3446: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 6760 0036 3E4A     		ldr	r2, .L519+28	@ tmp141,
 6761              	@ main.c:3447: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 6762 0038 3E4C     		ldr	r4, .L519+32	@ tmp143,
 6763              	@ main.c:3431: void SPI_Tool(void)				{
 6764 003a 84B0     		sub	sp, sp, #16	@,,
 6765              	@ main.c:3443: 		oled_hw.sck  = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,4);
 6766 003c 4660     		str	r6, [r0, #4]	@ tmp135, oled_hw.sck
 6767              	@ main.c:3451: 	int2str(12345678 ,tbuf,8,0);		
 6768 003e 0023     		movs	r3, #0	@,
 6769              	@ main.c:3444: 		oled_hw.mosi = (u32*) m_BITBAND_PERIPH(&GPIOB->ODR,3);
 6770 0040 0160     		str	r1, [r0]	@ tmp137, oled_hw.mosi
 6771              	@ main.c:3445: 		oled_hw.dc   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,12);
 6772 0042 8560     		str	r5, [r0, #8]	@ tmp139, oled_hw.dc
 6773              	@ main.c:3451: 	int2str(12345678 ,tbuf,8,0);		
 6774 0044 01A9     		add	r1, sp, #4	@ tmp175,,
 6775              	@ main.c:3446: 		oled_hw.cs   = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,11);
 6776 0046 C260     		str	r2, [r0, #12]	@ tmp141, oled_hw.cs
 6777              	@ main.c:3447: 		oled_hw.rst  = (u32*) m_BITBAND_PERIPH(&GPIOA->ODR,15);
 6778 0048 0461     		str	r4, [r0, #16]	@ tmp143, oled_hw.rst
 6779              	@ main.c:3451: 	int2str(12345678 ,tbuf,8,0);		
 6780 004a 0822     		movs	r2, #8	@,
 6781 004c 3A48     		ldr	r0, .L519+36	@,
 6782 004e FFF7FEFF 		bl	int2str	@
 6783              	@ main.c:3452: 	oled_num24(0, 4,tbuf);
ARM GAS  /tmp/ccAYxbuo.s 			page 120


 6784 0052 01AA     		add	r2, sp, #4	@ tmp176,,
 6785 0054 0421     		movs	r1, #4	@,
 6786 0056 0020     		movs	r0, #0	@,
 6787 0058 FFF7FEFF 		bl	oled_num24	@
 6788              	@ main.c:3453: 	oled_num24(0, 0,tbuf);
 6789 005c 0021     		movs	r1, #0	@,
 6790 005e 01AA     		add	r2, sp, #4	@ tmp177,,
 6791 0060 0846     		mov	r0, r1	@,
 6792 0062 FFF7FEFF 		bl	oled_num24	@
 6793              	@ main.c:3454: 	oled_refresh_gram();	
 6794 0066 FFF7FEFF 		bl	oled_refresh_gram	@
 6795              	@ main.c:3457: 	SPI2_init();
 6796 006a FFF7FEFF 		bl	SPI2_init	@
 6797 006e 334D     		ldr	r5, .L519+40	@ tmp171,
 6798              	@ main.c:3470: 		UaPutK("\r\n ");
 6799 0070 334C     		ldr	r4, .L519+44	@ tmp172,
 6800              	@ main.c:3476: 			UaPutK("\r\nInit spi    = "); uint2uart(1);
 6801 0072 344F     		ldr	r7, .L519+48	@ tmp173,
 6802              	@ main.c:3481: 			SPI2_CS = 0; 
 6803 0074 2036     		adds	r6, r6, #32	@ tmp174, tmp174,
 6804              	.L507:
 6805              	@ main.c:3464: 		SPI_Tool_Menu();
 6806 0076 FFF7FEFF 		bl	SPI_Tool_Menu	@
 6807              	@ main.c:3465: 		while(!p_Fifo1->rct);
 6808 007a 2A68     		ldr	r2, [r5]	@ p_Fifo1.207_7, p_Fifo1
 6809              	.L508:
 6810              	@ main.c:3465: 		while(!p_Fifo1->rct);
 6811 007c 9388     		ldrh	r3, [r2, #4]	@, p_Fifo1.207_7->rct
 6812 007e 9BB2     		uxth	r3, r3	@ _8, p_Fifo1.207_7->rct
 6813 0080 002B     		cmp	r3, #0	@ _8
 6814 0082 FBD0     		beq	.L508	@
 6815              	@ main.c:3468: 		UART_getChar((char*)&switcH);
 6816 0084 0DF10300 		add	r0, sp, #3	@ tmp178,,
 6817 0088 FFF7FEFF 		bl	UART_getChar	@
 6818              	@ main.c:3470: 		UaPutK("\r\n ");
 6819 008c 2046     		mov	r0, r4	@, tmp172
 6820 008e FFF7FEFF 		bl	UaPutK	@
 6821              	@ main.c:3471: 		switch (switcH)	{
 6822 0092 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2	@ switcH, switcH
 6823 0096 692B     		cmp	r3, #105	@ switcH,
 6824 0098 07D0     		beq	.L510	@,
 6825 009a 722B     		cmp	r3, #114	@ switcH,
 6826 009c 21D0     		beq	.L511	@,
 6827 009e 632B     		cmp	r3, #99	@ switcH,
 6828 00a0 0CD0     		beq	.L518	@,
 6829              	@ main.c:3499: 			UaPutK("Nieznana Komenda");
 6830 00a2 2948     		ldr	r0, .L519+52	@,
 6831 00a4 FFF7FEFF 		bl	UaPutK	@
 6832              	@ main.c:3500: 			break;
 6833 00a8 E5E7     		b	.L507	@
 6834              	.L510:
 6835              	@ main.c:3475: 			SPI2_init();
 6836 00aa FFF7FEFF 		bl	SPI2_init	@
 6837              	@ main.c:3476: 			UaPutK("\r\nInit spi    = "); uint2uart(1);
 6838 00ae 3846     		mov	r0, r7	@, tmp173
 6839 00b0 FFF7FEFF 		bl	UaPutK	@
 6840 00b4 0120     		movs	r0, #1	@,
ARM GAS  /tmp/ccAYxbuo.s 			page 121


 6841 00b6 FFF7FEFF 		bl	uint2uart	@
 6842              	@ main.c:3478: 			break;
 6843 00ba DCE7     		b	.L507	@
 6844              	.L518:
 6845              	@ main.c:3490: 			UaPutK("Copy memory");
 6846 00bc 2348     		ldr	r0, .L519+56	@,
 6847 00be FFF7FEFF 		bl	UaPutK	@
 6848              	@ main.c:3491: 			UaPutK("\r\n Src Mem adr = 0x");	reg=UART_getHex();
 6849 00c2 2348     		ldr	r0, .L519+60	@,
 6850 00c4 FFF7FEFF 		bl	UaPutK	@
 6851 00c8 FFF7FEFF 		bl	UART_getHex	@
 6852              	@ main.c:3492: 			UaPutK("\r\n How many byte = ");	reg=UART_getNum();
 6853 00cc 2148     		ldr	r0, .L519+64	@,
 6854 00ce FFF7FEFF 		bl	UaPutK	@
 6855 00d2 FFF7FEFF 		bl	UART_getNum	@
 6856              	@ main.c:3493: 			UaPutK("\r\n Dst mem adr = 0x");	reg=UART_getHex();
 6857 00d6 2048     		ldr	r0, .L519+68	@,
 6858 00d8 FFF7FEFF 		bl	UaPutK	@
 6859 00dc FFF7FEFF 		bl	UART_getHex	@
 6860              	@ main.c:3496: 			break;
 6861 00e0 C9E7     		b	.L507	@
 6862              	.L511:
 6863              	@ main.c:3481: 			SPI2_CS = 0; 
 6864 00e2 4FF00008 		mov	r8, #0	@ tmp156,
 6865              	@ main.c:3482: 			UaPutK("\r\n Reg = ");	reg=UART_getNum();
 6866 00e6 1D48     		ldr	r0, .L519+72	@,
 6867              	@ main.c:3481: 			SPI2_CS = 0; 
 6868 00e8 C6F80080 		str	r8, [r6]	@ tmp156, MEM[(volatile long unsigned int *)1109492144B]
 6869              	@ main.c:3482: 			UaPutK("\r\n Reg = ");	reg=UART_getNum();
 6870 00ec FFF7FEFF 		bl	UaPutK	@
 6871 00f0 FFF7FEFF 		bl	UART_getNum	@
 6872              	@ main.c:3483: 			spi2_rw(reg);						// Read status register
 6873 00f4 C0B2     		uxtb	r0, r0	@,
 6874 00f6 FFF7FEFF 		bl	spi2_rw	@
 6875              	@ main.c:3484: 			UaPutK("\r\n Reg = ");	hex2uart(spi2_rw(0x00),2);
 6876 00fa 1848     		ldr	r0, .L519+72	@,
 6877 00fc FFF7FEFF 		bl	UaPutK	@
 6878 0100 4046     		mov	r0, r8	@, tmp156
 6879 0102 FFF7FEFF 		bl	spi2_rw	@
 6880 0106 0221     		movs	r1, #2	@,
 6881 0108 FFF7FEFF 		bl	hex2uart	@
 6882              	@ main.c:3485: 			SPI2_CS = 1;			
 6883 010c 0123     		movs	r3, #1	@ tmp164,
 6884 010e 3360     		str	r3, [r6]	@ tmp164, MEM[(volatile long unsigned int *)1109492144B]
 6885              	@ main.c:3487: 			break;
 6886 0110 B1E7     		b	.L507	@
 6887              	.L520:
 6888 0112 00BF     		.align	2
 6889              	.L519:
 6890 0114 B4012242 		.word	1109524916
 6891 0118 00080140 		.word	1073809408
 6892 011c 000C0140 		.word	1073810432
 6893 0120 00000000 		.word	oled_hw
 6894 0124 90812142 		.word	1109492112
 6895 0128 8C812142 		.word	1109492108
 6896 012c B0012142 		.word	1109459376
 6897 0130 AC012142 		.word	1109459372
ARM GAS  /tmp/ccAYxbuo.s 			page 122


 6898 0134 BC012142 		.word	1109459388
 6899 0138 4E61BC00 		.word	12345678
 6900 013c 00000000 		.word	p_Fifo1
 6901 0140 30000000 		.word	.LC77
 6902 0144 00000000 		.word	.LC98
 6903 0148 68000000 		.word	.LC104
 6904 014c 20000000 		.word	.LC100
 6905 0150 2C000000 		.word	.LC101
 6906 0154 40000000 		.word	.LC102
 6907 0158 54000000 		.word	.LC103
 6908 015c 14000000 		.word	.LC99
 6909              		.size	SPI_Tool, .-SPI_Tool
 6910              		.section	.text.Menu1,"ax",%progbits
 6911              		.align	1
 6912              		.p2align 2,,3
 6913              		.global	Menu1
 6914              		.syntax unified
 6915              		.thumb
 6916              		.thumb_func
 6917              		.fpu softvfp
 6918              		.type	Menu1, %function
 6919              	Menu1:
 6920              		@ args = 0, pretend = 0, frame = 0
 6921              		@ frame_needed = 0, uses_anonymous_args = 0
 6922 0000 08B5     		push	{r3, lr}	@
 6923              	@ main.c:3950: 	UaPutK("\n\r\n======= STM32F4 SD/MMC Card ======================\r\n");
 6924 0002 0848     		ldr	r0, .L523	@,
 6925 0004 FFF7FEFF 		bl	UaPutK	@
 6926              	@ main.c:3951: 	UaPutK(" i - Init      r - Read  sector  e - Erase sector   \r\n");
 6927 0008 0748     		ldr	r0, .L523+4	@,
 6928 000a FFF7FEFF 		bl	UaPutK	@
 6929              	@ main.c:3952: 	UaPutK(" d - Delete    f - Write sector  s - Statistic Card \r\n");
 6930 000e 0748     		ldr	r0, .L523+8	@,
 6931 0010 FFF7FEFF 		bl	UaPutK	@
 6932              	@ main.c:3953: 	UaPutK(" m - Modf mem  c - Copy  sector  n - Next Cluster  \r\n");
 6933 0014 0648     		ldr	r0, .L523+12	@,
 6934 0016 FFF7FEFF 		bl	UaPutK	@
 6935              	@ main.c:3955: }
 6936 001a BDE80840 		pop	{r3, lr}	@
 6937              	@ main.c:3954: 	UaPutK("==================================================\r\n > ");
 6938 001e 0548     		ldr	r0, .L523+16	@,
 6939 0020 FFF7FEBF 		b	UaPutK	@
 6940              	.L524:
 6941              		.align	2
 6942              	.L523:
 6943 0024 00000000 		.word	.LC105
 6944 0028 38000000 		.word	.LC106
 6945 002c 70000000 		.word	.LC107
 6946 0030 A8000000 		.word	.LC108
 6947 0034 94000000 		.word	.LC44
 6948              		.size	Menu1, .-Menu1
 6949              		.section	.text.MemCard_Menu,"ax",%progbits
 6950              		.align	1
 6951              		.p2align 2,,3
 6952              		.global	MemCard_Menu
 6953              		.syntax unified
 6954              		.thumb
ARM GAS  /tmp/ccAYxbuo.s 			page 123


 6955              		.thumb_func
 6956              		.fpu softvfp
 6957              		.type	MemCard_Menu, %function
 6958              	MemCard_Menu:
 6959              		@ args = 0, pretend = 0, frame = 40
 6960              		@ frame_needed = 0, uses_anonymous_args = 0
 6961              	@ main.c:3960: 	u16 crc=1,x=0,y1=0,y2=0;
 6962 0000 0123     		movs	r3, #1	@ tmp371,
 6963              	@ main.c:3956: void MemCard_Menu(void)		{
 6964 0002 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 6965 0006 8DB0     		sub	sp, sp, #52	@,,
 6966              	@ main.c:3960: 	u16 crc=1,x=0,y1=0,y2=0;
 6967 0008 ADF81E30 		strh	r3, [sp, #30]	@ movhi	@ tmp371, crc
 6968              	@ main.c:3962: 	TFT_Init();
 6969 000c FFF7FEFF 		bl	TFT_Init	@
 6970              	@ main.c:3963: 	TFT_Clear(BLACK);
 6971 0010 0020     		movs	r0, #0	@,
 6972 0012 FFF7FEFF 		bl	TFT_Clear	@
 6973              	@ main.c:3972: 	crc16_spi2_init();
 6974 0016 FFF7FEFF 		bl	crc16_spi2_init	@
 6975              	@ main.c:3974: 	if(dinit){
 6976 001a A94B     		ldr	r3, .L639	@ tmp701,
 6977 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2	@ dinit, dinit
 6978 001e 002B     		cmp	r3, #0	@ dinit
 6979 0020 00F01084 		beq	.L526	@
 6980              	@ main.c:3975: 		UaPutK("\r\nSD Card Init = "); sint2uart(CardType);
 6981 0024 A74B     		ldr	r3, .L639+4	@ tmp612,
 6982 0026 A848     		ldr	r0, .L639+8	@,
 6983 0028 1C46     		mov	r4, r3	@ tmp612, tmp612
 6984 002a 0393     		str	r3, [sp, #12]	@ tmp612, %sfp
 6985 002c FFF7FEFF 		bl	UaPutK	@
 6986 0030 2078     		ldrb	r0, [r4]	@ zero_extendqisi2	@, CardType
 6987 0032 FFF7FEFF 		bl	sint2uart	@
 6988              	.L527:
 6989              	@ main.c:3960: 	u16 crc=1,x=0,y1=0,y2=0;
 6990 0036 0023     		movs	r3, #0	@ y1,
 6991 0038 6FF4FF70 		mvn	r0, #510	@,
 6992              	@ main.c:3978: 	p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='i';
 6993 003c 0122     		movs	r2, #1	@ tmp380,
 6994 003e 6921     		movs	r1, #105	@ tmp383,
 6995              	@ main.c:3960: 	u16 crc=1,x=0,y1=0,y2=0;
 6996 0040 0493     		str	r3, [sp, #16]	@ y1, %sfp
 6997              	@ main.c:3978: 	p_Fifo1->rct=1;	p_Fifo1->rwi=1;	p_Fifo1->rbuf[0]='i';
 6998 0042 A24B     		ldr	r3, .L639+12	@ tmp708,
 6999 0044 DFF8D492 		ldr	r9, .L639+92	@ _443,
 7000 0048 1B68     		ldr	r3, [r3]	@ p_Fifo1.211_4, p_Fifo1
 7001 004a 4844     		add	r0, r9, r0	@ ivtmp.658, _443,
 7002 004c 9A80     		strh	r2, [r3, #4]	@ movhi	@ tmp380, p_Fifo1.211_4->rct
 7003 004e 0590     		str	r0, [sp, #20]	@ ivtmp.658, %sfp
 7004 0050 5A80     		strh	r2, [r3, #2]	@ movhi	@ tmp380, p_Fifo1.211_4->rwi
 7005 0052 9971     		strb	r1, [r3, #6]	@ tmp383, p_Fifo1.211_4->rbuf
 7006              	.L528:
 7007              	@ main.c:3981: 		Menu1();
 7008 0054 FFF7FEFF 		bl	Menu1	@
 7009              	@ main.c:3982: 		while(!p_Fifo1->rct);
 7010 0058 9C4B     		ldr	r3, .L639+12	@ tmp711,
 7011 005a 1A68     		ldr	r2, [r3]	@ p_Fifo1.214_7, p_Fifo1
ARM GAS  /tmp/ccAYxbuo.s 			page 124


 7012              	.L529:
 7013              	@ main.c:3982: 		while(!p_Fifo1->rct);
 7014 005c 9388     		ldrh	r3, [r2, #4]	@, p_Fifo1.214_7->rct
 7015 005e 9BB2     		uxth	r3, r3	@ _8, p_Fifo1.214_7->rct
 7016 0060 002B     		cmp	r3, #0	@ _8
 7017 0062 FBD0     		beq	.L529	@
 7018              	@ main.c:3985: 		UART_getChar((char*)&switcH);
 7019 0064 0DF11D00 		add	r0, sp, #29	@ tmp712,,
 7020 0068 FFF7FEFF 		bl	UART_getChar	@
 7021              	@ main.c:3987: 		UaPutK("\r\n ");
 7022 006c 9848     		ldr	r0, .L639+16	@,
 7023 006e FFF7FEFF 		bl	UaPutK	@
 7024              	@ main.c:3988: 		switch (switcH)	{
 7025 0072 9DF81D30 		ldrb	r3, [sp, #29]	@ zero_extendqisi2	@ switcH, switcH
 7026 0076 523B     		subs	r3, r3, #82	@ tmp391, switcH,
 7027 0078 262B     		cmp	r3, #38	@ tmp391,
 7028 007a 00F27B82 		bhi	.L530	@
 7029 007e DFE813F0 		tbh	[pc, r3, lsl #1]	@ tmp391
 7030              	.L532:
 7031 0082 4202     		.2byte	(.L531-.L532)/2
 7032 0084 7902     		.2byte	(.L530-.L532)/2
 7033 0086 7902     		.2byte	(.L530-.L532)/2
 7034 0088 7902     		.2byte	(.L530-.L532)/2
 7035 008a 7902     		.2byte	(.L530-.L532)/2
 7036 008c 7902     		.2byte	(.L530-.L532)/2
 7037 008e 7902     		.2byte	(.L530-.L532)/2
 7038 0090 7902     		.2byte	(.L530-.L532)/2
 7039 0092 7902     		.2byte	(.L530-.L532)/2
 7040 0094 7902     		.2byte	(.L530-.L532)/2
 7041 0096 7902     		.2byte	(.L530-.L532)/2
 7042 0098 7902     		.2byte	(.L530-.L532)/2
 7043 009a 7902     		.2byte	(.L530-.L532)/2
 7044 009c 7902     		.2byte	(.L530-.L532)/2
 7045 009e 7902     		.2byte	(.L530-.L532)/2
 7046 00a0 7902     		.2byte	(.L530-.L532)/2
 7047 00a2 7902     		.2byte	(.L530-.L532)/2
 7048 00a4 CB01     		.2byte	(.L533-.L532)/2
 7049 00a6 7902     		.2byte	(.L530-.L532)/2
 7050 00a8 7902     		.2byte	(.L530-.L532)/2
 7051 00aa 7901     		.2byte	(.L534-.L532)/2
 7052 00ac 7902     		.2byte	(.L530-.L532)/2
 7053 00ae 7902     		.2byte	(.L530-.L532)/2
 7054 00b0 5101     		.2byte	(.L535-.L532)/2
 7055 00b2 7902     		.2byte	(.L530-.L532)/2
 7056 00b4 7902     		.2byte	(.L530-.L532)/2
 7057 00b6 7902     		.2byte	(.L530-.L532)/2
 7058 00b8 4B02     		.2byte	(.L536-.L532)/2
 7059 00ba 7902     		.2byte	(.L530-.L532)/2
 7060 00bc 7902     		.2byte	(.L530-.L532)/2
 7061 00be 7902     		.2byte	(.L530-.L532)/2
 7062 00c0 D800     		.2byte	(.L537-.L532)/2
 7063 00c2 7000     		.2byte	(.L538-.L532)/2
 7064 00c4 6400     		.2byte	(.L539-.L532)/2
 7065 00c6 9100     		.2byte	(.L540-.L532)/2
 7066 00c8 2B00     		.2byte	(.L541-.L532)/2
 7067 00ca 7902     		.2byte	(.L530-.L532)/2
 7068 00cc 7902     		.2byte	(.L530-.L532)/2
ARM GAS  /tmp/ccAYxbuo.s 			page 125


 7069 00ce 2700     		.2byte	(.L542-.L532)/2
 7070              		.p2align 1
 7071              	.L542:
 7072              	@ main.c:4299: 			UaPutK("Testing ...");
 7073 00d0 8048     		ldr	r0, .L639+20	@,
 7074 00d2 FFF7FEFF 		bl	UaPutK	@
 7075              	@ main.c:4301: 			break;
 7076 00d6 BDE7     		b	.L528	@
 7077              	.L541:
 7078              	@ main.c:4197: 			UaPutK("View last sector");
 7079 00d8 7F48     		ldr	r0, .L639+24	@,
 7080 00da FFF7FEFF 		bl	UaPutK	@
 7081              	@ main.c:4198: 			UaPutK("\r\n First Sector = 0x");
 7082 00de 7F48     		ldr	r0, .L639+28	@,
 7083 00e0 FFF7FEFF 		bl	UaPutK	@
 7084              	@ main.c:4199: 			strBlock=UART_getHex();
 7085 00e4 FFF7FEFF 		bl	UART_getHex	@
 7086 00e8 0546     		mov	r5, r0	@ strBlock,
 7087              	@ main.c:4200: 			UaPutK("\r\n Searching ");
 7088 00ea 7D48     		ldr	r0, .L639+32	@,
 7089 00ec FFF7FEFF 		bl	UaPutK	@
 7090              	@ main.c:4209: 				if( mci_read_sect (strBlock++,buffer,1) ) {
 7091 00f0 7C4E     		ldr	r6, .L639+36	@ tmp637,
 7092 00f2 05E0     		b	.L571	@
 7093              	.L570:
 7094              	@ main.c:4219: 			while(crc != 0x822d );
 7095 00f4 48F22D23 		movw	r3, #33325	@ tmp561,
 7096 00f8 BDF81E20 		ldrh	r2, [sp, #30]	@ crc, crc
 7097 00fc 9A42     		cmp	r2, r3	@ crc, tmp561
 7098 00fe 16D0     		beq	.L569	@,
 7099              	.L571:
 7100              	@ main.c:4209: 				if( mci_read_sect (strBlock++,buffer,1) ) {
 7101 0100 0122     		movs	r2, #1	@,
 7102 0102 3146     		mov	r1, r6	@, tmp637
 7103 0104 2846     		mov	r0, r5	@, strBlock
 7104 0106 AC18     		adds	r4, r5, r2	@ strBlock, strBlock,
 7105 0108 FFF7FEFF 		bl	mmc_read_sect	@
 7106              	@ main.c:4216: 					if(!(strBlock%1024)) UaPutC('.');
 7107 010c C4F30903 		ubfx	r3, r4, #0, #10	@ tmp558, strBlock,,
 7108              	@ main.c:4209: 				if( mci_read_sect (strBlock++,buffer,1) ) {
 7109 0110 0028     		cmp	r0, #0	@
 7110 0112 40F06182 		bne	.L632	@
 7111 0116 2546     		mov	r5, r4	@ strBlock, strBlock
 7112              	@ main.c:4216: 					if(!(strBlock%1024)) UaPutC('.');
 7113 0118 002B     		cmp	r3, #0	@ tmp558
 7114 011a EBD1     		bne	.L570	@
 7115              	@ main.c:4216: 					if(!(strBlock%1024)) UaPutC('.');
 7116 011c 2E20     		movs	r0, #46	@,
 7117 011e FFF7FEFF 		bl	UaPutC	@
 7118              	@ main.c:4219: 			while(crc != 0x822d );
 7119 0122 48F22D23 		movw	r3, #33325	@ tmp561,
 7120 0126 BDF81E20 		ldrh	r2, [sp, #30]	@ crc, crc
 7121 012a 9A42     		cmp	r2, r3	@ crc, tmp561
 7122 012c E8D1     		bne	.L571	@,
 7123              	.L569:
 7124              	@ main.c:4249: 			UaPutK("\r\n Find Sector = 0x");	hex2uart(strBlock, 8);
 7125 012e 6E48     		ldr	r0, .L639+40	@,
ARM GAS  /tmp/ccAYxbuo.s 			page 126


 7126 0130 FFF7FEFF 		bl	UaPutK	@
 7127 0134 2046     		mov	r0, r4	@, strBlock
 7128 0136 0821     		movs	r1, #8	@,
 7129 0138 FFF7FEFF 		bl	hex2uart	@
 7130              	@ main.c:4250: 			UaPutK("\r\n     lenBlock= ");		sint2uart(lenBlock);
 7131 013c 6B48     		ldr	r0, .L639+44	@,
 7132 013e FFF7FEFF 		bl	UaPutK	@
 7133 0142 0120     		movs	r0, #1	@,
 7134 0144 FFF7FEFF 		bl	sint2uart	@
 7135              	@ main.c:4251: 			break;
 7136 0148 84E7     		b	.L528	@
 7137              	.L539:
 7138              	@ main.c:4010: 			UaPutK("Statistic Card  ");
 7139 014a 6948     		ldr	r0, .L639+48	@,
 7140 014c FFF7FEFF 		bl	UaPutK	@
 7141              	@ main.c:4011: 			if(dinit){
 7142 0150 5B4B     		ldr	r3, .L639	@ tmp715,
 7143 0152 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2	@ dinit, dinit
 7144 0154 002B     		cmp	r3, #0	@ dinit
 7145 0156 40F0EC80 		bne	.L631	@
 7146              	@ main.c:4022: 			}else UaPutK("\r\nSD Card Not Init");
 7147 015a 6648     		ldr	r0, .L639+52	@,
 7148 015c FFF7FEFF 		bl	UaPutK	@
 7149 0160 78E7     		b	.L528	@
 7150              	.L538:
 7151              	@ main.c:4109: 			UaPutK("Read sector");
 7152 0162 6548     		ldr	r0, .L639+56	@,
 7153 0164 FFF7FEFF 		bl	UaPutK	@
 7154              	@ main.c:4110: 			UaPutK("\r\n sectorNumber = 0x");
 7155 0168 6448     		ldr	r0, .L639+60	@,
 7156 016a FFF7FEFF 		bl	UaPutK	@
 7157              	@ main.c:4112: 			strBlock=UART_getHex();
 7158 016e FFF7FEFF 		bl	UART_getHex	@
 7159              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7160 0172 634C     		ldr	r4, .L639+64	@ tmp475,
 7161 0174 634D     		ldr	r5, .L639+68	@ tmp727,
 7162 0176 A368     		ldr	r3, [r4, #8]	@ _373, MEM[(struct SysTick_Type *)3758153744B].VAL
 7163              	@ main.c:4115: 			d=mci_read_sect (strBlock,buffer,1);
 7164 0178 0122     		movs	r2, #1	@,
 7165 017a 5A49     		ldr	r1, .L639+36	@,
 7166              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7167 017c 2B60     		str	r3, [r5]	@ _373, Timt
 7168              	@ main.c:4112: 			strBlock=UART_getHex();
 7169 017e 0746     		mov	r7, r0	@ strBlock,
 7170              	@ main.c:4115: 			d=mci_read_sect (strBlock,buffer,1);
 7171 0180 FFF7FEFF 		bl	mmc_read_sect	@
 7172              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7173 0184 2A68     		ldr	r2, [r5]	@ Timt.81_370, Timt
 7174 0186 A368     		ldr	r3, [r4, #8]	@ _371, MEM[(struct SysTick_Type *)3758153744B].VAL
 7175              	@ main.c:4117: 			if(d){
 7176 0188 0446     		mov	r4, r0	@ tmp478,
 7177              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7178 018a D31A     		subs	r3, r2, r3	@ _372, Timt.81_370, _371
 7179 018c 0293     		str	r3, [sp, #8]	@ _372, %sfp
 7180 018e 0893     		str	r3, [sp, #32]	@ _372, MEM[(volatile u32 *)&tim]
 7181              	@ main.c:4117: 			if(d){
 7182 0190 0028     		cmp	r0, #0	@ tmp478
ARM GAS  /tmp/ccAYxbuo.s 			page 127


 7183 0192 40F07382 		bne	.L633	@
 7184              	@ main.c:4144: 				UaPutK("\r\n Read Error = ");
 7185 0196 5C48     		ldr	r0, .L639+72	@,
 7186 0198 FFF7FEFF 		bl	UaPutK	@
 7187              	@ main.c:4145: 				uint2uart(d);
 7188 019c 2046     		mov	r0, r4	@, tmp478
 7189 019e FFF7FEFF 		bl	uint2uart	@
 7190 01a2 57E7     		b	.L528	@
 7191              	.L540:
 7192              	@ main.c:4254: 			UaPutK("Read sector");
 7193 01a4 5448     		ldr	r0, .L639+56	@,
 7194 01a6 FFF7FEFF 		bl	UaPutK	@
 7195              	@ main.c:4255: 			UaPutK("\r\n sectorNumber = 0x");
 7196 01aa 5448     		ldr	r0, .L639+60	@,
 7197 01ac FFF7FEFF 		bl	UaPutK	@
 7198              	@ main.c:4257: 			strBlock=UART_getHex();
 7199 01b0 FFF7FEFF 		bl	UART_getHex	@
 7200 01b4 0446     		mov	r4, r0	@ strBlock,
 7201              	@ main.c:4258: 			UaPutK("\r\n sectorNumber = 0x");		hex2uart(strBlock, 8);
 7202 01b6 5148     		ldr	r0, .L639+60	@,
 7203 01b8 FFF7FEFF 		bl	UaPutK	@
 7204 01bc 2046     		mov	r0, r4	@, strBlock
 7205 01be 0821     		movs	r1, #8	@,
 7206 01c0 FFF7FEFF 		bl	hex2uart	@
 7207              	@ main.c:4259: 			while(strBlock <  31116288 ){
 7208 01c4 514B     		ldr	r3, .L639+76	@ tmp748,
 7209 01c6 9C42     		cmp	r4, r3	@ strBlock, tmp748
 7210 01c8 26D8     		bhi	.L573	@,
 7211              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7212 01ca 4D4E     		ldr	r6, .L639+64	@ tmp570,
 7213              	@ main.c:4262: 				if( mci_read_sect (strBlock,buffer,1*16)) {
 7214 01cc 454D     		ldr	r5, .L639+36	@ tmp634,
 7215              	.L572:
 7216              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7217 01ce B368     		ldr	r3, [r6, #8]	@ _382, MEM[(struct SysTick_Type *)3758153744B].VAL
 7218 01d0 4C4F     		ldr	r7, .L639+68	@ tmp749,
 7219              	@ main.c:4262: 				if( mci_read_sect (strBlock,buffer,1*16)) {
 7220 01d2 1022     		movs	r2, #16	@,
 7221 01d4 2946     		mov	r1, r5	@, tmp634
 7222 01d6 2046     		mov	r0, r4	@, strBlock
 7223              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7224 01d8 3B60     		str	r3, [r7]	@ _382, Timt
 7225              	@ main.c:4262: 				if( mci_read_sect (strBlock,buffer,1*16)) {
 7226 01da FFF7FEFF 		bl	mmc_read_sect	@
 7227 01de 0028     		cmp	r0, #0	@
 7228 01e0 00F0CC81 		beq	.L574	@
 7229              	@ main.c:4263: 					crc16_spi2((u16*)buffer,256*16, &crc );
 7230 01e4 0DF11E02 		add	r2, sp, #30	@ tmp750,,
 7231 01e8 4FF48051 		mov	r1, #4096	@,
 7232 01ec 2846     		mov	r0, r5	@, tmp634
 7233 01ee FFF7FEFF 		bl	crc16_spi2	@
 7234              	@ main.c:4264: 					if( crc ) {
 7235 01f2 BDF81E30 		ldrh	r3, [sp, #30]	@ crc, crc
 7236 01f6 002B     		cmp	r3, #0	@ crc
 7237 01f8 40F0E181 		bne	.L634	@
 7238              	.L575:
 7239              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
ARM GAS  /tmp/ccAYxbuo.s 			page 128


 7240 01fc 414B     		ldr	r3, .L639+68	@ tmp751,
 7241              	@ main.c:4270: 				if(p_Fifo1->rct) break;
 7242 01fe 334A     		ldr	r2, .L639+12	@ tmp752,
 7243              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7244 0200 1B68     		ldr	r3, [r3]	@ Timt.81_383, Timt
 7245 0202 B168     		ldr	r1, [r6, #8]	@ _384, MEM[(struct SysTick_Type *)3758153744B].VAL
 7246              	@ main.c:4270: 				if(p_Fifo1->rct) break;
 7247 0204 1268     		ldr	r2, [r2]	@ p_Fifo1.240_87, p_Fifo1
 7248              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7249 0206 5B1A     		subs	r3, r3, r1	@ _385, Timt.81_383, _384
 7250 0208 0893     		str	r3, [sp, #32]	@ _385, MEM[(volatile u32 *)&tim]
 7251              	@ main.c:4270: 				if(p_Fifo1->rct) break;
 7252 020a 9388     		ldrh	r3, [r2, #4]	@, p_Fifo1.240_87->rct
 7253              	@ main.c:4267: 					strBlock+=1*16;
 7254 020c 1034     		adds	r4, r4, #16	@ strBlock, strBlock,
 7255              	@ main.c:4270: 				if(p_Fifo1->rct) break;
 7256 020e 9BB2     		uxth	r3, r3	@ _88, p_Fifo1.240_87->rct
 7257 0210 13B9     		cbnz	r3, .L573	@ _88,
 7258              	@ main.c:4259: 			while(strBlock <  31116288 ){
 7259 0212 3E4B     		ldr	r3, .L639+76	@ tmp754,
 7260 0214 9C42     		cmp	r4, r3	@ strBlock, tmp754
 7261 0216 DAD9     		bls	.L572	@,
 7262              	.L573:
 7263              	@ main.c:4273: 			UaPutK("\r\n Block = ");	hex2uart(strBlock,8); hex2uart(crc,4);
 7264 0218 3D48     		ldr	r0, .L639+80	@,
 7265 021a FFF7FEFF 		bl	UaPutK	@
 7266 021e 2046     		mov	r0, r4	@, strBlock
 7267 0220 0821     		movs	r1, #8	@,
 7268 0222 FFF7FEFF 		bl	hex2uart	@
 7269 0226 0421     		movs	r1, #4	@,
 7270 0228 BDF81E00 		ldrh	r0, [sp, #30]	@, crc
 7271 022c FFF7FEFF 		bl	hex2uart	@
 7272              	@ main.c:4274: 			break;
 7273 0230 10E7     		b	.L528	@
 7274              	.L537:
 7275              	@ main.c:4280: 				UaPutK("\r\n SD_Status \r\n ");
 7276 0232 3848     		ldr	r0, .L639+84	@,
 7277 0234 FFF7FEFF 		bl	UaPutK	@
 7278              	@ main.c:4281: 				hex2uart(0,4);
 7279 0238 0421     		movs	r1, #4	@,
 7280 023a 0020     		movs	r0, #0	@,
 7281 023c FFF7FEFF 		bl	hex2uart	@
 7282 0240 0024     		movs	r4, #0	@ ivtmp.659,
 7283              	.L579:
 7284              	@ main.c:4282: 				for(u08 k=0;k<8;k++){ hex2uart(k, 2);	}
 7285 0242 2046     		mov	r0, r4	@, ivtmp.659
 7286 0244 0221     		movs	r1, #2	@,
 7287 0246 0134     		adds	r4, r4, #1	@ ivtmp.659, ivtmp.659,
 7288 0248 FFF7FEFF 		bl	hex2uart	@
 7289 024c 082C     		cmp	r4, #8	@ ivtmp.659,
 7290 024e F8D1     		bne	.L579	@,
 7291              	@ main.c:4283: 				UaPutK("\r\n\n ");
 7292 0250 3148     		ldr	r0, .L639+88	@,
 7293 0252 FFF7FEFF 		bl	UaPutK	@
 7294 0256 4FF00008 		mov	r8, #0	@ ivtmp.656,
 7295 025a 224F     		ldr	r7, .L639+36	@ ivtmp.658,
 7296              	@ main.c:4289: 					UaPutS("  ");
ARM GAS  /tmp/ccAYxbuo.s 			page 129


 7297 025c DFF8C0B0 		ldr	fp, .L639+96	@ tmp625,
 7298              	@ main.c:4294: 					UaPutS("\r\n ");
 7299 0260 DFF86CA0 		ldr	r10, .L639+16	@ tmp626,
 7300 0264 07F10806 		add	r6, r7, #8	@ ivtmp.657, ivtmp.658,
 7301              	.L584:
 7302              	@ main.c:4285: 					unt2uart(i*8,4);	UaPutC(' ');
 7303 0268 0421     		movs	r1, #4	@,
 7304 026a 4046     		mov	r0, r8	@, ivtmp.656
 7305 026c FFF7FEFF 		bl	unt2uart	@
 7306 0270 2020     		movs	r0, #32	@,
 7307 0272 FFF7FEFF 		bl	UaPutC	@
 7308 0276 3C46     		mov	r4, r7	@ ivtmp.649, ivtmp.658
 7309              	.L580:
 7310              	@ main.c:4287: 						hex2uart(buffer[k+i], 2);
 7311 0278 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2	@, MEM[base: _425, offset: 0B]
 7312 027c 0221     		movs	r1, #2	@,
 7313 027e FFF7FEFF 		bl	hex2uart	@
 7314              	@ main.c:4286: 					for(u08 k=0;k<8;k++){
 7315 0282 A642     		cmp	r6, r4	@ ivtmp.657, ivtmp.649
 7316 0284 F8D1     		bne	.L580	@,
 7317              	@ main.c:4289: 					UaPutS("  ");
 7318 0286 5846     		mov	r0, fp	@, tmp625
 7319 0288 FFF7FEFF 		bl	UaPutS	@
 7320 028c 3D46     		mov	r5, r7	@ ivtmp.640, ivtmp.658
 7321              	.L583:
 7322              	@ main.c:4291: 						if ( buffer[k+i]<0x20 || buffer[k+i]>127 ) UaPutC('.');
 7323 028e 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2	@ _99, MEM[base: _423, offset: 0B]
 7324 0292 A0F12003 		sub	r3, r0, #32	@ tmp595, _99,
 7325 0296 5F2B     		cmp	r3, #95	@ tmp595,
 7326 0298 88BF     		it	hi
 7327 029a 2E20     		movhi	r0, #46	@,
 7328              	@ main.c:4292: 						else UaPutC(buffer[k+i]);
 7329 029c FFF7FEFF 		bl	UaPutC	@
 7330              	@ main.c:4290: 					for(u08 k=0;k<8;k++){
 7331 02a0 A542     		cmp	r5, r4	@ ivtmp.640, ivtmp.649
 7332 02a2 F4D1     		bne	.L583	@,
 7333 02a4 08F14008 		add	r8, r8, #64	@ ivtmp.656, ivtmp.656,
 7334              	@ main.c:4294: 					UaPutS("\r\n ");
 7335 02a8 5046     		mov	r0, r10	@, tmp626
 7336 02aa FFF7FEFF 		bl	UaPutS	@
 7337              	@ main.c:4284: 				for(u32 i=0;i<64;i+=8){
 7338 02ae B8F5007F 		cmp	r8, #512	@ ivtmp.656,
 7339 02b2 06F10806 		add	r6, r6, #8	@ ivtmp.657, ivtmp.657,
 7340 02b6 07F10807 		add	r7, r7, #8	@ ivtmp.658, ivtmp.658,
 7341 02ba D5D1     		bne	.L584	@,
 7342 02bc CAE6     		b	.L528	@
 7343              	.L640:
 7344 02be 00BF     		.align	2
 7345              	.L639:
 7346 02c0 00000000 		.word	.LANCHOR29
 7347 02c4 00000000 		.word	CardType
 7348 02c8 00000000 		.word	.LC109
 7349 02cc 00000000 		.word	p_Fifo1
 7350 02d0 30000000 		.word	.LC77
 7351 02d4 14030000 		.word	.LC153
 7352 02d8 68020000 		.word	.LC144
 7353 02dc 7C020000 		.word	.LC145
ARM GAS  /tmp/ccAYxbuo.s 			page 130


 7354 02e0 94020000 		.word	.LC146
 7355 02e4 00000000 		.word	buffer.8846
 7356 02e8 BC020000 		.word	.LC148
 7357 02ec D0020000 		.word	.LC149
 7358 02f0 8C000000 		.word	.LC115
 7359 02f4 A0000000 		.word	.LC116
 7360 02f8 DC000000 		.word	.LC89
 7361 02fc DC010000 		.word	.LC135
 7362 0300 10E000E0 		.word	-536813552
 7363 0304 00000000 		.word	Timt
 7364 0308 00020000 		.word	.LC137
 7365 030c FFCBDA01 		.word	31116287
 7366 0310 E4020000 		.word	.LC150
 7367 0314 00030000 		.word	.LC152
 7368 0318 34000000 		.word	.LC78
 7369 031c FF010000 		.word	buffer.8846+511
 7370 0320 3C000000 		.word	.LC79
 7371              	.L535:
 7372              	@ main.c:3992: 			dinit=mci_init();
 7373 0324 FFF7FEFF 		bl	mmc_init	@
 7374 0328 AF4B     		ldr	r3, .L641	@ tmp713,
 7375 032a 1870     		strb	r0, [r3]	@ tmp392, dinit
 7376              	@ main.c:3993: 			if(dinit){
 7377 032c 0028     		cmp	r0, #0	@ tmp392
 7378 032e 00F0EF80 		beq	.L561	@
 7379              	.L631:
 7380              	@ main.c:4016: 				if(	mci_read_config (&mmcfg)){
 7381 0332 09A8     		add	r0, sp, #36	@ tmp716,,
 7382 0334 FFF7FEFF 		bl	mmc_read_config	@
 7383 0338 0028     		cmp	r0, #0	@
 7384 033a 3FF48BAE 		beq	.L528	@
 7385              	@ main.c:4017: 					UaPutK("\r\nSD Card ser_num    = "); uint2uart(mmcfg.sernum);
 7386 033e AB48     		ldr	r0, .L641+4	@,
 7387 0340 FFF7FEFF 		bl	UaPutK	@
 7388 0344 0998     		ldr	r0, [sp, #36]	@, mmcfg.sernum
 7389 0346 FFF7FEFF 		bl	uint2uart	@
 7390              	@ main.c:4018: 					UaPutK("\r\nSD Card block_num  = "); uint2uart(mmcfg.blocknr);
 7391 034a A948     		ldr	r0, .L641+8	@,
 7392 034c FFF7FEFF 		bl	UaPutK	@
 7393 0350 0A98     		ldr	r0, [sp, #40]	@, mmcfg.blocknr
 7394 0352 FFF7FEFF 		bl	uint2uart	@
 7395              	@ main.c:4019: 					UaPutK("\r\nSD Card read_blen  = "); uint2uart(mmcfg.read_blen);
 7396 0356 A748     		ldr	r0, .L641+12	@,
 7397 0358 FFF7FEFF 		bl	UaPutK	@
 7398 035c BDF82C00 		ldrh	r0, [sp, #44]	@, mmcfg.read_blen
 7399 0360 FFF7FEFF 		bl	uint2uart	@
 7400              	@ main.c:4020: 					UaPutK("\r\nSD Card write_blen = "); uint2uart(mmcfg.write_blen);
 7401 0364 A448     		ldr	r0, .L641+16	@,
 7402 0366 FFF7FEFF 		bl	UaPutK	@
 7403 036a BDF82E00 		ldrh	r0, [sp, #46]	@, mmcfg.write_blen
 7404 036e FFF7FEFF 		bl	uint2uart	@
 7405 0372 6FE6     		b	.L528	@
 7406              	.L534:
 7407              	@ main.c:4026: 			UaPutK("Fill sector");
 7408 0374 A148     		ldr	r0, .L641+20	@,
 7409 0376 FFF7FEFF 		bl	UaPutK	@
 7410              	@ main.c:4027: 			UaPutK("\r\n Start Block  = 0x");		strBlock=UART_getHex();
ARM GAS  /tmp/ccAYxbuo.s 			page 131


 7411 037a A148     		ldr	r0, .L641+24	@,
 7412 037c FFF7FEFF 		bl	UaPutK	@
 7413 0380 FFF7FEFF 		bl	UART_getHex	@
 7414 0384 0446     		mov	r4, r0	@ strBlock,
 7415              	@ main.c:4029: 			UaPutK("\r\n End   Blocks = 0x");		dstBlock=UART_getHex();
 7416 0386 9F48     		ldr	r0, .L641+28	@,
 7417 0388 FFF7FEFF 		bl	UaPutK	@
 7418 038c FFF7FEFF 		bl	UART_getHex	@
 7419              	@ main.c:4030: 			dstBlock = dstBlock > strBlock ? dstBlock - strBlock + 1 : 1;
 7420 0390 8442     		cmp	r4, r0	@ strBlock, dstBlock
 7421 0392 80F02581 		bcs	.L585	@,
 7422              	@ main.c:4030: 			dstBlock = dstBlock > strBlock ? dstBlock - strBlock + 1 : 1;
 7423 0396 0130     		adds	r0, r0, #1	@ tmp423, dstBlock,
 7424 0398 051B     		subs	r5, r0, r4	@ iftmp.218_131, tmp423, strBlock
 7425 039a 05F1FF3B 		add	fp, r5, #-1	@ prephitmp_139, iftmp.218_131,
 7426              	.L546:
 7427              	@ main.c:4032: 			UaPutK("\r\n Num Blocks   = ");				uint2uart(dstBlock);
 7428 039e 9A48     		ldr	r0, .L641+32	@,
 7429 03a0 FFF7FEFF 		bl	UaPutK	@
 7430 03a4 2846     		mov	r0, r5	@, iftmp.218_131
 7431 03a6 FFF7FEFF 		bl	uint2uart	@
 7432              	@ main.c:4033: 			UaPutK("\r\n Data to fill = 0x");
 7433 03aa 9848     		ldr	r0, .L641+36	@,
 7434 03ac FFF7FEFF 		bl	UaPutK	@
 7435              	@ main.c:4034: 			znak=UART_getHex();
 7436 03b0 FFF7FEFF 		bl	UART_getHex	@
 7437 03b4 964B     		ldr	r3, .L641+40	@ ivtmp.630,
 7438 03b6 C0B2     		uxtb	r0, r0	@ znak,
 7439              	.L547:
 7440              	@ main.c:4036: 				buffer[i] = znak;
 7441 03b8 03F8010F 		strb	r0, [r3, #1]!	@ znak, MEM[base: _101, offset: 0B]
 7442              	@ main.c:4035: 			for(u32 i=0;i<512;i++){
 7443 03bc 4B45     		cmp	r3, r9	@ ivtmp.630, _443
 7444 03be FBD1     		bne	.L547	@,
 7445              	@ main.c:4038: 			while(dstBlock--){
 7446 03c0 002D     		cmp	r5, #0	@ iftmp.218_131
 7447 03c2 3FF447AE 		beq	.L528	@
 7448 03c6 651C     		adds	r5, r4, #1	@ strBlock, strBlock,
 7449              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7450 03c8 924F     		ldr	r7, .L641+44	@ tmp429,
 7451              	@ main.c:4041: 				d = mci_write_sect(strBlock, buffer, 1);
 7452 03ca DFF88482 		ldr	r8, .L641+104	@ tmp620,
 7453              	@ main.c:4049: 						UaPutS("\r\n Fill OK ");
 7454 03ce DFF8A8A2 		ldr	r10, .L641+144	@ tmp621,
 7455 03d2 AB44     		add	fp, fp, r5	@ _134, strBlock
 7456 03d4 07E0     		b	.L550	@
 7457              	.L548:
 7458              	@ main.c:4047: 					if(!(strBlock%1024)){
 7459 03d6 002A     		cmp	r2, #0	@ tmp434
 7460 03d8 00F0DB80 		beq	.L635	@
 7461              	.L549:
 7462              	@ main.c:4038: 			while(dstBlock--){
 7463 03dc AB45     		cmp	fp, r5	@ _134, strBlock
 7464              	@ main.c:4055: 				strBlock++;
 7465 03de 2C46     		mov	r4, r5	@ strBlock, strBlock
 7466              	@ main.c:4038: 			while(dstBlock--){
 7467 03e0 3FF438AE 		beq	.L528	@,
ARM GAS  /tmp/ccAYxbuo.s 			page 132


 7468 03e4 0135     		adds	r5, r5, #1	@ strBlock, strBlock,
 7469              	.L550:
 7470              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7471 03e6 BB68     		ldr	r3, [r7, #8]	@ _366, MEM[(struct SysTick_Type *)3758153744B].VAL
 7472 03e8 8B4E     		ldr	r6, .L641+48	@ tmp717,
 7473              	@ main.c:4041: 				d = mci_write_sect(strBlock, buffer, 1);
 7474 03ea 0122     		movs	r2, #1	@,
 7475 03ec 4146     		mov	r1, r8	@, tmp620
 7476 03ee 2046     		mov	r0, r4	@, strBlock
 7477              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7478 03f0 3360     		str	r3, [r6]	@ _366, Timt
 7479              	@ main.c:4041: 				d = mci_write_sect(strBlock, buffer, 1);
 7480 03f2 FFF7FEFF 		bl	mmc_write_sect	@
 7481              	@ main.c:4047: 					if(!(strBlock%1024)){
 7482 03f6 C4F30902 		ubfx	r2, r4, #0, #10	@ tmp434, strBlock,,
 7483              	@ main.c:4042: 				if(d==0) {
 7484 03fa 0646     		mov	r6, r0	@ tmp432,
 7485 03fc 0028     		cmp	r0, #0	@ tmp432
 7486 03fe EAD1     		bne	.L548	@
 7487              	@ main.c:4043: 					UaPutS("\r\n Fill error = 0x");
 7488 0400 8648     		ldr	r0, .L641+52	@,
 7489 0402 FFF7FEFF 		bl	UaPutS	@
 7490              	@ main.c:4044: 					hex2uart(strBlock,8); hex2uart(d,2);
 7491 0406 2046     		mov	r0, r4	@, strBlock
 7492 0408 0821     		movs	r1, #8	@,
 7493 040a FFF7FEFF 		bl	hex2uart	@
 7494 040e 3046     		mov	r0, r6	@, tmp432
 7495 0410 0221     		movs	r1, #2	@,
 7496 0412 FFF7FEFF 		bl	hex2uart	@
 7497 0416 E1E7     		b	.L549	@
 7498              	.L533:
 7499              	@ main.c:4078: 			UaPutK("Copy memory");
 7500 0418 8148     		ldr	r0, .L641+56	@,
 7501 041a FFF7FEFF 		bl	UaPutK	@
 7502              	@ main.c:4079: 			UaPutK("\r\n Src Mem adr = 0x");	strBlock=UART_getHex();
 7503 041e 8148     		ldr	r0, .L641+60	@,
 7504 0420 FFF7FEFF 		bl	UaPutK	@
 7505 0424 FFF7FEFF 		bl	UART_getHex	@
 7506 0428 0446     		mov	r4, r0	@ strBlock,
 7507              	@ main.c:4080: 			UaPutK("\r\n How many byte = ");	lenBlock=UART_getNum();
 7508 042a 7F48     		ldr	r0, .L641+64	@,
 7509 042c FFF7FEFF 		bl	UaPutK	@
 7510 0430 FFF7FEFF 		bl	UART_getNum	@
 7511 0434 8246     		mov	r10, r0	@ _38,
 7512              	@ main.c:4081: 			UaPutK("\r\n Dst mem adr = 0x");	dstBlock=UART_getHex();
 7513 0436 7D48     		ldr	r0, .L641+68	@,
 7514 0438 FFF7FEFF 		bl	UaPutK	@
 7515 043c FFF7FEFF 		bl	UART_getHex	@
 7516              	@ main.c:4084: 			for(u32 bl=(dstBlock/512);bl <= ((dstBlock+lenBlock-1)/512); bl++){
 7517 0440 8244     		add	r10, r10, r0	@ _130, dstBlock
 7518 0442 0AF1FF37 		add	r7, r10, #-1	@ tmp460, _130,
 7519 0446 7F0A     		lsrs	r7, r7, #9	@ _129, tmp460,
 7520 0448 4FEA502B 		lsr	fp, r0, #9	@ bl, dstBlock,
 7521 044c 5F45     		cmp	r7, fp	@ _129, bl
 7522              	@ main.c:4083: 			u32 dbl = dstBlock%512, sBlk=strBlock/512, sMem=strBlock%512;
 7523 044e 4FEA5426 		lsr	r6, r4, #9	@ sBlk, strBlock,
 7524 0452 C0F30805 		ubfx	r5, r0, #0, #9	@ dbl, dstBlock,,
ARM GAS  /tmp/ccAYxbuo.s 			page 133


 7525 0456 C4F30804 		ubfx	r4, r4, #0, #9	@ sMem, strBlock,,
 7526              	@ main.c:4084: 			for(u32 bl=(dstBlock/512);bl <= ((dstBlock+lenBlock-1)/512); bl++){
 7527 045a FFF4FBAD 		bcc	.L528	@,
 7528              	@ main.c:4094: 					if (bl == ((dstBlock+lenBlock)/512))	hex2uart((dstBlock+lenBlock)%512, 3);		//L
 7529 045e 4FEA5A23 		lsr	r3, r10, #9	@ _43, _130,
 7530 0462 0293     		str	r3, [sp, #8]	@ _43, %sfp
 7531 0464 5346     		mov	r3, r10	@ _130, _130
 7532              	@ main.c:4085: 				if (mci_read_sect(bl,buffer,1)){
 7533 0466 DFF8E881 		ldr	r8, .L641+104	@ tmp617,
 7534              	@ main.c:4094: 					if (bl == ((dstBlock+lenBlock)/512))	hex2uart((dstBlock+lenBlock)%512, 3);		//L
 7535 046a DA46     		mov	r10, fp	@ bl, bl
 7536 046c 9B46     		mov	fp, r3	@ _130, _130
 7537 046e 04E0     		b	.L553	@
 7538              	.L551:
 7539              	@ main.c:4084: 			for(u32 bl=(dstBlock/512);bl <= ((dstBlock+lenBlock-1)/512); bl++){
 7540 0470 0AF1010A 		add	r10, r10, #1	@ bl, bl,
 7541 0474 5745     		cmp	r7, r10	@ _129, bl
 7542 0476 FFF4EDAD 		bcc	.L528	@,
 7543              	.L553:
 7544              	@ main.c:4085: 				if (mci_read_sect(bl,buffer,1)){
 7545 047a 0122     		movs	r2, #1	@,
 7546 047c 4146     		mov	r1, r8	@, tmp617
 7547 047e 5046     		mov	r0, r10	@, bl
 7548 0480 FFF7FEFF 		bl	mmc_read_sect	@
 7549 0484 0028     		cmp	r0, #0	@
 7550 0486 F3D0     		beq	.L551	@
 7551              	@ main.c:4086: 					UaPutK("\r\n ReadB 0x");							hex2uart(sBlk++,3);
 7552 0488 6948     		ldr	r0, .L641+72	@,
 7553 048a FFF7FEFF 		bl	UaPutK	@
 7554 048e 0321     		movs	r1, #3	@,
 7555 0490 3046     		mov	r0, r6	@, sBlk
 7556 0492 FFF7FEFF 		bl	hex2uart	@
 7557 0496 0136     		adds	r6, r6, #1	@ sBlk, sBlk,
 7558              	@ main.c:4087: 					UaPutC(',');													hex2uart(sBlk, 	3);
 7559 0498 2C20     		movs	r0, #44	@,
 7560 049a FFF7FEFF 		bl	UaPutC	@
 7561 049e 0321     		movs	r1, #3	@,
 7562 04a0 3046     		mov	r0, r6	@, sBlk
 7563 04a2 FFF7FEFF 		bl	hex2uart	@
 7564              	@ main.c:4088: 					UaPutK("  From 0x");							    hex2uart(sMem, 	3);
 7565 04a6 6348     		ldr	r0, .L641+76	@,
 7566 04a8 FFF7FEFF 		bl	UaPutK	@
 7567 04ac 0321     		movs	r1, #3	@,
 7568 04ae 2046     		mov	r0, r4	@, sMem
 7569 04b0 FFF7FEFF 		bl	hex2uart	@
 7570 04b4 04F50074 		add	r4, r4, #512	@ _445, sMem,
 7571              	@ main.c:4090: 					UaPutK("->0x");											  hex2uart(sMem + (0x200-dbl), 3);
 7572 04b8 5F48     		ldr	r0, .L641+80	@,
 7573 04ba FFF7FEFF 		bl	UaPutK	@
 7574              	@ main.c:4089: 					sMem = sMem + (0x200-dbl);
 7575 04be 641B     		subs	r4, r4, r5	@ sMem, _445, dbl
 7576              	@ main.c:4090: 					UaPutK("->0x");											  hex2uart(sMem + (0x200-dbl), 3);
 7577 04c0 C5F50070 		rsb	r0, r5, #512	@ tmp466, dbl,
 7578 04c4 0321     		movs	r1, #3	@,
 7579 04c6 2044     		add	r0, r0, r4	@, sMem
 7580 04c8 FFF7FEFF 		bl	hex2uart	@
 7581              	@ main.c:4091: 					UaPutK("  WriteB 0x");								hex2uart(bl, 		3);
ARM GAS  /tmp/ccAYxbuo.s 			page 134


 7582 04cc 5B48     		ldr	r0, .L641+84	@,
 7583 04ce FFF7FEFF 		bl	UaPutK	@
 7584 04d2 0321     		movs	r1, #3	@,
 7585 04d4 5046     		mov	r0, r10	@, bl
 7586 04d6 FFF7FEFF 		bl	hex2uart	@
 7587              	@ main.c:4092: 					UaPutK("  0x");					  						hex2uart(dbl, 	3);
 7588 04da 5948     		ldr	r0, .L641+88	@,
 7589 04dc FFF7FEFF 		bl	UaPutK	@
 7590 04e0 2846     		mov	r0, r5	@, dbl
 7591 04e2 0321     		movs	r1, #3	@,
 7592 04e4 FFF7FEFF 		bl	hex2uart	@
 7593              	@ main.c:4093: 					UaPutK("->0x");
 7594 04e8 5348     		ldr	r0, .L641+80	@,
 7595 04ea FFF7FEFF 		bl	UaPutK	@
 7596              	@ main.c:4094: 					if (bl == ((dstBlock+lenBlock)/512))	hex2uart((dstBlock+lenBlock)%512, 3);		//L
 7597 04ee 029B     		ldr	r3, [sp, #8]	@ _43, %sfp
 7598 04f0 0321     		movs	r1, #3	@,
 7599 04f2 5345     		cmp	r3, r10	@ _43, bl
 7600 04f4 0CBF     		ite	eq
 7601 04f6 CBF30800 		ubfxeq	r0, fp, #0, #9	@, _130,,
 7602              	@ main.c:4095: 					else																	hex2uart(0x200, 3);
 7603 04fa 4FF40070 		movne	r0, #512	@,
 7604 04fe FFF7FEFF 		bl	hex2uart	@
 7605              	@ main.c:4096: 					dbl = 0;
 7606 0502 0025     		movs	r5, #0	@ dbl,
 7607 0504 B4E7     		b	.L551	@
 7608              	.L531:
 7609              	@ main.c:4150: 			if(CardType){
 7610 0506 039B     		ldr	r3, [sp, #12]	@ tmp612, %sfp
 7611 0508 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2	@ CardType, CardType
 7612 050a 002B     		cmp	r3, #0	@ CardType
 7613 050c 40F02081 		bne	.L636	@
 7614              	.L561:
 7615              	@ main.c:4193: 			} else UaPutK("\r\nSD Card Init ERROR ");
 7616 0510 4C48     		ldr	r0, .L641+92	@,
 7617 0512 FFF7FEFF 		bl	UaPutK	@
 7618 0516 9DE5     		b	.L528	@
 7619              	.L536:
 7620              	@ main.c:4061: 			UaPutS("Modify memory");
 7621 0518 4B48     		ldr	r0, .L641+96	@,
 7622 051a FFF7FEFF 		bl	UaPutS	@
 7623              	@ main.c:4062: 			UaPutS("\r\n Memory Addr = 0x");
 7624 051e 4B48     		ldr	r0, .L641+100	@,
 7625 0520 FFF7FEFF 		bl	UaPutS	@
 7626              	@ main.c:4064: 			strBlock=UART_getHex();
 7627 0524 FFF7FEFF 		bl	UART_getHex	@
 7628              	@ main.c:4066: 			if (mci_read_sect	(strBlock/512, buffer, 1)){
 7629 0528 450A     		lsrs	r5, r0, #9	@ _31, strBlock,
 7630              	@ main.c:4064: 			strBlock=UART_getHex();
 7631 052a 0446     		mov	r4, r0	@ strBlock,
 7632              	@ main.c:4066: 			if (mci_read_sect	(strBlock/512, buffer, 1)){
 7633 052c 0122     		movs	r2, #1	@,
 7634 052e 2846     		mov	r0, r5	@, _31
 7635 0530 4749     		ldr	r1, .L641+104	@,
 7636 0532 FFF7FEFF 		bl	mmc_read_sect	@
 7637 0536 0028     		cmp	r0, #0	@
 7638 0538 3FF48CAD 		beq	.L528	@
ARM GAS  /tmp/ccAYxbuo.s 			page 135


 7639              	@ main.c:4067: 				UaPutS("\r\n Memory Data = 0x");
 7640 053c 4548     		ldr	r0, .L641+108	@,
 7641 053e FFF7FEFF 		bl	UaPutS	@
 7642              	@ main.c:4068: 				hex2uart(buffer[strBlock%512], 2);
 7643 0542 059E     		ldr	r6, [sp, #20]	@ ivtmp.658, %sfp
 7644 0544 C4F30804 		ubfx	r4, r4, #0, #9	@ _33, strBlock,,
 7645 0548 0221     		movs	r1, #2	@,
 7646 054a 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2	@, buffer
 7647 054c FFF7FEFF 		bl	hex2uart	@
 7648              	@ main.c:4069: 				UaPutS("\r\n New Data    = 0x");
 7649 0550 4148     		ldr	r0, .L641+112	@,
 7650 0552 FFF7FEFF 		bl	UaPutS	@
 7651              	@ main.c:4070: 				StrBlock=UART_getHex();
 7652 0556 FFF7FEFF 		bl	UART_getHex	@
 7653              	@ main.c:4073: 				if (mci_write_sect		(strBlock/512, buffer,1))  UaPutS("\r\n Modify OK");
 7654 055a 0122     		movs	r2, #1	@,
 7655              	@ main.c:4071: 				buffer[strBlock%512] = StrBlock;
 7656 055c 3055     		strb	r0, [r6, r4]	@, buffer
 7657              	@ main.c:4073: 				if (mci_write_sect		(strBlock/512, buffer,1))  UaPutS("\r\n Modify OK");
 7658 055e 3C49     		ldr	r1, .L641+104	@,
 7659 0560 2846     		mov	r0, r5	@, _31
 7660 0562 FFF7FEFF 		bl	mmc_write_sect	@
 7661 0566 0028     		cmp	r0, #0	@
 7662 0568 3FF474AD 		beq	.L528	@
 7663              	@ main.c:4073: 				if (mci_write_sect		(strBlock/512, buffer,1))  UaPutS("\r\n Modify OK");
 7664 056c 3B48     		ldr	r0, .L641+116	@,
 7665 056e FFF7FEFF 		bl	UaPutS	@
 7666 0572 6FE5     		b	.L528	@
 7667              	.L530:
 7668              	@ main.c:4304: 			UaPutK("Unkr_dma_buf Command !");
 7669 0574 3A48     		ldr	r0, .L641+120	@,
 7670 0576 FFF7FEFF 		bl	UaPutK	@
 7671              	@ main.c:4305: 			break;
 7672 057a 6BE5     		b	.L528	@
 7673              	.L574:
 7674              	@ main.c:4269: 				} else UaPutK("\r\n Read Error ");
 7675 057c 3948     		ldr	r0, .L641+124	@,
 7676 057e FFF7FEFF 		bl	UaPutK	@
 7677              	@ main.c:4270: 				if(p_Fifo1->rct) break;
 7678 0582 394B     		ldr	r3, .L641+128	@ tmp753,
 7679 0584 1B68     		ldr	r3, [r3]	@ p_Fifo1.240_492, p_Fifo1
 7680 0586 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.240_492->rct
 7681 0588 9BB2     		uxth	r3, r3	@ _493, p_Fifo1.240_492->rct
 7682 058a 002B     		cmp	r3, #0	@ _493
 7683 058c 3FF41FAE 		beq	.L572	@
 7684 0590 42E6     		b	.L573	@
 7685              	.L635:
 7686              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7687 0592 214B     		ldr	r3, .L641+48	@ tmp718,
 7688              	@ main.c:4049: 						UaPutS("\r\n Fill OK ");
 7689 0594 5046     		mov	r0, r10	@, tmp621
 7690              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7691 0596 1E68     		ldr	r6, [r3]	@ Timt.81_367, Timt
 7692 0598 BB68     		ldr	r3, [r7, #8]	@ _368, MEM[(struct SysTick_Type *)3758153744B].VAL
 7693 059a 0292     		str	r2, [sp, #8]	@ tmp434, %sfp
 7694 059c F61A     		subs	r6, r6, r3	@ _369, Timt.81_367, _368
 7695 059e 0896     		str	r6, [sp, #32]	@ _369, MEM[(volatile u32 *)&tim]
ARM GAS  /tmp/ccAYxbuo.s 			page 136


 7696              	@ main.c:4049: 						UaPutS("\r\n Fill OK ");
 7697 05a0 FFF7FEFF 		bl	UaPutS	@
 7698              	@ main.c:4050: 						hex2uart(strBlock,  8);
 7699 05a4 2046     		mov	r0, r4	@, strBlock
 7700 05a6 0821     		movs	r1, #8	@,
 7701 05a8 FFF7FEFF 		bl	hex2uart	@
 7702              	@ main.c:4051: 						UaPutS(" Time[us] = " );
 7703 05ac 2F48     		ldr	r0, .L641+132	@,
 7704 05ae FFF7FEFF 		bl	UaPutS	@
 7705              	@ main.c:4052: 						num2uart(tim, 8,0);
 7706 05b2 029A     		ldr	r2, [sp, #8]	@ tmp434, %sfp
 7707 05b4 3046     		mov	r0, r6	@, _369
 7708 05b6 0821     		movs	r1, #8	@,
 7709 05b8 FFF7FEFF 		bl	num2uart	@
 7710 05bc 0EE7     		b	.L549	@
 7711              	.L634:
 7712              	@ main.c:4265: 						UaPutK("\r\n Block = ");	hex2uart(strBlock,8); hex2uart(crc,4);
 7713 05be 2C48     		ldr	r0, .L641+136	@,
 7714 05c0 FFF7FEFF 		bl	UaPutK	@
 7715 05c4 2046     		mov	r0, r4	@, strBlock
 7716 05c6 0821     		movs	r1, #8	@,
 7717 05c8 FFF7FEFF 		bl	hex2uart	@
 7718 05cc 0421     		movs	r1, #4	@,
 7719 05ce BDF81E00 		ldrh	r0, [sp, #30]	@, crc
 7720 05d2 FFF7FEFF 		bl	hex2uart	@
 7721 05d6 11E6     		b	.L575	@
 7722              	.L632:
 7723              	@ main.c:4210: 					UaPutK("\r\n Exit Read Error !!!");
 7724 05d8 2648     		ldr	r0, .L641+140	@,
 7725 05da FFF7FEFF 		bl	UaPutK	@
 7726              	@ main.c:4211: 					break;
 7727 05de A6E5     		b	.L569	@
 7728              	.L585:
 7729 05e0 4FF0000B 		mov	fp, #0	@ prephitmp_139,
 7730              	@ main.c:4030: 			dstBlock = dstBlock > strBlock ? dstBlock - strBlock + 1 : 1;
 7731 05e4 0125     		movs	r5, #1	@ iftmp.218_131,
 7732 05e6 DAE6     		b	.L546	@
 7733              	.L642:
 7734              		.align	2
 7735              	.L641:
 7736 05e8 00000000 		.word	.LANCHOR29
 7737 05ec 2C000000 		.word	.LC111
 7738 05f0 44000000 		.word	.LC112
 7739 05f4 5C000000 		.word	.LC113
 7740 05f8 74000000 		.word	.LC114
 7741 05fc B4000000 		.word	.LC117
 7742 0600 C0000000 		.word	.LC118
 7743 0604 D8000000 		.word	.LC119
 7744 0608 F0000000 		.word	.LC120
 7745 060c 04010000 		.word	.LC121
 7746 0610 FFFFFFFF 		.word	buffer.8846-1
 7747 0614 10E000E0 		.word	-536813552
 7748 0618 00000000 		.word	Timt
 7749 061c 1C010000 		.word	.LC122
 7750 0620 20000000 		.word	.LC100
 7751 0624 2C000000 		.word	.LC101
 7752 0628 40000000 		.word	.LC102
ARM GAS  /tmp/ccAYxbuo.s 			page 137


 7753 062c 54000000 		.word	.LC103
 7754 0630 A8010000 		.word	.LC130
 7755 0634 B4010000 		.word	.LC131
 7756 0638 C0010000 		.word	.LC132
 7757 063c C8010000 		.word	.LC133
 7758 0640 D4010000 		.word	.LC134
 7759 0644 14000000 		.word	.LC110
 7760 0648 4C010000 		.word	.LC125
 7761 064c 5C010000 		.word	.LC126
 7762 0650 00000000 		.word	buffer.8846
 7763 0654 70010000 		.word	.LC127
 7764 0658 84010000 		.word	.LC128
 7765 065c 98010000 		.word	.LC129
 7766 0660 20030000 		.word	.LC154
 7767 0664 F0020000 		.word	.LC151
 7768 0668 00000000 		.word	p_Fifo1
 7769 066c 3C010000 		.word	.LC124
 7770 0670 E4020000 		.word	.LC150
 7771 0674 A4020000 		.word	.LC147
 7772 0678 30010000 		.word	.LC123
 7773              	.L633:
 7774              	@ main.c:4118: 				UaPutS("\r\n ");
 7775 067c 7548     		ldr	r0, .L643	@,
 7776 067e FFF7FEFF 		bl	UaPutS	@
 7777              	@ main.c:4119: 				hex2uart(strBlock, 8);
 7778 0682 0821     		movs	r1, #8	@,
 7779 0684 3846     		mov	r0, r7	@, strBlock
 7780 0686 FFF7FEFF 		bl	hex2uart	@
 7781 068a 0024     		movs	r4, #0	@ ivtmp.692,
 7782              	.L555:
 7783              	@ main.c:4121: 					hex2uart(k, 2);
 7784 068c 2046     		mov	r0, r4	@, ivtmp.692
 7785 068e 0221     		movs	r1, #2	@,
 7786 0690 0134     		adds	r4, r4, #1	@ ivtmp.692, ivtmp.692,
 7787 0692 FFF7FEFF 		bl	hex2uart	@
 7788              	@ main.c:4120: 				for(u08 k=0;k<16;k++){
 7789 0696 102C     		cmp	r4, #16	@ ivtmp.692,
 7790 0698 F8D1     		bne	.L555	@,
 7791 069a 6F4D     		ldr	r5, .L643+4	@ _474,
 7792              	@ main.c:4123: 				UaPutS("\r\n\n ");
 7793 069c 6F48     		ldr	r0, .L643+8	@,
 7794              	@ main.c:4129: 					UaPutS("  ");
 7795 069e DFF80CA2 		ldr	r10, .L643+88	@ tmp631,
 7796              	@ main.c:4134: 					UaPutS("\r\n ");
 7797 06a2 DFF8B081 		ldr	r8, .L643	@ tmp632,
 7798              	@ main.c:4123: 				UaPutS("\r\n\n ");
 7799 06a6 FFF7FEFF 		bl	UaPutS	@
 7800              	@ main.c:4125: 					hex2uart(strBlock*512 + i, 8);
 7801 06aa 2E46     		mov	r6, r5	@ ivtmp.691, ivtmp.658
 7802 06ac 0595     		str	r5, [sp, #20]	@ ivtmp.658, %sfp
 7803 06ae C5EB4727 		rsb	r7, r5, r7, lsl #9	@ tmp603, ivtmp.658, strBlock,
 7804 06b2 1035     		adds	r5, r5, #16	@ ivtmp.690, _474,
 7805              	.L560:
 7806 06b4 0821     		movs	r1, #8	@,
 7807 06b6 B819     		adds	r0, r7, r6	@, tmp603, ivtmp.691
 7808 06b8 FFF7FEFF 		bl	hex2uart	@
 7809 06bc 3446     		mov	r4, r6	@ ivtmp.682, ivtmp.691
ARM GAS  /tmp/ccAYxbuo.s 			page 138


 7810              	.L556:
 7811              	@ main.c:4127: 						hex2uart(buffer[k+i], 2);
 7812 06be 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2	@, MEM[base: _428, offset: 0B]
 7813 06c2 0221     		movs	r1, #2	@,
 7814 06c4 FFF7FEFF 		bl	hex2uart	@
 7815              	@ main.c:4126: 					for(u08 k=0;k<16;k++){
 7816 06c8 AC42     		cmp	r4, r5	@ ivtmp.682, ivtmp.690
 7817 06ca F8D1     		bne	.L556	@,
 7818              	@ main.c:4129: 					UaPutS("  ");
 7819 06cc 5046     		mov	r0, r10	@, tmp631
 7820 06ce FFF7FEFF 		bl	UaPutS	@
 7821 06d2 B346     		mov	fp, r6	@ ivtmp.673, ivtmp.691
 7822              	.L559:
 7823              	@ main.c:4131: 						if ( buffer[k+i]<0x20 || buffer[k+i]>126 ) UaPutC('.');
 7824 06d4 1BF8010B 		ldrb	r0, [fp], #1	@ zero_extendqisi2	@ _58, MEM[base: _413, offset: 0B]
 7825 06d8 A0F12003 		sub	r3, r0, #32	@ tmp487, _58,
 7826 06dc 5E2B     		cmp	r3, #94	@ tmp487,
 7827 06de 88BF     		it	hi
 7828 06e0 2E20     		movhi	r0, #46	@,
 7829              	@ main.c:4132: 						else UaPutC(buffer[k+i]);
 7830 06e2 FFF7FEFF 		bl	UaPutC	@
 7831              	@ main.c:4130: 					for(u08 k=0;k<16;k++){
 7832 06e6 A345     		cmp	fp, r4	@ ivtmp.673, ivtmp.682
 7833 06e8 F4D1     		bne	.L559	@,
 7834              	@ main.c:4134: 					UaPutS("\r\n ");
 7835 06ea 4046     		mov	r0, r8	@, tmp632
 7836 06ec FFF7FEFF 		bl	UaPutS	@
 7837              	@ main.c:4124: 				for(u32 i=0;i<512;i+=16){
 7838 06f0 5B4B     		ldr	r3, .L643+12	@ tmp733,
 7839 06f2 1036     		adds	r6, r6, #16	@ ivtmp.691, ivtmp.691,
 7840 06f4 9E42     		cmp	r6, r3	@ ivtmp.691, tmp733
 7841 06f6 05F11005 		add	r5, r5, #16	@ ivtmp.690, ivtmp.690,
 7842 06fa DBD1     		bne	.L560	@,
 7843              	@ main.c:4136: 				UaPutK(" t_rsdio = ");	uint2uart(tim/TIM_US);
 7844 06fc 5948     		ldr	r0, .L643+16	@,
 7845 06fe FFF7FEFF 		bl	UaPutK	@
 7846 0702 594E     		ldr	r6, .L643+20	@ tmp735,
 7847 0704 029B     		ldr	r3, [sp, #8]	@ _372, %sfp
 7848              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7849 0706 594D     		ldr	r5, .L643+24	@ tmp493,
 7850              	@ main.c:4136: 				UaPutK(" t_rsdio = ");	uint2uart(tim/TIM_US);
 7851 0708 A6FB0330 		umull	r3, r0, r6, r3	@ tmp697, tmp491, tmp735, _372
 7852 070c 4008     		lsrs	r0, r0, #1	@, tmp491,
 7853 070e FFF7FEFF 		bl	uint2uart	@
 7854              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7855 0712 574C     		ldr	r4, .L643+28	@ tmp738,
 7856 0714 AB68     		ldr	r3, [r5, #8]	@ _377, MEM[(struct SysTick_Type *)3758153744B].VAL
 7857              	@ main.c:4138: 				crc16_spi2( (u16*) buffer,256, &crc );
 7858 0716 0DF11E02 		add	r2, sp, #30	@ tmp737,,
 7859 071a 4FF48071 		mov	r1, #256	@,
 7860 071e 4E48     		ldr	r0, .L643+4	@,
 7861              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7862 0720 2360     		str	r3, [r4]	@ _377, Timt
 7863              	@ main.c:4138: 				crc16_spi2( (u16*) buffer,256, &crc );
 7864 0722 FFF7FEFF 		bl	crc16_spi2	@
 7865              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7866 0726 2468     		ldr	r4, [r4]	@ Timt.81_374, Timt
ARM GAS  /tmp/ccAYxbuo.s 			page 139


 7867 0728 AB68     		ldr	r3, [r5, #8]	@ _375, MEM[(struct SysTick_Type *)3758153744B].VAL
 7868              	@ main.c:4141: 				UaPutK(" crc = ");	hex2uart(crc,4);
 7869 072a 5248     		ldr	r0, .L643+32	@,
 7870              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7871 072c E41A     		subs	r4, r4, r3	@ _376, Timt.81_374, _375
 7872 072e 0894     		str	r4, [sp, #32]	@ _376, MEM[(volatile u32 *)&tim]
 7873              	@ main.c:4141: 				UaPutK(" crc = ");	hex2uart(crc,4);
 7874 0730 FFF7FEFF 		bl	UaPutK	@
 7875 0734 0421     		movs	r1, #4	@,
 7876 0736 BDF81E00 		ldrh	r0, [sp, #30]	@, crc
 7877 073a FFF7FEFF 		bl	hex2uart	@
 7878              	@ main.c:4142: 				UaPutK(" t_crc = ");	uint2uart(tim/TIM_US);
 7879 073e 4E48     		ldr	r0, .L643+36	@,
 7880 0740 FFF7FEFF 		bl	UaPutK	@
 7881 0744 A6FB0430 		umull	r3, r0, r6, r4	@ tmp698, tmp503, tmp740, _376
 7882 0748 4008     		lsrs	r0, r0, #1	@, tmp503,
 7883 074a FFF7FEFF 		bl	uint2uart	@
 7884 074e 81E4     		b	.L528	@
 7885              	.L636:
 7886              	@ main.c:4158: 				x=0;
 7887 0750 0024     		movs	r4, #0	@ x,
 7888              	@ main.c:4151: 				UaPutK("Read multi sector");
 7889 0752 4A48     		ldr	r0, .L643+40	@,
 7890 0754 FFF7FEFF 		bl	UaPutK	@
 7891              	@ main.c:4157: 				UaPutK("\r\n Num Sectors  = ");			uint2uart(dstBlock);
 7892 0758 4948     		ldr	r0, .L643+44	@,
 7893 075a FFF7FEFF 		bl	UaPutK	@
 7894 075e 4948     		ldr	r0, .L643+48	@,
 7895 0760 FFF7FEFF 		bl	uint2uart	@
 7896              	@ main.c:4159: 				TFT_Clear(BLACK);
 7897 0764 2046     		mov	r0, r4	@, x
 7898 0766 FFF7FEFF 		bl	TFT_Clear	@
 7899              	@ main.c:4154: 				strBlock = 0;
 7900 076a 2646     		mov	r6, r4	@ strBlock, x
 7901              	@ main.c:4162: 					d = mci_read_sect (strBlock,buffer,1);
 7902 076c 3A4F     		ldr	r7, .L643+4	@ tmp614,
 7903 076e DDF81080 		ldr	r8, [sp, #16]	@ y1, %sfp
 7904 0772 1BE0     		b	.L567	@
 7905              	.L638:
 7906              	@ main.c:4181: 								TFT_dy( x, y1, y2, YELLOW, 0);
 7907 0774 0020     		movs	r0, #0	@ tmp529,
 7908 0776 4FF6E073 		movw	r3, #65504	@,
 7909 077a 0090     		str	r0, [sp]	@ tmp529,
 7910 077c 2046     		mov	r0, r4	@, x
 7911 077e FFF7FEFF 		bl	TFT_dy	@
 7912              	.L566:
 7913              	@ main.c:4187: 							x = (x+1)%(wXmax-wXmin);
 7914 0782 414B     		ldr	r3, .L643+52	@ tmp746,
 7915 0784 0134     		adds	r4, r4, #1	@ tmp530, x,
 7916 0786 A3FB0423 		umull	r2, r3, r3, r4	@ tmp700, tmp531, tmp746, tmp530
 7917 078a 5B09     		lsrs	r3, r3, #5	@ _76, tmp531,
 7918 078c 03EBC302 		add	r2, r3, r3, lsl #3	@ tmp535, _76, _76,
 7919 0790 C3EB4213 		rsb	r3, r3, r2, lsl #5	@ tmp537, _76, tmp535,
 7920 0794 E31A     		subs	r3, r4, r3	@ _76, tmp530, tmp537
 7921 0796 9CB2     		uxth	r4, r3	@ x, _76
 7922              	.L563:
 7923              	@ main.c:4191: 					if(p_Fifo1->rct) break;
ARM GAS  /tmp/ccAYxbuo.s 			page 140


 7924 0798 3C4B     		ldr	r3, .L643+56	@ tmp747,
 7925              	@ main.c:4160: 				while(dstBlock--){
 7926 079a 3A4A     		ldr	r2, .L643+48	@ tmp550,
 7927              	@ main.c:4191: 					if(p_Fifo1->rct) break;
 7928 079c 1B68     		ldr	r3, [r3]	@ p_Fifo1.234_77, p_Fifo1
 7929              	@ main.c:4190: 					strBlock++;
 7930 079e 0136     		adds	r6, r6, #1	@ strBlock, strBlock,
 7931              	@ main.c:4191: 					if(p_Fifo1->rct) break;
 7932 07a0 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.234_77->rct
 7933 07a2 9BB2     		uxth	r3, r3	@ _78, p_Fifo1.234_77->rct
 7934 07a4 002B     		cmp	r3, #0	@ _78
 7935 07a6 3BD1     		bne	.L627	@
 7936              	@ main.c:4160: 				while(dstBlock--){
 7937 07a8 9642     		cmp	r6, r2	@ strBlock, tmp550
 7938 07aa 39D0     		beq	.L627	@,
 7939              	.L567:
 7940              	@ main.c:4162: 					d = mci_read_sect (strBlock,buffer,1);
 7941 07ac 0122     		movs	r2, #1	@,
 7942 07ae 3946     		mov	r1, r7	@, tmp614
 7943 07b0 3046     		mov	r0, r6	@, strBlock
 7944 07b2 FFF7FEFF 		bl	mmc_read_sect	@
 7945              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7946 07b6 2D4A     		ldr	r2, .L643+24	@ tmp516,
 7947              	@ main.c:4171: 							if(!(strBlock%4096)){
 7948 07b8 C6F30B03 		ubfx	r3, r6, #0, #12	@ tmp517, strBlock,,
 7949              	@ main.c:4163: 					if(!d) {
 7950 07bc 0028     		cmp	r0, #0	@ tmp512
 7951 07be 32D0     		beq	.L637	@
 7952              	@ main.c:4169: 						if(!(strBlock%256)){
 7953 07c0 16F0FF0F 		tst	r6, #255	@ strBlock
 7954 07c4 E8D1     		bne	.L563	@,
 7955              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 7956 07c6 2A49     		ldr	r1, .L643+28	@ tmp743,
 7957 07c8 0D68     		ldr	r5, [r1]	@ Timt.81_378, Timt
 7958 07ca 9268     		ldr	r2, [r2, #8]	@ _379, MEM[(struct SysTick_Type *)3758153744B].VAL
 7959 07cc AD1A     		subs	r5, r5, r2	@ _380, Timt.81_378, _379
 7960 07ce 0895     		str	r5, [sp, #32]	@ _380, MEM[(volatile u32 *)&tim]
 7961              	@ main.c:4171: 							if(!(strBlock%4096)){
 7962 07d0 93B9     		cbnz	r3, .L564	@ tmp517,
 7963              	@ main.c:4172: 								UaPutS("\r\n Read OK ");
 7964 07d2 2F48     		ldr	r0, .L643+60	@,
 7965 07d4 FFF7FEFF 		bl	UaPutS	@
 7966              	@ main.c:4173: 								hex2uart(strBlock,  8);
 7967 07d8 0821     		movs	r1, #8	@,
 7968 07da 3046     		mov	r0, r6	@, strBlock
 7969 07dc FFF7FEFF 		bl	hex2uart	@
 7970              	@ main.c:4174: 								UaPutS(" y2 = " );
 7971 07e0 2C48     		ldr	r0, .L643+64	@,
 7972 07e2 FFF7FEFF 		bl	UaPutS	@
 7973              	@ main.c:4175: 								uint2uart(y1); UaPutS("\t" ); uint2uart(y2);
 7974 07e6 4046     		mov	r0, r8	@, y1
 7975 07e8 FFF7FEFF 		bl	uint2uart	@
 7976 07ec 2A48     		ldr	r0, .L643+68	@,
 7977 07ee FFF7FEFF 		bl	UaPutS	@
 7978 07f2 4046     		mov	r0, r8	@, y1
 7979 07f4 FFF7FEFF 		bl	uint2uart	@
 7980              	.L564:
ARM GAS  /tmp/ccAYxbuo.s 			page 141


 7981              	@ main.c:4179: 							y2 = tim/(3*TIM_MS);
 7982 07f8 284A     		ldr	r2, .L643+72	@ tmp744,
 7983 07fa EB08     		lsrs	r3, r5, #3	@ tmp524, _380,
 7984 07fc A2FB0323 		umull	r2, r3, r2, r3	@ tmp699, tmp525, tmp744, tmp524
 7985              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7986 0800 1A4A     		ldr	r2, .L643+24	@ tmp522,
 7987              	@ main.c:4179: 							y2 = tim/(3*TIM_MS);
 7988 0802 5B0A     		lsrs	r3, r3, #9	@ _71, tmp525,
 7989              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7990 0804 9068     		ldr	r0, [r2, #8]	@ _381, MEM[(struct SysTick_Type *)3758153744B].VAL
 7991              	@ main.c:4181: 								TFT_dy( x, y1, y2, YELLOW, 0);
 7992 0806 5FFA88F1 		uxtb	r1, r8	@, y1
 7993 080a DAB2     		uxtb	r2, r3	@, _71
 7994              	@ main.c:4179: 							y2 = tim/(3*TIM_MS);
 7995 080c 1FFA83F8 		uxth	r8, r3	@ y2, _71
 7996              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 7997 0810 174B     		ldr	r3, .L643+28	@ tmp745,
 7998 0812 1860     		str	r0, [r3]	@ _381, Timt
 7999              	@ main.c:4180: 							if(x){
 8000 0814 002C     		cmp	r4, #0	@ x
 8001 0816 ADD1     		bne	.L638	@
 8002              	@ main.c:4184: 								TFT_Clear(BLACK);
 8003 0818 2046     		mov	r0, r4	@, x
 8004 081a FFF7FEFF 		bl	TFT_Clear	@
 8005 081e B0E7     		b	.L566	@
 8006              	.L627:
 8007 0820 CDF81080 		str	r8, [sp, #16]	@ y1, %sfp
 8008 0824 16E4     		b	.L528	@
 8009              	.L637:
 8010 0826 0546     		mov	r5, r0	@ tmp512, tmp512
 8011              	@ main.c:4164: 						UaPutS("\r\n Read error = 0x");
 8012 0828 1D48     		ldr	r0, .L643+76	@,
 8013 082a CDF81080 		str	r8, [sp, #16]	@ y1, %sfp
 8014 082e FFF7FEFF 		bl	UaPutS	@
 8015              	@ main.c:4165: 						hex2uart(strBlock,8); hex2uart(d,2);
 8016 0832 3046     		mov	r0, r6	@, strBlock
 8017 0834 0821     		movs	r1, #8	@,
 8018 0836 FFF7FEFF 		bl	hex2uart	@
 8019 083a 2846     		mov	r0, r5	@, tmp512
 8020 083c 0221     		movs	r1, #2	@,
 8021 083e FFF7FEFF 		bl	hex2uart	@
 8022              	@ main.c:4166: 						break;
 8023 0842 07E4     		b	.L528	@
 8024              	.L526:
 8025              	@ main.c:3976: 	} else UaPutK("\r\nSD Card Init ERROR ");
 8026 0844 1748     		ldr	r0, .L643+80	@,
 8027 0846 FFF7FEFF 		bl	UaPutK	@
 8028 084a 174B     		ldr	r3, .L643+84	@ tmp612,
 8029 084c 0393     		str	r3, [sp, #12]	@ tmp612, %sfp
 8030 084e FFF7F2BB 		b	.L527	@
 8031              	.L644:
 8032 0852 00BF     		.align	2
 8033              	.L643:
 8034 0854 30000000 		.word	.LC77
 8035 0858 00000000 		.word	buffer.8846
 8036 085c 34000000 		.word	.LC78
 8037 0860 00020000 		.word	buffer.8846+512
ARM GAS  /tmp/ccAYxbuo.s 			page 142


 8038 0864 FC000000 		.word	.LC91
 8039 0868 398EE338 		.word	954437177
 8040 086c 10E000E0 		.word	-536813552
 8041 0870 00000000 		.word	Timt
 8042 0874 40000000 		.word	.LC80
 8043 0878 F4010000 		.word	.LC136
 8044 087c 14020000 		.word	.LC138
 8045 0880 28020000 		.word	.LC139
 8046 0884 41420F00 		.word	1000001
 8047 0888 5B268B1C 		.word	478881371
 8048 088c 00000000 		.word	p_Fifo1
 8049 0890 50020000 		.word	.LC141
 8050 0894 5C020000 		.word	.LC142
 8051 0898 64020000 		.word	.LC143
 8052 089c CF0DD626 		.word	651562447
 8053 08a0 3C020000 		.word	.LC140
 8054 08a4 14000000 		.word	.LC110
 8055 08a8 00000000 		.word	CardType
 8056 08ac 3C000000 		.word	.LC79
 8057              		.size	MemCard_Menu, .-MemCard_Menu
 8058              		.section	.text.CopyClock,"ax",%progbits
 8059              		.align	1
 8060              		.p2align 2,,3
 8061              		.global	CopyClock
 8062              		.syntax unified
 8063              		.thumb
 8064              		.thumb_func
 8065              		.fpu softvfp
 8066              		.type	CopyClock, %function
 8067              	CopyClock:
 8068              		@ args = 0, pretend = 0, frame = 8
 8069              		@ frame_needed = 0, uses_anonymous_args = 0
 8070 0000 30B5     		push	{r4, r5, lr}	@
 8071 0002 0D46     		mov	r5, r1	@ lrtc, lrtc
 8072 0004 83B0     		sub	sp, sp, #12	@,,
 8073              	@ main.c:5045: void CopyClock(char *dczas, T_RTC *lrtc)	{
 8074 0006 0446     		mov	r4, r0	@ dczas, dczas
 8075              	@ main.c:5051: 		dczas += 0;	memcpy(dczas,unt2str(lrtc->yer,tbuf,4) ,4);
 8076 0008 6946     		mov	r1, sp	@,
 8077 000a E888     		ldrh	r0, [r5, #6]	@, lrtc_21(D)->yer
 8078 000c 0422     		movs	r2, #4	@,
 8079 000e FFF7FEFF 		bl	unt2str	@
 8080 0012 0368     		ldr	r3, [r0]	@ unaligned	@ tmp138, MEM[(char * {ref-all})_3]
 8081              	@ main.c:5052: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 8082 0014 6946     		mov	r1, sp	@,
 8083              	@ main.c:5051: 		dczas += 0;	memcpy(dczas,unt2str(lrtc->yer,tbuf,4) ,4);
 8084 0016 2360     		str	r3, [r4]	@ unaligned	@ tmp138, MEM[(char * {ref-all})dczas_19(D)]
 8085              	@ main.c:5052: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 8086 0018 2879     		ldrb	r0, [r5, #4]	@ zero_extendqisi2	@, lrtc_21(D)->mon
 8087 001a 0222     		movs	r2, #2	@,
 8088 001c FFF7FEFF 		bl	unt2str	@
 8089 0020 0388     		ldrh	r3, [r0]	@ unaligned	@ _26, MEM[(char * {ref-all})_6]
 8090              	@ main.c:5053: 		dczas += 3; memcpy(dczas,unt2str(lrtc->mdy,tbuf,2) ,2);
 8091 0022 6946     		mov	r1, sp	@,
 8092              	@ main.c:5052: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 8093 0024 A4F80530 		strh	r3, [r4, #5]	@ unaligned	@ _26, MEM[(char * {ref-all})dczas_19(D) + 5B]
 8094              	@ main.c:5053: 		dczas += 3; memcpy(dczas,unt2str(lrtc->mdy,tbuf,2) ,2);
ARM GAS  /tmp/ccAYxbuo.s 			page 143


 8095 0028 E878     		ldrb	r0, [r5, #3]	@ zero_extendqisi2	@, lrtc_21(D)->mdy
 8096 002a 0222     		movs	r2, #2	@,
 8097 002c FFF7FEFF 		bl	unt2str	@
 8098 0030 0388     		ldrh	r3, [r0]	@ unaligned	@ _29, MEM[(char * {ref-all})_9]
 8099              	@ main.c:5054: 		dczas += 3; memcpy(dczas,unt2str(lrtc->hor,tbuf,2) ,2);
 8100 0032 6946     		mov	r1, sp	@,
 8101              	@ main.c:5053: 		dczas += 3; memcpy(dczas,unt2str(lrtc->mdy,tbuf,2) ,2);
 8102 0034 2381     		strh	r3, [r4, #8]	@ unaligned	@ _29, MEM[(char * {ref-all})dczas_19(D) + 8B]
 8103              	@ main.c:5054: 		dczas += 3; memcpy(dczas,unt2str(lrtc->hor,tbuf,2) ,2);
 8104 0036 A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2	@, lrtc_21(D)->hor
 8105 0038 0222     		movs	r2, #2	@,
 8106 003a FFF7FEFF 		bl	unt2str	@
 8107 003e 0388     		ldrh	r3, [r0]	@ unaligned	@ _32, MEM[(char * {ref-all})_12]
 8108              	@ main.c:5055: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 8109 0040 6946     		mov	r1, sp	@,
 8110              	@ main.c:5054: 		dczas += 3; memcpy(dczas,unt2str(lrtc->hor,tbuf,2) ,2);
 8111 0042 A4F80B30 		strh	r3, [r4, #11]	@ unaligned	@ _32, MEM[(char * {ref-all})dczas_19(D) + 11B]
 8112              	@ main.c:5055: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 8113 0046 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2	@, lrtc_21(D)->min
 8114 0048 0222     		movs	r2, #2	@,
 8115 004a FFF7FEFF 		bl	unt2str	@
 8116 004e 0388     		ldrh	r3, [r0]	@ unaligned	@ _35, MEM[(char * {ref-all})_15]
 8117              	@ main.c:5056: 		dczas += 3; memcpy(dczas,unt2str(lrtc->sec,tbuf,2) ,2);
 8118 0050 6946     		mov	r1, sp	@,
 8119              	@ main.c:5055: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 8120 0052 E381     		strh	r3, [r4, #14]	@ unaligned	@ _35, MEM[(char * {ref-all})dczas_19(D) + 14B]
 8121              	@ main.c:5056: 		dczas += 3; memcpy(dczas,unt2str(lrtc->sec,tbuf,2) ,2);
 8122 0054 2878     		ldrb	r0, [r5]	@ zero_extendqisi2	@, lrtc_21(D)->sec
 8123 0056 0222     		movs	r2, #2	@,
 8124 0058 FFF7FEFF 		bl	unt2str	@
 8125 005c 0388     		ldrh	r3, [r0]	@ unaligned	@ _38, MEM[(char * {ref-all})_18]
 8126 005e A4F81130 		strh	r3, [r4, #17]	@ unaligned	@ _38, MEM[(char * {ref-all})dczas_19(D) + 17B]
 8127              	@ main.c:5058: 	}
 8128 0062 03B0     		add	sp, sp, #12	@,,
 8129              		@ sp needed	@
 8130 0064 30BD     		pop	{r4, r5, pc}	@
 8131              		.size	CopyClock, .-CopyClock
 8132 0066 00BF     		.section	.text.Intro2,"ax",%progbits
 8133              		.align	1
 8134              		.p2align 2,,3
 8135              		.global	Intro2
 8136              		.syntax unified
 8137              		.thumb
 8138              		.thumb_func
 8139              		.fpu softvfp
 8140              		.type	Intro2, %function
 8141              	Intro2:
 8142              		@ args = 0, pretend = 0, frame = 32
 8143              		@ frame_needed = 0, uses_anonymous_args = 0
 8144 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 8145              	@ main.c:2920: 		uint32_t tim=0;
 8146 0004 0025     		movs	r5, #0	@ tmp236,
 8147              	@ main.c:5237: 		DMA1_Channel1->CCR =  DMA_CCR1_PL_0 | DMA_CCR1_MSIZE_0 | DMA_CCR1_PSIZE_0 | DMA_CC
 8148 0006 41F2A256 		movw	r6, #5538	@ tmp246,
 8149              	@ main.c:2912: void Intro2(void){	
 8150 000a 8BB0     		sub	sp, sp, #44	@,,
 8151              	@ main.c:2915: 		UaPutS("\r\n Start programu... \r\n"); 
ARM GAS  /tmp/ccAYxbuo.s 			page 144


 8152 000c B448     		ldr	r0, .L704	@,
 8153 000e FFF7FEFF 		bl	UaPutS	@
 8154              	@ main.c:2942: 		UaPutS("\r\n Debug0..."); 
 8155 0012 B448     		ldr	r0, .L704+4	@,
 8156              	@ main.c:2920: 		uint32_t tim=0;
 8157 0014 0995     		str	r5, [sp, #36]	@ tmp236, tim
 8158              	@ main.c:2942: 		UaPutS("\r\n Debug0..."); 
 8159 0016 FFF7FEFF 		bl	UaPutS	@
 8160              	@ main.c:2943: 		RtcInit();
 8161 001a FFF7FEFF 		bl	RtcInit	@
 8162              	@ main.c:2944: 		rtc_GetTime(1,&Rtc);
 8163 001e B249     		ldr	r1, .L704+8	@,
 8164 0020 0120     		movs	r0, #1	@,
 8165 0022 FFF7FEFF 		bl	rtc_GetTime	@
 8166              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 8167 0026 B148     		ldr	r0, .L704+12	@ tmp249,
 8168              	@ main.c:5232: 		RCC->AHBENR   |= RCC_AHBENR_DMA1EN;					// enable clock for DMA1
 8169 0028 B149     		ldr	r1, .L704+16	@ tmp239,
 8170              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 8171 002a 0446     		mov	r4, r0	@ tmp252, tmp249
 8172              	@ main.c:5232: 		RCC->AHBENR   |= RCC_AHBENR_DMA1EN;					// enable clock for DMA1
 8173 002c 4A69     		ldr	r2, [r1, #20]	@ _190, MEM[(struct RCC_TypeDef *)1073876992B].AHBENR
 8174              	@ main.c:5233: 		DMA1_Channel1->CCR  = 0;										// Disable channel
 8175 002e B14B     		ldr	r3, .L704+20	@ tmp241,
 8176              	@ main.c:5232: 		RCC->AHBENR   |= RCC_AHBENR_DMA1EN;					// enable clock for DMA1
 8177 0030 42F00102 		orr	r2, r2, #1	@ _191, _190,
 8178 0034 4A61     		str	r2, [r1, #20]	@ _191, MEM[(struct RCC_TypeDef *)1073876992B].AHBENR
 8179              	@ main.c:5235: 		DMA1_Channel1->CPAR = (uint32_t)&ADC1->DR;	// Source address:
 8180 0036 A1F56B41 		sub	r1, r1, #60160	@ tmp244, tmp244,
 8181 003a B439     		subs	r1, r1, #180	@ tmp244, tmp244,
 8182              	@ main.c:5250: 		GPIOB->CRH   |= 0x00000090;	// PB9 out
 8183 003c AE4A     		ldr	r2, .L704+24	@ tmp247,
 8184              	@ main.c:5233: 		DMA1_Channel1->CCR  = 0;										// Disable channel
 8185 003e 1D60     		str	r5, [r3]	@ tmp236, MEM[(struct DMA_Channel_TypeDef *)1073872904B].CCR
 8186              	@ main.c:5235: 		DMA1_Channel1->CPAR = (uint32_t)&ADC1->DR;	// Source address:
 8187 0040 9960     		str	r1, [r3, #8]	@ tmp244, MEM[(struct DMA_Channel_TypeDef *)1073872904B].CPAR
 8188              	@ main.c:5237: 		DMA1_Channel1->CCR =  DMA_CCR1_PL_0 | DMA_CCR1_MSIZE_0 | DMA_CCR1_PSIZE_0 | DMA_CC
 8189 0042 1E60     		str	r6, [r3]	@ tmp246, MEM[(struct DMA_Channel_TypeDef *)1073872904B].CCR
 8190              	@ main.c:5250: 		GPIOB->CRH   |= 0x00000090;	// PB9 out
 8191 0044 5368     		ldr	r3, [r2, #4]	@ _192, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 8192              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 8193 0046 AD49     		ldr	r1, .L704+28	@ tmp500,
 8194              	@ main.c:5250: 		GPIOB->CRH   |= 0x00000090;	// PB9 out
 8195 0048 43F09003 		orr	r3, r3, #144	@ _193, _192,
 8196 004c 5360     		str	r3, [r2, #4]	@ _193, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 8197              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 8198 004e 8368     		ldr	r3, [r0, #8]	@ _194, MEM[(struct SysTick_Type *)3758153744B].VAL
 8199 0050 0B60     		str	r3, [r1]	@ _194, delay_us
 8200              	.L648:
 8201              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 8202 0052 0B68     		ldr	r3, [r1]	@ delay_us.82_195, delay_us
 8203 0054 A268     		ldr	r2, [r4, #8]	@ _196, MEM[(struct SysTick_Type *)3758153744B].VAL
 8204 0056 9B1A     		subs	r3, r3, r2	@ tmp253, delay_us.82_195, _196
 8205 0058 592B     		cmp	r3, #89	@ tmp253,
 8206 005a FAD9     		bls	.L648	@,
 8207              	@ main.c:5257: 		TIM4->CCMR2 = TIM_CCMR2_OC4M_2 | TIM_CCMR2_OC4M_1;
 8208 005c 4FF4C045 		mov	r5, #24576	@ tmp270,
ARM GAS  /tmp/ccAYxbuo.s 			page 145


 8209              	@ main.c:5258: 		TIM4->CCER  = TIM_CCER_CC4E;
 8210 0060 4FF48050 		mov	r0, #4096	@ tmp273,
 8211              	@ main.c:5253: 		TIM4->PSC   = 100-1;
 8212 0064 4FF0630E 		mov	lr, #99	@ tmp258,
 8213              	@ main.c:5254:     TIM4->ARR   = 120-1;
 8214 0068 4FF0770C 		mov	ip, #119	@ tmp261,
 8215              	@ main.c:5255:     TIM4->CCR4  = 10;		//width pulse on PB9 out channel
 8216 006c 0A27     		movs	r7, #10	@ tmp264,
 8217              	@ main.c:5256: 		TIM4->CCMR1 = 0;
 8218 006e 0026     		movs	r6, #0	@ tmp267,
 8219              	@ main.c:5252: 		RCC->APB1ENR |= RCC_APB1ENR_TIM4EN;
 8220 0070 9F4B     		ldr	r3, .L704+16	@ tmp254,
 8221 0072 DA69     		ldr	r2, [r3, #28]	@ _198, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 8222 0074 42F00402 		orr	r2, r2, #4	@ _199, _198,
 8223 0078 DA61     		str	r2, [r3, #28]	@ _199, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 8224              	@ main.c:5253: 		TIM4->PSC   = 100-1;
 8225 007a A14A     		ldr	r2, .L704+32	@ tmp256,
 8226 007c A2F828E0 		strh	lr, [r2, #40]	@ movhi	@ tmp258, MEM[(struct TIM_TypeDef *)1073743872B].PSC
 8227              	@ main.c:5254:     TIM4->ARR   = 120-1;
 8228 0080 A2F82CC0 		strh	ip, [r2, #44]	@ movhi	@ tmp261, MEM[(struct TIM_TypeDef *)1073743872B].ARR
 8229              	@ main.c:5255:     TIM4->CCR4  = 10;		//width pulse on PB9 out channel
 8230 0084 A2F84070 		strh	r7, [r2, #64]	@ movhi	@ tmp264, MEM[(struct TIM_TypeDef *)1073743872B].CCR4
 8231              	@ main.c:5256: 		TIM4->CCMR1 = 0;
 8232 0088 1683     		strh	r6, [r2, #24]	@ movhi	@ tmp267, MEM[(struct TIM_TypeDef *)1073743872B].CCMR1
 8233              	@ main.c:5257: 		TIM4->CCMR2 = TIM_CCMR2_OC4M_2 | TIM_CCMR2_OC4M_1;
 8234 008a 9583     		strh	r5, [r2, #28]	@ movhi	@ tmp270, MEM[(struct TIM_TypeDef *)1073743872B].CCMR2
 8235              	@ main.c:5258: 		TIM4->CCER  = TIM_CCER_CC4E;
 8236 008c 1084     		strh	r0, [r2, #32]	@ movhi	@ tmp273, MEM[(struct TIM_TypeDef *)1073743872B].CCER
 8237              	@ main.c:5262: 		RCC->APB2ENR  |= RCC_APB2ENR_ADC1EN;			// enable clock for ADC1
 8238 008e 9A69     		ldr	r2, [r3, #24]	@ _200, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 8239              	@ main.c:5264: 		GPIOA->CRL = (GPIOA->CRL & 0xffff0000);
 8240 0090 05F18045 		add	r5, r5, #1073741824	@ tmp278, tmp278,
 8241              	@ main.c:5262: 		RCC->APB2ENR  |= RCC_APB2ENR_ADC1EN;			// enable clock for ADC1
 8242 0094 42F40072 		orr	r2, r2, #512	@ _201, _200,
 8243 0098 9A61     		str	r2, [r3, #24]	@ _201, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 8244              	@ main.c:5263: 		RCC->CFGR 		|= RCC_CFGR_ADCPRE_DIV4;  	// 2/4/6/8 str98
 8245 009a 5868     		ldr	r0, [r3, #4]	@ _202, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 8246              	@ main.c:5264: 		GPIOA->CRL = (GPIOA->CRL & 0xffff0000);
 8247 009c 05F52845 		add	r5, r5, #43008	@ tmp278, tmp278,
 8248              	@ main.c:5263: 		RCC->CFGR 		|= RCC_CFGR_ADCPRE_DIV4;  	// 2/4/6/8 str98
 8249 00a0 40F48040 		orr	r0, r0, #16384	@ _203, _202,
 8250 00a4 5860     		str	r0, [r3, #4]	@ _203, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 8251              	@ main.c:5264: 		GPIOA->CRL = (GPIOA->CRL & 0xffff0000);
 8252 00a6 2B68     		ldr	r3, [r5]	@ _204, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 8253              	@ main.c:5267: 		ADC1->CR1 |= ADC_CR1_SCAN;	// multi channel mode
 8254 00a8 964A     		ldr	r2, .L704+36	@ tmp281,
 8255              	@ main.c:5264: 		GPIOA->CRL = (GPIOA->CRL & 0xffff0000);
 8256 00aa 1B0C     		lsrs	r3, r3, #16	@ _205, _204,
 8257 00ac 1B04     		lsls	r3, r3, #16	@ _205, _205,
 8258 00ae 2B60     		str	r3, [r5]	@ _205, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 8259              	@ main.c:5267: 		ADC1->CR1 |= ADC_CR1_SCAN;	// multi channel mode
 8260 00b0 5368     		ldr	r3, [r2, #4]	@ _206, MEM[(struct ADC_TypeDef *)1073816576B].CR1
 8261              	@ main.c:5268: 		ADC1->CR2 =  ADC_CR2_DMA | ADC_CR2_ADON | ADC_CR2_EXTTRIG | ADC_CR2_EXTSEL_2 | ADC
 8262 00b2 9548     		ldr	r0, .L704+40	@ tmp284,
 8263              	@ main.c:5267: 		ADC1->CR1 |= ADC_CR1_SCAN;	// multi channel mode
 8264 00b4 43F48073 		orr	r3, r3, #256	@ _207, _206,
 8265 00b8 5360     		str	r3, [r2, #4]	@ _207, MEM[(struct ADC_TypeDef *)1073816576B].CR1
ARM GAS  /tmp/ccAYxbuo.s 			page 146


 8266              	@ main.c:5268: 		ADC1->CR2 =  ADC_CR2_DMA | ADC_CR2_ADON | ADC_CR2_EXTTRIG | ADC_CR2_EXTSEL_2 | ADC
 8267 00ba 9060     		str	r0, [r2, #8]	@ tmp284, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 8268              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 8269 00bc A368     		ldr	r3, [r4, #8]	@ _208, MEM[(struct SysTick_Type *)3758153744B].VAL
 8270              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 8271 00be 8B4D     		ldr	r5, .L704+12	@ tmp288,
 8272              	@ inc/tool/delay.h:104: 		delay_us = SysTick->VAL; 
 8273 00c0 0B60     		str	r3, [r1]	@ _208, delay_us
 8274              	.L649:
 8275              	@ inc/tool/delay.h:105: 		while( STCLK_US*us > (delay_us - SysTick->VAL) );
 8276 00c2 0B68     		ldr	r3, [r1]	@ delay_us.82_209, delay_us
 8277 00c4 AA68     		ldr	r2, [r5, #8]	@ _210, MEM[(struct SysTick_Type *)3758153744B].VAL
 8278 00c6 9B1A     		subs	r3, r3, r2	@ tmp289, delay_us.82_209, _210
 8279 00c8 082B     		cmp	r3, #8	@ tmp289,
 8280 00ca FAD9     		bls	.L649	@,
 8281              	@ main.c:5278: 		ADC1->SMPR2 = 7<<0*3 | 7<<1*3 ;
 8282 00cc 3F21     		movs	r1, #63	@ tmp295,
 8283              	@ main.c:5273: 		ADC1->SQR1  = 0<<20;
 8284 00ce 0024     		movs	r4, #0	@ tmp291,
 8285              	@ main.c:5276: 		ADC1->SQR3  = 0<<1*5 | 1<<0*5 ;
 8286 00d0 0120     		movs	r0, #1	@ tmp293,
 8287              	@ main.c:5273: 		ADC1->SQR1  = 0<<20;
 8288 00d2 8C4B     		ldr	r3, .L704+36	@ tmp290,
 8289              	@ main.c:5281: 		while(ADC1->CR2 & ADC_CR2_RSTCAL);		// wait for reset
 8290 00d4 1A46     		mov	r2, r3	@ tmp298, tmp290
 8291              	@ main.c:5273: 		ADC1->SQR1  = 0<<20;
 8292 00d6 DC62     		str	r4, [r3, #44]	@ tmp291, MEM[(struct ADC_TypeDef *)1073816576B].SQR1
 8293              	@ main.c:5276: 		ADC1->SQR3  = 0<<1*5 | 1<<0*5 ;
 8294 00d8 5863     		str	r0, [r3, #52]	@ tmp293, MEM[(struct ADC_TypeDef *)1073816576B].SQR3
 8295              	@ main.c:5278: 		ADC1->SMPR2 = 7<<0*3 | 7<<1*3 ;
 8296 00da 1961     		str	r1, [r3, #16]	@ tmp295, MEM[(struct ADC_TypeDef *)1073816576B].SMPR2
 8297              	@ main.c:5280: 		ADC1->CR2 |= ADC_CR2_RSTCAL;					// reset calibration
 8298 00dc 9968     		ldr	r1, [r3, #8]	@ _212, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 8299 00de 41F00801 		orr	r1, r1, #8	@ _213, _212,
 8300 00e2 9960     		str	r1, [r3, #8]	@ _213, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 8301              	.L650:
 8302              	@ main.c:5281: 		while(ADC1->CR2 & ADC_CR2_RSTCAL);		// wait for reset
 8303 00e4 9368     		ldr	r3, [r2, #8]	@ _214, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 8304 00e6 1807     		lsls	r0, r3, #28	@, _214,
 8305 00e8 FCD4     		bmi	.L650	@,
 8306              	@ main.c:5282: 		ADC1->CR2 |= ADC_CR2_CAL;							// start calibration
 8307 00ea 9168     		ldr	r1, [r2, #8]	@ _216, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 8308              	@ main.c:5283: 		while(ADC1->CR2 & ADC_CR2_CAL);				// wait till calibration is done
 8309 00ec 854B     		ldr	r3, .L704+36	@ tmp302,
 8310              	@ main.c:5282: 		ADC1->CR2 |= ADC_CR2_CAL;							// start calibration
 8311 00ee 41F00401 		orr	r1, r1, #4	@ _217, _216,
 8312 00f2 9160     		str	r1, [r2, #8]	@ _217, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 8313              	.L651:
 8314              	@ main.c:5283: 		while(ADC1->CR2 & ADC_CR2_CAL);				// wait till calibration is done
 8315 00f4 9A68     		ldr	r2, [r3, #8]	@ _218, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 8316 00f6 5107     		lsls	r1, r2, #29	@, _218,
 8317 00f8 FCD4     		bmi	.L651	@,
 8318              	@ main.c:5284: 		ADC1->CR2 |= ADC_CR2_ADON;						// start conversion
 8319 00fa 9A68     		ldr	r2, [r3, #8]	@ _220, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 8320              	@ main.c:5285: 		while( !( ADC1->SR & ADC_SR_STRT ));
 8321 00fc 8149     		ldr	r1, .L704+36	@ tmp306,
 8322              	@ main.c:5284: 		ADC1->CR2 |= ADC_CR2_ADON;						// start conversion
ARM GAS  /tmp/ccAYxbuo.s 			page 147


 8323 00fe 42F00102 		orr	r2, r2, #1	@ _221, _220,
 8324 0102 9A60     		str	r2, [r3, #8]	@ _221, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 8325              	.L652:
 8326              	@ main.c:5285: 		while( !( ADC1->SR & ADC_SR_STRT ));
 8327 0104 0B68     		ldr	r3, [r1]	@ _222, MEM[(struct ADC_TypeDef *)1073816576B].SR
 8328 0106 DA06     		lsls	r2, r3, #27	@, _222,
 8329 0108 FCD5     		bpl	.L652	@,
 8330              	@ main.c:5288: 		TIM3->CR1 = TIM_CR1_CEN;
 8331 010a 0122     		movs	r2, #1	@ tmp310,
 8332 010c 7F4B     		ldr	r3, .L704+44	@ tmp308,
 8333              	@ main.c:5289: 		while( ! (ADC1->SR & ADC_SR_EOC) );
 8334 010e 7D49     		ldr	r1, .L704+36	@ tmp311,
 8335              	@ main.c:5288: 		TIM3->CR1 = TIM_CR1_CEN;
 8336 0110 1A80     		strh	r2, [r3]	@ movhi	@ tmp310, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 8337              	.L653:
 8338              	@ main.c:5289: 		while( ! (ADC1->SR & ADC_SR_EOC) );
 8339 0112 0B68     		ldr	r3, [r1]	@ _224, MEM[(struct ADC_TypeDef *)1073816576B].SR
 8340 0114 9B07     		lsls	r3, r3, #30	@, _224,
 8341 0116 FCD5     		bpl	.L653	@,
 8342              	@ main.c:2947: 		f7_dma1 = 0;
 8343 0118 0026     		movs	r6, #0	@ tmp315,
 8344              	@ main.c:2968: 		TFT_Fill(wXmin-1,wYmin-1,wXmax+1,wYmin-1,DGRAY);	// pozioma dolna
 8345 011a 47F6EF35 		movw	r5, #31727	@ tmp316,
 8346              	@ main.c:2947: 		f7_dma1 = 0;
 8347 011e 7C4C     		ldr	r4, .L704+48	@ tmp314,
 8348              	@ main.c:2968: 		TFT_Fill(wXmin-1,wYmin-1,wXmax+1,wYmin-1,DGRAY);	// pozioma dolna
 8349 0120 3346     		mov	r3, r6	@, tmp315
 8350              	@ main.c:2947: 		f7_dma1 = 0;
 8351 0122 6401     		lsls	r4, r4, #5	@ _3, tmp314,
 8352 0124 E661     		str	r6, [r4, #28]	@ tmp315, *_5
 8353              	@ main.c:2968: 		TFT_Fill(wXmin-1,wYmin-1,wXmax+1,wYmin-1,DGRAY);	// pozioma dolna
 8354 0126 3146     		mov	r1, r6	@, tmp315
 8355 0128 0095     		str	r5, [sp]	@ tmp316,
 8356 012a 40F23F12 		movw	r2, #319	@,
 8357 012e 1E20     		movs	r0, #30	@,
 8358 0130 FFF7FEFF 		bl	TFT_Fill	@
 8359              	@ main.c:2969: 		TFT_Fill(wXmin-1,wYmax+1,wXmax+1,wYmax+1,DGRAY);	// pozioma górna
 8360 0134 E423     		movs	r3, #228	@,
 8361 0136 0095     		str	r5, [sp]	@ tmp316,
 8362 0138 1946     		mov	r1, r3	@,
 8363 013a 40F23F12 		movw	r2, #319	@,
 8364 013e 1E20     		movs	r0, #30	@,
 8365 0140 FFF7FEFF 		bl	TFT_Fill	@
 8366              	@ main.c:2970: 		TFT_Fill(wXmin-1,wYmin-1,wXmin-1,wYmax+1,DGRAY);	// pionowa lewa
 8367 0144 1E22     		movs	r2, #30	@,
 8368 0146 3146     		mov	r1, r6	@, tmp315
 8369 0148 1046     		mov	r0, r2	@,
 8370 014a 0095     		str	r5, [sp]	@ tmp316,
 8371 014c E423     		movs	r3, #228	@,
 8372 014e FFF7FEFF 		bl	TFT_Fill	@
 8373              	@ main.c:2971: 		TFT_Fill(wXmax+1,wYmin-1,wXmax+1,wYmax+1,DGRAY);	// pionowa prawa
 8374 0152 40F23F12 		movw	r2, #319	@,
 8375 0156 3146     		mov	r1, r6	@, tmp315
 8376 0158 1046     		mov	r0, r2	@,
 8377 015a 0095     		str	r5, [sp]	@ tmp316,
 8378 015c E423     		movs	r3, #228	@,
 8379 015e FFF7FEFF 		bl	TFT_Fill	@
ARM GAS  /tmp/ccAYxbuo.s 			page 148


 8380              	@ main.c:2975: 			yb[f] =wYmin;	
 8381 0162 0123     		movs	r3, #1	@ tmp321,
 8382 0164 DFF8DCA1 		ldr	r10, .L704+100	@ tmp494,
 8383              	@ main.c:2976: 			yn[f] =wYmin;
 8384 0168 6A4D     		ldr	r5, .L704+52	@ tmp495,
 8385              	@ main.c:2992: 		UaPutS("\r\n wXlen ");	sint2uart(wXlen); 
 8386 016a 6B48     		ldr	r0, .L704+56	@,
 8387              	@ main.c:2975: 			yb[f] =wYmin;	
 8388 016c 8AF80030 		strb	r3, [r10]	@ tmp321, yb
 8389              	@ main.c:2976: 			yn[f] =wYmin;
 8390 0170 2B70     		strb	r3, [r5]	@ tmp321, yn
 8391              	@ main.c:2992: 		UaPutS("\r\n wXlen ");	sint2uart(wXlen); 
 8392 0172 FFF7FEFF 		bl	UaPutS	@
 8393 0176 4FF49070 		mov	r0, #288	@,
 8394 017a FFF7FEFF 		bl	sint2uart	@
 8395              	@ main.c:2995: 		DMA1_Channel1->CNDTR = wXlen*nMES;					//Buffor size 
 8396 017e 4FF49070 		mov	r0, #288	@ tmp330,
 8397              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 8398 0182 4FF4006C 		mov	ip, #2048	@ tmp332,
 8399              	@ main.c:3018: 			dma_buf[i]=0x10;
 8400 0186 1027     		movs	r7, #16	@ tmp345,
 8401              	@ main.c:2994: 		DMA1_Channel1->CMAR = (uint32_t)dma_buf;	 	//Destination address:
 8402 0188 5A4A     		ldr	r2, .L704+20	@ tmp328,
 8403              	@ main.c:3003: 		TIM4->ARR   = BKP->DR42; //1200-1
 8404 018a 3346     		mov	r3, r6	@ ivtmp.714, tmp315
 8405              	@ main.c:2994: 		DMA1_Channel1->CMAR = (uint32_t)dma_buf;	 	//Destination address:
 8406 018c 634E     		ldr	r6, .L704+60	@ tmp496,
 8407              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 8408 018e 6449     		ldr	r1, .L704+64	@ tmp331,
 8409              	@ main.c:2994: 		DMA1_Channel1->CMAR = (uint32_t)dma_buf;	 	//Destination address:
 8410 0190 D660     		str	r6, [r2, #12]	@ tmp496, MEM[(struct DMA_Channel_TypeDef *)1073872904B].CMAR
 8411              	@ main.c:2995: 		DMA1_Channel1->CNDTR = wXlen*nMES;					//Buffor size 
 8412 0192 5060     		str	r0, [r2, #4]	@ tmp330, MEM[(struct DMA_Channel_TypeDef *)1073872904B].CNDTR
 8413              	@ main.c:3002: 		TIM4->PSC   = BKP->DR41; //1000-1
 8414 0194 6348     		ldr	r0, .L704+68	@ tmp333,
 8415              	@ ./inc/core_cm3.h:1504:   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); 
 8416 0196 C1F800C0 		str	ip, [r1]	@ tmp332, MEM[(struct NVIC_Type *)3758153984B].ISER
 8417              	@ main.c:3002: 		TIM4->PSC   = BKP->DR41; //1000-1
 8418 019a B0F8B820 		ldrh	r2, [r0, #184]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8419 019e 5849     		ldr	r1, .L704+32	@ tmp336,
 8420 01a0 92B2     		uxth	r2, r2	@ _9, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8421 01a2 0A85     		strh	r2, [r1, #40]	@ movhi	@ _9, MEM[(struct TIM_TypeDef *)1073743872B].PSC
 8422              	@ main.c:3003: 		TIM4->ARR   = BKP->DR42; //1200-1
 8423 01a4 B0F8BC20 		ldrh	r2, [r0, #188]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR42
 8424 01a8 92B2     		uxth	r2, r2	@ _10, MEM[(struct BKP_TypeDef *)1073769472B].DR42
 8425 01aa 8A85     		strh	r2, [r1, #44]	@ movhi	@ _10, MEM[(struct TIM_TypeDef *)1073743872B].ARR
 8426              	.L654:
 8427              	@ main.c:3018: 			dma_buf[i]=0x10;
 8428 01ac 26F81370 		strh	r7, [r6, r3, lsl #1]	@ movhi	@ tmp345, dma_buf
 8429 01b0 0133     		adds	r3, r3, #1	@ ivtmp.714, ivtmp.714,
 8430              	@ main.c:3015: 		for(u16 i=0;i<wXlen;i++){
 8431 01b2 B3F5907F 		cmp	r3, #288	@ ivtmp.714,
 8432 01b6 F9D1     		bne	.L654	@,
 8433              	@ main.c:2922: 		u16 x,c_dma1,r_dma_buf,idx,c_num,n1=10,cnt_dma=0;
 8434 01b8 4FF00008 		mov	r8, #0	@ cnt_dma,
 8435 01bc 04F10C03 		add	r3, r4, #12	@ _82, _3,
 8436 01c0 0593     		str	r3, [sp, #20]	@ _82, %sfp
ARM GAS  /tmp/ccAYxbuo.s 			page 149


 8437              	.L655:
 8438              	@ main.c:3023: 			if( STCLK_MS*BKP->DR41 < (trg0 - SysTick->VAL) ){
 8439 01c2 42F22830 		movw	r0, #9000	@ tmp367,
 8440 01c6 584F     		ldr	r7, .L704+72	@ tmp523,
 8441 01c8 08F10102 		add	r2, r8, #1	@ tmp351, cnt_dma,
 8442 01cc A7FB0213 		umull	r1, r3, r7, r2	@ tmp518, tmp352, tmp523, tmp351
 8443 01d0 5449     		ldr	r1, .L704+68	@ tmp524,
 8444 01d2 464C     		ldr	r4, .L704+12	@ tmp526,
 8445 01d4 B1F8B810 		ldrh	r1, [r1, #184]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8446 01d8 9B09     		lsrs	r3, r3, #6	@ _95, tmp352,
 8447 01da 00FB01F0 		mul	r0, r0, r1	@ tmp366, tmp367, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8448 01de 5349     		ldr	r1, .L704+76	@ tmp525,
 8449 01e0 03EBC303 		add	r3, r3, r3, lsl #3	@ tmp356, _95, _95,
 8450 01e4 0968     		ldr	r1, [r1]	@ trg0.191_16, trg0
 8451 01e6 A468     		ldr	r4, [r4, #8]	@ _17, MEM[(struct SysTick_Type *)3758153744B].VAL
 8452 01e8 A2EB4313 		sub	r3, r2, r3, lsl #5	@ _95, tmp351, tmp356,
 8453 01ec 091B     		subs	r1, r1, r4	@ tmp368, trg0.191_16, _17
 8454 01ee 8842     		cmp	r0, r1	@ tmp366, tmp368
 8455 01f0 1FFA83F9 		uxth	r9, r3	@ _152, _95
 8456 01f4 4246     		mov	r2, r8	@ _91, cnt_dma
 8457 01f6 13D2     		bcs	.L656	@,
 8458              	@ main.c:3026: 				dma_buf[cnt_dma]=0x1;
 8459 01f8 0120     		movs	r0, #1	@ tmp373,
 8460 01fa 1A18     		adds	r2, r3, r0	@ tmp374, _95,
 8461 01fc A7FB0271 		umull	r7, r1, r7, r2	@ tmp519, tmp375, tmp527, tmp374
 8462 0200 8909     		lsrs	r1, r1, #6	@ _49, tmp375,
 8463 0202 01EBC101 		add	r1, r1, r1, lsl #3	@ tmp379, _49, _49,
 8464 0206 A2EB4111 		sub	r1, r2, r1, lsl #5	@ _49, tmp374, tmp379,
 8465              	@ main.c:3024: 				trg0 = SysTick->VAL;
 8466 020a 384A     		ldr	r2, .L704+12	@ tmp528,
 8467 020c 474C     		ldr	r4, .L704+76	@ tmp529,
 8468 020e 9268     		ldr	r2, [r2, #8]	@ _19, MEM[(struct SysTick_Type *)3758153744B].VAL
 8469              	@ main.c:3025: 				cnt_dma=(cnt_dma+1)%wXlen;
 8470 0210 C846     		mov	r8, r9	@ cnt_dma, _152
 8471              	@ main.c:3024: 				trg0 = SysTick->VAL;
 8472 0212 2260     		str	r2, [r4]	@ _19, trg0
 8473              	@ main.c:3026: 				dma_buf[cnt_dma]=0x1;
 8474 0214 26F81300 		strh	r0, [r6, r3, lsl #1]	@ movhi	@ tmp373, dma_buf
 8475 0218 1A46     		mov	r2, r3	@ _91, _95
 8476 021a 0B46     		mov	r3, r1	@ _95, _49
 8477 021c 1FFA81F9 		uxth	r9, r1	@ _152, _95
 8478              	.L656:
 8479              	@ main.c:3031: 			if (c_dma1 != wXlen-cnt_dma){
 8480 0220 0499     		ldr	r1, [sp, #16]	@ c_dma1, %sfp
 8481 0222 C2F59072 		rsb	r2, r2, #288	@ tmp389, _91,
 8482 0226 9142     		cmp	r1, r2	@ c_dma1, tmp389
 8483 0228 24D1     		bne	.L697	@,
 8484              	.L657:
 8485              	@ main.c:3138: 			if( STCLK_MS*500 < (trg1 - SysTick->VAL) ){
 8486 022a 414B     		ldr	r3, .L704+80	@ tmp543,
 8487 022c 2F4A     		ldr	r2, .L704+12	@ tmp544,
 8488 022e 1B68     		ldr	r3, [r3]	@ trg1.198_60, trg1
 8489 0230 9268     		ldr	r2, [r2, #8]	@ _61, MEM[(struct SysTick_Type *)3758153744B].VAL
 8490 0232 9B1A     		subs	r3, r3, r2	@ tmp438, trg1.198_60, _61
 8491 0234 3F4A     		ldr	r2, .L704+84	@ tmp545,
 8492 0236 9342     		cmp	r3, r2	@ tmp438, tmp545
 8493 0238 00F2E680 		bhi	.L698	@,
ARM GAS  /tmp/ccAYxbuo.s 			page 150


 8494              	.L667:
 8495              	@ main.c:3156: 			if(p_Fifo1->rct){	// Wywolanie interfejsu szeregowego gdy odebrano znak
 8496 023c 3E4B     		ldr	r3, .L704+88	@ tmp553,
 8497 023e 1B68     		ldr	r3, [r3]	@ p_Fifo1.200_72, p_Fifo1
 8498 0240 9B88     		ldrh	r3, [r3, #4]	@, p_Fifo1.200_72->rct
 8499 0242 9BB2     		uxth	r3, r3	@ _73, p_Fifo1.200_72->rct
 8500 0244 002B     		cmp	r3, #0	@ _73
 8501 0246 40F0C780 		bne	.L699	@
 8502              	.L669:
 8503              	@ main.c:3193: 			if(f3_rtc_1sec){	// Aktualizacja zegara
 8504 024a 059A     		ldr	r2, [sp, #20]	@ _82, %sfp
 8505 024c 1368     		ldr	r3, [r2]	@ _83, *_82
 8506 024e 002B     		cmp	r3, #0	@ _83
 8507 0250 B7D0     		beq	.L655	@
 8508              	@ main.c:3194: 				f3_rtc_1sec = 0;
 8509 0252 0020     		movs	r0, #0	@ tmp478,
 8510              	@ main.c:3196: 				rtc_GetTime(0, &Rtc);
 8511 0254 2449     		ldr	r1, .L704+8	@,
 8512              	@ main.c:3194: 				f3_rtc_1sec = 0;
 8513 0256 1060     		str	r0, [r2]	@ tmp478, *_82
 8514              	@ main.c:3196: 				rtc_GetTime(0, &Rtc);
 8515 0258 FFF7FEFF 		bl	rtc_GetTime	@
 8516              	@ main.c:3197: 				CopyClock(tbuf,&Rtc); TFT_txt(tbuf,180, 229,YELLOW);
 8517 025c 2249     		ldr	r1, .L704+8	@,
 8518 025e 3748     		ldr	r0, .L704+92	@,
 8519 0260 FFF7FEFF 		bl	CopyClock	@
 8520 0264 4FF6E073 		movw	r3, #65504	@,
 8521 0268 E522     		movs	r2, #229	@,
 8522 026a B421     		movs	r1, #180	@,
 8523 026c 3348     		ldr	r0, .L704+92	@,
 8524 026e FFF7FEFF 		bl	TFT_txt	@
 8525 0272 A6E7     		b	.L655	@
 8526              	.L697:
 8527              	@ main.c:3036: 				dma_buf[cnt_dma]=0x1;
 8528 0274 4FF0010B 		mov	fp, #1	@ tmp393,
 8529              	@ main.c:3068: 				TFT_Fill(wXmin+(wXmax-wXmin)/2,wYmin-1,wXmin+(wXmax-wXmin)/2,wYmax+1,DGRAY);	// 
 8530 0278 AE22     		movs	r2, #174	@,
 8531 027a 47F6EF37 		movw	r7, #31727	@ tmp398,
 8532              	@ main.c:3036: 				dma_buf[cnt_dma]=0x1;
 8533 027e 26F813B0 		strh	fp, [r6, r3, lsl #1]	@ movhi	@ tmp393, dma_buf
 8534              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 8535 0282 1A48     		ldr	r0, .L704+12	@ tmp533,
 8536 0284 2E4B     		ldr	r3, .L704+96	@ tmp532,
 8537              	@ main.c:3033: 				c_dma1 = wXlen-cnt_dma;
 8538 0286 C8F59078 		rsb	r8, r8, #288	@ tmp390, cnt_dma,
 8539              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 8540 028a 1B68     		ldr	r3, [r3]	@ Timt.81_184, Timt
 8541 028c 8168     		ldr	r1, [r0, #8]	@ _185, MEM[(struct SysTick_Type *)3758153744B].VAL
 8542              	@ main.c:3033: 				c_dma1 = wXlen-cnt_dma;
 8543 028e 1FFA88F4 		uxth	r4, r8	@ c_dma1, tmp390
 8544              	@ inc/tool/delay.h:94: 		*tim = (Timt - SysTick->VAL);
 8545 0292 5B1A     		subs	r3, r3, r1	@ _186, Timt.81_184, _185
 8546 0294 0993     		str	r3, [sp, #36]	@ _186, MEM[(volatile u32 *)&tim]
 8547              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 8548 0296 D0F808C0 		ldr	ip, [r0, #8]	@ _183, MEM[(struct SysTick_Type *)3758153744B].VAL
 8549              	@ main.c:3033: 				c_dma1 = wXlen-cnt_dma;
 8550 029a 0494     		str	r4, [sp, #16]	@ c_dma1, %sfp
ARM GAS  /tmp/ccAYxbuo.s 			page 151


 8551              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 8552 029c 284C     		ldr	r4, .L704+96	@ tmp537,
 8553              	@ main.c:3068: 				TFT_Fill(wXmin+(wXmax-wXmin)/2,wYmin-1,wXmin+(wXmax-wXmin)/2,wYmax+1,DGRAY);	// 
 8554 029e 1046     		mov	r0, r2	@,
 8555 02a0 0097     		str	r7, [sp]	@ tmp398,
 8556 02a2 E423     		movs	r3, #228	@,
 8557              	@ inc/tool/delay.h:91: 		Timt = SysTick->VAL;
 8558 02a4 C4F800C0 		str	ip, [r4]	@ _183, Timt
 8559              	@ main.c:3068: 				TFT_Fill(wXmin+(wXmax-wXmin)/2,wYmin-1,wXmin+(wXmax-wXmin)/2,wYmax+1,DGRAY);	// 
 8560 02a8 0021     		movs	r1, #0	@,
 8561 02aa FFF7FEFF 		bl	TFT_Fill	@
 8562              	@ main.c:3069: 				TFT_Fill(wXmin-1,(wYmax-wYmin)/2,wXmax+1,(wYmax-wYmin)/2,DGRAY);						// pozioma
 8563 02ae 7123     		movs	r3, #113	@,
 8564 02b0 40F23F12 		movw	r2, #319	@,
 8565 02b4 1946     		mov	r1, r3	@,
 8566 02b6 1E20     		movs	r0, #30	@,
 8567 02b8 0097     		str	r7, [sp]	@ tmp398,
 8568 02ba FFF7FEFF 		bl	TFT_Fill	@
 8569              	@ main.c:3071: 				TFT_SetWindow(wXmin,wYmin,wXmax,wYmax);
 8570 02be 5946     		mov	r1, fp	@, tmp393
 8571 02c0 E323     		movs	r3, #227	@,
 8572 02c2 4FF49F72 		mov	r2, #318	@,
 8573 02c6 1F20     		movs	r0, #31	@,
 8574 02c8 FFF7FEFF 		bl	TFT_SetWindow	@
 8575 02cc 09F1FF33 		add	r3, r9, #-1	@ tmp504, _152,
 8576 02d0 0024     		movs	r4, #0	@ ivtmp.707,
 8577 02d2 2978     		ldrb	r1, [r5]	@ zero_extendqisi2	@ pretmp_47, yn
 8578 02d4 09F21F1B 		addw	fp, r9, #287	@ tmp503, _152,
 8579 02d8 0393     		str	r3, [sp, #12]	@ tmp504, %sfp
 8580              	@ main.c:3125: 						else {	yn[i]=wYmax-wYmin;		}
 8581 02da 4FF0E208 		mov	r8, #226	@ tmp505,
 8582 02de 46E0     		b	.L658	@
 8583              	.L705:
 8584              		.align	2
 8585              	.L704:
 8586 02e0 00000000 		.word	.LC155
 8587 02e4 18000000 		.word	.LC156
 8588 02e8 00000000 		.word	Rtc
 8589 02ec 10E000E0 		.word	-536813552
 8590 02f0 00100240 		.word	1073876992
 8591 02f4 08000240 		.word	1073872904
 8592 02f8 000C0140 		.word	1073810432
 8593 02fc 00000000 		.word	delay_us
 8594 0300 00080040 		.word	1073743872
 8595 0304 00240140 		.word	1073816576
 8596 0308 01011A00 		.word	1704193
 8597 030c 00040040 		.word	1073742848
 8598 0310 00001001 		.word	.LANCHOR17+17825792
 8599 0314 00000000 		.word	.LANCHOR31
 8600 0318 28000000 		.word	.LC157
 8601 031c 00000000 		.word	.LANCHOR32
 8602 0320 00E100E0 		.word	-536813312
 8603 0324 006C0040 		.word	1073769472
 8604 0328 398EE338 		.word	954437177
 8605 032c 00000000 		.word	trg0
 8606 0330 00000000 		.word	trg1
 8607 0334 20AA4400 		.word	4500000
ARM GAS  /tmp/ccAYxbuo.s 			page 152


 8608 0338 00000000 		.word	p_Fifo1
 8609 033c 00000000 		.word	.LANCHOR34
 8610 0340 00000000 		.word	Timt
 8611 0344 00000000 		.word	.LANCHOR30
 8612              	.L675:
 8613              	@ main.c:3124: 						yn[i]=wYmin + (r_dma_buf);	}
 8614 0348 0133     		adds	r3, r3, #1	@ tmp423, _43,
 8615              	@ main.c:3129: 					if(x==wXlen-2){
 8616 034a B4F58F7F 		cmp	r4, #286	@ ivtmp.707,
 8617              	@ main.c:3124: 						yn[i]=wYmin + (r_dma_buf);	}
 8618 034e 2B70     		strb	r3, [r5]	@ tmp423, yn
 8619              	@ main.c:3129: 					if(x==wXlen-2){
 8620 0350 20D0     		beq	.L700	@,
 8621              	.L664:
 8622              	@ main.c:3073: 				for(x=0;x<wXlen;x++){
 8623 0352 40F21F13 		movw	r3, #287	@ tmp435,
 8624 0356 9C42     		cmp	r4, r3	@ ivtmp.707, tmp435
 8625 0358 3CD0     		beq	.L701	@,
 8626              	@ main.c:3095: 					if( x>0 && x< wXlen-0 ){
 8627 035a B4F58F7F 		cmp	r4, #286	@ ivtmp.707,
 8628 035e 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2	@ prephitmp_27, yn
 8629 0360 1DD9     		bls	.L665	@,
 8630 0362 671C     		adds	r7, r4, #1	@ tmp406, ivtmp.707,
 8631 0364 BFB2     		uxth	r7, r7	@ ivtmp.707, tmp406
 8632              	@ main.c:3104: 					if(x>1){
 8633 0366 012F     		cmp	r7, #1	@ ivtmp.707,
 8634 0368 25D1     		bne	.L702	@,
 8635              	.L660:
 8636              	@ main.c:3026: 				dma_buf[cnt_dma]=0x1;
 8637 036a 3C46     		mov	r4, r7	@ ivtmp.707, ivtmp.707
 8638 036c 1146     		mov	r1, r2	@ pretmp_47, prephitmp_27
 8639              	.L658:
 8640              	@ main.c:3115: 					if(x<cnt_dma)	idx=(0    +cnt_dma-x-1)*nMES; 
 8641 036e A145     		cmp	r9, r4	@ _152, ivtmp.707
 8642 0370 8ABF     		itet	hi
 8643 0372 039B     		ldrhi	r3, [sp, #12]	@ tmp504, %sfp
 8644 0374 ABEB0402 		subls	r2, fp, r4	@ tmp420, tmp503, ivtmp.707
 8645 0378 1A1B     		subhi	r2, r3, r4	@ tmp417, tmp504, ivtmp.707
 8646 037a 92B2     		uxth	r2, r2	@ idx, tmp420
 8647              	@ main.c:3120: 						r_dma_buf =(dma_buf[i+idx]-rz[i])*mn[i]/dl[i]; 
 8648 037c 36F81230 		ldrh	r3, [r6, r2, lsl #1]	@, dma_buf
 8649              	@ main.c:3121: 						yb[i]=yn[i];
 8650 0380 8AF80010 		strb	r1, [r10]	@ pretmp_47, yb
 8651              	@ main.c:3120: 						r_dma_buf =(dma_buf[i+idx]-rz[i])*mn[i]/dl[i]; 
 8652 0384 9BB2     		uxth	r3, r3	@ _43, tmp486
 8653              	@ main.c:3123: 						if(r_dma_buf < (wYmax-wYmin) ){
 8654 0386 E12B     		cmp	r3, #225	@ _43,
 8655 0388 DED9     		bls	.L675	@,
 8656              	@ main.c:3129: 					if(x==wXlen-2){
 8657 038a B4F58F7F 		cmp	r4, #286	@ ivtmp.707,
 8658              	@ main.c:3125: 						else {	yn[i]=wYmax-wYmin;		}
 8659 038e 85F80080 		strb	r8, [r5]	@ tmp505, yn
 8660              	@ main.c:3129: 					if(x==wXlen-2){
 8661 0392 DED1     		bne	.L664	@,
 8662              	.L700:
 8663              	@ main.c:3131: 							val[i]=dma_buf[i+idx];
 8664 0394 36F81230 		ldrh	r3, [r6, r2, lsl #1]	@, dma_buf
ARM GAS  /tmp/ccAYxbuo.s 			page 153


 8665 0398 3D48     		ldr	r0, .L706	@ tmp542,
 8666 039a 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2	@ prephitmp_27, yn
 8667 039c 0380     		strh	r3, [r0]	@ movhi	@ tmp431, val
 8668              	.L665:
 8669              	@ main.c:3098: 							TFT_dy(wXmin+x-1, yb[i], yn[i],BLACK,WID);
 8670 039e 0023     		movs	r3, #0	@ tmp404,
 8671 03a0 04F11F00 		add	r0, r4, #31	@ tmp402, ivtmp.707,
 8672 03a4 671C     		adds	r7, r4, #1	@ tmp406, ivtmp.707,
 8673 03a6 0093     		str	r3, [sp]	@ tmp404,
 8674 03a8 80B2     		uxth	r0, r0	@, tmp402
 8675 03aa BFB2     		uxth	r7, r7	@ ivtmp.707, tmp406
 8676 03ac FFF7FEFF 		bl	TFT_dy	@
 8677              	@ main.c:3104: 					if(x>1){
 8678 03b0 012F     		cmp	r7, #1	@ ivtmp.707,
 8679 03b2 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2	@ prephitmp_27, yn
 8680 03b4 D9D0     		beq	.L660	@,
 8681              	.L702:
 8682              	@ main.c:3106: 							TFT_dy(wXmin+x-2, yb[i], yn[i],ColCon[6+i],WID);
 8683 03b6 4FF0000C 		mov	ip, #0	@ tmp413,
 8684 03ba 364B     		ldr	r3, .L706+4	@ tmp540,
 8685 03bc 04F11E00 		add	r0, r4, #30	@ tmp411, ivtmp.707,
 8686 03c0 9B89     		ldrh	r3, [r3, #12]	@ ColCon, ColCon
 8687 03c2 9AF80010 		ldrb	r1, [r10]	@ zero_extendqisi2	@ yb, yb
 8688 03c6 80B2     		uxth	r0, r0	@, tmp411
 8689 03c8 CDF800C0 		str	ip, [sp]	@ tmp413,
 8690 03cc FFF7FEFF 		bl	TFT_dy	@
 8691 03d0 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2	@ prephitmp_27, yn
 8692 03d2 CAE7     		b	.L660	@
 8693              	.L701:
 8694 03d4 C846     		mov	r8, r9	@ cnt_dma, _152
 8695 03d6 28E7     		b	.L657	@
 8696              	.L699:
 8697              	@ main.c:3157: 				UART_getChar(&chr);
 8698 03d8 0DF11F00 		add	r0, sp, #31	@ tmp554,,
 8699 03dc FFF7FEFF 		bl	UART_getChar	@
 8700              	@ main.c:3158: 				if(chr=='q'){
 8701 03e0 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2	@ chr.201_74, chr
 8702 03e4 712B     		cmp	r3, #113	@ chr.201_74,
 8703 03e6 31D0     		beq	.L703	@,
 8704              	@ main.c:3172: 				if(chr=='b'){	
 8705 03e8 622B     		cmp	r3, #98	@ chr.201_74,
 8706 03ea 7FF42EAF 		bne	.L669	@,
 8707              	.L672:
 8708              	@ main.c:3174: 					TFT_Clear(BLACK);
 8709 03ee 0020     		movs	r0, #0	@,
 8710 03f0 FFF7FEFF 		bl	TFT_Clear	@
 8711              	@ main.c:3175: 					TFT_Fill(wXmin-1,wYmin-1,wXmin-1,wYmax+1,DGRAY);	// pionowa lewa
 8712 03f4 47F6EF33 		movw	r3, #31727	@ tmp477,
 8713 03f8 1E22     		movs	r2, #30	@,
 8714 03fa 0093     		str	r3, [sp]	@ tmp477,
 8715 03fc 1046     		mov	r0, r2	@,
 8716 03fe E423     		movs	r3, #228	@,
 8717 0400 0021     		movs	r1, #0	@,
 8718 0402 FFF7FEFF 		bl	TFT_Fill	@
 8719 0406 20E7     		b	.L669	@
 8720              	.L698:
 8721              	@ main.c:3139: 				trg1 = SysTick->VAL;
ARM GAS  /tmp/ccAYxbuo.s 			page 154


 8722 0408 234B     		ldr	r3, .L706+8	@ tmp546,
 8723              	@ main.c:3149: 				TFT_txt(int2str(val[0],str,4,0),30,229-12*0,WHITE);
 8724 040a 2148     		ldr	r0, .L706	@ tmp548,
 8725              	@ main.c:3139: 				trg1 = SysTick->VAL;
 8726 040c 9C68     		ldr	r4, [r3, #8]	@ _63, MEM[(struct SysTick_Type *)3758153744B].VAL
 8727 040e 234F     		ldr	r7, .L706+12	@ tmp549,
 8728              	@ main.c:3149: 				TFT_txt(int2str(val[0],str,4,0),30,229-12*0,WHITE);
 8729 0410 08A9     		add	r1, sp, #32	@ tmp547,,
 8730 0412 0023     		movs	r3, #0	@,
 8731 0414 0422     		movs	r2, #4	@,
 8732 0416 0088     		ldrh	r0, [r0]	@, val
 8733              	@ main.c:3139: 				trg1 = SysTick->VAL;
 8734 0418 3C60     		str	r4, [r7]	@ _63, trg1
 8735              	@ main.c:3149: 				TFT_txt(int2str(val[0],str,4,0),30,229-12*0,WHITE);
 8736 041a FFF7FEFF 		bl	int2str	@
 8737 041e 4FF6FF73 		movw	r3, #65535	@,
 8738 0422 E522     		movs	r2, #229	@,
 8739 0424 1E21     		movs	r1, #30	@,
 8740 0426 FFF7FEFF 		bl	TFT_txt	@
 8741              	@ main.c:3151: 				TFT_txt(int2str(tim/TIM_MS,str,5,0),110,229-12*0,ColCon[6]);
 8742 042a 099A     		ldr	r2, [sp, #36]	@ tim, tim
 8743 042c 1C49     		ldr	r1, .L706+16	@ tmp550,
 8744 042e 0023     		movs	r3, #0	@,
 8745 0430 A1FB0220 		umull	r2, r0, r1, r2	@ tmp520, tmp448, tmp550, tim
 8746 0434 08A9     		add	r1, sp, #32	@ tmp551,,
 8747 0436 0522     		movs	r2, #5	@,
 8748 0438 400B     		lsrs	r0, r0, #13	@, tmp448,
 8749 043a FFF7FEFF 		bl	int2str	@
 8750 043e 154B     		ldr	r3, .L706+4	@ tmp552,
 8751 0440 E522     		movs	r2, #229	@,
 8752 0442 9B89     		ldrh	r3, [r3, #12]	@, ColCon
 8753 0444 6E21     		movs	r1, #110	@,
 8754 0446 FFF7FEFF 		bl	TFT_txt	@
 8755 044a F7E6     		b	.L667	@
 8756              	.L703:
 8757              	@ main.c:3159: 					UaPutS("\r\n TIM4->PSC/ARR="); 	sint2uart(TIM4->PSC);	UaPutC('/'); c_num=UART_g
 8758 044c 154C     		ldr	r4, .L706+20	@ tmp457,
 8759 044e 1648     		ldr	r0, .L706+24	@,
 8760 0450 FFF7FEFF 		bl	UaPutS	@
 8761 0454 208D     		ldrh	r0, [r4, #40]	@, MEM[(struct TIM_TypeDef *)1073743872B].PSC
 8762 0456 FFF7FEFF 		bl	sint2uart	@
 8763 045a 2F20     		movs	r0, #47	@,
 8764 045c FFF7FEFF 		bl	UaPutC	@
 8765 0460 FFF7FEFF 		bl	UART_getNum	@
 8766 0464 80B2     		uxth	r0, r0	@ c_num,
 8767              	@ main.c:3160: 					if(c_num){ 
 8768 0466 60B1     		cbz	r0, .L671	@ c_num,
 8769              	@ main.c:3161: 						BKP->DR41=c_num; TIM4->PSC=BKP->DR41;
 8770 0468 104A     		ldr	r2, .L706+28	@ tmp555,
 8771 046a A2F8B800 		strh	r0, [r2, #184]	@ movhi	@ c_num, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8772 046e B2F8B830 		ldrh	r3, [r2, #184]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8773 0472 9BB2     		uxth	r3, r3	@ _78, MEM[(struct BKP_TypeDef *)1073769472B].DR41
 8774 0474 2385     		strh	r3, [r4, #40]	@ movhi	@ _78, MEM[(struct TIM_TypeDef *)1073743872B].PSC
 8775              	@ main.c:3162: 						BKP->DR42=c_num; TIM4->ARR=BKP->DR42;
 8776 0476 A2F8BC00 		strh	r0, [r2, #188]	@ movhi	@ c_num, MEM[(struct BKP_TypeDef *)1073769472B].DR42
 8777 047a B2F8BC30 		ldrh	r3, [r2, #188]	@, MEM[(struct BKP_TypeDef *)1073769472B].DR42
 8778 047e 9BB2     		uxth	r3, r3	@ _79, MEM[(struct BKP_TypeDef *)1073769472B].DR42
ARM GAS  /tmp/ccAYxbuo.s 			page 155


 8779 0480 A385     		strh	r3, [r4, #44]	@ movhi	@ _79, MEM[(struct TIM_TypeDef *)1073743872B].ARR
 8780              	.L671:
 8781              	@ main.c:3168: 					UaPutS("\r\n");
 8782 0482 0B48     		ldr	r0, .L706+32	@,
 8783 0484 FFF7FEFF 		bl	UaPutS	@
 8784              	@ main.c:3169: 					chr='b';
 8785 0488 6223     		movs	r3, #98	@ tmp475,
 8786 048a 8DF81F30 		strb	r3, [sp, #31]	@ tmp475, chr
 8787 048e AEE7     		b	.L672	@
 8788              	.L707:
 8789              		.align	2
 8790              	.L706:
 8791 0490 00000000 		.word	.LANCHOR33
 8792 0494 00000000 		.word	ColCon
 8793 0498 10E000E0 		.word	-536813552
 8794 049c 00000000 		.word	trg1
 8795 04a0 D55204E9 		.word	-385592619
 8796 04a4 00080040 		.word	1073743872
 8797 04a8 34000000 		.word	.LC158
 8798 04ac 006C0040 		.word	1073769472
 8799 04b0 04000000 		.word	.LC13
 8800              		.size	Intro2, .-Intro2
 8801              		.section	.text.CopyTime,"ax",%progbits
 8802              		.align	1
 8803              		.p2align 2,,3
 8804              		.global	CopyTime
 8805              		.syntax unified
 8806              		.thumb
 8807              		.thumb_func
 8808              		.fpu softvfp
 8809              		.type	CopyTime, %function
 8810              	CopyTime:
 8811              		@ args = 0, pretend = 0, frame = 8
 8812              		@ frame_needed = 0, uses_anonymous_args = 0
 8813 0000 30B5     		push	{r4, r5, lr}	@
 8814 0002 0D46     		mov	r5, r1	@ lrtc, lrtc
 8815 0004 83B0     		sub	sp, sp, #12	@,,
 8816              	@ main.c:5059: void CopyTime(char *dczas,  T_RTC *lrtc)	{
 8817 0006 0446     		mov	r4, r0	@ dczas, dczas
 8818              	@ main.c:5064: 		dczas += 0; memcpy(dczas,unt2str(lrtc->hor,tbuf,2) ,2);
 8819 0008 01A9     		add	r1, sp, #4	@ tmp139,,
 8820 000a A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2	@, lrtc_12(D)->hor
 8821 000c 0222     		movs	r2, #2	@,
 8822 000e FFF7FEFF 		bl	unt2str	@
 8823 0012 0388     		ldrh	r3, [r0]	@ unaligned	@ _14, MEM[(char * {ref-all})_3]
 8824              	@ main.c:5065: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 8825 0014 01A9     		add	r1, sp, #4	@ tmp140,,
 8826              	@ main.c:5064: 		dczas += 0; memcpy(dczas,unt2str(lrtc->hor,tbuf,2) ,2);
 8827 0016 2380     		strh	r3, [r4]	@ unaligned	@ _14, MEM[(char * {ref-all})dczas_10(D)]
 8828              	@ main.c:5065: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
 8829 0018 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2	@, lrtc_12(D)->min
 8830 001a 0222     		movs	r2, #2	@,
 8831 001c FFF7FEFF 		bl	unt2str	@
 8832 0020 0388     		ldrh	r3, [r0]	@ unaligned	@ _17, MEM[(char * {ref-all})_6]
 8833              	@ main.c:5066: 		dczas += 3; memcpy(dczas,unt2str(lrtc->sec,tbuf,2) ,2);
 8834 0022 01A9     		add	r1, sp, #4	@ tmp141,,
 8835              	@ main.c:5065: 		dczas += 3; memcpy(dczas,unt2str(lrtc->min,tbuf,2) ,2);
ARM GAS  /tmp/ccAYxbuo.s 			page 156


 8836 0024 A4F80330 		strh	r3, [r4, #3]	@ unaligned	@ _17, MEM[(char * {ref-all})dczas_10(D) + 3B]
 8837              	@ main.c:5066: 		dczas += 3; memcpy(dczas,unt2str(lrtc->sec,tbuf,2) ,2);
 8838 0028 2878     		ldrb	r0, [r5]	@ zero_extendqisi2	@, lrtc_12(D)->sec
 8839 002a 0222     		movs	r2, #2	@,
 8840 002c FFF7FEFF 		bl	unt2str	@
 8841 0030 0388     		ldrh	r3, [r0]	@ unaligned	@ _20, MEM[(char * {ref-all})_9]
 8842 0032 E380     		strh	r3, [r4, #6]	@ unaligned	@ _20, MEM[(char * {ref-all})dczas_10(D) + 6B]
 8843              	@ main.c:5067: 	}
 8844 0034 03B0     		add	sp, sp, #12	@,,
 8845              		@ sp needed	@
 8846 0036 30BD     		pop	{r4, r5, pc}	@
 8847              		.size	CopyTime, .-CopyTime
 8848              		.section	.text.CopyDate,"ax",%progbits
 8849              		.align	1
 8850              		.p2align 2,,3
 8851              		.global	CopyDate
 8852              		.syntax unified
 8853              		.thumb
 8854              		.thumb_func
 8855              		.fpu softvfp
 8856              		.type	CopyDate, %function
 8857              	CopyDate:
 8858              		@ args = 0, pretend = 0, frame = 8
 8859              		@ frame_needed = 0, uses_anonymous_args = 0
 8860 0000 30B5     		push	{r4, r5, lr}	@
 8861 0002 0D46     		mov	r5, r1	@ lrtc, lrtc
 8862 0004 83B0     		sub	sp, sp, #12	@,,
 8863              	@ main.c:5068: void CopyDate(char *dczas,  T_RTC *lrtc)	{
 8864 0006 0446     		mov	r4, r0	@ dczas, dczas
 8865              	@ main.c:5071: 		dczas += 0;	memcpy(dczas,unt2str(lrtc->yer,tbuf,4) ,4);
 8866 0008 6946     		mov	r1, sp	@,
 8867 000a E888     		ldrh	r0, [r5, #6]	@, lrtc_12(D)->yer
 8868 000c 0422     		movs	r2, #4	@,
 8869 000e FFF7FEFF 		bl	unt2str	@
 8870 0012 0368     		ldr	r3, [r0]	@ unaligned	@ tmp126, MEM[(char * {ref-all})_3]
 8871              	@ main.c:5072: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 8872 0014 6946     		mov	r1, sp	@,
 8873              	@ main.c:5071: 		dczas += 0;	memcpy(dczas,unt2str(lrtc->yer,tbuf,4) ,4);
 8874 0016 2360     		str	r3, [r4]	@ unaligned	@ tmp126, MEM[(char * {ref-all})dczas_10(D)]
 8875              	@ main.c:5072: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 8876 0018 2879     		ldrb	r0, [r5, #4]	@ zero_extendqisi2	@, lrtc_12(D)->mon
 8877 001a 0222     		movs	r2, #2	@,
 8878 001c FFF7FEFF 		bl	unt2str	@
 8879 0020 0388     		ldrh	r3, [r0]	@ unaligned	@ _17, MEM[(char * {ref-all})_6]
 8880              	@ main.c:5073: 		dczas += 3; memcpy(dczas,unt2str(lrtc->mdy,tbuf,2) ,2);
 8881 0022 6946     		mov	r1, sp	@,
 8882              	@ main.c:5072: 		dczas += 5; memcpy(dczas,unt2str(lrtc->mon,tbuf,2) ,2);
 8883 0024 A4F80530 		strh	r3, [r4, #5]	@ unaligned	@ _17, MEM[(char * {ref-all})dczas_10(D) + 5B]
 8884              	@ main.c:5073: 		dczas += 3; memcpy(dczas,unt2str(lrtc->mdy,tbuf,2) ,2);
 8885 0028 E878     		ldrb	r0, [r5, #3]	@ zero_extendqisi2	@, lrtc_12(D)->mdy
 8886 002a 0222     		movs	r2, #2	@,
 8887 002c FFF7FEFF 		bl	unt2str	@
 8888 0030 0388     		ldrh	r3, [r0]	@ unaligned	@ _20, MEM[(char * {ref-all})_9]
 8889 0032 2381     		strh	r3, [r4, #8]	@ unaligned	@ _20, MEM[(char * {ref-all})dczas_10(D) + 8B]
 8890              	@ main.c:5074: 	}
 8891 0034 03B0     		add	sp, sp, #12	@,,
 8892              		@ sp needed	@
ARM GAS  /tmp/ccAYxbuo.s 			page 157


 8893 0036 30BD     		pop	{r4, r5, pc}	@
 8894              		.size	CopyDate, .-CopyDate
 8895              		.section	.text.Zegarek,"ax",%progbits
 8896              		.align	1
 8897              		.p2align 2,,3
 8898              		.global	Zegarek
 8899              		.syntax unified
 8900              		.thumb
 8901              		.thumb_func
 8902              		.fpu softvfp
 8903              		.type	Zegarek, %function
 8904              	Zegarek:
 8905              		@ args = 0, pretend = 0, frame = 24
 8906              		@ frame_needed = 0, uses_anonymous_args = 0
 8907 0000 F0B5     		push	{r4, r5, r6, r7, lr}	@
 8908 0002 87B0     		sub	sp, sp, #28	@,,
 8909              	@ main.c:956: 		char tbuf[9] ={"00-00-00"};
 8910 0004 6C46     		mov	r4, sp	@ tmp115,
 8911 0006 134A     		ldr	r2, .L717	@ tmp114,
 8912              	@ main.c:957: 		char dbuf[11]={"0000-00-00"}; // data
 8913 0008 03AB     		add	r3, sp, #12	@ tmp137,,
 8914              	@ main.c:956: 		char tbuf[9] ={"00-00-00"};
 8915 000a 07CA     		ldm	r2, {r0, r1, r2}	@ tmp114,,,
 8916 000c 03C4     		stmia	r4!, {r0, r1}	@ tmp115,,
 8917              	@ main.c:957: 		char dbuf[11]={"0000-00-00"}; // data
 8918 000e 1249     		ldr	r1, .L717+4	@ tmp117,
 8919              	@ main.c:956: 		char tbuf[9] ={"00-00-00"};
 8920 0010 2270     		strb	r2, [r4]	@, tbuf
 8921              	@ main.c:957: 		char dbuf[11]={"0000-00-00"}; // data
 8922 0012 07C9     		ldm	r1, {r0, r1, r2}	@ tmp117,,,
 8923 0014 03C3     		stmia	r3!, {r0, r1}	@ tmp118,,
 8924 0016 110C     		lsrs	r1, r2, #16	@ tmp120,,
 8925 0018 23F8022B 		strh	r2, [r3], #2	@ movhi	@, dbuf
 8926 001c 1970     		strb	r1, [r3]	@ tmp120, dbuf
 8927              	@ main.c:959: 		RtcInit();
 8928 001e FFF7FEFF 		bl	RtcInit	@
 8929 0022 0E4D     		ldr	r5, .L717+8	@ tmp133,
 8930              	@ main.c:967: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 8931 0024 0E4C     		ldr	r4, .L717+12	@ tmp123,
 8932 0026 0F4E     		ldr	r6, .L717+16	@ tmp125,
 8933              	@ main.c:969: 				rtc_GetTime(1,&Rtc);
 8934 0028 0F4F     		ldr	r7, .L717+20	@ tmp136,
 8935              	.L713:
 8936              	@ main.c:967: 			if(STCLK_MS*1000 < (trg0 - SysTick->VAL)){
 8937 002a 2B68     		ldr	r3, [r5]	@ trg0.92_1, trg0
 8938 002c A268     		ldr	r2, [r4, #8]	@ _2, MEM[(struct SysTick_Type *)3758153744B].VAL
 8939 002e 9B1A     		subs	r3, r3, r2	@ tmp124, trg0.92_1, _2
 8940 0030 B342     		cmp	r3, r6	@ tmp124, tmp125
 8941 0032 FAD9     		bls	.L713	@,
 8942              	@ main.c:968: 				trg0  = SysTick->VAL;
 8943 0034 A368     		ldr	r3, [r4, #8]	@ _4, MEM[(struct SysTick_Type *)3758153744B].VAL
 8944              	@ main.c:969: 				rtc_GetTime(1,&Rtc);
 8945 0036 3946     		mov	r1, r7	@, tmp136
 8946 0038 0120     		movs	r0, #1	@,
 8947              	@ main.c:968: 				trg0  = SysTick->VAL;
 8948 003a 2B60     		str	r3, [r5]	@ _4, trg0
 8949              	@ main.c:969: 				rtc_GetTime(1,&Rtc);
ARM GAS  /tmp/ccAYxbuo.s 			page 158


 8950 003c FFF7FEFF 		bl	rtc_GetTime	@
 8951              	@ main.c:970: 				CopyTime(tbuf,&Rtc);
 8952 0040 3946     		mov	r1, r7	@, tmp136
 8953 0042 6846     		mov	r0, sp	@,
 8954 0044 FFF7FEFF 		bl	CopyTime	@
 8955              	@ main.c:971: 				CopyDate(dbuf,&Rtc);
 8956 0048 3946     		mov	r1, r7	@, tmp136
 8957 004a 03A8     		add	r0, sp, #12	@ tmp138,,
 8958 004c FFF7FEFF 		bl	CopyDate	@
 8959 0050 EBE7     		b	.L713	@
 8960              	.L718:
 8961 0052 00BF     		.align	2
 8962              	.L717:
 8963 0054 00000000 		.word	.LC159
 8964 0058 0C000000 		.word	.LC160
 8965 005c 00000000 		.word	trg0
 8966 0060 10E000E0 		.word	-536813552
 8967 0064 40548900 		.word	9000000
 8968 0068 00000000 		.word	Rtc
 8969              		.size	Zegarek, .-Zegarek
 8970              		.section	.text.SysTick_Handler,"ax",%progbits
 8971              		.align	1
 8972              		.p2align 2,,3
 8973              		.global	SysTick_Handler
 8974              		.syntax unified
 8975              		.thumb
 8976              		.thumb_func
 8977              		.fpu softvfp
 8978              		.type	SysTick_Handler, %function
 8979              	SysTick_Handler:
 8980              		@ args = 0, pretend = 0, frame = 0
 8981              		@ frame_needed = 0, uses_anonymous_args = 0
 8982              		@ link register save eliminated.
 8983              	@ main.c:5116: 		N = Timt + STCLK_LD; Timt = N;
 8984 0000 1448     		ldr	r0, .L720	@ tmp130,
 8985 0002 154B     		ldr	r3, .L720+4	@ tmp131,
 8986 0004 0268     		ldr	r2, [r0]	@ Timt.245_1, Timt
 8987              	@ main.c:5118: 		n = delay_us + STCLK_LD; delay_us = n;
 8988 0006 1549     		ldr	r1, .L720+8	@ tmp133,
 8989              	@ main.c:5116: 		N = Timt + STCLK_LD; Timt = N;
 8990 0008 1A44     		add	r2, r2, r3	@ N, tmp131
 8991 000a 0260     		str	r2, [r0]	@ N, Timt
 8992              	@ main.c:5118: 		n = delay_us + STCLK_LD; delay_us = n;
 8993 000c 0A68     		ldr	r2, [r1]	@ delay_us.246_2, delay_us
 8994              	@ main.c:5122: 		n = (Tim0 + STCLK_LD); Tim0 = n;
 8995 000e 1448     		ldr	r0, .L720+12	@ tmp136,
 8996              	@ main.c:5118: 		n = delay_us + STCLK_LD; delay_us = n;
 8997 0010 1A44     		add	r2, r2, r3	@ _3, tmp131
 8998 0012 0A60     		str	r2, [r1]	@ _3, delay_us
 8999              	@ main.c:5122: 		n = (Tim0 + STCLK_LD); Tim0 = n;
 9000 0014 0268     		ldr	r2, [r0]	@ Tim0.248_4, Tim0
 9001              	@ main.c:5123: 		n = (Tim1 + STCLK_LD); Tim1 = n;
 9002 0016 1349     		ldr	r1, .L720+16	@ tmp139,
 9003              	@ main.c:5122: 		n = (Tim0 + STCLK_LD); Tim0 = n;
 9004 0018 1A44     		add	r2, r2, r3	@ _5, tmp131
 9005 001a 0260     		str	r2, [r0]	@ _5, Tim0
 9006              	@ main.c:5123: 		n = (Tim1 + STCLK_LD); Tim1 = n;
ARM GAS  /tmp/ccAYxbuo.s 			page 159


 9007 001c 0A68     		ldr	r2, [r1]	@ Tim1.250_6, Tim1
 9008              	@ main.c:5125: 		n = (trg0 + STCLK_LD); trg0 = n;
 9009 001e 1248     		ldr	r0, .L720+20	@ tmp142,
 9010              	@ main.c:5123: 		n = (Tim1 + STCLK_LD); Tim1 = n;
 9011 0020 1A44     		add	r2, r2, r3	@ _7, tmp131
 9012 0022 0A60     		str	r2, [r1]	@ _7, Tim1
 9013              	@ main.c:5125: 		n = (trg0 + STCLK_LD); trg0 = n;
 9014 0024 0268     		ldr	r2, [r0]	@ trg0.252_8, trg0
 9015              	@ main.c:5126: 		n = (trg1 + STCLK_LD); trg1 = n;
 9016 0026 1149     		ldr	r1, .L720+24	@ tmp145,
 9017              	@ main.c:5125: 		n = (trg0 + STCLK_LD); trg0 = n;
 9018 0028 1A44     		add	r2, r2, r3	@ _9, tmp131
 9019 002a 0260     		str	r2, [r0]	@ _9, trg0
 9020              	@ main.c:5126: 		n = (trg1 + STCLK_LD); trg1 = n;
 9021 002c 0A68     		ldr	r2, [r1]	@ trg1.254_10, trg1
 9022              	@ main.c:5127: 		n = (trg2 + STCLK_LD); trg2 = n;
 9023 002e 1048     		ldr	r0, .L720+28	@ tmp148,
 9024              	@ main.c:5126: 		n = (trg1 + STCLK_LD); trg1 = n;
 9025 0030 1A44     		add	r2, r2, r3	@ _11, tmp131
 9026 0032 0A60     		str	r2, [r1]	@ _11, trg1
 9027              	@ main.c:5127: 		n = (trg2 + STCLK_LD); trg2 = n;
 9028 0034 0268     		ldr	r2, [r0]	@ trg2.256_12, trg2
 9029              	@ main.c:5128: 		n = (trg3 + STCLK_LD); trg3 = n;
 9030 0036 0F49     		ldr	r1, .L720+32	@ tmp151,
 9031              	@ main.c:5127: 		n = (trg2 + STCLK_LD); trg2 = n;
 9032 0038 1A44     		add	r2, r2, r3	@ _13, tmp131
 9033 003a 0260     		str	r2, [r0]	@ _13, trg2
 9034              	@ main.c:5128: 		n = (trg3 + STCLK_LD); trg3 = n;
 9035 003c 0A68     		ldr	r2, [r1]	@ trg3.258_14, trg3
 9036              	@ main.c:5129: 		n = (trg4 + STCLK_LD); trg4 = n;
 9037 003e 0E48     		ldr	r0, .L720+36	@ tmp154,
 9038              	@ main.c:5128: 		n = (trg3 + STCLK_LD); trg3 = n;
 9039 0040 1A44     		add	r2, r2, r3	@ _15, tmp131
 9040 0042 0A60     		str	r2, [r1]	@ _15, trg3
 9041              	@ main.c:5129: 		n = (trg4 + STCLK_LD); trg4 = n;
 9042 0044 0268     		ldr	r2, [r0]	@ trg4.260_16, trg4
 9043              	@ main.c:5130: 		n = (trg5 + STCLK_LD); trg5 = n;
 9044 0046 0D49     		ldr	r1, .L720+40	@ tmp157,
 9045              	@ main.c:5129: 		n = (trg4 + STCLK_LD); trg4 = n;
 9046 0048 1A44     		add	r2, r2, r3	@ _17, tmp131
 9047 004a 0260     		str	r2, [r0]	@ _17, trg4
 9048              	@ main.c:5130: 		n = (trg5 + STCLK_LD); trg5 = n;
 9049 004c 0A68     		ldr	r2, [r1]	@ trg5.262_18, trg5
 9050 004e 1344     		add	r3, r3, r2	@ _19, trg5.262_18
 9051 0050 0B60     		str	r3, [r1]	@ _19, trg5
 9052              	@ main.c:5133: 	}
 9053 0052 7047     		bx	lr	@
 9054              	.L721:
 9055              		.align	2
 9056              	.L720:
 9057 0054 00000000 		.word	Timt
 9058 0058 40548900 		.word	9000000
 9059 005c 00000000 		.word	delay_us
 9060 0060 00000000 		.word	Tim0
 9061 0064 00000000 		.word	Tim1
 9062 0068 00000000 		.word	trg0
 9063 006c 00000000 		.word	trg1
ARM GAS  /tmp/ccAYxbuo.s 			page 160


 9064 0070 00000000 		.word	trg2
 9065 0074 00000000 		.word	trg3
 9066 0078 00000000 		.word	trg4
 9067 007c 00000000 		.word	trg5
 9068              		.size	SysTick_Handler, .-SysTick_Handler
 9069              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 9070              		.align	1
 9071              		.p2align 2,,3
 9072              		.global	TIM2_IRQHandler
 9073              		.syntax unified
 9074              		.thumb
 9075              		.thumb_func
 9076              		.fpu softvfp
 9077              		.type	TIM2_IRQHandler, %function
 9078              	TIM2_IRQHandler:
 9079              		@ Stack Align: May be called with mis-aligned SP.
 9080              		@ args = 0, pretend = 0, frame = 0
 9081              		@ frame_needed = 0, uses_anonymous_args = 0
 9082              		@ link register save eliminated.
 9083 0000 6846     		mov	r0, sp	@,
 9084 0002 20F00701 		bic	r1, r0, #7	@,,
 9085 0006 8D46     		mov	sp, r1	@,
 9086              	@ main.c:5135: 		bTIM2_SR_UIF = 0;
 9087 0008 0023     		movs	r3, #0	@ tmp111,
 9088              	@ main.c:5136: 		TIM2->SR = 0;
 9089 000a 4FF08042 		mov	r2, #1073741824	@ tmp112,
 9090              	@ main.c:5134: __attribute__((interrupt)) void TIM2_IRQHandler(void)				{
 9091 000e 01B4     		push	{r0}	@
 9092              	@ main.c:5135: 		bTIM2_SR_UIF = 0;
 9093 0010 0249     		ldr	r1, .L723	@ tmp110,
 9094              	@ main.c:5138: 	}
 9095 0012 01BC     		pop	{r0}	@
 9096              	@ main.c:5135: 		bTIM2_SR_UIF = 0;
 9097 0014 0B60     		str	r3, [r1]	@ tmp111, MEM[(volatile long unsigned int *)1107296768B]
 9098              	@ main.c:5138: 	}
 9099 0016 8546     		mov	sp, r0	@,
 9100              	@ main.c:5136: 		TIM2->SR = 0;
 9101 0018 1382     		strh	r3, [r2, #16]	@ movhi	@ tmp111, MEM[(struct TIM_TypeDef *)1073741824B].SR
 9102              	@ main.c:5138: 	}
 9103 001a 7047     		bx	lr	@
 9104              	.L724:
 9105              		.align	2
 9106              	.L723:
 9107 001c 00020042 		.word	1107296768
 9108              		.size	TIM2_IRQHandler, .-TIM2_IRQHandler
 9109              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 9110              		.align	1
 9111              		.p2align 2,,3
 9112              		.global	TIM3_IRQHandler
 9113              		.syntax unified
 9114              		.thumb
 9115              		.thumb_func
 9116              		.fpu softvfp
 9117              		.type	TIM3_IRQHandler, %function
 9118              	TIM3_IRQHandler:
 9119              		@ Stack Align: May be called with mis-aligned SP.
 9120              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccAYxbuo.s 			page 161


 9121              		@ frame_needed = 0, uses_anonymous_args = 0
 9122              		@ link register save eliminated.
 9123 0000 6846     		mov	r0, sp	@,
 9124 0002 20F00701 		bic	r1, r0, #7	@,,
 9125 0006 8D46     		mov	sp, r1	@,
 9126 0008 01B4     		push	{r0}	@
 9127              	@ main.c:5140: 		TIM3->SR = 0;
 9128 000a 0020     		movs	r0, #0	@ tmp122,
 9129              	@ main.c:5144: 		N = Timt3     + TIM3_ARR; Timt3 = N;
 9130 000c 4FF6FF73 		movw	r3, #65535	@ tmp124,
 9131              	@ main.c:5140: 		TIM3->SR = 0;
 9132 0010 0C4A     		ldr	r2, .L726	@ tmp120,
 9133              	@ main.c:5144: 		N = Timt3     + TIM3_ARR; Timt3 = N;
 9134 0012 0D49     		ldr	r1, .L726+4	@ tmp123,
 9135              	@ main.c:5140: 		TIM3->SR = 0;
 9136 0014 1082     		strh	r0, [r2, #16]	@ movhi	@ tmp122, MEM[(struct TIM_TypeDef *)1073742848B].SR
 9137              	@ main.c:5144: 		N = Timt3     + TIM3_ARR; Timt3 = N;
 9138 0016 0A68     		ldr	r2, [r1]	@ Timt3.264_1, Timt3
 9139              	@ main.c:5145: 		n = delay3_us + TIM3_ARR; delay3_us = n;
 9140 0018 0C48     		ldr	r0, .L726+8	@ tmp126,
 9141              	@ main.c:5144: 		N = Timt3     + TIM3_ARR; Timt3 = N;
 9142 001a 1A44     		add	r2, r2, r3	@ N, tmp124
 9143 001c 0A60     		str	r2, [r1]	@ N, Timt3
 9144              	@ main.c:5145: 		n = delay3_us + TIM3_ARR; delay3_us = n;
 9145 001e 0268     		ldr	r2, [r0]	@ delay3_us.265_2, delay3_us
 9146              	@ main.c:5149: 		n = (t3rg0 + TIM3_ARR); t3rg0 = n;
 9147 0020 0B49     		ldr	r1, .L726+12	@ tmp129,
 9148              	@ main.c:5145: 		n = delay3_us + TIM3_ARR; delay3_us = n;
 9149 0022 1A44     		add	r2, r2, r3	@ n, tmp124
 9150 0024 0260     		str	r2, [r0]	@ n, delay3_us
 9151              	@ main.c:5149: 		n = (t3rg0 + TIM3_ARR); t3rg0 = n;
 9152 0026 0A68     		ldr	r2, [r1]	@ t3rg0.266_3, t3rg0
 9153              	@ main.c:5150: 		n = (t3rg1 + TIM3_ARR); t3rg1 = n;
 9154 0028 0A48     		ldr	r0, .L726+16	@ tmp132,
 9155              	@ main.c:5149: 		n = (t3rg0 + TIM3_ARR); t3rg0 = n;
 9156 002a 1A44     		add	r2, r2, r3	@ n, tmp124
 9157 002c 0A60     		str	r2, [r1]	@ n, t3rg0
 9158              	@ main.c:5150: 		n = (t3rg1 + TIM3_ARR); t3rg1 = n;
 9159 002e 0268     		ldr	r2, [r0]	@ t3rg1.267_4, t3rg1
 9160              	@ main.c:5151: 		n = (t3rg2 + TIM3_ARR); t3rg2 = n;
 9161 0030 0949     		ldr	r1, .L726+20	@ tmp135,
 9162              	@ main.c:5150: 		n = (t3rg1 + TIM3_ARR); t3rg1 = n;
 9163 0032 1A44     		add	r2, r2, r3	@ n, tmp124
 9164 0034 0260     		str	r2, [r0]	@ n, t3rg1
 9165              	@ main.c:5151: 		n = (t3rg2 + TIM3_ARR); t3rg2 = n;
 9166 0036 0A68     		ldr	r2, [r1]	@ t3rg2.268_5, t3rg2
 9167              	@ main.c:5155: 	}
 9168 0038 01BC     		pop	{r0}	@
 9169              	@ main.c:5151: 		n = (t3rg2 + TIM3_ARR); t3rg2 = n;
 9170 003a 1344     		add	r3, r3, r2	@ n, t3rg2.268_5
 9171 003c 0B60     		str	r3, [r1]	@ n, t3rg2
 9172              	@ main.c:5155: 	}
 9173 003e 8546     		mov	sp, r0	@,
 9174 0040 7047     		bx	lr	@
 9175              	.L727:
 9176 0042 00BF     		.align	2
 9177              	.L726:
ARM GAS  /tmp/ccAYxbuo.s 			page 162


 9178 0044 00040040 		.word	1073742848
 9179 0048 00000000 		.word	Timt3
 9180 004c 00000000 		.word	delay3_us
 9181 0050 00000000 		.word	t3rg0
 9182 0054 00000000 		.word	t3rg1
 9183 0058 00000000 		.word	t3rg2
 9184              		.size	TIM3_IRQHandler, .-TIM3_IRQHandler
 9185              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 9186              		.align	1
 9187              		.p2align 2,,3
 9188              		.global	EXTI0_IRQHandler
 9189              		.syntax unified
 9190              		.thumb
 9191              		.thumb_func
 9192              		.fpu softvfp
 9193              		.type	EXTI0_IRQHandler, %function
 9194              	EXTI0_IRQHandler:
 9195              		@ Stack Align: May be called with mis-aligned SP.
 9196              		@ args = 0, pretend = 0, frame = 0
 9197              		@ frame_needed = 0, uses_anonymous_args = 0
 9198              		@ link register save eliminated.
 9199 0000 6846     		mov	r0, sp	@,
 9200 0002 20F00701 		bic	r1, r0, #7	@,,
 9201 0006 8D46     		mov	sp, r1	@,
 9202              	@ main.c:5157: 		if(PB0_i){
 9203 0008 064B     		ldr	r3, .L733	@ tmp116,
 9204              	@ main.c:5156: __attribute__((interrupt)) void EXTI0_IRQHandler(void)			{
 9205 000a 01B4     		push	{r0}	@
 9206              	@ main.c:5157: 		if(PB0_i){
 9207 000c 1B68     		ldr	r3, [r3]	@ _1, MEM[(volatile long unsigned int *)1109491968B]
 9208 000e 1BB1     		cbz	r3, .L729	@ _1,
 9209              	@ main.c:5158: 			flag_9=1;
 9210 0010 0122     		movs	r2, #1	@ tmp120,
 9211 0012 054B     		ldr	r3, .L733+4	@ tmp118,
 9212 0014 5B01     		lsls	r3, r3, #5	@ tmp119, tmp118,
 9213 0016 5A62     		str	r2, [r3, #36]	@ tmp120, *_6
 9214              	.L729:
 9215              	@ main.c:5160: 		EXTI->PR   = EXTI_PR_PR0;				// Clear interupt request
 9216 0018 0122     		movs	r2, #1	@ tmp122,
 9217 001a 044B     		ldr	r3, .L733+8	@ tmp121,
 9218              	@ main.c:5161: 	}
 9219 001c 01BC     		pop	{r0}	@
 9220              	@ main.c:5160: 		EXTI->PR   = EXTI_PR_PR0;				// Clear interupt request
 9221 001e 5A61     		str	r2, [r3, #20]	@ tmp122, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9222              	@ main.c:5161: 	}
 9223 0020 8546     		mov	sp, r0	@,
 9224 0022 7047     		bx	lr	@
 9225              	.L734:
 9226              		.align	2
 9227              	.L733:
 9228 0024 00812142 		.word	1109491968
 9229 0028 00001001 		.word	.LANCHOR17+17825792
 9230 002c 00040140 		.word	1073808384
 9231              		.size	EXTI0_IRQHandler, .-EXTI0_IRQHandler
 9232              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
 9233              		.align	1
 9234              		.p2align 2,,3
ARM GAS  /tmp/ccAYxbuo.s 			page 163


 9235              		.global	EXTI1_IRQHandler
 9236              		.syntax unified
 9237              		.thumb
 9238              		.thumb_func
 9239              		.fpu softvfp
 9240              		.type	EXTI1_IRQHandler, %function
 9241              	EXTI1_IRQHandler:
 9242              		@ Stack Align: May be called with mis-aligned SP.
 9243              		@ args = 0, pretend = 0, frame = 0
 9244              		@ frame_needed = 0, uses_anonymous_args = 0
 9245              		@ link register save eliminated.
 9246 0000 6846     		mov	r0, sp	@,
 9247 0002 20F00701 		bic	r1, r0, #7	@,,
 9248 0006 8D46     		mov	sp, r1	@,
 9249              	@ main.c:5164: 		EXTI->PR   = EXTI_PR_PR1;				// Clear interupt request
 9250 0008 0221     		movs	r1, #2	@ tmp113,
 9251 000a 054B     		ldr	r3, .L736	@ tmp112,
 9252              	@ main.c:5165: 		LED ^=1;
 9253 000c 054A     		ldr	r2, .L736+4	@ tmp114,
 9254              	@ main.c:5162: __attribute__((interrupt)) void EXTI1_IRQHandler(void)			{
 9255 000e 01B4     		push	{r0}	@
 9256              	@ main.c:5164: 		EXTI->PR   = EXTI_PR_PR1;				// Clear interupt request
 9257 0010 5961     		str	r1, [r3, #20]	@ tmp113, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9258              	@ main.c:5165: 		LED ^=1;
 9259 0012 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109524916B]
 9260              	@ main.c:5166: 	}
 9261 0014 01BC     		pop	{r0}	@
 9262              	@ main.c:5165: 		LED ^=1;
 9263 0016 83F00103 		eor	r3, r3, #1	@ _2, _1,
 9264 001a 1360     		str	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109524916B]
 9265              	@ main.c:5166: 	}
 9266 001c 8546     		mov	sp, r0	@,
 9267 001e 7047     		bx	lr	@
 9268              	.L737:
 9269              		.align	2
 9270              	.L736:
 9271 0020 00040140 		.word	1073808384
 9272 0024 B4012242 		.word	1109524916
 9273              		.size	EXTI1_IRQHandler, .-EXTI1_IRQHandler
 9274              		.section	.text.EXTI2_IRQHandler,"ax",%progbits
 9275              		.align	1
 9276              		.p2align 2,,3
 9277              		.global	EXTI2_IRQHandler
 9278              		.syntax unified
 9279              		.thumb
 9280              		.thumb_func
 9281              		.fpu softvfp
 9282              		.type	EXTI2_IRQHandler, %function
 9283              	EXTI2_IRQHandler:
 9284              		@ Stack Align: May be called with mis-aligned SP.
 9285              		@ args = 0, pretend = 0, frame = 0
 9286              		@ frame_needed = 0, uses_anonymous_args = 0
 9287              		@ link register save eliminated.
 9288 0000 6846     		mov	r0, sp	@,
 9289 0002 20F00701 		bic	r1, r0, #7	@,,
 9290 0006 8D46     		mov	sp, r1	@,
 9291              	@ main.c:5168: 		bEXTI_PR_2 = 1;
ARM GAS  /tmp/ccAYxbuo.s 			page 164


 9292 0008 0121     		movs	r1, #1	@ tmp113,
 9293 000a 054B     		ldr	r3, .L739	@ tmp112,
 9294              	@ main.c:5169: 		LED ^= 1;
 9295 000c 054A     		ldr	r2, .L739+4	@ tmp114,
 9296              	@ main.c:5167: __attribute__((interrupt)) void EXTI2_IRQHandler(void)			{
 9297 000e 01B4     		push	{r0}	@
 9298              	@ main.c:5168: 		bEXTI_PR_2 = 1;
 9299 0010 1960     		str	r1, [r3]	@ tmp113, MEM[(volatile long unsigned int *)1109426824B]
 9300              	@ main.c:5169: 		LED ^= 1;
 9301 0012 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109524916B]
 9302              	@ main.c:5170: 	}
 9303 0014 01BC     		pop	{r0}	@
 9304              	@ main.c:5169: 		LED ^= 1;
 9305 0016 4B40     		eors	r3, r3, r1	@, _2, _1,
 9306 0018 1360     		str	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109524916B]
 9307              	@ main.c:5170: 	}
 9308 001a 8546     		mov	sp, r0	@,
 9309 001c 7047     		bx	lr	@
 9310              	.L740:
 9311 001e 00BF     		.align	2
 9312              	.L739:
 9313 0020 88822042 		.word	1109426824
 9314 0024 B4012242 		.word	1109524916
 9315              		.size	EXTI2_IRQHandler, .-EXTI2_IRQHandler
 9316              		.section	.text.EXTI3_IRQHandler,"ax",%progbits
 9317              		.align	1
 9318              		.p2align 2,,3
 9319              		.global	EXTI3_IRQHandler
 9320              		.syntax unified
 9321              		.thumb
 9322              		.thumb_func
 9323              		.fpu softvfp
 9324              		.type	EXTI3_IRQHandler, %function
 9325              	EXTI3_IRQHandler:
 9326              		@ Stack Align: May be called with mis-aligned SP.
 9327              		@ args = 0, pretend = 0, frame = 0
 9328              		@ frame_needed = 0, uses_anonymous_args = 0
 9329              		@ link register save eliminated.
 9330 0000 6846     		mov	r0, sp	@,
 9331 0002 20F00701 		bic	r1, r0, #7	@,,
 9332 0006 8D46     		mov	sp, r1	@,
 9333              	@ main.c:5172: 		EXTI->PR   = EXTI_PR_PR3;				// Clear interupt request
 9334 0008 0821     		movs	r1, #8	@ tmp113,
 9335 000a 054B     		ldr	r3, .L742	@ tmp112,
 9336              	@ main.c:5173: 		LED ^=1;
 9337 000c 054A     		ldr	r2, .L742+4	@ tmp114,
 9338              	@ main.c:5171: __attribute__((interrupt)) void EXTI3_IRQHandler(void)			{
 9339 000e 01B4     		push	{r0}	@
 9340              	@ main.c:5172: 		EXTI->PR   = EXTI_PR_PR3;				// Clear interupt request
 9341 0010 5961     		str	r1, [r3, #20]	@ tmp113, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9342              	@ main.c:5173: 		LED ^=1;
 9343 0012 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109524916B]
 9344              	@ main.c:5174: 	}
 9345 0014 01BC     		pop	{r0}	@
 9346              	@ main.c:5173: 		LED ^=1;
 9347 0016 83F00103 		eor	r3, r3, #1	@ _2, _1,
 9348 001a 1360     		str	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109524916B]
ARM GAS  /tmp/ccAYxbuo.s 			page 165


 9349              	@ main.c:5174: 	}
 9350 001c 8546     		mov	sp, r0	@,
 9351 001e 7047     		bx	lr	@
 9352              	.L743:
 9353              		.align	2
 9354              	.L742:
 9355 0020 00040140 		.word	1073808384
 9356 0024 B4012242 		.word	1109524916
 9357              		.size	EXTI3_IRQHandler, .-EXTI3_IRQHandler
 9358              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
 9359              		.align	1
 9360              		.p2align 2,,3
 9361              		.global	EXTI4_IRQHandler
 9362              		.syntax unified
 9363              		.thumb
 9364              		.thumb_func
 9365              		.fpu softvfp
 9366              		.type	EXTI4_IRQHandler, %function
 9367              	EXTI4_IRQHandler:
 9368              		@ Stack Align: May be called with mis-aligned SP.
 9369              		@ args = 0, pretend = 0, frame = 0
 9370              		@ frame_needed = 0, uses_anonymous_args = 0
 9371              		@ link register save eliminated.
 9372 0000 6846     		mov	r0, sp	@,
 9373 0002 20F00701 		bic	r1, r0, #7	@,,
 9374 0006 8D46     		mov	sp, r1	@,
 9375              	@ main.c:5176: 		EXTI->PR   = EXTI_PR_PR4;			
 9376 0008 1021     		movs	r1, #16	@ tmp113,
 9377 000a 054B     		ldr	r3, .L745	@ tmp112,
 9378              	@ main.c:5177: 		LED ^= 1;
 9379 000c 054A     		ldr	r2, .L745+4	@ tmp114,
 9380              	@ main.c:5175: __attribute__((interrupt)) void EXTI4_IRQHandler(void)			{
 9381 000e 01B4     		push	{r0}	@
 9382              	@ main.c:5176: 		EXTI->PR   = EXTI_PR_PR4;			
 9383 0010 5961     		str	r1, [r3, #20]	@ tmp113, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9384              	@ main.c:5177: 		LED ^= 1;
 9385 0012 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109524916B]
 9386              	@ main.c:5178: 	}
 9387 0014 01BC     		pop	{r0}	@
 9388              	@ main.c:5177: 		LED ^= 1;
 9389 0016 83F00103 		eor	r3, r3, #1	@ _2, _1,
 9390 001a 1360     		str	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109524916B]
 9391              	@ main.c:5178: 	}
 9392 001c 8546     		mov	sp, r0	@,
 9393 001e 7047     		bx	lr	@
 9394              	.L746:
 9395              		.align	2
 9396              	.L745:
 9397 0020 00040140 		.word	1073808384
 9398 0024 B4012242 		.word	1109524916
 9399              		.size	EXTI4_IRQHandler, .-EXTI4_IRQHandler
 9400              		.section	.text.EXTI15_10_IRQHandler,"ax",%progbits
 9401              		.align	1
 9402              		.p2align 2,,3
 9403              		.global	EXTI15_10_IRQHandler
 9404              		.syntax unified
 9405              		.thumb
ARM GAS  /tmp/ccAYxbuo.s 			page 166


 9406              		.thumb_func
 9407              		.fpu softvfp
 9408              		.type	EXTI15_10_IRQHandler, %function
 9409              	EXTI15_10_IRQHandler:
 9410              		@ Stack Align: May be called with mis-aligned SP.
 9411              		@ args = 0, pretend = 0, frame = 0
 9412              		@ frame_needed = 0, uses_anonymous_args = 0
 9413              		@ link register save eliminated.
 9414 0000 6846     		mov	r0, sp	@,
 9415 0002 20F00701 		bic	r1, r0, #7	@,,
 9416 0006 8D46     		mov	sp, r1	@,
 9417              	@ main.c:5180: 		if(bEXTI_PR_13) {
 9418 0008 044B     		ldr	r3, .L752	@ tmp111,
 9419              	@ main.c:5179: __attribute__((interrupt)) void EXTI15_10_IRQHandler(void)	{
 9420 000a 01B4     		push	{r0}	@
 9421              	@ main.c:5180: 		if(bEXTI_PR_13) {
 9422 000c 1A68     		ldr	r2, [r3]	@ _1, MEM[(volatile long unsigned int *)1109426868B]
 9423 000e 0AB1     		cbz	r2, .L747	@ _1,
 9424              	@ main.c:5181: 			bEXTI_PR_13 = 1;
 9425 0010 0122     		movs	r2, #1	@ tmp113,
 9426 0012 1A60     		str	r2, [r3]	@ tmp113, MEM[(volatile long unsigned int *)1109426868B]
 9427              	.L747:
 9428              	@ main.c:5185: 	}
 9429 0014 01BC     		pop	{r0}	@
 9430 0016 8546     		mov	sp, r0	@,
 9431 0018 7047     		bx	lr	@
 9432              	.L753:
 9433 001a 00BF     		.align	2
 9434              	.L752:
 9435 001c B4822042 		.word	1109426868
 9436              		.size	EXTI15_10_IRQHandler, .-EXTI15_10_IRQHandler
 9437              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 9438              		.align	1
 9439              		.p2align 2,,3
 9440              		.global	EXTI9_5_IRQHandler
 9441              		.syntax unified
 9442              		.thumb
 9443              		.thumb_func
 9444              		.fpu softvfp
 9445              		.type	EXTI9_5_IRQHandler, %function
 9446              	EXTI9_5_IRQHandler:
 9447              		@ Stack Align: May be called with mis-aligned SP.
 9448              		@ args = 0, pretend = 0, frame = 0
 9449              		@ frame_needed = 0, uses_anonymous_args = 0
 9450              		@ link register save eliminated.
 9451 0000 6846     		mov	r0, sp	@,
 9452 0002 20F00701 		bic	r1, r0, #7	@,,
 9453 0006 8D46     		mov	sp, r1	@,
 9454              	@ main.c:5187: 		if((bPBI_6 == 0)&&(EXTI->PR & EXTI_PR_PR6)) {			// check request PB6 touchpad
 9455 0008 0B4B     		ldr	r3, .L759	@ tmp120,
 9456              	@ main.c:5186: __attribute__((interrupt)) void EXTI9_5_IRQHandler	 (void)	{
 9457 000a 01B4     		push	{r0}	@
 9458              	@ main.c:5187: 		if((bPBI_6 == 0)&&(EXTI->PR & EXTI_PR_PR6)) {			// check request PB6 touchpad
 9459 000c 1B68     		ldr	r3, [r3]	@ _1, MEM[(volatile long unsigned int *)1109491992B]
 9460 000e 83B9     		cbnz	r3, .L754	@ _1,
 9461              	@ main.c:5187: 		if((bPBI_6 == 0)&&(EXTI->PR & EXTI_PR_PR6)) {			// check request PB6 touchpad
 9462 0010 03F18043 		add	r3, r3, #1073741824	@ tmp121, tmp121,
ARM GAS  /tmp/ccAYxbuo.s 			page 167


 9463 0014 03F58233 		add	r3, r3, #66560	@ tmp121, tmp121,
 9464 0018 5A69     		ldr	r2, [r3, #20]	@ _2, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9465 001a 5206     		lsls	r2, r2, #25	@, _2,
 9466 001c 09D5     		bpl	.L754	@,
 9467              	@ main.c:5190: 			f1_tpirq   = 1;									// set IRQ_TP FLAG
 9468 001e 0120     		movs	r0, #1	@ tmp126,
 9469              	@ main.c:5191: 			EXTI->PR   = EXTI_PR_PR6;				// Clear interupt request
 9470 0020 4021     		movs	r1, #64	@ tmp128,
 9471              	@ main.c:5190: 			f1_tpirq   = 1;									// set IRQ_TP FLAG
 9472 0022 064A     		ldr	r2, .L759+4	@ tmp124,
 9473 0024 5201     		lsls	r2, r2, #5	@ tmp125, tmp124,
 9474 0026 5060     		str	r0, [r2, #4]	@ tmp126, *_8
 9475              	@ main.c:5191: 			EXTI->PR   = EXTI_PR_PR6;				// Clear interupt request
 9476 0028 5961     		str	r1, [r3, #20]	@ tmp128, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9477              	@ main.c:5194: 			EXTI->FTSR &= ~EXTI_FTSR_TR6;  	// Failing trigger disabled
 9478 002a DA68     		ldr	r2, [r3, #12]	@ _9, MEM[(struct EXTI_TypeDef *)1073808384B].FTSR
 9479 002c 22F04002 		bic	r2, r2, #64	@ _10, _9,
 9480 0030 DA60     		str	r2, [r3, #12]	@ _10, MEM[(struct EXTI_TypeDef *)1073808384B].FTSR
 9481              	.L754:
 9482              	@ main.c:5198: 	}
 9483 0032 01BC     		pop	{r0}	@
 9484 0034 8546     		mov	sp, r0	@,
 9485 0036 7047     		bx	lr	@
 9486              	.L760:
 9487              		.align	2
 9488              	.L759:
 9489 0038 18812142 		.word	1109491992
 9490 003c 00001001 		.word	.LANCHOR17+17825792
 9491              		.size	EXTI9_5_IRQHandler, .-EXTI9_5_IRQHandler
 9492              		.section	.text.RTC_IRQHandler,"ax",%progbits
 9493              		.align	1
 9494              		.p2align 2,,3
 9495              		.global	RTC_IRQHandler
 9496              		.syntax unified
 9497              		.thumb
 9498              		.thumb_func
 9499              		.fpu softvfp
 9500              		.type	RTC_IRQHandler, %function
 9501              	RTC_IRQHandler:
 9502              		@ Stack Align: May be called with mis-aligned SP.
 9503              		@ args = 0, pretend = 0, frame = 0
 9504              		@ frame_needed = 0, uses_anonymous_args = 0
 9505              		@ link register save eliminated.
 9506 0000 6846     		mov	r0, sp	@,
 9507 0002 20F00701 		bic	r1, r0, #7	@,,
 9508 0006 8D46     		mov	sp, r1	@,
 9509              	@ main.c:5203: 		f3_rtc_1sec = 1;
 9510 0008 0121     		movs	r1, #1	@ tmp121,
 9511              	@ main.c:5199: __attribute__((interrupt)) void RTC_IRQHandler 	(void)			{
 9512 000a 11B4     		push	{r0, r4}	@
 9513              	@ main.c:5202: 		bRTC_CRL_SECF = 0;		//Clear Interrupt Flag bit
 9514 000c 0024     		movs	r4, #0	@ tmp117,
 9515              	@ main.c:5203: 		f3_rtc_1sec = 1;
 9516 000e 064B     		ldr	r3, .L765	@ tmp119,
 9517              	@ main.c:5202: 		bRTC_CRL_SECF = 0;		//Clear Interrupt Flag bit
 9518 0010 0648     		ldr	r0, .L765+4	@ tmp116,
 9519              	@ main.c:5203: 		f3_rtc_1sec = 1;
ARM GAS  /tmp/ccAYxbuo.s 			page 168


 9520 0012 5B01     		lsls	r3, r3, #5	@ tmp120, tmp119,
 9521              	@ main.c:5204: 		while( bRTC_CRL_RTOFF == 0 );
 9522 0014 064A     		ldr	r2, .L765+8	@ tmp122,
 9523              	@ main.c:5202: 		bRTC_CRL_SECF = 0;		//Clear Interrupt Flag bit
 9524 0016 0460     		str	r4, [r0]	@ tmp117, MEM[(volatile long unsigned int *)1107624064B]
 9525              	@ main.c:5203: 		f3_rtc_1sec = 1;
 9526 0018 D960     		str	r1, [r3, #12]	@ tmp121, *_5
 9527              	.L762:
 9528              	@ main.c:5204: 		while( bRTC_CRL_RTOFF == 0 );
 9529 001a 1368     		ldr	r3, [r2]	@ _6, MEM[(volatile long unsigned int *)1107624084B]
 9530 001c 002B     		cmp	r3, #0	@ _6
 9531 001e FCD0     		beq	.L762	@
 9532              	@ main.c:5205: 	}
 9533 0020 11BC     		pop	{r0, r4}	@
 9534 0022 8546     		mov	sp, r0	@,
 9535 0024 7047     		bx	lr	@
 9536              	.L766:
 9537 0026 00BF     		.align	2
 9538              	.L765:
 9539 0028 00001001 		.word	.LANCHOR17+17825792
 9540 002c 80000542 		.word	1107624064
 9541 0030 94000542 		.word	1107624084
 9542              		.size	RTC_IRQHandler, .-RTC_IRQHandler
 9543              		.section	.text.RTCAlarm_IRQHandler,"ax",%progbits
 9544              		.align	1
 9545              		.p2align 2,,3
 9546              		.global	RTCAlarm_IRQHandler
 9547              		.syntax unified
 9548              		.thumb
 9549              		.thumb_func
 9550              		.fpu softvfp
 9551              		.type	RTCAlarm_IRQHandler, %function
 9552              	RTCAlarm_IRQHandler:
 9553              		@ Stack Align: May be called with mis-aligned SP.
 9554              		@ args = 0, pretend = 0, frame = 0
 9555              		@ frame_needed = 0, uses_anonymous_args = 0
 9556              		@ link register save eliminated.
 9557 0000 6846     		mov	r0, sp	@,
 9558 0002 20F00701 		bic	r1, r0, #7	@,,
 9559 0006 8D46     		mov	sp, r1	@,
 9560              	@ main.c:5207: 		RTC->CRL &= ~(RTC_CRL_ALRF); // potrzebne do wakeup
 9561 0008 0749     		ldr	r1, .L768	@ tmp114,
 9562              	@ main.c:5208: 		EXTI->PR |= EXTI_PR_PR17;
 9563 000a 084A     		ldr	r2, .L768+4	@ tmp120,
 9564              	@ main.c:5207: 		RTC->CRL &= ~(RTC_CRL_ALRF); // potrzebne do wakeup
 9565 000c 8B88     		ldrh	r3, [r1, #4]	@, MEM[(struct RTC_TypeDef *)1073752064B].CRL
 9566              	@ main.c:5206: __attribute__((interrupt)) void RTCAlarm_IRQHandler(void){
 9567 000e 01B4     		push	{r0}	@
 9568              	@ main.c:5207: 		RTC->CRL &= ~(RTC_CRL_ALRF); // potrzebne do wakeup
 9569 0010 23F00203 		bic	r3, r3, #2	@ _2, MEM[(struct RTC_TypeDef *)1073752064B].CRL,
 9570 0014 1B04     		lsls	r3, r3, #16	@ _2, _2,
 9571 0016 1B0C     		lsrs	r3, r3, #16	@ _2, _2,
 9572 0018 8B80     		strh	r3, [r1, #4]	@ movhi	@ _2, MEM[(struct RTC_TypeDef *)1073752064B].CRL
 9573              	@ main.c:5208: 		EXTI->PR |= EXTI_PR_PR17;
 9574 001a 5369     		ldr	r3, [r2, #20]	@ _3, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9575              	@ main.c:5211: 	}
 9576 001c 01BC     		pop	{r0}	@
ARM GAS  /tmp/ccAYxbuo.s 			page 169


 9577              	@ main.c:5208: 		EXTI->PR |= EXTI_PR_PR17;
 9578 001e 43F40033 		orr	r3, r3, #131072	@ _4, _3,
 9579 0022 5361     		str	r3, [r2, #20]	@ _4, MEM[(struct EXTI_TypeDef *)1073808384B].PR
 9580              	@ main.c:5211: 	}
 9581 0024 8546     		mov	sp, r0	@,
 9582 0026 7047     		bx	lr	@
 9583              	.L769:
 9584              		.align	2
 9585              	.L768:
 9586 0028 00280040 		.word	1073752064
 9587 002c 00040140 		.word	1073808384
 9588              		.size	RTCAlarm_IRQHandler, .-RTCAlarm_IRQHandler
 9589              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 9590              		.align	1
 9591              		.p2align 2,,3
 9592              		.global	DMA1_Channel1_IRQHandler
 9593              		.syntax unified
 9594              		.thumb
 9595              		.thumb_func
 9596              		.fpu softvfp
 9597              		.type	DMA1_Channel1_IRQHandler, %function
 9598              	DMA1_Channel1_IRQHandler:
 9599              		@ Stack Align: May be called with mis-aligned SP.
 9600              		@ args = 0, pretend = 0, frame = 0
 9601              		@ frame_needed = 0, uses_anonymous_args = 0
 9602              		@ link register save eliminated.
 9603 0000 6846     		mov	r0, sp	@,
 9604 0002 20F00701 		bic	r1, r0, #7	@,,
 9605 0006 8D46     		mov	sp, r1	@,
 9606              	@ main.c:5213: 		if(DMA1->ISR & DMA_ISR_GIF1){
 9607 0008 084B     		ldr	r3, .L775	@ tmp119,
 9608              	@ main.c:5212: __attribute__((interrupt)) void DMA1_Channel1_IRQHandler(void){
 9609 000a 11B4     		push	{r0, r4}	@
 9610              	@ main.c:5213: 		if(DMA1->ISR & DMA_ISR_GIF1){
 9611 000c 1A68     		ldr	r2, [r3]	@ _1, MEM[(struct DMA_TypeDef *)1073872896B].ISR
 9612 000e D207     		lsls	r2, r2, #31	@, _1,
 9613 0010 09D5     		bpl	.L770	@,
 9614              	@ main.c:5218: 			f7_dma1 = 1;
 9615 0012 0120     		movs	r0, #1	@ tmp126,
 9616              	@ main.c:5215: 			DMA1->IFCR =                  DMA_IFCR_CTCIF1;
 9617 0014 0224     		movs	r4, #2	@ tmp122,
 9618              	@ main.c:5218: 			f7_dma1 = 1;
 9619 0016 064A     		ldr	r2, .L775+4	@ tmp124,
 9620              	@ main.c:5219: 			LED1   ^= 1;
 9621 0018 0649     		ldr	r1, .L775+8	@ tmp127,
 9622              	@ main.c:5218: 			f7_dma1 = 1;
 9623 001a 5201     		lsls	r2, r2, #5	@ tmp125, tmp124,
 9624              	@ main.c:5215: 			DMA1->IFCR =                  DMA_IFCR_CTCIF1;
 9625 001c 5C60     		str	r4, [r3, #4]	@ tmp122, MEM[(struct DMA_TypeDef *)1073872896B].IFCR
 9626              	@ main.c:5218: 			f7_dma1 = 1;
 9627 001e D061     		str	r0, [r2, #28]	@ tmp126, *_7
 9628              	@ main.c:5219: 			LED1   ^= 1;
 9629 0020 0B68     		ldr	r3, [r1]	@ _8, MEM[(volatile long unsigned int *)1109492096B]
 9630 0022 4340     		eors	r3, r3, r0	@, _9, _8,
 9631 0024 0B60     		str	r3, [r1]	@ _9, MEM[(volatile long unsigned int *)1109492096B]
 9632              	.L770:
 9633              	@ main.c:5223: 	}
ARM GAS  /tmp/ccAYxbuo.s 			page 170


 9634 0026 11BC     		pop	{r0, r4}	@
 9635 0028 8546     		mov	sp, r0	@,
 9636 002a 7047     		bx	lr	@
 9637              	.L776:
 9638              		.align	2
 9639              	.L775:
 9640 002c 00000240 		.word	1073872896
 9641 0030 00001001 		.word	.LANCHOR17+17825792
 9642 0034 80812142 		.word	1109492096
 9643              		.size	DMA1_Channel1_IRQHandler, .-DMA1_Channel1_IRQHandler
 9644              		.section	.text.FSMC_IRQHandler,"ax",%progbits
 9645              		.align	1
 9646              		.p2align 2,,3
 9647              		.global	FSMC_IRQHandler
 9648              		.syntax unified
 9649              		.thumb
 9650              		.thumb_func
 9651              		.fpu softvfp
 9652              		.type	FSMC_IRQHandler, %function
 9653              	FSMC_IRQHandler:
 9654              		@ Stack Align: May be called with mis-aligned SP.
 9655              		@ args = 0, pretend = 0, frame = 0
 9656              		@ frame_needed = 0, uses_anonymous_args = 0
 9657              		@ link register save eliminated.
 9658 0000 6846     		mov	r0, sp	@,
 9659 0002 20F00701 		bic	r1, r0, #7	@,,
 9660 0006 8D46     		mov	sp, r1	@,
 9661 0008 01B4     		push	{r0}	@
 9662              	@ main.c:5226: }
 9663 000a 01BC     		pop	{r0}	@
 9664 000c 8546     		mov	sp, r0	@,
 9665 000e 7047     		bx	lr	@
 9666              		.size	FSMC_IRQHandler, .-FSMC_IRQHandler
 9667              		.section	.text.DACDmaInit,"ax",%progbits
 9668              		.align	1
 9669              		.p2align 2,,3
 9670              		.global	DACDmaInit
 9671              		.syntax unified
 9672              		.thumb
 9673              		.thumb_func
 9674              		.fpu softvfp
 9675              		.type	DACDmaInit, %function
 9676              	DACDmaInit:
 9677              		@ args = 0, pretend = 0, frame = 0
 9678              		@ frame_needed = 0, uses_anonymous_args = 0
 9679              		@ link register save eliminated.
 9680 0000 10B4     		push	{r4}	@
 9681              	@ main.c:5417: 	DAC->DHR12RD	= (0<<16) | 900;
 9682 0002 4FF46174 		mov	r4, #900	@ tmp125,
 9683              	@ main.c:5408: 	RCC->APB1ENR  |= RCC_APB1ENR_DACEN;
 9684 0006 0A48     		ldr	r0, .L780	@ tmp116,
 9685              	@ main.c:5409: 	GPIOA->CRL   	&= 0xff00ffff;
 9686 0008 0A4B     		ldr	r3, .L780+4	@ tmp118,
 9687              	@ main.c:5408: 	RCC->APB1ENR  |= RCC_APB1ENR_DACEN;
 9688 000a C269     		ldr	r2, [r0, #28]	@ _1, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 9689              	@ main.c:5413: 	DAC->CR				= DAC_CR_TEN1|DAC_CR_TEN2|DAC_CR_WAVE1|DAC_CR_WAVE2|DAC_CR_EN1|DAC_CR_EN
 9690 000c 0A49     		ldr	r1, .L780+8	@ tmp122,
ARM GAS  /tmp/ccAYxbuo.s 			page 171


 9691              	@ main.c:5408: 	RCC->APB1ENR  |= RCC_APB1ENR_DACEN;
 9692 000e 42F00052 		orr	r2, r2, #536870912	@ _2, _1,
 9693 0012 C261     		str	r2, [r0, #28]	@ _2, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 9694              	@ main.c:5409: 	GPIOA->CRL   	&= 0xff00ffff;
 9695 0014 1A68     		ldr	r2, [r3]	@ _3, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 9696              	@ main.c:5413: 	DAC->CR				= DAC_CR_TEN1|DAC_CR_TEN2|DAC_CR_WAVE1|DAC_CR_WAVE2|DAC_CR_EN1|DAC_CR_EN
 9697 0016 0948     		ldr	r0, .L780+12	@ tmp123,
 9698              	@ main.c:5409: 	GPIOA->CRL   	&= 0xff00ffff;
 9699 0018 22F47F02 		bic	r2, r2, #16711680	@ _4, _3,
 9700 001c 1A60     		str	r2, [r3]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 9701              	@ main.c:5410: 	GPIOA->CRL   	|= 0x00dd0000;
 9702 001e 1A68     		ldr	r2, [r3]	@ _5, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 9703 0020 42F45D02 		orr	r2, r2, #14483456	@ _6, _5,
 9704 0024 1A60     		str	r2, [r3]	@ _6, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 9705              	@ main.c:5413: 	DAC->CR				= DAC_CR_TEN1|DAC_CR_TEN2|DAC_CR_WAVE1|DAC_CR_WAVE2|DAC_CR_EN1|DAC_CR_EN
 9706 0026 0860     		str	r0, [r1]	@ tmp123, MEM[(struct DAC_TypeDef *)1073771520B].CR
 9707              	@ main.c:5417: 	DAC->DHR12RD	= (0<<16) | 900;
 9708 0028 0C62     		str	r4, [r1, #32]	@ tmp125, MEM[(struct DAC_TypeDef *)1073771520B].DHR12RD
 9709              	@ main.c:5419: }
 9710 002a 10BC     		pop	{r4}	@
 9711 002c 7047     		bx	lr	@
 9712              	.L781:
 9713 002e 00BF     		.align	2
 9714              	.L780:
 9715 0030 00100240 		.word	1073876992
 9716 0034 00080140 		.word	1073809408
 9717 0038 00740040 		.word	1073771520
 9718 003c D50AD50A 		.word	181734101
 9719              		.size	DACDmaInit, .-DACDmaInit
 9720              		.section	.text.TIM4_IRQHandler,"ax",%progbits
 9721              		.align	1
 9722              		.p2align 2,,3
 9723              		.global	TIM4_IRQHandler
 9724              		.syntax unified
 9725              		.thumb
 9726              		.thumb_func
 9727              		.fpu softvfp
 9728              		.type	TIM4_IRQHandler, %function
 9729              	TIM4_IRQHandler:
 9730              		@ args = 0, pretend = 0, frame = 0
 9731              		@ frame_needed = 0, uses_anonymous_args = 0
 9732              		@ link register save eliminated.
 9733              	@ main.c:5493: 		TIM4->SR = 0;
 9734 0000 0021     		movs	r1, #0	@ tmp114,
 9735 0002 034B     		ldr	r3, .L783	@ tmp112,
 9736              	@ main.c:5495: 		Tim4++;
 9737 0004 034A     		ldr	r2, .L783+4	@ tmp115,
 9738              	@ main.c:5493: 		TIM4->SR = 0;
 9739 0006 1982     		strh	r1, [r3, #16]	@ movhi	@ tmp114, MEM[(struct TIM_TypeDef *)1073743872B].SR
 9740              	@ main.c:5495: 		Tim4++;
 9741 0008 1368     		ldr	r3, [r2]	@ Tim4.273_1, Tim4
 9742 000a 0133     		adds	r3, r3, #1	@ _2, Tim4.273_1,
 9743 000c 1360     		str	r3, [r2]	@ _2, Tim4
 9744              	@ main.c:5496: 	}
 9745 000e 7047     		bx	lr	@
 9746              	.L784:
 9747              		.align	2
ARM GAS  /tmp/ccAYxbuo.s 			page 172


 9748              	.L783:
 9749 0010 00080040 		.word	1073743872
 9750 0014 00000000 		.word	Tim4
 9751              		.size	TIM4_IRQHandler, .-TIM4_IRQHandler
 9752              		.section	.text.adc1_init_injected,"ax",%progbits
 9753              		.align	1
 9754              		.p2align 2,,3
 9755              		.global	adc1_init_injected
 9756              		.syntax unified
 9757              		.thumb
 9758              		.thumb_func
 9759              		.fpu softvfp
 9760              		.type	adc1_init_injected, %function
 9761              	adc1_init_injected:
 9762              		@ args = 0, pretend = 0, frame = 0
 9763              		@ frame_needed = 0, uses_anonymous_args = 0
 9764              		@ link register save eliminated.
 9765 0000 F0B4     		push	{r4, r5, r6, r7}	@
 9766              	@ main.c:5541: 	ADC1_CR1_SCAN_bb = 1;									// enable scan mode (multi channel mode)
 9767 0002 0124     		movs	r4, #1	@ tmp144,
 9768              	@ main.c:5531: 	ADC1->SMPR2 = (0<<channel*3);
 9769 0004 0026     		movs	r6, #0	@ tmp131,
 9770              	@ main.c:5539: 	ADC1->CR2 = ADC_CR2_JEXTSEL_JSWSTART | ADC_CR2_JEXTTRIG | ADC_CR2_CAL | ADC_CR2_ADO
 9771 0006 4FF20505 		movw	r5, #61445	@ tmp142,
 9772              	@ main.c:5528: 	RCC->CFGR |= RCC_CFGR_ADCPRE_DIV2;		// divide the ADC clock by 6 -> f_SAMP = 0.85MH
 9773 000a 114A     		ldr	r2, .L793	@ tmp126,
 9774              	@ main.c:5535: 			(channel << ADC_JSQR_JSQ3_bit) |
 9775 000c 8B02     		lsls	r3, r1, #10	@ tmp133, channel,
 9776              	@ main.c:5528: 	RCC->CFGR |= RCC_CFGR_ADCPRE_DIV2;		// divide the ADC clock by 6 -> f_SAMP = 0.85MH
 9777 000e 5768     		ldr	r7, [r2, #4]	@ _1, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 9778              	@ main.c:5536: 			(channel << ADC_JSQR_JSQ2_bit) |
 9779 0010 43EAC133 		orr	r3, r3, r1, lsl #15	@ tmp134, tmp133, channel,
 9780 0014 0B43     		orrs	r3, r3, r1	@, tmp135, tmp134, channel
 9781              	@ main.c:5528: 	RCC->CFGR |= RCC_CFGR_ADCPRE_DIV2;		// divide the ADC clock by 6 -> f_SAMP = 0.85MH
 9782 0016 5760     		str	r7, [r2, #4]	@ _1, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 9783              	@ main.c:5533: 	ADC1->JSQR = ((conversions - 1) << ADC_JSQR_JL_bit) |	// configure desired number o
 9784 0018 0138     		subs	r0, r0, #1	@ tmp138, conversions,
 9785              	@ main.c:5536: 			(channel << ADC_JSQR_JSQ2_bit) |
 9786 001a 43EA4113 		orr	r3, r3, r1, lsl #5	@ tmp137, tmp135, channel,
 9787 001e 43EA0053 		orr	r3, r3, r0, lsl #20	@ _12, tmp137, tmp138,
 9788              	@ main.c:5529: 	RCC->APB2ENR   |= RCC_APB2ENR_ADC1EN;	// enable clock for ADC1
 9789 0022 9069     		ldr	r0, [r2, #24]	@ _2, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 9790              	@ main.c:5531: 	ADC1->SMPR2 = (0<<channel*3);
 9791 0024 0B49     		ldr	r1, .L793+4	@ tmp130,
 9792              	@ main.c:5529: 	RCC->APB2ENR   |= RCC_APB2ENR_ADC1EN;	// enable clock for ADC1
 9793 0026 40F40070 		orr	r0, r0, #512	@ _3, _2,
 9794 002a 9061     		str	r0, [r2, #24]	@ _3, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 9795              	@ main.c:5541: 	ADC1_CR1_SCAN_bb = 1;									// enable scan mode (multi channel mode)
 9796 002c 0A4F     		ldr	r7, .L793+8	@ tmp143,
 9797              	@ main.c:5543: 	ADC1_CR2_JSWSTART_bb = 1;						// start Injected Group
 9798 002e 0B48     		ldr	r0, .L793+12	@ tmp145,
 9799              	@ main.c:5544: 	while (ADC1_SR_JSTRT_bb == 0);			// wait for conversion to start
 9800 0030 0B4A     		ldr	r2, .L793+16	@ tmp147,
 9801              	@ main.c:5531: 	ADC1->SMPR2 = (0<<channel*3);
 9802 0032 0E61     		str	r6, [r1, #16]	@ tmp131, MEM[(struct ADC_TypeDef *)1073816576B].SMPR2
 9803              	@ main.c:5533: 	ADC1->JSQR = ((conversions - 1) << ADC_JSQR_JL_bit) |	// configure desired number o
 9804 0034 8B63     		str	r3, [r1, #56]	@ _12, MEM[(struct ADC_TypeDef *)1073816576B].JSQR
ARM GAS  /tmp/ccAYxbuo.s 			page 173


 9805              	@ main.c:5539: 	ADC1->CR2 = ADC_CR2_JEXTSEL_JSWSTART | ADC_CR2_JEXTTRIG | ADC_CR2_CAL | ADC_CR2_ADO
 9806 0036 8D60     		str	r5, [r1, #8]	@ tmp142, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 9807              	@ main.c:5541: 	ADC1_CR1_SCAN_bb = 1;									// enable scan mode (multi channel mode)
 9808 0038 3C60     		str	r4, [r7]	@ tmp144, MEM[(volatile long unsigned int *)1109688480B]
 9809              	@ main.c:5543: 	ADC1_CR2_JSWSTART_bb = 1;						// start Injected Group
 9810 003a 0460     		str	r4, [r0]	@ tmp144, MEM[(volatile long unsigned int *)1109688660B]
 9811              	.L786:
 9812              	@ main.c:5544: 	while (ADC1_SR_JSTRT_bb == 0);			// wait for conversion to start
 9813 003c 1368     		ldr	r3, [r2]	@ _13, MEM[(volatile long unsigned int *)1109688332B]
 9814 003e 002B     		cmp	r3, #0	@ _13
 9815 0040 FCD0     		beq	.L786	@
 9816              	@ main.c:5550: 	while (ADC1_CR2_CAL_bb == 1);					// wait for calibration end
 9817 0042 084A     		ldr	r2, .L793+20	@ tmp148,
 9818              	.L787:
 9819              	@ main.c:5550: 	while (ADC1_CR2_CAL_bb == 1);					// wait for calibration end
 9820 0044 1368     		ldr	r3, [r2]	@ _14, MEM[(volatile long unsigned int *)1109688584B]
 9821 0046 012B     		cmp	r3, #1	@ _14,
 9822 0048 FCD0     		beq	.L787	@,
 9823              	@ main.c:5551: }
 9824 004a F0BC     		pop	{r4, r5, r6, r7}	@
 9825 004c 7047     		bx	lr	@
 9826              	.L794:
 9827 004e 00BF     		.align	2
 9828              	.L793:
 9829 0050 00100240 		.word	1073876992
 9830 0054 00240140 		.word	1073816576
 9831 0058 A0802442 		.word	1109688480
 9832 005c 54812442 		.word	1109688660
 9833 0060 0C802442 		.word	1109688332
 9834 0064 08812442 		.word	1109688584
 9835              		.size	adc1_init_injected, .-adc1_init_injected
 9836              		.section	.text.adc_get_internals,"ax",%progbits
 9837              		.align	1
 9838              		.p2align 2,,3
 9839              		.global	adc_get_internals
 9840              		.syntax unified
 9841              		.thumb
 9842              		.thumb_func
 9843              		.fpu softvfp
 9844              		.type	adc_get_internals, %function
 9845              	adc_get_internals:
 9846              		@ args = 0, pretend = 0, frame = 0
 9847              		@ frame_needed = 0, uses_anonymous_args = 0
 9848              		@ link register save eliminated.
 9849              	@ main.c:5557: 	ADC1_CR2_JSWSTART_bb = 1;						// start Injected Group
 9850 0000 0122     		movs	r2, #1	@ tmp122,
 9851              	@ main.c:5552: uint32_t adc_get_internals(uint32_t avg_cycles)		{
 9852 0002 10B4     		push	{r4}	@
 9853              	@ main.c:5552: uint32_t adc_get_internals(uint32_t avg_cycles)		{
 9854 0004 0446     		mov	r4, r0	@ avg_cycles, avg_cycles
 9855              	@ main.c:5557: 	ADC1_CR2_JSWSTART_bb = 1;						// start Injected Group
 9856 0006 134B     		ldr	r3, .L809	@ tmp121,
 9857              	@ main.c:5558: 	while (ADC1_SR_JSTRT_bb == 0);			// wait for conversion to start
 9858 0008 1349     		ldr	r1, .L809+4	@ tmp123,
 9859              	@ main.c:5557: 	ADC1_CR2_JSWSTART_bb = 1;						// start Injected Group
 9860 000a 1A60     		str	r2, [r3]	@ tmp122, MEM[(volatile long unsigned int *)1109688660B]
 9861              	.L796:
ARM GAS  /tmp/ccAYxbuo.s 			page 174


 9862              	@ main.c:5558: 	while (ADC1_SR_JSTRT_bb == 0);			// wait for conversion to start
 9863 000c 0B68     		ldr	r3, [r1]	@ _1, MEM[(volatile long unsigned int *)1109688332B]
 9864 000e 002B     		cmp	r3, #0	@ _1
 9865 0010 FCD0     		beq	.L796	@
 9866              	@ main.c:5559: 	ADC1_SR_JSTRT_bb = 0;								// reset "Injected Group start of conversion" flag
 9867 0012 0023     		movs	r3, #0	@ tmp125,
 9868              	@ main.c:5560: 	while (ADC1_SR_JEOC_bb == 0);				// wait for conversions to end
 9869 0014 114A     		ldr	r2, .L809+8	@ tmp126,
 9870              	@ main.c:5559: 	ADC1_SR_JSTRT_bb = 0;								// reset "Injected Group start of conversion" flag
 9871 0016 0B60     		str	r3, [r1]	@ tmp125, MEM[(volatile long unsigned int *)1109688332B]
 9872              	.L797:
 9873              	@ main.c:5560: 	while (ADC1_SR_JEOC_bb == 0);				// wait for conversions to end
 9874 0018 1368     		ldr	r3, [r2]	@ _2, MEM[(volatile long unsigned int *)1109688328B]
 9875 001a 002B     		cmp	r3, #0	@ _2
 9876 001c FCD0     		beq	.L797	@
 9877              	@ main.c:5561: 	ADC1_SR_JEOC_bb = 0;								// reset "end of conversion" flag
 9878 001e 0020     		movs	r0, #0	@ tmp128,
 9879 0020 1060     		str	r0, [r2]	@ tmp128, MEM[(volatile long unsigned int *)1109688328B]
 9880              	@ main.c:5563: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9881 0022 A4B1     		cbz	r4, .L801	@ avg_cycles,
 9882 0024 0E49     		ldr	r1, .L809+12	@ tmp129,
 9883 0026 0F4A     		ldr	r2, .L809+16	@ pretmp_5,
 9884 0028 0B1D     		adds	r3, r1, #4	@ ivtmp.771, tmp129,
 9885              	@ main.c:5564: 		value += *jdrs[i];
 9886 002a 1268     		ldr	r2, [r2]	@ _14, *prephitmp_20
 9887 002c 01EB8401 		add	r1, r1, r4, lsl #2	@ _24, tmp129, avg_cycles,
 9888              	@ main.c:5563: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9889 0030 8B42     		cmp	r3, r1	@ ivtmp.771, _24
 9890              	@ main.c:5564: 		value += *jdrs[i];
 9891 0032 1044     		add	r0, r0, r2	@ <retval>, _14
 9892              	@ main.c:5563: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9893 0034 05D0     		beq	.L799	@,
 9894              	.L808:
 9895 0036 53F8042B 		ldr	r2, [r3], #4	@ pretmp_5, MEM[base: _25, offset: 0B]
 9896              	@ main.c:5564: 		value += *jdrs[i];
 9897 003a 1268     		ldr	r2, [r2]	@ _14, *prephitmp_20
 9898              	@ main.c:5563: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9899 003c 8B42     		cmp	r3, r1	@ ivtmp.771, _24
 9900              	@ main.c:5564: 		value += *jdrs[i];
 9901 003e 1044     		add	r0, r0, r2	@ <retval>, _14
 9902              	@ main.c:5563: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9903 0040 F9D1     		bne	.L808	@,
 9904              	.L799:
 9905              	@ main.c:5566: 	if (avg_cycles > 1)									// should the samples be averaged?
 9906 0042 012C     		cmp	r4, #1	@ avg_cycles,
 9907 0044 01D9     		bls	.L795	@,
 9908              	@ main.c:5569: 		value /= avg_cycles;
 9909 0046 B0FBF4F0 		udiv	r0, r0, r4	@ <retval>, <retval>, avg_cycles
 9910              	.L795:
 9911              	@ main.c:5573: }
 9912 004a 10BC     		pop	{r4}	@
 9913 004c 7047     		bx	lr	@
 9914              	.L801:
 9915              	@ main.c:5555: 	uint32_t i, value = 0;
 9916 004e 2046     		mov	r0, r4	@ <retval>, avg_cycles
 9917              	@ main.c:5573: }
 9918 0050 10BC     		pop	{r4}	@
ARM GAS  /tmp/ccAYxbuo.s 			page 175


 9919 0052 7047     		bx	lr	@
 9920              	.L810:
 9921              		.align	2
 9922              	.L809:
 9923 0054 54812442 		.word	1109688660
 9924 0058 0C802442 		.word	1109688332
 9925 005c 08802442 		.word	1109688328
 9926 0060 00000000 		.word	.LANCHOR35
 9927 0064 3C240140 		.word	1073816636
 9928              		.size	adc_get_internals, .-adc_get_internals
 9929              		.section	.text.adc_get_injected,"ax",%progbits
 9930              		.align	1
 9931              		.p2align 2,,3
 9932              		.global	adc_get_injected
 9933              		.syntax unified
 9934              		.thumb
 9935              		.thumb_func
 9936              		.fpu softvfp
 9937              		.type	adc_get_injected, %function
 9938              	adc_get_injected:
 9939              		@ args = 0, pretend = 0, frame = 0
 9940              		@ frame_needed = 0, uses_anonymous_args = 0
 9941              		@ link register save eliminated.
 9942              	@ main.c:5579: 	ADC1_CR2_JSWSTART_bb = 1;
 9943 0000 0121     		movs	r1, #1	@ tmp121,
 9944              	@ main.c:5574: uint32_t adc_get_injected(uint32_t avg_cycles)		{
 9945 0002 10B4     		push	{r4}	@
 9946              	@ main.c:5574: uint32_t adc_get_injected(uint32_t avg_cycles)		{
 9947 0004 0446     		mov	r4, r0	@ avg_cycles, avg_cycles
 9948              	@ main.c:5579: 	ADC1_CR2_JSWSTART_bb = 1;
 9949 0006 104B     		ldr	r3, .L822	@ tmp120,
 9950              	@ main.c:5580: 	while (ADC1_SR_JEOC_bb == 0);				// wait for conversions to end
 9951 0008 104A     		ldr	r2, .L822+4	@ tmp122,
 9952              	@ main.c:5579: 	ADC1_CR2_JSWSTART_bb = 1;
 9953 000a 1960     		str	r1, [r3]	@ tmp121, MEM[(volatile long unsigned int *)1109688660B]
 9954              	.L812:
 9955              	@ main.c:5580: 	while (ADC1_SR_JEOC_bb == 0);				// wait for conversions to end
 9956 000c 1368     		ldr	r3, [r2]	@ _1, MEM[(volatile long unsigned int *)1109688328B]
 9957 000e 002B     		cmp	r3, #0	@ _1
 9958 0010 FCD0     		beq	.L812	@
 9959              	@ main.c:5581: 	ADC1_SR_JEOC_bb = 0;								// reset "end of conversion" flag
 9960 0012 0020     		movs	r0, #0	@ tmp124,
 9961 0014 1060     		str	r0, [r2]	@ tmp124, MEM[(volatile long unsigned int *)1109688328B]
 9962              	@ main.c:5583: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9963 0016 A4B1     		cbz	r4, .L816	@ avg_cycles,
 9964 0018 0D4B     		ldr	r3, .L822+8	@ ivtmp.785,
 9965 001a 0E4A     		ldr	r2, .L822+12	@ pretmp_4,
 9966 001c 191F     		subs	r1, r3, #4	@ tmp126, ivtmp.785,
 9967 001e 01EB8401 		add	r1, r1, r4, lsl #2	@ _22, tmp126, avg_cycles,
 9968              	@ main.c:5584: 		value += *jdrs[i];
 9969 0022 1268     		ldr	r2, [r2]	@ _12, *prephitmp_18
 9970              	@ main.c:5583: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9971 0024 8B42     		cmp	r3, r1	@ ivtmp.785, _22
 9972              	@ main.c:5584: 		value += *jdrs[i];
 9973 0026 1044     		add	r0, r0, r2	@ <retval>, _12
 9974              	@ main.c:5583: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9975 0028 05D0     		beq	.L814	@,
ARM GAS  /tmp/ccAYxbuo.s 			page 176


 9976              	.L821:
 9977 002a 53F8042B 		ldr	r2, [r3], #4	@ pretmp_4, MEM[base: _23, offset: 0B]
 9978              	@ main.c:5584: 		value += *jdrs[i];
 9979 002e 1268     		ldr	r2, [r2]	@ _12, *prephitmp_18
 9980              	@ main.c:5583: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9981 0030 8B42     		cmp	r3, r1	@ ivtmp.785, _22
 9982              	@ main.c:5584: 		value += *jdrs[i];
 9983 0032 1044     		add	r0, r0, r2	@ <retval>, _12
 9984              	@ main.c:5583: 	for (i = 0; i < avg_cycles; i++)		// accumulate desired number of samples
 9985 0034 F9D1     		bne	.L821	@,
 9986              	.L814:
 9987              	@ main.c:5586: 	if (avg_cycles > 1)									// should the samples be averaged?
 9988 0036 012C     		cmp	r4, #1	@ avg_cycles,
 9989 0038 01D9     		bls	.L811	@,
 9990              	@ main.c:5589: 		value /= avg_cycles;
 9991 003a B0FBF4F0 		udiv	r0, r0, r4	@ <retval>, <retval>, avg_cycles
 9992              	.L811:
 9993              	@ main.c:5593: }
 9994 003e 10BC     		pop	{r4}	@
 9995 0040 7047     		bx	lr	@
 9996              	.L816:
 9997              	@ main.c:5577: 	uint32_t i, value = 0;
 9998 0042 2046     		mov	r0, r4	@ <retval>, avg_cycles
 9999              	@ main.c:5593: }
 10000 0044 10BC     		pop	{r4}	@
 10001 0046 7047     		bx	lr	@
 10002              	.L823:
 10003              		.align	2
 10004              	.L822:
 10005 0048 54812442 		.word	1109688660
 10006 004c 08802442 		.word	1109688328
 10007 0050 04000000 		.word	jdrs.9072+4
 10008 0054 3C240140 		.word	1073816636
 10009              		.size	adc_get_injected, .-adc_get_injected
 10010              		.section	.text.NVIC_conf,"ax",%progbits
 10011              		.align	1
 10012              		.p2align 2,,3
 10013              		.global	NVIC_conf
 10014              		.syntax unified
 10015              		.thumb
 10016              		.thumb_func
 10017              		.fpu softvfp
 10018              		.type	NVIC_conf, %function
 10019              	NVIC_conf:
 10020              		@ args = 0, pretend = 0, frame = 0
 10021              		@ frame_needed = 0, uses_anonymous_args = 0
 10022              		@ link register save eliminated.
 10023 0000 70B4     		push	{r4, r5, r6}	@
 10024              	@ main.c:5602: 	NVIC->IP[TIM1_CC_IRQn] = (0<<4);           //Set the highest priority for TIMER1, s
 10025 0002 0020     		movs	r0, #0	@ tmp122,
 10026              	@ main.c:5600: 	NVIC->IP[ADC1_2_IRQn]  = (2<<4);
 10027 0004 2025     		movs	r5, #32	@ tmp116,
 10028              	@ main.c:5601: 	NVIC->IP[DMA1_Channel1_IRQn] = (1<<4);
 10029 0006 1024     		movs	r4, #16	@ tmp119,
 10030              	@ main.c:5597: 	SCB->AIRCR |= AIRCR_VECTKEY_MASK | (3<<8);      //[Optional] Define interrupt field
 10031 0008 0749     		ldr	r1, .L826	@ tmp112,
 10032 000a 084A     		ldr	r2, .L826+4	@ _2,
ARM GAS  /tmp/ccAYxbuo.s 			page 177


 10033 000c CE68     		ldr	r6, [r1, #12]	@ _1, MEM[(struct SCB_Type *)3758157056B].AIRCR
 10034              	@ main.c:5600: 	NVIC->IP[ADC1_2_IRQn]  = (2<<4);
 10035 000e 084B     		ldr	r3, .L826+8	@ tmp115,
 10036              	@ main.c:5597: 	SCB->AIRCR |= AIRCR_VECTKEY_MASK | (3<<8);      //[Optional] Define interrupt field
 10037 0010 3243     		orrs	r2, r2, r6	@, _2, _2, _1
 10038 0012 CA60     		str	r2, [r1, #12]	@ _2, MEM[(struct SCB_Type *)3758157056B].AIRCR
 10039              	@ main.c:5605: 	NVIC->ISER[0]= (1<<TIM1_CC_IRQn )|(1<<ADC1_2_IRQn)|(1<<DMA1_Channel1_IRQn);   //Ena
 10040 0014 074A     		ldr	r2, .L826+12	@ tmp125,
 10041              	@ main.c:5600: 	NVIC->IP[ADC1_2_IRQn]  = (2<<4);
 10042 0016 83F81253 		strb	r5, [r3, #786]	@ tmp116, MEM[(struct NVIC_Type *)3758153984B].IP
 10043              	@ main.c:5601: 	NVIC->IP[DMA1_Channel1_IRQn] = (1<<4);
 10044 001a 83F80B43 		strb	r4, [r3, #779]	@ tmp119, MEM[(struct NVIC_Type *)3758153984B].IP
 10045              	@ main.c:5602: 	NVIC->IP[TIM1_CC_IRQn] = (0<<4);           //Set the highest priority for TIMER1, s
 10046 001e 83F81B03 		strb	r0, [r3, #795]	@ tmp122, MEM[(struct NVIC_Type *)3758153984B].IP
 10047              	@ main.c:5606: }
 10048 0022 70BC     		pop	{r4, r5, r6}	@
 10049              	@ main.c:5605: 	NVIC->ISER[0]= (1<<TIM1_CC_IRQn )|(1<<ADC1_2_IRQn)|(1<<DMA1_Channel1_IRQn);   //Ena
 10050 0024 1A60     		str	r2, [r3]	@ tmp125, MEM[(struct NVIC_Type *)3758153984B].ISER
 10051              	@ main.c:5606: }
 10052 0026 7047     		bx	lr	@
 10053              	.L827:
 10054              		.align	2
 10055              	.L826:
 10056 0028 00ED00E0 		.word	-536810240
 10057 002c 0003FA05 		.word	100270848
 10058 0030 00E100E0 		.word	-536813312
 10059 0034 00080408 		.word	134481920
 10060              		.size	NVIC_conf, .-NVIC_conf
 10061              		.section	.text.SetDate,"ax",%progbits
 10062              		.align	1
 10063              		.p2align 2,,3
 10064              		.global	SetDate
 10065              		.syntax unified
 10066              		.thumb
 10067              		.thumb_func
 10068              		.fpu softvfp
 10069              		.type	SetDate, %function
 10070              	SetDate:
 10071              		@ args = 0, pretend = 0, frame = 40
 10072              		@ frame_needed = 0, uses_anonymous_args = 0
 10073 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 10074              	@ main.c:5613: 	UaPutS("\r\n rok = ");
 10075 0004 6548     		ldr	r0, .L844	@,
 10076              	@ main.c:5610: void SetDate(void)	{
 10077 0006 8BB0     		sub	sp, sp, #44	@,,
 10078              	@ main.c:5613: 	UaPutS("\r\n rok = ");
 10079 0008 FFF7FEFF 		bl	UaPutS	@
 10080              	@ main.c:5614: 	u16 yer = str2int((char *)u1buf);
 10081 000c 06A8     		add	r0, sp, #24	@ tmp230,,
 10082 000e FFF7FEFF 		bl	str2int	@
 10083              	@ main.c:5615: 	memset((char *)u1buf,0,16);
 10084 0012 0027     		movs	r7, #0	@ tmp152,
 10085              	@ main.c:5614: 	u16 yer = str2int((char *)u1buf);
 10086 0014 0546     		mov	r5, r0	@ _1,
 10087              	@ main.c:5616: 	UaPutS("\r\n mies = ");
 10088 0016 6248     		ldr	r0, .L844+4	@,
 10089              	@ main.c:5615: 	memset((char *)u1buf,0,16);
ARM GAS  /tmp/ccAYxbuo.s 			page 178


 10090 0018 CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 10091 001c CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 10092              	@ main.c:5616: 	UaPutS("\r\n mies = ");
 10093 0020 FFF7FEFF 		bl	UaPutS	@
 10094              	@ main.c:5617: 	u08 mon = str2int((char *)u1buf);
 10095 0024 06A8     		add	r0, sp, #24	@ tmp231,,
 10096 0026 FFF7FEFF 		bl	str2int	@
 10097 002a 0646     		mov	r6, r0	@ _2,
 10098              	@ main.c:5619: 	UaPutS("\r\n dzien = ");
 10099 002c 5D48     		ldr	r0, .L844+8	@,
 10100              	@ main.c:5618: 	memset((char *)u1buf,0,16);
 10101 002e CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 10102 0032 CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 10103              	@ main.c:5619: 	UaPutS("\r\n dzien = ");
 10104 0036 FFF7FEFF 		bl	UaPutS	@
 10105              	@ main.c:5620: 	u08 day = str2int((char *)u1buf);
 10106 003a 06A8     		add	r0, sp, #24	@ tmp232,,
 10107 003c FFF7FEFF 		bl	str2int	@
 10108 0040 8246     		mov	r10, r0	@ _3,
 10109              	@ main.c:5622: 	UaPutS("\r\n gdz = ");
 10110 0042 5948     		ldr	r0, .L844+12	@,
 10111              	@ main.c:5621: 	memset((char *)u1buf,0,16);
 10112 0044 CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 10113 0048 CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 10114              	@ main.c:5622: 	UaPutS("\r\n gdz = ");
 10115 004c FFF7FEFF 		bl	UaPutS	@
 10116              	@ main.c:5623: 	u08 hor = str2int((char *)u1buf);
 10117 0050 06A8     		add	r0, sp, #24	@ tmp233,,
 10118 0052 FFF7FEFF 		bl	str2int	@
 10119 0056 8046     		mov	r8, r0	@ _4,
 10120              	@ main.c:5625: 	UaPutS("\r\n min = ");
 10121 0058 5448     		ldr	r0, .L844+16	@,
 10122              	@ main.c:5624: 	memset((char *)u1buf,0,16);
 10123 005a CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 10124 005e CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 10125              	@ main.c:5625: 	UaPutS("\r\n min = ");
 10126 0062 FFF7FEFF 		bl	UaPutS	@
 10127              	@ main.c:5626: 	u08 min = str2int((char *)u1buf);
 10128 0066 06A8     		add	r0, sp, #24	@ tmp234,,
 10129 0068 FFF7FEFF 		bl	str2int	@
 10130 006c 8146     		mov	r9, r0	@ _5,
 10131              	@ main.c:5628: 	UaPutS("\r\n sek = ");
 10132 006e 5048     		ldr	r0, .L844+20	@,
 10133              	@ main.c:5627: 	memset((char *)u1buf,0,16);
 10134 0070 CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 10135 0074 CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 10136              	@ main.c:5628: 	UaPutS("\r\n sek = ");
 10137 0078 FFF7FEFF 		bl	UaPutS	@
 10138              	@ main.c:5629: 	u08 sec = str2int((char *)u1buf);
 10139 007c 06A8     		add	r0, sp, #24	@ tmp235,,
 10140 007e FFF7FEFF 		bl	str2int	@
 10141              	@ main.c:5630: 	memset((char *)u1buf,0,16);
 10142 0082 CDE90677 		strd	r7, r7, [sp, #24]	@ tmp152, tmp152,,
 10143 0086 CDE90877 		strd	r7, r7, [sp, #32]	@ tmp152, tmp152,,
 10144              	@ main.c:5631: 	u32 Uxt = 1924984799;
 10145 008a 4A4C     		ldr	r4, .L844+24	@ Uxt,
 10146 008c DFF830B1 		ldr	fp, .L844+36	@ tmp226,
ARM GAS  /tmp/ccAYxbuo.s 			page 179


 10147              	@ main.c:5629: 	u08 sec = str2int((char *)u1buf);
 10148 0090 0190     		str	r0, [sp, #4]	@, %sfp
 10149 0092 ADB2     		uxth	r5, r5	@ _92, _1
 10150              	@ main.c:5635: 			if(ptm.tm_mon == mon) 	{
 10151 0094 F6B2     		uxtb	r6, r6	@ _2, _2
 10152              	@ main.c:5636: 				if(ptm.tm_mday == day)  {
 10153 0096 5FFA8AFA 		uxtb	r10, r10	@ _3, _3
 10154              	@ main.c:5637: 					if(ptm.tm_hour == hor)  {
 10155 009a 5FFA88F8 		uxtb	r8, r8	@ _4, _4
 10156              	.L837:
 10157              	@ main.c:5633: 		gmtime_r (&Uxt, &ptm);
 10158 009e 2046     		mov	r0, r4	@, Uxt
 10159 00a0 FFF7FEFF 		bl	gmtime_r.isra.0.constprop.2	@
 10160              	@ main.c:5634: 		if(ptm.tm_year == yer) 	{
 10161 00a4 DBF81430 		ldr	r3, [fp, #20]	@ ptm.tm_year, ptm.tm_year
 10162 00a8 AB42     		cmp	r3, r5	@ ptm.tm_year, _92
 10163 00aa 08D0     		beq	.L840	@,
 10164              	.L829:
 10165              	@ main.c:5655: 		} else Uxt -= 86400;
 10166 00ac A4F5A834 		sub	r4, r4, #86016	@ Uxt, Uxt,
 10167 00b0 A4F5C074 		sub	r4, r4, #384	@ Uxt, Uxt,
 10168              	@ main.c:5657: 	while(Uxt);
 10169 00b4 002C     		cmp	r4, #0	@ Uxt
 10170 00b6 F2D1     		bne	.L837	@
 10171              	.L828:
 10172              	@ main.c:5658: }
 10173 00b8 0BB0     		add	sp, sp, #44	@,,
 10174              		@ sp needed	@
 10175 00ba BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 10176              	.L840:
 10177              	@ main.c:5635: 			if(ptm.tm_mon == mon) 	{
 10178 00be DBF81030 		ldr	r3, [fp, #16]	@ ptm.tm_mon, ptm.tm_mon
 10179 00c2 B342     		cmp	r3, r6	@ ptm.tm_mon, _2
 10180 00c4 F2D1     		bne	.L829	@,
 10181              	@ main.c:5636: 				if(ptm.tm_mday == day)  {
 10182 00c6 DBF80C30 		ldr	r3, [fp, #12]	@ ptm.tm_mday, ptm.tm_mday
 10183 00ca 5345     		cmp	r3, r10	@ ptm.tm_mday, _3
 10184 00cc EED1     		bne	.L829	@,
 10185              	@ main.c:5637: 					if(ptm.tm_hour == hor)  {
 10186 00ce DBF80830 		ldr	r3, [fp, #8]	@ ptm.tm_hour, ptm.tm_hour
 10187 00d2 4345     		cmp	r3, r8	@ ptm.tm_hour, _4
 10188 00d4 04D0     		beq	.L841	@,
 10189              	@ main.c:5652: 					}else Uxt -= 3600;
 10190 00d6 A4F56164 		sub	r4, r4, #3600	@ Uxt, Uxt,
 10191              	@ main.c:5657: 	while(Uxt);
 10192 00da 002C     		cmp	r4, #0	@ Uxt
 10193 00dc DFD1     		bne	.L837	@
 10194 00de EBE7     		b	.L828	@
 10195              	.L841:
 10196              	@ main.c:5638: 						if(ptm.tm_min == min) 	{
 10197 00e0 DBF80420 		ldr	r2, [fp, #4]	@ ptm.tm_min, ptm.tm_min
 10198 00e4 5FFA89F3 		uxtb	r3, r9	@ _5, _5
 10199 00e8 9A42     		cmp	r2, r3	@ ptm.tm_min, _5
 10200 00ea 03D0     		beq	.L842	@,
 10201              	@ main.c:5651: 						}else Uxt -= 60;
 10202 00ec 3C3C     		subs	r4, r4, #60	@ Uxt, Uxt,
 10203              	@ main.c:5657: 	while(Uxt);
ARM GAS  /tmp/ccAYxbuo.s 			page 180


 10204 00ee 002C     		cmp	r4, #0	@ Uxt
 10205 00f0 D5D1     		bne	.L837	@
 10206 00f2 E1E7     		b	.L828	@
 10207              	.L842:
 10208              	@ main.c:5639: 							if(ptm.tm_sec == sec)		{
 10209 00f4 DBF80020 		ldr	r2, [fp]	@ ptm.tm_sec, ptm.tm_sec
 10210 00f8 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2	@ _6, %sfp
 10211 00fc 9A42     		cmp	r2, r3	@ ptm.tm_sec, _6
 10212 00fe 03D0     		beq	.L843	@,
 10213              	@ main.c:5650: 							} else Uxt --;
 10214 0100 013C     		subs	r4, r4, #1	@ Uxt, Uxt,
 10215              	@ main.c:5657: 	while(Uxt);
 10216 0102 002C     		cmp	r4, #0	@ Uxt
 10217 0104 CBD1     		bne	.L837	@
 10218 0106 D7E7     		b	.L828	@
 10219              	.L843:
 10220              	@ main.c:5640: 								gmtime_r (&Uxt, &ptm);
 10221 0108 2046     		mov	r0, r4	@, Uxt
 10222 010a FFF7FEFF 		bl	gmtime_r.isra.0.constprop.2	@
 10223              	@ main.c:5641: 								UaPutS("\r\n ");
 10224 010e 2A48     		ldr	r0, .L844+28	@,
 10225 0110 FFF7FEFF 		bl	UaPutS	@
 10226              	@ main.c:5642: 								UaPutS(uint2str(ptm.tm_year,tbuf));		UaPutC('-');
 10227 0114 02A9     		add	r1, sp, #8	@,,
 10228 0116 DBF81400 		ldr	r0, [fp, #20]	@, ptm.tm_year
 10229 011a FFF7FEFF 		bl	uint2str	@
 10230 011e FFF7FEFF 		bl	UaPutS	@
 10231 0122 2D20     		movs	r0, #45	@,
 10232 0124 FFF7FEFF 		bl	UaPutC	@
 10233              	@ main.c:5643: 								UaPutS(uint2str(ptm.tm_mon,tbuf));		UaPutC('-');
 10234 0128 02A9     		add	r1, sp, #8	@,,
 10235 012a DBF81000 		ldr	r0, [fp, #16]	@, ptm.tm_mon
 10236 012e FFF7FEFF 		bl	uint2str	@
 10237 0132 FFF7FEFF 		bl	UaPutS	@
 10238 0136 2D20     		movs	r0, #45	@,
 10239 0138 FFF7FEFF 		bl	UaPutC	@
 10240              	@ main.c:5644: 								UaPutS(uint2str(ptm.tm_mday,tbuf));		UaPutC(' ');
 10241 013c 02A9     		add	r1, sp, #8	@,,
 10242 013e DBF80C00 		ldr	r0, [fp, #12]	@, ptm.tm_mday
 10243 0142 FFF7FEFF 		bl	uint2str	@
 10244 0146 FFF7FEFF 		bl	UaPutS	@
 10245 014a 2020     		movs	r0, #32	@,
 10246 014c FFF7FEFF 		bl	UaPutC	@
 10247              	@ main.c:5645: 								UaPutS(uint2str(ptm.tm_hour,tbuf));		UaPutC(':');
 10248 0150 02A9     		add	r1, sp, #8	@,,
 10249 0152 DBF80800 		ldr	r0, [fp, #8]	@, ptm.tm_hour
 10250 0156 FFF7FEFF 		bl	uint2str	@
 10251 015a FFF7FEFF 		bl	UaPutS	@
 10252 015e 3A20     		movs	r0, #58	@,
 10253 0160 FFF7FEFF 		bl	UaPutC	@
 10254              	@ main.c:5646: 								UaPutS(uint2str(ptm.tm_min,tbuf));		UaPutC(':');
 10255 0164 02A9     		add	r1, sp, #8	@,,
 10256 0166 DBF80400 		ldr	r0, [fp, #4]	@, ptm.tm_min
 10257 016a FFF7FEFF 		bl	uint2str	@
 10258 016e FFF7FEFF 		bl	UaPutS	@
 10259 0172 3A20     		movs	r0, #58	@,
 10260 0174 FFF7FEFF 		bl	UaPutC	@
ARM GAS  /tmp/ccAYxbuo.s 			page 181


 10261              	@ main.c:5647: 								UaPutS(uint2str(ptm.tm_sec,tbuf));		UaPutS("\r\n TimStmp = ");
 10262 0178 02A9     		add	r1, sp, #8	@,,
 10263 017a DBF80000 		ldr	r0, [fp]	@, ptm.tm_sec
 10264 017e FFF7FEFF 		bl	uint2str	@
 10265 0182 FFF7FEFF 		bl	UaPutS	@
 10266 0186 0D48     		ldr	r0, .L844+32	@,
 10267 0188 FFF7FEFF 		bl	UaPutS	@
 10268              	@ main.c:5648: 								UaPutS(uint2str(Uxt,tbuf));
 10269 018c 02A9     		add	r1, sp, #8	@,,
 10270 018e 2046     		mov	r0, r4	@, Uxt
 10271 0190 FFF7FEFF 		bl	uint2str	@
 10272 0194 FFF7FEFF 		bl	UaPutS	@
 10273              	@ main.c:5649: 								break;
 10274 0198 8EE7     		b	.L828	@
 10275              	.L845:
 10276 019a 00BF     		.align	2
 10277              	.L844:
 10278 019c 00000000 		.word	.LC161
 10279 01a0 0C000000 		.word	.LC162
 10280 01a4 18000000 		.word	.LC163
 10281 01a8 24000000 		.word	.LC164
 10282 01ac 30000000 		.word	.LC165
 10283 01b0 3C000000 		.word	.LC166
 10284 01b4 DFEFBC72 		.word	1924984799
 10285 01b8 30000000 		.word	.LC77
 10286 01bc 48000000 		.word	.LC167
 10287 01c0 00000000 		.word	ptm
 10288              		.size	SetDate, .-SetDate
 10289              		.section	.text.flash_latency,"ax",%progbits
 10290              		.align	1
 10291              		.p2align 2,,3
 10292              		.global	flash_latency
 10293              		.syntax unified
 10294              		.thumb
 10295              		.thumb_func
 10296              		.fpu softvfp
 10297              		.type	flash_latency, %function
 10298              	flash_latency:
 10299              		@ args = 0, pretend = 0, frame = 0
 10300              		@ frame_needed = 0, uses_anonymous_args = 0
 10301              		@ link register save eliminated.
 10302              	@ main.c:5694: 	if (frequency < 24000000ul)			// 0 wait states for core speed below 24MHz
 10303 0000 084B     		ldr	r3, .L850	@ tmp114,
 10304 0002 9842     		cmp	r0, r3	@ frequency, tmp114
 10305 0004 0CD9     		bls	.L848	@,
 10306              	@ main.c:5696: 	else if (frequency < 48000000ul)// 1 wait state for core 24MHz < speed >48MHz
 10307 0006 03F1B773 		add	r3, r3, #23986176	@ tmp115, tmp115,
 10308 000a 03F55853 		add	r3, r3, #13824	@ tmp115, tmp115,
 10309              	@ main.c:5699: 		wait_states = 2;
 10310 000e 9842     		cmp	r0, r3	@ frequency, tmp115
 10311 0010 94BF     		ite	ls	@
 10312 0012 0120     		movls	r0, #1	@, wait_states,
 10313 0014 0220     		movhi	r0, #2	@, wait_states,
 10314              	.L847:
 10315              	@ main.c:5701: 	FLASH->ACR |= wait_states;				// set the latency
 10316 0016 044A     		ldr	r2, .L850+4	@ tmp116,
 10317 0018 1368     		ldr	r3, [r2]	@ _1, MEM[(struct FLASH_TypeDef *)1073881088B].ACR
ARM GAS  /tmp/ccAYxbuo.s 			page 182


 10318 001a 1843     		orrs	r0, r0, r3	@, _2, wait_states, _1
 10319 001c 1060     		str	r0, [r2]	@ _2, MEM[(struct FLASH_TypeDef *)1073881088B].ACR
 10320              	@ main.c:5702: }
 10321 001e 7047     		bx	lr	@
 10322              	.L848:
 10323              	@ main.c:5695: 		wait_states = 0;
 10324 0020 0020     		movs	r0, #0	@ wait_states,
 10325 0022 F8E7     		b	.L847	@
 10326              	.L851:
 10327              		.align	2
 10328              	.L850:
 10329 0024 FF356E01 		.word	23999999
 10330 0028 00200240 		.word	1073881088
 10331              		.size	flash_latency, .-flash_latency
 10332              		.set	jdrs.9072,jdrs.9057
 10333              		.global	p_TSpm
 10334              		.comm	Rtc,8,4
 10335              		.global	FLAG
 10336              		.global	_ytab
 10337              		.comm	Timt3,4,4
 10338              		.comm	Timt,4,4
 10339              		.comm	Time6,4,4
 10340              		.comm	Tim6,4,4
 10341              		.comm	Tim4,4,4
 10342              		.comm	delay_us,4,4
 10343              		.comm	Tim2,4,4
 10344              		.comm	Tim1,4,4
 10345              		.comm	Tim0,4,4
 10346              		.comm	delay3_us,4,4
 10347              		.comm	t3rg2,4,4
 10348              		.comm	t3rg1,4,4
 10349              		.comm	t3rg0,4,4
 10350              		.comm	trg5,4,4
 10351              		.comm	trg4,4,4
 10352              		.comm	trg3,4,4
 10353              		.comm	trg2,4,4
 10354              		.comm	trg1,4,4
 10355              		.comm	trg0,4,4
 10356              		.comm	PutChar,4,4
 10357              		.comm	ptm,36,4
 10358              		.section	.rodata
 10359              		.align	2
 10360              		.set	.LANCHOR1,. + 0
 10361              	.LC0:
 10362 0000 6D01     		.short	365
 10363 0002 6401     		.short	356
 10364 0004 0000     		.short	0
 10365 0006 1E00     		.short	30
 10366 0008 0000     		.short	0
 10367 000a 0000     		.short	0
 10368 000c 0000     		.short	0
 10369 000e 0000     		.short	0
 10370              	.LC1:
 10371 0010 D007     		.short	2000
 10372 0012 0019     		.short	6400
 10373 0014 0000     		.short	0
 10374 0016 1E00     		.short	30
ARM GAS  /tmp/ccAYxbuo.s 			page 183


 10375 0018 0000     		.short	0
 10376 001a 0000     		.short	0
 10377 001c 0000     		.short	0
 10378 001e 0000     		.short	0
 10379              	.LC2:
 10380 0020 5601     		.short	342
 10381 0022 5001     		.short	336
 10382 0024 0000     		.short	0
 10383 0026 0200     		.short	2
 10384 0028 0000     		.short	0
 10385 002a 0000     		.short	0
 10386 002c 0000     		.short	0
 10387 002e 0000     		.short	0
 10388              	.LC3:
 10389 0030 7200     		.short	114
 10390 0032 0701     		.short	263
 10391 0034 0000     		.short	0
 10392 0036 0200     		.short	2
 10393 0038 0000     		.short	0
 10394 003a 0000     		.short	0
 10395 003c 0000     		.short	0
 10396 003e 0000     		.short	0
 10397              	.LC4:
 10398 0040 00       		.byte	0
 10399 0041 1E       		.byte	30
 10400 0042 67       		.byte	103
 10401 0043 00       		.space	1
 10402              	.LC5:
 10403 0044 204C6164 		.ascii	" Laduj\000"
 10403      756A00
 10404 004b 00       		.space	1
 10405 004c 20526F7A 		.ascii	" Rozlad\000"
 10405      6C616400 
 10406 0054 20437A65 		.ascii	" Czekaj\000"
 10406      6B616A00 
 10407 005c 20506F6D 		.ascii	" Pomiar\000"
 10407      69617200 
 10408 0064 204C6164 		.ascii	" LadKon\000"
 10408      4B6F6E00 
 10409 006c 20526F7A 		.ascii	" RozKon\000"
 10409      4B6F6E00 
 10410              		.section	.bss.Cah.8246,"aw",%nobits
 10411              		.align	2
 10412              		.set	.LANCHOR11,. + 0
 10413              		.type	Cah.8246, %object
 10414              		.size	Cah.8246, 4
 10415              	Cah.8246:
 10416 0000 00000000 		.space	4
 10417              		.section	.bss.Cwh.8247,"aw",%nobits
 10418              		.align	2
 10419              		.set	.LANCHOR12,. + 0
 10420              		.type	Cwh.8247, %object
 10421              		.size	Cwh.8247, 4
 10422              	Cwh.8247:
 10423 0000 00000000 		.space	4
 10424              		.section	.bss.FLAG,"aw",%nobits
 10425              		.align	2
ARM GAS  /tmp/ccAYxbuo.s 			page 184


 10426              		.set	.LANCHOR17,. + 0
 10427              		.type	FLAG, %object
 10428              		.size	FLAG, 4
 10429              	FLAG:
 10430 0000 00000000 		.space	4
 10431              		.section	.bss.Rwa.8248,"aw",%nobits
 10432              		.align	2
 10433              		.set	.LANCHOR9,. + 0
 10434              		.type	Rwa.8248, %object
 10435              		.size	Rwa.8248, 8
 10436              	Rwa.8248:
 10437 0000 00000000 		.space	8
 10437      00000000 
 10438              		.section	.bss.SX1278_1.8441,"aw",%nobits
 10439              		.align	2
 10440              		.set	.LANCHOR19,. + 0
 10441              		.type	SX1278_1.8441, %object
 10442              		.size	SX1278_1.8441, 76
 10443              	SX1278_1.8441:
 10444 0000 00000000 		.space	76
 10444      00000000 
 10444      00000000 
 10444      00000000 
 10444      00000000 
 10445              		.section	.bss.SX1278_1.8467,"aw",%nobits
 10446              		.align	2
 10447              		.set	.LANCHOR21,. + 0
 10448              		.type	SX1278_1.8467, %object
 10449              		.size	SX1278_1.8467, 76
 10450              	SX1278_1.8467:
 10451 0000 00000000 		.space	76
 10451      00000000 
 10451      00000000 
 10451      00000000 
 10451      00000000 
 10452              		.section	.bss.SX1278_1.8492,"aw",%nobits
 10453              		.align	2
 10454              		.set	.LANCHOR24,. + 0
 10455              		.type	SX1278_1.8492, %object
 10456              		.size	SX1278_1.8492, 76
 10457              	SX1278_1.8492:
 10458 0000 00000000 		.space	76
 10458      00000000 
 10458      00000000 
 10458      00000000 
 10458      00000000 
 10459              		.section	.bss.SX1278_hw1.8440,"aw",%nobits
 10460              		.align	2
 10461              		.set	.LANCHOR18,. + 0
 10462              		.type	SX1278_hw1.8440, %object
 10463              		.size	SX1278_hw1.8440, 24
 10464              	SX1278_hw1.8440:
 10465 0000 00000000 		.space	24
 10465      00000000 
 10465      00000000 
 10465      00000000 
 10465      00000000 
ARM GAS  /tmp/ccAYxbuo.s 			page 185


 10466              		.section	.bss.SX1278_hw1.8466,"aw",%nobits
 10467              		.align	2
 10468              		.set	.LANCHOR20,. + 0
 10469              		.type	SX1278_hw1.8466, %object
 10470              		.size	SX1278_hw1.8466, 24
 10471              	SX1278_hw1.8466:
 10472 0000 00000000 		.space	24
 10472      00000000 
 10472      00000000 
 10472      00000000 
 10472      00000000 
 10473              		.section	.bss.SX1278_hw1.8491,"aw",%nobits
 10474              		.align	2
 10475              		.set	.LANCHOR23,. + 0
 10476              		.type	SX1278_hw1.8491, %object
 10477              		.size	SX1278_hw1.8491, 24
 10478              	SX1278_hw1.8491:
 10479 0000 00000000 		.space	24
 10479      00000000 
 10479      00000000 
 10479      00000000 
 10479      00000000 
 10480              		.section	.bss.TSpm,"aw",%nobits
 10481              		.align	2
 10482              		.type	TSpm, %object
 10483              		.size	TSpm, 4096
 10484              	TSpm:
 10485 0000 00000000 		.space	4096
 10485      00000000 
 10485      00000000 
 10485      00000000 
 10485      00000000 
 10486              		.section	.bss.buf_rx.8470,"aw",%nobits
 10487              		.align	2
 10488              		.set	.LANCHOR22,. + 0
 10489              		.type	buf_rx.8470, %object
 10490              		.size	buf_rx.8470, 256
 10491              	buf_rx.8470:
 10492 0000 00000000 		.space	256
 10492      00000000 
 10492      00000000 
 10492      00000000 
 10492      00000000 
 10493              		.section	.bss.buf_tx.8494,"aw",%nobits
 10494              		.align	2
 10495              		.set	.LANCHOR25,. + 0
 10496              		.type	buf_tx.8494, %object
 10497              		.size	buf_tx.8494, 10
 10498              	buf_tx.8494:
 10499 0000 00000000 		.space	10
 10499      00000000 
 10499      0000
 10500              		.section	.bss.buffer.8846,"aw",%nobits
 10501              		.align	2
 10502              		.type	buffer.8846, %object
 10503              		.size	buffer.8846, 8192
 10504              	buffer.8846:
ARM GAS  /tmp/ccAYxbuo.s 			page 186


 10505 0000 00000000 		.space	8192
 10505      00000000 
 10505      00000000 
 10505      00000000 
 10505      00000000 
 10506              		.section	.bss.cah.8244,"aw",%nobits
 10507              		.align	2
 10508              		.set	.LANCHOR2,. + 0
 10509              		.type	cah.8244, %object
 10510              		.size	cah.8244, 4
 10511              	cah.8244:
 10512 0000 00000000 		.space	4
 10513              		.section	.bss.cnt.8240,"aw",%nobits
 10514              		.align	1
 10515              		.set	.LANCHOR6,. + 0
 10516              		.type	cnt.8240, %object
 10517              		.size	cnt.8240, 2
 10518              	cnt.8240:
 10519 0000 0000     		.space	2
 10520              		.section	.bss.cnt2.8249,"aw",%nobits
 10521              		.align	2
 10522              		.set	.LANCHOR7,. + 0
 10523              		.type	cnt2.8249, %object
 10524              		.size	cnt2.8249, 4
 10525              	cnt2.8249:
 10526 0000 00000000 		.space	4
 10527              		.section	.bss.coile.8264,"aw",%nobits
 10528              		.set	.LANCHOR13,. + 0
 10529              		.type	coile.8264, %object
 10530              		.size	coile.8264, 1
 10531              	coile.8264:
 10532 0000 00       		.space	1
 10533              		.section	.bss.cur.8256,"aw",%nobits
 10534              		.align	1
 10535              		.set	.LANCHOR8,. + 0
 10536              		.type	cur.8256, %object
 10537              		.size	cur.8256, 2
 10538              	cur.8256:
 10539 0000 0000     		.space	2
 10540              		.section	.bss.cwh.8245,"aw",%nobits
 10541              		.align	2
 10542              		.set	.LANCHOR3,. + 0
 10543              		.type	cwh.8245, %object
 10544              		.size	cwh.8245, 4
 10545              	cwh.8245:
 10546 0000 00000000 		.space	4
 10547              		.section	.bss.datetime.8669,"aw",%nobits
 10548              		.align	2
 10549              		.set	.LANCHOR28,. + 0
 10550              		.type	datetime.8669, %object
 10551              		.size	datetime.8669, 8
 10552              	datetime.8669:
 10553 0000 00000000 		.space	8
 10553      00000000 
 10554              		.section	.bss.dcur.8257,"aw",%nobits
 10555              		.align	1
 10556              		.set	.LANCHOR5,. + 0
ARM GAS  /tmp/ccAYxbuo.s 			page 187


 10557              		.type	dcur.8257, %object
 10558              		.size	dcur.8257, 2
 10559              	dcur.8257:
 10560 0000 0000     		.space	2
 10561              		.section	.bss.dinit.8847,"aw",%nobits
 10562              		.set	.LANCHOR29,. + 0
 10563              		.type	dinit.8847, %object
 10564              		.size	dinit.8847, 1
 10565              	dinit.8847:
 10566 0000 00       		.space	1
 10567              		.section	.bss.dma_buf,"aw",%nobits
 10568              		.align	2
 10569              		.set	.LANCHOR27,. + 0
 10570              		.type	dma_buf, %object
 10571              		.size	dma_buf, 24
 10572              	dma_buf:
 10573 0000 00000000 		.space	24
 10573      00000000 
 10573      00000000 
 10573      00000000 
 10573      00000000 
 10574              		.section	.bss.dma_buf.8757,"aw",%nobits
 10575              		.align	2
 10576              		.set	.LANCHOR32,. + 0
 10577              		.type	dma_buf.8757, %object
 10578              		.size	dma_buf.8757, 578
 10579              	dma_buf.8757:
 10580 0000 00000000 		.space	578
 10580      00000000 
 10580      00000000 
 10580      00000000 
 10580      00000000 
 10581              		.section	.bss.pow.8252,"aw",%nobits
 10582              		.align	1
 10583              		.set	.LANCHOR10,. + 0
 10584              		.type	pow.8252, %object
 10585              		.size	pow.8252, 2
 10586              	pow.8252:
 10587 0000 0000     		.space	2
 10588              		.section	.bss.str_num.8495,"aw",%nobits
 10589              		.align	2
 10590              		.set	.LANCHOR26,. + 0
 10591              		.type	str_num.8495, %object
 10592              		.size	str_num.8495, 5
 10593              	str_num.8495:
 10594 0000 00000000 		.space	5
 10594      00
 10595              		.section	.bss.val.8742,"aw",%nobits
 10596              		.align	2
 10597              		.set	.LANCHOR33,. + 0
 10598              		.type	val.8742, %object
 10599              		.size	val.8742, 20
 10600              	val.8742:
 10601 0000 00000000 		.space	20
 10601      00000000 
 10601      00000000 
 10601      00000000 
ARM GAS  /tmp/ccAYxbuo.s 			page 188


 10601      00000000 
 10602              		.section	.bss.vbus.8258,"aw",%nobits
 10603              		.align	1
 10604              		.set	.LANCHOR4,. + 0
 10605              		.type	vbus.8258, %object
 10606              		.size	vbus.8258, 2
 10607              	vbus.8258:
 10608 0000 0000     		.space	2
 10609              		.section	.bss.vr1.8241,"aw",%nobits
 10610              		.align	1
 10611              		.set	.LANCHOR14,. + 0
 10612              		.type	vr1.8241, %object
 10613              		.size	vr1.8241, 2
 10614              	vr1.8241:
 10615 0000 0000     		.space	2
 10616              		.section	.bss.vr3.8250,"aw",%nobits
 10617              		.align	2
 10618              		.set	.LANCHOR15,. + 0
 10619              		.type	vr3.8250, %object
 10620              		.size	vr3.8250, 4
 10621              	vr3.8250:
 10622 0000 00000000 		.space	4
 10623              		.section	.bss.vr4.8251,"aw",%nobits
 10624              		.align	2
 10625              		.set	.LANCHOR16,. + 0
 10626              		.type	vr4.8251, %object
 10627              		.size	vr4.8251, 4
 10628              	vr4.8251:
 10629 0000 00000000 		.space	4
 10630              		.section	.bss.yb.8738,"aw",%nobits
 10631              		.align	2
 10632              		.set	.LANCHOR30,. + 0
 10633              		.type	yb.8738, %object
 10634              		.size	yb.8738, 1
 10635              	yb.8738:
 10636 0000 00       		.space	1
 10637              		.section	.bss.yn.8739,"aw",%nobits
 10638              		.align	2
 10639              		.set	.LANCHOR31,. + 0
 10640              		.type	yn.8739, %object
 10641              		.size	yn.8739, 1
 10642              	yn.8739:
 10643 0000 00       		.space	1
 10644              		.section	.data.p_TSpm,"aw",%progbits
 10645              		.align	2
 10646              		.type	p_TSpm, %object
 10647              		.size	p_TSpm, 4
 10648              	p_TSpm:
 10649 0000 00000000 		.word	TSpm
 10650              		.section	.data.tbuf.8744,"aw",%progbits
 10651              		.align	2
 10652              		.set	.LANCHOR34,. + 0
 10653              		.type	tbuf.8744, %object
 10654              		.size	tbuf.8744, 20
 10655              	tbuf.8744:
 10656 0000 30303030 		.ascii	"0000-00-00 00:00:00\000"
 10656      2D30302D 
ARM GAS  /tmp/ccAYxbuo.s 			page 189


 10656      30302030 
 10656      303A3030 
 10656      3A303000 
 10657              		.section	.rodata.BMP280_i2c.str1.4,"aMS",%progbits,1
 10658              		.align	2
 10659              	.LC68:
 10660 0000 0D0A2069 		.ascii	"\015\012 i2c_BMP280 = 0x\000"
 10660      32635F42 
 10660      4D503238 
 10660      30203D20 
 10660      307800
 10661 0013 00       		.space	1
 10662              	.LC69:
 10663 0014 0D0A2042 		.ascii	"\015\012 BMP280 \000"
 10663      4D503238 
 10663      302000
 10664 001f 00       		.space	1
 10665              	.LC70:
 10666 0020 74743D00 		.ascii	"tt=\000"
 10667              	.LC71:
 10668 0024 20543D00 		.ascii	" T=\000"
 10669              	.LC72:
 10670 0028 20703D20 		.ascii	" p= \000"
 10670      00
 10671 002d 000000   		.space	3
 10672              	.LC73:
 10673 0030 2074703D 		.ascii	" tp=\000"
 10673      00
 10674              		.section	.rodata.BMP280_spi.str1.4,"aMS",%progbits,1
 10675              		.align	2
 10676              	.LC74:
 10677 0000 0D0A2042 		.ascii	"\015\012 BMP280T1 = 0x\000"
 10677      4D503238 
 10677      30543120 
 10677      3D203078 
 10677      00
 10678              		.section	.rodata.Intro2.str1.4,"aMS",%progbits,1
 10679              		.align	2
 10680              	.LC155:
 10681 0000 0D0A2053 		.ascii	"\015\012 Start programu... \015\012\000"
 10681      74617274 
 10681      2070726F 
 10681      6772616D 
 10681      752E2E2E 
 10682              	.LC156:
 10683 0018 0D0A2044 		.ascii	"\015\012 Debug0...\000"
 10683      65627567 
 10683      302E2E2E 
 10683      00
 10684 0025 000000   		.space	3
 10685              	.LC157:
 10686 0028 0D0A2077 		.ascii	"\015\012 wXlen \000"
 10686      586C656E 
 10686      2000
 10687 0032 0000     		.space	2
 10688              	.LC158:
 10689 0034 0D0A2054 		.ascii	"\015\012 TIM4->PSC/ARR=\000"
ARM GAS  /tmp/ccAYxbuo.s 			page 190


 10689      494D342D 
 10689      3E505343 
 10689      2F415252 
 10689      3D00
 10690              		.section	.rodata.LoRaRX.str1.4,"aMS",%progbits,1
 10691              		.align	2
 10692              	.LC46:
 10693 0000 0A00     		.ascii	"\012\000"
 10694              		.section	.rodata.LoRaRX1.str1.4,"aMS",%progbits,1
 10695              		.align	2
 10696              	.LC47:
 10697 0000 2054696D 		.ascii	" Time=\000"
 10697      653D00
 10698 0007 00       		.space	1
 10699              	.LC48:
 10700 0008 0D0A2052 		.ascii	"\015\012 Read Reg1=0x\000"
 10700      65616420 
 10700      52656731 
 10700      3D307800 
 10701              	.LC49:
 10702 0018 20526567 		.ascii	" Reg1 0x\000"
 10702      31203078 
 10702      00
 10703 0021 000000   		.space	3
 10704              	.LC50:
 10705 0024 3D203078 		.ascii	"= 0x\000"
 10705      00
 10706 0029 000000   		.space	3
 10707              	.LC51:
 10708 002c 0D0A2030 		.ascii	"\015\012 0-3(\000"
 10708      2D332800 
 10709              	.LC52:
 10710 0034 2920504F 		.ascii	") POWER=\000"
 10710      5745523D 
 10710      00
 10711 003d 000000   		.space	3
 10712              	.LC53:
 10713 0040 0D0A2030 		.ascii	"\015\012 0-6(\000"
 10713      2D362800 
 10714              	.LC54:
 10715 0048 29205346 		.ascii	") SF=\000"
 10715      3D00
 10716 004e 0000     		.space	2
 10717              	.LC55:
 10718 0050 0D0A2030 		.ascii	"\015\012 0-9(\000"
 10718      2D392800 
 10719              	.LC56:
 10720 0058 29204257 		.ascii	") BW=\000"
 10720      3D00
 10721 005e 0000     		.space	2
 10722              	.LC57:
 10723 0060 0D0A2073 		.ascii	"\015\012 sek(\000"
 10723      656B2800 
 10724              	.LC58:
 10725 0068 29204465 		.ascii	") Delay=\000"
 10725      6C61793D 
 10725      00
ARM GAS  /tmp/ccAYxbuo.s 			page 191


 10726 0071 000000   		.space	3
 10727              	.LC59:
 10728 0074 0D0A204D 		.ascii	"\015\012 Menu > \000"
 10728      656E7520 
 10728      3E2000
 10729 007f 00       		.space	1
 10730              	.LC60:
 10731 0080 0D0A2070 		.ascii	"\015\012 prssi->\000"
 10731      72737369 
 10731      2D3E00
 10732              		.section	.rodata.MAX44009_i2c.str1.4,"aMS",%progbits,1
 10733              		.align	2
 10734              	.LC67:
 10735 0000 0D0A2041 		.ascii	"\015\012 APDS9960_ID=0x\000"
 10735      50445339 
 10735      3936305F 
 10735      49443D30 
 10735      7800
 10736              		.section	.rodata.MemCard_Menu.str1.4,"aMS",%progbits,1
 10737              		.align	2
 10738              	.LC109:
 10739 0000 0D0A5344 		.ascii	"\015\012SD Card Init = \000"
 10739      20436172 
 10739      6420496E 
 10739      6974203D 
 10739      2000
 10740 0012 0000     		.space	2
 10741              	.LC110:
 10742 0014 0D0A5344 		.ascii	"\015\012SD Card Init ERROR \000"
 10742      20436172 
 10742      6420496E 
 10742      69742045 
 10742      52524F52 
 10743 002a 0000     		.space	2
 10744              	.LC111:
 10745 002c 0D0A5344 		.ascii	"\015\012SD Card ser_num    = \000"
 10745      20436172 
 10745      64207365 
 10745      725F6E75 
 10745      6D202020 
 10746              	.LC112:
 10747 0044 0D0A5344 		.ascii	"\015\012SD Card block_num  = \000"
 10747      20436172 
 10747      6420626C 
 10747      6F636B5F 
 10747      6E756D20 
 10748              	.LC113:
 10749 005c 0D0A5344 		.ascii	"\015\012SD Card read_blen  = \000"
 10749      20436172 
 10749      64207265 
 10749      61645F62 
 10749      6C656E20 
 10750              	.LC114:
 10751 0074 0D0A5344 		.ascii	"\015\012SD Card write_blen = \000"
 10751      20436172 
 10751      64207772 
 10751      6974655F 
ARM GAS  /tmp/ccAYxbuo.s 			page 192


 10751      626C656E 
 10752              	.LC115:
 10753 008c 53746174 		.ascii	"Statistic Card  \000"
 10753      69737469 
 10753      63204361 
 10753      72642020 
 10753      00
 10754 009d 000000   		.space	3
 10755              	.LC116:
 10756 00a0 0D0A5344 		.ascii	"\015\012SD Card Not Init\000"
 10756      20436172 
 10756      64204E6F 
 10756      7420496E 
 10756      697400
 10757 00b3 00       		.space	1
 10758              	.LC117:
 10759 00b4 46696C6C 		.ascii	"Fill sector\000"
 10759      20736563 
 10759      746F7200 
 10760              	.LC118:
 10761 00c0 0D0A2053 		.ascii	"\015\012 Start Block  = 0x\000"
 10761      74617274 
 10761      20426C6F 
 10761      636B2020 
 10761      3D203078 
 10762 00d5 000000   		.space	3
 10763              	.LC119:
 10764 00d8 0D0A2045 		.ascii	"\015\012 End   Blocks = 0x\000"
 10764      6E642020 
 10764      20426C6F 
 10764      636B7320 
 10764      3D203078 
 10765 00ed 000000   		.space	3
 10766              	.LC120:
 10767 00f0 0D0A204E 		.ascii	"\015\012 Num Blocks   = \000"
 10767      756D2042 
 10767      6C6F636B 
 10767      73202020 
 10767      3D2000
 10768 0103 00       		.space	1
 10769              	.LC121:
 10770 0104 0D0A2044 		.ascii	"\015\012 Data to fill = 0x\000"
 10770      61746120 
 10770      746F2066 
 10770      696C6C20 
 10770      3D203078 
 10771 0119 000000   		.space	3
 10772              	.LC122:
 10773 011c 0D0A2046 		.ascii	"\015\012 Fill error = 0x\000"
 10773      696C6C20 
 10773      6572726F 
 10773      72203D20 
 10773      307800
 10774 012f 00       		.space	1
 10775              	.LC123:
 10776 0130 0D0A2046 		.ascii	"\015\012 Fill OK \000"
 10776      696C6C20 
ARM GAS  /tmp/ccAYxbuo.s 			page 193


 10776      4F4B2000 
 10777              	.LC124:
 10778 013c 2054696D 		.ascii	" Time[us] = \000"
 10778      655B7573 
 10778      5D203D20 
 10778      00
 10779 0149 000000   		.space	3
 10780              	.LC125:
 10781 014c 4D6F6469 		.ascii	"Modify memory\000"
 10781      6679206D 
 10781      656D6F72 
 10781      7900
 10782 015a 0000     		.space	2
 10783              	.LC126:
 10784 015c 0D0A204D 		.ascii	"\015\012 Memory Addr = 0x\000"
 10784      656D6F72 
 10784      79204164 
 10784      6472203D 
 10784      20307800 
 10785              	.LC127:
 10786 0170 0D0A204D 		.ascii	"\015\012 Memory Data = 0x\000"
 10786      656D6F72 
 10786      79204461 
 10786      7461203D 
 10786      20307800 
 10787              	.LC128:
 10788 0184 0D0A204E 		.ascii	"\015\012 New Data    = 0x\000"
 10788      65772044 
 10788      61746120 
 10788      2020203D 
 10788      20307800 
 10789              	.LC129:
 10790 0198 0D0A204D 		.ascii	"\015\012 Modify OK\000"
 10790      6F646966 
 10790      79204F4B 
 10790      00
 10791 01a5 000000   		.space	3
 10792              	.LC130:
 10793 01a8 0D0A2052 		.ascii	"\015\012 ReadB 0x\000"
 10793      65616442 
 10793      20307800 
 10794              	.LC131:
 10795 01b4 20204672 		.ascii	"  From 0x\000"
 10795      6F6D2030 
 10795      7800
 10796 01be 0000     		.space	2
 10797              	.LC132:
 10798 01c0 2D3E3078 		.ascii	"->0x\000"
 10798      00
 10799 01c5 000000   		.space	3
 10800              	.LC133:
 10801 01c8 20205772 		.ascii	"  WriteB 0x\000"
 10801      69746542 
 10801      20307800 
 10802              	.LC134:
 10803 01d4 20203078 		.ascii	"  0x\000"
 10803      00
ARM GAS  /tmp/ccAYxbuo.s 			page 194


 10804 01d9 000000   		.space	3
 10805              	.LC135:
 10806 01dc 0D0A2073 		.ascii	"\015\012 sectorNumber = 0x\000"
 10806      6563746F 
 10806      724E756D 
 10806      62657220 
 10806      3D203078 
 10807 01f1 000000   		.space	3
 10808              	.LC136:
 10809 01f4 20745F63 		.ascii	" t_crc = \000"
 10809      7263203D 
 10809      2000
 10810 01fe 0000     		.space	2
 10811              	.LC137:
 10812 0200 0D0A2052 		.ascii	"\015\012 Read Error = \000"
 10812      65616420 
 10812      4572726F 
 10812      72203D20 
 10812      00
 10813 0211 000000   		.space	3
 10814              	.LC138:
 10815 0214 52656164 		.ascii	"Read multi sector\000"
 10815      206D756C 
 10815      74692073 
 10815      6563746F 
 10815      7200
 10816 0226 0000     		.space	2
 10817              	.LC139:
 10818 0228 0D0A204E 		.ascii	"\015\012 Num Sectors  = \000"
 10818      756D2053 
 10818      6563746F 
 10818      72732020 
 10818      3D2000
 10819 023b 00       		.space	1
 10820              	.LC140:
 10821 023c 0D0A2052 		.ascii	"\015\012 Read error = 0x\000"
 10821      65616420 
 10821      6572726F 
 10821      72203D20 
 10821      307800
 10822 024f 00       		.space	1
 10823              	.LC141:
 10824 0250 0D0A2052 		.ascii	"\015\012 Read OK \000"
 10824      65616420 
 10824      4F4B2000 
 10825              	.LC142:
 10826 025c 20793220 		.ascii	" y2 = \000"
 10826      3D2000
 10827 0263 00       		.space	1
 10828              	.LC143:
 10829 0264 0900     		.ascii	"\011\000"
 10830 0266 0000     		.space	2
 10831              	.LC144:
 10832 0268 56696577 		.ascii	"View last sector\000"
 10832      206C6173 
 10832      74207365 
 10832      63746F72 
ARM GAS  /tmp/ccAYxbuo.s 			page 195


 10832      00
 10833 0279 000000   		.space	3
 10834              	.LC145:
 10835 027c 0D0A2046 		.ascii	"\015\012 First Sector = 0x\000"
 10835      69727374 
 10835      20536563 
 10835      746F7220 
 10835      3D203078 
 10836 0291 000000   		.space	3
 10837              	.LC146:
 10838 0294 0D0A2053 		.ascii	"\015\012 Searching \000"
 10838      65617263 
 10838      68696E67 
 10838      2000
 10839 02a2 0000     		.space	2
 10840              	.LC147:
 10841 02a4 0D0A2045 		.ascii	"\015\012 Exit Read Error !!!\000"
 10841      78697420 
 10841      52656164 
 10841      20457272 
 10841      6F722021 
 10842 02bb 00       		.space	1
 10843              	.LC148:
 10844 02bc 0D0A2046 		.ascii	"\015\012 Find Sector = 0x\000"
 10844      696E6420 
 10844      53656374 
 10844      6F72203D 
 10844      20307800 
 10845              	.LC149:
 10846 02d0 0D0A2020 		.ascii	"\015\012     lenBlock= \000"
 10846      2020206C 
 10846      656E426C 
 10846      6F636B3D 
 10846      2000
 10847 02e2 0000     		.space	2
 10848              	.LC150:
 10849 02e4 0D0A2042 		.ascii	"\015\012 Block = \000"
 10849      6C6F636B 
 10849      203D2000 
 10850              	.LC151:
 10851 02f0 0D0A2052 		.ascii	"\015\012 Read Error \000"
 10851      65616420 
 10851      4572726F 
 10851      722000
 10852 02ff 00       		.space	1
 10853              	.LC152:
 10854 0300 0D0A2053 		.ascii	"\015\012 SD_Status \015\012 \000"
 10854      445F5374 
 10854      61747573 
 10854      200D0A20 
 10854      00
 10855 0311 000000   		.space	3
 10856              	.LC153:
 10857 0314 54657374 		.ascii	"Testing ...\000"
 10857      696E6720 
 10857      2E2E2E00 
 10858              	.LC154:
ARM GAS  /tmp/ccAYxbuo.s 			page 196


 10859 0320 556E6B72 		.ascii	"Unkr_dma_buf Command !\000"
 10859      5F646D61 
 10859      5F627566 
 10859      20436F6D 
 10859      6D616E64 
 10860              		.section	.rodata.Menu1.str1.4,"aMS",%progbits,1
 10861              		.align	2
 10862              	.LC105:
 10863 0000 0A0D0A3D 		.ascii	"\012\015\012======= STM32F4 SD/MMC Card ==========="
 10863      3D3D3D3D 
 10863      3D3D2053 
 10863      544D3332 
 10863      46342053 
 10864 002a 3D3D3D3D 		.ascii	"===========\015\012\000"
 10864      3D3D3D3D 
 10864      3D3D3D0D 
 10864      0A00
 10865              	.LC106:
 10866 0038 2069202D 		.ascii	" i - Init      r - Read  sector  e - Erase sector  "
 10866      20496E69 
 10866      74202020 
 10866      20202072 
 10866      202D2052 
 10867 006b 200D0A00 		.ascii	" \015\012\000"
 10868 006f 00       		.space	1
 10869              	.LC107:
 10870 0070 2064202D 		.ascii	" d - Delete    f - Write sector  s - Statistic Card"
 10870      2044656C 
 10870      65746520 
 10870      20202066 
 10870      202D2057 
 10871 00a3 200D0A00 		.ascii	" \015\012\000"
 10872 00a7 00       		.space	1
 10873              	.LC108:
 10874 00a8 206D202D 		.ascii	" m - Modf mem  c - Copy  sector  n - Next Cluster  "
 10874      204D6F64 
 10874      66206D65 
 10874      6D202063 
 10874      202D2043 
 10875 00db 0D0A00   		.ascii	"\015\012\000"
 10876              		.section	.rodata.SPI_Tool.str1.4,"aMS",%progbits,1
 10877              		.align	2
 10878              	.LC98:
 10879 0000 0D0A496E 		.ascii	"\015\012Init spi    = \000"
 10879      69742073 
 10879      70692020 
 10879      20203D20 
 10879      00
 10880 0011 000000   		.space	3
 10881              	.LC99:
 10882 0014 0D0A2052 		.ascii	"\015\012 Reg = \000"
 10882      6567203D 
 10882      2000
 10883 001e 0000     		.space	2
 10884              	.LC100:
 10885 0020 436F7079 		.ascii	"Copy memory\000"
 10885      206D656D 
ARM GAS  /tmp/ccAYxbuo.s 			page 197


 10885      6F727900 
 10886              	.LC101:
 10887 002c 0D0A2053 		.ascii	"\015\012 Src Mem adr = 0x\000"
 10887      7263204D 
 10887      656D2061 
 10887      6472203D 
 10887      20307800 
 10888              	.LC102:
 10889 0040 0D0A2048 		.ascii	"\015\012 How many byte = \000"
 10889      6F77206D 
 10889      616E7920 
 10889      62797465 
 10889      203D2000 
 10890              	.LC103:
 10891 0054 0D0A2044 		.ascii	"\015\012 Dst mem adr = 0x\000"
 10891      7374206D 
 10891      656D2061 
 10891      6472203D 
 10891      20307800 
 10892              	.LC104:
 10893 0068 4E69657A 		.ascii	"Nieznana Komenda\000"
 10893      6E616E61 
 10893      204B6F6D 
 10893      656E6461 
 10893      00
 10894              		.section	.rodata.SPI_Tool_Menu.str1.4,"aMS",%progbits,1
 10895              		.align	2
 10896              	.LC94:
 10897 0000 0A0D0A3D 		.ascii	"\012\015\012======= STM32F1 SPI TOOL =============="
 10897      3D3D3D3D 
 10897      3D3D2053 
 10897      544D3332 
 10897      46312053 
 10898 002a 3D3D3D3D 		.ascii	"===========\015\012\000"
 10898      3D3D3D3D 
 10898      3D3D3D0D 
 10898      0A00
 10899              	.LC95:
 10900 0038 2069202D 		.ascii	" i - Init      r - Read  sector  e -               "
 10900      20496E69 
 10900      74202020 
 10900      20202072 
 10900      202D2052 
 10901 006b 200D0A00 		.ascii	" \015\012\000"
 10902 006f 00       		.space	1
 10903              	.LC96:
 10904 0070 2064202D 		.ascii	" d - Delete    f - Write sector  s -               "
 10904      2044656C 
 10904      65746520 
 10904      20202066 
 10904      202D2057 
 10905 00a3 200D0A00 		.ascii	" \015\012\000"
 10906 00a7 00       		.space	1
 10907              	.LC97:
 10908 00a8 206D202D 		.ascii	" m - Modf      c - Copy  sector  n -               "
 10908      204D6F64 
 10908      66202020 
ARM GAS  /tmp/ccAYxbuo.s 			page 198


 10908      20202063 
 10908      202D2043 
 10909 00db 0D0A00   		.ascii	"\015\012\000"
 10910              		.section	.rodata.SetDate.str1.4,"aMS",%progbits,1
 10911              		.align	2
 10912              	.LC161:
 10913 0000 0D0A2072 		.ascii	"\015\012 rok = \000"
 10913      6F6B203D 
 10913      2000
 10914 000a 0000     		.space	2
 10915              	.LC162:
 10916 000c 0D0A206D 		.ascii	"\015\012 mies = \000"
 10916      69657320 
 10916      3D2000
 10917 0017 00       		.space	1
 10918              	.LC163:
 10919 0018 0D0A2064 		.ascii	"\015\012 dzien = \000"
 10919      7A69656E 
 10919      203D2000 
 10920              	.LC164:
 10921 0024 0D0A2067 		.ascii	"\015\012 gdz = \000"
 10921      647A203D 
 10921      2000
 10922 002e 0000     		.space	2
 10923              	.LC165:
 10924 0030 0D0A206D 		.ascii	"\015\012 min = \000"
 10924      696E203D 
 10924      2000
 10925 003a 0000     		.space	2
 10926              	.LC166:
 10927 003c 0D0A2073 		.ascii	"\015\012 sek = \000"
 10927      656B203D 
 10927      2000
 10928 0046 0000     		.space	2
 10929              	.LC167:
 10930 0048 0D0A2054 		.ascii	"\015\012 TimStmp = \000"
 10930      696D5374 
 10930      6D70203D 
 10930      2000
 10931              		.section	.rodata.TSL2561_i2c.str1.4,"aMS",%progbits,1
 10932              		.align	2
 10933              	.LC66:
 10934 0000 2C00     		.ascii	",\000"
 10935              		.section	.rodata.Zegarek.str1.4,"aMS",%progbits,1
 10936              		.align	2
 10937              	.LC159:
 10938 0000 30302D30 		.ascii	"00-00-00\000"
 10938      302D3030 
 10938      00
 10939 0009 000000   		.space	3
 10940              	.LC160:
 10941 000c 30303030 		.ascii	"0000-00-00\000"
 10941      2D30302D 
 10941      303000
 10942              		.section	.rodata._ytab,"a",%progbits
 10943              		.align	2
 10944              		.set	.LANCHOR0,. + 0
ARM GAS  /tmp/ccAYxbuo.s 			page 199


 10945              		.type	_ytab, %object
 10946              		.size	_ytab, 96
 10947              	_ytab:
 10948 0000 1F000000 		.word	31
 10949 0004 1C000000 		.word	28
 10950 0008 1F000000 		.word	31
 10951 000c 1E000000 		.word	30
 10952 0010 1F000000 		.word	31
 10953 0014 1E000000 		.word	30
 10954 0018 1F000000 		.word	31
 10955 001c 1F000000 		.word	31
 10956 0020 1E000000 		.word	30
 10957 0024 1F000000 		.word	31
 10958 0028 1E000000 		.word	30
 10959 002c 1F000000 		.word	31
 10960 0030 1F000000 		.word	31
 10961 0034 1D000000 		.word	29
 10962 0038 1F000000 		.word	31
 10963 003c 1E000000 		.word	30
 10964 0040 1F000000 		.word	31
 10965 0044 1E000000 		.word	30
 10966 0048 1F000000 		.word	31
 10967 004c 1F000000 		.word	31
 10968 0050 1E000000 		.word	30
 10969 0054 1F000000 		.word	31
 10970 0058 1E000000 		.word	30
 10971 005c 1F000000 		.word	31
 10972              		.section	.rodata.fun_tool.str1.4,"aMS",%progbits,1
 10973              		.align	2
 10974              	.LC75:
 10975 0000 0D0A2046 		.ascii	"\015\012 FLASH memory Read = \000"
 10975      4C415348 
 10975      206D656D 
 10975      6F727920 
 10975      52656164 
 10976              	.LC76:
 10977 0018 0D0A2046 		.ascii	"\015\012 Flash memory Page =\000"
 10977      6C617368 
 10977      206D656D 
 10977      6F727920 
 10977      50616765 
 10978 002f 00       		.space	1
 10979              	.LC77:
 10980 0030 0D0A2000 		.ascii	"\015\012 \000"
 10981              	.LC78:
 10982 0034 0D0A0A20 		.ascii	"\015\012\012 \000"
 10982      00
 10983 0039 000000   		.space	3
 10984              	.LC79:
 10985 003c 202000   		.ascii	"  \000"
 10986 003f 00       		.space	1
 10987              	.LC80:
 10988 0040 20637263 		.ascii	" crc = \000"
 10988      203D2000 
 10989              	.LC81:
 10990 0048 0D0A2046 		.ascii	"\015\012 Flash memory Page = \000"
 10990      6C617368 
ARM GAS  /tmp/ccAYxbuo.s 			page 200


 10990      206D656D 
 10990      6F727920 
 10990      50616765 
 10991              	.LC82:
 10992 0060 0D0A204B 		.ascii	"\015\012 Kasowanie pamieci FLASH = \000"
 10992      61736F77 
 10992      616E6965 
 10992      2070616D 
 10992      69656369 
 10993 007e 0000     		.space	2
 10994              	.LC83:
 10995 0080 0D0A2047 		.ascii	"\015\012 Godzina = \000"
 10995      6F647A69 
 10995      6E61203D 
 10995      2000
 10996 008e 0000     		.space	2
 10997              	.LC84:
 10998 0090 0D0A204D 		.ascii	"\015\012 Minut   = \000"
 10998      696E7574 
 10998      2020203D 
 10998      2000
 10999 009e 0000     		.space	2
 11000              	.LC85:
 11001 00a0 0D0A2053 		.ascii	"\015\012 Sekunda = \000"
 11001      656B756E 
 11001      6461203D 
 11001      2000
 11002 00ae 0000     		.space	2
 11003              	.LC86:
 11004 00b0 0D0A2052 		.ascii	"\015\012 Read Start !\000"
 11004      65616420 
 11004      53746172 
 11004      74202100 
 11005              	.LC87:
 11006 00c0 0D0A2052 		.ascii	"\015\012 Read Done !\000"
 11006      65616420 
 11006      446F6E65 
 11006      202100
 11007 00cf 00       		.space	1
 11008              	.LC88:
 11009 00d0 0D0A2043 		.ascii	"\015\012 Clear !\000"
 11009      6C656172 
 11009      202100
 11010 00db 00       		.space	1
 11011              	.LC89:
 11012 00dc 52656164 		.ascii	"Read sector\000"
 11012      20736563 
 11012      746F7200 
 11013              	.LC90:
 11014 00e8 0D0A2073 		.ascii	"\015\012 sectorNumber = \000"
 11014      6563746F 
 11014      724E756D 
 11014      62657220 
 11014      3D2000
 11015 00fb 00       		.space	1
 11016              	.LC91:
 11017 00fc 20745F72 		.ascii	" t_rsdio = \000"
ARM GAS  /tmp/ccAYxbuo.s 			page 201


 11017      7364696F 
 11017      203D2000 
 11018              	.LC92:
 11019 0108 0D0A2052 		.ascii	"\015\012 Read Error !!!\000"
 11019      65616420 
 11019      4572726F 
 11019      72202121 
 11019      2100
 11020              		.section	.rodata.head.str1.4,"aMS",%progbits,1
 11021              		.align	2
 11022              	.LC10:
 11023 0000 0C0D0A20 		.ascii	"\014\015\012 Mini STM32F103C8T6 RAM   \000"
 11023      4D696E69 
 11023      2053544D 
 11023      33324631 
 11023      30334338 
 11024 001e 0000     		.space	2
 11025              	.LC11:
 11026 0020 204D487A 		.ascii	" MHz\000"
 11026      00
 11027              		.section	.rodata.ili9486.str1.4,"aMS",%progbits,1
 11028              		.align	2
 11029              	.LC38:
 11030 0000 0D0A2072 		.ascii	"\015\012 reg = 0x\000"
 11030      6567203D 
 11030      20307800 
 11031              	.LC39:
 11032 000c 0D0A2064 		.ascii	"\015\012 dat = 0x\000"
 11032      6174203D 
 11032      20307800 
 11033              	.LC40:
 11034 0018 0C00     		.ascii	"\014\000"
 11035 001a 0000     		.space	2
 11036              	.LC41:
 11037 001c 0A0D0A3D 		.ascii	"\012\015\012======= ILI9486 ======================="
 11037      3D3D3D3D 
 11037      3D3D2049 
 11037      4C493934 
 11037      3836203D 
 11038 0046 3D3D3D3D 		.ascii	"===========\015\012\000"
 11038      3D3D3D3D 
 11038      3D3D3D0D 
 11038      0A00
 11039              	.LC42:
 11040 0054 2072202D 		.ascii	" r - Read   c - Clear page  \015\012\000"
 11040      20526561 
 11040      64202020 
 11040      63202D20 
 11040      436C6561 
 11041 0073 00       		.space	1
 11042              	.LC43:
 11043 0074 2077202D 		.ascii	" w - Write  l - Loop read   \015\012\000"
 11043      20577269 
 11043      74652020 
 11043      6C202D20 
 11043      4C6F6F70 
 11044 0093 00       		.space	1
ARM GAS  /tmp/ccAYxbuo.s 			page 202


 11045              	.LC44:
 11046 0094 3D3D3D3D 		.ascii	"==================================================\015"
 11046      3D3D3D3D 
 11046      3D3D3D3D 
 11046      3D3D3D3D 
 11046      3D3D3D3D 
 11047 00c7 0A203E20 		.ascii	"\012 > \000"
 11047      00
 11048              	.LC45:
 11049 00cc 0D00     		.ascii	"\015\000"
 11050              		.section	.rodata.jdrs.9057,"a",%progbits
 11051              		.align	2
 11052              		.set	.LANCHOR35,. + 0
 11053              		.type	jdrs.9057, %object
 11054              		.size	jdrs.9057, 16
 11055              	jdrs.9057:
 11056 0000 3C240140 		.word	1073816636
 11057 0004 40240140 		.word	1073816640
 11058 0008 44240140 		.word	1073816644
 11059 000c 48240140 		.word	1073816648
 11060              		.section	.rodata.lexmark_lcd.str1.4,"aMS",%progbits,1
 11061              		.align	2
 11062              	.LC62:
 11063 0000 57697461 		.ascii	"Witaj szkolo         \000"
 11063      6A20737A 
 11063      6B6F6C6F 
 11063      20202020 
 11063      20202020 
 11064 0016 0000     		.space	2
 11065              	.LC63:
 11066 0018 5A617072 		.ascii	"Zapraszam do pracy        \000"
 11066      61737A61 
 11066      6D20646F 
 11066      20707261 
 11066      63792020 
 11067 0033 00       		.space	1
 11068              	.LC64:
 11069 0034 20202020 		.ascii	"                          \000"
 11069      20202020 
 11069      20202020 
 11069      20202020 
 11069      20202020 
 11070 004f 00       		.space	1
 11071              	.LC65:
 11072 0050 20545B75 		.ascii	" T[us]=\000"
 11072      735D3D00 
 11073              		.section	.rodata.lion_updown.str1.4,"aMS",%progbits,1
 11074              		.align	2
 11075              	.LC17:
 11076 0000 2E00     		.ascii	".\000"
 11077 0002 0000     		.space	2
 11078              	.LC18:
 11079 0004 5600     		.ascii	"V\000"
 11080 0006 0000     		.space	2
 11081              	.LC19:
 11082 0008 6D4100   		.ascii	"mA\000"
 11083 000b 00       		.space	1
ARM GAS  /tmp/ccAYxbuo.s 			page 203


 11084              	.LC20:
 11085 000c 6D416800 		.ascii	"mAh\000"
 11086              	.LC21:
 11087 0010 5700     		.ascii	"W\000"
 11088 0012 0000     		.space	2
 11089              	.LC22:
 11090 0014 6D576800 		.ascii	"mWh\000"
 11091              	.LC23:
 11092 0018 6F686D00 		.ascii	"ohm\000"
 11093              	.LC24:
 11094 001c 0D2000   		.ascii	"\015 \000"
 11095 001f 00       		.space	1
 11096              	.LC25:
 11097 0020 1B5B4B00 		.ascii	"\033[K\000"
 11098              	.LC26:
 11099 0024 30202020 		.ascii	"0        1         2         3         4         5\000"
 11099      20202020 
 11099      20312020 
 11099      20202020 
 11099      20202032 
 11100 0057 00       		.space	1
 11101              	.LC27:
 11102 0058 31323334 		.ascii	"123456789 123456789 123456789 123456789 123456789 1"
 11102      35363738 
 11102      39203132 
 11102      33343536 
 11102      37383920 
 11103 008b 32333435 		.ascii	"234567890\000"
 11103      36373839 
 11103      3000
 11104 0095 000000   		.space	3
 11105              	.LC28:
 11106 0098 506F6461 		.ascii	"Podaj wrtosc= \000"
 11106      6A207772 
 11106      746F7363 
 11106      3D2000
 11107 00a7 00       		.space	1
 11108              	.LC29:
 11109 00a8 1B5B4B57 		.ascii	"\033[KWartosc ileZnak= \000"
 11109      6172746F 
 11109      73632069 
 11109      6C655A6E 
 11109      616B3D20 
 11110 00bd 000000   		.space	3
 11111              	.LC30:
 11112 00c0 1B5B3131 		.ascii	"\033[11;36H\000"
 11112      3B333648 
 11112      00
 11113 00c9 000000   		.space	3
 11114              	.LC31:
 11115 00cc 5A65726F 		.ascii	"Zerowanie t/n=\000"
 11115      77616E69 
 11115      6520742F 
 11115      6E3D00
 11116 00db 00       		.space	1
 11117              	.LC32:
 11118 00dc 20506F64 		.ascii	" Podaj wrtosc= \000"
ARM GAS  /tmp/ccAYxbuo.s 			page 204


 11118      616A2077 
 11118      72746F73 
 11118      633D2000 
 11119              	.LC33:
 11120 00ec 1B5B4B69 		.ascii	"\033[KileZnak,Wartosc=\000"
 11120      6C655A6E 
 11120      616B2C57 
 11120      6172746F 
 11120      73633D00 
 11121              	.LC34:
 11122 0100 204C6164 		.ascii	" Laduj do 70% x [mAh]=\000"
 11122      756A2064 
 11122      6F203730 
 11122      25207820 
 11122      5B6D4168 
 11123 0117 00       		.space	1
 11124              	.LC35:
 11125 0118 2000     		.ascii	" \000"
 11126 011a 0000     		.space	2
 11127              	.LC36:
 11128 011c 1B5B4B20 		.ascii	"\033[K Rozladuj [t/n]=\000"
 11128      526F7A6C 
 11128      6164756A 
 11128      205B742F 
 11128      6E5D3D00 
 11129              	.LC37:
 11130 0130 1B5B4B4C 		.ascii	"\033[KLaduj do [mAh]=\000"
 11130      6164756A 
 11130      20646F20 
 11130      5B6D4168 
 11130      5D3D00
 11131              		.section	.rodata.liontrend.str1.4,"aMS",%progbits,1
 11132              		.align	2
 11133              	.LC12:
 11134 0000 763D00   		.ascii	"v=\000"
 11135 0003 00       		.space	1
 11136              	.LC13:
 11137 0004 0D0A00   		.ascii	"\015\012\000"
 11138 0007 00       		.space	1
 11139              	.LC14:
 11140 0008 633D00   		.ascii	"c=\000"
 11141              		.section	.rodata.oblicz.str1.4,"aMS",%progbits,1
 11142              		.align	2
 11143              	.LC15:
 11144 0000 0C205541 		.ascii	"\014 UART1 \000"
 11144      52543120 
 11144      00
 11145 0009 000000   		.space	3
 11146              	.LC16:
 11147 000c 20622F73 		.ascii	" b/s \015\012\000"
 11147      200D0A00 
 11148              		.section	.rodata.qtouch.str1.4,"aMS",%progbits,1
 11149              		.align	2
 11150              	.LC93:
 11151 0000 0D0A2051 		.ascii	"\015\012 QT =\000"
 11151      54203D00 
 11152              		.section	.rodata.ws2812led.str1.4,"aMS",%progbits,1
ARM GAS  /tmp/ccAYxbuo.s 			page 205


 11153              		.align	2
 11154              	.LC61:
 11155 0000 0D0A2044 		.ascii	"\015\012 DMA start...\000"
 11155      4D412073 
 11155      74617274 
 11155      2E2E2E00 
 11156              		.ident	"GCC: (15:7-2018-q2-6) 7.3.1 20180622 (release) [ARM/embedded-7-branch revision 261907]"
ARM GAS  /tmp/ccAYxbuo.s 			page 206


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccAYxbuo.s:69     .text.gmtime_r.isra.0.constprop.2:00000000 $t
     /tmp/ccAYxbuo.s:76     .text.gmtime_r.isra.0.constprop.2:00000000 gmtime_r.isra.0.constprop.2
     /tmp/ccAYxbuo.s:264    .text.gmtime_r.isra.0.constprop.2:00000154 $d
                            *COM*:00000024 ptm
     /tmp/ccAYxbuo.s:274    .text.head:00000000 $t
     /tmp/ccAYxbuo.s:282    .text.head:00000000 head
     /tmp/ccAYxbuo.s:305    .text.head:00000024 $d
     /tmp/ccAYxbuo.s:309    .text.liontrend:00000000 $t
     /tmp/ccAYxbuo.s:317    .text.liontrend:00000000 liontrend
     /tmp/ccAYxbuo.s:446    .text.liontrend:00000124 $d
     /tmp/ccAYxbuo.s:452    .text.oblicz:00000000 $t
     /tmp/ccAYxbuo.s:460    .text.oblicz:00000000 oblicz
     /tmp/ccAYxbuo.s:591    .text.oblicz:000000dc $d
                            *COM*:00000004 PutChar
     /tmp/ccAYxbuo.s:606    .text.lion_updown:00000000 $t
     /tmp/ccAYxbuo.s:614    .text.lion_updown:00000000 lion_updown
     /tmp/ccAYxbuo.s:957    .text.lion_updown:00000264 $d
     /tmp/ccAYxbuo.s:983    .text.lion_updown:000002cc $t
     /tmp/ccAYxbuo.s:1020   .text.lion_updown:000002f4 $d
                            *COM*:00000004 trg1
                            *COM*:00000004 trg0
                            *COM*:00000004 trg2
                            *COM*:00000004 trg3
     /tmp/ccAYxbuo.s:1058   .text.lion_updown:00000384 $t
     /tmp/ccAYxbuo.s:1390   .text.lion_updown:0000059c $d
     /tmp/ccAYxbuo.s:1414   .text.lion_updown:000005f4 $t
     /tmp/ccAYxbuo.s:1822   .text.lion_updown:000008c8 $d
                            *COM*:00000004 delay_us
     /tmp/ccAYxbuo.s:1857   .text.lion_updown:0000094c $t
     /tmp/ccAYxbuo.s:1982   .text.lion_updown:00000a10 $d
     /tmp/ccAYxbuo.s:1993   .text.startup.main:00000000 $t
     /tmp/ccAYxbuo.s:2001   .text.startup.main:00000000 main
     /tmp/ccAYxbuo.s:2092   .text.startup.main:00000074 $d
     /tmp/ccAYxbuo.s:2103   .text.uht:00000000 $t
     /tmp/ccAYxbuo.s:2111   .text.uht:00000000 uht
     /tmp/ccAYxbuo.s:2126   .text.uht:00000010 $d
     /tmp/ccAYxbuo.s:2129   .text.rtc_calibrate:00000000 $t
     /tmp/ccAYxbuo.s:2137   .text.rtc_calibrate:00000000 rtc_calibrate
     /tmp/ccAYxbuo.s:2300   .text.rtc_calibrate:00000104 $d
                            *COM*:00000004 Timt
     /tmp/ccAYxbuo.s:2315   .text.testwsk:00000000 $t
     /tmp/ccAYxbuo.s:2323   .text.testwsk:00000000 testwsk
     /tmp/ccAYxbuo.s:2331   .text.veml6075:00000000 $t
     /tmp/ccAYxbuo.s:2339   .text.veml6075:00000000 veml6075
     /tmp/ccAYxbuo.s:2444   .text.veml6075:000000a0 $d
     /tmp/ccAYxbuo.s:2459   .text.softSPI_w:00000000 $t
     /tmp/ccAYxbuo.s:2467   .text.softSPI_w:00000000 softSPI_w
     /tmp/ccAYxbuo.s:2537   .text.softSPI_w:00000064 $d
     /tmp/ccAYxbuo.s:2544   .text.softSPI_r:00000000 $t
     /tmp/ccAYxbuo.s:2552   .text.softSPI_r:00000000 softSPI_r
     /tmp/ccAYxbuo.s:2604   .text.softSPI_r:00000038 $d
     /tmp/ccAYxbuo.s:2609   .text.ili9486:00000000 $t
     /tmp/ccAYxbuo.s:2617   .text.ili9486:00000000 ili9486
     /tmp/ccAYxbuo.s:2819   .text.ili9486:00000128 $d
     /tmp/ccAYxbuo.s:2836   .text.wiznet5500:00000000 $t
ARM GAS  /tmp/ccAYxbuo.s 			page 207


     /tmp/ccAYxbuo.s:2844   .text.wiznet5500:00000000 wiznet5500
     /tmp/ccAYxbuo.s:2918   .text.wiznet5500:00000074 $d
     /tmp/ccAYxbuo.s:2928   .text.uv_meter:00000000 $t
     /tmp/ccAYxbuo.s:2936   .text.uv_meter:00000000 uv_meter
     /tmp/ccAYxbuo.s:3026   .text.uv_meter:00000078 $d
     /tmp/ccAYxbuo.s:3034   .text.IRQLoraInit:00000000 $t
     /tmp/ccAYxbuo.s:3042   .text.IRQLoraInit:00000000 IRQLoraInit
     /tmp/ccAYxbuo.s:3075   .text.IRQLoraInit:0000001c $d
     /tmp/ccAYxbuo.s:3080   .text.LoRaRX:00000000 $t
     /tmp/ccAYxbuo.s:3088   .text.LoRaRX:00000000 LoRaRX
     /tmp/ccAYxbuo.s:3297   .text.LoRaRX:00000144 $d
     /tmp/ccAYxbuo.s:3315   .text.LoRaRX1:00000000 $t
     /tmp/ccAYxbuo.s:3323   .text.LoRaRX1:00000000 LoRaRX1
     /tmp/ccAYxbuo.s:3479   .text.LoRaRX1:00000100 $d
     /tmp/ccAYxbuo.s:3497   .text.LoRaRX1:00000112 $t
     /tmp/ccAYxbuo.s:3646   .text.LoRaRX1:00000238 $d
     /tmp/ccAYxbuo.s:3678   .text.LoRaTX:00000000 $t
     /tmp/ccAYxbuo.s:3686   .text.LoRaTX:00000000 LoRaTX
     /tmp/ccAYxbuo.s:3928   .text.LoRaTX:00000198 $d
     /tmp/ccAYxbuo.s:3948   .text.col1:00000000 $t
     /tmp/ccAYxbuo.s:3956   .text.col1:00000000 col1
     /tmp/ccAYxbuo.s:3976   .text.col1:00000018 $d
     /tmp/ccAYxbuo.s:3980   .text.col2:00000000 $t
     /tmp/ccAYxbuo.s:3988   .text.col2:00000000 col2
     /tmp/ccAYxbuo.s:4004   .text.col2:00000014 $d
     /tmp/ccAYxbuo.s:4007   .text.col0:00000000 $t
     /tmp/ccAYxbuo.s:4015   .text.col0:00000000 col0
     /tmp/ccAYxbuo.s:4031   .text.col0:00000014 $d
     /tmp/ccAYxbuo.s:4034   .text.ws2812led:00000000 $t
     /tmp/ccAYxbuo.s:4042   .text.ws2812led:00000000 ws2812led
     /tmp/ccAYxbuo.s:4200   .text.ws2812led:000000e4 $d
     /tmp/ccAYxbuo.s:4217   .text.lexmark_lcd:00000000 $t
     /tmp/ccAYxbuo.s:4225   .text.lexmark_lcd:00000000 lexmark_lcd
     /tmp/ccAYxbuo.s:4295   .text.lexmark_lcd:0000006c $d
     /tmp/ccAYxbuo.s:4306   .text.softUTX_init:00000000 $t
     /tmp/ccAYxbuo.s:4314   .text.softUTX_init:00000000 softUTX_init
     /tmp/ccAYxbuo.s:4329   .text.softUTX_init:00000010 $d
     /tmp/ccAYxbuo.s:4332   .text.sofUTX:00000000 $t
     /tmp/ccAYxbuo.s:4340   .text.sofUTX:00000000 sofUTX
     /tmp/ccAYxbuo.s:4431   .text.sofUTX:0000006c $d
     /tmp/ccAYxbuo.s:4436   .text.ToLED:00000000 $t
     /tmp/ccAYxbuo.s:4444   .text.ToLED:00000000 ToLED
     /tmp/ccAYxbuo.s:4472   .text.cmd_LCD:00000000 $t
     /tmp/ccAYxbuo.s:4480   .text.cmd_LCD:00000000 cmd_LCD
     /tmp/ccAYxbuo.s:4542   .text.cmd_LCD:00000058 $d
     /tmp/ccAYxbuo.s:4548   .text.CalculateLux:00000000 $t
     /tmp/ccAYxbuo.s:4556   .text.CalculateLux:00000000 CalculateLux
     /tmp/ccAYxbuo.s:4728   .text.TSL2561_i2c:00000000 $t
     /tmp/ccAYxbuo.s:4736   .text.TSL2561_i2c:00000000 TSL2561_i2c
     /tmp/ccAYxbuo.s:4873   .text.TSL2561_i2c:000000dc $d
     /tmp/ccAYxbuo.s:4885   .text.set_mode:00000000 $t
     /tmp/ccAYxbuo.s:4893   .text.set_mode:00000000 set_mode
     /tmp/ccAYxbuo.s:4954   .text.MAX44009_i2c:00000000 $t
     /tmp/ccAYxbuo.s:4962   .text.MAX44009_i2c:00000000 MAX44009_i2c
     /tmp/ccAYxbuo.s:5233   .text.MAX44009_i2c:000001ec $d
     /tmp/ccAYxbuo.s:5249   .text.BMP280_i2c:00000000 $t
     /tmp/ccAYxbuo.s:5257   .text.BMP280_i2c:00000000 BMP280_i2c
ARM GAS  /tmp/ccAYxbuo.s 			page 208


     /tmp/ccAYxbuo.s:5727   .text.BMP280_i2c:00000334 $d
     /tmp/ccAYxbuo.s:5748   .text.BMP280_spi:00000000 $t
     /tmp/ccAYxbuo.s:5756   .text.BMP280_spi:00000000 BMP280_spi
     /tmp/ccAYxbuo.s:6010   .text.BMP280_spi:000001bc $d
     /tmp/ccAYxbuo.s:6026   .text.fun_tool:00000000 $t
     /tmp/ccAYxbuo.s:6034   .text.fun_tool:00000000 fun_tool
     /tmp/ccAYxbuo.s:6047   .text.fun_tool:00000014 $d
     /tmp/ccAYxbuo.s:6068   .text.fun_tool:0000003e $t
     /tmp/ccAYxbuo.s:6474   .text.fun_tool:00000318 $d
     /tmp/ccAYxbuo.s:6501   .text.qtouch_mesaure:00000000 $t
     /tmp/ccAYxbuo.s:6509   .text.qtouch_mesaure:00000000 qtouch_mesaure
     /tmp/ccAYxbuo.s:6565   .text.qtouch_mesaure:0000003c $d
     /tmp/ccAYxbuo.s:6571   .text.qtouch:00000000 $t
     /tmp/ccAYxbuo.s:6579   .text.qtouch:00000000 qtouch
     /tmp/ccAYxbuo.s:6622   .text.qtouch:00000048 $d
     /tmp/ccAYxbuo.s:6629   .text.DHT_Tool:00000000 $t
     /tmp/ccAYxbuo.s:6637   .text.DHT_Tool:00000000 DHT_Tool
     /tmp/ccAYxbuo.s:6670   .text.DHT_Tool:0000002c $d
     /tmp/ccAYxbuo.s:6676   .text.SPI_Tool_Menu:00000000 $t
     /tmp/ccAYxbuo.s:6684   .text.SPI_Tool_Menu:00000000 SPI_Tool_Menu
     /tmp/ccAYxbuo.s:6708   .text.SPI_Tool_Menu:00000024 $d
     /tmp/ccAYxbuo.s:6715   .text.SPI_Tool:00000000 $t
     /tmp/ccAYxbuo.s:6723   .text.SPI_Tool:00000000 SPI_Tool
     /tmp/ccAYxbuo.s:6890   .text.SPI_Tool:00000114 $d
     /tmp/ccAYxbuo.s:6911   .text.Menu1:00000000 $t
     /tmp/ccAYxbuo.s:6919   .text.Menu1:00000000 Menu1
     /tmp/ccAYxbuo.s:6943   .text.Menu1:00000024 $d
     /tmp/ccAYxbuo.s:6950   .text.MemCard_Menu:00000000 $t
     /tmp/ccAYxbuo.s:6958   .text.MemCard_Menu:00000000 MemCard_Menu
     /tmp/ccAYxbuo.s:7031   .text.MemCard_Menu:00000082 $d
     /tmp/ccAYxbuo.s:7070   .text.MemCard_Menu:000000d0 $t
     /tmp/ccAYxbuo.s:7346   .text.MemCard_Menu:000002c0 $d
     /tmp/ccAYxbuo.s:10504  .bss.buffer.8846:00000000 buffer.8846
     /tmp/ccAYxbuo.s:7373   .text.MemCard_Menu:00000324 $t
     /tmp/ccAYxbuo.s:7736   .text.MemCard_Menu:000005e8 $d
     /tmp/ccAYxbuo.s:7775   .text.MemCard_Menu:0000067c $t
     /tmp/ccAYxbuo.s:8034   .text.MemCard_Menu:00000854 $d
     /tmp/ccAYxbuo.s:8059   .text.CopyClock:00000000 $t
     /tmp/ccAYxbuo.s:8067   .text.CopyClock:00000000 CopyClock
     /tmp/ccAYxbuo.s:8133   .text.Intro2:00000000 $t
     /tmp/ccAYxbuo.s:8141   .text.Intro2:00000000 Intro2
     /tmp/ccAYxbuo.s:8586   .text.Intro2:000002e0 $d
                            *COM*:00000008 Rtc
     /tmp/ccAYxbuo.s:8614   .text.Intro2:00000348 $t
     /tmp/ccAYxbuo.s:8791   .text.Intro2:00000490 $d
     /tmp/ccAYxbuo.s:8802   .text.CopyTime:00000000 $t
     /tmp/ccAYxbuo.s:8810   .text.CopyTime:00000000 CopyTime
     /tmp/ccAYxbuo.s:8849   .text.CopyDate:00000000 $t
     /tmp/ccAYxbuo.s:8857   .text.CopyDate:00000000 CopyDate
     /tmp/ccAYxbuo.s:8896   .text.Zegarek:00000000 $t
     /tmp/ccAYxbuo.s:8904   .text.Zegarek:00000000 Zegarek
     /tmp/ccAYxbuo.s:8963   .text.Zegarek:00000054 $d
     /tmp/ccAYxbuo.s:8971   .text.SysTick_Handler:00000000 $t
     /tmp/ccAYxbuo.s:8979   .text.SysTick_Handler:00000000 SysTick_Handler
     /tmp/ccAYxbuo.s:9057   .text.SysTick_Handler:00000054 $d
                            *COM*:00000004 Tim0
                            *COM*:00000004 Tim1
ARM GAS  /tmp/ccAYxbuo.s 			page 209


                            *COM*:00000004 trg4
                            *COM*:00000004 trg5
     /tmp/ccAYxbuo.s:9070   .text.TIM2_IRQHandler:00000000 $t
     /tmp/ccAYxbuo.s:9078   .text.TIM2_IRQHandler:00000000 TIM2_IRQHandler
     /tmp/ccAYxbuo.s:9107   .text.TIM2_IRQHandler:0000001c $d
     /tmp/ccAYxbuo.s:9110   .text.TIM3_IRQHandler:00000000 $t
     /tmp/ccAYxbuo.s:9118   .text.TIM3_IRQHandler:00000000 TIM3_IRQHandler
     /tmp/ccAYxbuo.s:9178   .text.TIM3_IRQHandler:00000044 $d
                            *COM*:00000004 Timt3
                            *COM*:00000004 delay3_us
                            *COM*:00000004 t3rg0
                            *COM*:00000004 t3rg1
                            *COM*:00000004 t3rg2
     /tmp/ccAYxbuo.s:9186   .text.EXTI0_IRQHandler:00000000 $t
     /tmp/ccAYxbuo.s:9194   .text.EXTI0_IRQHandler:00000000 EXTI0_IRQHandler
     /tmp/ccAYxbuo.s:9228   .text.EXTI0_IRQHandler:00000024 $d
     /tmp/ccAYxbuo.s:9233   .text.EXTI1_IRQHandler:00000000 $t
     /tmp/ccAYxbuo.s:9241   .text.EXTI1_IRQHandler:00000000 EXTI1_IRQHandler
     /tmp/ccAYxbuo.s:9271   .text.EXTI1_IRQHandler:00000020 $d
     /tmp/ccAYxbuo.s:9275   .text.EXTI2_IRQHandler:00000000 $t
     /tmp/ccAYxbuo.s:9283   .text.EXTI2_IRQHandler:00000000 EXTI2_IRQHandler
     /tmp/ccAYxbuo.s:9313   .text.EXTI2_IRQHandler:00000020 $d
     /tmp/ccAYxbuo.s:9317   .text.EXTI3_IRQHandler:00000000 $t
     /tmp/ccAYxbuo.s:9325   .text.EXTI3_IRQHandler:00000000 EXTI3_IRQHandler
     /tmp/ccAYxbuo.s:9355   .text.EXTI3_IRQHandler:00000020 $d
     /tmp/ccAYxbuo.s:9359   .text.EXTI4_IRQHandler:00000000 $t
     /tmp/ccAYxbuo.s:9367   .text.EXTI4_IRQHandler:00000000 EXTI4_IRQHandler
     /tmp/ccAYxbuo.s:9397   .text.EXTI4_IRQHandler:00000020 $d
     /tmp/ccAYxbuo.s:9401   .text.EXTI15_10_IRQHandler:00000000 $t
     /tmp/ccAYxbuo.s:9409   .text.EXTI15_10_IRQHandler:00000000 EXTI15_10_IRQHandler
     /tmp/ccAYxbuo.s:9435   .text.EXTI15_10_IRQHandler:0000001c $d
     /tmp/ccAYxbuo.s:9438   .text.EXTI9_5_IRQHandler:00000000 $t
     /tmp/ccAYxbuo.s:9446   .text.EXTI9_5_IRQHandler:00000000 EXTI9_5_IRQHandler
     /tmp/ccAYxbuo.s:9489   .text.EXTI9_5_IRQHandler:00000038 $d
     /tmp/ccAYxbuo.s:9493   .text.RTC_IRQHandler:00000000 $t
     /tmp/ccAYxbuo.s:9501   .text.RTC_IRQHandler:00000000 RTC_IRQHandler
     /tmp/ccAYxbuo.s:9539   .text.RTC_IRQHandler:00000028 $d
     /tmp/ccAYxbuo.s:9544   .text.RTCAlarm_IRQHandler:00000000 $t
     /tmp/ccAYxbuo.s:9552   .text.RTCAlarm_IRQHandler:00000000 RTCAlarm_IRQHandler
     /tmp/ccAYxbuo.s:9586   .text.RTCAlarm_IRQHandler:00000028 $d
     /tmp/ccAYxbuo.s:9590   .text.DMA1_Channel1_IRQHandler:00000000 $t
     /tmp/ccAYxbuo.s:9598   .text.DMA1_Channel1_IRQHandler:00000000 DMA1_Channel1_IRQHandler
     /tmp/ccAYxbuo.s:9640   .text.DMA1_Channel1_IRQHandler:0000002c $d
     /tmp/ccAYxbuo.s:9645   .text.FSMC_IRQHandler:00000000 $t
     /tmp/ccAYxbuo.s:9653   .text.FSMC_IRQHandler:00000000 FSMC_IRQHandler
     /tmp/ccAYxbuo.s:9668   .text.DACDmaInit:00000000 $t
     /tmp/ccAYxbuo.s:9676   .text.DACDmaInit:00000000 DACDmaInit
     /tmp/ccAYxbuo.s:9715   .text.DACDmaInit:00000030 $d
     /tmp/ccAYxbuo.s:9721   .text.TIM4_IRQHandler:00000000 $t
     /tmp/ccAYxbuo.s:9729   .text.TIM4_IRQHandler:00000000 TIM4_IRQHandler
     /tmp/ccAYxbuo.s:9749   .text.TIM4_IRQHandler:00000010 $d
                            *COM*:00000004 Tim4
     /tmp/ccAYxbuo.s:9753   .text.adc1_init_injected:00000000 $t
     /tmp/ccAYxbuo.s:9761   .text.adc1_init_injected:00000000 adc1_init_injected
     /tmp/ccAYxbuo.s:9829   .text.adc1_init_injected:00000050 $d
     /tmp/ccAYxbuo.s:9837   .text.adc_get_internals:00000000 $t
     /tmp/ccAYxbuo.s:9845   .text.adc_get_internals:00000000 adc_get_internals
ARM GAS  /tmp/ccAYxbuo.s 			page 210


     /tmp/ccAYxbuo.s:9923   .text.adc_get_internals:00000054 $d
     /tmp/ccAYxbuo.s:9930   .text.adc_get_injected:00000000 $t
     /tmp/ccAYxbuo.s:9938   .text.adc_get_injected:00000000 adc_get_injected
     /tmp/ccAYxbuo.s:10005  .text.adc_get_injected:00000048 $d
                .rodata.jdrs.9057:00000000 jdrs.9072
     /tmp/ccAYxbuo.s:10011  .text.NVIC_conf:00000000 $t
     /tmp/ccAYxbuo.s:10019  .text.NVIC_conf:00000000 NVIC_conf
     /tmp/ccAYxbuo.s:10056  .text.NVIC_conf:00000028 $d
     /tmp/ccAYxbuo.s:10062  .text.SetDate:00000000 $t
     /tmp/ccAYxbuo.s:10070  .text.SetDate:00000000 SetDate
     /tmp/ccAYxbuo.s:10278  .text.SetDate:0000019c $d
     /tmp/ccAYxbuo.s:10290  .text.flash_latency:00000000 $t
     /tmp/ccAYxbuo.s:10298  .text.flash_latency:00000000 flash_latency
     /tmp/ccAYxbuo.s:10329  .text.flash_latency:00000024 $d
     /tmp/ccAYxbuo.s:11055  .rodata.jdrs.9057:00000000 jdrs.9057
     /tmp/ccAYxbuo.s:10648  .data.p_TSpm:00000000 p_TSpm
     /tmp/ccAYxbuo.s:10429  .bss.FLAG:00000000 FLAG
     /tmp/ccAYxbuo.s:10947  .rodata._ytab:00000000 _ytab
                            *COM*:00000004 Time6
                            *COM*:00000004 Tim6
                            *COM*:00000004 Tim2
     /tmp/ccAYxbuo.s:10359  .rodata:00000000 $d
     /tmp/ccAYxbuo.s:10411  .bss.Cah.8246:00000000 $d
     /tmp/ccAYxbuo.s:10415  .bss.Cah.8246:00000000 Cah.8246
     /tmp/ccAYxbuo.s:10418  .bss.Cwh.8247:00000000 $d
     /tmp/ccAYxbuo.s:10422  .bss.Cwh.8247:00000000 Cwh.8247
     /tmp/ccAYxbuo.s:10425  .bss.FLAG:00000000 $d
     /tmp/ccAYxbuo.s:10432  .bss.Rwa.8248:00000000 $d
     /tmp/ccAYxbuo.s:10436  .bss.Rwa.8248:00000000 Rwa.8248
     /tmp/ccAYxbuo.s:10439  .bss.SX1278_1.8441:00000000 $d
     /tmp/ccAYxbuo.s:10443  .bss.SX1278_1.8441:00000000 SX1278_1.8441
     /tmp/ccAYxbuo.s:10446  .bss.SX1278_1.8467:00000000 $d
     /tmp/ccAYxbuo.s:10450  .bss.SX1278_1.8467:00000000 SX1278_1.8467
     /tmp/ccAYxbuo.s:10453  .bss.SX1278_1.8492:00000000 $d
     /tmp/ccAYxbuo.s:10457  .bss.SX1278_1.8492:00000000 SX1278_1.8492
     /tmp/ccAYxbuo.s:10460  .bss.SX1278_hw1.8440:00000000 $d
     /tmp/ccAYxbuo.s:10464  .bss.SX1278_hw1.8440:00000000 SX1278_hw1.8440
     /tmp/ccAYxbuo.s:10467  .bss.SX1278_hw1.8466:00000000 $d
     /tmp/ccAYxbuo.s:10471  .bss.SX1278_hw1.8466:00000000 SX1278_hw1.8466
     /tmp/ccAYxbuo.s:10474  .bss.SX1278_hw1.8491:00000000 $d
     /tmp/ccAYxbuo.s:10478  .bss.SX1278_hw1.8491:00000000 SX1278_hw1.8491
     /tmp/ccAYxbuo.s:10481  .bss.TSpm:00000000 $d
     /tmp/ccAYxbuo.s:10484  .bss.TSpm:00000000 TSpm
     /tmp/ccAYxbuo.s:10487  .bss.buf_rx.8470:00000000 $d
     /tmp/ccAYxbuo.s:10491  .bss.buf_rx.8470:00000000 buf_rx.8470
     /tmp/ccAYxbuo.s:10494  .bss.buf_tx.8494:00000000 $d
     /tmp/ccAYxbuo.s:10498  .bss.buf_tx.8494:00000000 buf_tx.8494
     /tmp/ccAYxbuo.s:10501  .bss.buffer.8846:00000000 $d
     /tmp/ccAYxbuo.s:10507  .bss.cah.8244:00000000 $d
     /tmp/ccAYxbuo.s:10511  .bss.cah.8244:00000000 cah.8244
     /tmp/ccAYxbuo.s:10514  .bss.cnt.8240:00000000 $d
     /tmp/ccAYxbuo.s:10518  .bss.cnt.8240:00000000 cnt.8240
     /tmp/ccAYxbuo.s:10521  .bss.cnt2.8249:00000000 $d
     /tmp/ccAYxbuo.s:10525  .bss.cnt2.8249:00000000 cnt2.8249
     /tmp/ccAYxbuo.s:10531  .bss.coile.8264:00000000 coile.8264
     /tmp/ccAYxbuo.s:10532  .bss.coile.8264:00000000 $d
     /tmp/ccAYxbuo.s:10534  .bss.cur.8256:00000000 $d
ARM GAS  /tmp/ccAYxbuo.s 			page 211


     /tmp/ccAYxbuo.s:10538  .bss.cur.8256:00000000 cur.8256
     /tmp/ccAYxbuo.s:10541  .bss.cwh.8245:00000000 $d
     /tmp/ccAYxbuo.s:10545  .bss.cwh.8245:00000000 cwh.8245
     /tmp/ccAYxbuo.s:10548  .bss.datetime.8669:00000000 $d
     /tmp/ccAYxbuo.s:10552  .bss.datetime.8669:00000000 datetime.8669
     /tmp/ccAYxbuo.s:10555  .bss.dcur.8257:00000000 $d
     /tmp/ccAYxbuo.s:10559  .bss.dcur.8257:00000000 dcur.8257
     /tmp/ccAYxbuo.s:10565  .bss.dinit.8847:00000000 dinit.8847
     /tmp/ccAYxbuo.s:10566  .bss.dinit.8847:00000000 $d
     /tmp/ccAYxbuo.s:10568  .bss.dma_buf:00000000 $d
     /tmp/ccAYxbuo.s:10572  .bss.dma_buf:00000000 dma_buf
     /tmp/ccAYxbuo.s:10575  .bss.dma_buf.8757:00000000 $d
     /tmp/ccAYxbuo.s:10579  .bss.dma_buf.8757:00000000 dma_buf.8757
     /tmp/ccAYxbuo.s:10582  .bss.pow.8252:00000000 $d
     /tmp/ccAYxbuo.s:10586  .bss.pow.8252:00000000 pow.8252
     /tmp/ccAYxbuo.s:10589  .bss.str_num.8495:00000000 $d
     /tmp/ccAYxbuo.s:10593  .bss.str_num.8495:00000000 str_num.8495
     /tmp/ccAYxbuo.s:10596  .bss.val.8742:00000000 $d
     /tmp/ccAYxbuo.s:10600  .bss.val.8742:00000000 val.8742
     /tmp/ccAYxbuo.s:10603  .bss.vbus.8258:00000000 $d
     /tmp/ccAYxbuo.s:10607  .bss.vbus.8258:00000000 vbus.8258
     /tmp/ccAYxbuo.s:10610  .bss.vr1.8241:00000000 $d
     /tmp/ccAYxbuo.s:10614  .bss.vr1.8241:00000000 vr1.8241
     /tmp/ccAYxbuo.s:10617  .bss.vr3.8250:00000000 $d
     /tmp/ccAYxbuo.s:10621  .bss.vr3.8250:00000000 vr3.8250
     /tmp/ccAYxbuo.s:10624  .bss.vr4.8251:00000000 $d
     /tmp/ccAYxbuo.s:10628  .bss.vr4.8251:00000000 vr4.8251
     /tmp/ccAYxbuo.s:10631  .bss.yb.8738:00000000 $d
     /tmp/ccAYxbuo.s:10635  .bss.yb.8738:00000000 yb.8738
     /tmp/ccAYxbuo.s:10638  .bss.yn.8739:00000000 $d
     /tmp/ccAYxbuo.s:10642  .bss.yn.8739:00000000 yn.8739
     /tmp/ccAYxbuo.s:10645  .data.p_TSpm:00000000 $d
     /tmp/ccAYxbuo.s:10651  .data.tbuf.8744:00000000 $d
     /tmp/ccAYxbuo.s:10655  .data.tbuf.8744:00000000 tbuf.8744
     /tmp/ccAYxbuo.s:10658  .rodata.BMP280_i2c.str1.4:00000000 $d
     /tmp/ccAYxbuo.s:10675  .rodata.BMP280_spi.str1.4:00000000 $d
     /tmp/ccAYxbuo.s:10679  .rodata.Intro2.str1.4:00000000 $d
     /tmp/ccAYxbuo.s:10691  .rodata.LoRaRX.str1.4:00000000 $d
     /tmp/ccAYxbuo.s:10695  .rodata.LoRaRX1.str1.4:00000000 $d
     /tmp/ccAYxbuo.s:10733  .rodata.MAX44009_i2c.str1.4:00000000 $d
     /tmp/ccAYxbuo.s:10737  .rodata.MemCard_Menu.str1.4:00000000 $d
     /tmp/ccAYxbuo.s:10861  .rodata.Menu1.str1.4:00000000 $d
     /tmp/ccAYxbuo.s:10877  .rodata.SPI_Tool.str1.4:00000000 $d
     /tmp/ccAYxbuo.s:10895  .rodata.SPI_Tool_Menu.str1.4:00000000 $d
     /tmp/ccAYxbuo.s:10911  .rodata.SetDate.str1.4:00000000 $d
     /tmp/ccAYxbuo.s:10932  .rodata.TSL2561_i2c.str1.4:00000000 $d
     /tmp/ccAYxbuo.s:10936  .rodata.Zegarek.str1.4:00000000 $d
     /tmp/ccAYxbuo.s:10943  .rodata._ytab:00000000 $d
     /tmp/ccAYxbuo.s:10973  .rodata.fun_tool.str1.4:00000000 $d
     /tmp/ccAYxbuo.s:11021  .rodata.head.str1.4:00000000 $d
     /tmp/ccAYxbuo.s:11028  .rodata.ili9486.str1.4:00000000 $d
     /tmp/ccAYxbuo.s:11051  .rodata.jdrs.9057:00000000 $d
     /tmp/ccAYxbuo.s:11061  .rodata.lexmark_lcd.str1.4:00000000 $d
     /tmp/ccAYxbuo.s:11074  .rodata.lion_updown.str1.4:00000000 $d
     /tmp/ccAYxbuo.s:11132  .rodata.liontrend.str1.4:00000000 $d
     /tmp/ccAYxbuo.s:11142  .rodata.oblicz.str1.4:00000000 $d
     /tmp/ccAYxbuo.s:11149  .rodata.qtouch.str1.4:00000000 $d
ARM GAS  /tmp/ccAYxbuo.s 			page 212


     /tmp/ccAYxbuo.s:11153  .rodata.ws2812led.str1.4:00000000 $d

UNDEFINED SYMBOLS
tr_pen_color
UaPutK
uint2uart
UaPutS
sint2uart
BkpRegInit
uint2str
UART1_putc
i2c1r_init
i2c1_write
i2c1_read
UART_getChar
UART2_putc
p_Fifo1
tr_locate
UART_getDec
UART_getStr
unt2uart
int2uart
int2uarz
UaPutC
RtcInit
i2c1_init
ssd1306_init
num2uart
int2str
oled_str16
oled_refresh_gram
oled_hw
oled_num24
UART_getHex
hex2uart
SPI1_init_
DHT_Init
DHT_read
I2C2_init
i2c2_scan
SX1278_begin
SX1278_LoRaEntryRx
SX1278_LoRaRx
SX1278_SPIRead
UART_getNum
SX1278_LoRaRxPacket
SX1278_read
unt2str
strlen
stpcpy
SX1278_LoRaEntryTx
SX1278_LoRaTxPacketStart
SX1278_sleep
UC1608_Init
UC1608_Clr
UC1608_str
UC1608_Refresh
ARM GAS  /tmp/ccAYxbuo.s 			page 213


i2c2_write
i2c2_read
spi1_rw
mmc_read_sect
crc16_spi2
EraseFlashPage
TFT_Clear
rtc_SetTime
SPI2_init
spi2_rw
TFT_Init
crc16_spi2_init
CardType
mmc_init
mmc_read_config
mmc_write_sect
TFT_dy
rtc_GetTime
TFT_Fill
TFT_txt
TFT_SetWindow
ColCon
str2int
